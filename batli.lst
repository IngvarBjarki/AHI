GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                   01/19/17 02:05:06 Page 1
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


   1  * FinalA.gms
   2  *
   4  option iterlim=999999999;     // avoid limit on iterations
   5  option reslim=300;            // timelimit for solver in sec.
   6  option optcr=0.0;             // gap tolerance
   7  option solprint=ON;           // include solution print in .lst file
   8  option limrow=100;            // limit number of rows in .lst file
   9  option limcol=100;            // limit number of columns in .lst file
  10  //--------------------------------------------------------------------
  11   
  12  SET timber 'raw material timber bought by Metsa Oy'
  13  /   Mat, Kut, Kot, Mak, Kuk, Kok   /;
  14  SET products 'Products made by Metsa Oy'
  15  /   Mas, Kus, Kos, Kuv, Kov, Hsel, Lsel, Pap    /;
  16  SET destinations 'destinations where Metsa sells products'
  17  /   EU, IE, PA, KI  /;
  18  SET p1(products) 'normal products p1 produced'
  19  / Mas, Kus, Kos, Kuv, Kov  /;
  20  SET p2(products) 'products p2 possible to make from leftovers'
  21  /   Hsel, Lsel, Pap     /;
  22  SET p3(products) 'Pulp products p3 which can make paper'
  23  /   HSEL, LSEL /;
  24  SET n 'number of barges n bought'
  25  /   1*107  /;
  26  SET l 'number of barges l sold'
  27  / 1*23 /;
  28  SET v 'Set for profit calculations'
  29  /   ATO, DPC, SP, FC, PROFIT /;
  30  SET t 'years'
  31  / 1, 2, 3 /;
  32   
  33   
  34      SET SAWm(products)
  35          / MAS, KUS, KOS /;
  36      SET PLYm(products)
  37          / KUV, KOV /;
  38      SET SPULPm(products)
  39          /HSEL/;
  40      SET HPULPm(products)
  41          /LSEL/;
  42      SET PAPm(Products)
  43          /PAP/;
  44   
  45  SET m 'production lines'
  46  /   SAW, PLY, SPULP, HPULP, PAPM /;
  47   
  48  ALIAS(timber, i);
  49  ALIAS(products, j);
  50  ALIAS(destinations, k);
  51   
  52  PARAMETERS
  53   
  54   
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                   01/19/17 02:05:06 Page 2
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


  55  c(products) 'the cost of producing each product, mesured in erous/1000m^3'
  56      /   Mas   550
  57          Kus   500
  58          Kos   450
  59          Kuv   2500
  60          Kov   2600
  61          Hsel  820
  62          Lsel  800
  63          Pap   1700  /
  64   
  65   
  66  alpha(timber) 'alpha cost parameters by timber assortments'
  67      /   MAT     190
  68          KUT     150
  69          KOT     120
  70          MAK     180
  71          KUK     150
  72          KOK     150 /
  73   
  74  beta(timber) 'Beta cost parameter by timber assortments'
  75      /   MAT     1.0
  76          KUT     0.5
  77          KOT     3.0
  78          MAK     0.2
  79          KUK     0.3
  80          KOK     0.2 /
  81   
  82  CAP0(m) 'Starting capacity'
  83      /   SAW     100000
  84          PLY     90000
  85          SPULP   100000
  86          HPULP   150000
  87          PAPM    80000  /
  88   
  89  demand_growth(j) 'demand growth for product j'
  90  /   MAS    1.010
  91       KUS    1.008
  92       KOS    1.015
  93       KUV    1.015
  94       KOV    1.020
  95       HSEL  1.025
  96       LSEL   1.030
  97       PAP     1.035  /
  98   
  99   
 100  FCOST(m) 'Fixed cost'
 101      /   SAW     100
 102          PLY     300
 103          SPULP   500
 104          HPULP   500
 105          PAPM    700 /
 106   
 107  MaxCap(m)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                   01/19/17 02:05:06 Page 3
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


 108     /SAW     150000
 109      PLY     135000
 110      SPULP   200000
 111      HPULP   300000
 112      PAPM    160000 /;
 113   
 114   
 115   
 116   
 117   
 118   
 119  TABLE table2(j,i)'Cubic-meters of material i used in cubic-meter of product j'
 120                  MAT     KUT     KOT     MAK     KUK     KOK
 121          MAS     2.0     0.0     0.0     -0.8    0.0     0.0
 122          KUS     0.0     2.0     0.0     0.0     -0.8    0.0
 123          KOS     0.0     0.0     2.0     0.0     0.0     -0.8
 124          KUV     0.0     2.8     0.0     0.0     -1.6    0.0
 125          KOV     0.0     0.0     2.8     0.0     0.0     -1.6
 126          HSEL    0.0     0.0     0.0     4.8     0.0     0.0
 127          LSEL    0.0     0.0     0.0     0.0     0.0     4.2
 128          PAP     0.0     0.0     0.0     0.0     1.0     0.0      ;
 129   
 130   
 131  *TABLE table3(p2, p3) 'timber p3 needed for production of product p2'
 132  *                     Mak    Kuk     Kok   Hsel    Lsel
 133  *        Hsel      4.8      0.0      0.0      0.0      0.0
 134  *        Lsel       0.0      0.0      4.2      0.0      0.0
 135  *        Pap       0.0      1.0       0.0     0.2      0.2;
 136   
 137  TABLE Prodinm(m,j) 'What products j are in what machines m'
 138          MAS     KUS     KOS     KUV     KOV     HSEL    LSEL    PAP
 139  SAW       1       1       1       0       0        0       0      0
 140  PLY       0       0       0       1       1        0       0      0
 141  SPULP     0       0       0       0       0        1       0      0
 142  HPULP     0       0       0       0       0        0       1      0
 143  PAPM      0       0       0       0       0        0       0      1;
 144   
 145   
 146   
 147   
 148  TABLE GAMMA(j,k) 'Gamma coefficent for selling product j in region k'
 149                    EU      IE      PA      KI
 150           MAS     1600    1300    1400    1500
 151           KUS     1400    1200    1300    1400
 152           KOS     1300    1400    1500    1600
 153           KUV     4400    3800    3600    3500
 154           KOV     4300    4100    3900    3800
 155           HSEL    2300    2500    2300    2600
 156           LSEL    2500    2800    2300    2500
 157           PAP     4500    4700    4300    4800 ;
 158   
 159   
 160  TABLE DELTA(j,k) 'Delta coefficient for selling product j in region k'
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                   01/19/17 02:05:06 Page 4
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


 161                   EU      IE      PA      KI
 162           MAS     4       10      12      15
 163           KUS     4       10      12      15
 164           KOS     14      20      22      25
 165           KUV     4       10      12      15
 166           KOV     4       10      12      15
 167           HSEL    2       4       5       6
 168           LSEL    3       2       5       7
 169           PAP     4       10      12      15 ;
 170   
 171   
 172   
 173   
 174   
 175  TABLE q(l,j) 'Options of amount l to be sold of product j'
 176     MAS     KOS     KUV     KOV    HSEL   LSEL   PAP
 177  1  0       0       0       0      0      0      0
 178  2  10000   10000   10000   10000  10000  10000  10000
 179  3  20000   20000   20000   20000  20000  20000  20000
 180  4  30000   30000   30000   30000  30000  30000  30000
 181  5  40000   40000   40000   40000  40000  40000  40000
 182  6  50000   50000   50000   50000  50000  50000  50000
 183  7  60000   60000   60000   60000  60000  60000  60000
 184  8  70000   70000   70000   70000  70000  70000  70000
 185  9  80000   80000   80000   80000  80000  80000  80000
 186  10 90000   90000   90000   90000  90000  90000  90000
 187  11 100000  100000  100000  100000 100000 100000 100000
 188  12 110000  110000  110000  110000 110000 110000 110000
 189  13 120000  120000  120000  120000 120000 120000 120000
 190  14 130000  130000  130000  130000 130000 130000 130000
 191  15 140000  140000  140000  140000 140000 140000 140000
 192  16 150000  150000  150000  150000 150000 150000 150000
 193  17 160000  160000  160000  160000 160000 160000 160000
 194  18 170000  170000  170000  170000 170000 170000 170000
 195  19 180000  180000  180000  180000 180000 180000 180000
 196  20 190000  190000  190000  190000 190000 190000 190000
 197  21 200000  200000  200000  200000 200000 200000 200000
 198  22 210000  210000  210000  210000 210000 210000 210000
 199  23 220000  220000  220000  220000 220000 220000 220000 ;
 200   
 201   
 202   
 203  TABLE h(n,i) 'Options of amount n to be bought of material i'
 204      Mat     KUT     KOT     MAK     KUK     KOK
 205  1   0       0       0       0       0       0
 206  2   10000   10000   10000   10000   10000   10000
 207  3   20000   20000   20000   20000   20000   20000
 208  4   30000   30000   30000   30000   30000   30000
 209  5   40000   40000   40000   40000   40000   40000
 210  6   50000   50000   50000   50000   50000   50000
 211  7   60000   60000   60000   60000   60000   60000
 212  8   70000   70000   70000   70000   70000   70000
 213  9   80000   80000   80000   80000   80000   80000
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                   01/19/17 02:05:06 Page 5
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


 214  10  90000   90000   90000   90000   90000   90000
 215  11  100000  100000  100000  100000  100000  100000
 216  12  110000  110000  110000  110000  110000  110000
 217  13  120000  120000  120000  120000  120000  120000
 218  14  130000  130000  130000  130000  130000  130000
 219  15  140000  140000  140000  140000  140000  140000
 220  16  150000  150000  150000  150000  150000  150000
 221  17  160000  160000  160000  160000  160000  160000
 222  18  170000  170000  170000  170000  170000  170000
 223  19  180000  180000  180000  180000  180000  180000
 224  20  190000  190000  190000  190000  190000  190000
 225  21  200000  200000  200000  200000  200000  200000
 226  22  210000  210000  210000  210000  210000  210000
 227  23  220000  220000  220000  220000  220000  220000
 228  24  230000  230000  230000  230000  230000  230000
 229  25  240000  240000  240000  240000  240000  240000
 230  26  250000  250000  250000  250000  250000  250000
 231  27  260000  260000  260000  260000  260000  260000
 232  28  270000  270000  270000  270000  270000  270000
 233  29  280000  280000  280000  280000  280000  280000
 234  30  290000  290000  290000  290000  290000  290000
 235  31  300000  300000  300000  300000  300000  300000
 236  32  310000  310000  310000  310000  310000  310000
 237  33  320000  320000  320000  320000  320000  320000
 238  34  330000  330000  330000  330000  330000  330000
 239  35  340000  340000  340000  340000  340000  340000
 240  36  350000  350000  350000  350000  350000  350000
 241  37  360000  360000  360000  360000  360000  360000
 242  38  370000  370000  370000  370000  370000  370000
 243  39  380000  380000  380000  380000  380000  380000
 244  40  390000  390000  390000  390000  390000  390000
 245  41  400000  400000  400000  400000  400000  400000
 246  42  410000  410000  410000  410000  410000  410000
 247  43  420000  420000  420000  420000  420000  420000
 248  44  430000  430000  430000  430000  430000  430000
 249  45  440000  440000  440000  440000  440000  440000
 250  46  450000  450000  450000  450000  450000  450000
 251  47  460000  460000  460000  460000  460000  460000
 252  48  470000  470000  470000  470000  470000  470000
 253  49  480000  480000  480000  480000  480000  480000
 254  50  490000  490000  490000  490000  490000  490000
 255  51  500000  500000  500000  500000  500000  500000
 256  52  510000  510000  510000  510000  510000  510000
 257  53  520000  520000  520000  520000  520000  520000
 258  54  530000  530000  530000  530000  530000  530000
 259  55  540000  540000  540000  540000  540000  540000
 260  56  550000  550000  550000  550000  550000  550000
 261  57  560000  560000  560000  560000  560000  560000
 262  58  570000  570000  570000  570000  570000  570000
 263  59  580000  580000  580000  580000  580000  580000
 264  60  590000  590000  590000  590000  590000  590000
 265  61  600000  600000  600000  600000  600000  600000
 266  62  610000  610000  610000  610000  610000  610000
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                   01/19/17 02:05:06 Page 6
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


 267  63  620000  620000  620000  620000  620000  620000
 268  64  630000  630000  630000  630000  630000  630000
 269  65  640000  640000  640000  640000  640000  640000
 270  66  650000  650000  650000  650000  650000  650000
 271  67  660000  660000  660000  660000  660000  660000
 272  68  670000  670000  670000  670000  670000  670000
 273  69  680000  680000  680000  680000  680000  680000
 274  70  690000  690000  690000  690000  690000  690000
 275  71  700000  700000  700000  700000  700000  700000
 276  72  710000  710000  710000  710000  710000  710000
 277  73  720000  720000  720000  720000  720000  720000
 278  74  730000  730000  730000  730000  730000  730000
 279  75  740000  740000  740000  740000  740000  740000
 280  76  750000  750000  750000  750000  750000  750000
 281  77  760000  760000  760000  760000  760000  760000
 282  78  770000  770000  770000  770000  770000  770000
 283  79  780000  780000  780000  780000  780000  780000
 284  80  790000  790000  790000  790000  790000  790000
 285  81  800000  800000  800000  800000  800000  800000
 286  82  810000  810000  810000  810000  810000  810000
 287  83  820000  820000  820000  820000  820000  820000
 288  84  830000  830000  830000  830000  830000  830000
 289  85  840000  840000  840000  840000  840000  840000
 290  86  850000  850000  850000  850000  850000  850000
 291  87  860000  860000  860000  860000  860000  860000
 292  88  870000  870000  870000  870000  870000  870000
 293  89  880000  880000  880000  880000  880000  880000
 294  90  890000  890000  890000  890000  890000  890000
 295  91  900000  900000  900000  900000  900000  900000
 296  92  910000  910000  910000  910000  910000  910000
 297  93  920000  920000  920000  920000  920000  920000
 298  94  930000  930000  930000  930000  930000  930000
 299  95  940000  940000  940000  940000  940000  940000
 300  96  950000  950000  950000  950000  950000  950000
 301  97  960000  960000  960000  960000  960000  960000
 302  98  970000  970000  970000  970000  970000  970000
 303  99  980000  980000  980000  980000  980000  980000
 304  100 990000  990000  990000  990000  990000  990000
 305  101 1000000 1000000 1000000 1000000 1000000 1000000
 306  102 1010000 1010000 1010000 1010000 1010000 1010000
 307  103 1020000 1020000 1020000 1020000 1020000 1020000
 308  104 1030000 1030000 1030000 1030000 1030000 1030000
 309  105 1040000 1040000 1040000 1040000 1040000 1040000
 310  106 1050000 1050000 1050000 1050000 1050000 1050000
 311  107 1060000 1060000 1060000 1060000 1060000 1060000 ;
 312   
 313   
 314   
 315  SCALAR fuel_price 'fuel wood suitable for producing energy at value of 40'
 316           /40/;
 317  SCALAR PAP_Pro  'Proportion of HSEL and LSEL needed for PAP'
 318           /0.2/;
 319  SCALAR fuel_amount 'the amount of fuel we gain by production timbers in p1'
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                   01/19/17 02:05:06 Page 7
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


 320           /-0.2/
 321   
 322   
 323  VARIABLES
 324  z 'the objective'
 325  *h(i) 'Cubic meters of timber i' // getum breytt í parameter og margfaldað með r(i,n) fyrir balance
 326  y(j,t) 'Cubic meters produced of product j'//total timber i for used in product j -- make constraint to find outu how many products..
 327  *q(j, k) 'Cubic meters of product j sold to destination k' // getum breytt í parameter og margfaldað með u
 328  //s(i)'Cubic meters of timber i in stock' // should be integer since all member of the constraint are integer
 329  s(i,t) 'amount of timber i used to make products'
 330  r(n, i,t) '1 if we buy n boats of timber i, 0 otherwise'
 331  u(l,j,k,t) '1 if we use n boats for product j shiping to region k, 0 otherwise'
 332  b(i,t) 'amount of timber i bought'
 333  fxC(t) 'Fixed cost of machine m in year t'
 334  Pr(t) 'Net profit in each year t'
 335  Cap(m,t) 'Capacity of machine m in year t'
 336  ;
 337   
 338  // y/table --> product made
 339  INTEGER VARIABLES y;
 340  BINARY VARIABLES u, r;
 341  POSITIVE VARIABLES s, b;
 342   
 343  y.up(j,t) = 1060000;
 344   
 345   
 346  EQUATIONS
 347   
 348  obj  'Maximum gross profit'
 349   
 350   
 351   
 352  //=============================================ENOUGH TIMBER
 353  timber_used(i,t) ' amount of  timber i used to make  product j in year t'
 354  prod_starved(i,t)  'ensure that production can not be starved in each year'
 355  //USAGE(i)     'We have to buy material (or produce as byproducts) to be able to produce products'
 356  Sold_Prod(j,t)   'we cant sell more than we produce in each year'
 357  timber_bought(i,t) 'amount of timber i bought in each year'
 358   
 359  //============================== ONLY BUY ONE NUMBER OF BARGERS FOR EACH TIMBER i
 360  Barges_buy(i,t)  'ensure we only pick one value n for barges for each timber i'
 361  Barges_sell(j, k,t)  'ensure we only pick one value  n for barges for each product to each city'
 362   
 363  //=====================================CAPACITYS FOR PRODUCTION
 364   
 365  Capacity2(m,t) 'Make sure that the capacity does not go down'
 366  MaxCapacity(m,t) 'Make sure we dont go over the maximum capacity'
 367  CapStart(m,t)   'Make sure the starting capacity is right'
 368   
 369  // =====================  PROPORTION OF HSEL AND LSEL NEEDED FOR PAP
 370  PAP_HSEL(t)     'Proportion needed of HSEL for PAP'
 371  PAP_LSEL(t)     'Proportion needed of LSEL for PAP'
 372  PULP_Bal(p3,t)     'Cant produce paper without pulp'
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                   01/19/17 02:05:06 Page 8
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


 373   
 374  // =========ADD FIXED COST FOR INCREASED CAPACITY========== //
 375  *FixedCost(t) 'Fixed cost of machine m in year t'
 376   
 377  // =====PROFIT(OLD OBJECTIVE FUNCTION)=======//
 378  PROFIT(t) 'Profit is what we gain minus what we spend'
 379   
 380  Capacity3(m,t) 'safdasd'
 381   
 382   
 383  ;
 384   
 385   
 386   
 387  obj ..
 388   
 389          Z =e= sum(t, power(0.95, ord(t)-1)*Pr(t));
 390   
 391  //==========================ENSURE WE HAVE ENOUGH TIMBER==================================
 392  timber_used(i,t) ..  sum(j, y(j,t)*table2(j, i)) =e= s(i,t);
 393  prod_starved(i,t) .. sum(n, r(n, i,t)*h(n, i)) =g= s(i,t);
 394  //Sold_Prod(j,t) .. sum((l,k), q(l,j)*u(l,j,k,t)) =l= y(j,t);
 395  Sold_Prod(j,t) .. sum((l,k), q(l,j)*u(l,j,k,t)) =l= y(j,t);
 396  //USAGE(i) .. sum(j, y(j) * table2(j,i)) =l= sum(n, h(n,i) * r(n,i));
 397  timber_bought(i,t) .. b(i,t) =e= sum(n, r(n, i,t)*h(n, i));
 398   
 399  //=================== ONLY BUY ONE NUMBER OF BARGERS FOR EACH TIMBER i ========================
 400  Barges_buy(i,t) ..  sum( n,r(n,i,t)) =E= 1;
 401  Barges_sell(j, k,t) .. sum(l, u(l, j, k,t)) =E= 1;
 402   
 403   
 404  //=============================== CAPACITYS FOR PRODUCTION =============================
 405   
 406  Capacity2(m,t).. Cap(m,t) =g= sum(j, y(j,t)*Prodinm(m,j));
 407  Capacity3(m,t).. Cap(m,t) =g=  Cap(m,t-1);
 408   
 409   
 410  MaxCapacity(m,t).. Cap(m,t) =l= MaxCap(m);
 411  CapStart(m,t).. Cap(m,"1") =E= Cap0(m);
 412   
 413   
 414  // =====================  PROPORTION OF HSEL AND LSEL NEEDED FOR PAP ===========
 415  PAP_HSEL(t)..  PAP_Pro*y("PAP",t) =l= y("HSEL",t);
 416  PAP_LSEL(t)..  PAP_Pro*y("PAP",t) =l= y("LSEL",t);
 417  PULP_Bal(p3,t) .. sum((l,k), u(l,p3,k,t)*q(l,p3)) + PAP_Pro*y("PAP",t) =l= y(P3,t);
 418   
 419  // =========ADD FIXED COST FOR INCREASED CAPACITY========== //
 420   
 421   
 422   
 423  // =====PROFIT(OLD OBJECTIVE FUNCTION)=======//
 424  PROFIT(t).. Pr(t) =e=  (sum((k,j), (GAMMA(j,k)/1000) * sum(l, q(l,j)*u(l,j,k,t)))- sum((k,j), (DELTA(j,k)/(1000*1000)) * sum(l, q(l,j)*q(l,j) * u(l,j,k,t))/power(demand_growth(j),(ord(t)-1))))   //Amount sold times sellingprice
 425   
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                   01/19/17 02:05:06 Page 9
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


 426                      - sum(i, ALPHA(i)/1000 * sum(n, h(n,i)*r(n,i,t))) - sum(i, BETA(i)/(1000*1000) * sum(n, h(n,i)*h(n,i) * r(n,i,t)))                    //Amount bought times buying price
 427                      + sum(p1, y(p1,t)*fuel_amount*(-fuel_price/1000))                                                               //Amount of fuel produced times selling price of fuel
 428                      + sum(i, (b(i,t)-s(i,t))*ALPHA(i)/1000)                                                                                        //Amount of extra material times its selling price
 429   
 430                      - sum(j, y(j,t)*c(j)/1000)
 431                      - sum(m, ( Cap(m,t+1)+ sum(j, y(j,"3")*Prodinm(m,j))$(ord(t)=3)  )   *FCost(m)/1000)                                                                                      //Amount of produced products times the production cost
 432                      ;
 433   
 434   
 435   
 436  MODEL final /all/;
 437  Solve final using mip maxmizing Z;
 438  DISPLAY z.l, u.l, r.l, y.l, s.l, b.l, Cap.l;
 439   
 440   


COMPILATION TIME     =        0.003 SECONDS      3 MB  24.8.1 r59919 DEX-DEG
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/19/17 02:05:06 Page 10
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 437


---- obj  =E=  Maximum gross profit

obj..  z - Pr(1) - 0.95*Pr(2) - 0.9025*Pr(3) =E= 0 ; (LHS = 0)
     

---- timber_used  =E=   amount of  timber i used to make  product j in year t

timber_used(Mat,1)..  2*y(Mas,1) - s(Mat,1) =E= 0 ; (LHS = 0)
     
timber_used(Mat,2)..  2*y(Mas,2) - s(Mat,2) =E= 0 ; (LHS = 0)
     
timber_used(Mat,3)..  2*y(Mas,3) - s(Mat,3) =E= 0 ; (LHS = 0)
     
timber_used(Kut,1)..  2*y(Kus,1) + 2.8*y(Kuv,1) - s(Kut,1) =E= 0 ; (LHS = 0)
     
timber_used(Kut,2)..  2*y(Kus,2) + 2.8*y(Kuv,2) - s(Kut,2) =E= 0 ; (LHS = 0)
     
timber_used(Kut,3)..  2*y(Kus,3) + 2.8*y(Kuv,3) - s(Kut,3) =E= 0 ; (LHS = 0)
     
timber_used(Kot,1)..  2*y(Kos,1) + 2.8*y(Kov,1) - s(Kot,1) =E= 0 ; (LHS = 0)
     
timber_used(Kot,2)..  2*y(Kos,2) + 2.8*y(Kov,2) - s(Kot,2) =E= 0 ; (LHS = 0)
     
timber_used(Kot,3)..  2*y(Kos,3) + 2.8*y(Kov,3) - s(Kot,3) =E= 0 ; (LHS = 0)
     
timber_used(Mak,1)..  - 0.8*y(Mas,1) + 4.8*y(Hsel,1) - s(Mak,1) =E= 0 ; (LHS = 0)
     
timber_used(Mak,2)..  - 0.8*y(Mas,2) + 4.8*y(Hsel,2) - s(Mak,2) =E= 0 ; (LHS = 0)
     
timber_used(Mak,3)..  - 0.8*y(Mas,3) + 4.8*y(Hsel,3) - s(Mak,3) =E= 0 ; (LHS = 0)
     
timber_used(Kuk,1)..  - 0.8*y(Kus,1) - 1.6*y(Kuv,1) + y(Pap,1) - s(Kuk,1) =E= 0 ; (LHS = 0)
     
timber_used(Kuk,2)..  - 0.8*y(Kus,2) - 1.6*y(Kuv,2) + y(Pap,2) - s(Kuk,2) =E= 0 ; (LHS = 0)
     
timber_used(Kuk,3)..  - 0.8*y(Kus,3) - 1.6*y(Kuv,3) + y(Pap,3) - s(Kuk,3) =E= 0 ; (LHS = 0)
     
timber_used(Kok,1)..  - 0.8*y(Kos,1) - 1.6*y(Kov,1) + 4.2*y(Lsel,1) - s(Kok,1) =E= 0 ; (LHS = 0)
     
timber_used(Kok,2)..  - 0.8*y(Kos,2) - 1.6*y(Kov,2) + 4.2*y(Lsel,2) - s(Kok,2) =E= 0 ; (LHS = 0)
     
timber_used(Kok,3)..  - 0.8*y(Kos,3) - 1.6*y(Kov,3) + 4.2*y(Lsel,3) - s(Kok,3) =E= 0 ; (LHS = 0)
     

---- prod_starved  =G=  ensure that production can not be starved in each year

prod_starved(Mat,1)..  - s(Mat,1) + 10000*r(2,Mat,1) + 20000*r(3,Mat,1) + 30000*r(4,Mat,1) + 40000*r(5,Mat,1) + 50000*r(6,Mat,1) + 60000*r(7,Mat,1) + 70000*r(8,Mat,1) + 80000*r(9,Mat,1) + 90000*r(10,Mat,1) + 100000*r(11,Mat,1) + 110000*r(12,Mat,1)
     
      + 120000*r(13,Mat,1) + 130000*r(14,Mat,1) + 140000*r(15,Mat,1) + 150000*r(16,Mat,1) + 160000*r(17,Mat,1) + 170000*r(18,Mat,1) + 180000*r(19,Mat,1) + 190000*r(20,Mat,1) + 200000*r(21,Mat,1) + 210000*r(22,Mat,1) + 220000*r(23,Mat,1)
     
      + 230000*r(24,Mat,1) + 240000*r(25,Mat,1) + 250000*r(26,Mat,1) + 260000*r(27,Mat,1) + 270000*r(28,Mat,1) + 280000*r(29,Mat,1) + 290000*r(30,Mat,1) + 300000*r(31,Mat,1) + 310000*r(32,Mat,1) + 320000*r(33,Mat,1) + 330000*r(34,Mat,1)
     
      + 340000*r(35,Mat,1) + 350000*r(36,Mat,1) + 360000*r(37,Mat,1) + 370000*r(38,Mat,1) + 380000*r(39,Mat,1) + 390000*r(40,Mat,1) + 400000*r(41,Mat,1) + 410000*r(42,Mat,1) + 420000*r(43,Mat,1) + 430000*r(44,Mat,1) + 440000*r(45,Mat,1)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/19/17 02:05:06 Page 11
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 437


     prod_starved  =G=  ensure that production can not be starved in each year     
     
      + 450000*r(46,Mat,1) + 460000*r(47,Mat,1) + 470000*r(48,Mat,1) + 480000*r(49,Mat,1) + 490000*r(50,Mat,1) + 500000*r(51,Mat,1) + 510000*r(52,Mat,1) + 520000*r(53,Mat,1) + 530000*r(54,Mat,1) + 540000*r(55,Mat,1) + 550000*r(56,Mat,1)
     
      + 560000*r(57,Mat,1) + 570000*r(58,Mat,1) + 580000*r(59,Mat,1) + 590000*r(60,Mat,1) + 600000*r(61,Mat,1) + 610000*r(62,Mat,1) + 620000*r(63,Mat,1) + 630000*r(64,Mat,1) + 640000*r(65,Mat,1) + 650000*r(66,Mat,1) + 660000*r(67,Mat,1)
     
      + 670000*r(68,Mat,1) + 680000*r(69,Mat,1) + 690000*r(70,Mat,1) + 700000*r(71,Mat,1) + 710000*r(72,Mat,1) + 720000*r(73,Mat,1) + 730000*r(74,Mat,1) + 740000*r(75,Mat,1) + 750000*r(76,Mat,1) + 760000*r(77,Mat,1) + 770000*r(78,Mat,1)
     
      + 780000*r(79,Mat,1) + 790000*r(80,Mat,1) + 800000*r(81,Mat,1) + 810000*r(82,Mat,1) + 820000*r(83,Mat,1) + 830000*r(84,Mat,1) + 840000*r(85,Mat,1) + 850000*r(86,Mat,1) + 860000*r(87,Mat,1) + 870000*r(88,Mat,1) + 880000*r(89,Mat,1)
     
      + 890000*r(90,Mat,1) + 900000*r(91,Mat,1) + 910000*r(92,Mat,1) + 920000*r(93,Mat,1) + 930000*r(94,Mat,1) + 940000*r(95,Mat,1) + 950000*r(96,Mat,1) + 960000*r(97,Mat,1) + 970000*r(98,Mat,1) + 980000*r(99,Mat,1) + 990000*r(100,Mat,1)
     
      + 1000000*r(101,Mat,1) + 1010000*r(102,Mat,1) + 1020000*r(103,Mat,1) + 1030000*r(104,Mat,1) + 1040000*r(105,Mat,1) + 1050000*r(106,Mat,1) + 1060000*r(107,Mat,1) =G= 0 ; (LHS = 0)
     
prod_starved(Mat,2)..  - s(Mat,2) + 10000*r(2,Mat,2) + 20000*r(3,Mat,2) + 30000*r(4,Mat,2) + 40000*r(5,Mat,2) + 50000*r(6,Mat,2) + 60000*r(7,Mat,2) + 70000*r(8,Mat,2) + 80000*r(9,Mat,2) + 90000*r(10,Mat,2) + 100000*r(11,Mat,2) + 110000*r(12,Mat,2)
     
      + 120000*r(13,Mat,2) + 130000*r(14,Mat,2) + 140000*r(15,Mat,2) + 150000*r(16,Mat,2) + 160000*r(17,Mat,2) + 170000*r(18,Mat,2) + 180000*r(19,Mat,2) + 190000*r(20,Mat,2) + 200000*r(21,Mat,2) + 210000*r(22,Mat,2) + 220000*r(23,Mat,2)
     
      + 230000*r(24,Mat,2) + 240000*r(25,Mat,2) + 250000*r(26,Mat,2) + 260000*r(27,Mat,2) + 270000*r(28,Mat,2) + 280000*r(29,Mat,2) + 290000*r(30,Mat,2) + 300000*r(31,Mat,2) + 310000*r(32,Mat,2) + 320000*r(33,Mat,2) + 330000*r(34,Mat,2)
     
      + 340000*r(35,Mat,2) + 350000*r(36,Mat,2) + 360000*r(37,Mat,2) + 370000*r(38,Mat,2) + 380000*r(39,Mat,2) + 390000*r(40,Mat,2) + 400000*r(41,Mat,2) + 410000*r(42,Mat,2) + 420000*r(43,Mat,2) + 430000*r(44,Mat,2) + 440000*r(45,Mat,2)
     
      + 450000*r(46,Mat,2) + 460000*r(47,Mat,2) + 470000*r(48,Mat,2) + 480000*r(49,Mat,2) + 490000*r(50,Mat,2) + 500000*r(51,Mat,2) + 510000*r(52,Mat,2) + 520000*r(53,Mat,2) + 530000*r(54,Mat,2) + 540000*r(55,Mat,2) + 550000*r(56,Mat,2)
     
      + 560000*r(57,Mat,2) + 570000*r(58,Mat,2) + 580000*r(59,Mat,2) + 590000*r(60,Mat,2) + 600000*r(61,Mat,2) + 610000*r(62,Mat,2) + 620000*r(63,Mat,2) + 630000*r(64,Mat,2) + 640000*r(65,Mat,2) + 650000*r(66,Mat,2) + 660000*r(67,Mat,2)
     
      + 670000*r(68,Mat,2) + 680000*r(69,Mat,2) + 690000*r(70,Mat,2) + 700000*r(71,Mat,2) + 710000*r(72,Mat,2) + 720000*r(73,Mat,2) + 730000*r(74,Mat,2) + 740000*r(75,Mat,2) + 750000*r(76,Mat,2) + 760000*r(77,Mat,2) + 770000*r(78,Mat,2)
     
      + 780000*r(79,Mat,2) + 790000*r(80,Mat,2) + 800000*r(81,Mat,2) + 810000*r(82,Mat,2) + 820000*r(83,Mat,2) + 830000*r(84,Mat,2) + 840000*r(85,Mat,2) + 850000*r(86,Mat,2) + 860000*r(87,Mat,2) + 870000*r(88,Mat,2) + 880000*r(89,Mat,2)
     
      + 890000*r(90,Mat,2) + 900000*r(91,Mat,2) + 910000*r(92,Mat,2) + 920000*r(93,Mat,2) + 930000*r(94,Mat,2) + 940000*r(95,Mat,2) + 950000*r(96,Mat,2) + 960000*r(97,Mat,2) + 970000*r(98,Mat,2) + 980000*r(99,Mat,2) + 990000*r(100,Mat,2)
     
      + 1000000*r(101,Mat,2) + 1010000*r(102,Mat,2) + 1020000*r(103,Mat,2) + 1030000*r(104,Mat,2) + 1040000*r(105,Mat,2) + 1050000*r(106,Mat,2) + 1060000*r(107,Mat,2) =G= 0 ; (LHS = 0)
     
prod_starved(Mat,3)..  - s(Mat,3) + 10000*r(2,Mat,3) + 20000*r(3,Mat,3) + 30000*r(4,Mat,3) + 40000*r(5,Mat,3) + 50000*r(6,Mat,3) + 60000*r(7,Mat,3) + 70000*r(8,Mat,3) + 80000*r(9,Mat,3) + 90000*r(10,Mat,3) + 100000*r(11,Mat,3) + 110000*r(12,Mat,3)
     
      + 120000*r(13,Mat,3) + 130000*r(14,Mat,3) + 140000*r(15,Mat,3) + 150000*r(16,Mat,3) + 160000*r(17,Mat,3) + 170000*r(18,Mat,3) + 180000*r(19,Mat,3) + 190000*r(20,Mat,3) + 200000*r(21,Mat,3) + 210000*r(22,Mat,3) + 220000*r(23,Mat,3)
     
      + 230000*r(24,Mat,3) + 240000*r(25,Mat,3) + 250000*r(26,Mat,3) + 260000*r(27,Mat,3) + 270000*r(28,Mat,3) + 280000*r(29,Mat,3) + 290000*r(30,Mat,3) + 300000*r(31,Mat,3) + 310000*r(32,Mat,3) + 320000*r(33,Mat,3) + 330000*r(34,Mat,3)
     
      + 340000*r(35,Mat,3) + 350000*r(36,Mat,3) + 360000*r(37,Mat,3) + 370000*r(38,Mat,3) + 380000*r(39,Mat,3) + 390000*r(40,Mat,3) + 400000*r(41,Mat,3) + 410000*r(42,Mat,3) + 420000*r(43,Mat,3) + 430000*r(44,Mat,3) + 440000*r(45,Mat,3)
     
      + 450000*r(46,Mat,3) + 460000*r(47,Mat,3) + 470000*r(48,Mat,3) + 480000*r(49,Mat,3) + 490000*r(50,Mat,3) + 500000*r(51,Mat,3) + 510000*r(52,Mat,3) + 520000*r(53,Mat,3) + 530000*r(54,Mat,3) + 540000*r(55,Mat,3) + 550000*r(56,Mat,3)
     
      + 560000*r(57,Mat,3) + 570000*r(58,Mat,3) + 580000*r(59,Mat,3) + 590000*r(60,Mat,3) + 600000*r(61,Mat,3) + 610000*r(62,Mat,3) + 620000*r(63,Mat,3) + 630000*r(64,Mat,3) + 640000*r(65,Mat,3) + 650000*r(66,Mat,3) + 660000*r(67,Mat,3)
     
      + 670000*r(68,Mat,3) + 680000*r(69,Mat,3) + 690000*r(70,Mat,3) + 700000*r(71,Mat,3) + 710000*r(72,Mat,3) + 720000*r(73,Mat,3) + 730000*r(74,Mat,3) + 740000*r(75,Mat,3) + 750000*r(76,Mat,3) + 760000*r(77,Mat,3) + 770000*r(78,Mat,3)
     
      + 780000*r(79,Mat,3) + 790000*r(80,Mat,3) + 800000*r(81,Mat,3) + 810000*r(82,Mat,3) + 820000*r(83,Mat,3) + 830000*r(84,Mat,3) + 840000*r(85,Mat,3) + 850000*r(86,Mat,3) + 860000*r(87,Mat,3) + 870000*r(88,Mat,3) + 880000*r(89,Mat,3)
     
      + 890000*r(90,Mat,3) + 900000*r(91,Mat,3) + 910000*r(92,Mat,3) + 920000*r(93,Mat,3) + 930000*r(94,Mat,3) + 940000*r(95,Mat,3) + 950000*r(96,Mat,3) + 960000*r(97,Mat,3) + 970000*r(98,Mat,3) + 980000*r(99,Mat,3) + 990000*r(100,Mat,3)
     
      + 1000000*r(101,Mat,3) + 1010000*r(102,Mat,3) + 1020000*r(103,Mat,3) + 1030000*r(104,Mat,3) + 1040000*r(105,Mat,3) + 1050000*r(106,Mat,3) + 1060000*r(107,Mat,3) =G= 0 ; (LHS = 0)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/19/17 02:05:06 Page 12
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 437


     prod_starved  =G=  ensure that production can not be starved in each year

prod_starved(Kut,1)..  - s(Kut,1) + 10000*r(2,Kut,1) + 20000*r(3,Kut,1) + 30000*r(4,Kut,1) + 40000*r(5,Kut,1) + 50000*r(6,Kut,1) + 60000*r(7,Kut,1) + 70000*r(8,Kut,1) + 80000*r(9,Kut,1) + 90000*r(10,Kut,1) + 100000*r(11,Kut,1) + 110000*r(12,Kut,1)
     
      + 120000*r(13,Kut,1) + 130000*r(14,Kut,1) + 140000*r(15,Kut,1) + 150000*r(16,Kut,1) + 160000*r(17,Kut,1) + 170000*r(18,Kut,1) + 180000*r(19,Kut,1) + 190000*r(20,Kut,1) + 200000*r(21,Kut,1) + 210000*r(22,Kut,1) + 220000*r(23,Kut,1)
     
      + 230000*r(24,Kut,1) + 240000*r(25,Kut,1) + 250000*r(26,Kut,1) + 260000*r(27,Kut,1) + 270000*r(28,Kut,1) + 280000*r(29,Kut,1) + 290000*r(30,Kut,1) + 300000*r(31,Kut,1) + 310000*r(32,Kut,1) + 320000*r(33,Kut,1) + 330000*r(34,Kut,1)
     
      + 340000*r(35,Kut,1) + 350000*r(36,Kut,1) + 360000*r(37,Kut,1) + 370000*r(38,Kut,1) + 380000*r(39,Kut,1) + 390000*r(40,Kut,1) + 400000*r(41,Kut,1) + 410000*r(42,Kut,1) + 420000*r(43,Kut,1) + 430000*r(44,Kut,1) + 440000*r(45,Kut,1)
     
      + 450000*r(46,Kut,1) + 460000*r(47,Kut,1) + 470000*r(48,Kut,1) + 480000*r(49,Kut,1) + 490000*r(50,Kut,1) + 500000*r(51,Kut,1) + 510000*r(52,Kut,1) + 520000*r(53,Kut,1) + 530000*r(54,Kut,1) + 540000*r(55,Kut,1) + 550000*r(56,Kut,1)
     
      + 560000*r(57,Kut,1) + 570000*r(58,Kut,1) + 580000*r(59,Kut,1) + 590000*r(60,Kut,1) + 600000*r(61,Kut,1) + 610000*r(62,Kut,1) + 620000*r(63,Kut,1) + 630000*r(64,Kut,1) + 640000*r(65,Kut,1) + 650000*r(66,Kut,1) + 660000*r(67,Kut,1)
     
      + 670000*r(68,Kut,1) + 680000*r(69,Kut,1) + 690000*r(70,Kut,1) + 700000*r(71,Kut,1) + 710000*r(72,Kut,1) + 720000*r(73,Kut,1) + 730000*r(74,Kut,1) + 740000*r(75,Kut,1) + 750000*r(76,Kut,1) + 760000*r(77,Kut,1) + 770000*r(78,Kut,1)
     
      + 780000*r(79,Kut,1) + 790000*r(80,Kut,1) + 800000*r(81,Kut,1) + 810000*r(82,Kut,1) + 820000*r(83,Kut,1) + 830000*r(84,Kut,1) + 840000*r(85,Kut,1) + 850000*r(86,Kut,1) + 860000*r(87,Kut,1) + 870000*r(88,Kut,1) + 880000*r(89,Kut,1)
     
      + 890000*r(90,Kut,1) + 900000*r(91,Kut,1) + 910000*r(92,Kut,1) + 920000*r(93,Kut,1) + 930000*r(94,Kut,1) + 940000*r(95,Kut,1) + 950000*r(96,Kut,1) + 960000*r(97,Kut,1) + 970000*r(98,Kut,1) + 980000*r(99,Kut,1) + 990000*r(100,Kut,1)
     
      + 1000000*r(101,Kut,1) + 1010000*r(102,Kut,1) + 1020000*r(103,Kut,1) + 1030000*r(104,Kut,1) + 1040000*r(105,Kut,1) + 1050000*r(106,Kut,1) + 1060000*r(107,Kut,1) =G= 0 ; (LHS = 0)
     
prod_starved(Kut,2)..  - s(Kut,2) + 10000*r(2,Kut,2) + 20000*r(3,Kut,2) + 30000*r(4,Kut,2) + 40000*r(5,Kut,2) + 50000*r(6,Kut,2) + 60000*r(7,Kut,2) + 70000*r(8,Kut,2) + 80000*r(9,Kut,2) + 90000*r(10,Kut,2) + 100000*r(11,Kut,2) + 110000*r(12,Kut,2)
     
      + 120000*r(13,Kut,2) + 130000*r(14,Kut,2) + 140000*r(15,Kut,2) + 150000*r(16,Kut,2) + 160000*r(17,Kut,2) + 170000*r(18,Kut,2) + 180000*r(19,Kut,2) + 190000*r(20,Kut,2) + 200000*r(21,Kut,2) + 210000*r(22,Kut,2) + 220000*r(23,Kut,2)
     
      + 230000*r(24,Kut,2) + 240000*r(25,Kut,2) + 250000*r(26,Kut,2) + 260000*r(27,Kut,2) + 270000*r(28,Kut,2) + 280000*r(29,Kut,2) + 290000*r(30,Kut,2) + 300000*r(31,Kut,2) + 310000*r(32,Kut,2) + 320000*r(33,Kut,2) + 330000*r(34,Kut,2)
     
      + 340000*r(35,Kut,2) + 350000*r(36,Kut,2) + 360000*r(37,Kut,2) + 370000*r(38,Kut,2) + 380000*r(39,Kut,2) + 390000*r(40,Kut,2) + 400000*r(41,Kut,2) + 410000*r(42,Kut,2) + 420000*r(43,Kut,2) + 430000*r(44,Kut,2) + 440000*r(45,Kut,2)
     
      + 450000*r(46,Kut,2) + 460000*r(47,Kut,2) + 470000*r(48,Kut,2) + 480000*r(49,Kut,2) + 490000*r(50,Kut,2) + 500000*r(51,Kut,2) + 510000*r(52,Kut,2) + 520000*r(53,Kut,2) + 530000*r(54,Kut,2) + 540000*r(55,Kut,2) + 550000*r(56,Kut,2)
     
      + 560000*r(57,Kut,2) + 570000*r(58,Kut,2) + 580000*r(59,Kut,2) + 590000*r(60,Kut,2) + 600000*r(61,Kut,2) + 610000*r(62,Kut,2) + 620000*r(63,Kut,2) + 630000*r(64,Kut,2) + 640000*r(65,Kut,2) + 650000*r(66,Kut,2) + 660000*r(67,Kut,2)
     
      + 670000*r(68,Kut,2) + 680000*r(69,Kut,2) + 690000*r(70,Kut,2) + 700000*r(71,Kut,2) + 710000*r(72,Kut,2) + 720000*r(73,Kut,2) + 730000*r(74,Kut,2) + 740000*r(75,Kut,2) + 750000*r(76,Kut,2) + 760000*r(77,Kut,2) + 770000*r(78,Kut,2)
     
      + 780000*r(79,Kut,2) + 790000*r(80,Kut,2) + 800000*r(81,Kut,2) + 810000*r(82,Kut,2) + 820000*r(83,Kut,2) + 830000*r(84,Kut,2) + 840000*r(85,Kut,2) + 850000*r(86,Kut,2) + 860000*r(87,Kut,2) + 870000*r(88,Kut,2) + 880000*r(89,Kut,2)
     
      + 890000*r(90,Kut,2) + 900000*r(91,Kut,2) + 910000*r(92,Kut,2) + 920000*r(93,Kut,2) + 930000*r(94,Kut,2) + 940000*r(95,Kut,2) + 950000*r(96,Kut,2) + 960000*r(97,Kut,2) + 970000*r(98,Kut,2) + 980000*r(99,Kut,2) + 990000*r(100,Kut,2)
     
      + 1000000*r(101,Kut,2) + 1010000*r(102,Kut,2) + 1020000*r(103,Kut,2) + 1030000*r(104,Kut,2) + 1040000*r(105,Kut,2) + 1050000*r(106,Kut,2) + 1060000*r(107,Kut,2) =G= 0 ; (LHS = 0)
     
prod_starved(Kut,3)..  - s(Kut,3) + 10000*r(2,Kut,3) + 20000*r(3,Kut,3) + 30000*r(4,Kut,3) + 40000*r(5,Kut,3) + 50000*r(6,Kut,3) + 60000*r(7,Kut,3) + 70000*r(8,Kut,3) + 80000*r(9,Kut,3) + 90000*r(10,Kut,3) + 100000*r(11,Kut,3) + 110000*r(12,Kut,3)
     
      + 120000*r(13,Kut,3) + 130000*r(14,Kut,3) + 140000*r(15,Kut,3) + 150000*r(16,Kut,3) + 160000*r(17,Kut,3) + 170000*r(18,Kut,3) + 180000*r(19,Kut,3) + 190000*r(20,Kut,3) + 200000*r(21,Kut,3) + 210000*r(22,Kut,3) + 220000*r(23,Kut,3)
     
      + 230000*r(24,Kut,3) + 240000*r(25,Kut,3) + 250000*r(26,Kut,3) + 260000*r(27,Kut,3) + 270000*r(28,Kut,3) + 280000*r(29,Kut,3) + 290000*r(30,Kut,3) + 300000*r(31,Kut,3) + 310000*r(32,Kut,3) + 320000*r(33,Kut,3) + 330000*r(34,Kut,3)
     
      + 340000*r(35,Kut,3) + 350000*r(36,Kut,3) + 360000*r(37,Kut,3) + 370000*r(38,Kut,3) + 380000*r(39,Kut,3) + 390000*r(40,Kut,3) + 400000*r(41,Kut,3) + 410000*r(42,Kut,3) + 420000*r(43,Kut,3) + 430000*r(44,Kut,3) + 440000*r(45,Kut,3)
     
      + 450000*r(46,Kut,3) + 460000*r(47,Kut,3) + 470000*r(48,Kut,3) + 480000*r(49,Kut,3) + 490000*r(50,Kut,3) + 500000*r(51,Kut,3) + 510000*r(52,Kut,3) + 520000*r(53,Kut,3) + 530000*r(54,Kut,3) + 540000*r(55,Kut,3) + 550000*r(56,Kut,3)
     
      + 560000*r(57,Kut,3) + 570000*r(58,Kut,3) + 580000*r(59,Kut,3) + 590000*r(60,Kut,3) + 600000*r(61,Kut,3) + 610000*r(62,Kut,3) + 620000*r(63,Kut,3) + 630000*r(64,Kut,3) + 640000*r(65,Kut,3) + 650000*r(66,Kut,3) + 660000*r(67,Kut,3)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/19/17 02:05:06 Page 13
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 437


     prod_starved  =G=  ensure that production can not be starved in each year     
     
      + 670000*r(68,Kut,3) + 680000*r(69,Kut,3) + 690000*r(70,Kut,3) + 700000*r(71,Kut,3) + 710000*r(72,Kut,3) + 720000*r(73,Kut,3) + 730000*r(74,Kut,3) + 740000*r(75,Kut,3) + 750000*r(76,Kut,3) + 760000*r(77,Kut,3) + 770000*r(78,Kut,3)
     
      + 780000*r(79,Kut,3) + 790000*r(80,Kut,3) + 800000*r(81,Kut,3) + 810000*r(82,Kut,3) + 820000*r(83,Kut,3) + 830000*r(84,Kut,3) + 840000*r(85,Kut,3) + 850000*r(86,Kut,3) + 860000*r(87,Kut,3) + 870000*r(88,Kut,3) + 880000*r(89,Kut,3)
     
      + 890000*r(90,Kut,3) + 900000*r(91,Kut,3) + 910000*r(92,Kut,3) + 920000*r(93,Kut,3) + 930000*r(94,Kut,3) + 940000*r(95,Kut,3) + 950000*r(96,Kut,3) + 960000*r(97,Kut,3) + 970000*r(98,Kut,3) + 980000*r(99,Kut,3) + 990000*r(100,Kut,3)
     
      + 1000000*r(101,Kut,3) + 1010000*r(102,Kut,3) + 1020000*r(103,Kut,3) + 1030000*r(104,Kut,3) + 1040000*r(105,Kut,3) + 1050000*r(106,Kut,3) + 1060000*r(107,Kut,3) =G= 0 ; (LHS = 0)
     
prod_starved(Kot,1)..  - s(Kot,1) + 10000*r(2,Kot,1) + 20000*r(3,Kot,1) + 30000*r(4,Kot,1) + 40000*r(5,Kot,1) + 50000*r(6,Kot,1) + 60000*r(7,Kot,1) + 70000*r(8,Kot,1) + 80000*r(9,Kot,1) + 90000*r(10,Kot,1) + 100000*r(11,Kot,1) + 110000*r(12,Kot,1)
     
      + 120000*r(13,Kot,1) + 130000*r(14,Kot,1) + 140000*r(15,Kot,1) + 150000*r(16,Kot,1) + 160000*r(17,Kot,1) + 170000*r(18,Kot,1) + 180000*r(19,Kot,1) + 190000*r(20,Kot,1) + 200000*r(21,Kot,1) + 210000*r(22,Kot,1) + 220000*r(23,Kot,1)
     
      + 230000*r(24,Kot,1) + 240000*r(25,Kot,1) + 250000*r(26,Kot,1) + 260000*r(27,Kot,1) + 270000*r(28,Kot,1) + 280000*r(29,Kot,1) + 290000*r(30,Kot,1) + 300000*r(31,Kot,1) + 310000*r(32,Kot,1) + 320000*r(33,Kot,1) + 330000*r(34,Kot,1)
     
      + 340000*r(35,Kot,1) + 350000*r(36,Kot,1) + 360000*r(37,Kot,1) + 370000*r(38,Kot,1) + 380000*r(39,Kot,1) + 390000*r(40,Kot,1) + 400000*r(41,Kot,1) + 410000*r(42,Kot,1) + 420000*r(43,Kot,1) + 430000*r(44,Kot,1) + 440000*r(45,Kot,1)
     
      + 450000*r(46,Kot,1) + 460000*r(47,Kot,1) + 470000*r(48,Kot,1) + 480000*r(49,Kot,1) + 490000*r(50,Kot,1) + 500000*r(51,Kot,1) + 510000*r(52,Kot,1) + 520000*r(53,Kot,1) + 530000*r(54,Kot,1) + 540000*r(55,Kot,1) + 550000*r(56,Kot,1)
     
      + 560000*r(57,Kot,1) + 570000*r(58,Kot,1) + 580000*r(59,Kot,1) + 590000*r(60,Kot,1) + 600000*r(61,Kot,1) + 610000*r(62,Kot,1) + 620000*r(63,Kot,1) + 630000*r(64,Kot,1) + 640000*r(65,Kot,1) + 650000*r(66,Kot,1) + 660000*r(67,Kot,1)
     
      + 670000*r(68,Kot,1) + 680000*r(69,Kot,1) + 690000*r(70,Kot,1) + 700000*r(71,Kot,1) + 710000*r(72,Kot,1) + 720000*r(73,Kot,1) + 730000*r(74,Kot,1) + 740000*r(75,Kot,1) + 750000*r(76,Kot,1) + 760000*r(77,Kot,1) + 770000*r(78,Kot,1)
     
      + 780000*r(79,Kot,1) + 790000*r(80,Kot,1) + 800000*r(81,Kot,1) + 810000*r(82,Kot,1) + 820000*r(83,Kot,1) + 830000*r(84,Kot,1) + 840000*r(85,Kot,1) + 850000*r(86,Kot,1) + 860000*r(87,Kot,1) + 870000*r(88,Kot,1) + 880000*r(89,Kot,1)
     
      + 890000*r(90,Kot,1) + 900000*r(91,Kot,1) + 910000*r(92,Kot,1) + 920000*r(93,Kot,1) + 930000*r(94,Kot,1) + 940000*r(95,Kot,1) + 950000*r(96,Kot,1) + 960000*r(97,Kot,1) + 970000*r(98,Kot,1) + 980000*r(99,Kot,1) + 990000*r(100,Kot,1)
     
      + 1000000*r(101,Kot,1) + 1010000*r(102,Kot,1) + 1020000*r(103,Kot,1) + 1030000*r(104,Kot,1) + 1040000*r(105,Kot,1) + 1050000*r(106,Kot,1) + 1060000*r(107,Kot,1) =G= 0 ; (LHS = 0)
     
prod_starved(Kot,2)..  - s(Kot,2) + 10000*r(2,Kot,2) + 20000*r(3,Kot,2) + 30000*r(4,Kot,2) + 40000*r(5,Kot,2) + 50000*r(6,Kot,2) + 60000*r(7,Kot,2) + 70000*r(8,Kot,2) + 80000*r(9,Kot,2) + 90000*r(10,Kot,2) + 100000*r(11,Kot,2) + 110000*r(12,Kot,2)
     
      + 120000*r(13,Kot,2) + 130000*r(14,Kot,2) + 140000*r(15,Kot,2) + 150000*r(16,Kot,2) + 160000*r(17,Kot,2) + 170000*r(18,Kot,2) + 180000*r(19,Kot,2) + 190000*r(20,Kot,2) + 200000*r(21,Kot,2) + 210000*r(22,Kot,2) + 220000*r(23,Kot,2)
     
      + 230000*r(24,Kot,2) + 240000*r(25,Kot,2) + 250000*r(26,Kot,2) + 260000*r(27,Kot,2) + 270000*r(28,Kot,2) + 280000*r(29,Kot,2) + 290000*r(30,Kot,2) + 300000*r(31,Kot,2) + 310000*r(32,Kot,2) + 320000*r(33,Kot,2) + 330000*r(34,Kot,2)
     
      + 340000*r(35,Kot,2) + 350000*r(36,Kot,2) + 360000*r(37,Kot,2) + 370000*r(38,Kot,2) + 380000*r(39,Kot,2) + 390000*r(40,Kot,2) + 400000*r(41,Kot,2) + 410000*r(42,Kot,2) + 420000*r(43,Kot,2) + 430000*r(44,Kot,2) + 440000*r(45,Kot,2)
     
      + 450000*r(46,Kot,2) + 460000*r(47,Kot,2) + 470000*r(48,Kot,2) + 480000*r(49,Kot,2) + 490000*r(50,Kot,2) + 500000*r(51,Kot,2) + 510000*r(52,Kot,2) + 520000*r(53,Kot,2) + 530000*r(54,Kot,2) + 540000*r(55,Kot,2) + 550000*r(56,Kot,2)
     
      + 560000*r(57,Kot,2) + 570000*r(58,Kot,2) + 580000*r(59,Kot,2) + 590000*r(60,Kot,2) + 600000*r(61,Kot,2) + 610000*r(62,Kot,2) + 620000*r(63,Kot,2) + 630000*r(64,Kot,2) + 640000*r(65,Kot,2) + 650000*r(66,Kot,2) + 660000*r(67,Kot,2)
     
      + 670000*r(68,Kot,2) + 680000*r(69,Kot,2) + 690000*r(70,Kot,2) + 700000*r(71,Kot,2) + 710000*r(72,Kot,2) + 720000*r(73,Kot,2) + 730000*r(74,Kot,2) + 740000*r(75,Kot,2) + 750000*r(76,Kot,2) + 760000*r(77,Kot,2) + 770000*r(78,Kot,2)
     
      + 780000*r(79,Kot,2) + 790000*r(80,Kot,2) + 800000*r(81,Kot,2) + 810000*r(82,Kot,2) + 820000*r(83,Kot,2) + 830000*r(84,Kot,2) + 840000*r(85,Kot,2) + 850000*r(86,Kot,2) + 860000*r(87,Kot,2) + 870000*r(88,Kot,2) + 880000*r(89,Kot,2)
     
      + 890000*r(90,Kot,2) + 900000*r(91,Kot,2) + 910000*r(92,Kot,2) + 920000*r(93,Kot,2) + 930000*r(94,Kot,2) + 940000*r(95,Kot,2) + 950000*r(96,Kot,2) + 960000*r(97,Kot,2) + 970000*r(98,Kot,2) + 980000*r(99,Kot,2) + 990000*r(100,Kot,2)
     
      + 1000000*r(101,Kot,2) + 1010000*r(102,Kot,2) + 1020000*r(103,Kot,2) + 1030000*r(104,Kot,2) + 1040000*r(105,Kot,2) + 1050000*r(106,Kot,2) + 1060000*r(107,Kot,2) =G= 0 ; (LHS = 0)
     
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/19/17 02:05:06 Page 14
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 437


     prod_starved  =G=  ensure that production can not be starved in each year

prod_starved(Kot,3)..  - s(Kot,3) + 10000*r(2,Kot,3) + 20000*r(3,Kot,3) + 30000*r(4,Kot,3) + 40000*r(5,Kot,3) + 50000*r(6,Kot,3) + 60000*r(7,Kot,3) + 70000*r(8,Kot,3) + 80000*r(9,Kot,3) + 90000*r(10,Kot,3) + 100000*r(11,Kot,3) + 110000*r(12,Kot,3)
     
      + 120000*r(13,Kot,3) + 130000*r(14,Kot,3) + 140000*r(15,Kot,3) + 150000*r(16,Kot,3) + 160000*r(17,Kot,3) + 170000*r(18,Kot,3) + 180000*r(19,Kot,3) + 190000*r(20,Kot,3) + 200000*r(21,Kot,3) + 210000*r(22,Kot,3) + 220000*r(23,Kot,3)
     
      + 230000*r(24,Kot,3) + 240000*r(25,Kot,3) + 250000*r(26,Kot,3) + 260000*r(27,Kot,3) + 270000*r(28,Kot,3) + 280000*r(29,Kot,3) + 290000*r(30,Kot,3) + 300000*r(31,Kot,3) + 310000*r(32,Kot,3) + 320000*r(33,Kot,3) + 330000*r(34,Kot,3)
     
      + 340000*r(35,Kot,3) + 350000*r(36,Kot,3) + 360000*r(37,Kot,3) + 370000*r(38,Kot,3) + 380000*r(39,Kot,3) + 390000*r(40,Kot,3) + 400000*r(41,Kot,3) + 410000*r(42,Kot,3) + 420000*r(43,Kot,3) + 430000*r(44,Kot,3) + 440000*r(45,Kot,3)
     
      + 450000*r(46,Kot,3) + 460000*r(47,Kot,3) + 470000*r(48,Kot,3) + 480000*r(49,Kot,3) + 490000*r(50,Kot,3) + 500000*r(51,Kot,3) + 510000*r(52,Kot,3) + 520000*r(53,Kot,3) + 530000*r(54,Kot,3) + 540000*r(55,Kot,3) + 550000*r(56,Kot,3)
     
      + 560000*r(57,Kot,3) + 570000*r(58,Kot,3) + 580000*r(59,Kot,3) + 590000*r(60,Kot,3) + 600000*r(61,Kot,3) + 610000*r(62,Kot,3) + 620000*r(63,Kot,3) + 630000*r(64,Kot,3) + 640000*r(65,Kot,3) + 650000*r(66,Kot,3) + 660000*r(67,Kot,3)
     
      + 670000*r(68,Kot,3) + 680000*r(69,Kot,3) + 690000*r(70,Kot,3) + 700000*r(71,Kot,3) + 710000*r(72,Kot,3) + 720000*r(73,Kot,3) + 730000*r(74,Kot,3) + 740000*r(75,Kot,3) + 750000*r(76,Kot,3) + 760000*r(77,Kot,3) + 770000*r(78,Kot,3)
     
      + 780000*r(79,Kot,3) + 790000*r(80,Kot,3) + 800000*r(81,Kot,3) + 810000*r(82,Kot,3) + 820000*r(83,Kot,3) + 830000*r(84,Kot,3) + 840000*r(85,Kot,3) + 850000*r(86,Kot,3) + 860000*r(87,Kot,3) + 870000*r(88,Kot,3) + 880000*r(89,Kot,3)
     
      + 890000*r(90,Kot,3) + 900000*r(91,Kot,3) + 910000*r(92,Kot,3) + 920000*r(93,Kot,3) + 930000*r(94,Kot,3) + 940000*r(95,Kot,3) + 950000*r(96,Kot,3) + 960000*r(97,Kot,3) + 970000*r(98,Kot,3) + 980000*r(99,Kot,3) + 990000*r(100,Kot,3)
     
      + 1000000*r(101,Kot,3) + 1010000*r(102,Kot,3) + 1020000*r(103,Kot,3) + 1030000*r(104,Kot,3) + 1040000*r(105,Kot,3) + 1050000*r(106,Kot,3) + 1060000*r(107,Kot,3) =G= 0 ; (LHS = 0)
     
prod_starved(Mak,1)..  - s(Mak,1) + 10000*r(2,Mak,1) + 20000*r(3,Mak,1) + 30000*r(4,Mak,1) + 40000*r(5,Mak,1) + 50000*r(6,Mak,1) + 60000*r(7,Mak,1) + 70000*r(8,Mak,1) + 80000*r(9,Mak,1) + 90000*r(10,Mak,1) + 100000*r(11,Mak,1) + 110000*r(12,Mak,1)
     
      + 120000*r(13,Mak,1) + 130000*r(14,Mak,1) + 140000*r(15,Mak,1) + 150000*r(16,Mak,1) + 160000*r(17,Mak,1) + 170000*r(18,Mak,1) + 180000*r(19,Mak,1) + 190000*r(20,Mak,1) + 200000*r(21,Mak,1) + 210000*r(22,Mak,1) + 220000*r(23,Mak,1)
     
      + 230000*r(24,Mak,1) + 240000*r(25,Mak,1) + 250000*r(26,Mak,1) + 260000*r(27,Mak,1) + 270000*r(28,Mak,1) + 280000*r(29,Mak,1) + 290000*r(30,Mak,1) + 300000*r(31,Mak,1) + 310000*r(32,Mak,1) + 320000*r(33,Mak,1) + 330000*r(34,Mak,1)
     
      + 340000*r(35,Mak,1) + 350000*r(36,Mak,1) + 360000*r(37,Mak,1) + 370000*r(38,Mak,1) + 380000*r(39,Mak,1) + 390000*r(40,Mak,1) + 400000*r(41,Mak,1) + 410000*r(42,Mak,1) + 420000*r(43,Mak,1) + 430000*r(44,Mak,1) + 440000*r(45,Mak,1)
     
      + 450000*r(46,Mak,1) + 460000*r(47,Mak,1) + 470000*r(48,Mak,1) + 480000*r(49,Mak,1) + 490000*r(50,Mak,1) + 500000*r(51,Mak,1) + 510000*r(52,Mak,1) + 520000*r(53,Mak,1) + 530000*r(54,Mak,1) + 540000*r(55,Mak,1) + 550000*r(56,Mak,1)
     
      + 560000*r(57,Mak,1) + 570000*r(58,Mak,1) + 580000*r(59,Mak,1) + 590000*r(60,Mak,1) + 600000*r(61,Mak,1) + 610000*r(62,Mak,1) + 620000*r(63,Mak,1) + 630000*r(64,Mak,1) + 640000*r(65,Mak,1) + 650000*r(66,Mak,1) + 660000*r(67,Mak,1)
     
      + 670000*r(68,Mak,1) + 680000*r(69,Mak,1) + 690000*r(70,Mak,1) + 700000*r(71,Mak,1) + 710000*r(72,Mak,1) + 720000*r(73,Mak,1) + 730000*r(74,Mak,1) + 740000*r(75,Mak,1) + 750000*r(76,Mak,1) + 760000*r(77,Mak,1) + 770000*r(78,Mak,1)
     
      + 780000*r(79,Mak,1) + 790000*r(80,Mak,1) + 800000*r(81,Mak,1) + 810000*r(82,Mak,1) + 820000*r(83,Mak,1) + 830000*r(84,Mak,1) + 840000*r(85,Mak,1) + 850000*r(86,Mak,1) + 860000*r(87,Mak,1) + 870000*r(88,Mak,1) + 880000*r(89,Mak,1)
     
      + 890000*r(90,Mak,1) + 900000*r(91,Mak,1) + 910000*r(92,Mak,1) + 920000*r(93,Mak,1) + 930000*r(94,Mak,1) + 940000*r(95,Mak,1) + 950000*r(96,Mak,1) + 960000*r(97,Mak,1) + 970000*r(98,Mak,1) + 980000*r(99,Mak,1) + 990000*r(100,Mak,1)
     
      + 1000000*r(101,Mak,1) + 1010000*r(102,Mak,1) + 1020000*r(103,Mak,1) + 1030000*r(104,Mak,1) + 1040000*r(105,Mak,1) + 1050000*r(106,Mak,1) + 1060000*r(107,Mak,1) =G= 0 ; (LHS = 0)
     
prod_starved(Mak,2)..  - s(Mak,2) + 10000*r(2,Mak,2) + 20000*r(3,Mak,2) + 30000*r(4,Mak,2) + 40000*r(5,Mak,2) + 50000*r(6,Mak,2) + 60000*r(7,Mak,2) + 70000*r(8,Mak,2) + 80000*r(9,Mak,2) + 90000*r(10,Mak,2) + 100000*r(11,Mak,2) + 110000*r(12,Mak,2)
     
      + 120000*r(13,Mak,2) + 130000*r(14,Mak,2) + 140000*r(15,Mak,2) + 150000*r(16,Mak,2) + 160000*r(17,Mak,2) + 170000*r(18,Mak,2) + 180000*r(19,Mak,2) + 190000*r(20,Mak,2) + 200000*r(21,Mak,2) + 210000*r(22,Mak,2) + 220000*r(23,Mak,2)
     
      + 230000*r(24,Mak,2) + 240000*r(25,Mak,2) + 250000*r(26,Mak,2) + 260000*r(27,Mak,2) + 270000*r(28,Mak,2) + 280000*r(29,Mak,2) + 290000*r(30,Mak,2) + 300000*r(31,Mak,2) + 310000*r(32,Mak,2) + 320000*r(33,Mak,2) + 330000*r(34,Mak,2)
     
      + 340000*r(35,Mak,2) + 350000*r(36,Mak,2) + 360000*r(37,Mak,2) + 370000*r(38,Mak,2) + 380000*r(39,Mak,2) + 390000*r(40,Mak,2) + 400000*r(41,Mak,2) + 410000*r(42,Mak,2) + 420000*r(43,Mak,2) + 430000*r(44,Mak,2) + 440000*r(45,Mak,2)
     
      + 450000*r(46,Mak,2) + 460000*r(47,Mak,2) + 470000*r(48,Mak,2) + 480000*r(49,Mak,2) + 490000*r(50,Mak,2) + 500000*r(51,Mak,2) + 510000*r(52,Mak,2) + 520000*r(53,Mak,2) + 530000*r(54,Mak,2) + 540000*r(55,Mak,2) + 550000*r(56,Mak,2)
     
      + 560000*r(57,Mak,2) + 570000*r(58,Mak,2) + 580000*r(59,Mak,2) + 590000*r(60,Mak,2) + 600000*r(61,Mak,2) + 610000*r(62,Mak,2) + 620000*r(63,Mak,2) + 630000*r(64,Mak,2) + 640000*r(65,Mak,2) + 650000*r(66,Mak,2) + 660000*r(67,Mak,2)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/19/17 02:05:06 Page 15
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 437


     prod_starved  =G=  ensure that production can not be starved in each year     
     
      + 670000*r(68,Mak,2) + 680000*r(69,Mak,2) + 690000*r(70,Mak,2) + 700000*r(71,Mak,2) + 710000*r(72,Mak,2) + 720000*r(73,Mak,2) + 730000*r(74,Mak,2) + 740000*r(75,Mak,2) + 750000*r(76,Mak,2) + 760000*r(77,Mak,2) + 770000*r(78,Mak,2)
     
      + 780000*r(79,Mak,2) + 790000*r(80,Mak,2) + 800000*r(81,Mak,2) + 810000*r(82,Mak,2) + 820000*r(83,Mak,2) + 830000*r(84,Mak,2) + 840000*r(85,Mak,2) + 850000*r(86,Mak,2) + 860000*r(87,Mak,2) + 870000*r(88,Mak,2) + 880000*r(89,Mak,2)
     
      + 890000*r(90,Mak,2) + 900000*r(91,Mak,2) + 910000*r(92,Mak,2) + 920000*r(93,Mak,2) + 930000*r(94,Mak,2) + 940000*r(95,Mak,2) + 950000*r(96,Mak,2) + 960000*r(97,Mak,2) + 970000*r(98,Mak,2) + 980000*r(99,Mak,2) + 990000*r(100,Mak,2)
     
      + 1000000*r(101,Mak,2) + 1010000*r(102,Mak,2) + 1020000*r(103,Mak,2) + 1030000*r(104,Mak,2) + 1040000*r(105,Mak,2) + 1050000*r(106,Mak,2) + 1060000*r(107,Mak,2) =G= 0 ; (LHS = 0)
     
prod_starved(Mak,3)..  - s(Mak,3) + 10000*r(2,Mak,3) + 20000*r(3,Mak,3) + 30000*r(4,Mak,3) + 40000*r(5,Mak,3) + 50000*r(6,Mak,3) + 60000*r(7,Mak,3) + 70000*r(8,Mak,3) + 80000*r(9,Mak,3) + 90000*r(10,Mak,3) + 100000*r(11,Mak,3) + 110000*r(12,Mak,3)
     
      + 120000*r(13,Mak,3) + 130000*r(14,Mak,3) + 140000*r(15,Mak,3) + 150000*r(16,Mak,3) + 160000*r(17,Mak,3) + 170000*r(18,Mak,3) + 180000*r(19,Mak,3) + 190000*r(20,Mak,3) + 200000*r(21,Mak,3) + 210000*r(22,Mak,3) + 220000*r(23,Mak,3)
     
      + 230000*r(24,Mak,3) + 240000*r(25,Mak,3) + 250000*r(26,Mak,3) + 260000*r(27,Mak,3) + 270000*r(28,Mak,3) + 280000*r(29,Mak,3) + 290000*r(30,Mak,3) + 300000*r(31,Mak,3) + 310000*r(32,Mak,3) + 320000*r(33,Mak,3) + 330000*r(34,Mak,3)
     
      + 340000*r(35,Mak,3) + 350000*r(36,Mak,3) + 360000*r(37,Mak,3) + 370000*r(38,Mak,3) + 380000*r(39,Mak,3) + 390000*r(40,Mak,3) + 400000*r(41,Mak,3) + 410000*r(42,Mak,3) + 420000*r(43,Mak,3) + 430000*r(44,Mak,3) + 440000*r(45,Mak,3)
     
      + 450000*r(46,Mak,3) + 460000*r(47,Mak,3) + 470000*r(48,Mak,3) + 480000*r(49,Mak,3) + 490000*r(50,Mak,3) + 500000*r(51,Mak,3) + 510000*r(52,Mak,3) + 520000*r(53,Mak,3) + 530000*r(54,Mak,3) + 540000*r(55,Mak,3) + 550000*r(56,Mak,3)
     
      + 560000*r(57,Mak,3) + 570000*r(58,Mak,3) + 580000*r(59,Mak,3) + 590000*r(60,Mak,3) + 600000*r(61,Mak,3) + 610000*r(62,Mak,3) + 620000*r(63,Mak,3) + 630000*r(64,Mak,3) + 640000*r(65,Mak,3) + 650000*r(66,Mak,3) + 660000*r(67,Mak,3)
     
      + 670000*r(68,Mak,3) + 680000*r(69,Mak,3) + 690000*r(70,Mak,3) + 700000*r(71,Mak,3) + 710000*r(72,Mak,3) + 720000*r(73,Mak,3) + 730000*r(74,Mak,3) + 740000*r(75,Mak,3) + 750000*r(76,Mak,3) + 760000*r(77,Mak,3) + 770000*r(78,Mak,3)
     
      + 780000*r(79,Mak,3) + 790000*r(80,Mak,3) + 800000*r(81,Mak,3) + 810000*r(82,Mak,3) + 820000*r(83,Mak,3) + 830000*r(84,Mak,3) + 840000*r(85,Mak,3) + 850000*r(86,Mak,3) + 860000*r(87,Mak,3) + 870000*r(88,Mak,3) + 880000*r(89,Mak,3)
     
      + 890000*r(90,Mak,3) + 900000*r(91,Mak,3) + 910000*r(92,Mak,3) + 920000*r(93,Mak,3) + 930000*r(94,Mak,3) + 940000*r(95,Mak,3) + 950000*r(96,Mak,3) + 960000*r(97,Mak,3) + 970000*r(98,Mak,3) + 980000*r(99,Mak,3) + 990000*r(100,Mak,3)
     
      + 1000000*r(101,Mak,3) + 1010000*r(102,Mak,3) + 1020000*r(103,Mak,3) + 1030000*r(104,Mak,3) + 1040000*r(105,Mak,3) + 1050000*r(106,Mak,3) + 1060000*r(107,Mak,3) =G= 0 ; (LHS = 0)
     
prod_starved(Kuk,1)..  - s(Kuk,1) + 10000*r(2,Kuk,1) + 20000*r(3,Kuk,1) + 30000*r(4,Kuk,1) + 40000*r(5,Kuk,1) + 50000*r(6,Kuk,1) + 60000*r(7,Kuk,1) + 70000*r(8,Kuk,1) + 80000*r(9,Kuk,1) + 90000*r(10,Kuk,1) + 100000*r(11,Kuk,1) + 110000*r(12,Kuk,1)
     
      + 120000*r(13,Kuk,1) + 130000*r(14,Kuk,1) + 140000*r(15,Kuk,1) + 150000*r(16,Kuk,1) + 160000*r(17,Kuk,1) + 170000*r(18,Kuk,1) + 180000*r(19,Kuk,1) + 190000*r(20,Kuk,1) + 200000*r(21,Kuk,1) + 210000*r(22,Kuk,1) + 220000*r(23,Kuk,1)
     
      + 230000*r(24,Kuk,1) + 240000*r(25,Kuk,1) + 250000*r(26,Kuk,1) + 260000*r(27,Kuk,1) + 270000*r(28,Kuk,1) + 280000*r(29,Kuk,1) + 290000*r(30,Kuk,1) + 300000*r(31,Kuk,1) + 310000*r(32,Kuk,1) + 320000*r(33,Kuk,1) + 330000*r(34,Kuk,1)
     
      + 340000*r(35,Kuk,1) + 350000*r(36,Kuk,1) + 360000*r(37,Kuk,1) + 370000*r(38,Kuk,1) + 380000*r(39,Kuk,1) + 390000*r(40,Kuk,1) + 400000*r(41,Kuk,1) + 410000*r(42,Kuk,1) + 420000*r(43,Kuk,1) + 430000*r(44,Kuk,1) + 440000*r(45,Kuk,1)
     
      + 450000*r(46,Kuk,1) + 460000*r(47,Kuk,1) + 470000*r(48,Kuk,1) + 480000*r(49,Kuk,1) + 490000*r(50,Kuk,1) + 500000*r(51,Kuk,1) + 510000*r(52,Kuk,1) + 520000*r(53,Kuk,1) + 530000*r(54,Kuk,1) + 540000*r(55,Kuk,1) + 550000*r(56,Kuk,1)
     
      + 560000*r(57,Kuk,1) + 570000*r(58,Kuk,1) + 580000*r(59,Kuk,1) + 590000*r(60,Kuk,1) + 600000*r(61,Kuk,1) + 610000*r(62,Kuk,1) + 620000*r(63,Kuk,1) + 630000*r(64,Kuk,1) + 640000*r(65,Kuk,1) + 650000*r(66,Kuk,1) + 660000*r(67,Kuk,1)
     
      + 670000*r(68,Kuk,1) + 680000*r(69,Kuk,1) + 690000*r(70,Kuk,1) + 700000*r(71,Kuk,1) + 710000*r(72,Kuk,1) + 720000*r(73,Kuk,1) + 730000*r(74,Kuk,1) + 740000*r(75,Kuk,1) + 750000*r(76,Kuk,1) + 760000*r(77,Kuk,1) + 770000*r(78,Kuk,1)
     
      + 780000*r(79,Kuk,1) + 790000*r(80,Kuk,1) + 800000*r(81,Kuk,1) + 810000*r(82,Kuk,1) + 820000*r(83,Kuk,1) + 830000*r(84,Kuk,1) + 840000*r(85,Kuk,1) + 850000*r(86,Kuk,1) + 860000*r(87,Kuk,1) + 870000*r(88,Kuk,1) + 880000*r(89,Kuk,1)
     
      + 890000*r(90,Kuk,1) + 900000*r(91,Kuk,1) + 910000*r(92,Kuk,1) + 920000*r(93,Kuk,1) + 930000*r(94,Kuk,1) + 940000*r(95,Kuk,1) + 950000*r(96,Kuk,1) + 960000*r(97,Kuk,1) + 970000*r(98,Kuk,1) + 980000*r(99,Kuk,1) + 990000*r(100,Kuk,1)
     
      + 1000000*r(101,Kuk,1) + 1010000*r(102,Kuk,1) + 1020000*r(103,Kuk,1) + 1030000*r(104,Kuk,1) + 1040000*r(105,Kuk,1) + 1050000*r(106,Kuk,1) + 1060000*r(107,Kuk,1) =G= 0 ; (LHS = 0)
     
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/19/17 02:05:06 Page 16
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 437


     prod_starved  =G=  ensure that production can not be starved in each year

prod_starved(Kuk,2)..  - s(Kuk,2) + 10000*r(2,Kuk,2) + 20000*r(3,Kuk,2) + 30000*r(4,Kuk,2) + 40000*r(5,Kuk,2) + 50000*r(6,Kuk,2) + 60000*r(7,Kuk,2) + 70000*r(8,Kuk,2) + 80000*r(9,Kuk,2) + 90000*r(10,Kuk,2) + 100000*r(11,Kuk,2) + 110000*r(12,Kuk,2)
     
      + 120000*r(13,Kuk,2) + 130000*r(14,Kuk,2) + 140000*r(15,Kuk,2) + 150000*r(16,Kuk,2) + 160000*r(17,Kuk,2) + 170000*r(18,Kuk,2) + 180000*r(19,Kuk,2) + 190000*r(20,Kuk,2) + 200000*r(21,Kuk,2) + 210000*r(22,Kuk,2) + 220000*r(23,Kuk,2)
     
      + 230000*r(24,Kuk,2) + 240000*r(25,Kuk,2) + 250000*r(26,Kuk,2) + 260000*r(27,Kuk,2) + 270000*r(28,Kuk,2) + 280000*r(29,Kuk,2) + 290000*r(30,Kuk,2) + 300000*r(31,Kuk,2) + 310000*r(32,Kuk,2) + 320000*r(33,Kuk,2) + 330000*r(34,Kuk,2)
     
      + 340000*r(35,Kuk,2) + 350000*r(36,Kuk,2) + 360000*r(37,Kuk,2) + 370000*r(38,Kuk,2) + 380000*r(39,Kuk,2) + 390000*r(40,Kuk,2) + 400000*r(41,Kuk,2) + 410000*r(42,Kuk,2) + 420000*r(43,Kuk,2) + 430000*r(44,Kuk,2) + 440000*r(45,Kuk,2)
     
      + 450000*r(46,Kuk,2) + 460000*r(47,Kuk,2) + 470000*r(48,Kuk,2) + 480000*r(49,Kuk,2) + 490000*r(50,Kuk,2) + 500000*r(51,Kuk,2) + 510000*r(52,Kuk,2) + 520000*r(53,Kuk,2) + 530000*r(54,Kuk,2) + 540000*r(55,Kuk,2) + 550000*r(56,Kuk,2)
     
      + 560000*r(57,Kuk,2) + 570000*r(58,Kuk,2) + 580000*r(59,Kuk,2) + 590000*r(60,Kuk,2) + 600000*r(61,Kuk,2) + 610000*r(62,Kuk,2) + 620000*r(63,Kuk,2) + 630000*r(64,Kuk,2) + 640000*r(65,Kuk,2) + 650000*r(66,Kuk,2) + 660000*r(67,Kuk,2)
     
      + 670000*r(68,Kuk,2) + 680000*r(69,Kuk,2) + 690000*r(70,Kuk,2) + 700000*r(71,Kuk,2) + 710000*r(72,Kuk,2) + 720000*r(73,Kuk,2) + 730000*r(74,Kuk,2) + 740000*r(75,Kuk,2) + 750000*r(76,Kuk,2) + 760000*r(77,Kuk,2) + 770000*r(78,Kuk,2)
     
      + 780000*r(79,Kuk,2) + 790000*r(80,Kuk,2) + 800000*r(81,Kuk,2) + 810000*r(82,Kuk,2) + 820000*r(83,Kuk,2) + 830000*r(84,Kuk,2) + 840000*r(85,Kuk,2) + 850000*r(86,Kuk,2) + 860000*r(87,Kuk,2) + 870000*r(88,Kuk,2) + 880000*r(89,Kuk,2)
     
      + 890000*r(90,Kuk,2) + 900000*r(91,Kuk,2) + 910000*r(92,Kuk,2) + 920000*r(93,Kuk,2) + 930000*r(94,Kuk,2) + 940000*r(95,Kuk,2) + 950000*r(96,Kuk,2) + 960000*r(97,Kuk,2) + 970000*r(98,Kuk,2) + 980000*r(99,Kuk,2) + 990000*r(100,Kuk,2)
     
      + 1000000*r(101,Kuk,2) + 1010000*r(102,Kuk,2) + 1020000*r(103,Kuk,2) + 1030000*r(104,Kuk,2) + 1040000*r(105,Kuk,2) + 1050000*r(106,Kuk,2) + 1060000*r(107,Kuk,2) =G= 0 ; (LHS = 0)
     
prod_starved(Kuk,3)..  - s(Kuk,3) + 10000*r(2,Kuk,3) + 20000*r(3,Kuk,3) + 30000*r(4,Kuk,3) + 40000*r(5,Kuk,3) + 50000*r(6,Kuk,3) + 60000*r(7,Kuk,3) + 70000*r(8,Kuk,3) + 80000*r(9,Kuk,3) + 90000*r(10,Kuk,3) + 100000*r(11,Kuk,3) + 110000*r(12,Kuk,3)
     
      + 120000*r(13,Kuk,3) + 130000*r(14,Kuk,3) + 140000*r(15,Kuk,3) + 150000*r(16,Kuk,3) + 160000*r(17,Kuk,3) + 170000*r(18,Kuk,3) + 180000*r(19,Kuk,3) + 190000*r(20,Kuk,3) + 200000*r(21,Kuk,3) + 210000*r(22,Kuk,3) + 220000*r(23,Kuk,3)
     
      + 230000*r(24,Kuk,3) + 240000*r(25,Kuk,3) + 250000*r(26,Kuk,3) + 260000*r(27,Kuk,3) + 270000*r(28,Kuk,3) + 280000*r(29,Kuk,3) + 290000*r(30,Kuk,3) + 300000*r(31,Kuk,3) + 310000*r(32,Kuk,3) + 320000*r(33,Kuk,3) + 330000*r(34,Kuk,3)
     
      + 340000*r(35,Kuk,3) + 350000*r(36,Kuk,3) + 360000*r(37,Kuk,3) + 370000*r(38,Kuk,3) + 380000*r(39,Kuk,3) + 390000*r(40,Kuk,3) + 400000*r(41,Kuk,3) + 410000*r(42,Kuk,3) + 420000*r(43,Kuk,3) + 430000*r(44,Kuk,3) + 440000*r(45,Kuk,3)
     
      + 450000*r(46,Kuk,3) + 460000*r(47,Kuk,3) + 470000*r(48,Kuk,3) + 480000*r(49,Kuk,3) + 490000*r(50,Kuk,3) + 500000*r(51,Kuk,3) + 510000*r(52,Kuk,3) + 520000*r(53,Kuk,3) + 530000*r(54,Kuk,3) + 540000*r(55,Kuk,3) + 550000*r(56,Kuk,3)
     
      + 560000*r(57,Kuk,3) + 570000*r(58,Kuk,3) + 580000*r(59,Kuk,3) + 590000*r(60,Kuk,3) + 600000*r(61,Kuk,3) + 610000*r(62,Kuk,3) + 620000*r(63,Kuk,3) + 630000*r(64,Kuk,3) + 640000*r(65,Kuk,3) + 650000*r(66,Kuk,3) + 660000*r(67,Kuk,3)
     
      + 670000*r(68,Kuk,3) + 680000*r(69,Kuk,3) + 690000*r(70,Kuk,3) + 700000*r(71,Kuk,3) + 710000*r(72,Kuk,3) + 720000*r(73,Kuk,3) + 730000*r(74,Kuk,3) + 740000*r(75,Kuk,3) + 750000*r(76,Kuk,3) + 760000*r(77,Kuk,3) + 770000*r(78,Kuk,3)
     
      + 780000*r(79,Kuk,3) + 790000*r(80,Kuk,3) + 800000*r(81,Kuk,3) + 810000*r(82,Kuk,3) + 820000*r(83,Kuk,3) + 830000*r(84,Kuk,3) + 840000*r(85,Kuk,3) + 850000*r(86,Kuk,3) + 860000*r(87,Kuk,3) + 870000*r(88,Kuk,3) + 880000*r(89,Kuk,3)
     
      + 890000*r(90,Kuk,3) + 900000*r(91,Kuk,3) + 910000*r(92,Kuk,3) + 920000*r(93,Kuk,3) + 930000*r(94,Kuk,3) + 940000*r(95,Kuk,3) + 950000*r(96,Kuk,3) + 960000*r(97,Kuk,3) + 970000*r(98,Kuk,3) + 980000*r(99,Kuk,3) + 990000*r(100,Kuk,3)
     
      + 1000000*r(101,Kuk,3) + 1010000*r(102,Kuk,3) + 1020000*r(103,Kuk,3) + 1030000*r(104,Kuk,3) + 1040000*r(105,Kuk,3) + 1050000*r(106,Kuk,3) + 1060000*r(107,Kuk,3) =G= 0 ; (LHS = 0)
     
prod_starved(Kok,1)..  - s(Kok,1) + 10000*r(2,Kok,1) + 20000*r(3,Kok,1) + 30000*r(4,Kok,1) + 40000*r(5,Kok,1) + 50000*r(6,Kok,1) + 60000*r(7,Kok,1) + 70000*r(8,Kok,1) + 80000*r(9,Kok,1) + 90000*r(10,Kok,1) + 100000*r(11,Kok,1) + 110000*r(12,Kok,1)
     
      + 120000*r(13,Kok,1) + 130000*r(14,Kok,1) + 140000*r(15,Kok,1) + 150000*r(16,Kok,1) + 160000*r(17,Kok,1) + 170000*r(18,Kok,1) + 180000*r(19,Kok,1) + 190000*r(20,Kok,1) + 200000*r(21,Kok,1) + 210000*r(22,Kok,1) + 220000*r(23,Kok,1)
     
      + 230000*r(24,Kok,1) + 240000*r(25,Kok,1) + 250000*r(26,Kok,1) + 260000*r(27,Kok,1) + 270000*r(28,Kok,1) + 280000*r(29,Kok,1) + 290000*r(30,Kok,1) + 300000*r(31,Kok,1) + 310000*r(32,Kok,1) + 320000*r(33,Kok,1) + 330000*r(34,Kok,1)
     
      + 340000*r(35,Kok,1) + 350000*r(36,Kok,1) + 360000*r(37,Kok,1) + 370000*r(38,Kok,1) + 380000*r(39,Kok,1) + 390000*r(40,Kok,1) + 400000*r(41,Kok,1) + 410000*r(42,Kok,1) + 420000*r(43,Kok,1) + 430000*r(44,Kok,1) + 440000*r(45,Kok,1)
     
      + 450000*r(46,Kok,1) + 460000*r(47,Kok,1) + 470000*r(48,Kok,1) + 480000*r(49,Kok,1) + 490000*r(50,Kok,1) + 500000*r(51,Kok,1) + 510000*r(52,Kok,1) + 520000*r(53,Kok,1) + 530000*r(54,Kok,1) + 540000*r(55,Kok,1) + 550000*r(56,Kok,1)
     
      + 560000*r(57,Kok,1) + 570000*r(58,Kok,1) + 580000*r(59,Kok,1) + 590000*r(60,Kok,1) + 600000*r(61,Kok,1) + 610000*r(62,Kok,1) + 620000*r(63,Kok,1) + 630000*r(64,Kok,1) + 640000*r(65,Kok,1) + 650000*r(66,Kok,1) + 660000*r(67,Kok,1)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/19/17 02:05:06 Page 17
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 437


     prod_starved  =G=  ensure that production can not be starved in each year     
     
      + 670000*r(68,Kok,1) + 680000*r(69,Kok,1) + 690000*r(70,Kok,1) + 700000*r(71,Kok,1) + 710000*r(72,Kok,1) + 720000*r(73,Kok,1) + 730000*r(74,Kok,1) + 740000*r(75,Kok,1) + 750000*r(76,Kok,1) + 760000*r(77,Kok,1) + 770000*r(78,Kok,1)
     
      + 780000*r(79,Kok,1) + 790000*r(80,Kok,1) + 800000*r(81,Kok,1) + 810000*r(82,Kok,1) + 820000*r(83,Kok,1) + 830000*r(84,Kok,1) + 840000*r(85,Kok,1) + 850000*r(86,Kok,1) + 860000*r(87,Kok,1) + 870000*r(88,Kok,1) + 880000*r(89,Kok,1)
     
      + 890000*r(90,Kok,1) + 900000*r(91,Kok,1) + 910000*r(92,Kok,1) + 920000*r(93,Kok,1) + 930000*r(94,Kok,1) + 940000*r(95,Kok,1) + 950000*r(96,Kok,1) + 960000*r(97,Kok,1) + 970000*r(98,Kok,1) + 980000*r(99,Kok,1) + 990000*r(100,Kok,1)
     
      + 1000000*r(101,Kok,1) + 1010000*r(102,Kok,1) + 1020000*r(103,Kok,1) + 1030000*r(104,Kok,1) + 1040000*r(105,Kok,1) + 1050000*r(106,Kok,1) + 1060000*r(107,Kok,1) =G= 0 ; (LHS = 0)
     
prod_starved(Kok,2)..  - s(Kok,2) + 10000*r(2,Kok,2) + 20000*r(3,Kok,2) + 30000*r(4,Kok,2) + 40000*r(5,Kok,2) + 50000*r(6,Kok,2) + 60000*r(7,Kok,2) + 70000*r(8,Kok,2) + 80000*r(9,Kok,2) + 90000*r(10,Kok,2) + 100000*r(11,Kok,2) + 110000*r(12,Kok,2)
     
      + 120000*r(13,Kok,2) + 130000*r(14,Kok,2) + 140000*r(15,Kok,2) + 150000*r(16,Kok,2) + 160000*r(17,Kok,2) + 170000*r(18,Kok,2) + 180000*r(19,Kok,2) + 190000*r(20,Kok,2) + 200000*r(21,Kok,2) + 210000*r(22,Kok,2) + 220000*r(23,Kok,2)
     
      + 230000*r(24,Kok,2) + 240000*r(25,Kok,2) + 250000*r(26,Kok,2) + 260000*r(27,Kok,2) + 270000*r(28,Kok,2) + 280000*r(29,Kok,2) + 290000*r(30,Kok,2) + 300000*r(31,Kok,2) + 310000*r(32,Kok,2) + 320000*r(33,Kok,2) + 330000*r(34,Kok,2)
     
      + 340000*r(35,Kok,2) + 350000*r(36,Kok,2) + 360000*r(37,Kok,2) + 370000*r(38,Kok,2) + 380000*r(39,Kok,2) + 390000*r(40,Kok,2) + 400000*r(41,Kok,2) + 410000*r(42,Kok,2) + 420000*r(43,Kok,2) + 430000*r(44,Kok,2) + 440000*r(45,Kok,2)
     
      + 450000*r(46,Kok,2) + 460000*r(47,Kok,2) + 470000*r(48,Kok,2) + 480000*r(49,Kok,2) + 490000*r(50,Kok,2) + 500000*r(51,Kok,2) + 510000*r(52,Kok,2) + 520000*r(53,Kok,2) + 530000*r(54,Kok,2) + 540000*r(55,Kok,2) + 550000*r(56,Kok,2)
     
      + 560000*r(57,Kok,2) + 570000*r(58,Kok,2) + 580000*r(59,Kok,2) + 590000*r(60,Kok,2) + 600000*r(61,Kok,2) + 610000*r(62,Kok,2) + 620000*r(63,Kok,2) + 630000*r(64,Kok,2) + 640000*r(65,Kok,2) + 650000*r(66,Kok,2) + 660000*r(67,Kok,2)
     
      + 670000*r(68,Kok,2) + 680000*r(69,Kok,2) + 690000*r(70,Kok,2) + 700000*r(71,Kok,2) + 710000*r(72,Kok,2) + 720000*r(73,Kok,2) + 730000*r(74,Kok,2) + 740000*r(75,Kok,2) + 750000*r(76,Kok,2) + 760000*r(77,Kok,2) + 770000*r(78,Kok,2)
     
      + 780000*r(79,Kok,2) + 790000*r(80,Kok,2) + 800000*r(81,Kok,2) + 810000*r(82,Kok,2) + 820000*r(83,Kok,2) + 830000*r(84,Kok,2) + 840000*r(85,Kok,2) + 850000*r(86,Kok,2) + 860000*r(87,Kok,2) + 870000*r(88,Kok,2) + 880000*r(89,Kok,2)
     
      + 890000*r(90,Kok,2) + 900000*r(91,Kok,2) + 910000*r(92,Kok,2) + 920000*r(93,Kok,2) + 930000*r(94,Kok,2) + 940000*r(95,Kok,2) + 950000*r(96,Kok,2) + 960000*r(97,Kok,2) + 970000*r(98,Kok,2) + 980000*r(99,Kok,2) + 990000*r(100,Kok,2)
     
      + 1000000*r(101,Kok,2) + 1010000*r(102,Kok,2) + 1020000*r(103,Kok,2) + 1030000*r(104,Kok,2) + 1040000*r(105,Kok,2) + 1050000*r(106,Kok,2) + 1060000*r(107,Kok,2) =G= 0 ; (LHS = 0)
     
prod_starved(Kok,3)..  - s(Kok,3) + 10000*r(2,Kok,3) + 20000*r(3,Kok,3) + 30000*r(4,Kok,3) + 40000*r(5,Kok,3) + 50000*r(6,Kok,3) + 60000*r(7,Kok,3) + 70000*r(8,Kok,3) + 80000*r(9,Kok,3) + 90000*r(10,Kok,3) + 100000*r(11,Kok,3) + 110000*r(12,Kok,3)
     
      + 120000*r(13,Kok,3) + 130000*r(14,Kok,3) + 140000*r(15,Kok,3) + 150000*r(16,Kok,3) + 160000*r(17,Kok,3) + 170000*r(18,Kok,3) + 180000*r(19,Kok,3) + 190000*r(20,Kok,3) + 200000*r(21,Kok,3) + 210000*r(22,Kok,3) + 220000*r(23,Kok,3)
     
      + 230000*r(24,Kok,3) + 240000*r(25,Kok,3) + 250000*r(26,Kok,3) + 260000*r(27,Kok,3) + 270000*r(28,Kok,3) + 280000*r(29,Kok,3) + 290000*r(30,Kok,3) + 300000*r(31,Kok,3) + 310000*r(32,Kok,3) + 320000*r(33,Kok,3) + 330000*r(34,Kok,3)
     
      + 340000*r(35,Kok,3) + 350000*r(36,Kok,3) + 360000*r(37,Kok,3) + 370000*r(38,Kok,3) + 380000*r(39,Kok,3) + 390000*r(40,Kok,3) + 400000*r(41,Kok,3) + 410000*r(42,Kok,3) + 420000*r(43,Kok,3) + 430000*r(44,Kok,3) + 440000*r(45,Kok,3)
     
      + 450000*r(46,Kok,3) + 460000*r(47,Kok,3) + 470000*r(48,Kok,3) + 480000*r(49,Kok,3) + 490000*r(50,Kok,3) + 500000*r(51,Kok,3) + 510000*r(52,Kok,3) + 520000*r(53,Kok,3) + 530000*r(54,Kok,3) + 540000*r(55,Kok,3) + 550000*r(56,Kok,3)
     
      + 560000*r(57,Kok,3) + 570000*r(58,Kok,3) + 580000*r(59,Kok,3) + 590000*r(60,Kok,3) + 600000*r(61,Kok,3) + 610000*r(62,Kok,3) + 620000*r(63,Kok,3) + 630000*r(64,Kok,3) + 640000*r(65,Kok,3) + 650000*r(66,Kok,3) + 660000*r(67,Kok,3)
     
      + 670000*r(68,Kok,3) + 680000*r(69,Kok,3) + 690000*r(70,Kok,3) + 700000*r(71,Kok,3) + 710000*r(72,Kok,3) + 720000*r(73,Kok,3) + 730000*r(74,Kok,3) + 740000*r(75,Kok,3) + 750000*r(76,Kok,3) + 760000*r(77,Kok,3) + 770000*r(78,Kok,3)
     
      + 780000*r(79,Kok,3) + 790000*r(80,Kok,3) + 800000*r(81,Kok,3) + 810000*r(82,Kok,3) + 820000*r(83,Kok,3) + 830000*r(84,Kok,3) + 840000*r(85,Kok,3) + 850000*r(86,Kok,3) + 860000*r(87,Kok,3) + 870000*r(88,Kok,3) + 880000*r(89,Kok,3)
     
      + 890000*r(90,Kok,3) + 900000*r(91,Kok,3) + 910000*r(92,Kok,3) + 920000*r(93,Kok,3) + 930000*r(94,Kok,3) + 940000*r(95,Kok,3) + 950000*r(96,Kok,3) + 960000*r(97,Kok,3) + 970000*r(98,Kok,3) + 980000*r(99,Kok,3) + 990000*r(100,Kok,3)
     
      + 1000000*r(101,Kok,3) + 1010000*r(102,Kok,3) + 1020000*r(103,Kok,3) + 1030000*r(104,Kok,3) + 1040000*r(105,Kok,3) + 1050000*r(106,Kok,3) + 1060000*r(107,Kok,3) =G= 0 ; (LHS = 0)
     
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/19/17 02:05:06 Page 18
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 437


---- Sold_Prod  =L=  we cant sell more than we produce in each year

Sold_Prod(Mas,1)..  - y(Mas,1) + 10000*u(2,Mas,EU,1) + 10000*u(2,Mas,IE,1) + 10000*u(2,Mas,PA,1) + 10000*u(2,Mas,KI,1) + 20000*u(3,Mas,EU,1) + 20000*u(3,Mas,IE,1) + 20000*u(3,Mas,PA,1) + 20000*u(3,Mas,KI,1) + 30000*u(4,Mas,EU,1) + 30000*u(4,Mas,IE,1)
     
      + 30000*u(4,Mas,PA,1) + 30000*u(4,Mas,KI,1) + 40000*u(5,Mas,EU,1) + 40000*u(5,Mas,IE,1) + 40000*u(5,Mas,PA,1) + 40000*u(5,Mas,KI,1) + 50000*u(6,Mas,EU,1) + 50000*u(6,Mas,IE,1) + 50000*u(6,Mas,PA,1) + 50000*u(6,Mas,KI,1) + 60000*u(7,Mas,EU,1)
     
      + 60000*u(7,Mas,IE,1) + 60000*u(7,Mas,PA,1) + 60000*u(7,Mas,KI,1) + 70000*u(8,Mas,EU,1) + 70000*u(8,Mas,IE,1) + 70000*u(8,Mas,PA,1) + 70000*u(8,Mas,KI,1) + 80000*u(9,Mas,EU,1) + 80000*u(9,Mas,IE,1) + 80000*u(9,Mas,PA,1) + 80000*u(9,Mas,KI,1)
     
      + 90000*u(10,Mas,EU,1) + 90000*u(10,Mas,IE,1) + 90000*u(10,Mas,PA,1) + 90000*u(10,Mas,KI,1) + 100000*u(11,Mas,EU,1) + 100000*u(11,Mas,IE,1) + 100000*u(11,Mas,PA,1) + 100000*u(11,Mas,KI,1) + 110000*u(12,Mas,EU,1) + 110000*u(12,Mas,IE,1)
     
      + 110000*u(12,Mas,PA,1) + 110000*u(12,Mas,KI,1) + 120000*u(13,Mas,EU,1) + 120000*u(13,Mas,IE,1) + 120000*u(13,Mas,PA,1) + 120000*u(13,Mas,KI,1) + 130000*u(14,Mas,EU,1) + 130000*u(14,Mas,IE,1) + 130000*u(14,Mas,PA,1) + 130000*u(14,Mas,KI,1)
     
      + 140000*u(15,Mas,EU,1) + 140000*u(15,Mas,IE,1) + 140000*u(15,Mas,PA,1) + 140000*u(15,Mas,KI,1) + 150000*u(16,Mas,EU,1) + 150000*u(16,Mas,IE,1) + 150000*u(16,Mas,PA,1) + 150000*u(16,Mas,KI,1) + 160000*u(17,Mas,EU,1) + 160000*u(17,Mas,IE,1)
     
      + 160000*u(17,Mas,PA,1) + 160000*u(17,Mas,KI,1) + 170000*u(18,Mas,EU,1) + 170000*u(18,Mas,IE,1) + 170000*u(18,Mas,PA,1) + 170000*u(18,Mas,KI,1) + 180000*u(19,Mas,EU,1) + 180000*u(19,Mas,IE,1) + 180000*u(19,Mas,PA,1) + 180000*u(19,Mas,KI,1)
     
      + 190000*u(20,Mas,EU,1) + 190000*u(20,Mas,IE,1) + 190000*u(20,Mas,PA,1) + 190000*u(20,Mas,KI,1) + 200000*u(21,Mas,EU,1) + 200000*u(21,Mas,IE,1) + 200000*u(21,Mas,PA,1) + 200000*u(21,Mas,KI,1) + 210000*u(22,Mas,EU,1) + 210000*u(22,Mas,IE,1)
     
      + 210000*u(22,Mas,PA,1) + 210000*u(22,Mas,KI,1) + 220000*u(23,Mas,EU,1) + 220000*u(23,Mas,IE,1) + 220000*u(23,Mas,PA,1) + 220000*u(23,Mas,KI,1) =L= 0 ; (LHS = 0)
     
Sold_Prod(Mas,2)..  - y(Mas,2) + 10000*u(2,Mas,EU,2) + 10000*u(2,Mas,IE,2) + 10000*u(2,Mas,PA,2) + 10000*u(2,Mas,KI,2) + 20000*u(3,Mas,EU,2) + 20000*u(3,Mas,IE,2) + 20000*u(3,Mas,PA,2) + 20000*u(3,Mas,KI,2) + 30000*u(4,Mas,EU,2) + 30000*u(4,Mas,IE,2)
     
      + 30000*u(4,Mas,PA,2) + 30000*u(4,Mas,KI,2) + 40000*u(5,Mas,EU,2) + 40000*u(5,Mas,IE,2) + 40000*u(5,Mas,PA,2) + 40000*u(5,Mas,KI,2) + 50000*u(6,Mas,EU,2) + 50000*u(6,Mas,IE,2) + 50000*u(6,Mas,PA,2) + 50000*u(6,Mas,KI,2) + 60000*u(7,Mas,EU,2)
     
      + 60000*u(7,Mas,IE,2) + 60000*u(7,Mas,PA,2) + 60000*u(7,Mas,KI,2) + 70000*u(8,Mas,EU,2) + 70000*u(8,Mas,IE,2) + 70000*u(8,Mas,PA,2) + 70000*u(8,Mas,KI,2) + 80000*u(9,Mas,EU,2) + 80000*u(9,Mas,IE,2) + 80000*u(9,Mas,PA,2) + 80000*u(9,Mas,KI,2)
     
      + 90000*u(10,Mas,EU,2) + 90000*u(10,Mas,IE,2) + 90000*u(10,Mas,PA,2) + 90000*u(10,Mas,KI,2) + 100000*u(11,Mas,EU,2) + 100000*u(11,Mas,IE,2) + 100000*u(11,Mas,PA,2) + 100000*u(11,Mas,KI,2) + 110000*u(12,Mas,EU,2) + 110000*u(12,Mas,IE,2)
     
      + 110000*u(12,Mas,PA,2) + 110000*u(12,Mas,KI,2) + 120000*u(13,Mas,EU,2) + 120000*u(13,Mas,IE,2) + 120000*u(13,Mas,PA,2) + 120000*u(13,Mas,KI,2) + 130000*u(14,Mas,EU,2) + 130000*u(14,Mas,IE,2) + 130000*u(14,Mas,PA,2) + 130000*u(14,Mas,KI,2)
     
      + 140000*u(15,Mas,EU,2) + 140000*u(15,Mas,IE,2) + 140000*u(15,Mas,PA,2) + 140000*u(15,Mas,KI,2) + 150000*u(16,Mas,EU,2) + 150000*u(16,Mas,IE,2) + 150000*u(16,Mas,PA,2) + 150000*u(16,Mas,KI,2) + 160000*u(17,Mas,EU,2) + 160000*u(17,Mas,IE,2)
     
      + 160000*u(17,Mas,PA,2) + 160000*u(17,Mas,KI,2) + 170000*u(18,Mas,EU,2) + 170000*u(18,Mas,IE,2) + 170000*u(18,Mas,PA,2) + 170000*u(18,Mas,KI,2) + 180000*u(19,Mas,EU,2) + 180000*u(19,Mas,IE,2) + 180000*u(19,Mas,PA,2) + 180000*u(19,Mas,KI,2)
     
      + 190000*u(20,Mas,EU,2) + 190000*u(20,Mas,IE,2) + 190000*u(20,Mas,PA,2) + 190000*u(20,Mas,KI,2) + 200000*u(21,Mas,EU,2) + 200000*u(21,Mas,IE,2) + 200000*u(21,Mas,PA,2) + 200000*u(21,Mas,KI,2) + 210000*u(22,Mas,EU,2) + 210000*u(22,Mas,IE,2)
     
      + 210000*u(22,Mas,PA,2) + 210000*u(22,Mas,KI,2) + 220000*u(23,Mas,EU,2) + 220000*u(23,Mas,IE,2) + 220000*u(23,Mas,PA,2) + 220000*u(23,Mas,KI,2) =L= 0 ; (LHS = 0)
     
Sold_Prod(Mas,3)..  - y(Mas,3) + 10000*u(2,Mas,EU,3) + 10000*u(2,Mas,IE,3) + 10000*u(2,Mas,PA,3) + 10000*u(2,Mas,KI,3) + 20000*u(3,Mas,EU,3) + 20000*u(3,Mas,IE,3) + 20000*u(3,Mas,PA,3) + 20000*u(3,Mas,KI,3) + 30000*u(4,Mas,EU,3) + 30000*u(4,Mas,IE,3)
     
      + 30000*u(4,Mas,PA,3) + 30000*u(4,Mas,KI,3) + 40000*u(5,Mas,EU,3) + 40000*u(5,Mas,IE,3) + 40000*u(5,Mas,PA,3) + 40000*u(5,Mas,KI,3) + 50000*u(6,Mas,EU,3) + 50000*u(6,Mas,IE,3) + 50000*u(6,Mas,PA,3) + 50000*u(6,Mas,KI,3) + 60000*u(7,Mas,EU,3)
     
      + 60000*u(7,Mas,IE,3) + 60000*u(7,Mas,PA,3) + 60000*u(7,Mas,KI,3) + 70000*u(8,Mas,EU,3) + 70000*u(8,Mas,IE,3) + 70000*u(8,Mas,PA,3) + 70000*u(8,Mas,KI,3) + 80000*u(9,Mas,EU,3) + 80000*u(9,Mas,IE,3) + 80000*u(9,Mas,PA,3) + 80000*u(9,Mas,KI,3)
     
      + 90000*u(10,Mas,EU,3) + 90000*u(10,Mas,IE,3) + 90000*u(10,Mas,PA,3) + 90000*u(10,Mas,KI,3) + 100000*u(11,Mas,EU,3) + 100000*u(11,Mas,IE,3) + 100000*u(11,Mas,PA,3) + 100000*u(11,Mas,KI,3) + 110000*u(12,Mas,EU,3) + 110000*u(12,Mas,IE,3)
     
      + 110000*u(12,Mas,PA,3) + 110000*u(12,Mas,KI,3) + 120000*u(13,Mas,EU,3) + 120000*u(13,Mas,IE,3) + 120000*u(13,Mas,PA,3) + 120000*u(13,Mas,KI,3) + 130000*u(14,Mas,EU,3) + 130000*u(14,Mas,IE,3) + 130000*u(14,Mas,PA,3) + 130000*u(14,Mas,KI,3)
     
      + 140000*u(15,Mas,EU,3) + 140000*u(15,Mas,IE,3) + 140000*u(15,Mas,PA,3) + 140000*u(15,Mas,KI,3) + 150000*u(16,Mas,EU,3) + 150000*u(16,Mas,IE,3) + 150000*u(16,Mas,PA,3) + 150000*u(16,Mas,KI,3) + 160000*u(17,Mas,EU,3) + 160000*u(17,Mas,IE,3)
     
      + 160000*u(17,Mas,PA,3) + 160000*u(17,Mas,KI,3) + 170000*u(18,Mas,EU,3) + 170000*u(18,Mas,IE,3) + 170000*u(18,Mas,PA,3) + 170000*u(18,Mas,KI,3) + 180000*u(19,Mas,EU,3) + 180000*u(19,Mas,IE,3) + 180000*u(19,Mas,PA,3) + 180000*u(19,Mas,KI,3)
     
      + 190000*u(20,Mas,EU,3) + 190000*u(20,Mas,IE,3) + 190000*u(20,Mas,PA,3) + 190000*u(20,Mas,KI,3) + 200000*u(21,Mas,EU,3) + 200000*u(21,Mas,IE,3) + 200000*u(21,Mas,PA,3) + 200000*u(21,Mas,KI,3) + 210000*u(22,Mas,EU,3) + 210000*u(22,Mas,IE,3)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/19/17 02:05:06 Page 19
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 437


     Sold_Prod  =L=  we cant sell more than we produce in each year     
     
      + 210000*u(22,Mas,PA,3) + 210000*u(22,Mas,KI,3) + 220000*u(23,Mas,EU,3) + 220000*u(23,Mas,IE,3) + 220000*u(23,Mas,PA,3) + 220000*u(23,Mas,KI,3) =L= 0 ; (LHS = 0)
     
Sold_Prod(Kus,1)..  - y(Kus,1) =L= 0 ; (LHS = 0)
     
Sold_Prod(Kus,2)..  - y(Kus,2) =L= 0 ; (LHS = 0)
     
Sold_Prod(Kus,3)..  - y(Kus,3) =L= 0 ; (LHS = 0)
     
Sold_Prod(Kos,1)..  - y(Kos,1) + 10000*u(2,Kos,EU,1) + 10000*u(2,Kos,IE,1) + 10000*u(2,Kos,PA,1) + 10000*u(2,Kos,KI,1) + 20000*u(3,Kos,EU,1) + 20000*u(3,Kos,IE,1) + 20000*u(3,Kos,PA,1) + 20000*u(3,Kos,KI,1) + 30000*u(4,Kos,EU,1) + 30000*u(4,Kos,IE,1)
     
      + 30000*u(4,Kos,PA,1) + 30000*u(4,Kos,KI,1) + 40000*u(5,Kos,EU,1) + 40000*u(5,Kos,IE,1) + 40000*u(5,Kos,PA,1) + 40000*u(5,Kos,KI,1) + 50000*u(6,Kos,EU,1) + 50000*u(6,Kos,IE,1) + 50000*u(6,Kos,PA,1) + 50000*u(6,Kos,KI,1) + 60000*u(7,Kos,EU,1)
     
      + 60000*u(7,Kos,IE,1) + 60000*u(7,Kos,PA,1) + 60000*u(7,Kos,KI,1) + 70000*u(8,Kos,EU,1) + 70000*u(8,Kos,IE,1) + 70000*u(8,Kos,PA,1) + 70000*u(8,Kos,KI,1) + 80000*u(9,Kos,EU,1) + 80000*u(9,Kos,IE,1) + 80000*u(9,Kos,PA,1) + 80000*u(9,Kos,KI,1)
     
      + 90000*u(10,Kos,EU,1) + 90000*u(10,Kos,IE,1) + 90000*u(10,Kos,PA,1) + 90000*u(10,Kos,KI,1) + 100000*u(11,Kos,EU,1) + 100000*u(11,Kos,IE,1) + 100000*u(11,Kos,PA,1) + 100000*u(11,Kos,KI,1) + 110000*u(12,Kos,EU,1) + 110000*u(12,Kos,IE,1)
     
      + 110000*u(12,Kos,PA,1) + 110000*u(12,Kos,KI,1) + 120000*u(13,Kos,EU,1) + 120000*u(13,Kos,IE,1) + 120000*u(13,Kos,PA,1) + 120000*u(13,Kos,KI,1) + 130000*u(14,Kos,EU,1) + 130000*u(14,Kos,IE,1) + 130000*u(14,Kos,PA,1) + 130000*u(14,Kos,KI,1)
     
      + 140000*u(15,Kos,EU,1) + 140000*u(15,Kos,IE,1) + 140000*u(15,Kos,PA,1) + 140000*u(15,Kos,KI,1) + 150000*u(16,Kos,EU,1) + 150000*u(16,Kos,IE,1) + 150000*u(16,Kos,PA,1) + 150000*u(16,Kos,KI,1) + 160000*u(17,Kos,EU,1) + 160000*u(17,Kos,IE,1)
     
      + 160000*u(17,Kos,PA,1) + 160000*u(17,Kos,KI,1) + 170000*u(18,Kos,EU,1) + 170000*u(18,Kos,IE,1) + 170000*u(18,Kos,PA,1) + 170000*u(18,Kos,KI,1) + 180000*u(19,Kos,EU,1) + 180000*u(19,Kos,IE,1) + 180000*u(19,Kos,PA,1) + 180000*u(19,Kos,KI,1)
     
      + 190000*u(20,Kos,EU,1) + 190000*u(20,Kos,IE,1) + 190000*u(20,Kos,PA,1) + 190000*u(20,Kos,KI,1) + 200000*u(21,Kos,EU,1) + 200000*u(21,Kos,IE,1) + 200000*u(21,Kos,PA,1) + 200000*u(21,Kos,KI,1) + 210000*u(22,Kos,EU,1) + 210000*u(22,Kos,IE,1)
     
      + 210000*u(22,Kos,PA,1) + 210000*u(22,Kos,KI,1) + 220000*u(23,Kos,EU,1) + 220000*u(23,Kos,IE,1) + 220000*u(23,Kos,PA,1) + 220000*u(23,Kos,KI,1) =L= 0 ; (LHS = 0)
     
Sold_Prod(Kos,2)..  - y(Kos,2) + 10000*u(2,Kos,EU,2) + 10000*u(2,Kos,IE,2) + 10000*u(2,Kos,PA,2) + 10000*u(2,Kos,KI,2) + 20000*u(3,Kos,EU,2) + 20000*u(3,Kos,IE,2) + 20000*u(3,Kos,PA,2) + 20000*u(3,Kos,KI,2) + 30000*u(4,Kos,EU,2) + 30000*u(4,Kos,IE,2)
     
      + 30000*u(4,Kos,PA,2) + 30000*u(4,Kos,KI,2) + 40000*u(5,Kos,EU,2) + 40000*u(5,Kos,IE,2) + 40000*u(5,Kos,PA,2) + 40000*u(5,Kos,KI,2) + 50000*u(6,Kos,EU,2) + 50000*u(6,Kos,IE,2) + 50000*u(6,Kos,PA,2) + 50000*u(6,Kos,KI,2) + 60000*u(7,Kos,EU,2)
     
      + 60000*u(7,Kos,IE,2) + 60000*u(7,Kos,PA,2) + 60000*u(7,Kos,KI,2) + 70000*u(8,Kos,EU,2) + 70000*u(8,Kos,IE,2) + 70000*u(8,Kos,PA,2) + 70000*u(8,Kos,KI,2) + 80000*u(9,Kos,EU,2) + 80000*u(9,Kos,IE,2) + 80000*u(9,Kos,PA,2) + 80000*u(9,Kos,KI,2)
     
      + 90000*u(10,Kos,EU,2) + 90000*u(10,Kos,IE,2) + 90000*u(10,Kos,PA,2) + 90000*u(10,Kos,KI,2) + 100000*u(11,Kos,EU,2) + 100000*u(11,Kos,IE,2) + 100000*u(11,Kos,PA,2) + 100000*u(11,Kos,KI,2) + 110000*u(12,Kos,EU,2) + 110000*u(12,Kos,IE,2)
     
      + 110000*u(12,Kos,PA,2) + 110000*u(12,Kos,KI,2) + 120000*u(13,Kos,EU,2) + 120000*u(13,Kos,IE,2) + 120000*u(13,Kos,PA,2) + 120000*u(13,Kos,KI,2) + 130000*u(14,Kos,EU,2) + 130000*u(14,Kos,IE,2) + 130000*u(14,Kos,PA,2) + 130000*u(14,Kos,KI,2)
     
      + 140000*u(15,Kos,EU,2) + 140000*u(15,Kos,IE,2) + 140000*u(15,Kos,PA,2) + 140000*u(15,Kos,KI,2) + 150000*u(16,Kos,EU,2) + 150000*u(16,Kos,IE,2) + 150000*u(16,Kos,PA,2) + 150000*u(16,Kos,KI,2) + 160000*u(17,Kos,EU,2) + 160000*u(17,Kos,IE,2)
     
      + 160000*u(17,Kos,PA,2) + 160000*u(17,Kos,KI,2) + 170000*u(18,Kos,EU,2) + 170000*u(18,Kos,IE,2) + 170000*u(18,Kos,PA,2) + 170000*u(18,Kos,KI,2) + 180000*u(19,Kos,EU,2) + 180000*u(19,Kos,IE,2) + 180000*u(19,Kos,PA,2) + 180000*u(19,Kos,KI,2)
     
      + 190000*u(20,Kos,EU,2) + 190000*u(20,Kos,IE,2) + 190000*u(20,Kos,PA,2) + 190000*u(20,Kos,KI,2) + 200000*u(21,Kos,EU,2) + 200000*u(21,Kos,IE,2) + 200000*u(21,Kos,PA,2) + 200000*u(21,Kos,KI,2) + 210000*u(22,Kos,EU,2) + 210000*u(22,Kos,IE,2)
     
      + 210000*u(22,Kos,PA,2) + 210000*u(22,Kos,KI,2) + 220000*u(23,Kos,EU,2) + 220000*u(23,Kos,IE,2) + 220000*u(23,Kos,PA,2) + 220000*u(23,Kos,KI,2) =L= 0 ; (LHS = 0)
     
Sold_Prod(Kos,3)..  - y(Kos,3) + 10000*u(2,Kos,EU,3) + 10000*u(2,Kos,IE,3) + 10000*u(2,Kos,PA,3) + 10000*u(2,Kos,KI,3) + 20000*u(3,Kos,EU,3) + 20000*u(3,Kos,IE,3) + 20000*u(3,Kos,PA,3) + 20000*u(3,Kos,KI,3) + 30000*u(4,Kos,EU,3) + 30000*u(4,Kos,IE,3)
     
      + 30000*u(4,Kos,PA,3) + 30000*u(4,Kos,KI,3) + 40000*u(5,Kos,EU,3) + 40000*u(5,Kos,IE,3) + 40000*u(5,Kos,PA,3) + 40000*u(5,Kos,KI,3) + 50000*u(6,Kos,EU,3) + 50000*u(6,Kos,IE,3) + 50000*u(6,Kos,PA,3) + 50000*u(6,Kos,KI,3) + 60000*u(7,Kos,EU,3)
     
      + 60000*u(7,Kos,IE,3) + 60000*u(7,Kos,PA,3) + 60000*u(7,Kos,KI,3) + 70000*u(8,Kos,EU,3) + 70000*u(8,Kos,IE,3) + 70000*u(8,Kos,PA,3) + 70000*u(8,Kos,KI,3) + 80000*u(9,Kos,EU,3) + 80000*u(9,Kos,IE,3) + 80000*u(9,Kos,PA,3) + 80000*u(9,Kos,KI,3)
     
      + 90000*u(10,Kos,EU,3) + 90000*u(10,Kos,IE,3) + 90000*u(10,Kos,PA,3) + 90000*u(10,Kos,KI,3) + 100000*u(11,Kos,EU,3) + 100000*u(11,Kos,IE,3) + 100000*u(11,Kos,PA,3) + 100000*u(11,Kos,KI,3) + 110000*u(12,Kos,EU,3) + 110000*u(12,Kos,IE,3)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/19/17 02:05:06 Page 20
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 437


     Sold_Prod  =L=  we cant sell more than we produce in each year     
     
      + 110000*u(12,Kos,PA,3) + 110000*u(12,Kos,KI,3) + 120000*u(13,Kos,EU,3) + 120000*u(13,Kos,IE,3) + 120000*u(13,Kos,PA,3) + 120000*u(13,Kos,KI,3) + 130000*u(14,Kos,EU,3) + 130000*u(14,Kos,IE,3) + 130000*u(14,Kos,PA,3) + 130000*u(14,Kos,KI,3)
     
      + 140000*u(15,Kos,EU,3) + 140000*u(15,Kos,IE,3) + 140000*u(15,Kos,PA,3) + 140000*u(15,Kos,KI,3) + 150000*u(16,Kos,EU,3) + 150000*u(16,Kos,IE,3) + 150000*u(16,Kos,PA,3) + 150000*u(16,Kos,KI,3) + 160000*u(17,Kos,EU,3) + 160000*u(17,Kos,IE,3)
     
      + 160000*u(17,Kos,PA,3) + 160000*u(17,Kos,KI,3) + 170000*u(18,Kos,EU,3) + 170000*u(18,Kos,IE,3) + 170000*u(18,Kos,PA,3) + 170000*u(18,Kos,KI,3) + 180000*u(19,Kos,EU,3) + 180000*u(19,Kos,IE,3) + 180000*u(19,Kos,PA,3) + 180000*u(19,Kos,KI,3)
     
      + 190000*u(20,Kos,EU,3) + 190000*u(20,Kos,IE,3) + 190000*u(20,Kos,PA,3) + 190000*u(20,Kos,KI,3) + 200000*u(21,Kos,EU,3) + 200000*u(21,Kos,IE,3) + 200000*u(21,Kos,PA,3) + 200000*u(21,Kos,KI,3) + 210000*u(22,Kos,EU,3) + 210000*u(22,Kos,IE,3)
     
      + 210000*u(22,Kos,PA,3) + 210000*u(22,Kos,KI,3) + 220000*u(23,Kos,EU,3) + 220000*u(23,Kos,IE,3) + 220000*u(23,Kos,PA,3) + 220000*u(23,Kos,KI,3) =L= 0 ; (LHS = 0)
     
Sold_Prod(Kuv,1)..  - y(Kuv,1) + 10000*u(2,Kuv,EU,1) + 10000*u(2,Kuv,IE,1) + 10000*u(2,Kuv,PA,1) + 10000*u(2,Kuv,KI,1) + 20000*u(3,Kuv,EU,1) + 20000*u(3,Kuv,IE,1) + 20000*u(3,Kuv,PA,1) + 20000*u(3,Kuv,KI,1) + 30000*u(4,Kuv,EU,1) + 30000*u(4,Kuv,IE,1)
     
      + 30000*u(4,Kuv,PA,1) + 30000*u(4,Kuv,KI,1) + 40000*u(5,Kuv,EU,1) + 40000*u(5,Kuv,IE,1) + 40000*u(5,Kuv,PA,1) + 40000*u(5,Kuv,KI,1) + 50000*u(6,Kuv,EU,1) + 50000*u(6,Kuv,IE,1) + 50000*u(6,Kuv,PA,1) + 50000*u(6,Kuv,KI,1) + 60000*u(7,Kuv,EU,1)
     
      + 60000*u(7,Kuv,IE,1) + 60000*u(7,Kuv,PA,1) + 60000*u(7,Kuv,KI,1) + 70000*u(8,Kuv,EU,1) + 70000*u(8,Kuv,IE,1) + 70000*u(8,Kuv,PA,1) + 70000*u(8,Kuv,KI,1) + 80000*u(9,Kuv,EU,1) + 80000*u(9,Kuv,IE,1) + 80000*u(9,Kuv,PA,1) + 80000*u(9,Kuv,KI,1)
     
      + 90000*u(10,Kuv,EU,1) + 90000*u(10,Kuv,IE,1) + 90000*u(10,Kuv,PA,1) + 90000*u(10,Kuv,KI,1) + 100000*u(11,Kuv,EU,1) + 100000*u(11,Kuv,IE,1) + 100000*u(11,Kuv,PA,1) + 100000*u(11,Kuv,KI,1) + 110000*u(12,Kuv,EU,1) + 110000*u(12,Kuv,IE,1)
     
      + 110000*u(12,Kuv,PA,1) + 110000*u(12,Kuv,KI,1) + 120000*u(13,Kuv,EU,1) + 120000*u(13,Kuv,IE,1) + 120000*u(13,Kuv,PA,1) + 120000*u(13,Kuv,KI,1) + 130000*u(14,Kuv,EU,1) + 130000*u(14,Kuv,IE,1) + 130000*u(14,Kuv,PA,1) + 130000*u(14,Kuv,KI,1)
     
      + 140000*u(15,Kuv,EU,1) + 140000*u(15,Kuv,IE,1) + 140000*u(15,Kuv,PA,1) + 140000*u(15,Kuv,KI,1) + 150000*u(16,Kuv,EU,1) + 150000*u(16,Kuv,IE,1) + 150000*u(16,Kuv,PA,1) + 150000*u(16,Kuv,KI,1) + 160000*u(17,Kuv,EU,1) + 160000*u(17,Kuv,IE,1)
     
      + 160000*u(17,Kuv,PA,1) + 160000*u(17,Kuv,KI,1) + 170000*u(18,Kuv,EU,1) + 170000*u(18,Kuv,IE,1) + 170000*u(18,Kuv,PA,1) + 170000*u(18,Kuv,KI,1) + 180000*u(19,Kuv,EU,1) + 180000*u(19,Kuv,IE,1) + 180000*u(19,Kuv,PA,1) + 180000*u(19,Kuv,KI,1)
     
      + 190000*u(20,Kuv,EU,1) + 190000*u(20,Kuv,IE,1) + 190000*u(20,Kuv,PA,1) + 190000*u(20,Kuv,KI,1) + 200000*u(21,Kuv,EU,1) + 200000*u(21,Kuv,IE,1) + 200000*u(21,Kuv,PA,1) + 200000*u(21,Kuv,KI,1) + 210000*u(22,Kuv,EU,1) + 210000*u(22,Kuv,IE,1)
     
      + 210000*u(22,Kuv,PA,1) + 210000*u(22,Kuv,KI,1) + 220000*u(23,Kuv,EU,1) + 220000*u(23,Kuv,IE,1) + 220000*u(23,Kuv,PA,1) + 220000*u(23,Kuv,KI,1) =L= 0 ; (LHS = 0)
     
Sold_Prod(Kuv,2)..  - y(Kuv,2) + 10000*u(2,Kuv,EU,2) + 10000*u(2,Kuv,IE,2) + 10000*u(2,Kuv,PA,2) + 10000*u(2,Kuv,KI,2) + 20000*u(3,Kuv,EU,2) + 20000*u(3,Kuv,IE,2) + 20000*u(3,Kuv,PA,2) + 20000*u(3,Kuv,KI,2) + 30000*u(4,Kuv,EU,2) + 30000*u(4,Kuv,IE,2)
     
      + 30000*u(4,Kuv,PA,2) + 30000*u(4,Kuv,KI,2) + 40000*u(5,Kuv,EU,2) + 40000*u(5,Kuv,IE,2) + 40000*u(5,Kuv,PA,2) + 40000*u(5,Kuv,KI,2) + 50000*u(6,Kuv,EU,2) + 50000*u(6,Kuv,IE,2) + 50000*u(6,Kuv,PA,2) + 50000*u(6,Kuv,KI,2) + 60000*u(7,Kuv,EU,2)
     
      + 60000*u(7,Kuv,IE,2) + 60000*u(7,Kuv,PA,2) + 60000*u(7,Kuv,KI,2) + 70000*u(8,Kuv,EU,2) + 70000*u(8,Kuv,IE,2) + 70000*u(8,Kuv,PA,2) + 70000*u(8,Kuv,KI,2) + 80000*u(9,Kuv,EU,2) + 80000*u(9,Kuv,IE,2) + 80000*u(9,Kuv,PA,2) + 80000*u(9,Kuv,KI,2)
     
      + 90000*u(10,Kuv,EU,2) + 90000*u(10,Kuv,IE,2) + 90000*u(10,Kuv,PA,2) + 90000*u(10,Kuv,KI,2) + 100000*u(11,Kuv,EU,2) + 100000*u(11,Kuv,IE,2) + 100000*u(11,Kuv,PA,2) + 100000*u(11,Kuv,KI,2) + 110000*u(12,Kuv,EU,2) + 110000*u(12,Kuv,IE,2)
     
      + 110000*u(12,Kuv,PA,2) + 110000*u(12,Kuv,KI,2) + 120000*u(13,Kuv,EU,2) + 120000*u(13,Kuv,IE,2) + 120000*u(13,Kuv,PA,2) + 120000*u(13,Kuv,KI,2) + 130000*u(14,Kuv,EU,2) + 130000*u(14,Kuv,IE,2) + 130000*u(14,Kuv,PA,2) + 130000*u(14,Kuv,KI,2)
     
      + 140000*u(15,Kuv,EU,2) + 140000*u(15,Kuv,IE,2) + 140000*u(15,Kuv,PA,2) + 140000*u(15,Kuv,KI,2) + 150000*u(16,Kuv,EU,2) + 150000*u(16,Kuv,IE,2) + 150000*u(16,Kuv,PA,2) + 150000*u(16,Kuv,KI,2) + 160000*u(17,Kuv,EU,2) + 160000*u(17,Kuv,IE,2)
     
      + 160000*u(17,Kuv,PA,2) + 160000*u(17,Kuv,KI,2) + 170000*u(18,Kuv,EU,2) + 170000*u(18,Kuv,IE,2) + 170000*u(18,Kuv,PA,2) + 170000*u(18,Kuv,KI,2) + 180000*u(19,Kuv,EU,2) + 180000*u(19,Kuv,IE,2) + 180000*u(19,Kuv,PA,2) + 180000*u(19,Kuv,KI,2)
     
      + 190000*u(20,Kuv,EU,2) + 190000*u(20,Kuv,IE,2) + 190000*u(20,Kuv,PA,2) + 190000*u(20,Kuv,KI,2) + 200000*u(21,Kuv,EU,2) + 200000*u(21,Kuv,IE,2) + 200000*u(21,Kuv,PA,2) + 200000*u(21,Kuv,KI,2) + 210000*u(22,Kuv,EU,2) + 210000*u(22,Kuv,IE,2)
     
      + 210000*u(22,Kuv,PA,2) + 210000*u(22,Kuv,KI,2) + 220000*u(23,Kuv,EU,2) + 220000*u(23,Kuv,IE,2) + 220000*u(23,Kuv,PA,2) + 220000*u(23,Kuv,KI,2) =L= 0 ; (LHS = 0)
     
Sold_Prod(Kuv,3)..  - y(Kuv,3) + 10000*u(2,Kuv,EU,3) + 10000*u(2,Kuv,IE,3) + 10000*u(2,Kuv,PA,3) + 10000*u(2,Kuv,KI,3) + 20000*u(3,Kuv,EU,3) + 20000*u(3,Kuv,IE,3) + 20000*u(3,Kuv,PA,3) + 20000*u(3,Kuv,KI,3) + 30000*u(4,Kuv,EU,3) + 30000*u(4,Kuv,IE,3)
     
      + 30000*u(4,Kuv,PA,3) + 30000*u(4,Kuv,KI,3) + 40000*u(5,Kuv,EU,3) + 40000*u(5,Kuv,IE,3) + 40000*u(5,Kuv,PA,3) + 40000*u(5,Kuv,KI,3) + 50000*u(6,Kuv,EU,3) + 50000*u(6,Kuv,IE,3) + 50000*u(6,Kuv,PA,3) + 50000*u(6,Kuv,KI,3) + 60000*u(7,Kuv,EU,3)
     
      + 60000*u(7,Kuv,IE,3) + 60000*u(7,Kuv,PA,3) + 60000*u(7,Kuv,KI,3) + 70000*u(8,Kuv,EU,3) + 70000*u(8,Kuv,IE,3) + 70000*u(8,Kuv,PA,3) + 70000*u(8,Kuv,KI,3) + 80000*u(9,Kuv,EU,3) + 80000*u(9,Kuv,IE,3) + 80000*u(9,Kuv,PA,3) + 80000*u(9,Kuv,KI,3)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/19/17 02:05:06 Page 21
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 437


     Sold_Prod  =L=  we cant sell more than we produce in each year     
     
      + 90000*u(10,Kuv,EU,3) + 90000*u(10,Kuv,IE,3) + 90000*u(10,Kuv,PA,3) + 90000*u(10,Kuv,KI,3) + 100000*u(11,Kuv,EU,3) + 100000*u(11,Kuv,IE,3) + 100000*u(11,Kuv,PA,3) + 100000*u(11,Kuv,KI,3) + 110000*u(12,Kuv,EU,3) + 110000*u(12,Kuv,IE,3)
     
      + 110000*u(12,Kuv,PA,3) + 110000*u(12,Kuv,KI,3) + 120000*u(13,Kuv,EU,3) + 120000*u(13,Kuv,IE,3) + 120000*u(13,Kuv,PA,3) + 120000*u(13,Kuv,KI,3) + 130000*u(14,Kuv,EU,3) + 130000*u(14,Kuv,IE,3) + 130000*u(14,Kuv,PA,3) + 130000*u(14,Kuv,KI,3)
     
      + 140000*u(15,Kuv,EU,3) + 140000*u(15,Kuv,IE,3) + 140000*u(15,Kuv,PA,3) + 140000*u(15,Kuv,KI,3) + 150000*u(16,Kuv,EU,3) + 150000*u(16,Kuv,IE,3) + 150000*u(16,Kuv,PA,3) + 150000*u(16,Kuv,KI,3) + 160000*u(17,Kuv,EU,3) + 160000*u(17,Kuv,IE,3)
     
      + 160000*u(17,Kuv,PA,3) + 160000*u(17,Kuv,KI,3) + 170000*u(18,Kuv,EU,3) + 170000*u(18,Kuv,IE,3) + 170000*u(18,Kuv,PA,3) + 170000*u(18,Kuv,KI,3) + 180000*u(19,Kuv,EU,3) + 180000*u(19,Kuv,IE,3) + 180000*u(19,Kuv,PA,3) + 180000*u(19,Kuv,KI,3)
     
      + 190000*u(20,Kuv,EU,3) + 190000*u(20,Kuv,IE,3) + 190000*u(20,Kuv,PA,3) + 190000*u(20,Kuv,KI,3) + 200000*u(21,Kuv,EU,3) + 200000*u(21,Kuv,IE,3) + 200000*u(21,Kuv,PA,3) + 200000*u(21,Kuv,KI,3) + 210000*u(22,Kuv,EU,3) + 210000*u(22,Kuv,IE,3)
     
      + 210000*u(22,Kuv,PA,3) + 210000*u(22,Kuv,KI,3) + 220000*u(23,Kuv,EU,3) + 220000*u(23,Kuv,IE,3) + 220000*u(23,Kuv,PA,3) + 220000*u(23,Kuv,KI,3) =L= 0 ; (LHS = 0)
     
Sold_Prod(Kov,1)..  - y(Kov,1) + 10000*u(2,Kov,EU,1) + 10000*u(2,Kov,IE,1) + 10000*u(2,Kov,PA,1) + 10000*u(2,Kov,KI,1) + 20000*u(3,Kov,EU,1) + 20000*u(3,Kov,IE,1) + 20000*u(3,Kov,PA,1) + 20000*u(3,Kov,KI,1) + 30000*u(4,Kov,EU,1) + 30000*u(4,Kov,IE,1)
     
      + 30000*u(4,Kov,PA,1) + 30000*u(4,Kov,KI,1) + 40000*u(5,Kov,EU,1) + 40000*u(5,Kov,IE,1) + 40000*u(5,Kov,PA,1) + 40000*u(5,Kov,KI,1) + 50000*u(6,Kov,EU,1) + 50000*u(6,Kov,IE,1) + 50000*u(6,Kov,PA,1) + 50000*u(6,Kov,KI,1) + 60000*u(7,Kov,EU,1)
     
      + 60000*u(7,Kov,IE,1) + 60000*u(7,Kov,PA,1) + 60000*u(7,Kov,KI,1) + 70000*u(8,Kov,EU,1) + 70000*u(8,Kov,IE,1) + 70000*u(8,Kov,PA,1) + 70000*u(8,Kov,KI,1) + 80000*u(9,Kov,EU,1) + 80000*u(9,Kov,IE,1) + 80000*u(9,Kov,PA,1) + 80000*u(9,Kov,KI,1)
     
      + 90000*u(10,Kov,EU,1) + 90000*u(10,Kov,IE,1) + 90000*u(10,Kov,PA,1) + 90000*u(10,Kov,KI,1) + 100000*u(11,Kov,EU,1) + 100000*u(11,Kov,IE,1) + 100000*u(11,Kov,PA,1) + 100000*u(11,Kov,KI,1) + 110000*u(12,Kov,EU,1) + 110000*u(12,Kov,IE,1)
     
      + 110000*u(12,Kov,PA,1) + 110000*u(12,Kov,KI,1) + 120000*u(13,Kov,EU,1) + 120000*u(13,Kov,IE,1) + 120000*u(13,Kov,PA,1) + 120000*u(13,Kov,KI,1) + 130000*u(14,Kov,EU,1) + 130000*u(14,Kov,IE,1) + 130000*u(14,Kov,PA,1) + 130000*u(14,Kov,KI,1)
     
      + 140000*u(15,Kov,EU,1) + 140000*u(15,Kov,IE,1) + 140000*u(15,Kov,PA,1) + 140000*u(15,Kov,KI,1) + 150000*u(16,Kov,EU,1) + 150000*u(16,Kov,IE,1) + 150000*u(16,Kov,PA,1) + 150000*u(16,Kov,KI,1) + 160000*u(17,Kov,EU,1) + 160000*u(17,Kov,IE,1)
     
      + 160000*u(17,Kov,PA,1) + 160000*u(17,Kov,KI,1) + 170000*u(18,Kov,EU,1) + 170000*u(18,Kov,IE,1) + 170000*u(18,Kov,PA,1) + 170000*u(18,Kov,KI,1) + 180000*u(19,Kov,EU,1) + 180000*u(19,Kov,IE,1) + 180000*u(19,Kov,PA,1) + 180000*u(19,Kov,KI,1)
     
      + 190000*u(20,Kov,EU,1) + 190000*u(20,Kov,IE,1) + 190000*u(20,Kov,PA,1) + 190000*u(20,Kov,KI,1) + 200000*u(21,Kov,EU,1) + 200000*u(21,Kov,IE,1) + 200000*u(21,Kov,PA,1) + 200000*u(21,Kov,KI,1) + 210000*u(22,Kov,EU,1) + 210000*u(22,Kov,IE,1)
     
      + 210000*u(22,Kov,PA,1) + 210000*u(22,Kov,KI,1) + 220000*u(23,Kov,EU,1) + 220000*u(23,Kov,IE,1) + 220000*u(23,Kov,PA,1) + 220000*u(23,Kov,KI,1) =L= 0 ; (LHS = 0)
     
Sold_Prod(Kov,2)..  - y(Kov,2) + 10000*u(2,Kov,EU,2) + 10000*u(2,Kov,IE,2) + 10000*u(2,Kov,PA,2) + 10000*u(2,Kov,KI,2) + 20000*u(3,Kov,EU,2) + 20000*u(3,Kov,IE,2) + 20000*u(3,Kov,PA,2) + 20000*u(3,Kov,KI,2) + 30000*u(4,Kov,EU,2) + 30000*u(4,Kov,IE,2)
     
      + 30000*u(4,Kov,PA,2) + 30000*u(4,Kov,KI,2) + 40000*u(5,Kov,EU,2) + 40000*u(5,Kov,IE,2) + 40000*u(5,Kov,PA,2) + 40000*u(5,Kov,KI,2) + 50000*u(6,Kov,EU,2) + 50000*u(6,Kov,IE,2) + 50000*u(6,Kov,PA,2) + 50000*u(6,Kov,KI,2) + 60000*u(7,Kov,EU,2)
     
      + 60000*u(7,Kov,IE,2) + 60000*u(7,Kov,PA,2) + 60000*u(7,Kov,KI,2) + 70000*u(8,Kov,EU,2) + 70000*u(8,Kov,IE,2) + 70000*u(8,Kov,PA,2) + 70000*u(8,Kov,KI,2) + 80000*u(9,Kov,EU,2) + 80000*u(9,Kov,IE,2) + 80000*u(9,Kov,PA,2) + 80000*u(9,Kov,KI,2)
     
      + 90000*u(10,Kov,EU,2) + 90000*u(10,Kov,IE,2) + 90000*u(10,Kov,PA,2) + 90000*u(10,Kov,KI,2) + 100000*u(11,Kov,EU,2) + 100000*u(11,Kov,IE,2) + 100000*u(11,Kov,PA,2) + 100000*u(11,Kov,KI,2) + 110000*u(12,Kov,EU,2) + 110000*u(12,Kov,IE,2)
     
      + 110000*u(12,Kov,PA,2) + 110000*u(12,Kov,KI,2) + 120000*u(13,Kov,EU,2) + 120000*u(13,Kov,IE,2) + 120000*u(13,Kov,PA,2) + 120000*u(13,Kov,KI,2) + 130000*u(14,Kov,EU,2) + 130000*u(14,Kov,IE,2) + 130000*u(14,Kov,PA,2) + 130000*u(14,Kov,KI,2)
     
      + 140000*u(15,Kov,EU,2) + 140000*u(15,Kov,IE,2) + 140000*u(15,Kov,PA,2) + 140000*u(15,Kov,KI,2) + 150000*u(16,Kov,EU,2) + 150000*u(16,Kov,IE,2) + 150000*u(16,Kov,PA,2) + 150000*u(16,Kov,KI,2) + 160000*u(17,Kov,EU,2) + 160000*u(17,Kov,IE,2)
     
      + 160000*u(17,Kov,PA,2) + 160000*u(17,Kov,KI,2) + 170000*u(18,Kov,EU,2) + 170000*u(18,Kov,IE,2) + 170000*u(18,Kov,PA,2) + 170000*u(18,Kov,KI,2) + 180000*u(19,Kov,EU,2) + 180000*u(19,Kov,IE,2) + 180000*u(19,Kov,PA,2) + 180000*u(19,Kov,KI,2)
     
      + 190000*u(20,Kov,EU,2) + 190000*u(20,Kov,IE,2) + 190000*u(20,Kov,PA,2) + 190000*u(20,Kov,KI,2) + 200000*u(21,Kov,EU,2) + 200000*u(21,Kov,IE,2) + 200000*u(21,Kov,PA,2) + 200000*u(21,Kov,KI,2) + 210000*u(22,Kov,EU,2) + 210000*u(22,Kov,IE,2)
     
      + 210000*u(22,Kov,PA,2) + 210000*u(22,Kov,KI,2) + 220000*u(23,Kov,EU,2) + 220000*u(23,Kov,IE,2) + 220000*u(23,Kov,PA,2) + 220000*u(23,Kov,KI,2) =L= 0 ; (LHS = 0)
     
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/19/17 02:05:06 Page 22
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 437


     Sold_Prod  =L=  we cant sell more than we produce in each year

Sold_Prod(Kov,3)..  - y(Kov,3) + 10000*u(2,Kov,EU,3) + 10000*u(2,Kov,IE,3) + 10000*u(2,Kov,PA,3) + 10000*u(2,Kov,KI,3) + 20000*u(3,Kov,EU,3) + 20000*u(3,Kov,IE,3) + 20000*u(3,Kov,PA,3) + 20000*u(3,Kov,KI,3) + 30000*u(4,Kov,EU,3) + 30000*u(4,Kov,IE,3)
     
      + 30000*u(4,Kov,PA,3) + 30000*u(4,Kov,KI,3) + 40000*u(5,Kov,EU,3) + 40000*u(5,Kov,IE,3) + 40000*u(5,Kov,PA,3) + 40000*u(5,Kov,KI,3) + 50000*u(6,Kov,EU,3) + 50000*u(6,Kov,IE,3) + 50000*u(6,Kov,PA,3) + 50000*u(6,Kov,KI,3) + 60000*u(7,Kov,EU,3)
     
      + 60000*u(7,Kov,IE,3) + 60000*u(7,Kov,PA,3) + 60000*u(7,Kov,KI,3) + 70000*u(8,Kov,EU,3) + 70000*u(8,Kov,IE,3) + 70000*u(8,Kov,PA,3) + 70000*u(8,Kov,KI,3) + 80000*u(9,Kov,EU,3) + 80000*u(9,Kov,IE,3) + 80000*u(9,Kov,PA,3) + 80000*u(9,Kov,KI,3)
     
      + 90000*u(10,Kov,EU,3) + 90000*u(10,Kov,IE,3) + 90000*u(10,Kov,PA,3) + 90000*u(10,Kov,KI,3) + 100000*u(11,Kov,EU,3) + 100000*u(11,Kov,IE,3) + 100000*u(11,Kov,PA,3) + 100000*u(11,Kov,KI,3) + 110000*u(12,Kov,EU,3) + 110000*u(12,Kov,IE,3)
     
      + 110000*u(12,Kov,PA,3) + 110000*u(12,Kov,KI,3) + 120000*u(13,Kov,EU,3) + 120000*u(13,Kov,IE,3) + 120000*u(13,Kov,PA,3) + 120000*u(13,Kov,KI,3) + 130000*u(14,Kov,EU,3) + 130000*u(14,Kov,IE,3) + 130000*u(14,Kov,PA,3) + 130000*u(14,Kov,KI,3)
     
      + 140000*u(15,Kov,EU,3) + 140000*u(15,Kov,IE,3) + 140000*u(15,Kov,PA,3) + 140000*u(15,Kov,KI,3) + 150000*u(16,Kov,EU,3) + 150000*u(16,Kov,IE,3) + 150000*u(16,Kov,PA,3) + 150000*u(16,Kov,KI,3) + 160000*u(17,Kov,EU,3) + 160000*u(17,Kov,IE,3)
     
      + 160000*u(17,Kov,PA,3) + 160000*u(17,Kov,KI,3) + 170000*u(18,Kov,EU,3) + 170000*u(18,Kov,IE,3) + 170000*u(18,Kov,PA,3) + 170000*u(18,Kov,KI,3) + 180000*u(19,Kov,EU,3) + 180000*u(19,Kov,IE,3) + 180000*u(19,Kov,PA,3) + 180000*u(19,Kov,KI,3)
     
      + 190000*u(20,Kov,EU,3) + 190000*u(20,Kov,IE,3) + 190000*u(20,Kov,PA,3) + 190000*u(20,Kov,KI,3) + 200000*u(21,Kov,EU,3) + 200000*u(21,Kov,IE,3) + 200000*u(21,Kov,PA,3) + 200000*u(21,Kov,KI,3) + 210000*u(22,Kov,EU,3) + 210000*u(22,Kov,IE,3)
     
      + 210000*u(22,Kov,PA,3) + 210000*u(22,Kov,KI,3) + 220000*u(23,Kov,EU,3) + 220000*u(23,Kov,IE,3) + 220000*u(23,Kov,PA,3) + 220000*u(23,Kov,KI,3) =L= 0 ; (LHS = 0)
     
Sold_Prod(Hsel,1)..  - y(Hsel,1) + 10000*u(2,Hsel,EU,1) + 10000*u(2,Hsel,IE,1) + 10000*u(2,Hsel,PA,1) + 10000*u(2,Hsel,KI,1) + 20000*u(3,Hsel,EU,1) + 20000*u(3,Hsel,IE,1) + 20000*u(3,Hsel,PA,1) + 20000*u(3,Hsel,KI,1) + 30000*u(4,Hsel,EU,1)
     
      + 30000*u(4,Hsel,IE,1) + 30000*u(4,Hsel,PA,1) + 30000*u(4,Hsel,KI,1) + 40000*u(5,Hsel,EU,1) + 40000*u(5,Hsel,IE,1) + 40000*u(5,Hsel,PA,1) + 40000*u(5,Hsel,KI,1) + 50000*u(6,Hsel,EU,1) + 50000*u(6,Hsel,IE,1) + 50000*u(6,Hsel,PA,1)
     
      + 50000*u(6,Hsel,KI,1) + 60000*u(7,Hsel,EU,1) + 60000*u(7,Hsel,IE,1) + 60000*u(7,Hsel,PA,1) + 60000*u(7,Hsel,KI,1) + 70000*u(8,Hsel,EU,1) + 70000*u(8,Hsel,IE,1) + 70000*u(8,Hsel,PA,1) + 70000*u(8,Hsel,KI,1) + 80000*u(9,Hsel,EU,1)
     
      + 80000*u(9,Hsel,IE,1) + 80000*u(9,Hsel,PA,1) + 80000*u(9,Hsel,KI,1) + 90000*u(10,Hsel,EU,1) + 90000*u(10,Hsel,IE,1) + 90000*u(10,Hsel,PA,1) + 90000*u(10,Hsel,KI,1) + 100000*u(11,Hsel,EU,1) + 100000*u(11,Hsel,IE,1) + 100000*u(11,Hsel,PA,1)
     
      + 100000*u(11,Hsel,KI,1) + 110000*u(12,Hsel,EU,1) + 110000*u(12,Hsel,IE,1) + 110000*u(12,Hsel,PA,1) + 110000*u(12,Hsel,KI,1) + 120000*u(13,Hsel,EU,1) + 120000*u(13,Hsel,IE,1) + 120000*u(13,Hsel,PA,1) + 120000*u(13,Hsel,KI,1) + 130000*u(14,Hsel,EU,1)
     
      + 130000*u(14,Hsel,IE,1) + 130000*u(14,Hsel,PA,1) + 130000*u(14,Hsel,KI,1) + 140000*u(15,Hsel,EU,1) + 140000*u(15,Hsel,IE,1) + 140000*u(15,Hsel,PA,1) + 140000*u(15,Hsel,KI,1) + 150000*u(16,Hsel,EU,1) + 150000*u(16,Hsel,IE,1) + 150000*u(16,Hsel,PA,1)
     
      + 150000*u(16,Hsel,KI,1) + 160000*u(17,Hsel,EU,1) + 160000*u(17,Hsel,IE,1) + 160000*u(17,Hsel,PA,1) + 160000*u(17,Hsel,KI,1) + 170000*u(18,Hsel,EU,1) + 170000*u(18,Hsel,IE,1) + 170000*u(18,Hsel,PA,1) + 170000*u(18,Hsel,KI,1) + 180000*u(19,Hsel,EU,1)
     
      + 180000*u(19,Hsel,IE,1) + 180000*u(19,Hsel,PA,1) + 180000*u(19,Hsel,KI,1) + 190000*u(20,Hsel,EU,1) + 190000*u(20,Hsel,IE,1) + 190000*u(20,Hsel,PA,1) + 190000*u(20,Hsel,KI,1) + 200000*u(21,Hsel,EU,1) + 200000*u(21,Hsel,IE,1) + 200000*u(21,Hsel,PA,1)
     
      + 200000*u(21,Hsel,KI,1) + 210000*u(22,Hsel,EU,1) + 210000*u(22,Hsel,IE,1) + 210000*u(22,Hsel,PA,1) + 210000*u(22,Hsel,KI,1) + 220000*u(23,Hsel,EU,1) + 220000*u(23,Hsel,IE,1) + 220000*u(23,Hsel,PA,1) + 220000*u(23,Hsel,KI,1) =L= 0 ; (LHS = 0)
     
Sold_Prod(Hsel,2)..  - y(Hsel,2) + 10000*u(2,Hsel,EU,2) + 10000*u(2,Hsel,IE,2) + 10000*u(2,Hsel,PA,2) + 10000*u(2,Hsel,KI,2) + 20000*u(3,Hsel,EU,2) + 20000*u(3,Hsel,IE,2) + 20000*u(3,Hsel,PA,2) + 20000*u(3,Hsel,KI,2) + 30000*u(4,Hsel,EU,2)
     
      + 30000*u(4,Hsel,IE,2) + 30000*u(4,Hsel,PA,2) + 30000*u(4,Hsel,KI,2) + 40000*u(5,Hsel,EU,2) + 40000*u(5,Hsel,IE,2) + 40000*u(5,Hsel,PA,2) + 40000*u(5,Hsel,KI,2) + 50000*u(6,Hsel,EU,2) + 50000*u(6,Hsel,IE,2) + 50000*u(6,Hsel,PA,2)
     
      + 50000*u(6,Hsel,KI,2) + 60000*u(7,Hsel,EU,2) + 60000*u(7,Hsel,IE,2) + 60000*u(7,Hsel,PA,2) + 60000*u(7,Hsel,KI,2) + 70000*u(8,Hsel,EU,2) + 70000*u(8,Hsel,IE,2) + 70000*u(8,Hsel,PA,2) + 70000*u(8,Hsel,KI,2) + 80000*u(9,Hsel,EU,2)
     
      + 80000*u(9,Hsel,IE,2) + 80000*u(9,Hsel,PA,2) + 80000*u(9,Hsel,KI,2) + 90000*u(10,Hsel,EU,2) + 90000*u(10,Hsel,IE,2) + 90000*u(10,Hsel,PA,2) + 90000*u(10,Hsel,KI,2) + 100000*u(11,Hsel,EU,2) + 100000*u(11,Hsel,IE,2) + 100000*u(11,Hsel,PA,2)
     
      + 100000*u(11,Hsel,KI,2) + 110000*u(12,Hsel,EU,2) + 110000*u(12,Hsel,IE,2) + 110000*u(12,Hsel,PA,2) + 110000*u(12,Hsel,KI,2) + 120000*u(13,Hsel,EU,2) + 120000*u(13,Hsel,IE,2) + 120000*u(13,Hsel,PA,2) + 120000*u(13,Hsel,KI,2) + 130000*u(14,Hsel,EU,2)
     
      + 130000*u(14,Hsel,IE,2) + 130000*u(14,Hsel,PA,2) + 130000*u(14,Hsel,KI,2) + 140000*u(15,Hsel,EU,2) + 140000*u(15,Hsel,IE,2) + 140000*u(15,Hsel,PA,2) + 140000*u(15,Hsel,KI,2) + 150000*u(16,Hsel,EU,2) + 150000*u(16,Hsel,IE,2) + 150000*u(16,Hsel,PA,2)
     
      + 150000*u(16,Hsel,KI,2) + 160000*u(17,Hsel,EU,2) + 160000*u(17,Hsel,IE,2) + 160000*u(17,Hsel,PA,2) + 160000*u(17,Hsel,KI,2) + 170000*u(18,Hsel,EU,2) + 170000*u(18,Hsel,IE,2) + 170000*u(18,Hsel,PA,2) + 170000*u(18,Hsel,KI,2) + 180000*u(19,Hsel,EU,2)
     
      + 180000*u(19,Hsel,IE,2) + 180000*u(19,Hsel,PA,2) + 180000*u(19,Hsel,KI,2) + 190000*u(20,Hsel,EU,2) + 190000*u(20,Hsel,IE,2) + 190000*u(20,Hsel,PA,2) + 190000*u(20,Hsel,KI,2) + 200000*u(21,Hsel,EU,2) + 200000*u(21,Hsel,IE,2) + 200000*u(21,Hsel,PA,2)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/19/17 02:05:06 Page 23
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 437


     Sold_Prod  =L=  we cant sell more than we produce in each year     
     
      + 200000*u(21,Hsel,KI,2) + 210000*u(22,Hsel,EU,2) + 210000*u(22,Hsel,IE,2) + 210000*u(22,Hsel,PA,2) + 210000*u(22,Hsel,KI,2) + 220000*u(23,Hsel,EU,2) + 220000*u(23,Hsel,IE,2) + 220000*u(23,Hsel,PA,2) + 220000*u(23,Hsel,KI,2) =L= 0 ; (LHS = 0)
     
Sold_Prod(Hsel,3)..  - y(Hsel,3) + 10000*u(2,Hsel,EU,3) + 10000*u(2,Hsel,IE,3) + 10000*u(2,Hsel,PA,3) + 10000*u(2,Hsel,KI,3) + 20000*u(3,Hsel,EU,3) + 20000*u(3,Hsel,IE,3) + 20000*u(3,Hsel,PA,3) + 20000*u(3,Hsel,KI,3) + 30000*u(4,Hsel,EU,3)
     
      + 30000*u(4,Hsel,IE,3) + 30000*u(4,Hsel,PA,3) + 30000*u(4,Hsel,KI,3) + 40000*u(5,Hsel,EU,3) + 40000*u(5,Hsel,IE,3) + 40000*u(5,Hsel,PA,3) + 40000*u(5,Hsel,KI,3) + 50000*u(6,Hsel,EU,3) + 50000*u(6,Hsel,IE,3) + 50000*u(6,Hsel,PA,3)
     
      + 50000*u(6,Hsel,KI,3) + 60000*u(7,Hsel,EU,3) + 60000*u(7,Hsel,IE,3) + 60000*u(7,Hsel,PA,3) + 60000*u(7,Hsel,KI,3) + 70000*u(8,Hsel,EU,3) + 70000*u(8,Hsel,IE,3) + 70000*u(8,Hsel,PA,3) + 70000*u(8,Hsel,KI,3) + 80000*u(9,Hsel,EU,3)
     
      + 80000*u(9,Hsel,IE,3) + 80000*u(9,Hsel,PA,3) + 80000*u(9,Hsel,KI,3) + 90000*u(10,Hsel,EU,3) + 90000*u(10,Hsel,IE,3) + 90000*u(10,Hsel,PA,3) + 90000*u(10,Hsel,KI,3) + 100000*u(11,Hsel,EU,3) + 100000*u(11,Hsel,IE,3) + 100000*u(11,Hsel,PA,3)
     
      + 100000*u(11,Hsel,KI,3) + 110000*u(12,Hsel,EU,3) + 110000*u(12,Hsel,IE,3) + 110000*u(12,Hsel,PA,3) + 110000*u(12,Hsel,KI,3) + 120000*u(13,Hsel,EU,3) + 120000*u(13,Hsel,IE,3) + 120000*u(13,Hsel,PA,3) + 120000*u(13,Hsel,KI,3) + 130000*u(14,Hsel,EU,3)
     
      + 130000*u(14,Hsel,IE,3) + 130000*u(14,Hsel,PA,3) + 130000*u(14,Hsel,KI,3) + 140000*u(15,Hsel,EU,3) + 140000*u(15,Hsel,IE,3) + 140000*u(15,Hsel,PA,3) + 140000*u(15,Hsel,KI,3) + 150000*u(16,Hsel,EU,3) + 150000*u(16,Hsel,IE,3) + 150000*u(16,Hsel,PA,3)
     
      + 150000*u(16,Hsel,KI,3) + 160000*u(17,Hsel,EU,3) + 160000*u(17,Hsel,IE,3) + 160000*u(17,Hsel,PA,3) + 160000*u(17,Hsel,KI,3) + 170000*u(18,Hsel,EU,3) + 170000*u(18,Hsel,IE,3) + 170000*u(18,Hsel,PA,3) + 170000*u(18,Hsel,KI,3) + 180000*u(19,Hsel,EU,3)
     
      + 180000*u(19,Hsel,IE,3) + 180000*u(19,Hsel,PA,3) + 180000*u(19,Hsel,KI,3) + 190000*u(20,Hsel,EU,3) + 190000*u(20,Hsel,IE,3) + 190000*u(20,Hsel,PA,3) + 190000*u(20,Hsel,KI,3) + 200000*u(21,Hsel,EU,3) + 200000*u(21,Hsel,IE,3) + 200000*u(21,Hsel,PA,3)
     
      + 200000*u(21,Hsel,KI,3) + 210000*u(22,Hsel,EU,3) + 210000*u(22,Hsel,IE,3) + 210000*u(22,Hsel,PA,3) + 210000*u(22,Hsel,KI,3) + 220000*u(23,Hsel,EU,3) + 220000*u(23,Hsel,IE,3) + 220000*u(23,Hsel,PA,3) + 220000*u(23,Hsel,KI,3) =L= 0 ; (LHS = 0)
     
Sold_Prod(Lsel,1)..  - y(Lsel,1) + 10000*u(2,Lsel,EU,1) + 10000*u(2,Lsel,IE,1) + 10000*u(2,Lsel,PA,1) + 10000*u(2,Lsel,KI,1) + 20000*u(3,Lsel,EU,1) + 20000*u(3,Lsel,IE,1) + 20000*u(3,Lsel,PA,1) + 20000*u(3,Lsel,KI,1) + 30000*u(4,Lsel,EU,1)
     
      + 30000*u(4,Lsel,IE,1) + 30000*u(4,Lsel,PA,1) + 30000*u(4,Lsel,KI,1) + 40000*u(5,Lsel,EU,1) + 40000*u(5,Lsel,IE,1) + 40000*u(5,Lsel,PA,1) + 40000*u(5,Lsel,KI,1) + 50000*u(6,Lsel,EU,1) + 50000*u(6,Lsel,IE,1) + 50000*u(6,Lsel,PA,1)
     
      + 50000*u(6,Lsel,KI,1) + 60000*u(7,Lsel,EU,1) + 60000*u(7,Lsel,IE,1) + 60000*u(7,Lsel,PA,1) + 60000*u(7,Lsel,KI,1) + 70000*u(8,Lsel,EU,1) + 70000*u(8,Lsel,IE,1) + 70000*u(8,Lsel,PA,1) + 70000*u(8,Lsel,KI,1) + 80000*u(9,Lsel,EU,1)
     
      + 80000*u(9,Lsel,IE,1) + 80000*u(9,Lsel,PA,1) + 80000*u(9,Lsel,KI,1) + 90000*u(10,Lsel,EU,1) + 90000*u(10,Lsel,IE,1) + 90000*u(10,Lsel,PA,1) + 90000*u(10,Lsel,KI,1) + 100000*u(11,Lsel,EU,1) + 100000*u(11,Lsel,IE,1) + 100000*u(11,Lsel,PA,1)
     
      + 100000*u(11,Lsel,KI,1) + 110000*u(12,Lsel,EU,1) + 110000*u(12,Lsel,IE,1) + 110000*u(12,Lsel,PA,1) + 110000*u(12,Lsel,KI,1) + 120000*u(13,Lsel,EU,1) + 120000*u(13,Lsel,IE,1) + 120000*u(13,Lsel,PA,1) + 120000*u(13,Lsel,KI,1) + 130000*u(14,Lsel,EU,1)
     
      + 130000*u(14,Lsel,IE,1) + 130000*u(14,Lsel,PA,1) + 130000*u(14,Lsel,KI,1) + 140000*u(15,Lsel,EU,1) + 140000*u(15,Lsel,IE,1) + 140000*u(15,Lsel,PA,1) + 140000*u(15,Lsel,KI,1) + 150000*u(16,Lsel,EU,1) + 150000*u(16,Lsel,IE,1) + 150000*u(16,Lsel,PA,1)
     
      + 150000*u(16,Lsel,KI,1) + 160000*u(17,Lsel,EU,1) + 160000*u(17,Lsel,IE,1) + 160000*u(17,Lsel,PA,1) + 160000*u(17,Lsel,KI,1) + 170000*u(18,Lsel,EU,1) + 170000*u(18,Lsel,IE,1) + 170000*u(18,Lsel,PA,1) + 170000*u(18,Lsel,KI,1) + 180000*u(19,Lsel,EU,1)
     
      + 180000*u(19,Lsel,IE,1) + 180000*u(19,Lsel,PA,1) + 180000*u(19,Lsel,KI,1) + 190000*u(20,Lsel,EU,1) + 190000*u(20,Lsel,IE,1) + 190000*u(20,Lsel,PA,1) + 190000*u(20,Lsel,KI,1) + 200000*u(21,Lsel,EU,1) + 200000*u(21,Lsel,IE,1) + 200000*u(21,Lsel,PA,1)
     
      + 200000*u(21,Lsel,KI,1) + 210000*u(22,Lsel,EU,1) + 210000*u(22,Lsel,IE,1) + 210000*u(22,Lsel,PA,1) + 210000*u(22,Lsel,KI,1) + 220000*u(23,Lsel,EU,1) + 220000*u(23,Lsel,IE,1) + 220000*u(23,Lsel,PA,1) + 220000*u(23,Lsel,KI,1) =L= 0 ; (LHS = 0)
     
Sold_Prod(Lsel,2)..  - y(Lsel,2) + 10000*u(2,Lsel,EU,2) + 10000*u(2,Lsel,IE,2) + 10000*u(2,Lsel,PA,2) + 10000*u(2,Lsel,KI,2) + 20000*u(3,Lsel,EU,2) + 20000*u(3,Lsel,IE,2) + 20000*u(3,Lsel,PA,2) + 20000*u(3,Lsel,KI,2) + 30000*u(4,Lsel,EU,2)
     
      + 30000*u(4,Lsel,IE,2) + 30000*u(4,Lsel,PA,2) + 30000*u(4,Lsel,KI,2) + 40000*u(5,Lsel,EU,2) + 40000*u(5,Lsel,IE,2) + 40000*u(5,Lsel,PA,2) + 40000*u(5,Lsel,KI,2) + 50000*u(6,Lsel,EU,2) + 50000*u(6,Lsel,IE,2) + 50000*u(6,Lsel,PA,2)
     
      + 50000*u(6,Lsel,KI,2) + 60000*u(7,Lsel,EU,2) + 60000*u(7,Lsel,IE,2) + 60000*u(7,Lsel,PA,2) + 60000*u(7,Lsel,KI,2) + 70000*u(8,Lsel,EU,2) + 70000*u(8,Lsel,IE,2) + 70000*u(8,Lsel,PA,2) + 70000*u(8,Lsel,KI,2) + 80000*u(9,Lsel,EU,2)
     
      + 80000*u(9,Lsel,IE,2) + 80000*u(9,Lsel,PA,2) + 80000*u(9,Lsel,KI,2) + 90000*u(10,Lsel,EU,2) + 90000*u(10,Lsel,IE,2) + 90000*u(10,Lsel,PA,2) + 90000*u(10,Lsel,KI,2) + 100000*u(11,Lsel,EU,2) + 100000*u(11,Lsel,IE,2) + 100000*u(11,Lsel,PA,2)
     
      + 100000*u(11,Lsel,KI,2) + 110000*u(12,Lsel,EU,2) + 110000*u(12,Lsel,IE,2) + 110000*u(12,Lsel,PA,2) + 110000*u(12,Lsel,KI,2) + 120000*u(13,Lsel,EU,2) + 120000*u(13,Lsel,IE,2) + 120000*u(13,Lsel,PA,2) + 120000*u(13,Lsel,KI,2) + 130000*u(14,Lsel,EU,2)
     
      + 130000*u(14,Lsel,IE,2) + 130000*u(14,Lsel,PA,2) + 130000*u(14,Lsel,KI,2) + 140000*u(15,Lsel,EU,2) + 140000*u(15,Lsel,IE,2) + 140000*u(15,Lsel,PA,2) + 140000*u(15,Lsel,KI,2) + 150000*u(16,Lsel,EU,2) + 150000*u(16,Lsel,IE,2) + 150000*u(16,Lsel,PA,2)
     
      + 150000*u(16,Lsel,KI,2) + 160000*u(17,Lsel,EU,2) + 160000*u(17,Lsel,IE,2) + 160000*u(17,Lsel,PA,2) + 160000*u(17,Lsel,KI,2) + 170000*u(18,Lsel,EU,2) + 170000*u(18,Lsel,IE,2) + 170000*u(18,Lsel,PA,2) + 170000*u(18,Lsel,KI,2) + 180000*u(19,Lsel,EU,2)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/19/17 02:05:06 Page 24
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 437


     Sold_Prod  =L=  we cant sell more than we produce in each year     
     
      + 180000*u(19,Lsel,IE,2) + 180000*u(19,Lsel,PA,2) + 180000*u(19,Lsel,KI,2) + 190000*u(20,Lsel,EU,2) + 190000*u(20,Lsel,IE,2) + 190000*u(20,Lsel,PA,2) + 190000*u(20,Lsel,KI,2) + 200000*u(21,Lsel,EU,2) + 200000*u(21,Lsel,IE,2) + 200000*u(21,Lsel,PA,2)
     
      + 200000*u(21,Lsel,KI,2) + 210000*u(22,Lsel,EU,2) + 210000*u(22,Lsel,IE,2) + 210000*u(22,Lsel,PA,2) + 210000*u(22,Lsel,KI,2) + 220000*u(23,Lsel,EU,2) + 220000*u(23,Lsel,IE,2) + 220000*u(23,Lsel,PA,2) + 220000*u(23,Lsel,KI,2) =L= 0 ; (LHS = 0)
     
Sold_Prod(Lsel,3)..  - y(Lsel,3) + 10000*u(2,Lsel,EU,3) + 10000*u(2,Lsel,IE,3) + 10000*u(2,Lsel,PA,3) + 10000*u(2,Lsel,KI,3) + 20000*u(3,Lsel,EU,3) + 20000*u(3,Lsel,IE,3) + 20000*u(3,Lsel,PA,3) + 20000*u(3,Lsel,KI,3) + 30000*u(4,Lsel,EU,3)
     
      + 30000*u(4,Lsel,IE,3) + 30000*u(4,Lsel,PA,3) + 30000*u(4,Lsel,KI,3) + 40000*u(5,Lsel,EU,3) + 40000*u(5,Lsel,IE,3) + 40000*u(5,Lsel,PA,3) + 40000*u(5,Lsel,KI,3) + 50000*u(6,Lsel,EU,3) + 50000*u(6,Lsel,IE,3) + 50000*u(6,Lsel,PA,3)
     
      + 50000*u(6,Lsel,KI,3) + 60000*u(7,Lsel,EU,3) + 60000*u(7,Lsel,IE,3) + 60000*u(7,Lsel,PA,3) + 60000*u(7,Lsel,KI,3) + 70000*u(8,Lsel,EU,3) + 70000*u(8,Lsel,IE,3) + 70000*u(8,Lsel,PA,3) + 70000*u(8,Lsel,KI,3) + 80000*u(9,Lsel,EU,3)
     
      + 80000*u(9,Lsel,IE,3) + 80000*u(9,Lsel,PA,3) + 80000*u(9,Lsel,KI,3) + 90000*u(10,Lsel,EU,3) + 90000*u(10,Lsel,IE,3) + 90000*u(10,Lsel,PA,3) + 90000*u(10,Lsel,KI,3) + 100000*u(11,Lsel,EU,3) + 100000*u(11,Lsel,IE,3) + 100000*u(11,Lsel,PA,3)
     
      + 100000*u(11,Lsel,KI,3) + 110000*u(12,Lsel,EU,3) + 110000*u(12,Lsel,IE,3) + 110000*u(12,Lsel,PA,3) + 110000*u(12,Lsel,KI,3) + 120000*u(13,Lsel,EU,3) + 120000*u(13,Lsel,IE,3) + 120000*u(13,Lsel,PA,3) + 120000*u(13,Lsel,KI,3) + 130000*u(14,Lsel,EU,3)
     
      + 130000*u(14,Lsel,IE,3) + 130000*u(14,Lsel,PA,3) + 130000*u(14,Lsel,KI,3) + 140000*u(15,Lsel,EU,3) + 140000*u(15,Lsel,IE,3) + 140000*u(15,Lsel,PA,3) + 140000*u(15,Lsel,KI,3) + 150000*u(16,Lsel,EU,3) + 150000*u(16,Lsel,IE,3) + 150000*u(16,Lsel,PA,3)
     
      + 150000*u(16,Lsel,KI,3) + 160000*u(17,Lsel,EU,3) + 160000*u(17,Lsel,IE,3) + 160000*u(17,Lsel,PA,3) + 160000*u(17,Lsel,KI,3) + 170000*u(18,Lsel,EU,3) + 170000*u(18,Lsel,IE,3) + 170000*u(18,Lsel,PA,3) + 170000*u(18,Lsel,KI,3) + 180000*u(19,Lsel,EU,3)
     
      + 180000*u(19,Lsel,IE,3) + 180000*u(19,Lsel,PA,3) + 180000*u(19,Lsel,KI,3) + 190000*u(20,Lsel,EU,3) + 190000*u(20,Lsel,IE,3) + 190000*u(20,Lsel,PA,3) + 190000*u(20,Lsel,KI,3) + 200000*u(21,Lsel,EU,3) + 200000*u(21,Lsel,IE,3) + 200000*u(21,Lsel,PA,3)
     
      + 200000*u(21,Lsel,KI,3) + 210000*u(22,Lsel,EU,3) + 210000*u(22,Lsel,IE,3) + 210000*u(22,Lsel,PA,3) + 210000*u(22,Lsel,KI,3) + 220000*u(23,Lsel,EU,3) + 220000*u(23,Lsel,IE,3) + 220000*u(23,Lsel,PA,3) + 220000*u(23,Lsel,KI,3) =L= 0 ; (LHS = 0)
     
Sold_Prod(Pap,1)..  - y(Pap,1) + 10000*u(2,Pap,EU,1) + 10000*u(2,Pap,IE,1) + 10000*u(2,Pap,PA,1) + 10000*u(2,Pap,KI,1) + 20000*u(3,Pap,EU,1) + 20000*u(3,Pap,IE,1) + 20000*u(3,Pap,PA,1) + 20000*u(3,Pap,KI,1) + 30000*u(4,Pap,EU,1) + 30000*u(4,Pap,IE,1)
     
      + 30000*u(4,Pap,PA,1) + 30000*u(4,Pap,KI,1) + 40000*u(5,Pap,EU,1) + 40000*u(5,Pap,IE,1) + 40000*u(5,Pap,PA,1) + 40000*u(5,Pap,KI,1) + 50000*u(6,Pap,EU,1) + 50000*u(6,Pap,IE,1) + 50000*u(6,Pap,PA,1) + 50000*u(6,Pap,KI,1) + 60000*u(7,Pap,EU,1)
     
      + 60000*u(7,Pap,IE,1) + 60000*u(7,Pap,PA,1) + 60000*u(7,Pap,KI,1) + 70000*u(8,Pap,EU,1) + 70000*u(8,Pap,IE,1) + 70000*u(8,Pap,PA,1) + 70000*u(8,Pap,KI,1) + 80000*u(9,Pap,EU,1) + 80000*u(9,Pap,IE,1) + 80000*u(9,Pap,PA,1) + 80000*u(9,Pap,KI,1)
     
      + 90000*u(10,Pap,EU,1) + 90000*u(10,Pap,IE,1) + 90000*u(10,Pap,PA,1) + 90000*u(10,Pap,KI,1) + 100000*u(11,Pap,EU,1) + 100000*u(11,Pap,IE,1) + 100000*u(11,Pap,PA,1) + 100000*u(11,Pap,KI,1) + 110000*u(12,Pap,EU,1) + 110000*u(12,Pap,IE,1)
     
      + 110000*u(12,Pap,PA,1) + 110000*u(12,Pap,KI,1) + 120000*u(13,Pap,EU,1) + 120000*u(13,Pap,IE,1) + 120000*u(13,Pap,PA,1) + 120000*u(13,Pap,KI,1) + 130000*u(14,Pap,EU,1) + 130000*u(14,Pap,IE,1) + 130000*u(14,Pap,PA,1) + 130000*u(14,Pap,KI,1)
     
      + 140000*u(15,Pap,EU,1) + 140000*u(15,Pap,IE,1) + 140000*u(15,Pap,PA,1) + 140000*u(15,Pap,KI,1) + 150000*u(16,Pap,EU,1) + 150000*u(16,Pap,IE,1) + 150000*u(16,Pap,PA,1) + 150000*u(16,Pap,KI,1) + 160000*u(17,Pap,EU,1) + 160000*u(17,Pap,IE,1)
     
      + 160000*u(17,Pap,PA,1) + 160000*u(17,Pap,KI,1) + 170000*u(18,Pap,EU,1) + 170000*u(18,Pap,IE,1) + 170000*u(18,Pap,PA,1) + 170000*u(18,Pap,KI,1) + 180000*u(19,Pap,EU,1) + 180000*u(19,Pap,IE,1) + 180000*u(19,Pap,PA,1) + 180000*u(19,Pap,KI,1)
     
      + 190000*u(20,Pap,EU,1) + 190000*u(20,Pap,IE,1) + 190000*u(20,Pap,PA,1) + 190000*u(20,Pap,KI,1) + 200000*u(21,Pap,EU,1) + 200000*u(21,Pap,IE,1) + 200000*u(21,Pap,PA,1) + 200000*u(21,Pap,KI,1) + 210000*u(22,Pap,EU,1) + 210000*u(22,Pap,IE,1)
     
      + 210000*u(22,Pap,PA,1) + 210000*u(22,Pap,KI,1) + 220000*u(23,Pap,EU,1) + 220000*u(23,Pap,IE,1) + 220000*u(23,Pap,PA,1) + 220000*u(23,Pap,KI,1) =L= 0 ; (LHS = 0)
     
Sold_Prod(Pap,2)..  - y(Pap,2) + 10000*u(2,Pap,EU,2) + 10000*u(2,Pap,IE,2) + 10000*u(2,Pap,PA,2) + 10000*u(2,Pap,KI,2) + 20000*u(3,Pap,EU,2) + 20000*u(3,Pap,IE,2) + 20000*u(3,Pap,PA,2) + 20000*u(3,Pap,KI,2) + 30000*u(4,Pap,EU,2) + 30000*u(4,Pap,IE,2)
     
      + 30000*u(4,Pap,PA,2) + 30000*u(4,Pap,KI,2) + 40000*u(5,Pap,EU,2) + 40000*u(5,Pap,IE,2) + 40000*u(5,Pap,PA,2) + 40000*u(5,Pap,KI,2) + 50000*u(6,Pap,EU,2) + 50000*u(6,Pap,IE,2) + 50000*u(6,Pap,PA,2) + 50000*u(6,Pap,KI,2) + 60000*u(7,Pap,EU,2)
     
      + 60000*u(7,Pap,IE,2) + 60000*u(7,Pap,PA,2) + 60000*u(7,Pap,KI,2) + 70000*u(8,Pap,EU,2) + 70000*u(8,Pap,IE,2) + 70000*u(8,Pap,PA,2) + 70000*u(8,Pap,KI,2) + 80000*u(9,Pap,EU,2) + 80000*u(9,Pap,IE,2) + 80000*u(9,Pap,PA,2) + 80000*u(9,Pap,KI,2)
     
      + 90000*u(10,Pap,EU,2) + 90000*u(10,Pap,IE,2) + 90000*u(10,Pap,PA,2) + 90000*u(10,Pap,KI,2) + 100000*u(11,Pap,EU,2) + 100000*u(11,Pap,IE,2) + 100000*u(11,Pap,PA,2) + 100000*u(11,Pap,KI,2) + 110000*u(12,Pap,EU,2) + 110000*u(12,Pap,IE,2)
     
      + 110000*u(12,Pap,PA,2) + 110000*u(12,Pap,KI,2) + 120000*u(13,Pap,EU,2) + 120000*u(13,Pap,IE,2) + 120000*u(13,Pap,PA,2) + 120000*u(13,Pap,KI,2) + 130000*u(14,Pap,EU,2) + 130000*u(14,Pap,IE,2) + 130000*u(14,Pap,PA,2) + 130000*u(14,Pap,KI,2)
     
      + 140000*u(15,Pap,EU,2) + 140000*u(15,Pap,IE,2) + 140000*u(15,Pap,PA,2) + 140000*u(15,Pap,KI,2) + 150000*u(16,Pap,EU,2) + 150000*u(16,Pap,IE,2) + 150000*u(16,Pap,PA,2) + 150000*u(16,Pap,KI,2) + 160000*u(17,Pap,EU,2) + 160000*u(17,Pap,IE,2)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/19/17 02:05:06 Page 25
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 437


     Sold_Prod  =L=  we cant sell more than we produce in each year     
     
      + 160000*u(17,Pap,PA,2) + 160000*u(17,Pap,KI,2) + 170000*u(18,Pap,EU,2) + 170000*u(18,Pap,IE,2) + 170000*u(18,Pap,PA,2) + 170000*u(18,Pap,KI,2) + 180000*u(19,Pap,EU,2) + 180000*u(19,Pap,IE,2) + 180000*u(19,Pap,PA,2) + 180000*u(19,Pap,KI,2)
     
      + 190000*u(20,Pap,EU,2) + 190000*u(20,Pap,IE,2) + 190000*u(20,Pap,PA,2) + 190000*u(20,Pap,KI,2) + 200000*u(21,Pap,EU,2) + 200000*u(21,Pap,IE,2) + 200000*u(21,Pap,PA,2) + 200000*u(21,Pap,KI,2) + 210000*u(22,Pap,EU,2) + 210000*u(22,Pap,IE,2)
     
      + 210000*u(22,Pap,PA,2) + 210000*u(22,Pap,KI,2) + 220000*u(23,Pap,EU,2) + 220000*u(23,Pap,IE,2) + 220000*u(23,Pap,PA,2) + 220000*u(23,Pap,KI,2) =L= 0 ; (LHS = 0)
     
Sold_Prod(Pap,3)..  - y(Pap,3) + 10000*u(2,Pap,EU,3) + 10000*u(2,Pap,IE,3) + 10000*u(2,Pap,PA,3) + 10000*u(2,Pap,KI,3) + 20000*u(3,Pap,EU,3) + 20000*u(3,Pap,IE,3) + 20000*u(3,Pap,PA,3) + 20000*u(3,Pap,KI,3) + 30000*u(4,Pap,EU,3) + 30000*u(4,Pap,IE,3)
     
      + 30000*u(4,Pap,PA,3) + 30000*u(4,Pap,KI,3) + 40000*u(5,Pap,EU,3) + 40000*u(5,Pap,IE,3) + 40000*u(5,Pap,PA,3) + 40000*u(5,Pap,KI,3) + 50000*u(6,Pap,EU,3) + 50000*u(6,Pap,IE,3) + 50000*u(6,Pap,PA,3) + 50000*u(6,Pap,KI,3) + 60000*u(7,Pap,EU,3)
     
      + 60000*u(7,Pap,IE,3) + 60000*u(7,Pap,PA,3) + 60000*u(7,Pap,KI,3) + 70000*u(8,Pap,EU,3) + 70000*u(8,Pap,IE,3) + 70000*u(8,Pap,PA,3) + 70000*u(8,Pap,KI,3) + 80000*u(9,Pap,EU,3) + 80000*u(9,Pap,IE,3) + 80000*u(9,Pap,PA,3) + 80000*u(9,Pap,KI,3)
     
      + 90000*u(10,Pap,EU,3) + 90000*u(10,Pap,IE,3) + 90000*u(10,Pap,PA,3) + 90000*u(10,Pap,KI,3) + 100000*u(11,Pap,EU,3) + 100000*u(11,Pap,IE,3) + 100000*u(11,Pap,PA,3) + 100000*u(11,Pap,KI,3) + 110000*u(12,Pap,EU,3) + 110000*u(12,Pap,IE,3)
     
      + 110000*u(12,Pap,PA,3) + 110000*u(12,Pap,KI,3) + 120000*u(13,Pap,EU,3) + 120000*u(13,Pap,IE,3) + 120000*u(13,Pap,PA,3) + 120000*u(13,Pap,KI,3) + 130000*u(14,Pap,EU,3) + 130000*u(14,Pap,IE,3) + 130000*u(14,Pap,PA,3) + 130000*u(14,Pap,KI,3)
     
      + 140000*u(15,Pap,EU,3) + 140000*u(15,Pap,IE,3) + 140000*u(15,Pap,PA,3) + 140000*u(15,Pap,KI,3) + 150000*u(16,Pap,EU,3) + 150000*u(16,Pap,IE,3) + 150000*u(16,Pap,PA,3) + 150000*u(16,Pap,KI,3) + 160000*u(17,Pap,EU,3) + 160000*u(17,Pap,IE,3)
     
      + 160000*u(17,Pap,PA,3) + 160000*u(17,Pap,KI,3) + 170000*u(18,Pap,EU,3) + 170000*u(18,Pap,IE,3) + 170000*u(18,Pap,PA,3) + 170000*u(18,Pap,KI,3) + 180000*u(19,Pap,EU,3) + 180000*u(19,Pap,IE,3) + 180000*u(19,Pap,PA,3) + 180000*u(19,Pap,KI,3)
     
      + 190000*u(20,Pap,EU,3) + 190000*u(20,Pap,IE,3) + 190000*u(20,Pap,PA,3) + 190000*u(20,Pap,KI,3) + 200000*u(21,Pap,EU,3) + 200000*u(21,Pap,IE,3) + 200000*u(21,Pap,PA,3) + 200000*u(21,Pap,KI,3) + 210000*u(22,Pap,EU,3) + 210000*u(22,Pap,IE,3)
     
      + 210000*u(22,Pap,PA,3) + 210000*u(22,Pap,KI,3) + 220000*u(23,Pap,EU,3) + 220000*u(23,Pap,IE,3) + 220000*u(23,Pap,PA,3) + 220000*u(23,Pap,KI,3) =L= 0 ; (LHS = 0)
     

---- timber_bought  =E=  amount of timber i bought in each year

timber_bought(Mat,1)..  - 10000*r(2,Mat,1) - 20000*r(3,Mat,1) - 30000*r(4,Mat,1) - 40000*r(5,Mat,1) - 50000*r(6,Mat,1) - 60000*r(7,Mat,1) - 70000*r(8,Mat,1) - 80000*r(9,Mat,1) - 90000*r(10,Mat,1) - 100000*r(11,Mat,1) - 110000*r(12,Mat,1)
     
      - 120000*r(13,Mat,1) - 130000*r(14,Mat,1) - 140000*r(15,Mat,1) - 150000*r(16,Mat,1) - 160000*r(17,Mat,1) - 170000*r(18,Mat,1) - 180000*r(19,Mat,1) - 190000*r(20,Mat,1) - 200000*r(21,Mat,1) - 210000*r(22,Mat,1) - 220000*r(23,Mat,1)
     
      - 230000*r(24,Mat,1) - 240000*r(25,Mat,1) - 250000*r(26,Mat,1) - 260000*r(27,Mat,1) - 270000*r(28,Mat,1) - 280000*r(29,Mat,1) - 290000*r(30,Mat,1) - 300000*r(31,Mat,1) - 310000*r(32,Mat,1) - 320000*r(33,Mat,1) - 330000*r(34,Mat,1)
     
      - 340000*r(35,Mat,1) - 350000*r(36,Mat,1) - 360000*r(37,Mat,1) - 370000*r(38,Mat,1) - 380000*r(39,Mat,1) - 390000*r(40,Mat,1) - 400000*r(41,Mat,1) - 410000*r(42,Mat,1) - 420000*r(43,Mat,1) - 430000*r(44,Mat,1) - 440000*r(45,Mat,1)
     
      - 450000*r(46,Mat,1) - 460000*r(47,Mat,1) - 470000*r(48,Mat,1) - 480000*r(49,Mat,1) - 490000*r(50,Mat,1) - 500000*r(51,Mat,1) - 510000*r(52,Mat,1) - 520000*r(53,Mat,1) - 530000*r(54,Mat,1) - 540000*r(55,Mat,1) - 550000*r(56,Mat,1)
     
      - 560000*r(57,Mat,1) - 570000*r(58,Mat,1) - 580000*r(59,Mat,1) - 590000*r(60,Mat,1) - 600000*r(61,Mat,1) - 610000*r(62,Mat,1) - 620000*r(63,Mat,1) - 630000*r(64,Mat,1) - 640000*r(65,Mat,1) - 650000*r(66,Mat,1) - 660000*r(67,Mat,1)
     
      - 670000*r(68,Mat,1) - 680000*r(69,Mat,1) - 690000*r(70,Mat,1) - 700000*r(71,Mat,1) - 710000*r(72,Mat,1) - 720000*r(73,Mat,1) - 730000*r(74,Mat,1) - 740000*r(75,Mat,1) - 750000*r(76,Mat,1) - 760000*r(77,Mat,1) - 770000*r(78,Mat,1)
     
      - 780000*r(79,Mat,1) - 790000*r(80,Mat,1) - 800000*r(81,Mat,1) - 810000*r(82,Mat,1) - 820000*r(83,Mat,1) - 830000*r(84,Mat,1) - 840000*r(85,Mat,1) - 850000*r(86,Mat,1) - 860000*r(87,Mat,1) - 870000*r(88,Mat,1) - 880000*r(89,Mat,1)
     
      - 890000*r(90,Mat,1) - 900000*r(91,Mat,1) - 910000*r(92,Mat,1) - 920000*r(93,Mat,1) - 930000*r(94,Mat,1) - 940000*r(95,Mat,1) - 950000*r(96,Mat,1) - 960000*r(97,Mat,1) - 970000*r(98,Mat,1) - 980000*r(99,Mat,1) - 990000*r(100,Mat,1)
     
      - 1000000*r(101,Mat,1) - 1010000*r(102,Mat,1) - 1020000*r(103,Mat,1) - 1030000*r(104,Mat,1) - 1040000*r(105,Mat,1) - 1050000*r(106,Mat,1) - 1060000*r(107,Mat,1) + b(Mat,1) =E= 0 ; (LHS = 0)
     
timber_bought(Mat,2)..  - 10000*r(2,Mat,2) - 20000*r(3,Mat,2) - 30000*r(4,Mat,2) - 40000*r(5,Mat,2) - 50000*r(6,Mat,2) - 60000*r(7,Mat,2) - 70000*r(8,Mat,2) - 80000*r(9,Mat,2) - 90000*r(10,Mat,2) - 100000*r(11,Mat,2) - 110000*r(12,Mat,2)
     
      - 120000*r(13,Mat,2) - 130000*r(14,Mat,2) - 140000*r(15,Mat,2) - 150000*r(16,Mat,2) - 160000*r(17,Mat,2) - 170000*r(18,Mat,2) - 180000*r(19,Mat,2) - 190000*r(20,Mat,2) - 200000*r(21,Mat,2) - 210000*r(22,Mat,2) - 220000*r(23,Mat,2)
     
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/19/17 02:05:06 Page 26
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 437


     timber_bought  =E=  amount of timber i bought in each year     
     
      - 230000*r(24,Mat,2) - 240000*r(25,Mat,2) - 250000*r(26,Mat,2) - 260000*r(27,Mat,2) - 270000*r(28,Mat,2) - 280000*r(29,Mat,2) - 290000*r(30,Mat,2) - 300000*r(31,Mat,2) - 310000*r(32,Mat,2) - 320000*r(33,Mat,2) - 330000*r(34,Mat,2)
     
      - 340000*r(35,Mat,2) - 350000*r(36,Mat,2) - 360000*r(37,Mat,2) - 370000*r(38,Mat,2) - 380000*r(39,Mat,2) - 390000*r(40,Mat,2) - 400000*r(41,Mat,2) - 410000*r(42,Mat,2) - 420000*r(43,Mat,2) - 430000*r(44,Mat,2) - 440000*r(45,Mat,2)
     
      - 450000*r(46,Mat,2) - 460000*r(47,Mat,2) - 470000*r(48,Mat,2) - 480000*r(49,Mat,2) - 490000*r(50,Mat,2) - 500000*r(51,Mat,2) - 510000*r(52,Mat,2) - 520000*r(53,Mat,2) - 530000*r(54,Mat,2) - 540000*r(55,Mat,2) - 550000*r(56,Mat,2)
     
      - 560000*r(57,Mat,2) - 570000*r(58,Mat,2) - 580000*r(59,Mat,2) - 590000*r(60,Mat,2) - 600000*r(61,Mat,2) - 610000*r(62,Mat,2) - 620000*r(63,Mat,2) - 630000*r(64,Mat,2) - 640000*r(65,Mat,2) - 650000*r(66,Mat,2) - 660000*r(67,Mat,2)
     
      - 670000*r(68,Mat,2) - 680000*r(69,Mat,2) - 690000*r(70,Mat,2) - 700000*r(71,Mat,2) - 710000*r(72,Mat,2) - 720000*r(73,Mat,2) - 730000*r(74,Mat,2) - 740000*r(75,Mat,2) - 750000*r(76,Mat,2) - 760000*r(77,Mat,2) - 770000*r(78,Mat,2)
     
      - 780000*r(79,Mat,2) - 790000*r(80,Mat,2) - 800000*r(81,Mat,2) - 810000*r(82,Mat,2) - 820000*r(83,Mat,2) - 830000*r(84,Mat,2) - 840000*r(85,Mat,2) - 850000*r(86,Mat,2) - 860000*r(87,Mat,2) - 870000*r(88,Mat,2) - 880000*r(89,Mat,2)
     
      - 890000*r(90,Mat,2) - 900000*r(91,Mat,2) - 910000*r(92,Mat,2) - 920000*r(93,Mat,2) - 930000*r(94,Mat,2) - 940000*r(95,Mat,2) - 950000*r(96,Mat,2) - 960000*r(97,Mat,2) - 970000*r(98,Mat,2) - 980000*r(99,Mat,2) - 990000*r(100,Mat,2)
     
      - 1000000*r(101,Mat,2) - 1010000*r(102,Mat,2) - 1020000*r(103,Mat,2) - 1030000*r(104,Mat,2) - 1040000*r(105,Mat,2) - 1050000*r(106,Mat,2) - 1060000*r(107,Mat,2) + b(Mat,2) =E= 0 ; (LHS = 0)
     
timber_bought(Mat,3)..  - 10000*r(2,Mat,3) - 20000*r(3,Mat,3) - 30000*r(4,Mat,3) - 40000*r(5,Mat,3) - 50000*r(6,Mat,3) - 60000*r(7,Mat,3) - 70000*r(8,Mat,3) - 80000*r(9,Mat,3) - 90000*r(10,Mat,3) - 100000*r(11,Mat,3) - 110000*r(12,Mat,3)
     
      - 120000*r(13,Mat,3) - 130000*r(14,Mat,3) - 140000*r(15,Mat,3) - 150000*r(16,Mat,3) - 160000*r(17,Mat,3) - 170000*r(18,Mat,3) - 180000*r(19,Mat,3) - 190000*r(20,Mat,3) - 200000*r(21,Mat,3) - 210000*r(22,Mat,3) - 220000*r(23,Mat,3)
     
      - 230000*r(24,Mat,3) - 240000*r(25,Mat,3) - 250000*r(26,Mat,3) - 260000*r(27,Mat,3) - 270000*r(28,Mat,3) - 280000*r(29,Mat,3) - 290000*r(30,Mat,3) - 300000*r(31,Mat,3) - 310000*r(32,Mat,3) - 320000*r(33,Mat,3) - 330000*r(34,Mat,3)
     
      - 340000*r(35,Mat,3) - 350000*r(36,Mat,3) - 360000*r(37,Mat,3) - 370000*r(38,Mat,3) - 380000*r(39,Mat,3) - 390000*r(40,Mat,3) - 400000*r(41,Mat,3) - 410000*r(42,Mat,3) - 420000*r(43,Mat,3) - 430000*r(44,Mat,3) - 440000*r(45,Mat,3)
     
      - 450000*r(46,Mat,3) - 460000*r(47,Mat,3) - 470000*r(48,Mat,3) - 480000*r(49,Mat,3) - 490000*r(50,Mat,3) - 500000*r(51,Mat,3) - 510000*r(52,Mat,3) - 520000*r(53,Mat,3) - 530000*r(54,Mat,3) - 540000*r(55,Mat,3) - 550000*r(56,Mat,3)
     
      - 560000*r(57,Mat,3) - 570000*r(58,Mat,3) - 580000*r(59,Mat,3) - 590000*r(60,Mat,3) - 600000*r(61,Mat,3) - 610000*r(62,Mat,3) - 620000*r(63,Mat,3) - 630000*r(64,Mat,3) - 640000*r(65,Mat,3) - 650000*r(66,Mat,3) - 660000*r(67,Mat,3)
     
      - 670000*r(68,Mat,3) - 680000*r(69,Mat,3) - 690000*r(70,Mat,3) - 700000*r(71,Mat,3) - 710000*r(72,Mat,3) - 720000*r(73,Mat,3) - 730000*r(74,Mat,3) - 740000*r(75,Mat,3) - 750000*r(76,Mat,3) - 760000*r(77,Mat,3) - 770000*r(78,Mat,3)
     
      - 780000*r(79,Mat,3) - 790000*r(80,Mat,3) - 800000*r(81,Mat,3) - 810000*r(82,Mat,3) - 820000*r(83,Mat,3) - 830000*r(84,Mat,3) - 840000*r(85,Mat,3) - 850000*r(86,Mat,3) - 860000*r(87,Mat,3) - 870000*r(88,Mat,3) - 880000*r(89,Mat,3)
     
      - 890000*r(90,Mat,3) - 900000*r(91,Mat,3) - 910000*r(92,Mat,3) - 920000*r(93,Mat,3) - 930000*r(94,Mat,3) - 940000*r(95,Mat,3) - 950000*r(96,Mat,3) - 960000*r(97,Mat,3) - 970000*r(98,Mat,3) - 980000*r(99,Mat,3) - 990000*r(100,Mat,3)
     
      - 1000000*r(101,Mat,3) - 1010000*r(102,Mat,3) - 1020000*r(103,Mat,3) - 1030000*r(104,Mat,3) - 1040000*r(105,Mat,3) - 1050000*r(106,Mat,3) - 1060000*r(107,Mat,3) + b(Mat,3) =E= 0 ; (LHS = 0)
     
timber_bought(Kut,1)..  - 10000*r(2,Kut,1) - 20000*r(3,Kut,1) - 30000*r(4,Kut,1) - 40000*r(5,Kut,1) - 50000*r(6,Kut,1) - 60000*r(7,Kut,1) - 70000*r(8,Kut,1) - 80000*r(9,Kut,1) - 90000*r(10,Kut,1) - 100000*r(11,Kut,1) - 110000*r(12,Kut,1)
     
      - 120000*r(13,Kut,1) - 130000*r(14,Kut,1) - 140000*r(15,Kut,1) - 150000*r(16,Kut,1) - 160000*r(17,Kut,1) - 170000*r(18,Kut,1) - 180000*r(19,Kut,1) - 190000*r(20,Kut,1) - 200000*r(21,Kut,1) - 210000*r(22,Kut,1) - 220000*r(23,Kut,1)
     
      - 230000*r(24,Kut,1) - 240000*r(25,Kut,1) - 250000*r(26,Kut,1) - 260000*r(27,Kut,1) - 270000*r(28,Kut,1) - 280000*r(29,Kut,1) - 290000*r(30,Kut,1) - 300000*r(31,Kut,1) - 310000*r(32,Kut,1) - 320000*r(33,Kut,1) - 330000*r(34,Kut,1)
     
      - 340000*r(35,Kut,1) - 350000*r(36,Kut,1) - 360000*r(37,Kut,1) - 370000*r(38,Kut,1) - 380000*r(39,Kut,1) - 390000*r(40,Kut,1) - 400000*r(41,Kut,1) - 410000*r(42,Kut,1) - 420000*r(43,Kut,1) - 430000*r(44,Kut,1) - 440000*r(45,Kut,1)
     
      - 450000*r(46,Kut,1) - 460000*r(47,Kut,1) - 470000*r(48,Kut,1) - 480000*r(49,Kut,1) - 490000*r(50,Kut,1) - 500000*r(51,Kut,1) - 510000*r(52,Kut,1) - 520000*r(53,Kut,1) - 530000*r(54,Kut,1) - 540000*r(55,Kut,1) - 550000*r(56,Kut,1)
     
      - 560000*r(57,Kut,1) - 570000*r(58,Kut,1) - 580000*r(59,Kut,1) - 590000*r(60,Kut,1) - 600000*r(61,Kut,1) - 610000*r(62,Kut,1) - 620000*r(63,Kut,1) - 630000*r(64,Kut,1) - 640000*r(65,Kut,1) - 650000*r(66,Kut,1) - 660000*r(67,Kut,1)
     
      - 670000*r(68,Kut,1) - 680000*r(69,Kut,1) - 690000*r(70,Kut,1) - 700000*r(71,Kut,1) - 710000*r(72,Kut,1) - 720000*r(73,Kut,1) - 730000*r(74,Kut,1) - 740000*r(75,Kut,1) - 750000*r(76,Kut,1) - 760000*r(77,Kut,1) - 770000*r(78,Kut,1)
     
      - 780000*r(79,Kut,1) - 790000*r(80,Kut,1) - 800000*r(81,Kut,1) - 810000*r(82,Kut,1) - 820000*r(83,Kut,1) - 830000*r(84,Kut,1) - 840000*r(85,Kut,1) - 850000*r(86,Kut,1) - 860000*r(87,Kut,1) - 870000*r(88,Kut,1) - 880000*r(89,Kut,1)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/19/17 02:05:06 Page 27
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 437


     timber_bought  =E=  amount of timber i bought in each year     
     
      - 890000*r(90,Kut,1) - 900000*r(91,Kut,1) - 910000*r(92,Kut,1) - 920000*r(93,Kut,1) - 930000*r(94,Kut,1) - 940000*r(95,Kut,1) - 950000*r(96,Kut,1) - 960000*r(97,Kut,1) - 970000*r(98,Kut,1) - 980000*r(99,Kut,1) - 990000*r(100,Kut,1)
     
      - 1000000*r(101,Kut,1) - 1010000*r(102,Kut,1) - 1020000*r(103,Kut,1) - 1030000*r(104,Kut,1) - 1040000*r(105,Kut,1) - 1050000*r(106,Kut,1) - 1060000*r(107,Kut,1) + b(Kut,1) =E= 0 ; (LHS = 0)
     
timber_bought(Kut,2)..  - 10000*r(2,Kut,2) - 20000*r(3,Kut,2) - 30000*r(4,Kut,2) - 40000*r(5,Kut,2) - 50000*r(6,Kut,2) - 60000*r(7,Kut,2) - 70000*r(8,Kut,2) - 80000*r(9,Kut,2) - 90000*r(10,Kut,2) - 100000*r(11,Kut,2) - 110000*r(12,Kut,2)
     
      - 120000*r(13,Kut,2) - 130000*r(14,Kut,2) - 140000*r(15,Kut,2) - 150000*r(16,Kut,2) - 160000*r(17,Kut,2) - 170000*r(18,Kut,2) - 180000*r(19,Kut,2) - 190000*r(20,Kut,2) - 200000*r(21,Kut,2) - 210000*r(22,Kut,2) - 220000*r(23,Kut,2)
     
      - 230000*r(24,Kut,2) - 240000*r(25,Kut,2) - 250000*r(26,Kut,2) - 260000*r(27,Kut,2) - 270000*r(28,Kut,2) - 280000*r(29,Kut,2) - 290000*r(30,Kut,2) - 300000*r(31,Kut,2) - 310000*r(32,Kut,2) - 320000*r(33,Kut,2) - 330000*r(34,Kut,2)
     
      - 340000*r(35,Kut,2) - 350000*r(36,Kut,2) - 360000*r(37,Kut,2) - 370000*r(38,Kut,2) - 380000*r(39,Kut,2) - 390000*r(40,Kut,2) - 400000*r(41,Kut,2) - 410000*r(42,Kut,2) - 420000*r(43,Kut,2) - 430000*r(44,Kut,2) - 440000*r(45,Kut,2)
     
      - 450000*r(46,Kut,2) - 460000*r(47,Kut,2) - 470000*r(48,Kut,2) - 480000*r(49,Kut,2) - 490000*r(50,Kut,2) - 500000*r(51,Kut,2) - 510000*r(52,Kut,2) - 520000*r(53,Kut,2) - 530000*r(54,Kut,2) - 540000*r(55,Kut,2) - 550000*r(56,Kut,2)
     
      - 560000*r(57,Kut,2) - 570000*r(58,Kut,2) - 580000*r(59,Kut,2) - 590000*r(60,Kut,2) - 600000*r(61,Kut,2) - 610000*r(62,Kut,2) - 620000*r(63,Kut,2) - 630000*r(64,Kut,2) - 640000*r(65,Kut,2) - 650000*r(66,Kut,2) - 660000*r(67,Kut,2)
     
      - 670000*r(68,Kut,2) - 680000*r(69,Kut,2) - 690000*r(70,Kut,2) - 700000*r(71,Kut,2) - 710000*r(72,Kut,2) - 720000*r(73,Kut,2) - 730000*r(74,Kut,2) - 740000*r(75,Kut,2) - 750000*r(76,Kut,2) - 760000*r(77,Kut,2) - 770000*r(78,Kut,2)
     
      - 780000*r(79,Kut,2) - 790000*r(80,Kut,2) - 800000*r(81,Kut,2) - 810000*r(82,Kut,2) - 820000*r(83,Kut,2) - 830000*r(84,Kut,2) - 840000*r(85,Kut,2) - 850000*r(86,Kut,2) - 860000*r(87,Kut,2) - 870000*r(88,Kut,2) - 880000*r(89,Kut,2)
     
      - 890000*r(90,Kut,2) - 900000*r(91,Kut,2) - 910000*r(92,Kut,2) - 920000*r(93,Kut,2) - 930000*r(94,Kut,2) - 940000*r(95,Kut,2) - 950000*r(96,Kut,2) - 960000*r(97,Kut,2) - 970000*r(98,Kut,2) - 980000*r(99,Kut,2) - 990000*r(100,Kut,2)
     
      - 1000000*r(101,Kut,2) - 1010000*r(102,Kut,2) - 1020000*r(103,Kut,2) - 1030000*r(104,Kut,2) - 1040000*r(105,Kut,2) - 1050000*r(106,Kut,2) - 1060000*r(107,Kut,2) + b(Kut,2) =E= 0 ; (LHS = 0)
     
timber_bought(Kut,3)..  - 10000*r(2,Kut,3) - 20000*r(3,Kut,3) - 30000*r(4,Kut,3) - 40000*r(5,Kut,3) - 50000*r(6,Kut,3) - 60000*r(7,Kut,3) - 70000*r(8,Kut,3) - 80000*r(9,Kut,3) - 90000*r(10,Kut,3) - 100000*r(11,Kut,3) - 110000*r(12,Kut,3)
     
      - 120000*r(13,Kut,3) - 130000*r(14,Kut,3) - 140000*r(15,Kut,3) - 150000*r(16,Kut,3) - 160000*r(17,Kut,3) - 170000*r(18,Kut,3) - 180000*r(19,Kut,3) - 190000*r(20,Kut,3) - 200000*r(21,Kut,3) - 210000*r(22,Kut,3) - 220000*r(23,Kut,3)
     
      - 230000*r(24,Kut,3) - 240000*r(25,Kut,3) - 250000*r(26,Kut,3) - 260000*r(27,Kut,3) - 270000*r(28,Kut,3) - 280000*r(29,Kut,3) - 290000*r(30,Kut,3) - 300000*r(31,Kut,3) - 310000*r(32,Kut,3) - 320000*r(33,Kut,3) - 330000*r(34,Kut,3)
     
      - 340000*r(35,Kut,3) - 350000*r(36,Kut,3) - 360000*r(37,Kut,3) - 370000*r(38,Kut,3) - 380000*r(39,Kut,3) - 390000*r(40,Kut,3) - 400000*r(41,Kut,3) - 410000*r(42,Kut,3) - 420000*r(43,Kut,3) - 430000*r(44,Kut,3) - 440000*r(45,Kut,3)
     
      - 450000*r(46,Kut,3) - 460000*r(47,Kut,3) - 470000*r(48,Kut,3) - 480000*r(49,Kut,3) - 490000*r(50,Kut,3) - 500000*r(51,Kut,3) - 510000*r(52,Kut,3) - 520000*r(53,Kut,3) - 530000*r(54,Kut,3) - 540000*r(55,Kut,3) - 550000*r(56,Kut,3)
     
      - 560000*r(57,Kut,3) - 570000*r(58,Kut,3) - 580000*r(59,Kut,3) - 590000*r(60,Kut,3) - 600000*r(61,Kut,3) - 610000*r(62,Kut,3) - 620000*r(63,Kut,3) - 630000*r(64,Kut,3) - 640000*r(65,Kut,3) - 650000*r(66,Kut,3) - 660000*r(67,Kut,3)
     
      - 670000*r(68,Kut,3) - 680000*r(69,Kut,3) - 690000*r(70,Kut,3) - 700000*r(71,Kut,3) - 710000*r(72,Kut,3) - 720000*r(73,Kut,3) - 730000*r(74,Kut,3) - 740000*r(75,Kut,3) - 750000*r(76,Kut,3) - 760000*r(77,Kut,3) - 770000*r(78,Kut,3)
     
      - 780000*r(79,Kut,3) - 790000*r(80,Kut,3) - 800000*r(81,Kut,3) - 810000*r(82,Kut,3) - 820000*r(83,Kut,3) - 830000*r(84,Kut,3) - 840000*r(85,Kut,3) - 850000*r(86,Kut,3) - 860000*r(87,Kut,3) - 870000*r(88,Kut,3) - 880000*r(89,Kut,3)
     
      - 890000*r(90,Kut,3) - 900000*r(91,Kut,3) - 910000*r(92,Kut,3) - 920000*r(93,Kut,3) - 930000*r(94,Kut,3) - 940000*r(95,Kut,3) - 950000*r(96,Kut,3) - 960000*r(97,Kut,3) - 970000*r(98,Kut,3) - 980000*r(99,Kut,3) - 990000*r(100,Kut,3)
     
      - 1000000*r(101,Kut,3) - 1010000*r(102,Kut,3) - 1020000*r(103,Kut,3) - 1030000*r(104,Kut,3) - 1040000*r(105,Kut,3) - 1050000*r(106,Kut,3) - 1060000*r(107,Kut,3) + b(Kut,3) =E= 0 ; (LHS = 0)
     
timber_bought(Kot,1)..  - 10000*r(2,Kot,1) - 20000*r(3,Kot,1) - 30000*r(4,Kot,1) - 40000*r(5,Kot,1) - 50000*r(6,Kot,1) - 60000*r(7,Kot,1) - 70000*r(8,Kot,1) - 80000*r(9,Kot,1) - 90000*r(10,Kot,1) - 100000*r(11,Kot,1) - 110000*r(12,Kot,1)
     
      - 120000*r(13,Kot,1) - 130000*r(14,Kot,1) - 140000*r(15,Kot,1) - 150000*r(16,Kot,1) - 160000*r(17,Kot,1) - 170000*r(18,Kot,1) - 180000*r(19,Kot,1) - 190000*r(20,Kot,1) - 200000*r(21,Kot,1) - 210000*r(22,Kot,1) - 220000*r(23,Kot,1)
     
      - 230000*r(24,Kot,1) - 240000*r(25,Kot,1) - 250000*r(26,Kot,1) - 260000*r(27,Kot,1) - 270000*r(28,Kot,1) - 280000*r(29,Kot,1) - 290000*r(30,Kot,1) - 300000*r(31,Kot,1) - 310000*r(32,Kot,1) - 320000*r(33,Kot,1) - 330000*r(34,Kot,1)
     
      - 340000*r(35,Kot,1) - 350000*r(36,Kot,1) - 360000*r(37,Kot,1) - 370000*r(38,Kot,1) - 380000*r(39,Kot,1) - 390000*r(40,Kot,1) - 400000*r(41,Kot,1) - 410000*r(42,Kot,1) - 420000*r(43,Kot,1) - 430000*r(44,Kot,1) - 440000*r(45,Kot,1)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/19/17 02:05:06 Page 28
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 437


     timber_bought  =E=  amount of timber i bought in each year     
     
      - 450000*r(46,Kot,1) - 460000*r(47,Kot,1) - 470000*r(48,Kot,1) - 480000*r(49,Kot,1) - 490000*r(50,Kot,1) - 500000*r(51,Kot,1) - 510000*r(52,Kot,1) - 520000*r(53,Kot,1) - 530000*r(54,Kot,1) - 540000*r(55,Kot,1) - 550000*r(56,Kot,1)
     
      - 560000*r(57,Kot,1) - 570000*r(58,Kot,1) - 580000*r(59,Kot,1) - 590000*r(60,Kot,1) - 600000*r(61,Kot,1) - 610000*r(62,Kot,1) - 620000*r(63,Kot,1) - 630000*r(64,Kot,1) - 640000*r(65,Kot,1) - 650000*r(66,Kot,1) - 660000*r(67,Kot,1)
     
      - 670000*r(68,Kot,1) - 680000*r(69,Kot,1) - 690000*r(70,Kot,1) - 700000*r(71,Kot,1) - 710000*r(72,Kot,1) - 720000*r(73,Kot,1) - 730000*r(74,Kot,1) - 740000*r(75,Kot,1) - 750000*r(76,Kot,1) - 760000*r(77,Kot,1) - 770000*r(78,Kot,1)
     
      - 780000*r(79,Kot,1) - 790000*r(80,Kot,1) - 800000*r(81,Kot,1) - 810000*r(82,Kot,1) - 820000*r(83,Kot,1) - 830000*r(84,Kot,1) - 840000*r(85,Kot,1) - 850000*r(86,Kot,1) - 860000*r(87,Kot,1) - 870000*r(88,Kot,1) - 880000*r(89,Kot,1)
     
      - 890000*r(90,Kot,1) - 900000*r(91,Kot,1) - 910000*r(92,Kot,1) - 920000*r(93,Kot,1) - 930000*r(94,Kot,1) - 940000*r(95,Kot,1) - 950000*r(96,Kot,1) - 960000*r(97,Kot,1) - 970000*r(98,Kot,1) - 980000*r(99,Kot,1) - 990000*r(100,Kot,1)
     
      - 1000000*r(101,Kot,1) - 1010000*r(102,Kot,1) - 1020000*r(103,Kot,1) - 1030000*r(104,Kot,1) - 1040000*r(105,Kot,1) - 1050000*r(106,Kot,1) - 1060000*r(107,Kot,1) + b(Kot,1) =E= 0 ; (LHS = 0)
     
timber_bought(Kot,2)..  - 10000*r(2,Kot,2) - 20000*r(3,Kot,2) - 30000*r(4,Kot,2) - 40000*r(5,Kot,2) - 50000*r(6,Kot,2) - 60000*r(7,Kot,2) - 70000*r(8,Kot,2) - 80000*r(9,Kot,2) - 90000*r(10,Kot,2) - 100000*r(11,Kot,2) - 110000*r(12,Kot,2)
     
      - 120000*r(13,Kot,2) - 130000*r(14,Kot,2) - 140000*r(15,Kot,2) - 150000*r(16,Kot,2) - 160000*r(17,Kot,2) - 170000*r(18,Kot,2) - 180000*r(19,Kot,2) - 190000*r(20,Kot,2) - 200000*r(21,Kot,2) - 210000*r(22,Kot,2) - 220000*r(23,Kot,2)
     
      - 230000*r(24,Kot,2) - 240000*r(25,Kot,2) - 250000*r(26,Kot,2) - 260000*r(27,Kot,2) - 270000*r(28,Kot,2) - 280000*r(29,Kot,2) - 290000*r(30,Kot,2) - 300000*r(31,Kot,2) - 310000*r(32,Kot,2) - 320000*r(33,Kot,2) - 330000*r(34,Kot,2)
     
      - 340000*r(35,Kot,2) - 350000*r(36,Kot,2) - 360000*r(37,Kot,2) - 370000*r(38,Kot,2) - 380000*r(39,Kot,2) - 390000*r(40,Kot,2) - 400000*r(41,Kot,2) - 410000*r(42,Kot,2) - 420000*r(43,Kot,2) - 430000*r(44,Kot,2) - 440000*r(45,Kot,2)
     
      - 450000*r(46,Kot,2) - 460000*r(47,Kot,2) - 470000*r(48,Kot,2) - 480000*r(49,Kot,2) - 490000*r(50,Kot,2) - 500000*r(51,Kot,2) - 510000*r(52,Kot,2) - 520000*r(53,Kot,2) - 530000*r(54,Kot,2) - 540000*r(55,Kot,2) - 550000*r(56,Kot,2)
     
      - 560000*r(57,Kot,2) - 570000*r(58,Kot,2) - 580000*r(59,Kot,2) - 590000*r(60,Kot,2) - 600000*r(61,Kot,2) - 610000*r(62,Kot,2) - 620000*r(63,Kot,2) - 630000*r(64,Kot,2) - 640000*r(65,Kot,2) - 650000*r(66,Kot,2) - 660000*r(67,Kot,2)
     
      - 670000*r(68,Kot,2) - 680000*r(69,Kot,2) - 690000*r(70,Kot,2) - 700000*r(71,Kot,2) - 710000*r(72,Kot,2) - 720000*r(73,Kot,2) - 730000*r(74,Kot,2) - 740000*r(75,Kot,2) - 750000*r(76,Kot,2) - 760000*r(77,Kot,2) - 770000*r(78,Kot,2)
     
      - 780000*r(79,Kot,2) - 790000*r(80,Kot,2) - 800000*r(81,Kot,2) - 810000*r(82,Kot,2) - 820000*r(83,Kot,2) - 830000*r(84,Kot,2) - 840000*r(85,Kot,2) - 850000*r(86,Kot,2) - 860000*r(87,Kot,2) - 870000*r(88,Kot,2) - 880000*r(89,Kot,2)
     
      - 890000*r(90,Kot,2) - 900000*r(91,Kot,2) - 910000*r(92,Kot,2) - 920000*r(93,Kot,2) - 930000*r(94,Kot,2) - 940000*r(95,Kot,2) - 950000*r(96,Kot,2) - 960000*r(97,Kot,2) - 970000*r(98,Kot,2) - 980000*r(99,Kot,2) - 990000*r(100,Kot,2)
     
      - 1000000*r(101,Kot,2) - 1010000*r(102,Kot,2) - 1020000*r(103,Kot,2) - 1030000*r(104,Kot,2) - 1040000*r(105,Kot,2) - 1050000*r(106,Kot,2) - 1060000*r(107,Kot,2) + b(Kot,2) =E= 0 ; (LHS = 0)
     
timber_bought(Kot,3)..  - 10000*r(2,Kot,3) - 20000*r(3,Kot,3) - 30000*r(4,Kot,3) - 40000*r(5,Kot,3) - 50000*r(6,Kot,3) - 60000*r(7,Kot,3) - 70000*r(8,Kot,3) - 80000*r(9,Kot,3) - 90000*r(10,Kot,3) - 100000*r(11,Kot,3) - 110000*r(12,Kot,3)
     
      - 120000*r(13,Kot,3) - 130000*r(14,Kot,3) - 140000*r(15,Kot,3) - 150000*r(16,Kot,3) - 160000*r(17,Kot,3) - 170000*r(18,Kot,3) - 180000*r(19,Kot,3) - 190000*r(20,Kot,3) - 200000*r(21,Kot,3) - 210000*r(22,Kot,3) - 220000*r(23,Kot,3)
     
      - 230000*r(24,Kot,3) - 240000*r(25,Kot,3) - 250000*r(26,Kot,3) - 260000*r(27,Kot,3) - 270000*r(28,Kot,3) - 280000*r(29,Kot,3) - 290000*r(30,Kot,3) - 300000*r(31,Kot,3) - 310000*r(32,Kot,3) - 320000*r(33,Kot,3) - 330000*r(34,Kot,3)
     
      - 340000*r(35,Kot,3) - 350000*r(36,Kot,3) - 360000*r(37,Kot,3) - 370000*r(38,Kot,3) - 380000*r(39,Kot,3) - 390000*r(40,Kot,3) - 400000*r(41,Kot,3) - 410000*r(42,Kot,3) - 420000*r(43,Kot,3) - 430000*r(44,Kot,3) - 440000*r(45,Kot,3)
     
      - 450000*r(46,Kot,3) - 460000*r(47,Kot,3) - 470000*r(48,Kot,3) - 480000*r(49,Kot,3) - 490000*r(50,Kot,3) - 500000*r(51,Kot,3) - 510000*r(52,Kot,3) - 520000*r(53,Kot,3) - 530000*r(54,Kot,3) - 540000*r(55,Kot,3) - 550000*r(56,Kot,3)
     
      - 560000*r(57,Kot,3) - 570000*r(58,Kot,3) - 580000*r(59,Kot,3) - 590000*r(60,Kot,3) - 600000*r(61,Kot,3) - 610000*r(62,Kot,3) - 620000*r(63,Kot,3) - 630000*r(64,Kot,3) - 640000*r(65,Kot,3) - 650000*r(66,Kot,3) - 660000*r(67,Kot,3)
     
      - 670000*r(68,Kot,3) - 680000*r(69,Kot,3) - 690000*r(70,Kot,3) - 700000*r(71,Kot,3) - 710000*r(72,Kot,3) - 720000*r(73,Kot,3) - 730000*r(74,Kot,3) - 740000*r(75,Kot,3) - 750000*r(76,Kot,3) - 760000*r(77,Kot,3) - 770000*r(78,Kot,3)
     
      - 780000*r(79,Kot,3) - 790000*r(80,Kot,3) - 800000*r(81,Kot,3) - 810000*r(82,Kot,3) - 820000*r(83,Kot,3) - 830000*r(84,Kot,3) - 840000*r(85,Kot,3) - 850000*r(86,Kot,3) - 860000*r(87,Kot,3) - 870000*r(88,Kot,3) - 880000*r(89,Kot,3)
     
      - 890000*r(90,Kot,3) - 900000*r(91,Kot,3) - 910000*r(92,Kot,3) - 920000*r(93,Kot,3) - 930000*r(94,Kot,3) - 940000*r(95,Kot,3) - 950000*r(96,Kot,3) - 960000*r(97,Kot,3) - 970000*r(98,Kot,3) - 980000*r(99,Kot,3) - 990000*r(100,Kot,3)
     
      - 1000000*r(101,Kot,3) - 1010000*r(102,Kot,3) - 1020000*r(103,Kot,3) - 1030000*r(104,Kot,3) - 1040000*r(105,Kot,3) - 1050000*r(106,Kot,3) - 1060000*r(107,Kot,3) + b(Kot,3) =E= 0 ; (LHS = 0)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/19/17 02:05:06 Page 29
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 437


     timber_bought  =E=  amount of timber i bought in each year

timber_bought(Mak,1)..  - 10000*r(2,Mak,1) - 20000*r(3,Mak,1) - 30000*r(4,Mak,1) - 40000*r(5,Mak,1) - 50000*r(6,Mak,1) - 60000*r(7,Mak,1) - 70000*r(8,Mak,1) - 80000*r(9,Mak,1) - 90000*r(10,Mak,1) - 100000*r(11,Mak,1) - 110000*r(12,Mak,1)
     
      - 120000*r(13,Mak,1) - 130000*r(14,Mak,1) - 140000*r(15,Mak,1) - 150000*r(16,Mak,1) - 160000*r(17,Mak,1) - 170000*r(18,Mak,1) - 180000*r(19,Mak,1) - 190000*r(20,Mak,1) - 200000*r(21,Mak,1) - 210000*r(22,Mak,1) - 220000*r(23,Mak,1)
     
      - 230000*r(24,Mak,1) - 240000*r(25,Mak,1) - 250000*r(26,Mak,1) - 260000*r(27,Mak,1) - 270000*r(28,Mak,1) - 280000*r(29,Mak,1) - 290000*r(30,Mak,1) - 300000*r(31,Mak,1) - 310000*r(32,Mak,1) - 320000*r(33,Mak,1) - 330000*r(34,Mak,1)
     
      - 340000*r(35,Mak,1) - 350000*r(36,Mak,1) - 360000*r(37,Mak,1) - 370000*r(38,Mak,1) - 380000*r(39,Mak,1) - 390000*r(40,Mak,1) - 400000*r(41,Mak,1) - 410000*r(42,Mak,1) - 420000*r(43,Mak,1) - 430000*r(44,Mak,1) - 440000*r(45,Mak,1)
     
      - 450000*r(46,Mak,1) - 460000*r(47,Mak,1) - 470000*r(48,Mak,1) - 480000*r(49,Mak,1) - 490000*r(50,Mak,1) - 500000*r(51,Mak,1) - 510000*r(52,Mak,1) - 520000*r(53,Mak,1) - 530000*r(54,Mak,1) - 540000*r(55,Mak,1) - 550000*r(56,Mak,1)
     
      - 560000*r(57,Mak,1) - 570000*r(58,Mak,1) - 580000*r(59,Mak,1) - 590000*r(60,Mak,1) - 600000*r(61,Mak,1) - 610000*r(62,Mak,1) - 620000*r(63,Mak,1) - 630000*r(64,Mak,1) - 640000*r(65,Mak,1) - 650000*r(66,Mak,1) - 660000*r(67,Mak,1)
     
      - 670000*r(68,Mak,1) - 680000*r(69,Mak,1) - 690000*r(70,Mak,1) - 700000*r(71,Mak,1) - 710000*r(72,Mak,1) - 720000*r(73,Mak,1) - 730000*r(74,Mak,1) - 740000*r(75,Mak,1) - 750000*r(76,Mak,1) - 760000*r(77,Mak,1) - 770000*r(78,Mak,1)
     
      - 780000*r(79,Mak,1) - 790000*r(80,Mak,1) - 800000*r(81,Mak,1) - 810000*r(82,Mak,1) - 820000*r(83,Mak,1) - 830000*r(84,Mak,1) - 840000*r(85,Mak,1) - 850000*r(86,Mak,1) - 860000*r(87,Mak,1) - 870000*r(88,Mak,1) - 880000*r(89,Mak,1)
     
      - 890000*r(90,Mak,1) - 900000*r(91,Mak,1) - 910000*r(92,Mak,1) - 920000*r(93,Mak,1) - 930000*r(94,Mak,1) - 940000*r(95,Mak,1) - 950000*r(96,Mak,1) - 960000*r(97,Mak,1) - 970000*r(98,Mak,1) - 980000*r(99,Mak,1) - 990000*r(100,Mak,1)
     
      - 1000000*r(101,Mak,1) - 1010000*r(102,Mak,1) - 1020000*r(103,Mak,1) - 1030000*r(104,Mak,1) - 1040000*r(105,Mak,1) - 1050000*r(106,Mak,1) - 1060000*r(107,Mak,1) + b(Mak,1) =E= 0 ; (LHS = 0)
     
timber_bought(Mak,2)..  - 10000*r(2,Mak,2) - 20000*r(3,Mak,2) - 30000*r(4,Mak,2) - 40000*r(5,Mak,2) - 50000*r(6,Mak,2) - 60000*r(7,Mak,2) - 70000*r(8,Mak,2) - 80000*r(9,Mak,2) - 90000*r(10,Mak,2) - 100000*r(11,Mak,2) - 110000*r(12,Mak,2)
     
      - 120000*r(13,Mak,2) - 130000*r(14,Mak,2) - 140000*r(15,Mak,2) - 150000*r(16,Mak,2) - 160000*r(17,Mak,2) - 170000*r(18,Mak,2) - 180000*r(19,Mak,2) - 190000*r(20,Mak,2) - 200000*r(21,Mak,2) - 210000*r(22,Mak,2) - 220000*r(23,Mak,2)
     
      - 230000*r(24,Mak,2) - 240000*r(25,Mak,2) - 250000*r(26,Mak,2) - 260000*r(27,Mak,2) - 270000*r(28,Mak,2) - 280000*r(29,Mak,2) - 290000*r(30,Mak,2) - 300000*r(31,Mak,2) - 310000*r(32,Mak,2) - 320000*r(33,Mak,2) - 330000*r(34,Mak,2)
     
      - 340000*r(35,Mak,2) - 350000*r(36,Mak,2) - 360000*r(37,Mak,2) - 370000*r(38,Mak,2) - 380000*r(39,Mak,2) - 390000*r(40,Mak,2) - 400000*r(41,Mak,2) - 410000*r(42,Mak,2) - 420000*r(43,Mak,2) - 430000*r(44,Mak,2) - 440000*r(45,Mak,2)
     
      - 450000*r(46,Mak,2) - 460000*r(47,Mak,2) - 470000*r(48,Mak,2) - 480000*r(49,Mak,2) - 490000*r(50,Mak,2) - 500000*r(51,Mak,2) - 510000*r(52,Mak,2) - 520000*r(53,Mak,2) - 530000*r(54,Mak,2) - 540000*r(55,Mak,2) - 550000*r(56,Mak,2)
     
      - 560000*r(57,Mak,2) - 570000*r(58,Mak,2) - 580000*r(59,Mak,2) - 590000*r(60,Mak,2) - 600000*r(61,Mak,2) - 610000*r(62,Mak,2) - 620000*r(63,Mak,2) - 630000*r(64,Mak,2) - 640000*r(65,Mak,2) - 650000*r(66,Mak,2) - 660000*r(67,Mak,2)
     
      - 670000*r(68,Mak,2) - 680000*r(69,Mak,2) - 690000*r(70,Mak,2) - 700000*r(71,Mak,2) - 710000*r(72,Mak,2) - 720000*r(73,Mak,2) - 730000*r(74,Mak,2) - 740000*r(75,Mak,2) - 750000*r(76,Mak,2) - 760000*r(77,Mak,2) - 770000*r(78,Mak,2)
     
      - 780000*r(79,Mak,2) - 790000*r(80,Mak,2) - 800000*r(81,Mak,2) - 810000*r(82,Mak,2) - 820000*r(83,Mak,2) - 830000*r(84,Mak,2) - 840000*r(85,Mak,2) - 850000*r(86,Mak,2) - 860000*r(87,Mak,2) - 870000*r(88,Mak,2) - 880000*r(89,Mak,2)
     
      - 890000*r(90,Mak,2) - 900000*r(91,Mak,2) - 910000*r(92,Mak,2) - 920000*r(93,Mak,2) - 930000*r(94,Mak,2) - 940000*r(95,Mak,2) - 950000*r(96,Mak,2) - 960000*r(97,Mak,2) - 970000*r(98,Mak,2) - 980000*r(99,Mak,2) - 990000*r(100,Mak,2)
     
      - 1000000*r(101,Mak,2) - 1010000*r(102,Mak,2) - 1020000*r(103,Mak,2) - 1030000*r(104,Mak,2) - 1040000*r(105,Mak,2) - 1050000*r(106,Mak,2) - 1060000*r(107,Mak,2) + b(Mak,2) =E= 0 ; (LHS = 0)
     
timber_bought(Mak,3)..  - 10000*r(2,Mak,3) - 20000*r(3,Mak,3) - 30000*r(4,Mak,3) - 40000*r(5,Mak,3) - 50000*r(6,Mak,3) - 60000*r(7,Mak,3) - 70000*r(8,Mak,3) - 80000*r(9,Mak,3) - 90000*r(10,Mak,3) - 100000*r(11,Mak,3) - 110000*r(12,Mak,3)
     
      - 120000*r(13,Mak,3) - 130000*r(14,Mak,3) - 140000*r(15,Mak,3) - 150000*r(16,Mak,3) - 160000*r(17,Mak,3) - 170000*r(18,Mak,3) - 180000*r(19,Mak,3) - 190000*r(20,Mak,3) - 200000*r(21,Mak,3) - 210000*r(22,Mak,3) - 220000*r(23,Mak,3)
     
      - 230000*r(24,Mak,3) - 240000*r(25,Mak,3) - 250000*r(26,Mak,3) - 260000*r(27,Mak,3) - 270000*r(28,Mak,3) - 280000*r(29,Mak,3) - 290000*r(30,Mak,3) - 300000*r(31,Mak,3) - 310000*r(32,Mak,3) - 320000*r(33,Mak,3) - 330000*r(34,Mak,3)
     
      - 340000*r(35,Mak,3) - 350000*r(36,Mak,3) - 360000*r(37,Mak,3) - 370000*r(38,Mak,3) - 380000*r(39,Mak,3) - 390000*r(40,Mak,3) - 400000*r(41,Mak,3) - 410000*r(42,Mak,3) - 420000*r(43,Mak,3) - 430000*r(44,Mak,3) - 440000*r(45,Mak,3)
     
      - 450000*r(46,Mak,3) - 460000*r(47,Mak,3) - 470000*r(48,Mak,3) - 480000*r(49,Mak,3) - 490000*r(50,Mak,3) - 500000*r(51,Mak,3) - 510000*r(52,Mak,3) - 520000*r(53,Mak,3) - 530000*r(54,Mak,3) - 540000*r(55,Mak,3) - 550000*r(56,Mak,3)
     
      - 560000*r(57,Mak,3) - 570000*r(58,Mak,3) - 580000*r(59,Mak,3) - 590000*r(60,Mak,3) - 600000*r(61,Mak,3) - 610000*r(62,Mak,3) - 620000*r(63,Mak,3) - 630000*r(64,Mak,3) - 640000*r(65,Mak,3) - 650000*r(66,Mak,3) - 660000*r(67,Mak,3)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/19/17 02:05:06 Page 30
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 437


     timber_bought  =E=  amount of timber i bought in each year     
     
      - 670000*r(68,Mak,3) - 680000*r(69,Mak,3) - 690000*r(70,Mak,3) - 700000*r(71,Mak,3) - 710000*r(72,Mak,3) - 720000*r(73,Mak,3) - 730000*r(74,Mak,3) - 740000*r(75,Mak,3) - 750000*r(76,Mak,3) - 760000*r(77,Mak,3) - 770000*r(78,Mak,3)
     
      - 780000*r(79,Mak,3) - 790000*r(80,Mak,3) - 800000*r(81,Mak,3) - 810000*r(82,Mak,3) - 820000*r(83,Mak,3) - 830000*r(84,Mak,3) - 840000*r(85,Mak,3) - 850000*r(86,Mak,3) - 860000*r(87,Mak,3) - 870000*r(88,Mak,3) - 880000*r(89,Mak,3)
     
      - 890000*r(90,Mak,3) - 900000*r(91,Mak,3) - 910000*r(92,Mak,3) - 920000*r(93,Mak,3) - 930000*r(94,Mak,3) - 940000*r(95,Mak,3) - 950000*r(96,Mak,3) - 960000*r(97,Mak,3) - 970000*r(98,Mak,3) - 980000*r(99,Mak,3) - 990000*r(100,Mak,3)
     
      - 1000000*r(101,Mak,3) - 1010000*r(102,Mak,3) - 1020000*r(103,Mak,3) - 1030000*r(104,Mak,3) - 1040000*r(105,Mak,3) - 1050000*r(106,Mak,3) - 1060000*r(107,Mak,3) + b(Mak,3) =E= 0 ; (LHS = 0)
     
timber_bought(Kuk,1)..  - 10000*r(2,Kuk,1) - 20000*r(3,Kuk,1) - 30000*r(4,Kuk,1) - 40000*r(5,Kuk,1) - 50000*r(6,Kuk,1) - 60000*r(7,Kuk,1) - 70000*r(8,Kuk,1) - 80000*r(9,Kuk,1) - 90000*r(10,Kuk,1) - 100000*r(11,Kuk,1) - 110000*r(12,Kuk,1)
     
      - 120000*r(13,Kuk,1) - 130000*r(14,Kuk,1) - 140000*r(15,Kuk,1) - 150000*r(16,Kuk,1) - 160000*r(17,Kuk,1) - 170000*r(18,Kuk,1) - 180000*r(19,Kuk,1) - 190000*r(20,Kuk,1) - 200000*r(21,Kuk,1) - 210000*r(22,Kuk,1) - 220000*r(23,Kuk,1)
     
      - 230000*r(24,Kuk,1) - 240000*r(25,Kuk,1) - 250000*r(26,Kuk,1) - 260000*r(27,Kuk,1) - 270000*r(28,Kuk,1) - 280000*r(29,Kuk,1) - 290000*r(30,Kuk,1) - 300000*r(31,Kuk,1) - 310000*r(32,Kuk,1) - 320000*r(33,Kuk,1) - 330000*r(34,Kuk,1)
     
      - 340000*r(35,Kuk,1) - 350000*r(36,Kuk,1) - 360000*r(37,Kuk,1) - 370000*r(38,Kuk,1) - 380000*r(39,Kuk,1) - 390000*r(40,Kuk,1) - 400000*r(41,Kuk,1) - 410000*r(42,Kuk,1) - 420000*r(43,Kuk,1) - 430000*r(44,Kuk,1) - 440000*r(45,Kuk,1)
     
      - 450000*r(46,Kuk,1) - 460000*r(47,Kuk,1) - 470000*r(48,Kuk,1) - 480000*r(49,Kuk,1) - 490000*r(50,Kuk,1) - 500000*r(51,Kuk,1) - 510000*r(52,Kuk,1) - 520000*r(53,Kuk,1) - 530000*r(54,Kuk,1) - 540000*r(55,Kuk,1) - 550000*r(56,Kuk,1)
     
      - 560000*r(57,Kuk,1) - 570000*r(58,Kuk,1) - 580000*r(59,Kuk,1) - 590000*r(60,Kuk,1) - 600000*r(61,Kuk,1) - 610000*r(62,Kuk,1) - 620000*r(63,Kuk,1) - 630000*r(64,Kuk,1) - 640000*r(65,Kuk,1) - 650000*r(66,Kuk,1) - 660000*r(67,Kuk,1)
     
      - 670000*r(68,Kuk,1) - 680000*r(69,Kuk,1) - 690000*r(70,Kuk,1) - 700000*r(71,Kuk,1) - 710000*r(72,Kuk,1) - 720000*r(73,Kuk,1) - 730000*r(74,Kuk,1) - 740000*r(75,Kuk,1) - 750000*r(76,Kuk,1) - 760000*r(77,Kuk,1) - 770000*r(78,Kuk,1)
     
      - 780000*r(79,Kuk,1) - 790000*r(80,Kuk,1) - 800000*r(81,Kuk,1) - 810000*r(82,Kuk,1) - 820000*r(83,Kuk,1) - 830000*r(84,Kuk,1) - 840000*r(85,Kuk,1) - 850000*r(86,Kuk,1) - 860000*r(87,Kuk,1) - 870000*r(88,Kuk,1) - 880000*r(89,Kuk,1)
     
      - 890000*r(90,Kuk,1) - 900000*r(91,Kuk,1) - 910000*r(92,Kuk,1) - 920000*r(93,Kuk,1) - 930000*r(94,Kuk,1) - 940000*r(95,Kuk,1) - 950000*r(96,Kuk,1) - 960000*r(97,Kuk,1) - 970000*r(98,Kuk,1) - 980000*r(99,Kuk,1) - 990000*r(100,Kuk,1)
     
      - 1000000*r(101,Kuk,1) - 1010000*r(102,Kuk,1) - 1020000*r(103,Kuk,1) - 1030000*r(104,Kuk,1) - 1040000*r(105,Kuk,1) - 1050000*r(106,Kuk,1) - 1060000*r(107,Kuk,1) + b(Kuk,1) =E= 0 ; (LHS = 0)
     
timber_bought(Kuk,2)..  - 10000*r(2,Kuk,2) - 20000*r(3,Kuk,2) - 30000*r(4,Kuk,2) - 40000*r(5,Kuk,2) - 50000*r(6,Kuk,2) - 60000*r(7,Kuk,2) - 70000*r(8,Kuk,2) - 80000*r(9,Kuk,2) - 90000*r(10,Kuk,2) - 100000*r(11,Kuk,2) - 110000*r(12,Kuk,2)
     
      - 120000*r(13,Kuk,2) - 130000*r(14,Kuk,2) - 140000*r(15,Kuk,2) - 150000*r(16,Kuk,2) - 160000*r(17,Kuk,2) - 170000*r(18,Kuk,2) - 180000*r(19,Kuk,2) - 190000*r(20,Kuk,2) - 200000*r(21,Kuk,2) - 210000*r(22,Kuk,2) - 220000*r(23,Kuk,2)
     
      - 230000*r(24,Kuk,2) - 240000*r(25,Kuk,2) - 250000*r(26,Kuk,2) - 260000*r(27,Kuk,2) - 270000*r(28,Kuk,2) - 280000*r(29,Kuk,2) - 290000*r(30,Kuk,2) - 300000*r(31,Kuk,2) - 310000*r(32,Kuk,2) - 320000*r(33,Kuk,2) - 330000*r(34,Kuk,2)
     
      - 340000*r(35,Kuk,2) - 350000*r(36,Kuk,2) - 360000*r(37,Kuk,2) - 370000*r(38,Kuk,2) - 380000*r(39,Kuk,2) - 390000*r(40,Kuk,2) - 400000*r(41,Kuk,2) - 410000*r(42,Kuk,2) - 420000*r(43,Kuk,2) - 430000*r(44,Kuk,2) - 440000*r(45,Kuk,2)
     
      - 450000*r(46,Kuk,2) - 460000*r(47,Kuk,2) - 470000*r(48,Kuk,2) - 480000*r(49,Kuk,2) - 490000*r(50,Kuk,2) - 500000*r(51,Kuk,2) - 510000*r(52,Kuk,2) - 520000*r(53,Kuk,2) - 530000*r(54,Kuk,2) - 540000*r(55,Kuk,2) - 550000*r(56,Kuk,2)
     
      - 560000*r(57,Kuk,2) - 570000*r(58,Kuk,2) - 580000*r(59,Kuk,2) - 590000*r(60,Kuk,2) - 600000*r(61,Kuk,2) - 610000*r(62,Kuk,2) - 620000*r(63,Kuk,2) - 630000*r(64,Kuk,2) - 640000*r(65,Kuk,2) - 650000*r(66,Kuk,2) - 660000*r(67,Kuk,2)
     
      - 670000*r(68,Kuk,2) - 680000*r(69,Kuk,2) - 690000*r(70,Kuk,2) - 700000*r(71,Kuk,2) - 710000*r(72,Kuk,2) - 720000*r(73,Kuk,2) - 730000*r(74,Kuk,2) - 740000*r(75,Kuk,2) - 750000*r(76,Kuk,2) - 760000*r(77,Kuk,2) - 770000*r(78,Kuk,2)
     
      - 780000*r(79,Kuk,2) - 790000*r(80,Kuk,2) - 800000*r(81,Kuk,2) - 810000*r(82,Kuk,2) - 820000*r(83,Kuk,2) - 830000*r(84,Kuk,2) - 840000*r(85,Kuk,2) - 850000*r(86,Kuk,2) - 860000*r(87,Kuk,2) - 870000*r(88,Kuk,2) - 880000*r(89,Kuk,2)
     
      - 890000*r(90,Kuk,2) - 900000*r(91,Kuk,2) - 910000*r(92,Kuk,2) - 920000*r(93,Kuk,2) - 930000*r(94,Kuk,2) - 940000*r(95,Kuk,2) - 950000*r(96,Kuk,2) - 960000*r(97,Kuk,2) - 970000*r(98,Kuk,2) - 980000*r(99,Kuk,2) - 990000*r(100,Kuk,2)
     
      - 1000000*r(101,Kuk,2) - 1010000*r(102,Kuk,2) - 1020000*r(103,Kuk,2) - 1030000*r(104,Kuk,2) - 1040000*r(105,Kuk,2) - 1050000*r(106,Kuk,2) - 1060000*r(107,Kuk,2) + b(Kuk,2) =E= 0 ; (LHS = 0)
     
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/19/17 02:05:06 Page 31
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 437


     timber_bought  =E=  amount of timber i bought in each year

timber_bought(Kuk,3)..  - 10000*r(2,Kuk,3) - 20000*r(3,Kuk,3) - 30000*r(4,Kuk,3) - 40000*r(5,Kuk,3) - 50000*r(6,Kuk,3) - 60000*r(7,Kuk,3) - 70000*r(8,Kuk,3) - 80000*r(9,Kuk,3) - 90000*r(10,Kuk,3) - 100000*r(11,Kuk,3) - 110000*r(12,Kuk,3)
     
      - 120000*r(13,Kuk,3) - 130000*r(14,Kuk,3) - 140000*r(15,Kuk,3) - 150000*r(16,Kuk,3) - 160000*r(17,Kuk,3) - 170000*r(18,Kuk,3) - 180000*r(19,Kuk,3) - 190000*r(20,Kuk,3) - 200000*r(21,Kuk,3) - 210000*r(22,Kuk,3) - 220000*r(23,Kuk,3)
     
      - 230000*r(24,Kuk,3) - 240000*r(25,Kuk,3) - 250000*r(26,Kuk,3) - 260000*r(27,Kuk,3) - 270000*r(28,Kuk,3) - 280000*r(29,Kuk,3) - 290000*r(30,Kuk,3) - 300000*r(31,Kuk,3) - 310000*r(32,Kuk,3) - 320000*r(33,Kuk,3) - 330000*r(34,Kuk,3)
     
      - 340000*r(35,Kuk,3) - 350000*r(36,Kuk,3) - 360000*r(37,Kuk,3) - 370000*r(38,Kuk,3) - 380000*r(39,Kuk,3) - 390000*r(40,Kuk,3) - 400000*r(41,Kuk,3) - 410000*r(42,Kuk,3) - 420000*r(43,Kuk,3) - 430000*r(44,Kuk,3) - 440000*r(45,Kuk,3)
     
      - 450000*r(46,Kuk,3) - 460000*r(47,Kuk,3) - 470000*r(48,Kuk,3) - 480000*r(49,Kuk,3) - 490000*r(50,Kuk,3) - 500000*r(51,Kuk,3) - 510000*r(52,Kuk,3) - 520000*r(53,Kuk,3) - 530000*r(54,Kuk,3) - 540000*r(55,Kuk,3) - 550000*r(56,Kuk,3)
     
      - 560000*r(57,Kuk,3) - 570000*r(58,Kuk,3) - 580000*r(59,Kuk,3) - 590000*r(60,Kuk,3) - 600000*r(61,Kuk,3) - 610000*r(62,Kuk,3) - 620000*r(63,Kuk,3) - 630000*r(64,Kuk,3) - 640000*r(65,Kuk,3) - 650000*r(66,Kuk,3) - 660000*r(67,Kuk,3)
     
      - 670000*r(68,Kuk,3) - 680000*r(69,Kuk,3) - 690000*r(70,Kuk,3) - 700000*r(71,Kuk,3) - 710000*r(72,Kuk,3) - 720000*r(73,Kuk,3) - 730000*r(74,Kuk,3) - 740000*r(75,Kuk,3) - 750000*r(76,Kuk,3) - 760000*r(77,Kuk,3) - 770000*r(78,Kuk,3)
     
      - 780000*r(79,Kuk,3) - 790000*r(80,Kuk,3) - 800000*r(81,Kuk,3) - 810000*r(82,Kuk,3) - 820000*r(83,Kuk,3) - 830000*r(84,Kuk,3) - 840000*r(85,Kuk,3) - 850000*r(86,Kuk,3) - 860000*r(87,Kuk,3) - 870000*r(88,Kuk,3) - 880000*r(89,Kuk,3)
     
      - 890000*r(90,Kuk,3) - 900000*r(91,Kuk,3) - 910000*r(92,Kuk,3) - 920000*r(93,Kuk,3) - 930000*r(94,Kuk,3) - 940000*r(95,Kuk,3) - 950000*r(96,Kuk,3) - 960000*r(97,Kuk,3) - 970000*r(98,Kuk,3) - 980000*r(99,Kuk,3) - 990000*r(100,Kuk,3)
     
      - 1000000*r(101,Kuk,3) - 1010000*r(102,Kuk,3) - 1020000*r(103,Kuk,3) - 1030000*r(104,Kuk,3) - 1040000*r(105,Kuk,3) - 1050000*r(106,Kuk,3) - 1060000*r(107,Kuk,3) + b(Kuk,3) =E= 0 ; (LHS = 0)
     
timber_bought(Kok,1)..  - 10000*r(2,Kok,1) - 20000*r(3,Kok,1) - 30000*r(4,Kok,1) - 40000*r(5,Kok,1) - 50000*r(6,Kok,1) - 60000*r(7,Kok,1) - 70000*r(8,Kok,1) - 80000*r(9,Kok,1) - 90000*r(10,Kok,1) - 100000*r(11,Kok,1) - 110000*r(12,Kok,1)
     
      - 120000*r(13,Kok,1) - 130000*r(14,Kok,1) - 140000*r(15,Kok,1) - 150000*r(16,Kok,1) - 160000*r(17,Kok,1) - 170000*r(18,Kok,1) - 180000*r(19,Kok,1) - 190000*r(20,Kok,1) - 200000*r(21,Kok,1) - 210000*r(22,Kok,1) - 220000*r(23,Kok,1)
     
      - 230000*r(24,Kok,1) - 240000*r(25,Kok,1) - 250000*r(26,Kok,1) - 260000*r(27,Kok,1) - 270000*r(28,Kok,1) - 280000*r(29,Kok,1) - 290000*r(30,Kok,1) - 300000*r(31,Kok,1) - 310000*r(32,Kok,1) - 320000*r(33,Kok,1) - 330000*r(34,Kok,1)
     
      - 340000*r(35,Kok,1) - 350000*r(36,Kok,1) - 360000*r(37,Kok,1) - 370000*r(38,Kok,1) - 380000*r(39,Kok,1) - 390000*r(40,Kok,1) - 400000*r(41,Kok,1) - 410000*r(42,Kok,1) - 420000*r(43,Kok,1) - 430000*r(44,Kok,1) - 440000*r(45,Kok,1)
     
      - 450000*r(46,Kok,1) - 460000*r(47,Kok,1) - 470000*r(48,Kok,1) - 480000*r(49,Kok,1) - 490000*r(50,Kok,1) - 500000*r(51,Kok,1) - 510000*r(52,Kok,1) - 520000*r(53,Kok,1) - 530000*r(54,Kok,1) - 540000*r(55,Kok,1) - 550000*r(56,Kok,1)
     
      - 560000*r(57,Kok,1) - 570000*r(58,Kok,1) - 580000*r(59,Kok,1) - 590000*r(60,Kok,1) - 600000*r(61,Kok,1) - 610000*r(62,Kok,1) - 620000*r(63,Kok,1) - 630000*r(64,Kok,1) - 640000*r(65,Kok,1) - 650000*r(66,Kok,1) - 660000*r(67,Kok,1)
     
      - 670000*r(68,Kok,1) - 680000*r(69,Kok,1) - 690000*r(70,Kok,1) - 700000*r(71,Kok,1) - 710000*r(72,Kok,1) - 720000*r(73,Kok,1) - 730000*r(74,Kok,1) - 740000*r(75,Kok,1) - 750000*r(76,Kok,1) - 760000*r(77,Kok,1) - 770000*r(78,Kok,1)
     
      - 780000*r(79,Kok,1) - 790000*r(80,Kok,1) - 800000*r(81,Kok,1) - 810000*r(82,Kok,1) - 820000*r(83,Kok,1) - 830000*r(84,Kok,1) - 840000*r(85,Kok,1) - 850000*r(86,Kok,1) - 860000*r(87,Kok,1) - 870000*r(88,Kok,1) - 880000*r(89,Kok,1)
     
      - 890000*r(90,Kok,1) - 900000*r(91,Kok,1) - 910000*r(92,Kok,1) - 920000*r(93,Kok,1) - 930000*r(94,Kok,1) - 940000*r(95,Kok,1) - 950000*r(96,Kok,1) - 960000*r(97,Kok,1) - 970000*r(98,Kok,1) - 980000*r(99,Kok,1) - 990000*r(100,Kok,1)
     
      - 1000000*r(101,Kok,1) - 1010000*r(102,Kok,1) - 1020000*r(103,Kok,1) - 1030000*r(104,Kok,1) - 1040000*r(105,Kok,1) - 1050000*r(106,Kok,1) - 1060000*r(107,Kok,1) + b(Kok,1) =E= 0 ; (LHS = 0)
     
timber_bought(Kok,2)..  - 10000*r(2,Kok,2) - 20000*r(3,Kok,2) - 30000*r(4,Kok,2) - 40000*r(5,Kok,2) - 50000*r(6,Kok,2) - 60000*r(7,Kok,2) - 70000*r(8,Kok,2) - 80000*r(9,Kok,2) - 90000*r(10,Kok,2) - 100000*r(11,Kok,2) - 110000*r(12,Kok,2)
     
      - 120000*r(13,Kok,2) - 130000*r(14,Kok,2) - 140000*r(15,Kok,2) - 150000*r(16,Kok,2) - 160000*r(17,Kok,2) - 170000*r(18,Kok,2) - 180000*r(19,Kok,2) - 190000*r(20,Kok,2) - 200000*r(21,Kok,2) - 210000*r(22,Kok,2) - 220000*r(23,Kok,2)
     
      - 230000*r(24,Kok,2) - 240000*r(25,Kok,2) - 250000*r(26,Kok,2) - 260000*r(27,Kok,2) - 270000*r(28,Kok,2) - 280000*r(29,Kok,2) - 290000*r(30,Kok,2) - 300000*r(31,Kok,2) - 310000*r(32,Kok,2) - 320000*r(33,Kok,2) - 330000*r(34,Kok,2)
     
      - 340000*r(35,Kok,2) - 350000*r(36,Kok,2) - 360000*r(37,Kok,2) - 370000*r(38,Kok,2) - 380000*r(39,Kok,2) - 390000*r(40,Kok,2) - 400000*r(41,Kok,2) - 410000*r(42,Kok,2) - 420000*r(43,Kok,2) - 430000*r(44,Kok,2) - 440000*r(45,Kok,2)
     
      - 450000*r(46,Kok,2) - 460000*r(47,Kok,2) - 470000*r(48,Kok,2) - 480000*r(49,Kok,2) - 490000*r(50,Kok,2) - 500000*r(51,Kok,2) - 510000*r(52,Kok,2) - 520000*r(53,Kok,2) - 530000*r(54,Kok,2) - 540000*r(55,Kok,2) - 550000*r(56,Kok,2)
     
      - 560000*r(57,Kok,2) - 570000*r(58,Kok,2) - 580000*r(59,Kok,2) - 590000*r(60,Kok,2) - 600000*r(61,Kok,2) - 610000*r(62,Kok,2) - 620000*r(63,Kok,2) - 630000*r(64,Kok,2) - 640000*r(65,Kok,2) - 650000*r(66,Kok,2) - 660000*r(67,Kok,2)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/19/17 02:05:06 Page 32
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 437


     timber_bought  =E=  amount of timber i bought in each year     
     
      - 670000*r(68,Kok,2) - 680000*r(69,Kok,2) - 690000*r(70,Kok,2) - 700000*r(71,Kok,2) - 710000*r(72,Kok,2) - 720000*r(73,Kok,2) - 730000*r(74,Kok,2) - 740000*r(75,Kok,2) - 750000*r(76,Kok,2) - 760000*r(77,Kok,2) - 770000*r(78,Kok,2)
     
      - 780000*r(79,Kok,2) - 790000*r(80,Kok,2) - 800000*r(81,Kok,2) - 810000*r(82,Kok,2) - 820000*r(83,Kok,2) - 830000*r(84,Kok,2) - 840000*r(85,Kok,2) - 850000*r(86,Kok,2) - 860000*r(87,Kok,2) - 870000*r(88,Kok,2) - 880000*r(89,Kok,2)
     
      - 890000*r(90,Kok,2) - 900000*r(91,Kok,2) - 910000*r(92,Kok,2) - 920000*r(93,Kok,2) - 930000*r(94,Kok,2) - 940000*r(95,Kok,2) - 950000*r(96,Kok,2) - 960000*r(97,Kok,2) - 970000*r(98,Kok,2) - 980000*r(99,Kok,2) - 990000*r(100,Kok,2)
     
      - 1000000*r(101,Kok,2) - 1010000*r(102,Kok,2) - 1020000*r(103,Kok,2) - 1030000*r(104,Kok,2) - 1040000*r(105,Kok,2) - 1050000*r(106,Kok,2) - 1060000*r(107,Kok,2) + b(Kok,2) =E= 0 ; (LHS = 0)
     
timber_bought(Kok,3)..  - 10000*r(2,Kok,3) - 20000*r(3,Kok,3) - 30000*r(4,Kok,3) - 40000*r(5,Kok,3) - 50000*r(6,Kok,3) - 60000*r(7,Kok,3) - 70000*r(8,Kok,3) - 80000*r(9,Kok,3) - 90000*r(10,Kok,3) - 100000*r(11,Kok,3) - 110000*r(12,Kok,3)
     
      - 120000*r(13,Kok,3) - 130000*r(14,Kok,3) - 140000*r(15,Kok,3) - 150000*r(16,Kok,3) - 160000*r(17,Kok,3) - 170000*r(18,Kok,3) - 180000*r(19,Kok,3) - 190000*r(20,Kok,3) - 200000*r(21,Kok,3) - 210000*r(22,Kok,3) - 220000*r(23,Kok,3)
     
      - 230000*r(24,Kok,3) - 240000*r(25,Kok,3) - 250000*r(26,Kok,3) - 260000*r(27,Kok,3) - 270000*r(28,Kok,3) - 280000*r(29,Kok,3) - 290000*r(30,Kok,3) - 300000*r(31,Kok,3) - 310000*r(32,Kok,3) - 320000*r(33,Kok,3) - 330000*r(34,Kok,3)
     
      - 340000*r(35,Kok,3) - 350000*r(36,Kok,3) - 360000*r(37,Kok,3) - 370000*r(38,Kok,3) - 380000*r(39,Kok,3) - 390000*r(40,Kok,3) - 400000*r(41,Kok,3) - 410000*r(42,Kok,3) - 420000*r(43,Kok,3) - 430000*r(44,Kok,3) - 440000*r(45,Kok,3)
     
      - 450000*r(46,Kok,3) - 460000*r(47,Kok,3) - 470000*r(48,Kok,3) - 480000*r(49,Kok,3) - 490000*r(50,Kok,3) - 500000*r(51,Kok,3) - 510000*r(52,Kok,3) - 520000*r(53,Kok,3) - 530000*r(54,Kok,3) - 540000*r(55,Kok,3) - 550000*r(56,Kok,3)
     
      - 560000*r(57,Kok,3) - 570000*r(58,Kok,3) - 580000*r(59,Kok,3) - 590000*r(60,Kok,3) - 600000*r(61,Kok,3) - 610000*r(62,Kok,3) - 620000*r(63,Kok,3) - 630000*r(64,Kok,3) - 640000*r(65,Kok,3) - 650000*r(66,Kok,3) - 660000*r(67,Kok,3)
     
      - 670000*r(68,Kok,3) - 680000*r(69,Kok,3) - 690000*r(70,Kok,3) - 700000*r(71,Kok,3) - 710000*r(72,Kok,3) - 720000*r(73,Kok,3) - 730000*r(74,Kok,3) - 740000*r(75,Kok,3) - 750000*r(76,Kok,3) - 760000*r(77,Kok,3) - 770000*r(78,Kok,3)
     
      - 780000*r(79,Kok,3) - 790000*r(80,Kok,3) - 800000*r(81,Kok,3) - 810000*r(82,Kok,3) - 820000*r(83,Kok,3) - 830000*r(84,Kok,3) - 840000*r(85,Kok,3) - 850000*r(86,Kok,3) - 860000*r(87,Kok,3) - 870000*r(88,Kok,3) - 880000*r(89,Kok,3)
     
      - 890000*r(90,Kok,3) - 900000*r(91,Kok,3) - 910000*r(92,Kok,3) - 920000*r(93,Kok,3) - 930000*r(94,Kok,3) - 940000*r(95,Kok,3) - 950000*r(96,Kok,3) - 960000*r(97,Kok,3) - 970000*r(98,Kok,3) - 980000*r(99,Kok,3) - 990000*r(100,Kok,3)
     
      - 1000000*r(101,Kok,3) - 1010000*r(102,Kok,3) - 1020000*r(103,Kok,3) - 1030000*r(104,Kok,3) - 1040000*r(105,Kok,3) - 1050000*r(106,Kok,3) - 1060000*r(107,Kok,3) + b(Kok,3) =E= 0 ; (LHS = 0)
     

---- Barges_buy  =E=  ensure we only pick one value n for barges for each timber i

Barges_buy(Mat,1)..  r(1,Mat,1) + r(2,Mat,1) + r(3,Mat,1) + r(4,Mat,1) + r(5,Mat,1) + r(6,Mat,1) + r(7,Mat,1) + r(8,Mat,1) + r(9,Mat,1) + r(10,Mat,1) + r(11,Mat,1) + r(12,Mat,1) + r(13,Mat,1) + r(14,Mat,1) + r(15,Mat,1) + r(16,Mat,1) + r(17,Mat,1)
     
      + r(18,Mat,1) + r(19,Mat,1) + r(20,Mat,1) + r(21,Mat,1) + r(22,Mat,1) + r(23,Mat,1) + r(24,Mat,1) + r(25,Mat,1) + r(26,Mat,1) + r(27,Mat,1) + r(28,Mat,1) + r(29,Mat,1) + r(30,Mat,1) + r(31,Mat,1) + r(32,Mat,1) + r(33,Mat,1) + r(34,Mat,1)
     
      + r(35,Mat,1) + r(36,Mat,1) + r(37,Mat,1) + r(38,Mat,1) + r(39,Mat,1) + r(40,Mat,1) + r(41,Mat,1) + r(42,Mat,1) + r(43,Mat,1) + r(44,Mat,1) + r(45,Mat,1) + r(46,Mat,1) + r(47,Mat,1) + r(48,Mat,1) + r(49,Mat,1) + r(50,Mat,1) + r(51,Mat,1)
     
      + r(52,Mat,1) + r(53,Mat,1) + r(54,Mat,1) + r(55,Mat,1) + r(56,Mat,1) + r(57,Mat,1) + r(58,Mat,1) + r(59,Mat,1) + r(60,Mat,1) + r(61,Mat,1) + r(62,Mat,1) + r(63,Mat,1) + r(64,Mat,1) + r(65,Mat,1) + r(66,Mat,1) + r(67,Mat,1) + r(68,Mat,1)
     
      + r(69,Mat,1) + r(70,Mat,1) + r(71,Mat,1) + r(72,Mat,1) + r(73,Mat,1) + r(74,Mat,1) + r(75,Mat,1) + r(76,Mat,1) + r(77,Mat,1) + r(78,Mat,1) + r(79,Mat,1) + r(80,Mat,1) + r(81,Mat,1) + r(82,Mat,1) + r(83,Mat,1) + r(84,Mat,1) + r(85,Mat,1)
     
      + r(86,Mat,1) + r(87,Mat,1) + r(88,Mat,1) + r(89,Mat,1) + r(90,Mat,1) + r(91,Mat,1) + r(92,Mat,1) + r(93,Mat,1) + r(94,Mat,1) + r(95,Mat,1) + r(96,Mat,1) + r(97,Mat,1) + r(98,Mat,1) + r(99,Mat,1) + r(100,Mat,1) + r(101,Mat,1) + r(102,Mat,1)
     
      + r(103,Mat,1) + r(104,Mat,1) + r(105,Mat,1) + r(106,Mat,1) + r(107,Mat,1) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_buy(Mat,2)..  r(1,Mat,2) + r(2,Mat,2) + r(3,Mat,2) + r(4,Mat,2) + r(5,Mat,2) + r(6,Mat,2) + r(7,Mat,2) + r(8,Mat,2) + r(9,Mat,2) + r(10,Mat,2) + r(11,Mat,2) + r(12,Mat,2) + r(13,Mat,2) + r(14,Mat,2) + r(15,Mat,2) + r(16,Mat,2) + r(17,Mat,2)
     
      + r(18,Mat,2) + r(19,Mat,2) + r(20,Mat,2) + r(21,Mat,2) + r(22,Mat,2) + r(23,Mat,2) + r(24,Mat,2) + r(25,Mat,2) + r(26,Mat,2) + r(27,Mat,2) + r(28,Mat,2) + r(29,Mat,2) + r(30,Mat,2) + r(31,Mat,2) + r(32,Mat,2) + r(33,Mat,2) + r(34,Mat,2)
     
      + r(35,Mat,2) + r(36,Mat,2) + r(37,Mat,2) + r(38,Mat,2) + r(39,Mat,2) + r(40,Mat,2) + r(41,Mat,2) + r(42,Mat,2) + r(43,Mat,2) + r(44,Mat,2) + r(45,Mat,2) + r(46,Mat,2) + r(47,Mat,2) + r(48,Mat,2) + r(49,Mat,2) + r(50,Mat,2) + r(51,Mat,2)
     
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/19/17 02:05:06 Page 33
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 437


     Barges_buy  =E=  ensure we only pick one value n for barges for each timber i     
     
      + r(52,Mat,2) + r(53,Mat,2) + r(54,Mat,2) + r(55,Mat,2) + r(56,Mat,2) + r(57,Mat,2) + r(58,Mat,2) + r(59,Mat,2) + r(60,Mat,2) + r(61,Mat,2) + r(62,Mat,2) + r(63,Mat,2) + r(64,Mat,2) + r(65,Mat,2) + r(66,Mat,2) + r(67,Mat,2) + r(68,Mat,2)
     
      + r(69,Mat,2) + r(70,Mat,2) + r(71,Mat,2) + r(72,Mat,2) + r(73,Mat,2) + r(74,Mat,2) + r(75,Mat,2) + r(76,Mat,2) + r(77,Mat,2) + r(78,Mat,2) + r(79,Mat,2) + r(80,Mat,2) + r(81,Mat,2) + r(82,Mat,2) + r(83,Mat,2) + r(84,Mat,2) + r(85,Mat,2)
     
      + r(86,Mat,2) + r(87,Mat,2) + r(88,Mat,2) + r(89,Mat,2) + r(90,Mat,2) + r(91,Mat,2) + r(92,Mat,2) + r(93,Mat,2) + r(94,Mat,2) + r(95,Mat,2) + r(96,Mat,2) + r(97,Mat,2) + r(98,Mat,2) + r(99,Mat,2) + r(100,Mat,2) + r(101,Mat,2) + r(102,Mat,2)
     
      + r(103,Mat,2) + r(104,Mat,2) + r(105,Mat,2) + r(106,Mat,2) + r(107,Mat,2) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_buy(Mat,3)..  r(1,Mat,3) + r(2,Mat,3) + r(3,Mat,3) + r(4,Mat,3) + r(5,Mat,3) + r(6,Mat,3) + r(7,Mat,3) + r(8,Mat,3) + r(9,Mat,3) + r(10,Mat,3) + r(11,Mat,3) + r(12,Mat,3) + r(13,Mat,3) + r(14,Mat,3) + r(15,Mat,3) + r(16,Mat,3) + r(17,Mat,3)
     
      + r(18,Mat,3) + r(19,Mat,3) + r(20,Mat,3) + r(21,Mat,3) + r(22,Mat,3) + r(23,Mat,3) + r(24,Mat,3) + r(25,Mat,3) + r(26,Mat,3) + r(27,Mat,3) + r(28,Mat,3) + r(29,Mat,3) + r(30,Mat,3) + r(31,Mat,3) + r(32,Mat,3) + r(33,Mat,3) + r(34,Mat,3)
     
      + r(35,Mat,3) + r(36,Mat,3) + r(37,Mat,3) + r(38,Mat,3) + r(39,Mat,3) + r(40,Mat,3) + r(41,Mat,3) + r(42,Mat,3) + r(43,Mat,3) + r(44,Mat,3) + r(45,Mat,3) + r(46,Mat,3) + r(47,Mat,3) + r(48,Mat,3) + r(49,Mat,3) + r(50,Mat,3) + r(51,Mat,3)
     
      + r(52,Mat,3) + r(53,Mat,3) + r(54,Mat,3) + r(55,Mat,3) + r(56,Mat,3) + r(57,Mat,3) + r(58,Mat,3) + r(59,Mat,3) + r(60,Mat,3) + r(61,Mat,3) + r(62,Mat,3) + r(63,Mat,3) + r(64,Mat,3) + r(65,Mat,3) + r(66,Mat,3) + r(67,Mat,3) + r(68,Mat,3)
     
      + r(69,Mat,3) + r(70,Mat,3) + r(71,Mat,3) + r(72,Mat,3) + r(73,Mat,3) + r(74,Mat,3) + r(75,Mat,3) + r(76,Mat,3) + r(77,Mat,3) + r(78,Mat,3) + r(79,Mat,3) + r(80,Mat,3) + r(81,Mat,3) + r(82,Mat,3) + r(83,Mat,3) + r(84,Mat,3) + r(85,Mat,3)
     
      + r(86,Mat,3) + r(87,Mat,3) + r(88,Mat,3) + r(89,Mat,3) + r(90,Mat,3) + r(91,Mat,3) + r(92,Mat,3) + r(93,Mat,3) + r(94,Mat,3) + r(95,Mat,3) + r(96,Mat,3) + r(97,Mat,3) + r(98,Mat,3) + r(99,Mat,3) + r(100,Mat,3) + r(101,Mat,3) + r(102,Mat,3)
     
      + r(103,Mat,3) + r(104,Mat,3) + r(105,Mat,3) + r(106,Mat,3) + r(107,Mat,3) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_buy(Kut,1)..  r(1,Kut,1) + r(2,Kut,1) + r(3,Kut,1) + r(4,Kut,1) + r(5,Kut,1) + r(6,Kut,1) + r(7,Kut,1) + r(8,Kut,1) + r(9,Kut,1) + r(10,Kut,1) + r(11,Kut,1) + r(12,Kut,1) + r(13,Kut,1) + r(14,Kut,1) + r(15,Kut,1) + r(16,Kut,1) + r(17,Kut,1)
     
      + r(18,Kut,1) + r(19,Kut,1) + r(20,Kut,1) + r(21,Kut,1) + r(22,Kut,1) + r(23,Kut,1) + r(24,Kut,1) + r(25,Kut,1) + r(26,Kut,1) + r(27,Kut,1) + r(28,Kut,1) + r(29,Kut,1) + r(30,Kut,1) + r(31,Kut,1) + r(32,Kut,1) + r(33,Kut,1) + r(34,Kut,1)
     
      + r(35,Kut,1) + r(36,Kut,1) + r(37,Kut,1) + r(38,Kut,1) + r(39,Kut,1) + r(40,Kut,1) + r(41,Kut,1) + r(42,Kut,1) + r(43,Kut,1) + r(44,Kut,1) + r(45,Kut,1) + r(46,Kut,1) + r(47,Kut,1) + r(48,Kut,1) + r(49,Kut,1) + r(50,Kut,1) + r(51,Kut,1)
     
      + r(52,Kut,1) + r(53,Kut,1) + r(54,Kut,1) + r(55,Kut,1) + r(56,Kut,1) + r(57,Kut,1) + r(58,Kut,1) + r(59,Kut,1) + r(60,Kut,1) + r(61,Kut,1) + r(62,Kut,1) + r(63,Kut,1) + r(64,Kut,1) + r(65,Kut,1) + r(66,Kut,1) + r(67,Kut,1) + r(68,Kut,1)
     
      + r(69,Kut,1) + r(70,Kut,1) + r(71,Kut,1) + r(72,Kut,1) + r(73,Kut,1) + r(74,Kut,1) + r(75,Kut,1) + r(76,Kut,1) + r(77,Kut,1) + r(78,Kut,1) + r(79,Kut,1) + r(80,Kut,1) + r(81,Kut,1) + r(82,Kut,1) + r(83,Kut,1) + r(84,Kut,1) + r(85,Kut,1)
     
      + r(86,Kut,1) + r(87,Kut,1) + r(88,Kut,1) + r(89,Kut,1) + r(90,Kut,1) + r(91,Kut,1) + r(92,Kut,1) + r(93,Kut,1) + r(94,Kut,1) + r(95,Kut,1) + r(96,Kut,1) + r(97,Kut,1) + r(98,Kut,1) + r(99,Kut,1) + r(100,Kut,1) + r(101,Kut,1) + r(102,Kut,1)
     
      + r(103,Kut,1) + r(104,Kut,1) + r(105,Kut,1) + r(106,Kut,1) + r(107,Kut,1) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_buy(Kut,2)..  r(1,Kut,2) + r(2,Kut,2) + r(3,Kut,2) + r(4,Kut,2) + r(5,Kut,2) + r(6,Kut,2) + r(7,Kut,2) + r(8,Kut,2) + r(9,Kut,2) + r(10,Kut,2) + r(11,Kut,2) + r(12,Kut,2) + r(13,Kut,2) + r(14,Kut,2) + r(15,Kut,2) + r(16,Kut,2) + r(17,Kut,2)
     
      + r(18,Kut,2) + r(19,Kut,2) + r(20,Kut,2) + r(21,Kut,2) + r(22,Kut,2) + r(23,Kut,2) + r(24,Kut,2) + r(25,Kut,2) + r(26,Kut,2) + r(27,Kut,2) + r(28,Kut,2) + r(29,Kut,2) + r(30,Kut,2) + r(31,Kut,2) + r(32,Kut,2) + r(33,Kut,2) + r(34,Kut,2)
     
      + r(35,Kut,2) + r(36,Kut,2) + r(37,Kut,2) + r(38,Kut,2) + r(39,Kut,2) + r(40,Kut,2) + r(41,Kut,2) + r(42,Kut,2) + r(43,Kut,2) + r(44,Kut,2) + r(45,Kut,2) + r(46,Kut,2) + r(47,Kut,2) + r(48,Kut,2) + r(49,Kut,2) + r(50,Kut,2) + r(51,Kut,2)
     
      + r(52,Kut,2) + r(53,Kut,2) + r(54,Kut,2) + r(55,Kut,2) + r(56,Kut,2) + r(57,Kut,2) + r(58,Kut,2) + r(59,Kut,2) + r(60,Kut,2) + r(61,Kut,2) + r(62,Kut,2) + r(63,Kut,2) + r(64,Kut,2) + r(65,Kut,2) + r(66,Kut,2) + r(67,Kut,2) + r(68,Kut,2)
     
      + r(69,Kut,2) + r(70,Kut,2) + r(71,Kut,2) + r(72,Kut,2) + r(73,Kut,2) + r(74,Kut,2) + r(75,Kut,2) + r(76,Kut,2) + r(77,Kut,2) + r(78,Kut,2) + r(79,Kut,2) + r(80,Kut,2) + r(81,Kut,2) + r(82,Kut,2) + r(83,Kut,2) + r(84,Kut,2) + r(85,Kut,2)
     
      + r(86,Kut,2) + r(87,Kut,2) + r(88,Kut,2) + r(89,Kut,2) + r(90,Kut,2) + r(91,Kut,2) + r(92,Kut,2) + r(93,Kut,2) + r(94,Kut,2) + r(95,Kut,2) + r(96,Kut,2) + r(97,Kut,2) + r(98,Kut,2) + r(99,Kut,2) + r(100,Kut,2) + r(101,Kut,2) + r(102,Kut,2)
     
      + r(103,Kut,2) + r(104,Kut,2) + r(105,Kut,2) + r(106,Kut,2) + r(107,Kut,2) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/19/17 02:05:06 Page 34
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 437


     Barges_buy  =E=  ensure we only pick one value n for barges for each timber i

Barges_buy(Kut,3)..  r(1,Kut,3) + r(2,Kut,3) + r(3,Kut,3) + r(4,Kut,3) + r(5,Kut,3) + r(6,Kut,3) + r(7,Kut,3) + r(8,Kut,3) + r(9,Kut,3) + r(10,Kut,3) + r(11,Kut,3) + r(12,Kut,3) + r(13,Kut,3) + r(14,Kut,3) + r(15,Kut,3) + r(16,Kut,3) + r(17,Kut,3)
     
      + r(18,Kut,3) + r(19,Kut,3) + r(20,Kut,3) + r(21,Kut,3) + r(22,Kut,3) + r(23,Kut,3) + r(24,Kut,3) + r(25,Kut,3) + r(26,Kut,3) + r(27,Kut,3) + r(28,Kut,3) + r(29,Kut,3) + r(30,Kut,3) + r(31,Kut,3) + r(32,Kut,3) + r(33,Kut,3) + r(34,Kut,3)
     
      + r(35,Kut,3) + r(36,Kut,3) + r(37,Kut,3) + r(38,Kut,3) + r(39,Kut,3) + r(40,Kut,3) + r(41,Kut,3) + r(42,Kut,3) + r(43,Kut,3) + r(44,Kut,3) + r(45,Kut,3) + r(46,Kut,3) + r(47,Kut,3) + r(48,Kut,3) + r(49,Kut,3) + r(50,Kut,3) + r(51,Kut,3)
     
      + r(52,Kut,3) + r(53,Kut,3) + r(54,Kut,3) + r(55,Kut,3) + r(56,Kut,3) + r(57,Kut,3) + r(58,Kut,3) + r(59,Kut,3) + r(60,Kut,3) + r(61,Kut,3) + r(62,Kut,3) + r(63,Kut,3) + r(64,Kut,3) + r(65,Kut,3) + r(66,Kut,3) + r(67,Kut,3) + r(68,Kut,3)
     
      + r(69,Kut,3) + r(70,Kut,3) + r(71,Kut,3) + r(72,Kut,3) + r(73,Kut,3) + r(74,Kut,3) + r(75,Kut,3) + r(76,Kut,3) + r(77,Kut,3) + r(78,Kut,3) + r(79,Kut,3) + r(80,Kut,3) + r(81,Kut,3) + r(82,Kut,3) + r(83,Kut,3) + r(84,Kut,3) + r(85,Kut,3)
     
      + r(86,Kut,3) + r(87,Kut,3) + r(88,Kut,3) + r(89,Kut,3) + r(90,Kut,3) + r(91,Kut,3) + r(92,Kut,3) + r(93,Kut,3) + r(94,Kut,3) + r(95,Kut,3) + r(96,Kut,3) + r(97,Kut,3) + r(98,Kut,3) + r(99,Kut,3) + r(100,Kut,3) + r(101,Kut,3) + r(102,Kut,3)
     
      + r(103,Kut,3) + r(104,Kut,3) + r(105,Kut,3) + r(106,Kut,3) + r(107,Kut,3) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_buy(Kot,1)..  r(1,Kot,1) + r(2,Kot,1) + r(3,Kot,1) + r(4,Kot,1) + r(5,Kot,1) + r(6,Kot,1) + r(7,Kot,1) + r(8,Kot,1) + r(9,Kot,1) + r(10,Kot,1) + r(11,Kot,1) + r(12,Kot,1) + r(13,Kot,1) + r(14,Kot,1) + r(15,Kot,1) + r(16,Kot,1) + r(17,Kot,1)
     
      + r(18,Kot,1) + r(19,Kot,1) + r(20,Kot,1) + r(21,Kot,1) + r(22,Kot,1) + r(23,Kot,1) + r(24,Kot,1) + r(25,Kot,1) + r(26,Kot,1) + r(27,Kot,1) + r(28,Kot,1) + r(29,Kot,1) + r(30,Kot,1) + r(31,Kot,1) + r(32,Kot,1) + r(33,Kot,1) + r(34,Kot,1)
     
      + r(35,Kot,1) + r(36,Kot,1) + r(37,Kot,1) + r(38,Kot,1) + r(39,Kot,1) + r(40,Kot,1) + r(41,Kot,1) + r(42,Kot,1) + r(43,Kot,1) + r(44,Kot,1) + r(45,Kot,1) + r(46,Kot,1) + r(47,Kot,1) + r(48,Kot,1) + r(49,Kot,1) + r(50,Kot,1) + r(51,Kot,1)
     
      + r(52,Kot,1) + r(53,Kot,1) + r(54,Kot,1) + r(55,Kot,1) + r(56,Kot,1) + r(57,Kot,1) + r(58,Kot,1) + r(59,Kot,1) + r(60,Kot,1) + r(61,Kot,1) + r(62,Kot,1) + r(63,Kot,1) + r(64,Kot,1) + r(65,Kot,1) + r(66,Kot,1) + r(67,Kot,1) + r(68,Kot,1)
     
      + r(69,Kot,1) + r(70,Kot,1) + r(71,Kot,1) + r(72,Kot,1) + r(73,Kot,1) + r(74,Kot,1) + r(75,Kot,1) + r(76,Kot,1) + r(77,Kot,1) + r(78,Kot,1) + r(79,Kot,1) + r(80,Kot,1) + r(81,Kot,1) + r(82,Kot,1) + r(83,Kot,1) + r(84,Kot,1) + r(85,Kot,1)
     
      + r(86,Kot,1) + r(87,Kot,1) + r(88,Kot,1) + r(89,Kot,1) + r(90,Kot,1) + r(91,Kot,1) + r(92,Kot,1) + r(93,Kot,1) + r(94,Kot,1) + r(95,Kot,1) + r(96,Kot,1) + r(97,Kot,1) + r(98,Kot,1) + r(99,Kot,1) + r(100,Kot,1) + r(101,Kot,1) + r(102,Kot,1)
     
      + r(103,Kot,1) + r(104,Kot,1) + r(105,Kot,1) + r(106,Kot,1) + r(107,Kot,1) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_buy(Kot,2)..  r(1,Kot,2) + r(2,Kot,2) + r(3,Kot,2) + r(4,Kot,2) + r(5,Kot,2) + r(6,Kot,2) + r(7,Kot,2) + r(8,Kot,2) + r(9,Kot,2) + r(10,Kot,2) + r(11,Kot,2) + r(12,Kot,2) + r(13,Kot,2) + r(14,Kot,2) + r(15,Kot,2) + r(16,Kot,2) + r(17,Kot,2)
     
      + r(18,Kot,2) + r(19,Kot,2) + r(20,Kot,2) + r(21,Kot,2) + r(22,Kot,2) + r(23,Kot,2) + r(24,Kot,2) + r(25,Kot,2) + r(26,Kot,2) + r(27,Kot,2) + r(28,Kot,2) + r(29,Kot,2) + r(30,Kot,2) + r(31,Kot,2) + r(32,Kot,2) + r(33,Kot,2) + r(34,Kot,2)
     
      + r(35,Kot,2) + r(36,Kot,2) + r(37,Kot,2) + r(38,Kot,2) + r(39,Kot,2) + r(40,Kot,2) + r(41,Kot,2) + r(42,Kot,2) + r(43,Kot,2) + r(44,Kot,2) + r(45,Kot,2) + r(46,Kot,2) + r(47,Kot,2) + r(48,Kot,2) + r(49,Kot,2) + r(50,Kot,2) + r(51,Kot,2)
     
      + r(52,Kot,2) + r(53,Kot,2) + r(54,Kot,2) + r(55,Kot,2) + r(56,Kot,2) + r(57,Kot,2) + r(58,Kot,2) + r(59,Kot,2) + r(60,Kot,2) + r(61,Kot,2) + r(62,Kot,2) + r(63,Kot,2) + r(64,Kot,2) + r(65,Kot,2) + r(66,Kot,2) + r(67,Kot,2) + r(68,Kot,2)
     
      + r(69,Kot,2) + r(70,Kot,2) + r(71,Kot,2) + r(72,Kot,2) + r(73,Kot,2) + r(74,Kot,2) + r(75,Kot,2) + r(76,Kot,2) + r(77,Kot,2) + r(78,Kot,2) + r(79,Kot,2) + r(80,Kot,2) + r(81,Kot,2) + r(82,Kot,2) + r(83,Kot,2) + r(84,Kot,2) + r(85,Kot,2)
     
      + r(86,Kot,2) + r(87,Kot,2) + r(88,Kot,2) + r(89,Kot,2) + r(90,Kot,2) + r(91,Kot,2) + r(92,Kot,2) + r(93,Kot,2) + r(94,Kot,2) + r(95,Kot,2) + r(96,Kot,2) + r(97,Kot,2) + r(98,Kot,2) + r(99,Kot,2) + r(100,Kot,2) + r(101,Kot,2) + r(102,Kot,2)
     
      + r(103,Kot,2) + r(104,Kot,2) + r(105,Kot,2) + r(106,Kot,2) + r(107,Kot,2) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_buy(Kot,3)..  r(1,Kot,3) + r(2,Kot,3) + r(3,Kot,3) + r(4,Kot,3) + r(5,Kot,3) + r(6,Kot,3) + r(7,Kot,3) + r(8,Kot,3) + r(9,Kot,3) + r(10,Kot,3) + r(11,Kot,3) + r(12,Kot,3) + r(13,Kot,3) + r(14,Kot,3) + r(15,Kot,3) + r(16,Kot,3) + r(17,Kot,3)
     
      + r(18,Kot,3) + r(19,Kot,3) + r(20,Kot,3) + r(21,Kot,3) + r(22,Kot,3) + r(23,Kot,3) + r(24,Kot,3) + r(25,Kot,3) + r(26,Kot,3) + r(27,Kot,3) + r(28,Kot,3) + r(29,Kot,3) + r(30,Kot,3) + r(31,Kot,3) + r(32,Kot,3) + r(33,Kot,3) + r(34,Kot,3)
     
      + r(35,Kot,3) + r(36,Kot,3) + r(37,Kot,3) + r(38,Kot,3) + r(39,Kot,3) + r(40,Kot,3) + r(41,Kot,3) + r(42,Kot,3) + r(43,Kot,3) + r(44,Kot,3) + r(45,Kot,3) + r(46,Kot,3) + r(47,Kot,3) + r(48,Kot,3) + r(49,Kot,3) + r(50,Kot,3) + r(51,Kot,3)
     
      + r(52,Kot,3) + r(53,Kot,3) + r(54,Kot,3) + r(55,Kot,3) + r(56,Kot,3) + r(57,Kot,3) + r(58,Kot,3) + r(59,Kot,3) + r(60,Kot,3) + r(61,Kot,3) + r(62,Kot,3) + r(63,Kot,3) + r(64,Kot,3) + r(65,Kot,3) + r(66,Kot,3) + r(67,Kot,3) + r(68,Kot,3)
     
      + r(69,Kot,3) + r(70,Kot,3) + r(71,Kot,3) + r(72,Kot,3) + r(73,Kot,3) + r(74,Kot,3) + r(75,Kot,3) + r(76,Kot,3) + r(77,Kot,3) + r(78,Kot,3) + r(79,Kot,3) + r(80,Kot,3) + r(81,Kot,3) + r(82,Kot,3) + r(83,Kot,3) + r(84,Kot,3) + r(85,Kot,3)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/19/17 02:05:06 Page 35
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 437


     Barges_buy  =E=  ensure we only pick one value n for barges for each timber i     
     
      + r(86,Kot,3) + r(87,Kot,3) + r(88,Kot,3) + r(89,Kot,3) + r(90,Kot,3) + r(91,Kot,3) + r(92,Kot,3) + r(93,Kot,3) + r(94,Kot,3) + r(95,Kot,3) + r(96,Kot,3) + r(97,Kot,3) + r(98,Kot,3) + r(99,Kot,3) + r(100,Kot,3) + r(101,Kot,3) + r(102,Kot,3)
     
      + r(103,Kot,3) + r(104,Kot,3) + r(105,Kot,3) + r(106,Kot,3) + r(107,Kot,3) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_buy(Mak,1)..  r(1,Mak,1) + r(2,Mak,1) + r(3,Mak,1) + r(4,Mak,1) + r(5,Mak,1) + r(6,Mak,1) + r(7,Mak,1) + r(8,Mak,1) + r(9,Mak,1) + r(10,Mak,1) + r(11,Mak,1) + r(12,Mak,1) + r(13,Mak,1) + r(14,Mak,1) + r(15,Mak,1) + r(16,Mak,1) + r(17,Mak,1)
     
      + r(18,Mak,1) + r(19,Mak,1) + r(20,Mak,1) + r(21,Mak,1) + r(22,Mak,1) + r(23,Mak,1) + r(24,Mak,1) + r(25,Mak,1) + r(26,Mak,1) + r(27,Mak,1) + r(28,Mak,1) + r(29,Mak,1) + r(30,Mak,1) + r(31,Mak,1) + r(32,Mak,1) + r(33,Mak,1) + r(34,Mak,1)
     
      + r(35,Mak,1) + r(36,Mak,1) + r(37,Mak,1) + r(38,Mak,1) + r(39,Mak,1) + r(40,Mak,1) + r(41,Mak,1) + r(42,Mak,1) + r(43,Mak,1) + r(44,Mak,1) + r(45,Mak,1) + r(46,Mak,1) + r(47,Mak,1) + r(48,Mak,1) + r(49,Mak,1) + r(50,Mak,1) + r(51,Mak,1)
     
      + r(52,Mak,1) + r(53,Mak,1) + r(54,Mak,1) + r(55,Mak,1) + r(56,Mak,1) + r(57,Mak,1) + r(58,Mak,1) + r(59,Mak,1) + r(60,Mak,1) + r(61,Mak,1) + r(62,Mak,1) + r(63,Mak,1) + r(64,Mak,1) + r(65,Mak,1) + r(66,Mak,1) + r(67,Mak,1) + r(68,Mak,1)
     
      + r(69,Mak,1) + r(70,Mak,1) + r(71,Mak,1) + r(72,Mak,1) + r(73,Mak,1) + r(74,Mak,1) + r(75,Mak,1) + r(76,Mak,1) + r(77,Mak,1) + r(78,Mak,1) + r(79,Mak,1) + r(80,Mak,1) + r(81,Mak,1) + r(82,Mak,1) + r(83,Mak,1) + r(84,Mak,1) + r(85,Mak,1)
     
      + r(86,Mak,1) + r(87,Mak,1) + r(88,Mak,1) + r(89,Mak,1) + r(90,Mak,1) + r(91,Mak,1) + r(92,Mak,1) + r(93,Mak,1) + r(94,Mak,1) + r(95,Mak,1) + r(96,Mak,1) + r(97,Mak,1) + r(98,Mak,1) + r(99,Mak,1) + r(100,Mak,1) + r(101,Mak,1) + r(102,Mak,1)
     
      + r(103,Mak,1) + r(104,Mak,1) + r(105,Mak,1) + r(106,Mak,1) + r(107,Mak,1) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_buy(Mak,2)..  r(1,Mak,2) + r(2,Mak,2) + r(3,Mak,2) + r(4,Mak,2) + r(5,Mak,2) + r(6,Mak,2) + r(7,Mak,2) + r(8,Mak,2) + r(9,Mak,2) + r(10,Mak,2) + r(11,Mak,2) + r(12,Mak,2) + r(13,Mak,2) + r(14,Mak,2) + r(15,Mak,2) + r(16,Mak,2) + r(17,Mak,2)
     
      + r(18,Mak,2) + r(19,Mak,2) + r(20,Mak,2) + r(21,Mak,2) + r(22,Mak,2) + r(23,Mak,2) + r(24,Mak,2) + r(25,Mak,2) + r(26,Mak,2) + r(27,Mak,2) + r(28,Mak,2) + r(29,Mak,2) + r(30,Mak,2) + r(31,Mak,2) + r(32,Mak,2) + r(33,Mak,2) + r(34,Mak,2)
     
      + r(35,Mak,2) + r(36,Mak,2) + r(37,Mak,2) + r(38,Mak,2) + r(39,Mak,2) + r(40,Mak,2) + r(41,Mak,2) + r(42,Mak,2) + r(43,Mak,2) + r(44,Mak,2) + r(45,Mak,2) + r(46,Mak,2) + r(47,Mak,2) + r(48,Mak,2) + r(49,Mak,2) + r(50,Mak,2) + r(51,Mak,2)
     
      + r(52,Mak,2) + r(53,Mak,2) + r(54,Mak,2) + r(55,Mak,2) + r(56,Mak,2) + r(57,Mak,2) + r(58,Mak,2) + r(59,Mak,2) + r(60,Mak,2) + r(61,Mak,2) + r(62,Mak,2) + r(63,Mak,2) + r(64,Mak,2) + r(65,Mak,2) + r(66,Mak,2) + r(67,Mak,2) + r(68,Mak,2)
     
      + r(69,Mak,2) + r(70,Mak,2) + r(71,Mak,2) + r(72,Mak,2) + r(73,Mak,2) + r(74,Mak,2) + r(75,Mak,2) + r(76,Mak,2) + r(77,Mak,2) + r(78,Mak,2) + r(79,Mak,2) + r(80,Mak,2) + r(81,Mak,2) + r(82,Mak,2) + r(83,Mak,2) + r(84,Mak,2) + r(85,Mak,2)
     
      + r(86,Mak,2) + r(87,Mak,2) + r(88,Mak,2) + r(89,Mak,2) + r(90,Mak,2) + r(91,Mak,2) + r(92,Mak,2) + r(93,Mak,2) + r(94,Mak,2) + r(95,Mak,2) + r(96,Mak,2) + r(97,Mak,2) + r(98,Mak,2) + r(99,Mak,2) + r(100,Mak,2) + r(101,Mak,2) + r(102,Mak,2)
     
      + r(103,Mak,2) + r(104,Mak,2) + r(105,Mak,2) + r(106,Mak,2) + r(107,Mak,2) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_buy(Mak,3)..  r(1,Mak,3) + r(2,Mak,3) + r(3,Mak,3) + r(4,Mak,3) + r(5,Mak,3) + r(6,Mak,3) + r(7,Mak,3) + r(8,Mak,3) + r(9,Mak,3) + r(10,Mak,3) + r(11,Mak,3) + r(12,Mak,3) + r(13,Mak,3) + r(14,Mak,3) + r(15,Mak,3) + r(16,Mak,3) + r(17,Mak,3)
     
      + r(18,Mak,3) + r(19,Mak,3) + r(20,Mak,3) + r(21,Mak,3) + r(22,Mak,3) + r(23,Mak,3) + r(24,Mak,3) + r(25,Mak,3) + r(26,Mak,3) + r(27,Mak,3) + r(28,Mak,3) + r(29,Mak,3) + r(30,Mak,3) + r(31,Mak,3) + r(32,Mak,3) + r(33,Mak,3) + r(34,Mak,3)
     
      + r(35,Mak,3) + r(36,Mak,3) + r(37,Mak,3) + r(38,Mak,3) + r(39,Mak,3) + r(40,Mak,3) + r(41,Mak,3) + r(42,Mak,3) + r(43,Mak,3) + r(44,Mak,3) + r(45,Mak,3) + r(46,Mak,3) + r(47,Mak,3) + r(48,Mak,3) + r(49,Mak,3) + r(50,Mak,3) + r(51,Mak,3)
     
      + r(52,Mak,3) + r(53,Mak,3) + r(54,Mak,3) + r(55,Mak,3) + r(56,Mak,3) + r(57,Mak,3) + r(58,Mak,3) + r(59,Mak,3) + r(60,Mak,3) + r(61,Mak,3) + r(62,Mak,3) + r(63,Mak,3) + r(64,Mak,3) + r(65,Mak,3) + r(66,Mak,3) + r(67,Mak,3) + r(68,Mak,3)
     
      + r(69,Mak,3) + r(70,Mak,3) + r(71,Mak,3) + r(72,Mak,3) + r(73,Mak,3) + r(74,Mak,3) + r(75,Mak,3) + r(76,Mak,3) + r(77,Mak,3) + r(78,Mak,3) + r(79,Mak,3) + r(80,Mak,3) + r(81,Mak,3) + r(82,Mak,3) + r(83,Mak,3) + r(84,Mak,3) + r(85,Mak,3)
     
      + r(86,Mak,3) + r(87,Mak,3) + r(88,Mak,3) + r(89,Mak,3) + r(90,Mak,3) + r(91,Mak,3) + r(92,Mak,3) + r(93,Mak,3) + r(94,Mak,3) + r(95,Mak,3) + r(96,Mak,3) + r(97,Mak,3) + r(98,Mak,3) + r(99,Mak,3) + r(100,Mak,3) + r(101,Mak,3) + r(102,Mak,3)
     
      + r(103,Mak,3) + r(104,Mak,3) + r(105,Mak,3) + r(106,Mak,3) + r(107,Mak,3) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_buy(Kuk,1)..  r(1,Kuk,1) + r(2,Kuk,1) + r(3,Kuk,1) + r(4,Kuk,1) + r(5,Kuk,1) + r(6,Kuk,1) + r(7,Kuk,1) + r(8,Kuk,1) + r(9,Kuk,1) + r(10,Kuk,1) + r(11,Kuk,1) + r(12,Kuk,1) + r(13,Kuk,1) + r(14,Kuk,1) + r(15,Kuk,1) + r(16,Kuk,1) + r(17,Kuk,1)
     
      + r(18,Kuk,1) + r(19,Kuk,1) + r(20,Kuk,1) + r(21,Kuk,1) + r(22,Kuk,1) + r(23,Kuk,1) + r(24,Kuk,1) + r(25,Kuk,1) + r(26,Kuk,1) + r(27,Kuk,1) + r(28,Kuk,1) + r(29,Kuk,1) + r(30,Kuk,1) + r(31,Kuk,1) + r(32,Kuk,1) + r(33,Kuk,1) + r(34,Kuk,1)
     
      + r(35,Kuk,1) + r(36,Kuk,1) + r(37,Kuk,1) + r(38,Kuk,1) + r(39,Kuk,1) + r(40,Kuk,1) + r(41,Kuk,1) + r(42,Kuk,1) + r(43,Kuk,1) + r(44,Kuk,1) + r(45,Kuk,1) + r(46,Kuk,1) + r(47,Kuk,1) + r(48,Kuk,1) + r(49,Kuk,1) + r(50,Kuk,1) + r(51,Kuk,1)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/19/17 02:05:06 Page 36
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 437


     Barges_buy  =E=  ensure we only pick one value n for barges for each timber i     
     
      + r(52,Kuk,1) + r(53,Kuk,1) + r(54,Kuk,1) + r(55,Kuk,1) + r(56,Kuk,1) + r(57,Kuk,1) + r(58,Kuk,1) + r(59,Kuk,1) + r(60,Kuk,1) + r(61,Kuk,1) + r(62,Kuk,1) + r(63,Kuk,1) + r(64,Kuk,1) + r(65,Kuk,1) + r(66,Kuk,1) + r(67,Kuk,1) + r(68,Kuk,1)
     
      + r(69,Kuk,1) + r(70,Kuk,1) + r(71,Kuk,1) + r(72,Kuk,1) + r(73,Kuk,1) + r(74,Kuk,1) + r(75,Kuk,1) + r(76,Kuk,1) + r(77,Kuk,1) + r(78,Kuk,1) + r(79,Kuk,1) + r(80,Kuk,1) + r(81,Kuk,1) + r(82,Kuk,1) + r(83,Kuk,1) + r(84,Kuk,1) + r(85,Kuk,1)
     
      + r(86,Kuk,1) + r(87,Kuk,1) + r(88,Kuk,1) + r(89,Kuk,1) + r(90,Kuk,1) + r(91,Kuk,1) + r(92,Kuk,1) + r(93,Kuk,1) + r(94,Kuk,1) + r(95,Kuk,1) + r(96,Kuk,1) + r(97,Kuk,1) + r(98,Kuk,1) + r(99,Kuk,1) + r(100,Kuk,1) + r(101,Kuk,1) + r(102,Kuk,1)
     
      + r(103,Kuk,1) + r(104,Kuk,1) + r(105,Kuk,1) + r(106,Kuk,1) + r(107,Kuk,1) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_buy(Kuk,2)..  r(1,Kuk,2) + r(2,Kuk,2) + r(3,Kuk,2) + r(4,Kuk,2) + r(5,Kuk,2) + r(6,Kuk,2) + r(7,Kuk,2) + r(8,Kuk,2) + r(9,Kuk,2) + r(10,Kuk,2) + r(11,Kuk,2) + r(12,Kuk,2) + r(13,Kuk,2) + r(14,Kuk,2) + r(15,Kuk,2) + r(16,Kuk,2) + r(17,Kuk,2)
     
      + r(18,Kuk,2) + r(19,Kuk,2) + r(20,Kuk,2) + r(21,Kuk,2) + r(22,Kuk,2) + r(23,Kuk,2) + r(24,Kuk,2) + r(25,Kuk,2) + r(26,Kuk,2) + r(27,Kuk,2) + r(28,Kuk,2) + r(29,Kuk,2) + r(30,Kuk,2) + r(31,Kuk,2) + r(32,Kuk,2) + r(33,Kuk,2) + r(34,Kuk,2)
     
      + r(35,Kuk,2) + r(36,Kuk,2) + r(37,Kuk,2) + r(38,Kuk,2) + r(39,Kuk,2) + r(40,Kuk,2) + r(41,Kuk,2) + r(42,Kuk,2) + r(43,Kuk,2) + r(44,Kuk,2) + r(45,Kuk,2) + r(46,Kuk,2) + r(47,Kuk,2) + r(48,Kuk,2) + r(49,Kuk,2) + r(50,Kuk,2) + r(51,Kuk,2)
     
      + r(52,Kuk,2) + r(53,Kuk,2) + r(54,Kuk,2) + r(55,Kuk,2) + r(56,Kuk,2) + r(57,Kuk,2) + r(58,Kuk,2) + r(59,Kuk,2) + r(60,Kuk,2) + r(61,Kuk,2) + r(62,Kuk,2) + r(63,Kuk,2) + r(64,Kuk,2) + r(65,Kuk,2) + r(66,Kuk,2) + r(67,Kuk,2) + r(68,Kuk,2)
     
      + r(69,Kuk,2) + r(70,Kuk,2) + r(71,Kuk,2) + r(72,Kuk,2) + r(73,Kuk,2) + r(74,Kuk,2) + r(75,Kuk,2) + r(76,Kuk,2) + r(77,Kuk,2) + r(78,Kuk,2) + r(79,Kuk,2) + r(80,Kuk,2) + r(81,Kuk,2) + r(82,Kuk,2) + r(83,Kuk,2) + r(84,Kuk,2) + r(85,Kuk,2)
     
      + r(86,Kuk,2) + r(87,Kuk,2) + r(88,Kuk,2) + r(89,Kuk,2) + r(90,Kuk,2) + r(91,Kuk,2) + r(92,Kuk,2) + r(93,Kuk,2) + r(94,Kuk,2) + r(95,Kuk,2) + r(96,Kuk,2) + r(97,Kuk,2) + r(98,Kuk,2) + r(99,Kuk,2) + r(100,Kuk,2) + r(101,Kuk,2) + r(102,Kuk,2)
     
      + r(103,Kuk,2) + r(104,Kuk,2) + r(105,Kuk,2) + r(106,Kuk,2) + r(107,Kuk,2) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_buy(Kuk,3)..  r(1,Kuk,3) + r(2,Kuk,3) + r(3,Kuk,3) + r(4,Kuk,3) + r(5,Kuk,3) + r(6,Kuk,3) + r(7,Kuk,3) + r(8,Kuk,3) + r(9,Kuk,3) + r(10,Kuk,3) + r(11,Kuk,3) + r(12,Kuk,3) + r(13,Kuk,3) + r(14,Kuk,3) + r(15,Kuk,3) + r(16,Kuk,3) + r(17,Kuk,3)
     
      + r(18,Kuk,3) + r(19,Kuk,3) + r(20,Kuk,3) + r(21,Kuk,3) + r(22,Kuk,3) + r(23,Kuk,3) + r(24,Kuk,3) + r(25,Kuk,3) + r(26,Kuk,3) + r(27,Kuk,3) + r(28,Kuk,3) + r(29,Kuk,3) + r(30,Kuk,3) + r(31,Kuk,3) + r(32,Kuk,3) + r(33,Kuk,3) + r(34,Kuk,3)
     
      + r(35,Kuk,3) + r(36,Kuk,3) + r(37,Kuk,3) + r(38,Kuk,3) + r(39,Kuk,3) + r(40,Kuk,3) + r(41,Kuk,3) + r(42,Kuk,3) + r(43,Kuk,3) + r(44,Kuk,3) + r(45,Kuk,3) + r(46,Kuk,3) + r(47,Kuk,3) + r(48,Kuk,3) + r(49,Kuk,3) + r(50,Kuk,3) + r(51,Kuk,3)
     
      + r(52,Kuk,3) + r(53,Kuk,3) + r(54,Kuk,3) + r(55,Kuk,3) + r(56,Kuk,3) + r(57,Kuk,3) + r(58,Kuk,3) + r(59,Kuk,3) + r(60,Kuk,3) + r(61,Kuk,3) + r(62,Kuk,3) + r(63,Kuk,3) + r(64,Kuk,3) + r(65,Kuk,3) + r(66,Kuk,3) + r(67,Kuk,3) + r(68,Kuk,3)
     
      + r(69,Kuk,3) + r(70,Kuk,3) + r(71,Kuk,3) + r(72,Kuk,3) + r(73,Kuk,3) + r(74,Kuk,3) + r(75,Kuk,3) + r(76,Kuk,3) + r(77,Kuk,3) + r(78,Kuk,3) + r(79,Kuk,3) + r(80,Kuk,3) + r(81,Kuk,3) + r(82,Kuk,3) + r(83,Kuk,3) + r(84,Kuk,3) + r(85,Kuk,3)
     
      + r(86,Kuk,3) + r(87,Kuk,3) + r(88,Kuk,3) + r(89,Kuk,3) + r(90,Kuk,3) + r(91,Kuk,3) + r(92,Kuk,3) + r(93,Kuk,3) + r(94,Kuk,3) + r(95,Kuk,3) + r(96,Kuk,3) + r(97,Kuk,3) + r(98,Kuk,3) + r(99,Kuk,3) + r(100,Kuk,3) + r(101,Kuk,3) + r(102,Kuk,3)
     
      + r(103,Kuk,3) + r(104,Kuk,3) + r(105,Kuk,3) + r(106,Kuk,3) + r(107,Kuk,3) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_buy(Kok,1)..  r(1,Kok,1) + r(2,Kok,1) + r(3,Kok,1) + r(4,Kok,1) + r(5,Kok,1) + r(6,Kok,1) + r(7,Kok,1) + r(8,Kok,1) + r(9,Kok,1) + r(10,Kok,1) + r(11,Kok,1) + r(12,Kok,1) + r(13,Kok,1) + r(14,Kok,1) + r(15,Kok,1) + r(16,Kok,1) + r(17,Kok,1)
     
      + r(18,Kok,1) + r(19,Kok,1) + r(20,Kok,1) + r(21,Kok,1) + r(22,Kok,1) + r(23,Kok,1) + r(24,Kok,1) + r(25,Kok,1) + r(26,Kok,1) + r(27,Kok,1) + r(28,Kok,1) + r(29,Kok,1) + r(30,Kok,1) + r(31,Kok,1) + r(32,Kok,1) + r(33,Kok,1) + r(34,Kok,1)
     
      + r(35,Kok,1) + r(36,Kok,1) + r(37,Kok,1) + r(38,Kok,1) + r(39,Kok,1) + r(40,Kok,1) + r(41,Kok,1) + r(42,Kok,1) + r(43,Kok,1) + r(44,Kok,1) + r(45,Kok,1) + r(46,Kok,1) + r(47,Kok,1) + r(48,Kok,1) + r(49,Kok,1) + r(50,Kok,1) + r(51,Kok,1)
     
      + r(52,Kok,1) + r(53,Kok,1) + r(54,Kok,1) + r(55,Kok,1) + r(56,Kok,1) + r(57,Kok,1) + r(58,Kok,1) + r(59,Kok,1) + r(60,Kok,1) + r(61,Kok,1) + r(62,Kok,1) + r(63,Kok,1) + r(64,Kok,1) + r(65,Kok,1) + r(66,Kok,1) + r(67,Kok,1) + r(68,Kok,1)
     
      + r(69,Kok,1) + r(70,Kok,1) + r(71,Kok,1) + r(72,Kok,1) + r(73,Kok,1) + r(74,Kok,1) + r(75,Kok,1) + r(76,Kok,1) + r(77,Kok,1) + r(78,Kok,1) + r(79,Kok,1) + r(80,Kok,1) + r(81,Kok,1) + r(82,Kok,1) + r(83,Kok,1) + r(84,Kok,1) + r(85,Kok,1)
     
      + r(86,Kok,1) + r(87,Kok,1) + r(88,Kok,1) + r(89,Kok,1) + r(90,Kok,1) + r(91,Kok,1) + r(92,Kok,1) + r(93,Kok,1) + r(94,Kok,1) + r(95,Kok,1) + r(96,Kok,1) + r(97,Kok,1) + r(98,Kok,1) + r(99,Kok,1) + r(100,Kok,1) + r(101,Kok,1) + r(102,Kok,1)
     
      + r(103,Kok,1) + r(104,Kok,1) + r(105,Kok,1) + r(106,Kok,1) + r(107,Kok,1) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/19/17 02:05:06 Page 37
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 437


     Barges_buy  =E=  ensure we only pick one value n for barges for each timber i

Barges_buy(Kok,2)..  r(1,Kok,2) + r(2,Kok,2) + r(3,Kok,2) + r(4,Kok,2) + r(5,Kok,2) + r(6,Kok,2) + r(7,Kok,2) + r(8,Kok,2) + r(9,Kok,2) + r(10,Kok,2) + r(11,Kok,2) + r(12,Kok,2) + r(13,Kok,2) + r(14,Kok,2) + r(15,Kok,2) + r(16,Kok,2) + r(17,Kok,2)
     
      + r(18,Kok,2) + r(19,Kok,2) + r(20,Kok,2) + r(21,Kok,2) + r(22,Kok,2) + r(23,Kok,2) + r(24,Kok,2) + r(25,Kok,2) + r(26,Kok,2) + r(27,Kok,2) + r(28,Kok,2) + r(29,Kok,2) + r(30,Kok,2) + r(31,Kok,2) + r(32,Kok,2) + r(33,Kok,2) + r(34,Kok,2)
     
      + r(35,Kok,2) + r(36,Kok,2) + r(37,Kok,2) + r(38,Kok,2) + r(39,Kok,2) + r(40,Kok,2) + r(41,Kok,2) + r(42,Kok,2) + r(43,Kok,2) + r(44,Kok,2) + r(45,Kok,2) + r(46,Kok,2) + r(47,Kok,2) + r(48,Kok,2) + r(49,Kok,2) + r(50,Kok,2) + r(51,Kok,2)
     
      + r(52,Kok,2) + r(53,Kok,2) + r(54,Kok,2) + r(55,Kok,2) + r(56,Kok,2) + r(57,Kok,2) + r(58,Kok,2) + r(59,Kok,2) + r(60,Kok,2) + r(61,Kok,2) + r(62,Kok,2) + r(63,Kok,2) + r(64,Kok,2) + r(65,Kok,2) + r(66,Kok,2) + r(67,Kok,2) + r(68,Kok,2)
     
      + r(69,Kok,2) + r(70,Kok,2) + r(71,Kok,2) + r(72,Kok,2) + r(73,Kok,2) + r(74,Kok,2) + r(75,Kok,2) + r(76,Kok,2) + r(77,Kok,2) + r(78,Kok,2) + r(79,Kok,2) + r(80,Kok,2) + r(81,Kok,2) + r(82,Kok,2) + r(83,Kok,2) + r(84,Kok,2) + r(85,Kok,2)
     
      + r(86,Kok,2) + r(87,Kok,2) + r(88,Kok,2) + r(89,Kok,2) + r(90,Kok,2) + r(91,Kok,2) + r(92,Kok,2) + r(93,Kok,2) + r(94,Kok,2) + r(95,Kok,2) + r(96,Kok,2) + r(97,Kok,2) + r(98,Kok,2) + r(99,Kok,2) + r(100,Kok,2) + r(101,Kok,2) + r(102,Kok,2)
     
      + r(103,Kok,2) + r(104,Kok,2) + r(105,Kok,2) + r(106,Kok,2) + r(107,Kok,2) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_buy(Kok,3)..  r(1,Kok,3) + r(2,Kok,3) + r(3,Kok,3) + r(4,Kok,3) + r(5,Kok,3) + r(6,Kok,3) + r(7,Kok,3) + r(8,Kok,3) + r(9,Kok,3) + r(10,Kok,3) + r(11,Kok,3) + r(12,Kok,3) + r(13,Kok,3) + r(14,Kok,3) + r(15,Kok,3) + r(16,Kok,3) + r(17,Kok,3)
     
      + r(18,Kok,3) + r(19,Kok,3) + r(20,Kok,3) + r(21,Kok,3) + r(22,Kok,3) + r(23,Kok,3) + r(24,Kok,3) + r(25,Kok,3) + r(26,Kok,3) + r(27,Kok,3) + r(28,Kok,3) + r(29,Kok,3) + r(30,Kok,3) + r(31,Kok,3) + r(32,Kok,3) + r(33,Kok,3) + r(34,Kok,3)
     
      + r(35,Kok,3) + r(36,Kok,3) + r(37,Kok,3) + r(38,Kok,3) + r(39,Kok,3) + r(40,Kok,3) + r(41,Kok,3) + r(42,Kok,3) + r(43,Kok,3) + r(44,Kok,3) + r(45,Kok,3) + r(46,Kok,3) + r(47,Kok,3) + r(48,Kok,3) + r(49,Kok,3) + r(50,Kok,3) + r(51,Kok,3)
     
      + r(52,Kok,3) + r(53,Kok,3) + r(54,Kok,3) + r(55,Kok,3) + r(56,Kok,3) + r(57,Kok,3) + r(58,Kok,3) + r(59,Kok,3) + r(60,Kok,3) + r(61,Kok,3) + r(62,Kok,3) + r(63,Kok,3) + r(64,Kok,3) + r(65,Kok,3) + r(66,Kok,3) + r(67,Kok,3) + r(68,Kok,3)
     
      + r(69,Kok,3) + r(70,Kok,3) + r(71,Kok,3) + r(72,Kok,3) + r(73,Kok,3) + r(74,Kok,3) + r(75,Kok,3) + r(76,Kok,3) + r(77,Kok,3) + r(78,Kok,3) + r(79,Kok,3) + r(80,Kok,3) + r(81,Kok,3) + r(82,Kok,3) + r(83,Kok,3) + r(84,Kok,3) + r(85,Kok,3)
     
      + r(86,Kok,3) + r(87,Kok,3) + r(88,Kok,3) + r(89,Kok,3) + r(90,Kok,3) + r(91,Kok,3) + r(92,Kok,3) + r(93,Kok,3) + r(94,Kok,3) + r(95,Kok,3) + r(96,Kok,3) + r(97,Kok,3) + r(98,Kok,3) + r(99,Kok,3) + r(100,Kok,3) + r(101,Kok,3) + r(102,Kok,3)
     
      + r(103,Kok,3) + r(104,Kok,3) + r(105,Kok,3) + r(106,Kok,3) + r(107,Kok,3) =E= 1 ; (LHS = 0, INFES = 1 ****)
     

---- Barges_sell  =E=  ensure we only pick one value  n for barges for each product to each city

Barges_sell(Mas,EU,1)..  u(1,Mas,EU,1) + u(2,Mas,EU,1) + u(3,Mas,EU,1) + u(4,Mas,EU,1) + u(5,Mas,EU,1) + u(6,Mas,EU,1) + u(7,Mas,EU,1) + u(8,Mas,EU,1) + u(9,Mas,EU,1) + u(10,Mas,EU,1) + u(11,Mas,EU,1) + u(12,Mas,EU,1) + u(13,Mas,EU,1) + u(14,Mas,EU,1)
     
      + u(15,Mas,EU,1) + u(16,Mas,EU,1) + u(17,Mas,EU,1) + u(18,Mas,EU,1) + u(19,Mas,EU,1) + u(20,Mas,EU,1) + u(21,Mas,EU,1) + u(22,Mas,EU,1) + u(23,Mas,EU,1) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Mas,EU,2)..  u(1,Mas,EU,2) + u(2,Mas,EU,2) + u(3,Mas,EU,2) + u(4,Mas,EU,2) + u(5,Mas,EU,2) + u(6,Mas,EU,2) + u(7,Mas,EU,2) + u(8,Mas,EU,2) + u(9,Mas,EU,2) + u(10,Mas,EU,2) + u(11,Mas,EU,2) + u(12,Mas,EU,2) + u(13,Mas,EU,2) + u(14,Mas,EU,2)
     
      + u(15,Mas,EU,2) + u(16,Mas,EU,2) + u(17,Mas,EU,2) + u(18,Mas,EU,2) + u(19,Mas,EU,2) + u(20,Mas,EU,2) + u(21,Mas,EU,2) + u(22,Mas,EU,2) + u(23,Mas,EU,2) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Mas,EU,3)..  u(1,Mas,EU,3) + u(2,Mas,EU,3) + u(3,Mas,EU,3) + u(4,Mas,EU,3) + u(5,Mas,EU,3) + u(6,Mas,EU,3) + u(7,Mas,EU,3) + u(8,Mas,EU,3) + u(9,Mas,EU,3) + u(10,Mas,EU,3) + u(11,Mas,EU,3) + u(12,Mas,EU,3) + u(13,Mas,EU,3) + u(14,Mas,EU,3)
     
      + u(15,Mas,EU,3) + u(16,Mas,EU,3) + u(17,Mas,EU,3) + u(18,Mas,EU,3) + u(19,Mas,EU,3) + u(20,Mas,EU,3) + u(21,Mas,EU,3) + u(22,Mas,EU,3) + u(23,Mas,EU,3) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Mas,IE,1)..  u(1,Mas,IE,1) + u(2,Mas,IE,1) + u(3,Mas,IE,1) + u(4,Mas,IE,1) + u(5,Mas,IE,1) + u(6,Mas,IE,1) + u(7,Mas,IE,1) + u(8,Mas,IE,1) + u(9,Mas,IE,1) + u(10,Mas,IE,1) + u(11,Mas,IE,1) + u(12,Mas,IE,1) + u(13,Mas,IE,1) + u(14,Mas,IE,1)
     
      + u(15,Mas,IE,1) + u(16,Mas,IE,1) + u(17,Mas,IE,1) + u(18,Mas,IE,1) + u(19,Mas,IE,1) + u(20,Mas,IE,1) + u(21,Mas,IE,1) + u(22,Mas,IE,1) + u(23,Mas,IE,1) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Mas,IE,2)..  u(1,Mas,IE,2) + u(2,Mas,IE,2) + u(3,Mas,IE,2) + u(4,Mas,IE,2) + u(5,Mas,IE,2) + u(6,Mas,IE,2) + u(7,Mas,IE,2) + u(8,Mas,IE,2) + u(9,Mas,IE,2) + u(10,Mas,IE,2) + u(11,Mas,IE,2) + u(12,Mas,IE,2) + u(13,Mas,IE,2) + u(14,Mas,IE,2)
     
      + u(15,Mas,IE,2) + u(16,Mas,IE,2) + u(17,Mas,IE,2) + u(18,Mas,IE,2) + u(19,Mas,IE,2) + u(20,Mas,IE,2) + u(21,Mas,IE,2) + u(22,Mas,IE,2) + u(23,Mas,IE,2) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/19/17 02:05:06 Page 38
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 437


     Barges_sell  =E=  ensure we only pick one value  n for barges for each product to each city

Barges_sell(Mas,IE,3)..  u(1,Mas,IE,3) + u(2,Mas,IE,3) + u(3,Mas,IE,3) + u(4,Mas,IE,3) + u(5,Mas,IE,3) + u(6,Mas,IE,3) + u(7,Mas,IE,3) + u(8,Mas,IE,3) + u(9,Mas,IE,3) + u(10,Mas,IE,3) + u(11,Mas,IE,3) + u(12,Mas,IE,3) + u(13,Mas,IE,3) + u(14,Mas,IE,3)
     
      + u(15,Mas,IE,3) + u(16,Mas,IE,3) + u(17,Mas,IE,3) + u(18,Mas,IE,3) + u(19,Mas,IE,3) + u(20,Mas,IE,3) + u(21,Mas,IE,3) + u(22,Mas,IE,3) + u(23,Mas,IE,3) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Mas,PA,1)..  u(1,Mas,PA,1) + u(2,Mas,PA,1) + u(3,Mas,PA,1) + u(4,Mas,PA,1) + u(5,Mas,PA,1) + u(6,Mas,PA,1) + u(7,Mas,PA,1) + u(8,Mas,PA,1) + u(9,Mas,PA,1) + u(10,Mas,PA,1) + u(11,Mas,PA,1) + u(12,Mas,PA,1) + u(13,Mas,PA,1) + u(14,Mas,PA,1)
     
      + u(15,Mas,PA,1) + u(16,Mas,PA,1) + u(17,Mas,PA,1) + u(18,Mas,PA,1) + u(19,Mas,PA,1) + u(20,Mas,PA,1) + u(21,Mas,PA,1) + u(22,Mas,PA,1) + u(23,Mas,PA,1) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Mas,PA,2)..  u(1,Mas,PA,2) + u(2,Mas,PA,2) + u(3,Mas,PA,2) + u(4,Mas,PA,2) + u(5,Mas,PA,2) + u(6,Mas,PA,2) + u(7,Mas,PA,2) + u(8,Mas,PA,2) + u(9,Mas,PA,2) + u(10,Mas,PA,2) + u(11,Mas,PA,2) + u(12,Mas,PA,2) + u(13,Mas,PA,2) + u(14,Mas,PA,2)
     
      + u(15,Mas,PA,2) + u(16,Mas,PA,2) + u(17,Mas,PA,2) + u(18,Mas,PA,2) + u(19,Mas,PA,2) + u(20,Mas,PA,2) + u(21,Mas,PA,2) + u(22,Mas,PA,2) + u(23,Mas,PA,2) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Mas,PA,3)..  u(1,Mas,PA,3) + u(2,Mas,PA,3) + u(3,Mas,PA,3) + u(4,Mas,PA,3) + u(5,Mas,PA,3) + u(6,Mas,PA,3) + u(7,Mas,PA,3) + u(8,Mas,PA,3) + u(9,Mas,PA,3) + u(10,Mas,PA,3) + u(11,Mas,PA,3) + u(12,Mas,PA,3) + u(13,Mas,PA,3) + u(14,Mas,PA,3)
     
      + u(15,Mas,PA,3) + u(16,Mas,PA,3) + u(17,Mas,PA,3) + u(18,Mas,PA,3) + u(19,Mas,PA,3) + u(20,Mas,PA,3) + u(21,Mas,PA,3) + u(22,Mas,PA,3) + u(23,Mas,PA,3) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Mas,KI,1)..  u(1,Mas,KI,1) + u(2,Mas,KI,1) + u(3,Mas,KI,1) + u(4,Mas,KI,1) + u(5,Mas,KI,1) + u(6,Mas,KI,1) + u(7,Mas,KI,1) + u(8,Mas,KI,1) + u(9,Mas,KI,1) + u(10,Mas,KI,1) + u(11,Mas,KI,1) + u(12,Mas,KI,1) + u(13,Mas,KI,1) + u(14,Mas,KI,1)
     
      + u(15,Mas,KI,1) + u(16,Mas,KI,1) + u(17,Mas,KI,1) + u(18,Mas,KI,1) + u(19,Mas,KI,1) + u(20,Mas,KI,1) + u(21,Mas,KI,1) + u(22,Mas,KI,1) + u(23,Mas,KI,1) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Mas,KI,2)..  u(1,Mas,KI,2) + u(2,Mas,KI,2) + u(3,Mas,KI,2) + u(4,Mas,KI,2) + u(5,Mas,KI,2) + u(6,Mas,KI,2) + u(7,Mas,KI,2) + u(8,Mas,KI,2) + u(9,Mas,KI,2) + u(10,Mas,KI,2) + u(11,Mas,KI,2) + u(12,Mas,KI,2) + u(13,Mas,KI,2) + u(14,Mas,KI,2)
     
      + u(15,Mas,KI,2) + u(16,Mas,KI,2) + u(17,Mas,KI,2) + u(18,Mas,KI,2) + u(19,Mas,KI,2) + u(20,Mas,KI,2) + u(21,Mas,KI,2) + u(22,Mas,KI,2) + u(23,Mas,KI,2) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Mas,KI,3)..  u(1,Mas,KI,3) + u(2,Mas,KI,3) + u(3,Mas,KI,3) + u(4,Mas,KI,3) + u(5,Mas,KI,3) + u(6,Mas,KI,3) + u(7,Mas,KI,3) + u(8,Mas,KI,3) + u(9,Mas,KI,3) + u(10,Mas,KI,3) + u(11,Mas,KI,3) + u(12,Mas,KI,3) + u(13,Mas,KI,3) + u(14,Mas,KI,3)
     
      + u(15,Mas,KI,3) + u(16,Mas,KI,3) + u(17,Mas,KI,3) + u(18,Mas,KI,3) + u(19,Mas,KI,3) + u(20,Mas,KI,3) + u(21,Mas,KI,3) + u(22,Mas,KI,3) + u(23,Mas,KI,3) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Kus,EU,1)..  u(1,Kus,EU,1) + u(2,Kus,EU,1) + u(3,Kus,EU,1) + u(4,Kus,EU,1) + u(5,Kus,EU,1) + u(6,Kus,EU,1) + u(7,Kus,EU,1) + u(8,Kus,EU,1) + u(9,Kus,EU,1) + u(10,Kus,EU,1) + u(11,Kus,EU,1) + u(12,Kus,EU,1) + u(13,Kus,EU,1) + u(14,Kus,EU,1)
     
      + u(15,Kus,EU,1) + u(16,Kus,EU,1) + u(17,Kus,EU,1) + u(18,Kus,EU,1) + u(19,Kus,EU,1) + u(20,Kus,EU,1) + u(21,Kus,EU,1) + u(22,Kus,EU,1) + u(23,Kus,EU,1) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Kus,EU,2)..  u(1,Kus,EU,2) + u(2,Kus,EU,2) + u(3,Kus,EU,2) + u(4,Kus,EU,2) + u(5,Kus,EU,2) + u(6,Kus,EU,2) + u(7,Kus,EU,2) + u(8,Kus,EU,2) + u(9,Kus,EU,2) + u(10,Kus,EU,2) + u(11,Kus,EU,2) + u(12,Kus,EU,2) + u(13,Kus,EU,2) + u(14,Kus,EU,2)
     
      + u(15,Kus,EU,2) + u(16,Kus,EU,2) + u(17,Kus,EU,2) + u(18,Kus,EU,2) + u(19,Kus,EU,2) + u(20,Kus,EU,2) + u(21,Kus,EU,2) + u(22,Kus,EU,2) + u(23,Kus,EU,2) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Kus,EU,3)..  u(1,Kus,EU,3) + u(2,Kus,EU,3) + u(3,Kus,EU,3) + u(4,Kus,EU,3) + u(5,Kus,EU,3) + u(6,Kus,EU,3) + u(7,Kus,EU,3) + u(8,Kus,EU,3) + u(9,Kus,EU,3) + u(10,Kus,EU,3) + u(11,Kus,EU,3) + u(12,Kus,EU,3) + u(13,Kus,EU,3) + u(14,Kus,EU,3)
     
      + u(15,Kus,EU,3) + u(16,Kus,EU,3) + u(17,Kus,EU,3) + u(18,Kus,EU,3) + u(19,Kus,EU,3) + u(20,Kus,EU,3) + u(21,Kus,EU,3) + u(22,Kus,EU,3) + u(23,Kus,EU,3) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Kus,IE,1)..  u(1,Kus,IE,1) + u(2,Kus,IE,1) + u(3,Kus,IE,1) + u(4,Kus,IE,1) + u(5,Kus,IE,1) + u(6,Kus,IE,1) + u(7,Kus,IE,1) + u(8,Kus,IE,1) + u(9,Kus,IE,1) + u(10,Kus,IE,1) + u(11,Kus,IE,1) + u(12,Kus,IE,1) + u(13,Kus,IE,1) + u(14,Kus,IE,1)
     
      + u(15,Kus,IE,1) + u(16,Kus,IE,1) + u(17,Kus,IE,1) + u(18,Kus,IE,1) + u(19,Kus,IE,1) + u(20,Kus,IE,1) + u(21,Kus,IE,1) + u(22,Kus,IE,1) + u(23,Kus,IE,1) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Kus,IE,2)..  u(1,Kus,IE,2) + u(2,Kus,IE,2) + u(3,Kus,IE,2) + u(4,Kus,IE,2) + u(5,Kus,IE,2) + u(6,Kus,IE,2) + u(7,Kus,IE,2) + u(8,Kus,IE,2) + u(9,Kus,IE,2) + u(10,Kus,IE,2) + u(11,Kus,IE,2) + u(12,Kus,IE,2) + u(13,Kus,IE,2) + u(14,Kus,IE,2)
     
      + u(15,Kus,IE,2) + u(16,Kus,IE,2) + u(17,Kus,IE,2) + u(18,Kus,IE,2) + u(19,Kus,IE,2) + u(20,Kus,IE,2) + u(21,Kus,IE,2) + u(22,Kus,IE,2) + u(23,Kus,IE,2) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/19/17 02:05:06 Page 39
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 437


     Barges_sell  =E=  ensure we only pick one value  n for barges for each product to each city

Barges_sell(Kus,IE,3)..  u(1,Kus,IE,3) + u(2,Kus,IE,3) + u(3,Kus,IE,3) + u(4,Kus,IE,3) + u(5,Kus,IE,3) + u(6,Kus,IE,3) + u(7,Kus,IE,3) + u(8,Kus,IE,3) + u(9,Kus,IE,3) + u(10,Kus,IE,3) + u(11,Kus,IE,3) + u(12,Kus,IE,3) + u(13,Kus,IE,3) + u(14,Kus,IE,3)
     
      + u(15,Kus,IE,3) + u(16,Kus,IE,3) + u(17,Kus,IE,3) + u(18,Kus,IE,3) + u(19,Kus,IE,3) + u(20,Kus,IE,3) + u(21,Kus,IE,3) + u(22,Kus,IE,3) + u(23,Kus,IE,3) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Kus,PA,1)..  u(1,Kus,PA,1) + u(2,Kus,PA,1) + u(3,Kus,PA,1) + u(4,Kus,PA,1) + u(5,Kus,PA,1) + u(6,Kus,PA,1) + u(7,Kus,PA,1) + u(8,Kus,PA,1) + u(9,Kus,PA,1) + u(10,Kus,PA,1) + u(11,Kus,PA,1) + u(12,Kus,PA,1) + u(13,Kus,PA,1) + u(14,Kus,PA,1)
     
      + u(15,Kus,PA,1) + u(16,Kus,PA,1) + u(17,Kus,PA,1) + u(18,Kus,PA,1) + u(19,Kus,PA,1) + u(20,Kus,PA,1) + u(21,Kus,PA,1) + u(22,Kus,PA,1) + u(23,Kus,PA,1) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Kus,PA,2)..  u(1,Kus,PA,2) + u(2,Kus,PA,2) + u(3,Kus,PA,2) + u(4,Kus,PA,2) + u(5,Kus,PA,2) + u(6,Kus,PA,2) + u(7,Kus,PA,2) + u(8,Kus,PA,2) + u(9,Kus,PA,2) + u(10,Kus,PA,2) + u(11,Kus,PA,2) + u(12,Kus,PA,2) + u(13,Kus,PA,2) + u(14,Kus,PA,2)
     
      + u(15,Kus,PA,2) + u(16,Kus,PA,2) + u(17,Kus,PA,2) + u(18,Kus,PA,2) + u(19,Kus,PA,2) + u(20,Kus,PA,2) + u(21,Kus,PA,2) + u(22,Kus,PA,2) + u(23,Kus,PA,2) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Kus,PA,3)..  u(1,Kus,PA,3) + u(2,Kus,PA,3) + u(3,Kus,PA,3) + u(4,Kus,PA,3) + u(5,Kus,PA,3) + u(6,Kus,PA,3) + u(7,Kus,PA,3) + u(8,Kus,PA,3) + u(9,Kus,PA,3) + u(10,Kus,PA,3) + u(11,Kus,PA,3) + u(12,Kus,PA,3) + u(13,Kus,PA,3) + u(14,Kus,PA,3)
     
      + u(15,Kus,PA,3) + u(16,Kus,PA,3) + u(17,Kus,PA,3) + u(18,Kus,PA,3) + u(19,Kus,PA,3) + u(20,Kus,PA,3) + u(21,Kus,PA,3) + u(22,Kus,PA,3) + u(23,Kus,PA,3) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Kus,KI,1)..  u(1,Kus,KI,1) + u(2,Kus,KI,1) + u(3,Kus,KI,1) + u(4,Kus,KI,1) + u(5,Kus,KI,1) + u(6,Kus,KI,1) + u(7,Kus,KI,1) + u(8,Kus,KI,1) + u(9,Kus,KI,1) + u(10,Kus,KI,1) + u(11,Kus,KI,1) + u(12,Kus,KI,1) + u(13,Kus,KI,1) + u(14,Kus,KI,1)
     
      + u(15,Kus,KI,1) + u(16,Kus,KI,1) + u(17,Kus,KI,1) + u(18,Kus,KI,1) + u(19,Kus,KI,1) + u(20,Kus,KI,1) + u(21,Kus,KI,1) + u(22,Kus,KI,1) + u(23,Kus,KI,1) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Kus,KI,2)..  u(1,Kus,KI,2) + u(2,Kus,KI,2) + u(3,Kus,KI,2) + u(4,Kus,KI,2) + u(5,Kus,KI,2) + u(6,Kus,KI,2) + u(7,Kus,KI,2) + u(8,Kus,KI,2) + u(9,Kus,KI,2) + u(10,Kus,KI,2) + u(11,Kus,KI,2) + u(12,Kus,KI,2) + u(13,Kus,KI,2) + u(14,Kus,KI,2)
     
      + u(15,Kus,KI,2) + u(16,Kus,KI,2) + u(17,Kus,KI,2) + u(18,Kus,KI,2) + u(19,Kus,KI,2) + u(20,Kus,KI,2) + u(21,Kus,KI,2) + u(22,Kus,KI,2) + u(23,Kus,KI,2) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Kus,KI,3)..  u(1,Kus,KI,3) + u(2,Kus,KI,3) + u(3,Kus,KI,3) + u(4,Kus,KI,3) + u(5,Kus,KI,3) + u(6,Kus,KI,3) + u(7,Kus,KI,3) + u(8,Kus,KI,3) + u(9,Kus,KI,3) + u(10,Kus,KI,3) + u(11,Kus,KI,3) + u(12,Kus,KI,3) + u(13,Kus,KI,3) + u(14,Kus,KI,3)
     
      + u(15,Kus,KI,3) + u(16,Kus,KI,3) + u(17,Kus,KI,3) + u(18,Kus,KI,3) + u(19,Kus,KI,3) + u(20,Kus,KI,3) + u(21,Kus,KI,3) + u(22,Kus,KI,3) + u(23,Kus,KI,3) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Kos,EU,1)..  u(1,Kos,EU,1) + u(2,Kos,EU,1) + u(3,Kos,EU,1) + u(4,Kos,EU,1) + u(5,Kos,EU,1) + u(6,Kos,EU,1) + u(7,Kos,EU,1) + u(8,Kos,EU,1) + u(9,Kos,EU,1) + u(10,Kos,EU,1) + u(11,Kos,EU,1) + u(12,Kos,EU,1) + u(13,Kos,EU,1) + u(14,Kos,EU,1)
     
      + u(15,Kos,EU,1) + u(16,Kos,EU,1) + u(17,Kos,EU,1) + u(18,Kos,EU,1) + u(19,Kos,EU,1) + u(20,Kos,EU,1) + u(21,Kos,EU,1) + u(22,Kos,EU,1) + u(23,Kos,EU,1) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Kos,EU,2)..  u(1,Kos,EU,2) + u(2,Kos,EU,2) + u(3,Kos,EU,2) + u(4,Kos,EU,2) + u(5,Kos,EU,2) + u(6,Kos,EU,2) + u(7,Kos,EU,2) + u(8,Kos,EU,2) + u(9,Kos,EU,2) + u(10,Kos,EU,2) + u(11,Kos,EU,2) + u(12,Kos,EU,2) + u(13,Kos,EU,2) + u(14,Kos,EU,2)
     
      + u(15,Kos,EU,2) + u(16,Kos,EU,2) + u(17,Kos,EU,2) + u(18,Kos,EU,2) + u(19,Kos,EU,2) + u(20,Kos,EU,2) + u(21,Kos,EU,2) + u(22,Kos,EU,2) + u(23,Kos,EU,2) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Kos,EU,3)..  u(1,Kos,EU,3) + u(2,Kos,EU,3) + u(3,Kos,EU,3) + u(4,Kos,EU,3) + u(5,Kos,EU,3) + u(6,Kos,EU,3) + u(7,Kos,EU,3) + u(8,Kos,EU,3) + u(9,Kos,EU,3) + u(10,Kos,EU,3) + u(11,Kos,EU,3) + u(12,Kos,EU,3) + u(13,Kos,EU,3) + u(14,Kos,EU,3)
     
      + u(15,Kos,EU,3) + u(16,Kos,EU,3) + u(17,Kos,EU,3) + u(18,Kos,EU,3) + u(19,Kos,EU,3) + u(20,Kos,EU,3) + u(21,Kos,EU,3) + u(22,Kos,EU,3) + u(23,Kos,EU,3) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Kos,IE,1)..  u(1,Kos,IE,1) + u(2,Kos,IE,1) + u(3,Kos,IE,1) + u(4,Kos,IE,1) + u(5,Kos,IE,1) + u(6,Kos,IE,1) + u(7,Kos,IE,1) + u(8,Kos,IE,1) + u(9,Kos,IE,1) + u(10,Kos,IE,1) + u(11,Kos,IE,1) + u(12,Kos,IE,1) + u(13,Kos,IE,1) + u(14,Kos,IE,1)
     
      + u(15,Kos,IE,1) + u(16,Kos,IE,1) + u(17,Kos,IE,1) + u(18,Kos,IE,1) + u(19,Kos,IE,1) + u(20,Kos,IE,1) + u(21,Kos,IE,1) + u(22,Kos,IE,1) + u(23,Kos,IE,1) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Kos,IE,2)..  u(1,Kos,IE,2) + u(2,Kos,IE,2) + u(3,Kos,IE,2) + u(4,Kos,IE,2) + u(5,Kos,IE,2) + u(6,Kos,IE,2) + u(7,Kos,IE,2) + u(8,Kos,IE,2) + u(9,Kos,IE,2) + u(10,Kos,IE,2) + u(11,Kos,IE,2) + u(12,Kos,IE,2) + u(13,Kos,IE,2) + u(14,Kos,IE,2)
     
      + u(15,Kos,IE,2) + u(16,Kos,IE,2) + u(17,Kos,IE,2) + u(18,Kos,IE,2) + u(19,Kos,IE,2) + u(20,Kos,IE,2) + u(21,Kos,IE,2) + u(22,Kos,IE,2) + u(23,Kos,IE,2) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/19/17 02:05:06 Page 40
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 437


     Barges_sell  =E=  ensure we only pick one value  n for barges for each product to each city

Barges_sell(Kos,IE,3)..  u(1,Kos,IE,3) + u(2,Kos,IE,3) + u(3,Kos,IE,3) + u(4,Kos,IE,3) + u(5,Kos,IE,3) + u(6,Kos,IE,3) + u(7,Kos,IE,3) + u(8,Kos,IE,3) + u(9,Kos,IE,3) + u(10,Kos,IE,3) + u(11,Kos,IE,3) + u(12,Kos,IE,3) + u(13,Kos,IE,3) + u(14,Kos,IE,3)
     
      + u(15,Kos,IE,3) + u(16,Kos,IE,3) + u(17,Kos,IE,3) + u(18,Kos,IE,3) + u(19,Kos,IE,3) + u(20,Kos,IE,3) + u(21,Kos,IE,3) + u(22,Kos,IE,3) + u(23,Kos,IE,3) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Kos,PA,1)..  u(1,Kos,PA,1) + u(2,Kos,PA,1) + u(3,Kos,PA,1) + u(4,Kos,PA,1) + u(5,Kos,PA,1) + u(6,Kos,PA,1) + u(7,Kos,PA,1) + u(8,Kos,PA,1) + u(9,Kos,PA,1) + u(10,Kos,PA,1) + u(11,Kos,PA,1) + u(12,Kos,PA,1) + u(13,Kos,PA,1) + u(14,Kos,PA,1)
     
      + u(15,Kos,PA,1) + u(16,Kos,PA,1) + u(17,Kos,PA,1) + u(18,Kos,PA,1) + u(19,Kos,PA,1) + u(20,Kos,PA,1) + u(21,Kos,PA,1) + u(22,Kos,PA,1) + u(23,Kos,PA,1) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Kos,PA,2)..  u(1,Kos,PA,2) + u(2,Kos,PA,2) + u(3,Kos,PA,2) + u(4,Kos,PA,2) + u(5,Kos,PA,2) + u(6,Kos,PA,2) + u(7,Kos,PA,2) + u(8,Kos,PA,2) + u(9,Kos,PA,2) + u(10,Kos,PA,2) + u(11,Kos,PA,2) + u(12,Kos,PA,2) + u(13,Kos,PA,2) + u(14,Kos,PA,2)
     
      + u(15,Kos,PA,2) + u(16,Kos,PA,2) + u(17,Kos,PA,2) + u(18,Kos,PA,2) + u(19,Kos,PA,2) + u(20,Kos,PA,2) + u(21,Kos,PA,2) + u(22,Kos,PA,2) + u(23,Kos,PA,2) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Kos,PA,3)..  u(1,Kos,PA,3) + u(2,Kos,PA,3) + u(3,Kos,PA,3) + u(4,Kos,PA,3) + u(5,Kos,PA,3) + u(6,Kos,PA,3) + u(7,Kos,PA,3) + u(8,Kos,PA,3) + u(9,Kos,PA,3) + u(10,Kos,PA,3) + u(11,Kos,PA,3) + u(12,Kos,PA,3) + u(13,Kos,PA,3) + u(14,Kos,PA,3)
     
      + u(15,Kos,PA,3) + u(16,Kos,PA,3) + u(17,Kos,PA,3) + u(18,Kos,PA,3) + u(19,Kos,PA,3) + u(20,Kos,PA,3) + u(21,Kos,PA,3) + u(22,Kos,PA,3) + u(23,Kos,PA,3) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Kos,KI,1)..  u(1,Kos,KI,1) + u(2,Kos,KI,1) + u(3,Kos,KI,1) + u(4,Kos,KI,1) + u(5,Kos,KI,1) + u(6,Kos,KI,1) + u(7,Kos,KI,1) + u(8,Kos,KI,1) + u(9,Kos,KI,1) + u(10,Kos,KI,1) + u(11,Kos,KI,1) + u(12,Kos,KI,1) + u(13,Kos,KI,1) + u(14,Kos,KI,1)
     
      + u(15,Kos,KI,1) + u(16,Kos,KI,1) + u(17,Kos,KI,1) + u(18,Kos,KI,1) + u(19,Kos,KI,1) + u(20,Kos,KI,1) + u(21,Kos,KI,1) + u(22,Kos,KI,1) + u(23,Kos,KI,1) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Kos,KI,2)..  u(1,Kos,KI,2) + u(2,Kos,KI,2) + u(3,Kos,KI,2) + u(4,Kos,KI,2) + u(5,Kos,KI,2) + u(6,Kos,KI,2) + u(7,Kos,KI,2) + u(8,Kos,KI,2) + u(9,Kos,KI,2) + u(10,Kos,KI,2) + u(11,Kos,KI,2) + u(12,Kos,KI,2) + u(13,Kos,KI,2) + u(14,Kos,KI,2)
     
      + u(15,Kos,KI,2) + u(16,Kos,KI,2) + u(17,Kos,KI,2) + u(18,Kos,KI,2) + u(19,Kos,KI,2) + u(20,Kos,KI,2) + u(21,Kos,KI,2) + u(22,Kos,KI,2) + u(23,Kos,KI,2) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Kos,KI,3)..  u(1,Kos,KI,3) + u(2,Kos,KI,3) + u(3,Kos,KI,3) + u(4,Kos,KI,3) + u(5,Kos,KI,3) + u(6,Kos,KI,3) + u(7,Kos,KI,3) + u(8,Kos,KI,3) + u(9,Kos,KI,3) + u(10,Kos,KI,3) + u(11,Kos,KI,3) + u(12,Kos,KI,3) + u(13,Kos,KI,3) + u(14,Kos,KI,3)
     
      + u(15,Kos,KI,3) + u(16,Kos,KI,3) + u(17,Kos,KI,3) + u(18,Kos,KI,3) + u(19,Kos,KI,3) + u(20,Kos,KI,3) + u(21,Kos,KI,3) + u(22,Kos,KI,3) + u(23,Kos,KI,3) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Kuv,EU,1)..  u(1,Kuv,EU,1) + u(2,Kuv,EU,1) + u(3,Kuv,EU,1) + u(4,Kuv,EU,1) + u(5,Kuv,EU,1) + u(6,Kuv,EU,1) + u(7,Kuv,EU,1) + u(8,Kuv,EU,1) + u(9,Kuv,EU,1) + u(10,Kuv,EU,1) + u(11,Kuv,EU,1) + u(12,Kuv,EU,1) + u(13,Kuv,EU,1) + u(14,Kuv,EU,1)
     
      + u(15,Kuv,EU,1) + u(16,Kuv,EU,1) + u(17,Kuv,EU,1) + u(18,Kuv,EU,1) + u(19,Kuv,EU,1) + u(20,Kuv,EU,1) + u(21,Kuv,EU,1) + u(22,Kuv,EU,1) + u(23,Kuv,EU,1) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Kuv,EU,2)..  u(1,Kuv,EU,2) + u(2,Kuv,EU,2) + u(3,Kuv,EU,2) + u(4,Kuv,EU,2) + u(5,Kuv,EU,2) + u(6,Kuv,EU,2) + u(7,Kuv,EU,2) + u(8,Kuv,EU,2) + u(9,Kuv,EU,2) + u(10,Kuv,EU,2) + u(11,Kuv,EU,2) + u(12,Kuv,EU,2) + u(13,Kuv,EU,2) + u(14,Kuv,EU,2)
     
      + u(15,Kuv,EU,2) + u(16,Kuv,EU,2) + u(17,Kuv,EU,2) + u(18,Kuv,EU,2) + u(19,Kuv,EU,2) + u(20,Kuv,EU,2) + u(21,Kuv,EU,2) + u(22,Kuv,EU,2) + u(23,Kuv,EU,2) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Kuv,EU,3)..  u(1,Kuv,EU,3) + u(2,Kuv,EU,3) + u(3,Kuv,EU,3) + u(4,Kuv,EU,3) + u(5,Kuv,EU,3) + u(6,Kuv,EU,3) + u(7,Kuv,EU,3) + u(8,Kuv,EU,3) + u(9,Kuv,EU,3) + u(10,Kuv,EU,3) + u(11,Kuv,EU,3) + u(12,Kuv,EU,3) + u(13,Kuv,EU,3) + u(14,Kuv,EU,3)
     
      + u(15,Kuv,EU,3) + u(16,Kuv,EU,3) + u(17,Kuv,EU,3) + u(18,Kuv,EU,3) + u(19,Kuv,EU,3) + u(20,Kuv,EU,3) + u(21,Kuv,EU,3) + u(22,Kuv,EU,3) + u(23,Kuv,EU,3) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Kuv,IE,1)..  u(1,Kuv,IE,1) + u(2,Kuv,IE,1) + u(3,Kuv,IE,1) + u(4,Kuv,IE,1) + u(5,Kuv,IE,1) + u(6,Kuv,IE,1) + u(7,Kuv,IE,1) + u(8,Kuv,IE,1) + u(9,Kuv,IE,1) + u(10,Kuv,IE,1) + u(11,Kuv,IE,1) + u(12,Kuv,IE,1) + u(13,Kuv,IE,1) + u(14,Kuv,IE,1)
     
      + u(15,Kuv,IE,1) + u(16,Kuv,IE,1) + u(17,Kuv,IE,1) + u(18,Kuv,IE,1) + u(19,Kuv,IE,1) + u(20,Kuv,IE,1) + u(21,Kuv,IE,1) + u(22,Kuv,IE,1) + u(23,Kuv,IE,1) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Kuv,IE,2)..  u(1,Kuv,IE,2) + u(2,Kuv,IE,2) + u(3,Kuv,IE,2) + u(4,Kuv,IE,2) + u(5,Kuv,IE,2) + u(6,Kuv,IE,2) + u(7,Kuv,IE,2) + u(8,Kuv,IE,2) + u(9,Kuv,IE,2) + u(10,Kuv,IE,2) + u(11,Kuv,IE,2) + u(12,Kuv,IE,2) + u(13,Kuv,IE,2) + u(14,Kuv,IE,2)
     
      + u(15,Kuv,IE,2) + u(16,Kuv,IE,2) + u(17,Kuv,IE,2) + u(18,Kuv,IE,2) + u(19,Kuv,IE,2) + u(20,Kuv,IE,2) + u(21,Kuv,IE,2) + u(22,Kuv,IE,2) + u(23,Kuv,IE,2) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/19/17 02:05:06 Page 41
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 437


     Barges_sell  =E=  ensure we only pick one value  n for barges for each product to each city

Barges_sell(Kuv,IE,3)..  u(1,Kuv,IE,3) + u(2,Kuv,IE,3) + u(3,Kuv,IE,3) + u(4,Kuv,IE,3) + u(5,Kuv,IE,3) + u(6,Kuv,IE,3) + u(7,Kuv,IE,3) + u(8,Kuv,IE,3) + u(9,Kuv,IE,3) + u(10,Kuv,IE,3) + u(11,Kuv,IE,3) + u(12,Kuv,IE,3) + u(13,Kuv,IE,3) + u(14,Kuv,IE,3)
     
      + u(15,Kuv,IE,3) + u(16,Kuv,IE,3) + u(17,Kuv,IE,3) + u(18,Kuv,IE,3) + u(19,Kuv,IE,3) + u(20,Kuv,IE,3) + u(21,Kuv,IE,3) + u(22,Kuv,IE,3) + u(23,Kuv,IE,3) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Kuv,PA,1)..  u(1,Kuv,PA,1) + u(2,Kuv,PA,1) + u(3,Kuv,PA,1) + u(4,Kuv,PA,1) + u(5,Kuv,PA,1) + u(6,Kuv,PA,1) + u(7,Kuv,PA,1) + u(8,Kuv,PA,1) + u(9,Kuv,PA,1) + u(10,Kuv,PA,1) + u(11,Kuv,PA,1) + u(12,Kuv,PA,1) + u(13,Kuv,PA,1) + u(14,Kuv,PA,1)
     
      + u(15,Kuv,PA,1) + u(16,Kuv,PA,1) + u(17,Kuv,PA,1) + u(18,Kuv,PA,1) + u(19,Kuv,PA,1) + u(20,Kuv,PA,1) + u(21,Kuv,PA,1) + u(22,Kuv,PA,1) + u(23,Kuv,PA,1) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Kuv,PA,2)..  u(1,Kuv,PA,2) + u(2,Kuv,PA,2) + u(3,Kuv,PA,2) + u(4,Kuv,PA,2) + u(5,Kuv,PA,2) + u(6,Kuv,PA,2) + u(7,Kuv,PA,2) + u(8,Kuv,PA,2) + u(9,Kuv,PA,2) + u(10,Kuv,PA,2) + u(11,Kuv,PA,2) + u(12,Kuv,PA,2) + u(13,Kuv,PA,2) + u(14,Kuv,PA,2)
     
      + u(15,Kuv,PA,2) + u(16,Kuv,PA,2) + u(17,Kuv,PA,2) + u(18,Kuv,PA,2) + u(19,Kuv,PA,2) + u(20,Kuv,PA,2) + u(21,Kuv,PA,2) + u(22,Kuv,PA,2) + u(23,Kuv,PA,2) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Kuv,PA,3)..  u(1,Kuv,PA,3) + u(2,Kuv,PA,3) + u(3,Kuv,PA,3) + u(4,Kuv,PA,3) + u(5,Kuv,PA,3) + u(6,Kuv,PA,3) + u(7,Kuv,PA,3) + u(8,Kuv,PA,3) + u(9,Kuv,PA,3) + u(10,Kuv,PA,3) + u(11,Kuv,PA,3) + u(12,Kuv,PA,3) + u(13,Kuv,PA,3) + u(14,Kuv,PA,3)
     
      + u(15,Kuv,PA,3) + u(16,Kuv,PA,3) + u(17,Kuv,PA,3) + u(18,Kuv,PA,3) + u(19,Kuv,PA,3) + u(20,Kuv,PA,3) + u(21,Kuv,PA,3) + u(22,Kuv,PA,3) + u(23,Kuv,PA,3) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Kuv,KI,1)..  u(1,Kuv,KI,1) + u(2,Kuv,KI,1) + u(3,Kuv,KI,1) + u(4,Kuv,KI,1) + u(5,Kuv,KI,1) + u(6,Kuv,KI,1) + u(7,Kuv,KI,1) + u(8,Kuv,KI,1) + u(9,Kuv,KI,1) + u(10,Kuv,KI,1) + u(11,Kuv,KI,1) + u(12,Kuv,KI,1) + u(13,Kuv,KI,1) + u(14,Kuv,KI,1)
     
      + u(15,Kuv,KI,1) + u(16,Kuv,KI,1) + u(17,Kuv,KI,1) + u(18,Kuv,KI,1) + u(19,Kuv,KI,1) + u(20,Kuv,KI,1) + u(21,Kuv,KI,1) + u(22,Kuv,KI,1) + u(23,Kuv,KI,1) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Kuv,KI,2)..  u(1,Kuv,KI,2) + u(2,Kuv,KI,2) + u(3,Kuv,KI,2) + u(4,Kuv,KI,2) + u(5,Kuv,KI,2) + u(6,Kuv,KI,2) + u(7,Kuv,KI,2) + u(8,Kuv,KI,2) + u(9,Kuv,KI,2) + u(10,Kuv,KI,2) + u(11,Kuv,KI,2) + u(12,Kuv,KI,2) + u(13,Kuv,KI,2) + u(14,Kuv,KI,2)
     
      + u(15,Kuv,KI,2) + u(16,Kuv,KI,2) + u(17,Kuv,KI,2) + u(18,Kuv,KI,2) + u(19,Kuv,KI,2) + u(20,Kuv,KI,2) + u(21,Kuv,KI,2) + u(22,Kuv,KI,2) + u(23,Kuv,KI,2) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Kuv,KI,3)..  u(1,Kuv,KI,3) + u(2,Kuv,KI,3) + u(3,Kuv,KI,3) + u(4,Kuv,KI,3) + u(5,Kuv,KI,3) + u(6,Kuv,KI,3) + u(7,Kuv,KI,3) + u(8,Kuv,KI,3) + u(9,Kuv,KI,3) + u(10,Kuv,KI,3) + u(11,Kuv,KI,3) + u(12,Kuv,KI,3) + u(13,Kuv,KI,3) + u(14,Kuv,KI,3)
     
      + u(15,Kuv,KI,3) + u(16,Kuv,KI,3) + u(17,Kuv,KI,3) + u(18,Kuv,KI,3) + u(19,Kuv,KI,3) + u(20,Kuv,KI,3) + u(21,Kuv,KI,3) + u(22,Kuv,KI,3) + u(23,Kuv,KI,3) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Kov,EU,1)..  u(1,Kov,EU,1) + u(2,Kov,EU,1) + u(3,Kov,EU,1) + u(4,Kov,EU,1) + u(5,Kov,EU,1) + u(6,Kov,EU,1) + u(7,Kov,EU,1) + u(8,Kov,EU,1) + u(9,Kov,EU,1) + u(10,Kov,EU,1) + u(11,Kov,EU,1) + u(12,Kov,EU,1) + u(13,Kov,EU,1) + u(14,Kov,EU,1)
     
      + u(15,Kov,EU,1) + u(16,Kov,EU,1) + u(17,Kov,EU,1) + u(18,Kov,EU,1) + u(19,Kov,EU,1) + u(20,Kov,EU,1) + u(21,Kov,EU,1) + u(22,Kov,EU,1) + u(23,Kov,EU,1) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Kov,EU,2)..  u(1,Kov,EU,2) + u(2,Kov,EU,2) + u(3,Kov,EU,2) + u(4,Kov,EU,2) + u(5,Kov,EU,2) + u(6,Kov,EU,2) + u(7,Kov,EU,2) + u(8,Kov,EU,2) + u(9,Kov,EU,2) + u(10,Kov,EU,2) + u(11,Kov,EU,2) + u(12,Kov,EU,2) + u(13,Kov,EU,2) + u(14,Kov,EU,2)
     
      + u(15,Kov,EU,2) + u(16,Kov,EU,2) + u(17,Kov,EU,2) + u(18,Kov,EU,2) + u(19,Kov,EU,2) + u(20,Kov,EU,2) + u(21,Kov,EU,2) + u(22,Kov,EU,2) + u(23,Kov,EU,2) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Kov,EU,3)..  u(1,Kov,EU,3) + u(2,Kov,EU,3) + u(3,Kov,EU,3) + u(4,Kov,EU,3) + u(5,Kov,EU,3) + u(6,Kov,EU,3) + u(7,Kov,EU,3) + u(8,Kov,EU,3) + u(9,Kov,EU,3) + u(10,Kov,EU,3) + u(11,Kov,EU,3) + u(12,Kov,EU,3) + u(13,Kov,EU,3) + u(14,Kov,EU,3)
     
      + u(15,Kov,EU,3) + u(16,Kov,EU,3) + u(17,Kov,EU,3) + u(18,Kov,EU,3) + u(19,Kov,EU,3) + u(20,Kov,EU,3) + u(21,Kov,EU,3) + u(22,Kov,EU,3) + u(23,Kov,EU,3) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Kov,IE,1)..  u(1,Kov,IE,1) + u(2,Kov,IE,1) + u(3,Kov,IE,1) + u(4,Kov,IE,1) + u(5,Kov,IE,1) + u(6,Kov,IE,1) + u(7,Kov,IE,1) + u(8,Kov,IE,1) + u(9,Kov,IE,1) + u(10,Kov,IE,1) + u(11,Kov,IE,1) + u(12,Kov,IE,1) + u(13,Kov,IE,1) + u(14,Kov,IE,1)
     
      + u(15,Kov,IE,1) + u(16,Kov,IE,1) + u(17,Kov,IE,1) + u(18,Kov,IE,1) + u(19,Kov,IE,1) + u(20,Kov,IE,1) + u(21,Kov,IE,1) + u(22,Kov,IE,1) + u(23,Kov,IE,1) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Kov,IE,2)..  u(1,Kov,IE,2) + u(2,Kov,IE,2) + u(3,Kov,IE,2) + u(4,Kov,IE,2) + u(5,Kov,IE,2) + u(6,Kov,IE,2) + u(7,Kov,IE,2) + u(8,Kov,IE,2) + u(9,Kov,IE,2) + u(10,Kov,IE,2) + u(11,Kov,IE,2) + u(12,Kov,IE,2) + u(13,Kov,IE,2) + u(14,Kov,IE,2)
     
      + u(15,Kov,IE,2) + u(16,Kov,IE,2) + u(17,Kov,IE,2) + u(18,Kov,IE,2) + u(19,Kov,IE,2) + u(20,Kov,IE,2) + u(21,Kov,IE,2) + u(22,Kov,IE,2) + u(23,Kov,IE,2) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/19/17 02:05:06 Page 42
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 437


     Barges_sell  =E=  ensure we only pick one value  n for barges for each product to each city

Barges_sell(Kov,IE,3)..  u(1,Kov,IE,3) + u(2,Kov,IE,3) + u(3,Kov,IE,3) + u(4,Kov,IE,3) + u(5,Kov,IE,3) + u(6,Kov,IE,3) + u(7,Kov,IE,3) + u(8,Kov,IE,3) + u(9,Kov,IE,3) + u(10,Kov,IE,3) + u(11,Kov,IE,3) + u(12,Kov,IE,3) + u(13,Kov,IE,3) + u(14,Kov,IE,3)
     
      + u(15,Kov,IE,3) + u(16,Kov,IE,3) + u(17,Kov,IE,3) + u(18,Kov,IE,3) + u(19,Kov,IE,3) + u(20,Kov,IE,3) + u(21,Kov,IE,3) + u(22,Kov,IE,3) + u(23,Kov,IE,3) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Kov,PA,1)..  u(1,Kov,PA,1) + u(2,Kov,PA,1) + u(3,Kov,PA,1) + u(4,Kov,PA,1) + u(5,Kov,PA,1) + u(6,Kov,PA,1) + u(7,Kov,PA,1) + u(8,Kov,PA,1) + u(9,Kov,PA,1) + u(10,Kov,PA,1) + u(11,Kov,PA,1) + u(12,Kov,PA,1) + u(13,Kov,PA,1) + u(14,Kov,PA,1)
     
      + u(15,Kov,PA,1) + u(16,Kov,PA,1) + u(17,Kov,PA,1) + u(18,Kov,PA,1) + u(19,Kov,PA,1) + u(20,Kov,PA,1) + u(21,Kov,PA,1) + u(22,Kov,PA,1) + u(23,Kov,PA,1) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Kov,PA,2)..  u(1,Kov,PA,2) + u(2,Kov,PA,2) + u(3,Kov,PA,2) + u(4,Kov,PA,2) + u(5,Kov,PA,2) + u(6,Kov,PA,2) + u(7,Kov,PA,2) + u(8,Kov,PA,2) + u(9,Kov,PA,2) + u(10,Kov,PA,2) + u(11,Kov,PA,2) + u(12,Kov,PA,2) + u(13,Kov,PA,2) + u(14,Kov,PA,2)
     
      + u(15,Kov,PA,2) + u(16,Kov,PA,2) + u(17,Kov,PA,2) + u(18,Kov,PA,2) + u(19,Kov,PA,2) + u(20,Kov,PA,2) + u(21,Kov,PA,2) + u(22,Kov,PA,2) + u(23,Kov,PA,2) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Kov,PA,3)..  u(1,Kov,PA,3) + u(2,Kov,PA,3) + u(3,Kov,PA,3) + u(4,Kov,PA,3) + u(5,Kov,PA,3) + u(6,Kov,PA,3) + u(7,Kov,PA,3) + u(8,Kov,PA,3) + u(9,Kov,PA,3) + u(10,Kov,PA,3) + u(11,Kov,PA,3) + u(12,Kov,PA,3) + u(13,Kov,PA,3) + u(14,Kov,PA,3)
     
      + u(15,Kov,PA,3) + u(16,Kov,PA,3) + u(17,Kov,PA,3) + u(18,Kov,PA,3) + u(19,Kov,PA,3) + u(20,Kov,PA,3) + u(21,Kov,PA,3) + u(22,Kov,PA,3) + u(23,Kov,PA,3) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Kov,KI,1)..  u(1,Kov,KI,1) + u(2,Kov,KI,1) + u(3,Kov,KI,1) + u(4,Kov,KI,1) + u(5,Kov,KI,1) + u(6,Kov,KI,1) + u(7,Kov,KI,1) + u(8,Kov,KI,1) + u(9,Kov,KI,1) + u(10,Kov,KI,1) + u(11,Kov,KI,1) + u(12,Kov,KI,1) + u(13,Kov,KI,1) + u(14,Kov,KI,1)
     
      + u(15,Kov,KI,1) + u(16,Kov,KI,1) + u(17,Kov,KI,1) + u(18,Kov,KI,1) + u(19,Kov,KI,1) + u(20,Kov,KI,1) + u(21,Kov,KI,1) + u(22,Kov,KI,1) + u(23,Kov,KI,1) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Kov,KI,2)..  u(1,Kov,KI,2) + u(2,Kov,KI,2) + u(3,Kov,KI,2) + u(4,Kov,KI,2) + u(5,Kov,KI,2) + u(6,Kov,KI,2) + u(7,Kov,KI,2) + u(8,Kov,KI,2) + u(9,Kov,KI,2) + u(10,Kov,KI,2) + u(11,Kov,KI,2) + u(12,Kov,KI,2) + u(13,Kov,KI,2) + u(14,Kov,KI,2)
     
      + u(15,Kov,KI,2) + u(16,Kov,KI,2) + u(17,Kov,KI,2) + u(18,Kov,KI,2) + u(19,Kov,KI,2) + u(20,Kov,KI,2) + u(21,Kov,KI,2) + u(22,Kov,KI,2) + u(23,Kov,KI,2) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Kov,KI,3)..  u(1,Kov,KI,3) + u(2,Kov,KI,3) + u(3,Kov,KI,3) + u(4,Kov,KI,3) + u(5,Kov,KI,3) + u(6,Kov,KI,3) + u(7,Kov,KI,3) + u(8,Kov,KI,3) + u(9,Kov,KI,3) + u(10,Kov,KI,3) + u(11,Kov,KI,3) + u(12,Kov,KI,3) + u(13,Kov,KI,3) + u(14,Kov,KI,3)
     
      + u(15,Kov,KI,3) + u(16,Kov,KI,3) + u(17,Kov,KI,3) + u(18,Kov,KI,3) + u(19,Kov,KI,3) + u(20,Kov,KI,3) + u(21,Kov,KI,3) + u(22,Kov,KI,3) + u(23,Kov,KI,3) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Hsel,EU,1)..  u(1,Hsel,EU,1) + u(2,Hsel,EU,1) + u(3,Hsel,EU,1) + u(4,Hsel,EU,1) + u(5,Hsel,EU,1) + u(6,Hsel,EU,1) + u(7,Hsel,EU,1) + u(8,Hsel,EU,1) + u(9,Hsel,EU,1) + u(10,Hsel,EU,1) + u(11,Hsel,EU,1) + u(12,Hsel,EU,1) + u(13,Hsel,EU,1)
     
      + u(14,Hsel,EU,1) + u(15,Hsel,EU,1) + u(16,Hsel,EU,1) + u(17,Hsel,EU,1) + u(18,Hsel,EU,1) + u(19,Hsel,EU,1) + u(20,Hsel,EU,1) + u(21,Hsel,EU,1) + u(22,Hsel,EU,1) + u(23,Hsel,EU,1) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Hsel,EU,2)..  u(1,Hsel,EU,2) + u(2,Hsel,EU,2) + u(3,Hsel,EU,2) + u(4,Hsel,EU,2) + u(5,Hsel,EU,2) + u(6,Hsel,EU,2) + u(7,Hsel,EU,2) + u(8,Hsel,EU,2) + u(9,Hsel,EU,2) + u(10,Hsel,EU,2) + u(11,Hsel,EU,2) + u(12,Hsel,EU,2) + u(13,Hsel,EU,2)
     
      + u(14,Hsel,EU,2) + u(15,Hsel,EU,2) + u(16,Hsel,EU,2) + u(17,Hsel,EU,2) + u(18,Hsel,EU,2) + u(19,Hsel,EU,2) + u(20,Hsel,EU,2) + u(21,Hsel,EU,2) + u(22,Hsel,EU,2) + u(23,Hsel,EU,2) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Hsel,EU,3)..  u(1,Hsel,EU,3) + u(2,Hsel,EU,3) + u(3,Hsel,EU,3) + u(4,Hsel,EU,3) + u(5,Hsel,EU,3) + u(6,Hsel,EU,3) + u(7,Hsel,EU,3) + u(8,Hsel,EU,3) + u(9,Hsel,EU,3) + u(10,Hsel,EU,3) + u(11,Hsel,EU,3) + u(12,Hsel,EU,3) + u(13,Hsel,EU,3)
     
      + u(14,Hsel,EU,3) + u(15,Hsel,EU,3) + u(16,Hsel,EU,3) + u(17,Hsel,EU,3) + u(18,Hsel,EU,3) + u(19,Hsel,EU,3) + u(20,Hsel,EU,3) + u(21,Hsel,EU,3) + u(22,Hsel,EU,3) + u(23,Hsel,EU,3) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Hsel,IE,1)..  u(1,Hsel,IE,1) + u(2,Hsel,IE,1) + u(3,Hsel,IE,1) + u(4,Hsel,IE,1) + u(5,Hsel,IE,1) + u(6,Hsel,IE,1) + u(7,Hsel,IE,1) + u(8,Hsel,IE,1) + u(9,Hsel,IE,1) + u(10,Hsel,IE,1) + u(11,Hsel,IE,1) + u(12,Hsel,IE,1) + u(13,Hsel,IE,1)
     
      + u(14,Hsel,IE,1) + u(15,Hsel,IE,1) + u(16,Hsel,IE,1) + u(17,Hsel,IE,1) + u(18,Hsel,IE,1) + u(19,Hsel,IE,1) + u(20,Hsel,IE,1) + u(21,Hsel,IE,1) + u(22,Hsel,IE,1) + u(23,Hsel,IE,1) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Hsel,IE,2)..  u(1,Hsel,IE,2) + u(2,Hsel,IE,2) + u(3,Hsel,IE,2) + u(4,Hsel,IE,2) + u(5,Hsel,IE,2) + u(6,Hsel,IE,2) + u(7,Hsel,IE,2) + u(8,Hsel,IE,2) + u(9,Hsel,IE,2) + u(10,Hsel,IE,2) + u(11,Hsel,IE,2) + u(12,Hsel,IE,2) + u(13,Hsel,IE,2)
     
      + u(14,Hsel,IE,2) + u(15,Hsel,IE,2) + u(16,Hsel,IE,2) + u(17,Hsel,IE,2) + u(18,Hsel,IE,2) + u(19,Hsel,IE,2) + u(20,Hsel,IE,2) + u(21,Hsel,IE,2) + u(22,Hsel,IE,2) + u(23,Hsel,IE,2) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/19/17 02:05:06 Page 43
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 437


     Barges_sell  =E=  ensure we only pick one value  n for barges for each product to each city

Barges_sell(Hsel,IE,3)..  u(1,Hsel,IE,3) + u(2,Hsel,IE,3) + u(3,Hsel,IE,3) + u(4,Hsel,IE,3) + u(5,Hsel,IE,3) + u(6,Hsel,IE,3) + u(7,Hsel,IE,3) + u(8,Hsel,IE,3) + u(9,Hsel,IE,3) + u(10,Hsel,IE,3) + u(11,Hsel,IE,3) + u(12,Hsel,IE,3) + u(13,Hsel,IE,3)
     
      + u(14,Hsel,IE,3) + u(15,Hsel,IE,3) + u(16,Hsel,IE,3) + u(17,Hsel,IE,3) + u(18,Hsel,IE,3) + u(19,Hsel,IE,3) + u(20,Hsel,IE,3) + u(21,Hsel,IE,3) + u(22,Hsel,IE,3) + u(23,Hsel,IE,3) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Hsel,PA,1)..  u(1,Hsel,PA,1) + u(2,Hsel,PA,1) + u(3,Hsel,PA,1) + u(4,Hsel,PA,1) + u(5,Hsel,PA,1) + u(6,Hsel,PA,1) + u(7,Hsel,PA,1) + u(8,Hsel,PA,1) + u(9,Hsel,PA,1) + u(10,Hsel,PA,1) + u(11,Hsel,PA,1) + u(12,Hsel,PA,1) + u(13,Hsel,PA,1)
     
      + u(14,Hsel,PA,1) + u(15,Hsel,PA,1) + u(16,Hsel,PA,1) + u(17,Hsel,PA,1) + u(18,Hsel,PA,1) + u(19,Hsel,PA,1) + u(20,Hsel,PA,1) + u(21,Hsel,PA,1) + u(22,Hsel,PA,1) + u(23,Hsel,PA,1) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Hsel,PA,2)..  u(1,Hsel,PA,2) + u(2,Hsel,PA,2) + u(3,Hsel,PA,2) + u(4,Hsel,PA,2) + u(5,Hsel,PA,2) + u(6,Hsel,PA,2) + u(7,Hsel,PA,2) + u(8,Hsel,PA,2) + u(9,Hsel,PA,2) + u(10,Hsel,PA,2) + u(11,Hsel,PA,2) + u(12,Hsel,PA,2) + u(13,Hsel,PA,2)
     
      + u(14,Hsel,PA,2) + u(15,Hsel,PA,2) + u(16,Hsel,PA,2) + u(17,Hsel,PA,2) + u(18,Hsel,PA,2) + u(19,Hsel,PA,2) + u(20,Hsel,PA,2) + u(21,Hsel,PA,2) + u(22,Hsel,PA,2) + u(23,Hsel,PA,2) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Hsel,PA,3)..  u(1,Hsel,PA,3) + u(2,Hsel,PA,3) + u(3,Hsel,PA,3) + u(4,Hsel,PA,3) + u(5,Hsel,PA,3) + u(6,Hsel,PA,3) + u(7,Hsel,PA,3) + u(8,Hsel,PA,3) + u(9,Hsel,PA,3) + u(10,Hsel,PA,3) + u(11,Hsel,PA,3) + u(12,Hsel,PA,3) + u(13,Hsel,PA,3)
     
      + u(14,Hsel,PA,3) + u(15,Hsel,PA,3) + u(16,Hsel,PA,3) + u(17,Hsel,PA,3) + u(18,Hsel,PA,3) + u(19,Hsel,PA,3) + u(20,Hsel,PA,3) + u(21,Hsel,PA,3) + u(22,Hsel,PA,3) + u(23,Hsel,PA,3) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Hsel,KI,1)..  u(1,Hsel,KI,1) + u(2,Hsel,KI,1) + u(3,Hsel,KI,1) + u(4,Hsel,KI,1) + u(5,Hsel,KI,1) + u(6,Hsel,KI,1) + u(7,Hsel,KI,1) + u(8,Hsel,KI,1) + u(9,Hsel,KI,1) + u(10,Hsel,KI,1) + u(11,Hsel,KI,1) + u(12,Hsel,KI,1) + u(13,Hsel,KI,1)
     
      + u(14,Hsel,KI,1) + u(15,Hsel,KI,1) + u(16,Hsel,KI,1) + u(17,Hsel,KI,1) + u(18,Hsel,KI,1) + u(19,Hsel,KI,1) + u(20,Hsel,KI,1) + u(21,Hsel,KI,1) + u(22,Hsel,KI,1) + u(23,Hsel,KI,1) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Hsel,KI,2)..  u(1,Hsel,KI,2) + u(2,Hsel,KI,2) + u(3,Hsel,KI,2) + u(4,Hsel,KI,2) + u(5,Hsel,KI,2) + u(6,Hsel,KI,2) + u(7,Hsel,KI,2) + u(8,Hsel,KI,2) + u(9,Hsel,KI,2) + u(10,Hsel,KI,2) + u(11,Hsel,KI,2) + u(12,Hsel,KI,2) + u(13,Hsel,KI,2)
     
      + u(14,Hsel,KI,2) + u(15,Hsel,KI,2) + u(16,Hsel,KI,2) + u(17,Hsel,KI,2) + u(18,Hsel,KI,2) + u(19,Hsel,KI,2) + u(20,Hsel,KI,2) + u(21,Hsel,KI,2) + u(22,Hsel,KI,2) + u(23,Hsel,KI,2) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Hsel,KI,3)..  u(1,Hsel,KI,3) + u(2,Hsel,KI,3) + u(3,Hsel,KI,3) + u(4,Hsel,KI,3) + u(5,Hsel,KI,3) + u(6,Hsel,KI,3) + u(7,Hsel,KI,3) + u(8,Hsel,KI,3) + u(9,Hsel,KI,3) + u(10,Hsel,KI,3) + u(11,Hsel,KI,3) + u(12,Hsel,KI,3) + u(13,Hsel,KI,3)
     
      + u(14,Hsel,KI,3) + u(15,Hsel,KI,3) + u(16,Hsel,KI,3) + u(17,Hsel,KI,3) + u(18,Hsel,KI,3) + u(19,Hsel,KI,3) + u(20,Hsel,KI,3) + u(21,Hsel,KI,3) + u(22,Hsel,KI,3) + u(23,Hsel,KI,3) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Lsel,EU,1)..  u(1,Lsel,EU,1) + u(2,Lsel,EU,1) + u(3,Lsel,EU,1) + u(4,Lsel,EU,1) + u(5,Lsel,EU,1) + u(6,Lsel,EU,1) + u(7,Lsel,EU,1) + u(8,Lsel,EU,1) + u(9,Lsel,EU,1) + u(10,Lsel,EU,1) + u(11,Lsel,EU,1) + u(12,Lsel,EU,1) + u(13,Lsel,EU,1)
     
      + u(14,Lsel,EU,1) + u(15,Lsel,EU,1) + u(16,Lsel,EU,1) + u(17,Lsel,EU,1) + u(18,Lsel,EU,1) + u(19,Lsel,EU,1) + u(20,Lsel,EU,1) + u(21,Lsel,EU,1) + u(22,Lsel,EU,1) + u(23,Lsel,EU,1) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Lsel,EU,2)..  u(1,Lsel,EU,2) + u(2,Lsel,EU,2) + u(3,Lsel,EU,2) + u(4,Lsel,EU,2) + u(5,Lsel,EU,2) + u(6,Lsel,EU,2) + u(7,Lsel,EU,2) + u(8,Lsel,EU,2) + u(9,Lsel,EU,2) + u(10,Lsel,EU,2) + u(11,Lsel,EU,2) + u(12,Lsel,EU,2) + u(13,Lsel,EU,2)
     
      + u(14,Lsel,EU,2) + u(15,Lsel,EU,2) + u(16,Lsel,EU,2) + u(17,Lsel,EU,2) + u(18,Lsel,EU,2) + u(19,Lsel,EU,2) + u(20,Lsel,EU,2) + u(21,Lsel,EU,2) + u(22,Lsel,EU,2) + u(23,Lsel,EU,2) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Lsel,EU,3)..  u(1,Lsel,EU,3) + u(2,Lsel,EU,3) + u(3,Lsel,EU,3) + u(4,Lsel,EU,3) + u(5,Lsel,EU,3) + u(6,Lsel,EU,3) + u(7,Lsel,EU,3) + u(8,Lsel,EU,3) + u(9,Lsel,EU,3) + u(10,Lsel,EU,3) + u(11,Lsel,EU,3) + u(12,Lsel,EU,3) + u(13,Lsel,EU,3)
     
      + u(14,Lsel,EU,3) + u(15,Lsel,EU,3) + u(16,Lsel,EU,3) + u(17,Lsel,EU,3) + u(18,Lsel,EU,3) + u(19,Lsel,EU,3) + u(20,Lsel,EU,3) + u(21,Lsel,EU,3) + u(22,Lsel,EU,3) + u(23,Lsel,EU,3) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Lsel,IE,1)..  u(1,Lsel,IE,1) + u(2,Lsel,IE,1) + u(3,Lsel,IE,1) + u(4,Lsel,IE,1) + u(5,Lsel,IE,1) + u(6,Lsel,IE,1) + u(7,Lsel,IE,1) + u(8,Lsel,IE,1) + u(9,Lsel,IE,1) + u(10,Lsel,IE,1) + u(11,Lsel,IE,1) + u(12,Lsel,IE,1) + u(13,Lsel,IE,1)
     
      + u(14,Lsel,IE,1) + u(15,Lsel,IE,1) + u(16,Lsel,IE,1) + u(17,Lsel,IE,1) + u(18,Lsel,IE,1) + u(19,Lsel,IE,1) + u(20,Lsel,IE,1) + u(21,Lsel,IE,1) + u(22,Lsel,IE,1) + u(23,Lsel,IE,1) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Lsel,IE,2)..  u(1,Lsel,IE,2) + u(2,Lsel,IE,2) + u(3,Lsel,IE,2) + u(4,Lsel,IE,2) + u(5,Lsel,IE,2) + u(6,Lsel,IE,2) + u(7,Lsel,IE,2) + u(8,Lsel,IE,2) + u(9,Lsel,IE,2) + u(10,Lsel,IE,2) + u(11,Lsel,IE,2) + u(12,Lsel,IE,2) + u(13,Lsel,IE,2)
     
      + u(14,Lsel,IE,2) + u(15,Lsel,IE,2) + u(16,Lsel,IE,2) + u(17,Lsel,IE,2) + u(18,Lsel,IE,2) + u(19,Lsel,IE,2) + u(20,Lsel,IE,2) + u(21,Lsel,IE,2) + u(22,Lsel,IE,2) + u(23,Lsel,IE,2) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/19/17 02:05:06 Page 44
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 437


     Barges_sell  =E=  ensure we only pick one value  n for barges for each product to each city

Barges_sell(Lsel,IE,3)..  u(1,Lsel,IE,3) + u(2,Lsel,IE,3) + u(3,Lsel,IE,3) + u(4,Lsel,IE,3) + u(5,Lsel,IE,3) + u(6,Lsel,IE,3) + u(7,Lsel,IE,3) + u(8,Lsel,IE,3) + u(9,Lsel,IE,3) + u(10,Lsel,IE,3) + u(11,Lsel,IE,3) + u(12,Lsel,IE,3) + u(13,Lsel,IE,3)
     
      + u(14,Lsel,IE,3) + u(15,Lsel,IE,3) + u(16,Lsel,IE,3) + u(17,Lsel,IE,3) + u(18,Lsel,IE,3) + u(19,Lsel,IE,3) + u(20,Lsel,IE,3) + u(21,Lsel,IE,3) + u(22,Lsel,IE,3) + u(23,Lsel,IE,3) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Lsel,PA,1)..  u(1,Lsel,PA,1) + u(2,Lsel,PA,1) + u(3,Lsel,PA,1) + u(4,Lsel,PA,1) + u(5,Lsel,PA,1) + u(6,Lsel,PA,1) + u(7,Lsel,PA,1) + u(8,Lsel,PA,1) + u(9,Lsel,PA,1) + u(10,Lsel,PA,1) + u(11,Lsel,PA,1) + u(12,Lsel,PA,1) + u(13,Lsel,PA,1)
     
      + u(14,Lsel,PA,1) + u(15,Lsel,PA,1) + u(16,Lsel,PA,1) + u(17,Lsel,PA,1) + u(18,Lsel,PA,1) + u(19,Lsel,PA,1) + u(20,Lsel,PA,1) + u(21,Lsel,PA,1) + u(22,Lsel,PA,1) + u(23,Lsel,PA,1) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Lsel,PA,2)..  u(1,Lsel,PA,2) + u(2,Lsel,PA,2) + u(3,Lsel,PA,2) + u(4,Lsel,PA,2) + u(5,Lsel,PA,2) + u(6,Lsel,PA,2) + u(7,Lsel,PA,2) + u(8,Lsel,PA,2) + u(9,Lsel,PA,2) + u(10,Lsel,PA,2) + u(11,Lsel,PA,2) + u(12,Lsel,PA,2) + u(13,Lsel,PA,2)
     
      + u(14,Lsel,PA,2) + u(15,Lsel,PA,2) + u(16,Lsel,PA,2) + u(17,Lsel,PA,2) + u(18,Lsel,PA,2) + u(19,Lsel,PA,2) + u(20,Lsel,PA,2) + u(21,Lsel,PA,2) + u(22,Lsel,PA,2) + u(23,Lsel,PA,2) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Lsel,PA,3)..  u(1,Lsel,PA,3) + u(2,Lsel,PA,3) + u(3,Lsel,PA,3) + u(4,Lsel,PA,3) + u(5,Lsel,PA,3) + u(6,Lsel,PA,3) + u(7,Lsel,PA,3) + u(8,Lsel,PA,3) + u(9,Lsel,PA,3) + u(10,Lsel,PA,3) + u(11,Lsel,PA,3) + u(12,Lsel,PA,3) + u(13,Lsel,PA,3)
     
      + u(14,Lsel,PA,3) + u(15,Lsel,PA,3) + u(16,Lsel,PA,3) + u(17,Lsel,PA,3) + u(18,Lsel,PA,3) + u(19,Lsel,PA,3) + u(20,Lsel,PA,3) + u(21,Lsel,PA,3) + u(22,Lsel,PA,3) + u(23,Lsel,PA,3) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Lsel,KI,1)..  u(1,Lsel,KI,1) + u(2,Lsel,KI,1) + u(3,Lsel,KI,1) + u(4,Lsel,KI,1) + u(5,Lsel,KI,1) + u(6,Lsel,KI,1) + u(7,Lsel,KI,1) + u(8,Lsel,KI,1) + u(9,Lsel,KI,1) + u(10,Lsel,KI,1) + u(11,Lsel,KI,1) + u(12,Lsel,KI,1) + u(13,Lsel,KI,1)
     
      + u(14,Lsel,KI,1) + u(15,Lsel,KI,1) + u(16,Lsel,KI,1) + u(17,Lsel,KI,1) + u(18,Lsel,KI,1) + u(19,Lsel,KI,1) + u(20,Lsel,KI,1) + u(21,Lsel,KI,1) + u(22,Lsel,KI,1) + u(23,Lsel,KI,1) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Lsel,KI,2)..  u(1,Lsel,KI,2) + u(2,Lsel,KI,2) + u(3,Lsel,KI,2) + u(4,Lsel,KI,2) + u(5,Lsel,KI,2) + u(6,Lsel,KI,2) + u(7,Lsel,KI,2) + u(8,Lsel,KI,2) + u(9,Lsel,KI,2) + u(10,Lsel,KI,2) + u(11,Lsel,KI,2) + u(12,Lsel,KI,2) + u(13,Lsel,KI,2)
     
      + u(14,Lsel,KI,2) + u(15,Lsel,KI,2) + u(16,Lsel,KI,2) + u(17,Lsel,KI,2) + u(18,Lsel,KI,2) + u(19,Lsel,KI,2) + u(20,Lsel,KI,2) + u(21,Lsel,KI,2) + u(22,Lsel,KI,2) + u(23,Lsel,KI,2) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Lsel,KI,3)..  u(1,Lsel,KI,3) + u(2,Lsel,KI,3) + u(3,Lsel,KI,3) + u(4,Lsel,KI,3) + u(5,Lsel,KI,3) + u(6,Lsel,KI,3) + u(7,Lsel,KI,3) + u(8,Lsel,KI,3) + u(9,Lsel,KI,3) + u(10,Lsel,KI,3) + u(11,Lsel,KI,3) + u(12,Lsel,KI,3) + u(13,Lsel,KI,3)
     
      + u(14,Lsel,KI,3) + u(15,Lsel,KI,3) + u(16,Lsel,KI,3) + u(17,Lsel,KI,3) + u(18,Lsel,KI,3) + u(19,Lsel,KI,3) + u(20,Lsel,KI,3) + u(21,Lsel,KI,3) + u(22,Lsel,KI,3) + u(23,Lsel,KI,3) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Pap,EU,1)..  u(1,Pap,EU,1) + u(2,Pap,EU,1) + u(3,Pap,EU,1) + u(4,Pap,EU,1) + u(5,Pap,EU,1) + u(6,Pap,EU,1) + u(7,Pap,EU,1) + u(8,Pap,EU,1) + u(9,Pap,EU,1) + u(10,Pap,EU,1) + u(11,Pap,EU,1) + u(12,Pap,EU,1) + u(13,Pap,EU,1) + u(14,Pap,EU,1)
     
      + u(15,Pap,EU,1) + u(16,Pap,EU,1) + u(17,Pap,EU,1) + u(18,Pap,EU,1) + u(19,Pap,EU,1) + u(20,Pap,EU,1) + u(21,Pap,EU,1) + u(22,Pap,EU,1) + u(23,Pap,EU,1) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Pap,EU,2)..  u(1,Pap,EU,2) + u(2,Pap,EU,2) + u(3,Pap,EU,2) + u(4,Pap,EU,2) + u(5,Pap,EU,2) + u(6,Pap,EU,2) + u(7,Pap,EU,2) + u(8,Pap,EU,2) + u(9,Pap,EU,2) + u(10,Pap,EU,2) + u(11,Pap,EU,2) + u(12,Pap,EU,2) + u(13,Pap,EU,2) + u(14,Pap,EU,2)
     
      + u(15,Pap,EU,2) + u(16,Pap,EU,2) + u(17,Pap,EU,2) + u(18,Pap,EU,2) + u(19,Pap,EU,2) + u(20,Pap,EU,2) + u(21,Pap,EU,2) + u(22,Pap,EU,2) + u(23,Pap,EU,2) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Pap,EU,3)..  u(1,Pap,EU,3) + u(2,Pap,EU,3) + u(3,Pap,EU,3) + u(4,Pap,EU,3) + u(5,Pap,EU,3) + u(6,Pap,EU,3) + u(7,Pap,EU,3) + u(8,Pap,EU,3) + u(9,Pap,EU,3) + u(10,Pap,EU,3) + u(11,Pap,EU,3) + u(12,Pap,EU,3) + u(13,Pap,EU,3) + u(14,Pap,EU,3)
     
      + u(15,Pap,EU,3) + u(16,Pap,EU,3) + u(17,Pap,EU,3) + u(18,Pap,EU,3) + u(19,Pap,EU,3) + u(20,Pap,EU,3) + u(21,Pap,EU,3) + u(22,Pap,EU,3) + u(23,Pap,EU,3) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Pap,IE,1)..  u(1,Pap,IE,1) + u(2,Pap,IE,1) + u(3,Pap,IE,1) + u(4,Pap,IE,1) + u(5,Pap,IE,1) + u(6,Pap,IE,1) + u(7,Pap,IE,1) + u(8,Pap,IE,1) + u(9,Pap,IE,1) + u(10,Pap,IE,1) + u(11,Pap,IE,1) + u(12,Pap,IE,1) + u(13,Pap,IE,1) + u(14,Pap,IE,1)
     
      + u(15,Pap,IE,1) + u(16,Pap,IE,1) + u(17,Pap,IE,1) + u(18,Pap,IE,1) + u(19,Pap,IE,1) + u(20,Pap,IE,1) + u(21,Pap,IE,1) + u(22,Pap,IE,1) + u(23,Pap,IE,1) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Pap,IE,2)..  u(1,Pap,IE,2) + u(2,Pap,IE,2) + u(3,Pap,IE,2) + u(4,Pap,IE,2) + u(5,Pap,IE,2) + u(6,Pap,IE,2) + u(7,Pap,IE,2) + u(8,Pap,IE,2) + u(9,Pap,IE,2) + u(10,Pap,IE,2) + u(11,Pap,IE,2) + u(12,Pap,IE,2) + u(13,Pap,IE,2) + u(14,Pap,IE,2)
     
      + u(15,Pap,IE,2) + u(16,Pap,IE,2) + u(17,Pap,IE,2) + u(18,Pap,IE,2) + u(19,Pap,IE,2) + u(20,Pap,IE,2) + u(21,Pap,IE,2) + u(22,Pap,IE,2) + u(23,Pap,IE,2) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/19/17 02:05:06 Page 45
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 437


     Barges_sell  =E=  ensure we only pick one value  n for barges for each product to each city

Barges_sell(Pap,IE,3)..  u(1,Pap,IE,3) + u(2,Pap,IE,3) + u(3,Pap,IE,3) + u(4,Pap,IE,3) + u(5,Pap,IE,3) + u(6,Pap,IE,3) + u(7,Pap,IE,3) + u(8,Pap,IE,3) + u(9,Pap,IE,3) + u(10,Pap,IE,3) + u(11,Pap,IE,3) + u(12,Pap,IE,3) + u(13,Pap,IE,3) + u(14,Pap,IE,3)
     
      + u(15,Pap,IE,3) + u(16,Pap,IE,3) + u(17,Pap,IE,3) + u(18,Pap,IE,3) + u(19,Pap,IE,3) + u(20,Pap,IE,3) + u(21,Pap,IE,3) + u(22,Pap,IE,3) + u(23,Pap,IE,3) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Pap,PA,1)..  u(1,Pap,PA,1) + u(2,Pap,PA,1) + u(3,Pap,PA,1) + u(4,Pap,PA,1) + u(5,Pap,PA,1) + u(6,Pap,PA,1) + u(7,Pap,PA,1) + u(8,Pap,PA,1) + u(9,Pap,PA,1) + u(10,Pap,PA,1) + u(11,Pap,PA,1) + u(12,Pap,PA,1) + u(13,Pap,PA,1) + u(14,Pap,PA,1)
     
      + u(15,Pap,PA,1) + u(16,Pap,PA,1) + u(17,Pap,PA,1) + u(18,Pap,PA,1) + u(19,Pap,PA,1) + u(20,Pap,PA,1) + u(21,Pap,PA,1) + u(22,Pap,PA,1) + u(23,Pap,PA,1) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Pap,PA,2)..  u(1,Pap,PA,2) + u(2,Pap,PA,2) + u(3,Pap,PA,2) + u(4,Pap,PA,2) + u(5,Pap,PA,2) + u(6,Pap,PA,2) + u(7,Pap,PA,2) + u(8,Pap,PA,2) + u(9,Pap,PA,2) + u(10,Pap,PA,2) + u(11,Pap,PA,2) + u(12,Pap,PA,2) + u(13,Pap,PA,2) + u(14,Pap,PA,2)
     
      + u(15,Pap,PA,2) + u(16,Pap,PA,2) + u(17,Pap,PA,2) + u(18,Pap,PA,2) + u(19,Pap,PA,2) + u(20,Pap,PA,2) + u(21,Pap,PA,2) + u(22,Pap,PA,2) + u(23,Pap,PA,2) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Pap,PA,3)..  u(1,Pap,PA,3) + u(2,Pap,PA,3) + u(3,Pap,PA,3) + u(4,Pap,PA,3) + u(5,Pap,PA,3) + u(6,Pap,PA,3) + u(7,Pap,PA,3) + u(8,Pap,PA,3) + u(9,Pap,PA,3) + u(10,Pap,PA,3) + u(11,Pap,PA,3) + u(12,Pap,PA,3) + u(13,Pap,PA,3) + u(14,Pap,PA,3)
     
      + u(15,Pap,PA,3) + u(16,Pap,PA,3) + u(17,Pap,PA,3) + u(18,Pap,PA,3) + u(19,Pap,PA,3) + u(20,Pap,PA,3) + u(21,Pap,PA,3) + u(22,Pap,PA,3) + u(23,Pap,PA,3) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Pap,KI,1)..  u(1,Pap,KI,1) + u(2,Pap,KI,1) + u(3,Pap,KI,1) + u(4,Pap,KI,1) + u(5,Pap,KI,1) + u(6,Pap,KI,1) + u(7,Pap,KI,1) + u(8,Pap,KI,1) + u(9,Pap,KI,1) + u(10,Pap,KI,1) + u(11,Pap,KI,1) + u(12,Pap,KI,1) + u(13,Pap,KI,1) + u(14,Pap,KI,1)
     
      + u(15,Pap,KI,1) + u(16,Pap,KI,1) + u(17,Pap,KI,1) + u(18,Pap,KI,1) + u(19,Pap,KI,1) + u(20,Pap,KI,1) + u(21,Pap,KI,1) + u(22,Pap,KI,1) + u(23,Pap,KI,1) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Pap,KI,2)..  u(1,Pap,KI,2) + u(2,Pap,KI,2) + u(3,Pap,KI,2) + u(4,Pap,KI,2) + u(5,Pap,KI,2) + u(6,Pap,KI,2) + u(7,Pap,KI,2) + u(8,Pap,KI,2) + u(9,Pap,KI,2) + u(10,Pap,KI,2) + u(11,Pap,KI,2) + u(12,Pap,KI,2) + u(13,Pap,KI,2) + u(14,Pap,KI,2)
     
      + u(15,Pap,KI,2) + u(16,Pap,KI,2) + u(17,Pap,KI,2) + u(18,Pap,KI,2) + u(19,Pap,KI,2) + u(20,Pap,KI,2) + u(21,Pap,KI,2) + u(22,Pap,KI,2) + u(23,Pap,KI,2) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Pap,KI,3)..  u(1,Pap,KI,3) + u(2,Pap,KI,3) + u(3,Pap,KI,3) + u(4,Pap,KI,3) + u(5,Pap,KI,3) + u(6,Pap,KI,3) + u(7,Pap,KI,3) + u(8,Pap,KI,3) + u(9,Pap,KI,3) + u(10,Pap,KI,3) + u(11,Pap,KI,3) + u(12,Pap,KI,3) + u(13,Pap,KI,3) + u(14,Pap,KI,3)
     
      + u(15,Pap,KI,3) + u(16,Pap,KI,3) + u(17,Pap,KI,3) + u(18,Pap,KI,3) + u(19,Pap,KI,3) + u(20,Pap,KI,3) + u(21,Pap,KI,3) + u(22,Pap,KI,3) + u(23,Pap,KI,3) =E= 1 ; (LHS = 0, INFES = 1 ****)
     

---- Capacity2  =G=  Make sure that the capacity does not go down

Capacity2(SAW,1)..  - y(Mas,1) - y(Kus,1) - y(Kos,1) + Cap(SAW,1) =G= 0 ; (LHS = 0)
     
Capacity2(SAW,2)..  - y(Mas,2) - y(Kus,2) - y(Kos,2) + Cap(SAW,2) =G= 0 ; (LHS = 0)
     
Capacity2(SAW,3)..  - y(Mas,3) - y(Kus,3) - y(Kos,3) + Cap(SAW,3) =G= 0 ; (LHS = 0)
     
Capacity2(PLY,1)..  - y(Kuv,1) - y(Kov,1) + Cap(PLY,1) =G= 0 ; (LHS = 0)
     
Capacity2(PLY,2)..  - y(Kuv,2) - y(Kov,2) + Cap(PLY,2) =G= 0 ; (LHS = 0)
     
Capacity2(PLY,3)..  - y(Kuv,3) - y(Kov,3) + Cap(PLY,3) =G= 0 ; (LHS = 0)
     
Capacity2(SPULP,1)..  - y(Hsel,1) + Cap(SPULP,1) =G= 0 ; (LHS = 0)
     
Capacity2(SPULP,2)..  - y(Hsel,2) + Cap(SPULP,2) =G= 0 ; (LHS = 0)
     
Capacity2(SPULP,3)..  - y(Hsel,3) + Cap(SPULP,3) =G= 0 ; (LHS = 0)
     
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/19/17 02:05:06 Page 46
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 437


     Capacity2  =G=  Make sure that the capacity does not go down

Capacity2(HPULP,1)..  - y(Lsel,1) + Cap(HPULP,1) =G= 0 ; (LHS = 0)
     
Capacity2(HPULP,2)..  - y(Lsel,2) + Cap(HPULP,2) =G= 0 ; (LHS = 0)
     
Capacity2(HPULP,3)..  - y(Lsel,3) + Cap(HPULP,3) =G= 0 ; (LHS = 0)
     
Capacity2(PAPM,1)..  - y(Pap,1) + Cap(PAPM,1) =G= 0 ; (LHS = 0)
     
Capacity2(PAPM,2)..  - y(Pap,2) + Cap(PAPM,2) =G= 0 ; (LHS = 0)
     
Capacity2(PAPM,3)..  - y(Pap,3) + Cap(PAPM,3) =G= 0 ; (LHS = 0)
     

---- MaxCapacity  =L=  Make sure we dont go over the maximum capacity

MaxCapacity(SAW,1)..  Cap(SAW,1) =L= 150000 ; (LHS = 0)
     
MaxCapacity(SAW,2)..  Cap(SAW,2) =L= 150000 ; (LHS = 0)
     
MaxCapacity(SAW,3)..  Cap(SAW,3) =L= 150000 ; (LHS = 0)
     
MaxCapacity(PLY,1)..  Cap(PLY,1) =L= 135000 ; (LHS = 0)
     
MaxCapacity(PLY,2)..  Cap(PLY,2) =L= 135000 ; (LHS = 0)
     
MaxCapacity(PLY,3)..  Cap(PLY,3) =L= 135000 ; (LHS = 0)
     
MaxCapacity(SPULP,1)..  Cap(SPULP,1) =L= 200000 ; (LHS = 0)
     
MaxCapacity(SPULP,2)..  Cap(SPULP,2) =L= 200000 ; (LHS = 0)
     
MaxCapacity(SPULP,3)..  Cap(SPULP,3) =L= 200000 ; (LHS = 0)
     
MaxCapacity(HPULP,1)..  Cap(HPULP,1) =L= 300000 ; (LHS = 0)
     
MaxCapacity(HPULP,2)..  Cap(HPULP,2) =L= 300000 ; (LHS = 0)
     
MaxCapacity(HPULP,3)..  Cap(HPULP,3) =L= 300000 ; (LHS = 0)
     
MaxCapacity(PAPM,1)..  Cap(PAPM,1) =L= 160000 ; (LHS = 0)
     
MaxCapacity(PAPM,2)..  Cap(PAPM,2) =L= 160000 ; (LHS = 0)
     
MaxCapacity(PAPM,3)..  Cap(PAPM,3) =L= 160000 ; (LHS = 0)
     

---- CapStart  =E=  Make sure the starting capacity is right

GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/19/17 02:05:06 Page 47
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 437


     CapStart  =E=  Make sure the starting capacity is right

CapStart(SAW,1)..  Cap(SAW,1) =E= 100000 ; (LHS = 0, INFES = 100000 ****)
     
CapStart(SAW,2)..  Cap(SAW,1) =E= 100000 ; (LHS = 0, INFES = 100000 ****)
     
CapStart(SAW,3)..  Cap(SAW,1) =E= 100000 ; (LHS = 0, INFES = 100000 ****)
     
CapStart(PLY,1)..  Cap(PLY,1) =E= 90000 ; (LHS = 0, INFES = 90000 ****)
     
CapStart(PLY,2)..  Cap(PLY,1) =E= 90000 ; (LHS = 0, INFES = 90000 ****)
     
CapStart(PLY,3)..  Cap(PLY,1) =E= 90000 ; (LHS = 0, INFES = 90000 ****)
     
CapStart(SPULP,1)..  Cap(SPULP,1) =E= 100000 ; (LHS = 0, INFES = 100000 ****)
     
CapStart(SPULP,2)..  Cap(SPULP,1) =E= 100000 ; (LHS = 0, INFES = 100000 ****)
     
CapStart(SPULP,3)..  Cap(SPULP,1) =E= 100000 ; (LHS = 0, INFES = 100000 ****)
     
CapStart(HPULP,1)..  Cap(HPULP,1) =E= 150000 ; (LHS = 0, INFES = 150000 ****)
     
CapStart(HPULP,2)..  Cap(HPULP,1) =E= 150000 ; (LHS = 0, INFES = 150000 ****)
     
CapStart(HPULP,3)..  Cap(HPULP,1) =E= 150000 ; (LHS = 0, INFES = 150000 ****)
     
CapStart(PAPM,1)..  Cap(PAPM,1) =E= 80000 ; (LHS = 0, INFES = 80000 ****)
     
CapStart(PAPM,2)..  Cap(PAPM,1) =E= 80000 ; (LHS = 0, INFES = 80000 ****)
     
CapStart(PAPM,3)..  Cap(PAPM,1) =E= 80000 ; (LHS = 0, INFES = 80000 ****)
     

---- PAP_HSEL  =L=  Proportion needed of HSEL for PAP

PAP_HSEL(1)..  - y(Hsel,1) + 0.2*y(Pap,1) =L= 0 ; (LHS = 0)
     
PAP_HSEL(2)..  - y(Hsel,2) + 0.2*y(Pap,2) =L= 0 ; (LHS = 0)
     
PAP_HSEL(3)..  - y(Hsel,3) + 0.2*y(Pap,3) =L= 0 ; (LHS = 0)
     

---- PAP_LSEL  =L=  Proportion needed of LSEL for PAP

PAP_LSEL(1)..  - y(Lsel,1) + 0.2*y(Pap,1) =L= 0 ; (LHS = 0)
     
PAP_LSEL(2)..  - y(Lsel,2) + 0.2*y(Pap,2) =L= 0 ; (LHS = 0)
     
PAP_LSEL(3)..  - y(Lsel,3) + 0.2*y(Pap,3) =L= 0 ; (LHS = 0)
     
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/19/17 02:05:06 Page 48
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 437


---- PULP_Bal  =L=  Cant produce paper without pulp

PULP_Bal(Hsel,1)..  - y(Hsel,1) + 0.2*y(Pap,1) + 10000*u(2,Hsel,EU,1) + 10000*u(2,Hsel,IE,1) + 10000*u(2,Hsel,PA,1) + 10000*u(2,Hsel,KI,1) + 20000*u(3,Hsel,EU,1) + 20000*u(3,Hsel,IE,1) + 20000*u(3,Hsel,PA,1) + 20000*u(3,Hsel,KI,1) + 30000*u(4,Hsel,EU,1)
     
      + 30000*u(4,Hsel,IE,1) + 30000*u(4,Hsel,PA,1) + 30000*u(4,Hsel,KI,1) + 40000*u(5,Hsel,EU,1) + 40000*u(5,Hsel,IE,1) + 40000*u(5,Hsel,PA,1) + 40000*u(5,Hsel,KI,1) + 50000*u(6,Hsel,EU,1) + 50000*u(6,Hsel,IE,1) + 50000*u(6,Hsel,PA,1)
     
      + 50000*u(6,Hsel,KI,1) + 60000*u(7,Hsel,EU,1) + 60000*u(7,Hsel,IE,1) + 60000*u(7,Hsel,PA,1) + 60000*u(7,Hsel,KI,1) + 70000*u(8,Hsel,EU,1) + 70000*u(8,Hsel,IE,1) + 70000*u(8,Hsel,PA,1) + 70000*u(8,Hsel,KI,1) + 80000*u(9,Hsel,EU,1)
     
      + 80000*u(9,Hsel,IE,1) + 80000*u(9,Hsel,PA,1) + 80000*u(9,Hsel,KI,1) + 90000*u(10,Hsel,EU,1) + 90000*u(10,Hsel,IE,1) + 90000*u(10,Hsel,PA,1) + 90000*u(10,Hsel,KI,1) + 100000*u(11,Hsel,EU,1) + 100000*u(11,Hsel,IE,1) + 100000*u(11,Hsel,PA,1)
     
      + 100000*u(11,Hsel,KI,1) + 110000*u(12,Hsel,EU,1) + 110000*u(12,Hsel,IE,1) + 110000*u(12,Hsel,PA,1) + 110000*u(12,Hsel,KI,1) + 120000*u(13,Hsel,EU,1) + 120000*u(13,Hsel,IE,1) + 120000*u(13,Hsel,PA,1) + 120000*u(13,Hsel,KI,1) + 130000*u(14,Hsel,EU,1)
     
      + 130000*u(14,Hsel,IE,1) + 130000*u(14,Hsel,PA,1) + 130000*u(14,Hsel,KI,1) + 140000*u(15,Hsel,EU,1) + 140000*u(15,Hsel,IE,1) + 140000*u(15,Hsel,PA,1) + 140000*u(15,Hsel,KI,1) + 150000*u(16,Hsel,EU,1) + 150000*u(16,Hsel,IE,1) + 150000*u(16,Hsel,PA,1)
     
      + 150000*u(16,Hsel,KI,1) + 160000*u(17,Hsel,EU,1) + 160000*u(17,Hsel,IE,1) + 160000*u(17,Hsel,PA,1) + 160000*u(17,Hsel,KI,1) + 170000*u(18,Hsel,EU,1) + 170000*u(18,Hsel,IE,1) + 170000*u(18,Hsel,PA,1) + 170000*u(18,Hsel,KI,1) + 180000*u(19,Hsel,EU,1)
     
      + 180000*u(19,Hsel,IE,1) + 180000*u(19,Hsel,PA,1) + 180000*u(19,Hsel,KI,1) + 190000*u(20,Hsel,EU,1) + 190000*u(20,Hsel,IE,1) + 190000*u(20,Hsel,PA,1) + 190000*u(20,Hsel,KI,1) + 200000*u(21,Hsel,EU,1) + 200000*u(21,Hsel,IE,1) + 200000*u(21,Hsel,PA,1)
     
      + 200000*u(21,Hsel,KI,1) + 210000*u(22,Hsel,EU,1) + 210000*u(22,Hsel,IE,1) + 210000*u(22,Hsel,PA,1) + 210000*u(22,Hsel,KI,1) + 220000*u(23,Hsel,EU,1) + 220000*u(23,Hsel,IE,1) + 220000*u(23,Hsel,PA,1) + 220000*u(23,Hsel,KI,1) =L= 0 ; (LHS = 0)
     
PULP_Bal(Hsel,2)..  - y(Hsel,2) + 0.2*y(Pap,2) + 10000*u(2,Hsel,EU,2) + 10000*u(2,Hsel,IE,2) + 10000*u(2,Hsel,PA,2) + 10000*u(2,Hsel,KI,2) + 20000*u(3,Hsel,EU,2) + 20000*u(3,Hsel,IE,2) + 20000*u(3,Hsel,PA,2) + 20000*u(3,Hsel,KI,2) + 30000*u(4,Hsel,EU,2)
     
      + 30000*u(4,Hsel,IE,2) + 30000*u(4,Hsel,PA,2) + 30000*u(4,Hsel,KI,2) + 40000*u(5,Hsel,EU,2) + 40000*u(5,Hsel,IE,2) + 40000*u(5,Hsel,PA,2) + 40000*u(5,Hsel,KI,2) + 50000*u(6,Hsel,EU,2) + 50000*u(6,Hsel,IE,2) + 50000*u(6,Hsel,PA,2)
     
      + 50000*u(6,Hsel,KI,2) + 60000*u(7,Hsel,EU,2) + 60000*u(7,Hsel,IE,2) + 60000*u(7,Hsel,PA,2) + 60000*u(7,Hsel,KI,2) + 70000*u(8,Hsel,EU,2) + 70000*u(8,Hsel,IE,2) + 70000*u(8,Hsel,PA,2) + 70000*u(8,Hsel,KI,2) + 80000*u(9,Hsel,EU,2)
     
      + 80000*u(9,Hsel,IE,2) + 80000*u(9,Hsel,PA,2) + 80000*u(9,Hsel,KI,2) + 90000*u(10,Hsel,EU,2) + 90000*u(10,Hsel,IE,2) + 90000*u(10,Hsel,PA,2) + 90000*u(10,Hsel,KI,2) + 100000*u(11,Hsel,EU,2) + 100000*u(11,Hsel,IE,2) + 100000*u(11,Hsel,PA,2)
     
      + 100000*u(11,Hsel,KI,2) + 110000*u(12,Hsel,EU,2) + 110000*u(12,Hsel,IE,2) + 110000*u(12,Hsel,PA,2) + 110000*u(12,Hsel,KI,2) + 120000*u(13,Hsel,EU,2) + 120000*u(13,Hsel,IE,2) + 120000*u(13,Hsel,PA,2) + 120000*u(13,Hsel,KI,2) + 130000*u(14,Hsel,EU,2)
     
      + 130000*u(14,Hsel,IE,2) + 130000*u(14,Hsel,PA,2) + 130000*u(14,Hsel,KI,2) + 140000*u(15,Hsel,EU,2) + 140000*u(15,Hsel,IE,2) + 140000*u(15,Hsel,PA,2) + 140000*u(15,Hsel,KI,2) + 150000*u(16,Hsel,EU,2) + 150000*u(16,Hsel,IE,2) + 150000*u(16,Hsel,PA,2)
     
      + 150000*u(16,Hsel,KI,2) + 160000*u(17,Hsel,EU,2) + 160000*u(17,Hsel,IE,2) + 160000*u(17,Hsel,PA,2) + 160000*u(17,Hsel,KI,2) + 170000*u(18,Hsel,EU,2) + 170000*u(18,Hsel,IE,2) + 170000*u(18,Hsel,PA,2) + 170000*u(18,Hsel,KI,2) + 180000*u(19,Hsel,EU,2)
     
      + 180000*u(19,Hsel,IE,2) + 180000*u(19,Hsel,PA,2) + 180000*u(19,Hsel,KI,2) + 190000*u(20,Hsel,EU,2) + 190000*u(20,Hsel,IE,2) + 190000*u(20,Hsel,PA,2) + 190000*u(20,Hsel,KI,2) + 200000*u(21,Hsel,EU,2) + 200000*u(21,Hsel,IE,2) + 200000*u(21,Hsel,PA,2)
     
      + 200000*u(21,Hsel,KI,2) + 210000*u(22,Hsel,EU,2) + 210000*u(22,Hsel,IE,2) + 210000*u(22,Hsel,PA,2) + 210000*u(22,Hsel,KI,2) + 220000*u(23,Hsel,EU,2) + 220000*u(23,Hsel,IE,2) + 220000*u(23,Hsel,PA,2) + 220000*u(23,Hsel,KI,2) =L= 0 ; (LHS = 0)
     
PULP_Bal(Hsel,3)..  - y(Hsel,3) + 0.2*y(Pap,3) + 10000*u(2,Hsel,EU,3) + 10000*u(2,Hsel,IE,3) + 10000*u(2,Hsel,PA,3) + 10000*u(2,Hsel,KI,3) + 20000*u(3,Hsel,EU,3) + 20000*u(3,Hsel,IE,3) + 20000*u(3,Hsel,PA,3) + 20000*u(3,Hsel,KI,3) + 30000*u(4,Hsel,EU,3)
     
      + 30000*u(4,Hsel,IE,3) + 30000*u(4,Hsel,PA,3) + 30000*u(4,Hsel,KI,3) + 40000*u(5,Hsel,EU,3) + 40000*u(5,Hsel,IE,3) + 40000*u(5,Hsel,PA,3) + 40000*u(5,Hsel,KI,3) + 50000*u(6,Hsel,EU,3) + 50000*u(6,Hsel,IE,3) + 50000*u(6,Hsel,PA,3)
     
      + 50000*u(6,Hsel,KI,3) + 60000*u(7,Hsel,EU,3) + 60000*u(7,Hsel,IE,3) + 60000*u(7,Hsel,PA,3) + 60000*u(7,Hsel,KI,3) + 70000*u(8,Hsel,EU,3) + 70000*u(8,Hsel,IE,3) + 70000*u(8,Hsel,PA,3) + 70000*u(8,Hsel,KI,3) + 80000*u(9,Hsel,EU,3)
     
      + 80000*u(9,Hsel,IE,3) + 80000*u(9,Hsel,PA,3) + 80000*u(9,Hsel,KI,3) + 90000*u(10,Hsel,EU,3) + 90000*u(10,Hsel,IE,3) + 90000*u(10,Hsel,PA,3) + 90000*u(10,Hsel,KI,3) + 100000*u(11,Hsel,EU,3) + 100000*u(11,Hsel,IE,3) + 100000*u(11,Hsel,PA,3)
     
      + 100000*u(11,Hsel,KI,3) + 110000*u(12,Hsel,EU,3) + 110000*u(12,Hsel,IE,3) + 110000*u(12,Hsel,PA,3) + 110000*u(12,Hsel,KI,3) + 120000*u(13,Hsel,EU,3) + 120000*u(13,Hsel,IE,3) + 120000*u(13,Hsel,PA,3) + 120000*u(13,Hsel,KI,3) + 130000*u(14,Hsel,EU,3)
     
      + 130000*u(14,Hsel,IE,3) + 130000*u(14,Hsel,PA,3) + 130000*u(14,Hsel,KI,3) + 140000*u(15,Hsel,EU,3) + 140000*u(15,Hsel,IE,3) + 140000*u(15,Hsel,PA,3) + 140000*u(15,Hsel,KI,3) + 150000*u(16,Hsel,EU,3) + 150000*u(16,Hsel,IE,3) + 150000*u(16,Hsel,PA,3)
     
      + 150000*u(16,Hsel,KI,3) + 160000*u(17,Hsel,EU,3) + 160000*u(17,Hsel,IE,3) + 160000*u(17,Hsel,PA,3) + 160000*u(17,Hsel,KI,3) + 170000*u(18,Hsel,EU,3) + 170000*u(18,Hsel,IE,3) + 170000*u(18,Hsel,PA,3) + 170000*u(18,Hsel,KI,3) + 180000*u(19,Hsel,EU,3)
     
      + 180000*u(19,Hsel,IE,3) + 180000*u(19,Hsel,PA,3) + 180000*u(19,Hsel,KI,3) + 190000*u(20,Hsel,EU,3) + 190000*u(20,Hsel,IE,3) + 190000*u(20,Hsel,PA,3) + 190000*u(20,Hsel,KI,3) + 200000*u(21,Hsel,EU,3) + 200000*u(21,Hsel,IE,3) + 200000*u(21,Hsel,PA,3)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/19/17 02:05:06 Page 49
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 437


     PULP_Bal  =L=  Cant produce paper without pulp     
     
      + 200000*u(21,Hsel,KI,3) + 210000*u(22,Hsel,EU,3) + 210000*u(22,Hsel,IE,3) + 210000*u(22,Hsel,PA,3) + 210000*u(22,Hsel,KI,3) + 220000*u(23,Hsel,EU,3) + 220000*u(23,Hsel,IE,3) + 220000*u(23,Hsel,PA,3) + 220000*u(23,Hsel,KI,3) =L= 0 ; (LHS = 0)
     
PULP_Bal(Lsel,1)..  - y(Lsel,1) + 0.2*y(Pap,1) + 10000*u(2,Lsel,EU,1) + 10000*u(2,Lsel,IE,1) + 10000*u(2,Lsel,PA,1) + 10000*u(2,Lsel,KI,1) + 20000*u(3,Lsel,EU,1) + 20000*u(3,Lsel,IE,1) + 20000*u(3,Lsel,PA,1) + 20000*u(3,Lsel,KI,1) + 30000*u(4,Lsel,EU,1)
     
      + 30000*u(4,Lsel,IE,1) + 30000*u(4,Lsel,PA,1) + 30000*u(4,Lsel,KI,1) + 40000*u(5,Lsel,EU,1) + 40000*u(5,Lsel,IE,1) + 40000*u(5,Lsel,PA,1) + 40000*u(5,Lsel,KI,1) + 50000*u(6,Lsel,EU,1) + 50000*u(6,Lsel,IE,1) + 50000*u(6,Lsel,PA,1)
     
      + 50000*u(6,Lsel,KI,1) + 60000*u(7,Lsel,EU,1) + 60000*u(7,Lsel,IE,1) + 60000*u(7,Lsel,PA,1) + 60000*u(7,Lsel,KI,1) + 70000*u(8,Lsel,EU,1) + 70000*u(8,Lsel,IE,1) + 70000*u(8,Lsel,PA,1) + 70000*u(8,Lsel,KI,1) + 80000*u(9,Lsel,EU,1)
     
      + 80000*u(9,Lsel,IE,1) + 80000*u(9,Lsel,PA,1) + 80000*u(9,Lsel,KI,1) + 90000*u(10,Lsel,EU,1) + 90000*u(10,Lsel,IE,1) + 90000*u(10,Lsel,PA,1) + 90000*u(10,Lsel,KI,1) + 100000*u(11,Lsel,EU,1) + 100000*u(11,Lsel,IE,1) + 100000*u(11,Lsel,PA,1)
     
      + 100000*u(11,Lsel,KI,1) + 110000*u(12,Lsel,EU,1) + 110000*u(12,Lsel,IE,1) + 110000*u(12,Lsel,PA,1) + 110000*u(12,Lsel,KI,1) + 120000*u(13,Lsel,EU,1) + 120000*u(13,Lsel,IE,1) + 120000*u(13,Lsel,PA,1) + 120000*u(13,Lsel,KI,1) + 130000*u(14,Lsel,EU,1)
     
      + 130000*u(14,Lsel,IE,1) + 130000*u(14,Lsel,PA,1) + 130000*u(14,Lsel,KI,1) + 140000*u(15,Lsel,EU,1) + 140000*u(15,Lsel,IE,1) + 140000*u(15,Lsel,PA,1) + 140000*u(15,Lsel,KI,1) + 150000*u(16,Lsel,EU,1) + 150000*u(16,Lsel,IE,1) + 150000*u(16,Lsel,PA,1)
     
      + 150000*u(16,Lsel,KI,1) + 160000*u(17,Lsel,EU,1) + 160000*u(17,Lsel,IE,1) + 160000*u(17,Lsel,PA,1) + 160000*u(17,Lsel,KI,1) + 170000*u(18,Lsel,EU,1) + 170000*u(18,Lsel,IE,1) + 170000*u(18,Lsel,PA,1) + 170000*u(18,Lsel,KI,1) + 180000*u(19,Lsel,EU,1)
     
      + 180000*u(19,Lsel,IE,1) + 180000*u(19,Lsel,PA,1) + 180000*u(19,Lsel,KI,1) + 190000*u(20,Lsel,EU,1) + 190000*u(20,Lsel,IE,1) + 190000*u(20,Lsel,PA,1) + 190000*u(20,Lsel,KI,1) + 200000*u(21,Lsel,EU,1) + 200000*u(21,Lsel,IE,1) + 200000*u(21,Lsel,PA,1)
     
      + 200000*u(21,Lsel,KI,1) + 210000*u(22,Lsel,EU,1) + 210000*u(22,Lsel,IE,1) + 210000*u(22,Lsel,PA,1) + 210000*u(22,Lsel,KI,1) + 220000*u(23,Lsel,EU,1) + 220000*u(23,Lsel,IE,1) + 220000*u(23,Lsel,PA,1) + 220000*u(23,Lsel,KI,1) =L= 0 ; (LHS = 0)
     
PULP_Bal(Lsel,2)..  - y(Lsel,2) + 0.2*y(Pap,2) + 10000*u(2,Lsel,EU,2) + 10000*u(2,Lsel,IE,2) + 10000*u(2,Lsel,PA,2) + 10000*u(2,Lsel,KI,2) + 20000*u(3,Lsel,EU,2) + 20000*u(3,Lsel,IE,2) + 20000*u(3,Lsel,PA,2) + 20000*u(3,Lsel,KI,2) + 30000*u(4,Lsel,EU,2)
     
      + 30000*u(4,Lsel,IE,2) + 30000*u(4,Lsel,PA,2) + 30000*u(4,Lsel,KI,2) + 40000*u(5,Lsel,EU,2) + 40000*u(5,Lsel,IE,2) + 40000*u(5,Lsel,PA,2) + 40000*u(5,Lsel,KI,2) + 50000*u(6,Lsel,EU,2) + 50000*u(6,Lsel,IE,2) + 50000*u(6,Lsel,PA,2)
     
      + 50000*u(6,Lsel,KI,2) + 60000*u(7,Lsel,EU,2) + 60000*u(7,Lsel,IE,2) + 60000*u(7,Lsel,PA,2) + 60000*u(7,Lsel,KI,2) + 70000*u(8,Lsel,EU,2) + 70000*u(8,Lsel,IE,2) + 70000*u(8,Lsel,PA,2) + 70000*u(8,Lsel,KI,2) + 80000*u(9,Lsel,EU,2)
     
      + 80000*u(9,Lsel,IE,2) + 80000*u(9,Lsel,PA,2) + 80000*u(9,Lsel,KI,2) + 90000*u(10,Lsel,EU,2) + 90000*u(10,Lsel,IE,2) + 90000*u(10,Lsel,PA,2) + 90000*u(10,Lsel,KI,2) + 100000*u(11,Lsel,EU,2) + 100000*u(11,Lsel,IE,2) + 100000*u(11,Lsel,PA,2)
     
      + 100000*u(11,Lsel,KI,2) + 110000*u(12,Lsel,EU,2) + 110000*u(12,Lsel,IE,2) + 110000*u(12,Lsel,PA,2) + 110000*u(12,Lsel,KI,2) + 120000*u(13,Lsel,EU,2) + 120000*u(13,Lsel,IE,2) + 120000*u(13,Lsel,PA,2) + 120000*u(13,Lsel,KI,2) + 130000*u(14,Lsel,EU,2)
     
      + 130000*u(14,Lsel,IE,2) + 130000*u(14,Lsel,PA,2) + 130000*u(14,Lsel,KI,2) + 140000*u(15,Lsel,EU,2) + 140000*u(15,Lsel,IE,2) + 140000*u(15,Lsel,PA,2) + 140000*u(15,Lsel,KI,2) + 150000*u(16,Lsel,EU,2) + 150000*u(16,Lsel,IE,2) + 150000*u(16,Lsel,PA,2)
     
      + 150000*u(16,Lsel,KI,2) + 160000*u(17,Lsel,EU,2) + 160000*u(17,Lsel,IE,2) + 160000*u(17,Lsel,PA,2) + 160000*u(17,Lsel,KI,2) + 170000*u(18,Lsel,EU,2) + 170000*u(18,Lsel,IE,2) + 170000*u(18,Lsel,PA,2) + 170000*u(18,Lsel,KI,2) + 180000*u(19,Lsel,EU,2)
     
      + 180000*u(19,Lsel,IE,2) + 180000*u(19,Lsel,PA,2) + 180000*u(19,Lsel,KI,2) + 190000*u(20,Lsel,EU,2) + 190000*u(20,Lsel,IE,2) + 190000*u(20,Lsel,PA,2) + 190000*u(20,Lsel,KI,2) + 200000*u(21,Lsel,EU,2) + 200000*u(21,Lsel,IE,2) + 200000*u(21,Lsel,PA,2)
     
      + 200000*u(21,Lsel,KI,2) + 210000*u(22,Lsel,EU,2) + 210000*u(22,Lsel,IE,2) + 210000*u(22,Lsel,PA,2) + 210000*u(22,Lsel,KI,2) + 220000*u(23,Lsel,EU,2) + 220000*u(23,Lsel,IE,2) + 220000*u(23,Lsel,PA,2) + 220000*u(23,Lsel,KI,2) =L= 0 ; (LHS = 0)
     
PULP_Bal(Lsel,3)..  - y(Lsel,3) + 0.2*y(Pap,3) + 10000*u(2,Lsel,EU,3) + 10000*u(2,Lsel,IE,3) + 10000*u(2,Lsel,PA,3) + 10000*u(2,Lsel,KI,3) + 20000*u(3,Lsel,EU,3) + 20000*u(3,Lsel,IE,3) + 20000*u(3,Lsel,PA,3) + 20000*u(3,Lsel,KI,3) + 30000*u(4,Lsel,EU,3)
     
      + 30000*u(4,Lsel,IE,3) + 30000*u(4,Lsel,PA,3) + 30000*u(4,Lsel,KI,3) + 40000*u(5,Lsel,EU,3) + 40000*u(5,Lsel,IE,3) + 40000*u(5,Lsel,PA,3) + 40000*u(5,Lsel,KI,3) + 50000*u(6,Lsel,EU,3) + 50000*u(6,Lsel,IE,3) + 50000*u(6,Lsel,PA,3)
     
      + 50000*u(6,Lsel,KI,3) + 60000*u(7,Lsel,EU,3) + 60000*u(7,Lsel,IE,3) + 60000*u(7,Lsel,PA,3) + 60000*u(7,Lsel,KI,3) + 70000*u(8,Lsel,EU,3) + 70000*u(8,Lsel,IE,3) + 70000*u(8,Lsel,PA,3) + 70000*u(8,Lsel,KI,3) + 80000*u(9,Lsel,EU,3)
     
      + 80000*u(9,Lsel,IE,3) + 80000*u(9,Lsel,PA,3) + 80000*u(9,Lsel,KI,3) + 90000*u(10,Lsel,EU,3) + 90000*u(10,Lsel,IE,3) + 90000*u(10,Lsel,PA,3) + 90000*u(10,Lsel,KI,3) + 100000*u(11,Lsel,EU,3) + 100000*u(11,Lsel,IE,3) + 100000*u(11,Lsel,PA,3)
     
      + 100000*u(11,Lsel,KI,3) + 110000*u(12,Lsel,EU,3) + 110000*u(12,Lsel,IE,3) + 110000*u(12,Lsel,PA,3) + 110000*u(12,Lsel,KI,3) + 120000*u(13,Lsel,EU,3) + 120000*u(13,Lsel,IE,3) + 120000*u(13,Lsel,PA,3) + 120000*u(13,Lsel,KI,3) + 130000*u(14,Lsel,EU,3)
     
      + 130000*u(14,Lsel,IE,3) + 130000*u(14,Lsel,PA,3) + 130000*u(14,Lsel,KI,3) + 140000*u(15,Lsel,EU,3) + 140000*u(15,Lsel,IE,3) + 140000*u(15,Lsel,PA,3) + 140000*u(15,Lsel,KI,3) + 150000*u(16,Lsel,EU,3) + 150000*u(16,Lsel,IE,3) + 150000*u(16,Lsel,PA,3)
     
      + 150000*u(16,Lsel,KI,3) + 160000*u(17,Lsel,EU,3) + 160000*u(17,Lsel,IE,3) + 160000*u(17,Lsel,PA,3) + 160000*u(17,Lsel,KI,3) + 170000*u(18,Lsel,EU,3) + 170000*u(18,Lsel,IE,3) + 170000*u(18,Lsel,PA,3) + 170000*u(18,Lsel,KI,3) + 180000*u(19,Lsel,EU,3)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/19/17 02:05:06 Page 50
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 437


     PULP_Bal  =L=  Cant produce paper without pulp     
     
      + 180000*u(19,Lsel,IE,3) + 180000*u(19,Lsel,PA,3) + 180000*u(19,Lsel,KI,3) + 190000*u(20,Lsel,EU,3) + 190000*u(20,Lsel,IE,3) + 190000*u(20,Lsel,PA,3) + 190000*u(20,Lsel,KI,3) + 200000*u(21,Lsel,EU,3) + 200000*u(21,Lsel,IE,3) + 200000*u(21,Lsel,PA,3)
     
      + 200000*u(21,Lsel,KI,3) + 210000*u(22,Lsel,EU,3) + 210000*u(22,Lsel,IE,3) + 210000*u(22,Lsel,PA,3) + 210000*u(22,Lsel,KI,3) + 220000*u(23,Lsel,EU,3) + 220000*u(23,Lsel,IE,3) + 220000*u(23,Lsel,PA,3) + 220000*u(23,Lsel,KI,3) =L= 0 ; (LHS = 0)
     

---- PROFIT  =E=  Profit is what we gain minus what we spend

PROFIT(1)..  0.542*y(Mas,1) + 0.492*y(Kus,1) + 0.442*y(Kos,1) + 2.492*y(Kuv,1) + 2.592*y(Kov,1) + 0.82*y(Hsel,1) + 0.8*y(Lsel,1) + 1.7*y(Pap,1) + 0.19*s(Mat,1) + 0.15*s(Kut,1) + 0.12*s(Kot,1) + 0.18*s(Mak,1) + 0.15*s(Kuk,1) + 0.15*s(Kok,1)
     
      + 2000*r(2,Mat,1) + 1550*r(2,Kut,1) + 1500*r(2,Kot,1) + 1820*r(2,Mak,1) + 1530*r(2,Kuk,1) + 1520*r(2,Kok,1) + 4200*r(3,Mat,1) + 3200*r(3,Kut,1) + 3600*r(3,Kot,1) + 3680*r(3,Mak,1) + 3120*r(3,Kuk,1) + 3080*r(3,Kok,1) + 6600*r(4,Mat,1)
     
      + 4950*r(4,Kut,1) + 6300*r(4,Kot,1) + 5580*r(4,Mak,1) + 4770*r(4,Kuk,1) + 4680*r(4,Kok,1) + 9200*r(5,Mat,1) + 6800*r(5,Kut,1) + 9600*r(5,Kot,1) + 7520*r(5,Mak,1) + 6480*r(5,Kuk,1) + 6320*r(5,Kok,1) + 12000*r(6,Mat,1) + 8750*r(6,Kut,1)
     
      + 13500*r(6,Kot,1) + 9500*r(6,Mak,1) + 8250*r(6,Kuk,1) + 8000*r(6,Kok,1) + 15000*r(7,Mat,1) + 10800*r(7,Kut,1) + 18000*r(7,Kot,1) + 11520*r(7,Mak,1) + 10080*r(7,Kuk,1) + 9720*r(7,Kok,1) + 18200*r(8,Mat,1) + 12950*r(8,Kut,1) + 23100*r(8,Kot,1)
     
      + 13580*r(8,Mak,1) + 11970*r(8,Kuk,1) + 11480*r(8,Kok,1) + 21600*r(9,Mat,1) + 15200*r(9,Kut,1) + 28800*r(9,Kot,1) + 15680*r(9,Mak,1) + 13920*r(9,Kuk,1) + 13280*r(9,Kok,1) + 25200*r(10,Mat,1) + 17550*r(10,Kut,1) + 35100*r(10,Kot,1)
     
      + 17820*r(10,Mak,1) + 15930*r(10,Kuk,1) + 15120*r(10,Kok,1) + 29000*r(11,Mat,1) + 20000*r(11,Kut,1) + 42000*r(11,Kot,1) + 20000*r(11,Mak,1) + 18000*r(11,Kuk,1) + 17000*r(11,Kok,1) + 33000*r(12,Mat,1) + 22550*r(12,Kut,1) + 49500*r(12,Kot,1)
     
      + 22220*r(12,Mak,1) + 20130*r(12,Kuk,1) + 18920*r(12,Kok,1) + 37200*r(13,Mat,1) + 25200*r(13,Kut,1) + 57600*r(13,Kot,1) + 24480*r(13,Mak,1) + 22320*r(13,Kuk,1) + 20880*r(13,Kok,1) + 41600*r(14,Mat,1) + 27950*r(14,Kut,1) + 66300*r(14,Kot,1)
     
      + 26780*r(14,Mak,1) + 24570*r(14,Kuk,1) + 22880*r(14,Kok,1) + 46200*r(15,Mat,1) + 30800*r(15,Kut,1) + 75600*r(15,Kot,1) + 29120*r(15,Mak,1) + 26880*r(15,Kuk,1) + 24920*r(15,Kok,1) + 51000*r(16,Mat,1) + 33750*r(16,Kut,1) + 85500*r(16,Kot,1)
     
      + 31500*r(16,Mak,1) + 29250*r(16,Kuk,1) + 27000*r(16,Kok,1) + 56000*r(17,Mat,1) + 36800*r(17,Kut,1) + 96000*r(17,Kot,1) + 33920*r(17,Mak,1) + 31680*r(17,Kuk,1) + 29120*r(17,Kok,1) + 61200*r(18,Mat,1) + 39950*r(18,Kut,1) + 107100*r(18,Kot,1)
     
      + 36380*r(18,Mak,1) + 34170*r(18,Kuk,1) + 31280*r(18,Kok,1) + 66600*r(19,Mat,1) + 43200*r(19,Kut,1) + 118800*r(19,Kot,1) + 38880*r(19,Mak,1) + 36720*r(19,Kuk,1) + 33480*r(19,Kok,1) + 72200*r(20,Mat,1) + 46550*r(20,Kut,1) + 131100*r(20,Kot,1)
     
      + 41420*r(20,Mak,1) + 39330*r(20,Kuk,1) + 35720*r(20,Kok,1) + 78000*r(21,Mat,1) + 50000*r(21,Kut,1) + 144000*r(21,Kot,1) + 44000*r(21,Mak,1) + 42000*r(21,Kuk,1) + 38000*r(21,Kok,1) + 84000*r(22,Mat,1) + 53550*r(22,Kut,1) + 157500*r(22,Kot,1)
     
      + 46620*r(22,Mak,1) + 44730*r(22,Kuk,1) + 40320*r(22,Kok,1) + 90200*r(23,Mat,1) + 57200*r(23,Kut,1) + 171600*r(23,Kot,1) + 49280*r(23,Mak,1) + 47520*r(23,Kuk,1) + 42680*r(23,Kok,1) + 96600*r(24,Mat,1) + 60950*r(24,Kut,1) + 186300*r(24,Kot,1)
     
      + 51980*r(24,Mak,1) + 50370*r(24,Kuk,1) + 45080*r(24,Kok,1) + 103200*r(25,Mat,1) + 64800*r(25,Kut,1) + 201600*r(25,Kot,1) + 54720*r(25,Mak,1) + 53280*r(25,Kuk,1) + 47520*r(25,Kok,1) + 110000*r(26,Mat,1) + 68750*r(26,Kut,1) + 217500*r(26,Kot,1)
     
      + 57500*r(26,Mak,1) + 56250*r(26,Kuk,1) + 50000*r(26,Kok,1) + 117000*r(27,Mat,1) + 72800*r(27,Kut,1) + 234000*r(27,Kot,1) + 60320*r(27,Mak,1) + 59280*r(27,Kuk,1) + 52520*r(27,Kok,1) + 124200*r(28,Mat,1) + 76950*r(28,Kut,1) + 251100*r(28,Kot,1)
     
      + 63180*r(28,Mak,1) + 62370*r(28,Kuk,1) + 55080*r(28,Kok,1) + 131600*r(29,Mat,1) + 81200*r(29,Kut,1) + 268800*r(29,Kot,1) + 66080*r(29,Mak,1) + 65520*r(29,Kuk,1) + 57680*r(29,Kok,1) + 139200*r(30,Mat,1) + 85550*r(30,Kut,1) + 287100*r(30,Kot,1)
     
      + 69020*r(30,Mak,1) + 68730*r(30,Kuk,1) + 60320*r(30,Kok,1) + 147000*r(31,Mat,1) + 90000*r(31,Kut,1) + 306000*r(31,Kot,1) + 72000*r(31,Mak,1) + 72000*r(31,Kuk,1) + 63000*r(31,Kok,1) + 155000*r(32,Mat,1) + 94550*r(32,Kut,1) + 325500*r(32,Kot,1)
     
      + 75020*r(32,Mak,1) + 75330*r(32,Kuk,1) + 65720*r(32,Kok,1) + 163200*r(33,Mat,1) + 99200*r(33,Kut,1) + 345600*r(33,Kot,1) + 78080*r(33,Mak,1) + 78720*r(33,Kuk,1) + 68480*r(33,Kok,1) + 171600*r(34,Mat,1) + 103950*r(34,Kut,1) + 366300*r(34,Kot,1)
     
      + 81180*r(34,Mak,1) + 82170*r(34,Kuk,1) + 71280*r(34,Kok,1) + 180200*r(35,Mat,1) + 108800*r(35,Kut,1) + 387600*r(35,Kot,1) + 84320*r(35,Mak,1) + 85680*r(35,Kuk,1) + 74120*r(35,Kok,1) + 189000*r(36,Mat,1) + 113750*r(36,Kut,1) + 409500*r(36,Kot,1)
     
      + 87500*r(36,Mak,1) + 89250*r(36,Kuk,1) + 77000*r(36,Kok,1) + 198000*r(37,Mat,1) + 118800*r(37,Kut,1) + 432000*r(37,Kot,1) + 90720*r(37,Mak,1) + 92880*r(37,Kuk,1) + 79920*r(37,Kok,1) + 207200*r(38,Mat,1) + 123950*r(38,Kut,1) + 455100*r(38,Kot,1)
     
      + 93980*r(38,Mak,1) + 96570*r(38,Kuk,1) + 82880*r(38,Kok,1) + 216600*r(39,Mat,1) + 129200*r(39,Kut,1) + 478800*r(39,Kot,1) + 97280*r(39,Mak,1) + 100320*r(39,Kuk,1) + 85880*r(39,Kok,1) + 226200*r(40,Mat,1) + 134550*r(40,Kut,1) + 503100*r(40,Kot,1)
     
      + 100620*r(40,Mak,1) + 104130*r(40,Kuk,1) + 88920*r(40,Kok,1) + 236000*r(41,Mat,1) + 140000*r(41,Kut,1) + 528000*r(41,Kot,1) + 104000*r(41,Mak,1) + 108000*r(41,Kuk,1) + 92000*r(41,Kok,1) + 246000*r(42,Mat,1) + 145550*r(42,Kut,1) + 553500*r(42,Kot,1)
     
      + 107420*r(42,Mak,1) + 111930*r(42,Kuk,1) + 95120*r(42,Kok,1) + 256200*r(43,Mat,1) + 151200*r(43,Kut,1) + 579600*r(43,Kot,1) + 110880*r(43,Mak,1) + 115920*r(43,Kuk,1) + 98280*r(43,Kok,1) + 266600*r(44,Mat,1) + 156950*r(44,Kut,1) + 606300*r(44,Kot,1)
     
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/19/17 02:05:06 Page 51
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 437


     PROFIT  =E=  Profit is what we gain minus what we spend     
     
      + 114380*r(44,Mak,1) + 119970*r(44,Kuk,1) + 101480*r(44,Kok,1) + 277200*r(45,Mat,1) + 162800*r(45,Kut,1) + 633600*r(45,Kot,1) + 117920*r(45,Mak,1) + 124080*r(45,Kuk,1) + 104720*r(45,Kok,1) + 288000*r(46,Mat,1) + 168750*r(46,Kut,1)
     
      + 661500*r(46,Kot,1) + 121500*r(46,Mak,1) + 128250*r(46,Kuk,1) + 108000*r(46,Kok,1) + 299000*r(47,Mat,1) + 174800*r(47,Kut,1) + 690000*r(47,Kot,1) + 125120*r(47,Mak,1) + 132480*r(47,Kuk,1) + 111320*r(47,Kok,1) + 310200*r(48,Mat,1)
     
      + 180950*r(48,Kut,1) + 719100*r(48,Kot,1) + 128780*r(48,Mak,1) + 136770*r(48,Kuk,1) + 114680*r(48,Kok,1) + 321600*r(49,Mat,1) + 187200*r(49,Kut,1) + 748800*r(49,Kot,1) + 132480*r(49,Mak,1) + 141120*r(49,Kuk,1) + 118080*r(49,Kok,1)
     
      + 333200*r(50,Mat,1) + 193550*r(50,Kut,1) + 779100*r(50,Kot,1) + 136220*r(50,Mak,1) + 145530*r(50,Kuk,1) + 121520*r(50,Kok,1) + 345000*r(51,Mat,1) + 200000*r(51,Kut,1) + 810000*r(51,Kot,1) + 140000*r(51,Mak,1) + 150000*r(51,Kuk,1)
     
      + 125000*r(51,Kok,1) + 357000*r(52,Mat,1) + 206550*r(52,Kut,1) + 841500*r(52,Kot,1) + 143820*r(52,Mak,1) + 154530*r(52,Kuk,1) + 128520*r(52,Kok,1) + 369200*r(53,Mat,1) + 213200*r(53,Kut,1) + 873600*r(53,Kot,1) + 147680*r(53,Mak,1)
     
      + 159120*r(53,Kuk,1) + 132080*r(53,Kok,1) + 381600*r(54,Mat,1) + 219950*r(54,Kut,1) + 906300*r(54,Kot,1) + 151580*r(54,Mak,1) + 163770*r(54,Kuk,1) + 135680*r(54,Kok,1) + 394200*r(55,Mat,1) + 226800*r(55,Kut,1) + 939600*r(55,Kot,1)
     
      + 155520*r(55,Mak,1) + 168480*r(55,Kuk,1) + 139320*r(55,Kok,1) + 407000*r(56,Mat,1) + 233750*r(56,Kut,1) + 973500*r(56,Kot,1) + 159500*r(56,Mak,1) + 173250*r(56,Kuk,1) + 143000*r(56,Kok,1) + 420000*r(57,Mat,1) + 240800*r(57,Kut,1)
     
      + 1008000*r(57,Kot,1) + 163520*r(57,Mak,1) + 178080*r(57,Kuk,1) + 146720*r(57,Kok,1) + 433200*r(58,Mat,1) + 247950*r(58,Kut,1) + 1043100*r(58,Kot,1) + 167580*r(58,Mak,1) + 182970*r(58,Kuk,1) + 150480*r(58,Kok,1) + 446600*r(59,Mat,1)
     
      + 255200*r(59,Kut,1) + 1078800*r(59,Kot,1) + 171680*r(59,Mak,1) + 187920*r(59,Kuk,1) + 154280*r(59,Kok,1) + 460200*r(60,Mat,1) + 262550*r(60,Kut,1) + 1115100*r(60,Kot,1) + 175820*r(60,Mak,1) + 192930*r(60,Kuk,1) + 158120*r(60,Kok,1)
     
      + 474000*r(61,Mat,1) + 270000*r(61,Kut,1) + 1152000*r(61,Kot,1) + 180000*r(61,Mak,1) + 198000*r(61,Kuk,1) + 162000*r(61,Kok,1) + 488000*r(62,Mat,1) + 277550*r(62,Kut,1) + 1189500*r(62,Kot,1) + 184220*r(62,Mak,1) + 203130*r(62,Kuk,1)
     
      + 165920*r(62,Kok,1) + 502200*r(63,Mat,1) + 285200*r(63,Kut,1) + 1227600*r(63,Kot,1) + 188480*r(63,Mak,1) + 208320*r(63,Kuk,1) + 169880*r(63,Kok,1) + 516600*r(64,Mat,1) + 292950*r(64,Kut,1) + 1266300*r(64,Kot,1) + 192780*r(64,Mak,1)
     
      + 213570*r(64,Kuk,1) + 173880*r(64,Kok,1) + 531200*r(65,Mat,1) + 300800*r(65,Kut,1) + 1305600*r(65,Kot,1) + 197120*r(65,Mak,1) + 218880*r(65,Kuk,1) + 177920*r(65,Kok,1) + 546000*r(66,Mat,1) + 308750*r(66,Kut,1) + 1345500*r(66,Kot,1)
     
      + 201500*r(66,Mak,1) + 224250*r(66,Kuk,1) + 182000*r(66,Kok,1) + 561000*r(67,Mat,1) + 316800*r(67,Kut,1) + 1386000*r(67,Kot,1) + 205920*r(67,Mak,1) + 229680*r(67,Kuk,1) + 186120*r(67,Kok,1) + 576200*r(68,Mat,1) + 324950*r(68,Kut,1)
     
      + 1427100*r(68,Kot,1) + 210380*r(68,Mak,1) + 235170*r(68,Kuk,1) + 190280*r(68,Kok,1) + 591600*r(69,Mat,1) + 333200*r(69,Kut,1) + 1468800*r(69,Kot,1) + 214880*r(69,Mak,1) + 240720*r(69,Kuk,1) + 194480*r(69,Kok,1) + 607200*r(70,Mat,1)
     
      + 341550*r(70,Kut,1) + 1511100*r(70,Kot,1) + 219420*r(70,Mak,1) + 246330*r(70,Kuk,1) + 198720*r(70,Kok,1) + 623000*r(71,Mat,1) + 350000*r(71,Kut,1) + 1554000*r(71,Kot,1) + 224000*r(71,Mak,1) + 252000*r(71,Kuk,1) + 203000*r(71,Kok,1)
     
      + 639000*r(72,Mat,1) + 358550*r(72,Kut,1) + 1597500*r(72,Kot,1) + 228620*r(72,Mak,1) + 257730*r(72,Kuk,1) + 207320*r(72,Kok,1) + 655200*r(73,Mat,1) + 367200*r(73,Kut,1) + 1641600*r(73,Kot,1) + 233280*r(73,Mak,1) + 263520*r(73,Kuk,1)
     
      + 211680*r(73,Kok,1) + 671600*r(74,Mat,1) + 375950*r(74,Kut,1) + 1686300*r(74,Kot,1) + 237980*r(74,Mak,1) + 269370*r(74,Kuk,1) + 216080*r(74,Kok,1) + 688200*r(75,Mat,1) + 384800*r(75,Kut,1) + 1731600*r(75,Kot,1) + 242720*r(75,Mak,1)
     
      + 275280*r(75,Kuk,1) + 220520*r(75,Kok,1) + 705000*r(76,Mat,1) + 393750*r(76,Kut,1) + 1777500*r(76,Kot,1) + 247500*r(76,Mak,1) + 281250*r(76,Kuk,1) + 225000*r(76,Kok,1) + 722000*r(77,Mat,1) + 402800*r(77,Kut,1) + 1824000*r(77,Kot,1)
     
      + 252320*r(77,Mak,1) + 287280*r(77,Kuk,1) + 229520*r(77,Kok,1) + 739200*r(78,Mat,1) + 411950*r(78,Kut,1) + 1871100*r(78,Kot,1) + 257180*r(78,Mak,1) + 293370*r(78,Kuk,1) + 234080*r(78,Kok,1) + 756600*r(79,Mat,1) + 421200*r(79,Kut,1)
     
      + 1918800*r(79,Kot,1) + 262080*r(79,Mak,1) + 299520*r(79,Kuk,1) + 238680*r(79,Kok,1) + 774200*r(80,Mat,1) + 430550*r(80,Kut,1) + 1967100*r(80,Kot,1) + 267020*r(80,Mak,1) + 305730*r(80,Kuk,1) + 243320*r(80,Kok,1) + 792000*r(81,Mat,1)
     
      + 440000*r(81,Kut,1) + 2016000*r(81,Kot,1) + 272000*r(81,Mak,1) + 312000*r(81,Kuk,1) + 248000*r(81,Kok,1) + 810000*r(82,Mat,1) + 449550*r(82,Kut,1) + 2065500*r(82,Kot,1) + 277020*r(82,Mak,1) + 318330*r(82,Kuk,1) + 252720*r(82,Kok,1)
     
      + 828200*r(83,Mat,1) + 459200*r(83,Kut,1) + 2115600*r(83,Kot,1) + 282080*r(83,Mak,1) + 324720*r(83,Kuk,1) + 257480*r(83,Kok,1) + 846600*r(84,Mat,1) + 468950*r(84,Kut,1) + 2166300*r(84,Kot,1) + 287180*r(84,Mak,1) + 331170*r(84,Kuk,1)
     
      + 262280*r(84,Kok,1) + 865200*r(85,Mat,1) + 478800*r(85,Kut,1) + 2217600*r(85,Kot,1) + 292320*r(85,Mak,1) + 337680*r(85,Kuk,1) + 267120*r(85,Kok,1) + 884000*r(86,Mat,1) + 488750*r(86,Kut,1) + 2269500*r(86,Kot,1) + 297500*r(86,Mak,1)
     
      + 344250*r(86,Kuk,1) + 272000*r(86,Kok,1) + 903000*r(87,Mat,1) + 498800*r(87,Kut,1) + 2322000*r(87,Kot,1) + 302720*r(87,Mak,1) + 350880*r(87,Kuk,1) + 276920*r(87,Kok,1) + 922200*r(88,Mat,1) + 508950*r(88,Kut,1) + 2375100*r(88,Kot,1)
     
      + 307980*r(88,Mak,1) + 357570*r(88,Kuk,1) + 281880*r(88,Kok,1) + 941600*r(89,Mat,1) + 519200*r(89,Kut,1) + 2428800*r(89,Kot,1) + 313280*r(89,Mak,1) + 364320*r(89,Kuk,1) + 286880*r(89,Kok,1) + 961200*r(90,Mat,1) + 529550*r(90,Kut,1)
     
      + 2483100*r(90,Kot,1) + 318620*r(90,Mak,1) + 371130*r(90,Kuk,1) + 291920*r(90,Kok,1) + 981000*r(91,Mat,1) + 540000*r(91,Kut,1) + 2538000*r(91,Kot,1) + 324000*r(91,Mak,1) + 378000*r(91,Kuk,1) + 297000*r(91,Kok,1) + 1001000*r(92,Mat,1)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/19/17 02:05:06 Page 52
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 437


     PROFIT  =E=  Profit is what we gain minus what we spend     
     
      + 550550*r(92,Kut,1) + 2593500*r(92,Kot,1) + 329420*r(92,Mak,1) + 384930*r(92,Kuk,1) + 302120*r(92,Kok,1) + 1021200*r(93,Mat,1) + 561200*r(93,Kut,1) + 2649600*r(93,Kot,1) + 334880*r(93,Mak,1) + 391920*r(93,Kuk,1) + 307280*r(93,Kok,1)
     
      + 1041600*r(94,Mat,1) + 571950*r(94,Kut,1) + 2706300*r(94,Kot,1) + 340380*r(94,Mak,1) + 398970*r(94,Kuk,1) + 312480*r(94,Kok,1) + 1062200*r(95,Mat,1) + 582800*r(95,Kut,1) + 2763600*r(95,Kot,1) + 345920*r(95,Mak,1) + 406080*r(95,Kuk,1)
     
      + 317720*r(95,Kok,1) + 1083000*r(96,Mat,1) + 593750*r(96,Kut,1) + 2821500*r(96,Kot,1) + 351500*r(96,Mak,1) + 413250*r(96,Kuk,1) + 323000*r(96,Kok,1) + 1104000*r(97,Mat,1) + 604800*r(97,Kut,1) + 2880000*r(97,Kot,1) + 357120*r(97,Mak,1)
     
      + 420480*r(97,Kuk,1) + 328320*r(97,Kok,1) + 1125200*r(98,Mat,1) + 615950*r(98,Kut,1) + 2939100*r(98,Kot,1) + 362780*r(98,Mak,1) + 427770*r(98,Kuk,1) + 333680*r(98,Kok,1) + 1146600*r(99,Mat,1) + 627200*r(99,Kut,1) + 2998800*r(99,Kot,1)
     
      + 368480*r(99,Mak,1) + 435120*r(99,Kuk,1) + 339080*r(99,Kok,1) + 1168200*r(100,Mat,1) + 638550*r(100,Kut,1) + 3059100*r(100,Kot,1) + 374220*r(100,Mak,1) + 442530*r(100,Kuk,1) + 344520*r(100,Kok,1) + 1190000*r(101,Mat,1) + 650000*r(101,Kut,1)
     
      + 3120000*r(101,Kot,1) + 380000*r(101,Mak,1) + 450000*r(101,Kuk,1) + 350000*r(101,Kok,1) + 1212000*r(102,Mat,1) + 661550*r(102,Kut,1) + 3181500*r(102,Kot,1) + 385820*r(102,Mak,1) + 457530*r(102,Kuk,1) + 355520*r(102,Kok,1) + 1234200*r(103,Mat,1)
     
      + 673200*r(103,Kut,1) + 3243600*r(103,Kot,1) + 391680*r(103,Mak,1) + 465120*r(103,Kuk,1) + 361080*r(103,Kok,1) + 1256600*r(104,Mat,1) + 684950*r(104,Kut,1) + 3306300*r(104,Kot,1) + 397580*r(104,Mak,1) + 472770*r(104,Kuk,1) + 366680*r(104,Kok,1)
     
      + 1279200*r(105,Mat,1) + 696800*r(105,Kut,1) + 3369600*r(105,Kot,1) + 403520*r(105,Mak,1) + 480480*r(105,Kuk,1) + 372320*r(105,Kok,1) + 1302000*r(106,Mat,1) + 708750*r(106,Kut,1) + 3433500*r(106,Kot,1) + 409500*r(106,Mak,1) + 488250*r(106,Kuk,1)
     
      + 378000*r(106,Kok,1) + 1325000*r(107,Mat,1) + 720800*r(107,Kut,1) + 3498000*r(107,Kot,1) + 415520*r(107,Mak,1) + 496080*r(107,Kuk,1) + 383720*r(107,Kok,1) - 15600*u(2,Mas,EU,1) - 12000*u(2,Mas,IE,1) - 12800*u(2,Mas,PA,1) - 13500*u(2,Mas,KI,1)
     
      - 11600*u(2,Kos,EU,1) - 12000*u(2,Kos,IE,1) - 12800*u(2,Kos,PA,1) - 13500*u(2,Kos,KI,1) - 43600*u(2,Kuv,EU,1) - 37000*u(2,Kuv,IE,1) - 34800*u(2,Kuv,PA,1) - 33500*u(2,Kuv,KI,1) - 42600*u(2,Kov,EU,1) - 40000*u(2,Kov,IE,1) - 37800*u(2,Kov,PA,1)
     
      - 36500*u(2,Kov,KI,1) - 22800*u(2,Hsel,EU,1) - 24600*u(2,Hsel,IE,1) - 22500*u(2,Hsel,PA,1) - 25400*u(2,Hsel,KI,1) - 24700*u(2,Lsel,EU,1) - 27800*u(2,Lsel,IE,1) - 22500*u(2,Lsel,PA,1) - 24300*u(2,Lsel,KI,1) - 44600*u(2,Pap,EU,1) - 46000*u(2,Pap,IE,1)
     
      - 41800*u(2,Pap,PA,1) - 46500*u(2,Pap,KI,1) - 30400*u(3,Mas,EU,1) - 22000*u(3,Mas,IE,1) - 23200*u(3,Mas,PA,1) - 24000*u(3,Mas,KI,1) - 20400*u(3,Kos,EU,1) - 20000*u(3,Kos,IE,1) - 21200*u(3,Kos,PA,1) - 22000*u(3,Kos,KI,1) - 86400*u(3,Kuv,EU,1)
     
      - 72000*u(3,Kuv,IE,1) - 67200*u(3,Kuv,PA,1) - 64000*u(3,Kuv,KI,1) - 84400*u(3,Kov,EU,1) - 78000*u(3,Kov,IE,1) - 73200*u(3,Kov,PA,1) - 70000*u(3,Kov,KI,1) - 45200*u(3,Hsel,EU,1) - 48400*u(3,Hsel,IE,1) - 44000*u(3,Hsel,PA,1) - 49600*u(3,Hsel,KI,1)
     
      - 48800*u(3,Lsel,EU,1) - 55200*u(3,Lsel,IE,1) - 44000*u(3,Lsel,PA,1) - 47200*u(3,Lsel,KI,1) - 88400*u(3,Pap,EU,1) - 90000*u(3,Pap,IE,1) - 81200*u(3,Pap,PA,1) - 90000*u(3,Pap,KI,1) - 44400*u(4,Mas,EU,1) - 30000*u(4,Mas,IE,1) - 31200*u(4,Mas,PA,1)
     
      - 31500*u(4,Mas,KI,1) - 26400*u(4,Kos,EU,1) - 24000*u(4,Kos,IE,1) - 25200*u(4,Kos,PA,1) - 25500*u(4,Kos,KI,1) - 128400*u(4,Kuv,EU,1) - 105000*u(4,Kuv,IE,1) - 97200*u(4,Kuv,PA,1) - 91500*u(4,Kuv,KI,1) - 125400*u(4,Kov,EU,1) - 114000*u(4,Kov,IE,1)
     
      - 106200*u(4,Kov,PA,1) - 100500*u(4,Kov,KI,1) - 67200*u(4,Hsel,EU,1) - 71400*u(4,Hsel,IE,1) - 64500*u(4,Hsel,PA,1) - 72600*u(4,Hsel,KI,1) - 72300*u(4,Lsel,EU,1) - 82200*u(4,Lsel,IE,1) - 64500*u(4,Lsel,PA,1) - 68700*u(4,Lsel,KI,1)
     
      - 131400*u(4,Pap,EU,1) - 132000*u(4,Pap,IE,1) - 118200*u(4,Pap,PA,1) - 130500*u(4,Pap,KI,1) - 57600*u(5,Mas,EU,1) - 36000*u(5,Mas,IE,1) - 36800*u(5,Mas,PA,1) - 36000*u(5,Mas,KI,1) - 29600*u(5,Kos,EU,1) - 24000*u(5,Kos,IE,1) - 24800*u(5,Kos,PA,1)
     
      - 24000*u(5,Kos,KI,1) - 169600*u(5,Kuv,EU,1) - 136000*u(5,Kuv,IE,1) - 124800*u(5,Kuv,PA,1) - 116000*u(5,Kuv,KI,1) - 165600*u(5,Kov,EU,1) - 148000*u(5,Kov,IE,1) - 136800*u(5,Kov,PA,1) - 128000*u(5,Kov,KI,1) - 88800*u(5,Hsel,EU,1)
     
      - 93600*u(5,Hsel,IE,1) - 84000*u(5,Hsel,PA,1) - 94400*u(5,Hsel,KI,1) - 95200*u(5,Lsel,EU,1) - 108800*u(5,Lsel,IE,1) - 84000*u(5,Lsel,PA,1) - 88800*u(5,Lsel,KI,1) - 173600*u(5,Pap,EU,1) - 172000*u(5,Pap,IE,1) - 152800*u(5,Pap,PA,1)
     
      - 168000*u(5,Pap,KI,1) - 70000*u(6,Mas,EU,1) - 40000*u(6,Mas,IE,1) - 40000*u(6,Mas,PA,1) - 37500*u(6,Mas,KI,1) - 30000*u(6,Kos,EU,1) - 20000*u(6,Kos,IE,1) - 20000*u(6,Kos,PA,1) - 17500*u(6,Kos,KI,1) - 210000*u(6,Kuv,EU,1) - 165000*u(6,Kuv,IE,1)
     
      - 150000*u(6,Kuv,PA,1) - 137500*u(6,Kuv,KI,1) - 205000*u(6,Kov,EU,1) - 180000*u(6,Kov,IE,1) - 165000*u(6,Kov,PA,1) - 152500*u(6,Kov,KI,1) - 110000*u(6,Hsel,EU,1) - 115000*u(6,Hsel,IE,1) - 102500*u(6,Hsel,PA,1) - 115000*u(6,Hsel,KI,1)
     
      - 117500*u(6,Lsel,EU,1) - 135000*u(6,Lsel,IE,1) - 102500*u(6,Lsel,PA,1) - 107500*u(6,Lsel,KI,1) - 215000*u(6,Pap,EU,1) - 210000*u(6,Pap,IE,1) - 185000*u(6,Pap,PA,1) - 202500*u(6,Pap,KI,1) - 81600*u(7,Mas,EU,1) - 42000*u(7,Mas,IE,1)
     
      - 40800*u(7,Mas,PA,1) - 36000*u(7,Mas,KI,1) - 27600*u(7,Kos,EU,1) - 12000*u(7,Kos,IE,1) - 10800*u(7,Kos,PA,1) - 6000*u(7,Kos,KI,1) - 249600*u(7,Kuv,EU,1) - 192000*u(7,Kuv,IE,1) - 172800*u(7,Kuv,PA,1) - 156000*u(7,Kuv,KI,1) - 243600*u(7,Kov,EU,1)
     
      - 210000*u(7,Kov,IE,1) - 190800*u(7,Kov,PA,1) - 174000*u(7,Kov,KI,1) - 130800*u(7,Hsel,EU,1) - 135600*u(7,Hsel,IE,1) - 120000*u(7,Hsel,PA,1) - 134400*u(7,Hsel,KI,1) - 139200*u(7,Lsel,EU,1) - 160800*u(7,Lsel,IE,1) - 120000*u(7,Lsel,PA,1)
     
      - 124800*u(7,Lsel,KI,1) - 255600*u(7,Pap,EU,1) - 246000*u(7,Pap,IE,1) - 214800*u(7,Pap,PA,1) - 234000*u(7,Pap,KI,1) - 92400*u(8,Mas,EU,1) - 42000*u(8,Mas,IE,1) - 39200*u(8,Mas,PA,1) - 31500*u(8,Mas,KI,1) - 22400*u(8,Kos,EU,1) + 2800*u(8,Kos,PA,1)
     
      + 10500*u(8,Kos,KI,1) - 288400*u(8,Kuv,EU,1) - 217000*u(8,Kuv,IE,1) - 193200*u(8,Kuv,PA,1) - 171500*u(8,Kuv,KI,1) - 281400*u(8,Kov,EU,1) - 238000*u(8,Kov,IE,1) - 214200*u(8,Kov,PA,1) - 192500*u(8,Kov,KI,1) - 151200*u(8,Hsel,EU,1)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/19/17 02:05:06 Page 53
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 437


     PROFIT  =E=  Profit is what we gain minus what we spend     
     
      - 155400*u(8,Hsel,IE,1) - 136500*u(8,Hsel,PA,1) - 152600*u(8,Hsel,KI,1) - 160300*u(8,Lsel,EU,1) - 186200*u(8,Lsel,IE,1) - 136500*u(8,Lsel,PA,1) - 140700*u(8,Lsel,KI,1) - 295400*u(8,Pap,EU,1) - 280000*u(8,Pap,IE,1) - 242200*u(8,Pap,PA,1)
     
      - 262500*u(8,Pap,KI,1) - 102400*u(9,Mas,EU,1) - 40000*u(9,Mas,IE,1) - 35200*u(9,Mas,PA,1) - 24000*u(9,Mas,KI,1) - 14400*u(9,Kos,EU,1) + 16000*u(9,Kos,IE,1) + 20800*u(9,Kos,PA,1) + 32000*u(9,Kos,KI,1) - 326400*u(9,Kuv,EU,1) - 240000*u(9,Kuv,IE,1)
     
      - 211200*u(9,Kuv,PA,1) - 184000*u(9,Kuv,KI,1) - 318400*u(9,Kov,EU,1) - 264000*u(9,Kov,IE,1) - 235200*u(9,Kov,PA,1) - 208000*u(9,Kov,KI,1) - 171200*u(9,Hsel,EU,1) - 174400*u(9,Hsel,IE,1) - 152000*u(9,Hsel,PA,1) - 169600*u(9,Hsel,KI,1)
     
      - 180800*u(9,Lsel,EU,1) - 211200*u(9,Lsel,IE,1) - 152000*u(9,Lsel,PA,1) - 155200*u(9,Lsel,KI,1) - 334400*u(9,Pap,EU,1) - 312000*u(9,Pap,IE,1) - 267200*u(9,Pap,PA,1) - 288000*u(9,Pap,KI,1) - 111600*u(10,Mas,EU,1) - 36000*u(10,Mas,IE,1)
     
      - 28800*u(10,Mas,PA,1) - 13500*u(10,Mas,KI,1) - 3600*u(10,Kos,EU,1) + 36000*u(10,Kos,IE,1) + 43200*u(10,Kos,PA,1) + 58500*u(10,Kos,KI,1) - 363600*u(10,Kuv,EU,1) - 261000*u(10,Kuv,IE,1) - 226800*u(10,Kuv,PA,1) - 193500*u(10,Kuv,KI,1)
     
      - 354600*u(10,Kov,EU,1) - 288000*u(10,Kov,IE,1) - 253800*u(10,Kov,PA,1) - 220500*u(10,Kov,KI,1) - 190800*u(10,Hsel,EU,1) - 192600*u(10,Hsel,IE,1) - 166500*u(10,Hsel,PA,1) - 185400*u(10,Hsel,KI,1) - 200700*u(10,Lsel,EU,1) - 235800*u(10,Lsel,IE,1)
     
      - 166500*u(10,Lsel,PA,1) - 168300*u(10,Lsel,KI,1) - 372600*u(10,Pap,EU,1) - 342000*u(10,Pap,IE,1) - 289800*u(10,Pap,PA,1) - 310500*u(10,Pap,KI,1) - 120000*u(11,Mas,EU,1) - 30000*u(11,Mas,IE,1) - 20000*u(11,Mas,PA,1) + 10000*u(11,Kos,EU,1)
     
      + 60000*u(11,Kos,IE,1) + 70000*u(11,Kos,PA,1) + 90000*u(11,Kos,KI,1) - 400000*u(11,Kuv,EU,1) - 280000*u(11,Kuv,IE,1) - 240000*u(11,Kuv,PA,1) - 200000*u(11,Kuv,KI,1) - 390000*u(11,Kov,EU,1) - 310000*u(11,Kov,IE,1) - 270000*u(11,Kov,PA,1)
     
      - 230000*u(11,Kov,KI,1) - 210000*u(11,Hsel,EU,1) - 210000*u(11,Hsel,IE,1) - 180000*u(11,Hsel,PA,1) - 200000*u(11,Hsel,KI,1) - 220000*u(11,Lsel,EU,1) - 260000*u(11,Lsel,IE,1) - 180000*u(11,Lsel,PA,1) - 180000*u(11,Lsel,KI,1) - 410000*u(11,Pap,EU,1)
     
      - 370000*u(11,Pap,IE,1) - 310000*u(11,Pap,PA,1) - 330000*u(11,Pap,KI,1) - 127600*u(12,Mas,EU,1) - 22000*u(12,Mas,IE,1) - 8800.00000000003*u(12,Mas,PA,1) + 16500*u(12,Mas,KI,1) + 26400*u(12,Kos,EU,1) + 88000*u(12,Kos,IE,1) + 101200*u(12,Kos,PA,1)
     
      + 126500*u(12,Kos,KI,1) - 435600*u(12,Kuv,EU,1) - 297000*u(12,Kuv,IE,1) - 250800*u(12,Kuv,PA,1) - 203500*u(12,Kuv,KI,1) - 424600*u(12,Kov,EU,1) - 330000*u(12,Kov,IE,1) - 283800*u(12,Kov,PA,1) - 236500*u(12,Kov,KI,1) - 228800*u(12,Hsel,EU,1)
     
      - 226600*u(12,Hsel,IE,1) - 192500*u(12,Hsel,PA,1) - 213400*u(12,Hsel,KI,1) - 238700*u(12,Lsel,EU,1) - 283800*u(12,Lsel,IE,1) - 192500*u(12,Lsel,PA,1) - 190300*u(12,Lsel,KI,1) - 446600*u(12,Pap,EU,1) - 396000*u(12,Pap,IE,1) - 327800*u(12,Pap,PA,1)
     
      - 346500*u(12,Pap,KI,1) - 134400*u(13,Mas,EU,1) - 12000*u(13,Mas,IE,1) + 4799.99999999997*u(13,Mas,PA,1) + 36000*u(13,Mas,KI,1) + 45600*u(13,Kos,EU,1) + 120000*u(13,Kos,IE,1) + 136800*u(13,Kos,PA,1) + 168000*u(13,Kos,KI,1) - 470400*u(13,Kuv,EU,1)
     
      - 312000*u(13,Kuv,IE,1) - 259200*u(13,Kuv,PA,1) - 204000*u(13,Kuv,KI,1) - 458400*u(13,Kov,EU,1) - 348000*u(13,Kov,IE,1) - 295200*u(13,Kov,PA,1) - 240000*u(13,Kov,KI,1) - 247200*u(13,Hsel,EU,1) - 242400*u(13,Hsel,IE,1) - 204000*u(13,Hsel,PA,1)
     
      - 225600*u(13,Hsel,KI,1) - 256800*u(13,Lsel,EU,1) - 307200*u(13,Lsel,IE,1) - 204000*u(13,Lsel,PA,1) - 199200*u(13,Lsel,KI,1) - 482400*u(13,Pap,EU,1) - 420000*u(13,Pap,IE,1) - 343200*u(13,Pap,PA,1) - 360000*u(13,Pap,KI,1) - 140400*u(14,Mas,EU,1)
     
      + 20800*u(14,Mas,PA,1) + 58500*u(14,Mas,KI,1) + 67600*u(14,Kos,EU,1) + 156000*u(14,Kos,IE,1) + 176800*u(14,Kos,PA,1) + 214500*u(14,Kos,KI,1) - 504400*u(14,Kuv,EU,1) - 325000*u(14,Kuv,IE,1) - 265200*u(14,Kuv,PA,1) - 201500*u(14,Kuv,KI,1)
     
      - 491400*u(14,Kov,EU,1) - 364000*u(14,Kov,IE,1) - 304200*u(14,Kov,PA,1) - 240500*u(14,Kov,KI,1) - 265200*u(14,Hsel,EU,1) - 257400*u(14,Hsel,IE,1) - 214500*u(14,Hsel,PA,1) - 236600*u(14,Hsel,KI,1) - 274300*u(14,Lsel,EU,1) - 330200*u(14,Lsel,IE,1)
     
      - 214500*u(14,Lsel,PA,1) - 206700*u(14,Lsel,KI,1) - 517400*u(14,Pap,EU,1) - 442000*u(14,Pap,IE,1) - 356200*u(14,Pap,PA,1) - 370500*u(14,Pap,KI,1) - 145600*u(15,Mas,EU,1) + 14000*u(15,Mas,IE,1) + 39200*u(15,Mas,PA,1) + 84000*u(15,Mas,KI,1)
     
      + 92400*u(15,Kos,EU,1) + 196000*u(15,Kos,IE,1) + 221200*u(15,Kos,PA,1) + 266000*u(15,Kos,KI,1) - 537600*u(15,Kuv,EU,1) - 336000*u(15,Kuv,IE,1) - 268800*u(15,Kuv,PA,1) - 196000*u(15,Kuv,KI,1) - 523600*u(15,Kov,EU,1) - 378000*u(15,Kov,IE,1)
     
      - 310800*u(15,Kov,PA,1) - 238000*u(15,Kov,KI,1) - 282800*u(15,Hsel,EU,1) - 271600*u(15,Hsel,IE,1) - 224000*u(15,Hsel,PA,1) - 246400*u(15,Hsel,KI,1) - 291200*u(15,Lsel,EU,1) - 352800*u(15,Lsel,IE,1) - 224000*u(15,Lsel,PA,1) - 212800*u(15,Lsel,KI,1)
     
      - 551600*u(15,Pap,EU,1) - 462000*u(15,Pap,IE,1) - 366800*u(15,Pap,PA,1) - 378000*u(15,Pap,KI,1) - 150000*u(16,Mas,EU,1) + 30000*u(16,Mas,IE,1) + 60000*u(16,Mas,PA,1) + 112500*u(16,Mas,KI,1) + 120000*u(16,Kos,EU,1) + 240000*u(16,Kos,IE,1)
     
      + 270000*u(16,Kos,PA,1) + 322500*u(16,Kos,KI,1) - 570000*u(16,Kuv,EU,1) - 345000*u(16,Kuv,IE,1) - 270000*u(16,Kuv,PA,1) - 187500*u(16,Kuv,KI,1) - 555000*u(16,Kov,EU,1) - 390000*u(16,Kov,IE,1) - 315000*u(16,Kov,PA,1) - 232500*u(16,Kov,KI,1)
     
      - 300000*u(16,Hsel,EU,1) - 285000*u(16,Hsel,IE,1) - 232500*u(16,Hsel,PA,1) - 255000*u(16,Hsel,KI,1) - 307500*u(16,Lsel,EU,1) - 375000*u(16,Lsel,IE,1) - 232500*u(16,Lsel,PA,1) - 217500*u(16,Lsel,KI,1) - 585000*u(16,Pap,EU,1) - 480000*u(16,Pap,IE,1)
     
      - 375000*u(16,Pap,PA,1) - 382500*u(16,Pap,KI,1) - 153600*u(17,Mas,EU,1) + 48000*u(17,Mas,IE,1) + 83200*u(17,Mas,PA,1) + 144000*u(17,Mas,KI,1) + 150400*u(17,Kos,EU,1) + 288000*u(17,Kos,IE,1) + 323200*u(17,Kos,PA,1) + 384000*u(17,Kos,KI,1)
     
      - 601600*u(17,Kuv,EU,1) - 352000*u(17,Kuv,IE,1) - 268800*u(17,Kuv,PA,1) - 176000*u(17,Kuv,KI,1) - 585600*u(17,Kov,EU,1) - 400000*u(17,Kov,IE,1) - 316800*u(17,Kov,PA,1) - 224000*u(17,Kov,KI,1) - 316800*u(17,Hsel,EU,1) - 297600*u(17,Hsel,IE,1)
     
      - 240000*u(17,Hsel,PA,1) - 262400*u(17,Hsel,KI,1) - 323200*u(17,Lsel,EU,1) - 396800*u(17,Lsel,IE,1) - 240000*u(17,Lsel,PA,1) - 220800*u(17,Lsel,KI,1) - 617600*u(17,Pap,EU,1) - 496000*u(17,Pap,IE,1) - 380800*u(17,Pap,PA,1) - 384000*u(17,Pap,KI,1)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/19/17 02:05:06 Page 54
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 437


     PROFIT  =E=  Profit is what we gain minus what we spend     
     
      - 156400*u(18,Mas,EU,1) + 68000*u(18,Mas,IE,1) + 108800*u(18,Mas,PA,1) + 178500*u(18,Mas,KI,1) + 183600*u(18,Kos,EU,1) + 340000*u(18,Kos,IE,1) + 380800*u(18,Kos,PA,1) + 450500*u(18,Kos,KI,1) - 632400*u(18,Kuv,EU,1) - 357000*u(18,Kuv,IE,1)
     
      - 265200*u(18,Kuv,PA,1) - 161500*u(18,Kuv,KI,1) - 615400*u(18,Kov,EU,1) - 408000*u(18,Kov,IE,1) - 316200*u(18,Kov,PA,1) - 212500*u(18,Kov,KI,1) - 333200*u(18,Hsel,EU,1) - 309400*u(18,Hsel,IE,1) - 246500*u(18,Hsel,PA,1) - 268600*u(18,Hsel,KI,1)
     
      - 338300*u(18,Lsel,EU,1) - 418200*u(18,Lsel,IE,1) - 246500*u(18,Lsel,PA,1) - 222700*u(18,Lsel,KI,1) - 649400*u(18,Pap,EU,1) - 510000*u(18,Pap,IE,1) - 384200*u(18,Pap,PA,1) - 382500*u(18,Pap,KI,1) - 158400*u(19,Mas,EU,1) + 90000*u(19,Mas,IE,1)
     
      + 136800*u(19,Mas,PA,1) + 216000*u(19,Mas,KI,1) + 219600*u(19,Kos,EU,1) + 396000*u(19,Kos,IE,1) + 442800*u(19,Kos,PA,1) + 522000*u(19,Kos,KI,1) - 662400*u(19,Kuv,EU,1) - 360000*u(19,Kuv,IE,1) - 259200*u(19,Kuv,PA,1) - 144000*u(19,Kuv,KI,1)
     
      - 644400*u(19,Kov,EU,1) - 414000*u(19,Kov,IE,1) - 313200*u(19,Kov,PA,1) - 198000*u(19,Kov,KI,1) - 349200*u(19,Hsel,EU,1) - 320400*u(19,Hsel,IE,1) - 252000*u(19,Hsel,PA,1) - 273600*u(19,Hsel,KI,1) - 352800*u(19,Lsel,EU,1) - 439200*u(19,Lsel,IE,1)
     
      - 252000*u(19,Lsel,PA,1) - 223200*u(19,Lsel,KI,1) - 680400*u(19,Pap,EU,1) - 522000*u(19,Pap,IE,1) - 385200*u(19,Pap,PA,1) - 378000*u(19,Pap,KI,1) - 159600*u(20,Mas,EU,1) + 114000*u(20,Mas,IE,1) + 167200*u(20,Mas,PA,1) + 256500*u(20,Mas,KI,1)
     
      + 258400*u(20,Kos,EU,1) + 456000*u(20,Kos,IE,1) + 509200*u(20,Kos,PA,1) + 598500*u(20,Kos,KI,1) - 691600*u(20,Kuv,EU,1) - 361000*u(20,Kuv,IE,1) - 250800*u(20,Kuv,PA,1) - 123500*u(20,Kuv,KI,1) - 672600*u(20,Kov,EU,1) - 418000*u(20,Kov,IE,1)
     
      - 307800*u(20,Kov,PA,1) - 180500*u(20,Kov,KI,1) - 364800*u(20,Hsel,EU,1) - 330600*u(20,Hsel,IE,1) - 256500*u(20,Hsel,PA,1) - 277400*u(20,Hsel,KI,1) - 366700*u(20,Lsel,EU,1) - 459800*u(20,Lsel,IE,1) - 256500*u(20,Lsel,PA,1) - 222300*u(20,Lsel,KI,1)
     
      - 710600*u(20,Pap,EU,1) - 532000*u(20,Pap,IE,1) - 383800*u(20,Pap,PA,1) - 370500*u(20,Pap,KI,1) - 160000*u(21,Mas,EU,1) + 140000*u(21,Mas,IE,1) + 200000*u(21,Mas,PA,1) + 300000*u(21,Mas,KI,1) + 300000*u(21,Kos,EU,1) + 520000*u(21,Kos,IE,1)
     
      + 580000*u(21,Kos,PA,1) + 680000*u(21,Kos,KI,1) - 720000*u(21,Kuv,EU,1) - 360000*u(21,Kuv,IE,1) - 240000*u(21,Kuv,PA,1) - 100000*u(21,Kuv,KI,1) - 700000*u(21,Kov,EU,1) - 420000*u(21,Kov,IE,1) - 300000*u(21,Kov,PA,1) - 160000*u(21,Kov,KI,1)
     
      - 380000*u(21,Hsel,EU,1) - 340000*u(21,Hsel,IE,1) - 260000*u(21,Hsel,PA,1) - 280000*u(21,Hsel,KI,1) - 380000*u(21,Lsel,EU,1) - 480000*u(21,Lsel,IE,1) - 260000*u(21,Lsel,PA,1) - 220000*u(21,Lsel,KI,1) - 740000*u(21,Pap,EU,1) - 540000*u(21,Pap,IE,1)
     
      - 380000*u(21,Pap,PA,1) - 360000*u(21,Pap,KI,1) - 159600*u(22,Mas,EU,1) + 168000*u(22,Mas,IE,1) + 235200*u(22,Mas,PA,1) + 346500*u(22,Mas,KI,1) + 344400*u(22,Kos,EU,1) + 588000*u(22,Kos,IE,1) + 655200*u(22,Kos,PA,1) + 766500*u(22,Kos,KI,1)
     
      - 747600*u(22,Kuv,EU,1) - 357000*u(22,Kuv,IE,1) - 226800*u(22,Kuv,PA,1) - 73500*u(22,Kuv,KI,1) - 726600*u(22,Kov,EU,1) - 420000*u(22,Kov,IE,1) - 289800*u(22,Kov,PA,1) - 136500*u(22,Kov,KI,1) - 394800*u(22,Hsel,EU,1) - 348600*u(22,Hsel,IE,1)
     
      - 262500*u(22,Hsel,PA,1) - 281400*u(22,Hsel,KI,1) - 392700*u(22,Lsel,EU,1) - 499800*u(22,Lsel,IE,1) - 262500*u(22,Lsel,PA,1) - 216300*u(22,Lsel,KI,1) - 768600*u(22,Pap,EU,1) - 546000*u(22,Pap,IE,1) - 373800*u(22,Pap,PA,1) - 346500*u(22,Pap,KI,1)
     
      - 158400*u(23,Mas,EU,1) + 198000*u(23,Mas,IE,1) + 272800*u(23,Mas,PA,1) + 396000*u(23,Mas,KI,1) + 391600*u(23,Kos,EU,1) + 660000*u(23,Kos,IE,1) + 734800*u(23,Kos,PA,1) + 858000*u(23,Kos,KI,1) - 774400*u(23,Kuv,EU,1) - 352000*u(23,Kuv,IE,1)
     
      - 211200*u(23,Kuv,PA,1) - 44000*u(23,Kuv,KI,1) - 752400*u(23,Kov,EU,1) - 418000*u(23,Kov,IE,1) - 277200*u(23,Kov,PA,1) - 110000*u(23,Kov,KI,1) - 409200*u(23,Hsel,EU,1) - 356400*u(23,Hsel,IE,1) - 264000*u(23,Hsel,PA,1) - 281600*u(23,Hsel,KI,1)
     
      - 404800*u(23,Lsel,EU,1) - 519200*u(23,Lsel,IE,1) - 264000*u(23,Lsel,PA,1) - 211200*u(23,Lsel,KI,1) - 796400*u(23,Pap,EU,1) - 550000*u(23,Pap,IE,1) - 365200*u(23,Pap,PA,1) - 330000*u(23,Pap,KI,1) - 0.19*b(Mat,1) - 0.15*b(Kut,1) - 0.12*b(Kot,1)
     
      - 0.18*b(Mak,1) - 0.15*b(Kuk,1) - 0.15*b(Kok,1) + Pr(1) + 0.1*Cap(SAW,2) + 0.3*Cap(PLY,2) + 0.5*Cap(SPULP,2) + 0.5*Cap(HPULP,2) + 0.7*Cap(PAPM,2) =E= 0 ; (LHS = 0)
     
PROFIT(2)..  0.542*y(Mas,2) + 0.492*y(Kus,2) + 0.442*y(Kos,2) + 2.492*y(Kuv,2) + 2.592*y(Kov,2) + 0.82*y(Hsel,2) + 0.8*y(Lsel,2) + 1.7*y(Pap,2) + 0.19*s(Mat,2) + 0.15*s(Kut,2) + 0.12*s(Kot,2) + 0.18*s(Mak,2) + 0.15*s(Kuk,2) + 0.15*s(Kok,2)
     
      + 2000*r(2,Mat,2) + 1550*r(2,Kut,2) + 1500*r(2,Kot,2) + 1820*r(2,Mak,2) + 1530*r(2,Kuk,2) + 1520*r(2,Kok,2) + 4200*r(3,Mat,2) + 3200*r(3,Kut,2) + 3600*r(3,Kot,2) + 3680*r(3,Mak,2) + 3120*r(3,Kuk,2) + 3080*r(3,Kok,2) + 6600*r(4,Mat,2)
     
      + 4950*r(4,Kut,2) + 6300*r(4,Kot,2) + 5580*r(4,Mak,2) + 4770*r(4,Kuk,2) + 4680*r(4,Kok,2) + 9200*r(5,Mat,2) + 6800*r(5,Kut,2) + 9600*r(5,Kot,2) + 7520*r(5,Mak,2) + 6480*r(5,Kuk,2) + 6320*r(5,Kok,2) + 12000*r(6,Mat,2) + 8750*r(6,Kut,2)
     
      + 13500*r(6,Kot,2) + 9500*r(6,Mak,2) + 8250*r(6,Kuk,2) + 8000*r(6,Kok,2) + 15000*r(7,Mat,2) + 10800*r(7,Kut,2) + 18000*r(7,Kot,2) + 11520*r(7,Mak,2) + 10080*r(7,Kuk,2) + 9720*r(7,Kok,2) + 18200*r(8,Mat,2) + 12950*r(8,Kut,2) + 23100*r(8,Kot,2)
     
      + 13580*r(8,Mak,2) + 11970*r(8,Kuk,2) + 11480*r(8,Kok,2) + 21600*r(9,Mat,2) + 15200*r(9,Kut,2) + 28800*r(9,Kot,2) + 15680*r(9,Mak,2) + 13920*r(9,Kuk,2) + 13280*r(9,Kok,2) + 25200*r(10,Mat,2) + 17550*r(10,Kut,2) + 35100*r(10,Kot,2)
     
      + 17820*r(10,Mak,2) + 15930*r(10,Kuk,2) + 15120*r(10,Kok,2) + 29000*r(11,Mat,2) + 20000*r(11,Kut,2) + 42000*r(11,Kot,2) + 20000*r(11,Mak,2) + 18000*r(11,Kuk,2) + 17000*r(11,Kok,2) + 33000*r(12,Mat,2) + 22550*r(12,Kut,2) + 49500*r(12,Kot,2)
     
      + 22220*r(12,Mak,2) + 20130*r(12,Kuk,2) + 18920*r(12,Kok,2) + 37200*r(13,Mat,2) + 25200*r(13,Kut,2) + 57600*r(13,Kot,2) + 24480*r(13,Mak,2) + 22320*r(13,Kuk,2) + 20880*r(13,Kok,2) + 41600*r(14,Mat,2) + 27950*r(14,Kut,2) + 66300*r(14,Kot,2)
     
      + 26780*r(14,Mak,2) + 24570*r(14,Kuk,2) + 22880*r(14,Kok,2) + 46200*r(15,Mat,2) + 30800*r(15,Kut,2) + 75600*r(15,Kot,2) + 29120*r(15,Mak,2) + 26880*r(15,Kuk,2) + 24920*r(15,Kok,2) + 51000*r(16,Mat,2) + 33750*r(16,Kut,2) + 85500*r(16,Kot,2)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/19/17 02:05:06 Page 55
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 437


     PROFIT  =E=  Profit is what we gain minus what we spend     
     
      + 31500*r(16,Mak,2) + 29250*r(16,Kuk,2) + 27000*r(16,Kok,2) + 56000*r(17,Mat,2) + 36800*r(17,Kut,2) + 96000*r(17,Kot,2) + 33920*r(17,Mak,2) + 31680*r(17,Kuk,2) + 29120*r(17,Kok,2) + 61200*r(18,Mat,2) + 39950*r(18,Kut,2) + 107100*r(18,Kot,2)
     
      + 36380*r(18,Mak,2) + 34170*r(18,Kuk,2) + 31280*r(18,Kok,2) + 66600*r(19,Mat,2) + 43200*r(19,Kut,2) + 118800*r(19,Kot,2) + 38880*r(19,Mak,2) + 36720*r(19,Kuk,2) + 33480*r(19,Kok,2) + 72200*r(20,Mat,2) + 46550*r(20,Kut,2) + 131100*r(20,Kot,2)
     
      + 41420*r(20,Mak,2) + 39330*r(20,Kuk,2) + 35720*r(20,Kok,2) + 78000*r(21,Mat,2) + 50000*r(21,Kut,2) + 144000*r(21,Kot,2) + 44000*r(21,Mak,2) + 42000*r(21,Kuk,2) + 38000*r(21,Kok,2) + 84000*r(22,Mat,2) + 53550*r(22,Kut,2) + 157500*r(22,Kot,2)
     
      + 46620*r(22,Mak,2) + 44730*r(22,Kuk,2) + 40320*r(22,Kok,2) + 90200*r(23,Mat,2) + 57200*r(23,Kut,2) + 171600*r(23,Kot,2) + 49280*r(23,Mak,2) + 47520*r(23,Kuk,2) + 42680*r(23,Kok,2) + 96600*r(24,Mat,2) + 60950*r(24,Kut,2) + 186300*r(24,Kot,2)
     
      + 51980*r(24,Mak,2) + 50370*r(24,Kuk,2) + 45080*r(24,Kok,2) + 103200*r(25,Mat,2) + 64800*r(25,Kut,2) + 201600*r(25,Kot,2) + 54720*r(25,Mak,2) + 53280*r(25,Kuk,2) + 47520*r(25,Kok,2) + 110000*r(26,Mat,2) + 68750*r(26,Kut,2) + 217500*r(26,Kot,2)
     
      + 57500*r(26,Mak,2) + 56250*r(26,Kuk,2) + 50000*r(26,Kok,2) + 117000*r(27,Mat,2) + 72800*r(27,Kut,2) + 234000*r(27,Kot,2) + 60320*r(27,Mak,2) + 59280*r(27,Kuk,2) + 52520*r(27,Kok,2) + 124200*r(28,Mat,2) + 76950*r(28,Kut,2) + 251100*r(28,Kot,2)
     
      + 63180*r(28,Mak,2) + 62370*r(28,Kuk,2) + 55080*r(28,Kok,2) + 131600*r(29,Mat,2) + 81200*r(29,Kut,2) + 268800*r(29,Kot,2) + 66080*r(29,Mak,2) + 65520*r(29,Kuk,2) + 57680*r(29,Kok,2) + 139200*r(30,Mat,2) + 85550*r(30,Kut,2) + 287100*r(30,Kot,2)
     
      + 69020*r(30,Mak,2) + 68730*r(30,Kuk,2) + 60320*r(30,Kok,2) + 147000*r(31,Mat,2) + 90000*r(31,Kut,2) + 306000*r(31,Kot,2) + 72000*r(31,Mak,2) + 72000*r(31,Kuk,2) + 63000*r(31,Kok,2) + 155000*r(32,Mat,2) + 94550*r(32,Kut,2) + 325500*r(32,Kot,2)
     
      + 75020*r(32,Mak,2) + 75330*r(32,Kuk,2) + 65720*r(32,Kok,2) + 163200*r(33,Mat,2) + 99200*r(33,Kut,2) + 345600*r(33,Kot,2) + 78080*r(33,Mak,2) + 78720*r(33,Kuk,2) + 68480*r(33,Kok,2) + 171600*r(34,Mat,2) + 103950*r(34,Kut,2) + 366300*r(34,Kot,2)
     
      + 81180*r(34,Mak,2) + 82170*r(34,Kuk,2) + 71280*r(34,Kok,2) + 180200*r(35,Mat,2) + 108800*r(35,Kut,2) + 387600*r(35,Kot,2) + 84320*r(35,Mak,2) + 85680*r(35,Kuk,2) + 74120*r(35,Kok,2) + 189000*r(36,Mat,2) + 113750*r(36,Kut,2) + 409500*r(36,Kot,2)
     
      + 87500*r(36,Mak,2) + 89250*r(36,Kuk,2) + 77000*r(36,Kok,2) + 198000*r(37,Mat,2) + 118800*r(37,Kut,2) + 432000*r(37,Kot,2) + 90720*r(37,Mak,2) + 92880*r(37,Kuk,2) + 79920*r(37,Kok,2) + 207200*r(38,Mat,2) + 123950*r(38,Kut,2) + 455100*r(38,Kot,2)
     
      + 93980*r(38,Mak,2) + 96570*r(38,Kuk,2) + 82880*r(38,Kok,2) + 216600*r(39,Mat,2) + 129200*r(39,Kut,2) + 478800*r(39,Kot,2) + 97280*r(39,Mak,2) + 100320*r(39,Kuk,2) + 85880*r(39,Kok,2) + 226200*r(40,Mat,2) + 134550*r(40,Kut,2) + 503100*r(40,Kot,2)
     
      + 100620*r(40,Mak,2) + 104130*r(40,Kuk,2) + 88920*r(40,Kok,2) + 236000*r(41,Mat,2) + 140000*r(41,Kut,2) + 528000*r(41,Kot,2) + 104000*r(41,Mak,2) + 108000*r(41,Kuk,2) + 92000*r(41,Kok,2) + 246000*r(42,Mat,2) + 145550*r(42,Kut,2) + 553500*r(42,Kot,2)
     
      + 107420*r(42,Mak,2) + 111930*r(42,Kuk,2) + 95120*r(42,Kok,2) + 256200*r(43,Mat,2) + 151200*r(43,Kut,2) + 579600*r(43,Kot,2) + 110880*r(43,Mak,2) + 115920*r(43,Kuk,2) + 98280*r(43,Kok,2) + 266600*r(44,Mat,2) + 156950*r(44,Kut,2) + 606300*r(44,Kot,2)
     
      + 114380*r(44,Mak,2) + 119970*r(44,Kuk,2) + 101480*r(44,Kok,2) + 277200*r(45,Mat,2) + 162800*r(45,Kut,2) + 633600*r(45,Kot,2) + 117920*r(45,Mak,2) + 124080*r(45,Kuk,2) + 104720*r(45,Kok,2) + 288000*r(46,Mat,2) + 168750*r(46,Kut,2)
     
      + 661500*r(46,Kot,2) + 121500*r(46,Mak,2) + 128250*r(46,Kuk,2) + 108000*r(46,Kok,2) + 299000*r(47,Mat,2) + 174800*r(47,Kut,2) + 690000*r(47,Kot,2) + 125120*r(47,Mak,2) + 132480*r(47,Kuk,2) + 111320*r(47,Kok,2) + 310200*r(48,Mat,2)
     
      + 180950*r(48,Kut,2) + 719100*r(48,Kot,2) + 128780*r(48,Mak,2) + 136770*r(48,Kuk,2) + 114680*r(48,Kok,2) + 321600*r(49,Mat,2) + 187200*r(49,Kut,2) + 748800*r(49,Kot,2) + 132480*r(49,Mak,2) + 141120*r(49,Kuk,2) + 118080*r(49,Kok,2)
     
      + 333200*r(50,Mat,2) + 193550*r(50,Kut,2) + 779100*r(50,Kot,2) + 136220*r(50,Mak,2) + 145530*r(50,Kuk,2) + 121520*r(50,Kok,2) + 345000*r(51,Mat,2) + 200000*r(51,Kut,2) + 810000*r(51,Kot,2) + 140000*r(51,Mak,2) + 150000*r(51,Kuk,2)
     
      + 125000*r(51,Kok,2) + 357000*r(52,Mat,2) + 206550*r(52,Kut,2) + 841500*r(52,Kot,2) + 143820*r(52,Mak,2) + 154530*r(52,Kuk,2) + 128520*r(52,Kok,2) + 369200*r(53,Mat,2) + 213200*r(53,Kut,2) + 873600*r(53,Kot,2) + 147680*r(53,Mak,2)
     
      + 159120*r(53,Kuk,2) + 132080*r(53,Kok,2) + 381600*r(54,Mat,2) + 219950*r(54,Kut,2) + 906300*r(54,Kot,2) + 151580*r(54,Mak,2) + 163770*r(54,Kuk,2) + 135680*r(54,Kok,2) + 394200*r(55,Mat,2) + 226800*r(55,Kut,2) + 939600*r(55,Kot,2)
     
      + 155520*r(55,Mak,2) + 168480*r(55,Kuk,2) + 139320*r(55,Kok,2) + 407000*r(56,Mat,2) + 233750*r(56,Kut,2) + 973500*r(56,Kot,2) + 159500*r(56,Mak,2) + 173250*r(56,Kuk,2) + 143000*r(56,Kok,2) + 420000*r(57,Mat,2) + 240800*r(57,Kut,2)
     
      + 1008000*r(57,Kot,2) + 163520*r(57,Mak,2) + 178080*r(57,Kuk,2) + 146720*r(57,Kok,2) + 433200*r(58,Mat,2) + 247950*r(58,Kut,2) + 1043100*r(58,Kot,2) + 167580*r(58,Mak,2) + 182970*r(58,Kuk,2) + 150480*r(58,Kok,2) + 446600*r(59,Mat,2)
     
      + 255200*r(59,Kut,2) + 1078800*r(59,Kot,2) + 171680*r(59,Mak,2) + 187920*r(59,Kuk,2) + 154280*r(59,Kok,2) + 460200*r(60,Mat,2) + 262550*r(60,Kut,2) + 1115100*r(60,Kot,2) + 175820*r(60,Mak,2) + 192930*r(60,Kuk,2) + 158120*r(60,Kok,2)
     
      + 474000*r(61,Mat,2) + 270000*r(61,Kut,2) + 1152000*r(61,Kot,2) + 180000*r(61,Mak,2) + 198000*r(61,Kuk,2) + 162000*r(61,Kok,2) + 488000*r(62,Mat,2) + 277550*r(62,Kut,2) + 1189500*r(62,Kot,2) + 184220*r(62,Mak,2) + 203130*r(62,Kuk,2)
     
      + 165920*r(62,Kok,2) + 502200*r(63,Mat,2) + 285200*r(63,Kut,2) + 1227600*r(63,Kot,2) + 188480*r(63,Mak,2) + 208320*r(63,Kuk,2) + 169880*r(63,Kok,2) + 516600*r(64,Mat,2) + 292950*r(64,Kut,2) + 1266300*r(64,Kot,2) + 192780*r(64,Mak,2)
     
      + 213570*r(64,Kuk,2) + 173880*r(64,Kok,2) + 531200*r(65,Mat,2) + 300800*r(65,Kut,2) + 1305600*r(65,Kot,2) + 197120*r(65,Mak,2) + 218880*r(65,Kuk,2) + 177920*r(65,Kok,2) + 546000*r(66,Mat,2) + 308750*r(66,Kut,2) + 1345500*r(66,Kot,2)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/19/17 02:05:06 Page 56
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 437


     PROFIT  =E=  Profit is what we gain minus what we spend     
     
      + 201500*r(66,Mak,2) + 224250*r(66,Kuk,2) + 182000*r(66,Kok,2) + 561000*r(67,Mat,2) + 316800*r(67,Kut,2) + 1386000*r(67,Kot,2) + 205920*r(67,Mak,2) + 229680*r(67,Kuk,2) + 186120*r(67,Kok,2) + 576200*r(68,Mat,2) + 324950*r(68,Kut,2)
     
      + 1427100*r(68,Kot,2) + 210380*r(68,Mak,2) + 235170*r(68,Kuk,2) + 190280*r(68,Kok,2) + 591600*r(69,Mat,2) + 333200*r(69,Kut,2) + 1468800*r(69,Kot,2) + 214880*r(69,Mak,2) + 240720*r(69,Kuk,2) + 194480*r(69,Kok,2) + 607200*r(70,Mat,2)
     
      + 341550*r(70,Kut,2) + 1511100*r(70,Kot,2) + 219420*r(70,Mak,2) + 246330*r(70,Kuk,2) + 198720*r(70,Kok,2) + 623000*r(71,Mat,2) + 350000*r(71,Kut,2) + 1554000*r(71,Kot,2) + 224000*r(71,Mak,2) + 252000*r(71,Kuk,2) + 203000*r(71,Kok,2)
     
      + 639000*r(72,Mat,2) + 358550*r(72,Kut,2) + 1597500*r(72,Kot,2) + 228620*r(72,Mak,2) + 257730*r(72,Kuk,2) + 207320*r(72,Kok,2) + 655200*r(73,Mat,2) + 367200*r(73,Kut,2) + 1641600*r(73,Kot,2) + 233280*r(73,Mak,2) + 263520*r(73,Kuk,2)
     
      + 211680*r(73,Kok,2) + 671600*r(74,Mat,2) + 375950*r(74,Kut,2) + 1686300*r(74,Kot,2) + 237980*r(74,Mak,2) + 269370*r(74,Kuk,2) + 216080*r(74,Kok,2) + 688200*r(75,Mat,2) + 384800*r(75,Kut,2) + 1731600*r(75,Kot,2) + 242720*r(75,Mak,2)
     
      + 275280*r(75,Kuk,2) + 220520*r(75,Kok,2) + 705000*r(76,Mat,2) + 393750*r(76,Kut,2) + 1777500*r(76,Kot,2) + 247500*r(76,Mak,2) + 281250*r(76,Kuk,2) + 225000*r(76,Kok,2) + 722000*r(77,Mat,2) + 402800*r(77,Kut,2) + 1824000*r(77,Kot,2)
     
      + 252320*r(77,Mak,2) + 287280*r(77,Kuk,2) + 229520*r(77,Kok,2) + 739200*r(78,Mat,2) + 411950*r(78,Kut,2) + 1871100*r(78,Kot,2) + 257180*r(78,Mak,2) + 293370*r(78,Kuk,2) + 234080*r(78,Kok,2) + 756600*r(79,Mat,2) + 421200*r(79,Kut,2)
     
      + 1918800*r(79,Kot,2) + 262080*r(79,Mak,2) + 299520*r(79,Kuk,2) + 238680*r(79,Kok,2) + 774200*r(80,Mat,2) + 430550*r(80,Kut,2) + 1967100*r(80,Kot,2) + 267020*r(80,Mak,2) + 305730*r(80,Kuk,2) + 243320*r(80,Kok,2) + 792000*r(81,Mat,2)
     
      + 440000*r(81,Kut,2) + 2016000*r(81,Kot,2) + 272000*r(81,Mak,2) + 312000*r(81,Kuk,2) + 248000*r(81,Kok,2) + 810000*r(82,Mat,2) + 449550*r(82,Kut,2) + 2065500*r(82,Kot,2) + 277020*r(82,Mak,2) + 318330*r(82,Kuk,2) + 252720*r(82,Kok,2)
     
      + 828200*r(83,Mat,2) + 459200*r(83,Kut,2) + 2115600*r(83,Kot,2) + 282080*r(83,Mak,2) + 324720*r(83,Kuk,2) + 257480*r(83,Kok,2) + 846600*r(84,Mat,2) + 468950*r(84,Kut,2) + 2166300*r(84,Kot,2) + 287180*r(84,Mak,2) + 331170*r(84,Kuk,2)
     
      + 262280*r(84,Kok,2) + 865200*r(85,Mat,2) + 478800*r(85,Kut,2) + 2217600*r(85,Kot,2) + 292320*r(85,Mak,2) + 337680*r(85,Kuk,2) + 267120*r(85,Kok,2) + 884000*r(86,Mat,2) + 488750*r(86,Kut,2) + 2269500*r(86,Kot,2) + 297500*r(86,Mak,2)
     
      + 344250*r(86,Kuk,2) + 272000*r(86,Kok,2) + 903000*r(87,Mat,2) + 498800*r(87,Kut,2) + 2322000*r(87,Kot,2) + 302720*r(87,Mak,2) + 350880*r(87,Kuk,2) + 276920*r(87,Kok,2) + 922200*r(88,Mat,2) + 508950*r(88,Kut,2) + 2375100*r(88,Kot,2)
     
      + 307980*r(88,Mak,2) + 357570*r(88,Kuk,2) + 281880*r(88,Kok,2) + 941600*r(89,Mat,2) + 519200*r(89,Kut,2) + 2428800*r(89,Kot,2) + 313280*r(89,Mak,2) + 364320*r(89,Kuk,2) + 286880*r(89,Kok,2) + 961200*r(90,Mat,2) + 529550*r(90,Kut,2)
     
      + 2483100*r(90,Kot,2) + 318620*r(90,Mak,2) + 371130*r(90,Kuk,2) + 291920*r(90,Kok,2) + 981000*r(91,Mat,2) + 540000*r(91,Kut,2) + 2538000*r(91,Kot,2) + 324000*r(91,Mak,2) + 378000*r(91,Kuk,2) + 297000*r(91,Kok,2) + 1001000*r(92,Mat,2)
     
      + 550550*r(92,Kut,2) + 2593500*r(92,Kot,2) + 329420*r(92,Mak,2) + 384930*r(92,Kuk,2) + 302120*r(92,Kok,2) + 1021200*r(93,Mat,2) + 561200*r(93,Kut,2) + 2649600*r(93,Kot,2) + 334880*r(93,Mak,2) + 391920*r(93,Kuk,2) + 307280*r(93,Kok,2)
     
      + 1041600*r(94,Mat,2) + 571950*r(94,Kut,2) + 2706300*r(94,Kot,2) + 340380*r(94,Mak,2) + 398970*r(94,Kuk,2) + 312480*r(94,Kok,2) + 1062200*r(95,Mat,2) + 582800*r(95,Kut,2) + 2763600*r(95,Kot,2) + 345920*r(95,Mak,2) + 406080*r(95,Kuk,2)
     
      + 317720*r(95,Kok,2) + 1083000*r(96,Mat,2) + 593750*r(96,Kut,2) + 2821500*r(96,Kot,2) + 351500*r(96,Mak,2) + 413250*r(96,Kuk,2) + 323000*r(96,Kok,2) + 1104000*r(97,Mat,2) + 604800*r(97,Kut,2) + 2880000*r(97,Kot,2) + 357120*r(97,Mak,2)
     
      + 420480*r(97,Kuk,2) + 328320*r(97,Kok,2) + 1125200*r(98,Mat,2) + 615950*r(98,Kut,2) + 2939100*r(98,Kot,2) + 362780*r(98,Mak,2) + 427770*r(98,Kuk,2) + 333680*r(98,Kok,2) + 1146600*r(99,Mat,2) + 627200*r(99,Kut,2) + 2998800*r(99,Kot,2)
     
      + 368480*r(99,Mak,2) + 435120*r(99,Kuk,2) + 339080*r(99,Kok,2) + 1168200*r(100,Mat,2) + 638550*r(100,Kut,2) + 3059100*r(100,Kot,2) + 374220*r(100,Mak,2) + 442530*r(100,Kuk,2) + 344520*r(100,Kok,2) + 1190000*r(101,Mat,2) + 650000*r(101,Kut,2)
     
      + 3120000*r(101,Kot,2) + 380000*r(101,Mak,2) + 450000*r(101,Kuk,2) + 350000*r(101,Kok,2) + 1212000*r(102,Mat,2) + 661550*r(102,Kut,2) + 3181500*r(102,Kot,2) + 385820*r(102,Mak,2) + 457530*r(102,Kuk,2) + 355520*r(102,Kok,2) + 1234200*r(103,Mat,2)
     
      + 673200*r(103,Kut,2) + 3243600*r(103,Kot,2) + 391680*r(103,Mak,2) + 465120*r(103,Kuk,2) + 361080*r(103,Kok,2) + 1256600*r(104,Mat,2) + 684950*r(104,Kut,2) + 3306300*r(104,Kot,2) + 397580*r(104,Mak,2) + 472770*r(104,Kuk,2) + 366680*r(104,Kok,2)
     
      + 1279200*r(105,Mat,2) + 696800*r(105,Kut,2) + 3369600*r(105,Kot,2) + 403520*r(105,Mak,2) + 480480*r(105,Kuk,2) + 372320*r(105,Kok,2) + 1302000*r(106,Mat,2) + 708750*r(106,Kut,2) + 3433500*r(106,Kot,2) + 409500*r(106,Mak,2) + 488250*r(106,Kuk,2)
     
      + 378000*r(106,Kok,2) + 1325000*r(107,Mat,2) + 720800*r(107,Kut,2) + 3498000*r(107,Kot,2) + 415520*r(107,Mak,2) + 496080*r(107,Kuk,2) + 383720*r(107,Kok,2) - 15603.9603960396*u(2,Mas,EU,2) - 12009.900990099*u(2,Mas,IE,2)
     
      - 12811.8811881188*u(2,Mas,PA,2) - 13514.8514851485*u(2,Mas,KI,2) - 11620.6896551724*u(2,Kos,EU,2) - 12029.5566502463*u(2,Kos,IE,2) - 12832.5123152709*u(2,Kos,PA,2) - 13536.9458128079*u(2,Kos,KI,2) - 43605.9113300493*u(2,Kuv,EU,2)
     
      - 37014.7783251232*u(2,Kuv,IE,2) - 34817.7339901478*u(2,Kuv,PA,2) - 33522.1674876847*u(2,Kuv,KI,2) - 42607.8431372549*u(2,Kov,EU,2) - 40019.6078431373*u(2,Kov,IE,2) - 37823.5294117647*u(2,Kov,PA,2) - 36529.4117647059*u(2,Kov,KI,2)
     
      - 22804.8780487805*u(2,Hsel,EU,2) - 24609.756097561*u(2,Hsel,IE,2) - 22512.1951219512*u(2,Hsel,PA,2) - 25414.6341463415*u(2,Hsel,KI,2) - 24708.7378640777*u(2,Lsel,EU,2) - 27805.8252427184*u(2,Lsel,IE,2) - 22514.5631067961*u(2,Lsel,PA,2)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/19/17 02:05:06 Page 57
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 437


     PROFIT  =E=  Profit is what we gain minus what we spend     
     
      - 24320.3883495146*u(2,Lsel,KI,2) - 44613.5265700483*u(2,Pap,EU,2) - 46033.8164251208*u(2,Pap,IE,2) - 41840.5797101449*u(2,Pap,PA,2) - 46550.7246376812*u(2,Pap,KI,2) - 30415.8415841584*u(3,Mas,EU,2) - 22039.603960396*u(3,Mas,IE,2)
     
      - 23247.5247524753*u(3,Mas,PA,2) - 24059.4059405941*u(3,Mas,KI,2) - 20482.7586206897*u(3,Kos,EU,2) - 20118.2266009852*u(3,Kos,IE,2) - 21330.0492610837*u(3,Kos,PA,2) - 22147.7832512315*u(3,Kos,KI,2) - 86423.645320197*u(3,Kuv,EU,2)
     
      - 72059.1133004926*u(3,Kuv,IE,2) - 67270.9359605911*u(3,Kuv,PA,2) - 64088.6699507389*u(3,Kuv,KI,2) - 84431.3725490196*u(3,Kov,EU,2) - 78078.431372549*u(3,Kov,IE,2) - 73294.1176470588*u(3,Kov,PA,2) - 70117.6470588235*u(3,Kov,KI,2)
     
      - 45219.512195122*u(3,Hsel,EU,2) - 48439.0243902439*u(3,Hsel,IE,2) - 44048.7804878049*u(3,Hsel,PA,2) - 49658.5365853659*u(3,Hsel,KI,2) - 48834.9514563107*u(3,Lsel,EU,2) - 55223.3009708738*u(3,Lsel,IE,2) - 44058.2524271845*u(3,Lsel,PA,2)
     
      - 47281.5533980583*u(3,Lsel,KI,2) - 88454.1062801932*u(3,Pap,EU,2) - 90135.2657004831*u(3,Pap,IE,2) - 81362.3188405797*u(3,Pap,PA,2) - 90202.8985507246*u(3,Pap,KI,2) - 44435.6435643564*u(4,Mas,EU,2) - 30089.1089108911*u(4,Mas,IE,2)
     
      - 31306.9306930693*u(4,Mas,PA,2) - 31633.6633663366*u(4,Mas,KI,2) - 26586.2068965517*u(4,Kos,EU,2) - 24266.0098522168*u(4,Kos,IE,2) - 25492.6108374384*u(4,Kos,PA,2) - 25832.5123152709*u(4,Kos,KI,2) - 128453.201970443*u(4,Kuv,EU,2)
     
      - 105133.004926108*u(4,Kuv,IE,2) - 97359.60591133*u(4,Kuv,PA,2) - 91699.5073891626*u(4,Kuv,KI,2) - 125470.588235294*u(4,Kov,EU,2) - 114176.470588235*u(4,Kov,IE,2) - 106411.764705882*u(4,Kov,PA,2) - 100764.705882353*u(4,Kov,KI,2)
     
      - 67243.9024390244*u(4,Hsel,EU,2) - 71487.8048780488*u(4,Hsel,IE,2) - 64609.756097561*u(4,Hsel,PA,2) - 72731.7073170732*u(4,Hsel,KI,2) - 72378.640776699*u(4,Lsel,EU,2) - 82252.427184466*u(4,Lsel,IE,2) - 64631.0679611651*u(4,Lsel,PA,2)
     
      - 68883.4951456311*u(4,Lsel,KI,2) - 131521.739130435*u(4,Pap,EU,2) - 132304.347826087*u(4,Pap,IE,2) - 118565.217391304*u(4,Pap,PA,2) - 130956.52173913*u(4,Pap,KI,2) - 57663.3663366337*u(5,Mas,EU,2) - 36158.4158415842*u(5,Mas,IE,2)
     
      - 36990.099009901*u(5,Mas,PA,2) - 36237.6237623762*u(5,Mas,KI,2) - 29931.0344827586*u(5,Kos,EU,2) - 24472.9064039409*u(5,Kos,IE,2) - 25320.197044335*u(5,Kos,PA,2) - 24591.1330049261*u(5,Kos,KI,2) - 169694.581280788*u(5,Kuv,EU,2)
     
      - 136236.45320197*u(5,Kuv,IE,2) - 125083.743842365*u(5,Kuv,PA,2) - 116354.679802956*u(5,Kuv,KI,2) - 165725.490196078*u(5,Kov,EU,2) - 148313.725490196*u(5,Kov,IE,2) - 137176.470588235*u(5,Kov,PA,2) - 128470.588235294*u(5,Kov,KI,2)
     
      - 88878.0487804878*u(5,Hsel,EU,2) - 93756.0975609756*u(5,Hsel,IE,2) - 84195.1219512195*u(5,Hsel,PA,2) - 94634.1463414634*u(5,Hsel,KI,2) - 95339.8058252427*u(5,Lsel,EU,2) - 108893.203883495*u(5,Lsel,IE,2) - 84233.0097087379*u(5,Lsel,PA,2)
     
      - 89126.213592233*u(5,Lsel,KI,2) - 173816.425120773*u(5,Pap,EU,2) - 172541.062801932*u(5,Pap,IE,2) - 153449.275362319*u(5,Pap,PA,2) - 168811.594202899*u(5,Pap,KI,2) - 70099.0099009901*u(6,Mas,EU,2) - 40247.5247524752*u(6,Mas,IE,2)
     
      - 40297.0297029703*u(6,Mas,PA,2) - 37871.2871287129*u(6,Mas,KI,2) - 30517.2413793103*u(6,Kos,EU,2) - 20738.9162561576*u(6,Kos,IE,2) - 20812.8078817734*u(6,Kos,PA,2) - 18423.645320197*u(6,Kos,KI,2) - 210147.783251232*u(6,Kuv,EU,2)
     
      - 165369.458128079*u(6,Kuv,IE,2) - 150443.349753695*u(6,Kuv,PA,2) - 138054.187192118*u(6,Kuv,KI,2) - 205196.078431373*u(6,Kov,EU,2) - 180490.196078431*u(6,Kov,IE,2) - 165588.235294118*u(6,Kov,PA,2) - 153235.294117647*u(6,Kov,KI,2)
     
      - 110121.951219512*u(6,Hsel,EU,2) - 115243.902439024*u(6,Hsel,IE,2) - 102804.878048781*u(6,Hsel,PA,2) - 115365.853658537*u(6,Hsel,KI,2) - 117718.446601942*u(6,Lsel,EU,2) - 135145.631067961*u(6,Lsel,IE,2) - 102864.077669903*u(6,Lsel,PA,2)
     
      - 108009.708737864*u(6,Lsel,KI,2) - 215338.164251208*u(6,Pap,EU,2) - 210845.410628019*u(6,Pap,IE,2) - 186014.492753623*u(6,Pap,PA,2) - 203768.115942029*u(6,Pap,KI,2) - 81742.5742574257*u(7,Mas,EU,2) - 42356.4356435644*u(7,Mas,IE,2)
     
      - 41227.7227722772*u(7,Mas,PA,2) - 36534.6534653465*u(7,Mas,KI,2) - 28344.8275862069*u(7,Kos,EU,2) - 13064.039408867*u(7,Kos,IE,2) - 11970.4433497537*u(7,Kos,PA,2) - 7330.04926108374*u(7,Kos,KI,2) - 249812.807881773*u(7,Kuv,EU,2)
     
      - 192532.019704434*u(7,Kuv,IE,2) - 173438.42364532*u(7,Kuv,PA,2) - 156798.02955665*u(7,Kuv,KI,2) - 243882.352941176*u(7,Kov,EU,2) - 210705.882352941*u(7,Kov,IE,2) - 191647.058823529*u(7,Kov,PA,2) - 175058.823529412*u(7,Kov,KI,2)
     
      - 130975.609756098*u(7,Hsel,EU,2) - 135951.219512195*u(7,Hsel,IE,2) - 120439.024390244*u(7,Hsel,PA,2) - 134926.829268293*u(7,Hsel,KI,2) - 139514.563106796*u(7,Lsel,EU,2) - 161009.708737864*u(7,Lsel,IE,2) - 120524.27184466*u(7,Lsel,PA,2)
     
      - 125533.980582524*u(7,Lsel,KI,2) - 256086.956521739*u(7,Pap,EU,2) - 247217.391304348*u(7,Pap,IE,2) - 216260.869565217*u(7,Pap,PA,2) - 235826.086956522*u(7,Pap,KI,2) - 92594.0594059406*u(8,Mas,EU,2) - 42485.1485148515*u(8,Mas,IE,2)
     
      - 39782.1782178218*u(8,Mas,PA,2) - 32227.7227722772*u(8,Mas,KI,2) - 23413.7931034483*u(8,Kos,EU,2) - 1448.27586206896*u(8,Kos,IE,2) + 1206.89655172414*u(8,Kos,PA,2) + 8689.65517241381*u(8,Kos,KI,2) - 288689.655172414*u(8,Kuv,EU,2)
     
      - 217724.137931034*u(8,Kuv,IE,2) - 194068.965517241*u(8,Kuv,PA,2) - 172586.206896552*u(8,Kuv,KI,2) - 281784.31372549*u(8,Kov,EU,2) - 238960.784313725*u(8,Kov,IE,2) - 215352.941176471*u(8,Kov,PA,2) - 193941.176470588*u(8,Kov,KI,2)
     
      - 151439.024390244*u(8,Hsel,EU,2) - 155878.048780488*u(8,Hsel,IE,2) - 137097.56097561*u(8,Hsel,PA,2) - 153317.073170732*u(8,Hsel,KI,2) - 160728.155339806*u(8,Lsel,EU,2) - 186485.436893204*u(8,Lsel,IE,2) - 137213.59223301*u(8,Lsel,PA,2)
     
      - 141699.029126214*u(8,Lsel,KI,2) - 296062.801932367*u(8,Pap,EU,2) - 281657.004830918*u(8,Pap,IE,2) - 244188.405797101*u(8,Pap,PA,2) - 264985.507246377*u(8,Pap,KI,2) - 102653.465346535*u(9,Mas,EU,2) - 40633.6633663366*u(9,Mas,IE,2)
     
      - 35960.396039604*u(9,Mas,PA,2) - 24950.495049505*u(9,Mas,KI,2) - 15724.1379310345*u(9,Kos,EU,2) + 14108.3743842365*u(9,Kos,IE,2) + 18719.2118226601*u(9,Kos,PA,2) + 29635.4679802956*u(9,Kos,KI,2) - 326778.325123153*u(9,Kuv,EU,2)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/19/17 02:05:06 Page 58
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 437


     PROFIT  =E=  Profit is what we gain minus what we spend     
     
      - 240945.812807882*u(9,Kuv,IE,2) - 212334.975369458*u(9,Kuv,PA,2) - 185418.719211823*u(9,Kuv,KI,2) - 318901.960784314*u(9,Kov,EU,2) - 265254.901960784*u(9,Kov,IE,2) - 236705.882352941*u(9,Kov,PA,2) - 209882.352941176*u(9,Kov,KI,2)
     
      - 171512.195121951*u(9,Hsel,EU,2) - 175024.390243902*u(9,Hsel,IE,2) - 152780.487804878*u(9,Hsel,PA,2) - 170536.585365854*u(9,Hsel,KI,2) - 181359.223300971*u(9,Lsel,EU,2) - 211572.815533981*u(9,Lsel,IE,2) - 152932.038834951*u(9,Lsel,PA,2)
     
      - 156504.854368932*u(9,Lsel,KI,2) - 335265.700483092*u(9,Pap,EU,2) - 314164.251207729*u(9,Pap,IE,2) - 269797.101449275*u(9,Pap,PA,2) - 291246.376811594*u(9,Pap,KI,2) - 111920.792079208*u(10,Mas,EU,2) - 36801.9801980198*u(10,Mas,IE,2)
     
      - 29762.3762376238*u(10,Mas,PA,2) - 14702.9702970297*u(10,Mas,KI,2) - 5275.86206896551*u(10,Kos,EU,2) + 33605.9113300493*u(10,Kos,IE,2) + 40566.5024630542*u(10,Kos,PA,2) + 55507.3891625616*u(10,Kos,KI,2) - 364078.81773399*u(10,Kuv,EU,2)
     
      - 262197.044334975*u(10,Kuv,IE,2) - 228236.45320197*u(10,Kuv,PA,2) - 195295.566502463*u(10,Kuv,KI,2) - 355235.294117647*u(10,Kov,EU,2) - 289588.235294118*u(10,Kov,IE,2) - 255705.882352941*u(10,Kov,PA,2) - 222882.352941176*u(10,Kov,KI,2)
     
      - 191195.12195122*u(10,Hsel,EU,2) - 193390.243902439*u(10,Hsel,IE,2) - 167487.804878049*u(10,Hsel,PA,2) - 186585.365853659*u(10,Hsel,KI,2) - 201407.766990291*u(10,Lsel,EU,2) - 236271.844660194*u(10,Lsel,IE,2) - 167679.611650485*u(10,Lsel,PA,2)
     
      - 169951.45631068*u(10,Lsel,KI,2) - 373695.652173913*u(10,Pap,EU,2) - 344739.130434783*u(10,Pap,IE,2) - 293086.956521739*u(10,Pap,PA,2) - 314608.695652174*u(10,Pap,KI,2) - 120396.03960396*u(11,Mas,EU,2) - 30990.099009901*u(11,Mas,IE,2)
     
      - 21188.1188118812*u(11,Mas,PA,2) - 1485.14851485149*u(11,Mas,KI,2) + 7931.03448275864*u(11,Kos,EU,2) + 57044.3349753695*u(11,Kos,IE,2) + 66748.7684729064*u(11,Kos,PA,2) + 86305.4187192119*u(11,Kos,KI,2) - 400591.133004926*u(11,Kuv,EU,2)
     
      - 281477.832512315*u(11,Kuv,IE,2) - 241773.399014778*u(11,Kuv,PA,2) - 202216.748768473*u(11,Kuv,KI,2) - 390784.31372549*u(11,Kov,EU,2) - 311960.784313725*u(11,Kov,IE,2) - 272352.941176471*u(11,Kov,PA,2) - 232941.176470588*u(11,Kov,KI,2)
     
      - 210487.804878049*u(11,Hsel,EU,2) - 210975.609756098*u(11,Hsel,IE,2) - 181219.512195122*u(11,Hsel,PA,2) - 201463.414634146*u(11,Hsel,KI,2) - 220873.786407767*u(11,Lsel,EU,2) - 260582.524271845*u(11,Lsel,IE,2) - 181456.310679612*u(11,Lsel,PA,2)
     
      - 182038.834951456*u(11,Lsel,KI,2) - 411352.657004831*u(11,Pap,EU,2) - 373381.642512077*u(11,Pap,IE,2) - 314057.971014493*u(11,Pap,PA,2) - 335072.463768116*u(11,Pap,KI,2) - 128079.207920792*u(12,Mas,EU,2) - 23198.0198019802*u(12,Mas,IE,2)
     
      - 10237.6237623763*u(12,Mas,PA,2) + 14702.9702970297*u(12,Mas,KI,2) + 23896.5517241379*u(12,Kos,EU,2) + 84423.6453201971*u(12,Kos,IE,2) + 97266.0098522168*u(12,Kos,PA,2) + 122029.556650246*u(12,Kos,KI,2) - 436315.270935961*u(12,Kuv,EU,2)
     
      - 298788.177339902*u(12,Kuv,IE,2) - 252945.812807882*u(12,Kuv,PA,2) - 206182.266009852*u(12,Kuv,KI,2) - 425549.019607843*u(12,Kov,EU,2) - 332372.549019608*u(12,Kov,IE,2) - 286647.058823529*u(12,Kov,PA,2) - 240058.823529412*u(12,Kov,KI,2)
     
      - 229390.243902439*u(12,Hsel,EU,2) - 227780.487804878*u(12,Hsel,IE,2) - 193975.609756098*u(12,Hsel,PA,2) - 215170.731707317*u(12,Hsel,KI,2) - 239757.281553398*u(12,Lsel,EU,2) - 284504.854368932*u(12,Lsel,IE,2) - 194262.13592233*u(12,Lsel,PA,2)
     
      - 192766.990291262*u(12,Lsel,KI,2) - 448236.714975845*u(12,Pap,EU,2) - 400091.787439613*u(12,Pap,IE,2) - 332710.144927536*u(12,Pap,PA,2) - 352637.68115942*u(12,Pap,KI,2) - 134970.297029703*u(13,Mas,EU,2) - 13425.7425742574*u(13,Mas,IE,2)
     
      + 3089.10891089105*u(13,Mas,PA,2) + 33861.3861386139*u(13,Mas,KI,2) + 42620.6896551724*u(13,Kos,EU,2) + 115743.842364532*u(13,Kos,IE,2) + 132118.226600985*u(13,Kos,PA,2) + 162679.802955665*u(13,Kos,KI,2) - 471251.231527094*u(13,Kuv,EU,2)
     
      - 314128.078817734*u(13,Kuv,IE,2) - 261753.694581281*u(13,Kuv,PA,2) - 207192.118226601*u(13,Kuv,KI,2) - 459529.411764706*u(13,Kov,EU,2) - 350823.529411765*u(13,Kov,IE,2) - 298588.235294118*u(13,Kov,PA,2) - 244235.294117647*u(13,Kov,KI,2)
     
      - 247902.43902439*u(13,Hsel,EU,2) - 243804.87804878*u(13,Hsel,IE,2) - 205756.097560976*u(13,Hsel,PA,2) - 227707.317073171*u(13,Hsel,KI,2) - 258058.252427184*u(13,Lsel,EU,2) - 308038.834951456*u(13,Lsel,IE,2) - 206097.087378641*u(13,Lsel,PA,2)
     
      - 202135.922330097*u(13,Lsel,KI,2) - 484347.826086957*u(13,Pap,EU,2) - 424869.565217391*u(13,Pap,IE,2) - 349043.47826087*u(13,Pap,PA,2) - 367304.347826087*u(13,Pap,KI,2) - 141069.306930693*u(14,Mas,EU,2) - 1673.26732673266*u(14,Mas,IE,2)
     
      + 18792.0792079208*u(14,Mas,PA,2) + 55990.099009901*u(14,Mas,KI,2) + 64103.4482758621*u(14,Kos,EU,2) + 151004.926108374*u(14,Kos,IE,2) + 171305.418719212*u(14,Kos,PA,2) + 208256.157635468*u(14,Kos,KI,2) - 505399.014778325*u(14,Kuv,EU,2)
     
      - 327497.536945813*u(14,Kuv,IE,2) - 268197.044334975*u(14,Kuv,PA,2) - 205246.305418719*u(14,Kuv,KI,2) - 492725.490196078*u(14,Kov,EU,2) - 367313.725490196*u(14,Kov,IE,2) - 308176.470588235*u(14,Kov,PA,2) - 245470.588235294*u(14,Kov,KI,2)
     
      - 266024.390243903*u(14,Hsel,EU,2) - 259048.780487805*u(14,Hsel,IE,2) - 216560.975609756*u(14,Hsel,PA,2) - 239073.170731707*u(14,Hsel,KI,2) - 275776.699029126*u(14,Lsel,EU,2) - 331184.466019418*u(14,Lsel,IE,2) - 216961.165048544*u(14,Lsel,PA,2)
     
      - 210145.631067961*u(14,Lsel,KI,2) - 519685.990338164*u(14,Pap,EU,2) - 447714.975845411*u(14,Pap,IE,2) - 363057.971014493*u(14,Pap,PA,2) - 379072.463768116*u(14,Pap,KI,2) - 146376.237623762*u(15,Mas,EU,2) + 12059.4059405941*u(15,Mas,IE,2)
     
      + 36871.2871287128*u(15,Mas,PA,2) + 81089.1089108911*u(15,Mas,KI,2) + 88344.827586207*u(15,Kos,EU,2) + 190206.896551724*u(15,Kos,IE,2) + 214827.586206897*u(15,Kos,PA,2) + 258758.620689655*u(15,Kos,KI,2) - 538758.620689655*u(15,Kuv,EU,2)
     
      - 338896.551724138*u(15,Kuv,IE,2) - 272275.862068965*u(15,Kuv,PA,2) - 200344.827586207*u(15,Kuv,KI,2) - 525137.254901961*u(15,Kov,EU,2) - 381843.137254902*u(15,Kov,IE,2) - 315411.764705882*u(15,Kov,PA,2) - 243764.705882353*u(15,Kov,KI,2)
     
      - 283756.097560976*u(15,Hsel,EU,2) - 273512.195121951*u(15,Hsel,IE,2) - 226390.243902439*u(15,Hsel,PA,2) - 249268.292682927*u(15,Hsel,KI,2) - 292912.621359223*u(15,Lsel,EU,2) - 353941.747572816*u(15,Lsel,IE,2) - 226854.368932039*u(15,Lsel,PA,2)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/19/17 02:05:06 Page 59
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 437


     PROFIT  =E=  Profit is what we gain minus what we spend     
     
      - 216796.116504854*u(15,Lsel,KI,2) - 554251.207729469*u(15,Pap,EU,2) - 468628.019323671*u(15,Pap,IE,2) - 374753.623188406*u(15,Pap,PA,2) - 387942.028985507*u(15,Pap,KI,2) - 150891.089108911*u(16,Mas,EU,2) + 27772.2772277228*u(16,Mas,IE,2)
     
      + 57326.7326732673*u(16,Mas,PA,2) + 109158.415841584*u(16,Mas,KI,2) + 115344.827586207*u(16,Kos,EU,2) + 233349.753694581*u(16,Kos,IE,2) + 262684.729064039*u(16,Kos,PA,2) + 314187.192118227*u(16,Kos,KI,2) - 571330.049261084*u(16,Kuv,EU,2)
     
      - 348325.123152709*u(16,Kuv,IE,2) - 273990.147783251*u(16,Kuv,PA,2) - 192487.684729064*u(16,Kuv,KI,2) - 556764.705882353*u(16,Kov,EU,2) - 394411.764705882*u(16,Kov,IE,2) - 320294.117647059*u(16,Kov,PA,2) - 239117.647058824*u(16,Kov,KI,2)
     
      - 301097.56097561*u(16,Hsel,EU,2) - 287195.12195122*u(16,Hsel,IE,2) - 235243.902439024*u(16,Hsel,PA,2) - 258292.682926829*u(16,Hsel,KI,2) - 309466.019417476*u(16,Lsel,EU,2) - 376310.679611651*u(16,Lsel,IE,2) - 235776.699029126*u(16,Lsel,PA,2)
     
      - 222087.378640777*u(16,Lsel,KI,2) - 588043.47826087*u(16,Pap,EU,2) - 487608.695652174*u(16,Pap,IE,2) - 384130.434782609*u(16,Pap,PA,2) - 393913.043478261*u(16,Pap,KI,2) - 154613.861386139*u(17,Mas,EU,2) + 45465.3465346535*u(17,Mas,IE,2)
     
      + 80158.4158415841*u(17,Mas,PA,2) + 140198.01980198*u(17,Mas,KI,2) + 145103.448275862*u(17,Kos,EU,2) + 280433.497536946*u(17,Kos,IE,2) + 314876.84729064*u(17,Kos,PA,2) + 374541.871921182*u(17,Kos,KI,2) - 603113.300492611*u(17,Kuv,EU,2)
     
      - 355783.251231527*u(17,Kuv,IE,2) - 273339.901477832*u(17,Kuv,PA,2) - 181674.876847291*u(17,Kuv,KI,2) - 587607.843137255*u(17,Kov,EU,2) - 405019.607843137*u(17,Kov,IE,2) - 322823.529411765*u(17,Kov,PA,2) - 231529.411764706*u(17,Kov,KI,2)
     
      - 318048.780487805*u(17,Hsel,EU,2) - 300097.56097561*u(17,Hsel,IE,2) - 243121.951219512*u(17,Hsel,PA,2) - 266146.341463415*u(17,Hsel,KI,2) - 325436.893203883*u(17,Lsel,EU,2) - 398291.262135922*u(17,Lsel,IE,2) - 243728.155339806*u(17,Lsel,PA,2)
     
      - 226019.417475728*u(17,Lsel,KI,2) - 621062.801932367*u(17,Pap,EU,2) - 504657.004830918*u(17,Pap,IE,2) - 391188.405797101*u(17,Pap,PA,2) - 396985.507246377*u(17,Pap,KI,2) - 157544.554455446*u(18,Mas,EU,2) + 65138.6138613861*u(18,Mas,IE,2)
     
      + 105366.336633663*u(18,Mas,PA,2) + 174207.920792079*u(18,Mas,KI,2) + 177620.689655172*u(18,Kos,EU,2) + 331458.128078818*u(18,Kos,IE,2) + 371403.9408867*u(18,Kos,PA,2) + 439822.660098522*u(18,Kos,KI,2) - 634108.374384237*u(18,Kuv,EU,2)
     
      - 361270.935960591*u(18,Kuv,IE,2) - 270325.123152709*u(18,Kuv,PA,2) - 167906.403940887*u(18,Kuv,KI,2) - 617666.666666667*u(18,Kov,EU,2) - 413666.666666667*u(18,Kov,IE,2) - 323000*u(18,Kov,PA,2) - 221000*u(18,Kov,KI,2)
     
      - 334609.756097561*u(18,Hsel,EU,2) - 312219.512195122*u(18,Hsel,IE,2) - 250024.390243902*u(18,Hsel,PA,2) - 272829.268292683*u(18,Hsel,KI,2) - 340825.242718447*u(18,Lsel,EU,2) - 419883.495145631*u(18,Lsel,IE,2) - 250708.737864078*u(18,Lsel,PA,2)
     
      - 228592.233009709*u(18,Lsel,KI,2) - 653309.178743961*u(18,Pap,EU,2) - 519772.946859903*u(18,Pap,IE,2) - 395927.536231884*u(18,Pap,PA,2) - 397159.420289855*u(18,Pap,KI,2) - 159683.168316832*u(19,Mas,EU,2) + 86792.0792079208*u(19,Mas,IE,2)
     
      + 132950.495049505*u(19,Mas,PA,2) + 211188.118811881*u(19,Mas,KI,2) + 212896.551724138*u(19,Kos,EU,2) + 386423.645320197*u(19,Kos,IE,2) + 432266.009852217*u(19,Kos,PA,2) + 510029.556650246*u(19,Kos,KI,2) - 664315.270935961*u(19,Kuv,EU,2)
     
      - 364788.177339901*u(19,Kuv,IE,2) - 264945.812807882*u(19,Kuv,PA,2) - 151182.266009852*u(19,Kuv,KI,2) - 646941.176470588*u(19,Kov,EU,2) - 420352.94117647*u(19,Kov,IE,2) - 320823.529411765*u(19,Kov,PA,2) - 207529.411764706*u(19,Kov,KI,2)
     
      - 350780.487804878*u(19,Hsel,EU,2) - 323560.975609756*u(19,Hsel,IE,2) - 255951.219512195*u(19,Hsel,PA,2) - 278341.463414634*u(19,Hsel,KI,2) - 355631.067961165*u(19,Lsel,EU,2) - 441087.378640777*u(19,Lsel,IE,2) - 256718.446601942*u(19,Lsel,PA,2)
     
      - 229805.825242718*u(19,Lsel,KI,2) - 684782.608695652*u(19,Pap,EU,2) - 532956.52173913*u(19,Pap,IE,2) - 398347.826086956*u(19,Pap,PA,2) - 394434.782608696*u(19,Pap,KI,2) - 161029.702970297*u(20,Mas,EU,2) + 110425.742574257*u(20,Mas,IE,2)
     
      + 162910.891089109*u(20,Mas,PA,2) + 251138.613861386*u(20,Mas,KI,2) + 250931.034482759*u(20,Kos,EU,2) + 445330.049261084*u(20,Kos,IE,2) + 497463.054187192*u(20,Kos,PA,2) + 585162.561576355*u(20,Kos,KI,2) - 693733.990147783*u(20,Kuv,EU,2)
     
      - 366334.975369458*u(20,Kuv,IE,2) - 257201.97044335*u(20,Kuv,PA,2) - 131502.463054187*u(20,Kuv,KI,2) - 675431.37254902*u(20,Kov,EU,2) - 425078.431372549*u(20,Kov,IE,2) - 316294.117647059*u(20,Kov,PA,2) - 191117.647058823*u(20,Kov,KI,2)
     
      - 366560.975609756*u(20,Hsel,EU,2) - 334121.951219512*u(20,Hsel,IE,2) - 260902.43902439*u(20,Hsel,PA,2) - 282682.926829268*u(20,Hsel,KI,2) - 369854.368932039*u(20,Lsel,EU,2) - 461902.912621359*u(20,Lsel,IE,2) - 261757.281553398*u(20,Lsel,PA,2)
     
      - 229660.194174757*u(20,Lsel,KI,2) - 715483.09178744*u(20,Pap,EU,2) - 544207.729468599*u(20,Pap,IE,2) - 398449.275362319*u(20,Pap,PA,2) - 388811.594202899*u(20,Pap,KI,2) - 161584.158415842*u(21,Mas,EU,2) + 136039.603960396*u(21,Mas,IE,2)
     
      + 195247.524752475*u(21,Mas,PA,2) + 294059.405940594*u(21,Mas,KI,2) + 291724.137931035*u(21,Kos,EU,2) + 508177.339901478*u(21,Kos,IE,2) + 566995.073891626*u(21,Kos,PA,2) + 665221.674876847*u(21,Kos,KI,2) - 722364.532019705*u(21,Kuv,EU,2)
     
      - 365911.330049261*u(21,Kuv,IE,2) - 247093.596059113*u(21,Kuv,PA,2) - 108866.995073892*u(21,Kuv,KI,2) - 703137.254901961*u(21,Kov,EU,2) - 427843.137254902*u(21,Kov,IE,2) - 309411.764705882*u(21,Kov,PA,2) - 171764.705882353*u(21,Kov,KI,2)
     
      - 381951.219512195*u(21,Hsel,EU,2) - 343902.43902439*u(21,Hsel,IE,2) - 264878.048780488*u(21,Hsel,PA,2) - 285853.658536585*u(21,Hsel,KI,2) - 383495.145631068*u(21,Lsel,EU,2) - 482330.097087379*u(21,Lsel,IE,2) - 265825.242718447*u(21,Lsel,PA,2)
     
      - 228155.339805825*u(21,Lsel,KI,2) - 745410.628019324*u(21,Pap,EU,2) - 553526.570048309*u(21,Pap,IE,2) - 396231.884057971*u(21,Pap,PA,2) - 380289.855072464*u(21,Pap,KI,2) - 161346.534653465*u(22,Mas,EU,2) + 163633.663366337*u(22,Mas,IE,2)
     
      + 229960.396039604*u(22,Mas,PA,2) + 339950.495049505*u(22,Mas,KI,2) + 335275.862068966*u(22,Kos,EU,2) + 574965.51724138*u(22,Kos,IE,2) + 640862.068965517*u(22,Kos,PA,2) + 750206.896551724*u(22,Kos,KI,2) - 750206.896551724*u(22,Kuv,EU,2)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/19/17 02:05:06 Page 60
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 437


     PROFIT  =E=  Profit is what we gain minus what we spend     
     
      - 363517.24137931*u(22,Kuv,IE,2) - 234620.689655172*u(22,Kuv,PA,2) - 83275.8620689654*u(22,Kuv,KI,2) - 730058.823529412*u(22,Kov,EU,2) - 428647.058823529*u(22,Kov,IE,2) - 300176.470588235*u(22,Kov,PA,2) - 149470.588235294*u(22,Kov,KI,2)
     
      - 396951.219512195*u(22,Hsel,EU,2) - 352902.43902439*u(22,Hsel,IE,2) - 267878.048780488*u(22,Hsel,PA,2) - 287853.658536585*u(22,Hsel,KI,2) - 396553.398058252*u(22,Lsel,EU,2) - 502368.932038835*u(22,Lsel,IE,2) - 268922.330097087*u(22,Lsel,PA,2)
     
      - 225291.262135922*u(22,Lsel,KI,2) - 774565.217391304*u(22,Pap,EU,2) - 560913.043478261*u(22,Pap,IE,2) - 391695.652173913*u(22,Pap,PA,2) - 368869.565217391*u(22,Pap,KI,2) - 160316.831683168*u(23,Mas,EU,2) + 193207.920792079*u(23,Mas,IE,2)
     
      + 267049.504950495*u(23,Mas,PA,2) + 388811.881188119*u(23,Mas,KI,2) + 381586.206896552*u(23,Kos,EU,2) + 645694.581280788*u(23,Kos,IE,2) + 719064.039408867*u(23,Kos,PA,2) + 840118.226600985*u(23,Kos,KI,2) - 777261.083743842*u(23,Kuv,EU,2)
     
      - 359152.709359606*u(23,Kuv,IE,2) - 219783.251231527*u(23,Kuv,PA,2) - 54729.0640394088*u(23,Kuv,KI,2) - 756196.078431373*u(23,Kov,EU,2) - 427490.196078431*u(23,Kov,IE,2) - 288588.235294118*u(23,Kov,PA,2) - 124235.294117647*u(23,Kov,KI,2)
     
      - 411560.975609756*u(23,Hsel,EU,2) - 361121.951219512*u(23,Hsel,IE,2) - 269902.43902439*u(23,Hsel,PA,2) - 288682.926829268*u(23,Hsel,KI,2) - 409029.126213592*u(23,Lsel,EU,2) - 522019.417475728*u(23,Lsel,IE,2) - 271048.54368932*u(23,Lsel,PA,2)
     
      - 221067.961165049*u(23,Lsel,KI,2) - 802946.859903382*u(23,Pap,EU,2) - 566367.149758454*u(23,Pap,IE,2) - 384840.579710145*u(23,Pap,PA,2) - 354550.724637681*u(23,Pap,KI,2) - 0.19*b(Mat,2) - 0.15*b(Kut,2) - 0.12*b(Kot,2) - 0.18*b(Mak,2)
     
      - 0.15*b(Kuk,2) - 0.15*b(Kok,2) + Pr(2) + 0.1*Cap(SAW,3) + 0.3*Cap(PLY,3) + 0.5*Cap(SPULP,3) + 0.5*Cap(HPULP,3) + 0.7*Cap(PAPM,3) =E= 0 ; (LHS = 0)
     
PROFIT(3)..  0.642*y(Mas,3) + 0.592*y(Kus,3) + 0.542*y(Kos,3) + 2.792*y(Kuv,3) + 2.892*y(Kov,3) + 1.32*y(Hsel,3) + 1.3*y(Lsel,3) + 2.4*y(Pap,3) + 0.19*s(Mat,3) + 0.15*s(Kut,3) + 0.12*s(Kot,3) + 0.18*s(Mak,3) + 0.15*s(Kuk,3) + 0.15*s(Kok,3)
     
      + 2000*r(2,Mat,3) + 1550*r(2,Kut,3) + 1500*r(2,Kot,3) + 1820*r(2,Mak,3) + 1530*r(2,Kuk,3) + 1520*r(2,Kok,3) + 4200*r(3,Mat,3) + 3200*r(3,Kut,3) + 3600*r(3,Kot,3) + 3680*r(3,Mak,3) + 3120*r(3,Kuk,3) + 3080*r(3,Kok,3) + 6600*r(4,Mat,3)
     
      + 4950*r(4,Kut,3) + 6300*r(4,Kot,3) + 5580*r(4,Mak,3) + 4770*r(4,Kuk,3) + 4680*r(4,Kok,3) + 9200*r(5,Mat,3) + 6800*r(5,Kut,3) + 9600*r(5,Kot,3) + 7520*r(5,Mak,3) + 6480*r(5,Kuk,3) + 6320*r(5,Kok,3) + 12000*r(6,Mat,3) + 8750*r(6,Kut,3)
     
      + 13500*r(6,Kot,3) + 9500*r(6,Mak,3) + 8250*r(6,Kuk,3) + 8000*r(6,Kok,3) + 15000*r(7,Mat,3) + 10800*r(7,Kut,3) + 18000*r(7,Kot,3) + 11520*r(7,Mak,3) + 10080*r(7,Kuk,3) + 9720*r(7,Kok,3) + 18200*r(8,Mat,3) + 12950*r(8,Kut,3) + 23100*r(8,Kot,3)
     
      + 13580*r(8,Mak,3) + 11970*r(8,Kuk,3) + 11480*r(8,Kok,3) + 21600*r(9,Mat,3) + 15200*r(9,Kut,3) + 28800*r(9,Kot,3) + 15680*r(9,Mak,3) + 13920*r(9,Kuk,3) + 13280*r(9,Kok,3) + 25200*r(10,Mat,3) + 17550*r(10,Kut,3) + 35100*r(10,Kot,3)
     
      + 17820*r(10,Mak,3) + 15930*r(10,Kuk,3) + 15120*r(10,Kok,3) + 29000*r(11,Mat,3) + 20000*r(11,Kut,3) + 42000*r(11,Kot,3) + 20000*r(11,Mak,3) + 18000*r(11,Kuk,3) + 17000*r(11,Kok,3) + 33000*r(12,Mat,3) + 22550*r(12,Kut,3) + 49500*r(12,Kot,3)
     
      + 22220*r(12,Mak,3) + 20130*r(12,Kuk,3) + 18920*r(12,Kok,3) + 37200*r(13,Mat,3) + 25200*r(13,Kut,3) + 57600*r(13,Kot,3) + 24480*r(13,Mak,3) + 22320*r(13,Kuk,3) + 20880*r(13,Kok,3) + 41600*r(14,Mat,3) + 27950*r(14,Kut,3) + 66300*r(14,Kot,3)
     
      + 26780*r(14,Mak,3) + 24570*r(14,Kuk,3) + 22880*r(14,Kok,3) + 46200*r(15,Mat,3) + 30800*r(15,Kut,3) + 75600*r(15,Kot,3) + 29120*r(15,Mak,3) + 26880*r(15,Kuk,3) + 24920*r(15,Kok,3) + 51000*r(16,Mat,3) + 33750*r(16,Kut,3) + 85500*r(16,Kot,3)
     
      + 31500*r(16,Mak,3) + 29250*r(16,Kuk,3) + 27000*r(16,Kok,3) + 56000*r(17,Mat,3) + 36800*r(17,Kut,3) + 96000*r(17,Kot,3) + 33920*r(17,Mak,3) + 31680*r(17,Kuk,3) + 29120*r(17,Kok,3) + 61200*r(18,Mat,3) + 39950*r(18,Kut,3) + 107100*r(18,Kot,3)
     
      + 36380*r(18,Mak,3) + 34170*r(18,Kuk,3) + 31280*r(18,Kok,3) + 66600*r(19,Mat,3) + 43200*r(19,Kut,3) + 118800*r(19,Kot,3) + 38880*r(19,Mak,3) + 36720*r(19,Kuk,3) + 33480*r(19,Kok,3) + 72200*r(20,Mat,3) + 46550*r(20,Kut,3) + 131100*r(20,Kot,3)
     
      + 41420*r(20,Mak,3) + 39330*r(20,Kuk,3) + 35720*r(20,Kok,3) + 78000*r(21,Mat,3) + 50000*r(21,Kut,3) + 144000*r(21,Kot,3) + 44000*r(21,Mak,3) + 42000*r(21,Kuk,3) + 38000*r(21,Kok,3) + 84000*r(22,Mat,3) + 53550*r(22,Kut,3) + 157500*r(22,Kot,3)
     
      + 46620*r(22,Mak,3) + 44730*r(22,Kuk,3) + 40320*r(22,Kok,3) + 90200*r(23,Mat,3) + 57200*r(23,Kut,3) + 171600*r(23,Kot,3) + 49280*r(23,Mak,3) + 47520*r(23,Kuk,3) + 42680*r(23,Kok,3) + 96600*r(24,Mat,3) + 60950*r(24,Kut,3) + 186300*r(24,Kot,3)
     
      + 51980*r(24,Mak,3) + 50370*r(24,Kuk,3) + 45080*r(24,Kok,3) + 103200*r(25,Mat,3) + 64800*r(25,Kut,3) + 201600*r(25,Kot,3) + 54720*r(25,Mak,3) + 53280*r(25,Kuk,3) + 47520*r(25,Kok,3) + 110000*r(26,Mat,3) + 68750*r(26,Kut,3) + 217500*r(26,Kot,3)
     
      + 57500*r(26,Mak,3) + 56250*r(26,Kuk,3) + 50000*r(26,Kok,3) + 117000*r(27,Mat,3) + 72800*r(27,Kut,3) + 234000*r(27,Kot,3) + 60320*r(27,Mak,3) + 59280*r(27,Kuk,3) + 52520*r(27,Kok,3) + 124200*r(28,Mat,3) + 76950*r(28,Kut,3) + 251100*r(28,Kot,3)
     
      + 63180*r(28,Mak,3) + 62370*r(28,Kuk,3) + 55080*r(28,Kok,3) + 131600*r(29,Mat,3) + 81200*r(29,Kut,3) + 268800*r(29,Kot,3) + 66080*r(29,Mak,3) + 65520*r(29,Kuk,3) + 57680*r(29,Kok,3) + 139200*r(30,Mat,3) + 85550*r(30,Kut,3) + 287100*r(30,Kot,3)
     
      + 69020*r(30,Mak,3) + 68730*r(30,Kuk,3) + 60320*r(30,Kok,3) + 147000*r(31,Mat,3) + 90000*r(31,Kut,3) + 306000*r(31,Kot,3) + 72000*r(31,Mak,3) + 72000*r(31,Kuk,3) + 63000*r(31,Kok,3) + 155000*r(32,Mat,3) + 94550*r(32,Kut,3) + 325500*r(32,Kot,3)
     
      + 75020*r(32,Mak,3) + 75330*r(32,Kuk,3) + 65720*r(32,Kok,3) + 163200*r(33,Mat,3) + 99200*r(33,Kut,3) + 345600*r(33,Kot,3) + 78080*r(33,Mak,3) + 78720*r(33,Kuk,3) + 68480*r(33,Kok,3) + 171600*r(34,Mat,3) + 103950*r(34,Kut,3) + 366300*r(34,Kot,3)
     
      + 81180*r(34,Mak,3) + 82170*r(34,Kuk,3) + 71280*r(34,Kok,3) + 180200*r(35,Mat,3) + 108800*r(35,Kut,3) + 387600*r(35,Kot,3) + 84320*r(35,Mak,3) + 85680*r(35,Kuk,3) + 74120*r(35,Kok,3) + 189000*r(36,Mat,3) + 113750*r(36,Kut,3) + 409500*r(36,Kot,3)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/19/17 02:05:06 Page 61
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 437


     PROFIT  =E=  Profit is what we gain minus what we spend     
     
      + 87500*r(36,Mak,3) + 89250*r(36,Kuk,3) + 77000*r(36,Kok,3) + 198000*r(37,Mat,3) + 118800*r(37,Kut,3) + 432000*r(37,Kot,3) + 90720*r(37,Mak,3) + 92880*r(37,Kuk,3) + 79920*r(37,Kok,3) + 207200*r(38,Mat,3) + 123950*r(38,Kut,3) + 455100*r(38,Kot,3)
     
      + 93980*r(38,Mak,3) + 96570*r(38,Kuk,3) + 82880*r(38,Kok,3) + 216600*r(39,Mat,3) + 129200*r(39,Kut,3) + 478800*r(39,Kot,3) + 97280*r(39,Mak,3) + 100320*r(39,Kuk,3) + 85880*r(39,Kok,3) + 226200*r(40,Mat,3) + 134550*r(40,Kut,3) + 503100*r(40,Kot,3)
     
      + 100620*r(40,Mak,3) + 104130*r(40,Kuk,3) + 88920*r(40,Kok,3) + 236000*r(41,Mat,3) + 140000*r(41,Kut,3) + 528000*r(41,Kot,3) + 104000*r(41,Mak,3) + 108000*r(41,Kuk,3) + 92000*r(41,Kok,3) + 246000*r(42,Mat,3) + 145550*r(42,Kut,3) + 553500*r(42,Kot,3)
     
      + 107420*r(42,Mak,3) + 111930*r(42,Kuk,3) + 95120*r(42,Kok,3) + 256200*r(43,Mat,3) + 151200*r(43,Kut,3) + 579600*r(43,Kot,3) + 110880*r(43,Mak,3) + 115920*r(43,Kuk,3) + 98280*r(43,Kok,3) + 266600*r(44,Mat,3) + 156950*r(44,Kut,3) + 606300*r(44,Kot,3)
     
      + 114380*r(44,Mak,3) + 119970*r(44,Kuk,3) + 101480*r(44,Kok,3) + 277200*r(45,Mat,3) + 162800*r(45,Kut,3) + 633600*r(45,Kot,3) + 117920*r(45,Mak,3) + 124080*r(45,Kuk,3) + 104720*r(45,Kok,3) + 288000*r(46,Mat,3) + 168750*r(46,Kut,3)
     
      + 661500*r(46,Kot,3) + 121500*r(46,Mak,3) + 128250*r(46,Kuk,3) + 108000*r(46,Kok,3) + 299000*r(47,Mat,3) + 174800*r(47,Kut,3) + 690000*r(47,Kot,3) + 125120*r(47,Mak,3) + 132480*r(47,Kuk,3) + 111320*r(47,Kok,3) + 310200*r(48,Mat,3)
     
      + 180950*r(48,Kut,3) + 719100*r(48,Kot,3) + 128780*r(48,Mak,3) + 136770*r(48,Kuk,3) + 114680*r(48,Kok,3) + 321600*r(49,Mat,3) + 187200*r(49,Kut,3) + 748800*r(49,Kot,3) + 132480*r(49,Mak,3) + 141120*r(49,Kuk,3) + 118080*r(49,Kok,3)
     
      + 333200*r(50,Mat,3) + 193550*r(50,Kut,3) + 779100*r(50,Kot,3) + 136220*r(50,Mak,3) + 145530*r(50,Kuk,3) + 121520*r(50,Kok,3) + 345000*r(51,Mat,3) + 200000*r(51,Kut,3) + 810000*r(51,Kot,3) + 140000*r(51,Mak,3) + 150000*r(51,Kuk,3)
     
      + 125000*r(51,Kok,3) + 357000*r(52,Mat,3) + 206550*r(52,Kut,3) + 841500*r(52,Kot,3) + 143820*r(52,Mak,3) + 154530*r(52,Kuk,3) + 128520*r(52,Kok,3) + 369200*r(53,Mat,3) + 213200*r(53,Kut,3) + 873600*r(53,Kot,3) + 147680*r(53,Mak,3)
     
      + 159120*r(53,Kuk,3) + 132080*r(53,Kok,3) + 381600*r(54,Mat,3) + 219950*r(54,Kut,3) + 906300*r(54,Kot,3) + 151580*r(54,Mak,3) + 163770*r(54,Kuk,3) + 135680*r(54,Kok,3) + 394200*r(55,Mat,3) + 226800*r(55,Kut,3) + 939600*r(55,Kot,3)
     
      + 155520*r(55,Mak,3) + 168480*r(55,Kuk,3) + 139320*r(55,Kok,3) + 407000*r(56,Mat,3) + 233750*r(56,Kut,3) + 973500*r(56,Kot,3) + 159500*r(56,Mak,3) + 173250*r(56,Kuk,3) + 143000*r(56,Kok,3) + 420000*r(57,Mat,3) + 240800*r(57,Kut,3)
     
      + 1008000*r(57,Kot,3) + 163520*r(57,Mak,3) + 178080*r(57,Kuk,3) + 146720*r(57,Kok,3) + 433200*r(58,Mat,3) + 247950*r(58,Kut,3) + 1043100*r(58,Kot,3) + 167580*r(58,Mak,3) + 182970*r(58,Kuk,3) + 150480*r(58,Kok,3) + 446600*r(59,Mat,3)
     
      + 255200*r(59,Kut,3) + 1078800*r(59,Kot,3) + 171680*r(59,Mak,3) + 187920*r(59,Kuk,3) + 154280*r(59,Kok,3) + 460200*r(60,Mat,3) + 262550*r(60,Kut,3) + 1115100*r(60,Kot,3) + 175820*r(60,Mak,3) + 192930*r(60,Kuk,3) + 158120*r(60,Kok,3)
     
      + 474000*r(61,Mat,3) + 270000*r(61,Kut,3) + 1152000*r(61,Kot,3) + 180000*r(61,Mak,3) + 198000*r(61,Kuk,3) + 162000*r(61,Kok,3) + 488000*r(62,Mat,3) + 277550*r(62,Kut,3) + 1189500*r(62,Kot,3) + 184220*r(62,Mak,3) + 203130*r(62,Kuk,3)
     
      + 165920*r(62,Kok,3) + 502200*r(63,Mat,3) + 285200*r(63,Kut,3) + 1227600*r(63,Kot,3) + 188480*r(63,Mak,3) + 208320*r(63,Kuk,3) + 169880*r(63,Kok,3) + 516600*r(64,Mat,3) + 292950*r(64,Kut,3) + 1266300*r(64,Kot,3) + 192780*r(64,Mak,3)
     
      + 213570*r(64,Kuk,3) + 173880*r(64,Kok,3) + 531200*r(65,Mat,3) + 300800*r(65,Kut,3) + 1305600*r(65,Kot,3) + 197120*r(65,Mak,3) + 218880*r(65,Kuk,3) + 177920*r(65,Kok,3) + 546000*r(66,Mat,3) + 308750*r(66,Kut,3) + 1345500*r(66,Kot,3)
     
      + 201500*r(66,Mak,3) + 224250*r(66,Kuk,3) + 182000*r(66,Kok,3) + 561000*r(67,Mat,3) + 316800*r(67,Kut,3) + 1386000*r(67,Kot,3) + 205920*r(67,Mak,3) + 229680*r(67,Kuk,3) + 186120*r(67,Kok,3) + 576200*r(68,Mat,3) + 324950*r(68,Kut,3)
     
      + 1427100*r(68,Kot,3) + 210380*r(68,Mak,3) + 235170*r(68,Kuk,3) + 190280*r(68,Kok,3) + 591600*r(69,Mat,3) + 333200*r(69,Kut,3) + 1468800*r(69,Kot,3) + 214880*r(69,Mak,3) + 240720*r(69,Kuk,3) + 194480*r(69,Kok,3) + 607200*r(70,Mat,3)
     
      + 341550*r(70,Kut,3) + 1511100*r(70,Kot,3) + 219420*r(70,Mak,3) + 246330*r(70,Kuk,3) + 198720*r(70,Kok,3) + 623000*r(71,Mat,3) + 350000*r(71,Kut,3) + 1554000*r(71,Kot,3) + 224000*r(71,Mak,3) + 252000*r(71,Kuk,3) + 203000*r(71,Kok,3)
     
      + 639000*r(72,Mat,3) + 358550*r(72,Kut,3) + 1597500*r(72,Kot,3) + 228620*r(72,Mak,3) + 257730*r(72,Kuk,3) + 207320*r(72,Kok,3) + 655200*r(73,Mat,3) + 367200*r(73,Kut,3) + 1641600*r(73,Kot,3) + 233280*r(73,Mak,3) + 263520*r(73,Kuk,3)
     
      + 211680*r(73,Kok,3) + 671600*r(74,Mat,3) + 375950*r(74,Kut,3) + 1686300*r(74,Kot,3) + 237980*r(74,Mak,3) + 269370*r(74,Kuk,3) + 216080*r(74,Kok,3) + 688200*r(75,Mat,3) + 384800*r(75,Kut,3) + 1731600*r(75,Kot,3) + 242720*r(75,Mak,3)
     
      + 275280*r(75,Kuk,3) + 220520*r(75,Kok,3) + 705000*r(76,Mat,3) + 393750*r(76,Kut,3) + 1777500*r(76,Kot,3) + 247500*r(76,Mak,3) + 281250*r(76,Kuk,3) + 225000*r(76,Kok,3) + 722000*r(77,Mat,3) + 402800*r(77,Kut,3) + 1824000*r(77,Kot,3)
     
      + 252320*r(77,Mak,3) + 287280*r(77,Kuk,3) + 229520*r(77,Kok,3) + 739200*r(78,Mat,3) + 411950*r(78,Kut,3) + 1871100*r(78,Kot,3) + 257180*r(78,Mak,3) + 293370*r(78,Kuk,3) + 234080*r(78,Kok,3) + 756600*r(79,Mat,3) + 421200*r(79,Kut,3)
     
      + 1918800*r(79,Kot,3) + 262080*r(79,Mak,3) + 299520*r(79,Kuk,3) + 238680*r(79,Kok,3) + 774200*r(80,Mat,3) + 430550*r(80,Kut,3) + 1967100*r(80,Kot,3) + 267020*r(80,Mak,3) + 305730*r(80,Kuk,3) + 243320*r(80,Kok,3) + 792000*r(81,Mat,3)
     
      + 440000*r(81,Kut,3) + 2016000*r(81,Kot,3) + 272000*r(81,Mak,3) + 312000*r(81,Kuk,3) + 248000*r(81,Kok,3) + 810000*r(82,Mat,3) + 449550*r(82,Kut,3) + 2065500*r(82,Kot,3) + 277020*r(82,Mak,3) + 318330*r(82,Kuk,3) + 252720*r(82,Kok,3)
     
      + 828200*r(83,Mat,3) + 459200*r(83,Kut,3) + 2115600*r(83,Kot,3) + 282080*r(83,Mak,3) + 324720*r(83,Kuk,3) + 257480*r(83,Kok,3) + 846600*r(84,Mat,3) + 468950*r(84,Kut,3) + 2166300*r(84,Kot,3) + 287180*r(84,Mak,3) + 331170*r(84,Kuk,3)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/19/17 02:05:06 Page 62
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 437


     PROFIT  =E=  Profit is what we gain minus what we spend     
     
      + 262280*r(84,Kok,3) + 865200*r(85,Mat,3) + 478800*r(85,Kut,3) + 2217600*r(85,Kot,3) + 292320*r(85,Mak,3) + 337680*r(85,Kuk,3) + 267120*r(85,Kok,3) + 884000*r(86,Mat,3) + 488750*r(86,Kut,3) + 2269500*r(86,Kot,3) + 297500*r(86,Mak,3)
     
      + 344250*r(86,Kuk,3) + 272000*r(86,Kok,3) + 903000*r(87,Mat,3) + 498800*r(87,Kut,3) + 2322000*r(87,Kot,3) + 302720*r(87,Mak,3) + 350880*r(87,Kuk,3) + 276920*r(87,Kok,3) + 922200*r(88,Mat,3) + 508950*r(88,Kut,3) + 2375100*r(88,Kot,3)
     
      + 307980*r(88,Mak,3) + 357570*r(88,Kuk,3) + 281880*r(88,Kok,3) + 941600*r(89,Mat,3) + 519200*r(89,Kut,3) + 2428800*r(89,Kot,3) + 313280*r(89,Mak,3) + 364320*r(89,Kuk,3) + 286880*r(89,Kok,3) + 961200*r(90,Mat,3) + 529550*r(90,Kut,3)
     
      + 2483100*r(90,Kot,3) + 318620*r(90,Mak,3) + 371130*r(90,Kuk,3) + 291920*r(90,Kok,3) + 981000*r(91,Mat,3) + 540000*r(91,Kut,3) + 2538000*r(91,Kot,3) + 324000*r(91,Mak,3) + 378000*r(91,Kuk,3) + 297000*r(91,Kok,3) + 1001000*r(92,Mat,3)
     
      + 550550*r(92,Kut,3) + 2593500*r(92,Kot,3) + 329420*r(92,Mak,3) + 384930*r(92,Kuk,3) + 302120*r(92,Kok,3) + 1021200*r(93,Mat,3) + 561200*r(93,Kut,3) + 2649600*r(93,Kot,3) + 334880*r(93,Mak,3) + 391920*r(93,Kuk,3) + 307280*r(93,Kok,3)
     
      + 1041600*r(94,Mat,3) + 571950*r(94,Kut,3) + 2706300*r(94,Kot,3) + 340380*r(94,Mak,3) + 398970*r(94,Kuk,3) + 312480*r(94,Kok,3) + 1062200*r(95,Mat,3) + 582800*r(95,Kut,3) + 2763600*r(95,Kot,3) + 345920*r(95,Mak,3) + 406080*r(95,Kuk,3)
     
      + 317720*r(95,Kok,3) + 1083000*r(96,Mat,3) + 593750*r(96,Kut,3) + 2821500*r(96,Kot,3) + 351500*r(96,Mak,3) + 413250*r(96,Kuk,3) + 323000*r(96,Kok,3) + 1104000*r(97,Mat,3) + 604800*r(97,Kut,3) + 2880000*r(97,Kot,3) + 357120*r(97,Mak,3)
     
      + 420480*r(97,Kuk,3) + 328320*r(97,Kok,3) + 1125200*r(98,Mat,3) + 615950*r(98,Kut,3) + 2939100*r(98,Kot,3) + 362780*r(98,Mak,3) + 427770*r(98,Kuk,3) + 333680*r(98,Kok,3) + 1146600*r(99,Mat,3) + 627200*r(99,Kut,3) + 2998800*r(99,Kot,3)
     
      + 368480*r(99,Mak,3) + 435120*r(99,Kuk,3) + 339080*r(99,Kok,3) + 1168200*r(100,Mat,3) + 638550*r(100,Kut,3) + 3059100*r(100,Kot,3) + 374220*r(100,Mak,3) + 442530*r(100,Kuk,3) + 344520*r(100,Kok,3) + 1190000*r(101,Mat,3) + 650000*r(101,Kut,3)
     
      + 3120000*r(101,Kot,3) + 380000*r(101,Mak,3) + 450000*r(101,Kuk,3) + 350000*r(101,Kok,3) + 1212000*r(102,Mat,3) + 661550*r(102,Kut,3) + 3181500*r(102,Kot,3) + 385820*r(102,Mak,3) + 457530*r(102,Kuk,3) + 355520*r(102,Kok,3) + 1234200*r(103,Mat,3)
     
      + 673200*r(103,Kut,3) + 3243600*r(103,Kot,3) + 391680*r(103,Mak,3) + 465120*r(103,Kuk,3) + 361080*r(103,Kok,3) + 1256600*r(104,Mat,3) + 684950*r(104,Kut,3) + 3306300*r(104,Kot,3) + 397580*r(104,Mak,3) + 472770*r(104,Kuk,3) + 366680*r(104,Kok,3)
     
      + 1279200*r(105,Mat,3) + 696800*r(105,Kut,3) + 3369600*r(105,Kot,3) + 403520*r(105,Mak,3) + 480480*r(105,Kuk,3) + 372320*r(105,Kok,3) + 1302000*r(106,Mat,3) + 708750*r(106,Kut,3) + 3433500*r(106,Kot,3) + 409500*r(106,Mak,3) + 488250*r(106,Kuk,3)
     
      + 378000*r(106,Kok,3) + 1325000*r(107,Mat,3) + 720800*r(107,Kut,3) + 3498000*r(107,Kot,3) + 415520*r(107,Mak,3) + 496080*r(107,Kuk,3) + 383720*r(107,Kok,3) - 15607.8815802372*u(2,Mas,EU,3) - 12019.7039505931*u(2,Mas,IE,3)
     
      - 12823.6447407117*u(2,Mas,PA,3) - 13529.5559258896*u(2,Mas,KI,3) - 11641.073551894*u(2,Kos,EU,3) - 12058.6765027057*u(2,Kos,IE,3) - 12864.5441529763*u(2,Kos,PA,3) - 13573.3456283821*u(2,Kos,KI,3) - 43611.7353005411*u(2,Kuv,EU,3)
     
      - 37029.3382513529*u(2,Kuv,IE,3) - 34835.2059016234*u(2,Kuv,PA,3) - 33544.0073770293*u(2,Kuv,KI,3) - 42615.5324875048*u(2,Kov,EU,3) - 40038.831218762*u(2,Kov,IE,3) - 37846.5974625144*u(2,Kov,PA,3) - 36558.246828143*u(2,Kov,KI,3)
     
      - 22809.6371207615*u(2,Hsel,EU,3) - 24619.2742415229*u(2,Hsel,IE,3) - 22524.0928019036*u(2,Hsel,PA,3) - 25428.9113622844*u(2,Hsel,KI,3) - 24717.2212272599*u(2,Lsel,EU,3) - 27811.4808181733*u(2,Lsel,IE,3) - 22528.7020454331*u(2,Lsel,PA,3)
     
      - 24340.1828636064*u(2,Lsel,KI,3) - 44626.5957198534*u(2,Pap,EU,3) - 46066.4892996336*u(2,Pap,IE,3) - 41879.7871595603*u(2,Pap,PA,3) - 46599.7339494504*u(2,Pap,KI,3) - 30431.5263209489*u(3,Mas,EU,3) - 22078.8158023723*u(3,Mas,IE,3)
     
      - 23294.5789628468*u(3,Mas,PA,3) - 24118.2237035585*u(3,Mas,KI,3) - 20564.294207576*u(3,Kos,EU,3) - 20234.7060108229*u(3,Kos,IE,3) - 21458.1766119052*u(3,Kos,PA,3) - 22293.3825135286*u(3,Kos,KI,3) - 86446.9412021646*u(3,Kuv,EU,3)
     
      - 72117.3530054114*u(3,Kuv,IE,3) - 67340.8236064937*u(3,Kuv,PA,3) - 64176.0295081172*u(3,Kuv,KI,3) - 84462.1299500192*u(3,Kov,EU,3) - 78155.3248750481*u(3,Kov,IE,3) - 73386.3898500577*u(3,Kov,PA,3) - 70232.9873125721*u(3,Kov,KI,3)
     
      - 45238.5484830458*u(3,Hsel,EU,3) - 48477.0969660916*u(3,Hsel,IE,3) - 44096.3712076145*u(3,Hsel,PA,3) - 49715.6454491374*u(3,Hsel,KI,3) - 48868.8849090395*u(3,Lsel,EU,3) - 55245.923272693*u(3,Lsel,IE,3) - 44114.8081817325*u(3,Lsel,PA,3)
     
      - 47360.7314544255*u(3,Lsel,KI,3) - 88506.3828794138*u(3,Pap,EU,3) - 90265.9571985344*u(3,Pap,IE,3) - 81519.1486382413*u(3,Pap,PA,3) - 90398.9357978016*u(3,Pap,KI,3) - 44470.9342221351*u(4,Mas,EU,3) - 30177.3355553377*u(4,Mas,IE,3)
     
      - 31412.8026664053*u(4,Mas,PA,3) - 31766.0033330066*u(4,Mas,KI,3) - 26769.661967046*u(4,Kos,EU,3) - 24528.0885243515*u(4,Kos,IE,3) - 25780.8973767866*u(4,Kos,PA,3) - 26160.1106554393*u(4,Kos,KI,3) - 128505.61770487*u(4,Kuv,EU,3)
     
      - 105264.044262176*u(4,Kuv,IE,3) - 97516.8531146109*u(4,Kuv,PA,3) - 91896.0663932636*u(4,Kuv,KI,3) - 125539.792387543*u(4,Kov,EU,3) - 114349.480968858*u(4,Kov,IE,3) - 106619.37716263*u(4,Kov,PA,3) - 101024.221453287*u(4,Kov,KI,3)
     
      - 67286.7340868531*u(4,Hsel,EU,3) - 71573.4681737061*u(4,Hsel,IE,3) - 64716.8352171327*u(4,Hsel,PA,3) - 72860.2022605592*u(4,Hsel,KI,3) - 72454.9910453389*u(4,Lsel,EU,3) - 82303.3273635593*u(4,Lsel,IE,3) - 64758.3184088981*u(4,Lsel,PA,3)
     
      - 69061.6457724573*u(4,Lsel,KI,3) - 131639.361478681*u(4,Pap,EU,3) - 132598.403696702*u(4,Pap,IE,3) - 118918.084436043*u(4,Pap,PA,3) - 131397.605545054*u(4,Pap,KI,3) - 57726.1052837957*u(5,Mas,EU,3) - 36315.2632094893*u(5,Mas,IE,3)
     
      - 37178.3158513871*u(5,Mas,PA,3) - 36472.8948142339*u(5,Mas,KI,3) - 30257.1768303041*u(5,Kos,EU,3) - 24938.8240432915*u(5,Kos,IE,3) - 25832.7064476207*u(5,Kos,PA,3) - 25173.5300541144*u(5,Kos,KI,3) - 169787.764808658*u(5,Kuv,EU,3)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/19/17 02:05:06 Page 63
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 437


     PROFIT  =E=  Profit is what we gain minus what we spend     
     
      - 136469.412021646*u(5,Kuv,IE,3) - 125363.294425975*u(5,Kuv,PA,3) - 116704.118032469*u(5,Kuv,KI,3) - 165848.519800077*u(5,Kov,EU,3) - 148621.299500192*u(5,Kov,IE,3) - 137545.559400231*u(5,Kov,PA,3) - 128931.949250288*u(5,Kov,KI,3)
     
      - 88954.1939321832*u(5,Hsel,EU,3) - 93908.3878643665*u(5,Hsel,IE,3) - 84385.4848304581*u(5,Hsel,PA,3) - 94862.5817965497*u(5,Hsel,KI,3) - 95475.539636158*u(5,Lsel,EU,3) - 108983.693090772*u(5,Lsel,IE,3) - 84459.23272693*u(5,Lsel,PA,3)
     
      - 89442.925817702*u(5,Lsel,KI,3) - 174025.531517655*u(5,Pap,EU,3) - 173063.828794138*u(5,Pap,IE,3) - 154076.594552965*u(5,Pap,PA,3) - 169595.743191206*u(5,Pap,KI,3) - 70197.0395059308*u(6,Mas,EU,3) - 40492.598764827*u(6,Mas,IE,3)
     
      - 40591.1185177924*u(6,Mas,PA,3) - 38238.8981472405*u(6,Mas,KI,3) - 31026.8387973501*u(6,Kos,EU,3) - 21466.912567643*u(6,Kos,IE,3) - 21613.6038244073*u(6,Kos,PA,3) - 19333.6407095537*u(6,Kos,KI,3) - 210293.382513529*u(6,Kuv,EU,3)
     
      - 165733.456283821*u(6,Kuv,IE,3) - 150880.147540586*u(6,Kuv,PA,3) - 138600.184425732*u(6,Kuv,KI,3) - 205388.31218762*u(6,Kov,EU,3) - 180970.78046905*u(6,Kov,IE,3) - 166164.93656286*u(6,Kov,PA,3) - 153956.170703576*u(6,Kov,KI,3)
     
      - 110240.928019036*u(6,Hsel,EU,3) - 115481.856038073*u(6,Hsel,IE,3) - 103102.320047591*u(6,Hsel,PA,3) - 115722.784057109*u(6,Hsel,KI,3) - 117930.530681497*u(6,Lsel,EU,3) - 135287.020454331*u(6,Lsel,IE,3) - 103217.551135828*u(6,Lsel,PA,3)
     
      - 108504.571590159*u(6,Lsel,KI,3) - 215664.892996336*u(6,Pap,EU,3) - 211662.23249084*u(6,Pap,IE,3) - 186994.678989008*u(6,Pap,PA,3) - 204993.34873626*u(6,Pap,KI,3) - 81883.7368885403*u(7,Mas,EU,3) - 42709.3422213509*u(7,Mas,IE,3)
     
      - 41651.210665621*u(7,Mas,PA,3) - 37064.0133320263*u(7,Mas,KI,3) - 29078.6478681841*u(7,Kos,EU,3) - 14112.3540974059*u(7,Kos,IE,3) - 13123.5895071465*u(7,Kos,PA,3) - 8640.44262175735*u(7,Kos,KI,3) - 250022.470819481*u(7,Kuv,EU,3)
     
      - 193056.177048703*u(7,Kuv,IE,3) - 174067.412458444*u(7,Kuv,PA,3) - 157584.265573054*u(7,Kuv,KI,3) - 244159.169550173*u(7,Kov,EU,3) - 211397.923875432*u(7,Kov,IE,3) - 192477.508650519*u(7,Kov,PA,3) - 176096.885813149*u(7,Kov,KI,3)
     
      - 131146.936347412*u(7,Hsel,EU,3) - 136293.872694825*u(7,Hsel,IE,3) - 120867.340868531*u(7,Hsel,PA,3) - 135440.809042237*u(7,Hsel,KI,3) - 139819.964181355*u(7,Lsel,EU,3) - 161213.309454237*u(7,Lsel,IE,3) - 121033.273635592*u(7,Lsel,PA,3)
     
      - 126246.583089829*u(7,Lsel,KI,3) - 256557.445914724*u(7,Pap,EU,3) - 248393.614786809*u(7,Pap,IE,3) - 217672.337744171*u(7,Pap,PA,3) - 237590.422180214*u(7,Pap,KI,3) - 92786.1974316243*u(8,Mas,EU,3) - 42965.4935790609*u(8,Mas,IE,3)
     
      - 40358.5922948731*u(8,Mas,PA,3) - 32948.2403685913*u(8,Mas,KI,3) - 24412.6040428062*u(8,Kos,EU,3) - 2875.14863258023*u(8,Kos,IE,3) - 362.663495838249*u(8,Kos,PA,3) + 6906.06420927471*u(8,Kos,KI,3) - 288975.029726516*u(8,Kuv,EU,3)
     
      - 218437.57431629*u(8,Kuv,IE,3) - 194925.089179548*u(8,Kuv,PA,3) - 173656.361474435*u(8,Kuv,KI,3) - 282161.091887735*u(8,Kov,EU,3) - 239902.729719339*u(8,Kov,IE,3) - 216483.275663206*u(8,Kov,PA,3) - 195354.094579008*u(8,Kov,KI,3)
     
      - 151672.218917311*u(8,Hsel,EU,3) - 156344.437834622*u(8,Hsel,IE,3) - 137680.547293278*u(8,Hsel,PA,3) - 154016.656751933*u(8,Hsel,KI,3) - 161143.840135734*u(8,Lsel,EU,3) - 186762.560090489*u(8,Lsel,IE,3) - 137906.400226223*u(8,Lsel,PA,3)
     
      - 142668.960316712*u(8,Lsel,KI,3) - 296703.190272818*u(8,Pap,EU,3) - 283257.975682046*u(8,Pap,IE,3) - 246109.570818456*u(8,Pap,PA,3) - 267386.963523069*u(8,Pap,KI,3) - 102904.421135183*u(9,Mas,EU,3) - 41261.0528379571*u(9,Mas,IE,3)
     
      - 36713.2634055485*u(9,Mas,PA,3) - 25891.5792569356*u(9,Mas,KI,3) - 17028.7073212162*u(9,Kos,EU,3) + 12244.703826834*u(9,Kos,IE,3) + 16669.1742095174*u(9,Kos,PA,3) + 27305.8797835425*u(9,Kos,KI,3) - 327151.059234633*u(9,Kuv,EU,3)
     
      - 241877.648086583*u(9,Kuv,IE,3) - 213453.1777039*u(9,Kuv,PA,3) - 186816.472129875*u(9,Kuv,KI,3) - 319394.079200308*u(9,Kov,EU,3) - 266485.198000769*u(9,Kov,IE,3) - 238182.237600923*u(9,Kov,PA,3) - 211727.797001153*u(9,Kov,KI,3)
     
      - 171816.775728733*u(9,Hsel,EU,3) - 175633.551457466*u(9,Hsel,IE,3) - 153541.939321832*u(9,Hsel,PA,3) - 171450.327186199*u(9,Hsel,KI,3) - 181902.158544632*u(9,Lsel,EU,3) - 211934.772363088*u(9,Lsel,IE,3) - 153836.93090772*u(9,Lsel,PA,3)
     
      - 157771.703270808*u(9,Lsel,KI,3) - 336102.12607062*u(9,Pap,EU,3) - 316255.31517655*u(9,Pap,IE,3) - 272306.37821186*u(9,Pap,PA,3) - 294382.972764825*u(9,Pap,KI,3) - 112238.407999216*u(10,Mas,EU,3) - 37596.0199980394*u(10,Mas,IE,3)
     
      - 30715.2239976473*u(10,Mas,PA,3) - 15894.0299970591*u(10,Mas,KI,3) - 6926.95770341427*u(10,Kos,EU,3) + 31247.2032808367*u(10,Kos,IE,3) + 37971.9236089204*u(10,Kos,PA,3) + 52559.004101046*u(10,Kos,KI,3) - 364550.559343833*u(10,Kuv,EU,3)
     
      - 263376.398359582*u(10,Kuv,IE,3) - 229651.678031498*u(10,Kuv,PA,3) - 197064.597539372*u(10,Kuv,KI,3) - 355858.131487889*u(10,Kov,EU,3) - 291145.328719723*u(10,Kov,IE,3) - 257574.394463668*u(10,Kov,PA,3) - 225217.993079585*u(10,Kov,KI,3)
     
      - 191580.606781678*u(10,Hsel,EU,3) - 194161.213563355*u(10,Hsel,IE,3) - 168451.516954194*u(10,Hsel,PA,3) - 187741.820345033*u(10,Hsel,KI,3) - 202094.91940805*u(10,Lsel,EU,3) - 236729.946272033*u(10,Lsel,IE,3) - 168824.865680083*u(10,Lsel,PA,3)
     
      - 171554.811952116*u(10,Lsel,KI,3) - 374754.253308129*u(10,Pap,EU,3) - 347385.633270321*u(10,Pap,IE,3) - 296262.759924386*u(10,Pap,PA,3) - 318578.449905482*u(10,Pap,KI,3) - 120788.158023723*u(11,Mas,EU,3) - 31970.3950593079*u(11,Mas,IE,3)
     
      - 22364.4740711695*u(11,Mas,PA,3) - 2955.59258896188*u(11,Mas,KI,3) + 5892.64481059968*u(11,Kos,EU,3) + 54132.3497294281*u(11,Kos,IE,3) + 63545.5847023709*u(11,Kos,PA,3) + 82665.4371617851*u(11,Kos,KI,3) - 401173.530054114*u(11,Kuv,EU,3)
     
      - 282933.825135286*u(11,Kuv,IE,3) - 243520.590162343*u(11,Kuv,PA,3) - 204400.737702929*u(11,Kuv,KI,3) - 391553.248750481*u(11,Kov,EU,3) - 313883.121876201*u(11,Kov,IE,3) - 274659.746251442*u(11,Kov,PA,3) - 235824.682814302*u(11,Kov,KI,3)
     
      - 210963.712076145*u(11,Hsel,EU,3) - 211927.42415229*u(11,Hsel,IE,3) - 182409.280190363*u(11,Hsel,PA,3) - 202891.136228435*u(11,Hsel,KI,3) - 221722.122725987*u(11,Lsel,EU,3) - 261148.081817325*u(11,Lsel,IE,3) - 182870.204543312*u(11,Lsel,PA,3)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/19/17 02:05:06 Page 64
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 437


     PROFIT  =E=  Profit is what we gain minus what we spend     
     
      - 184018.286360637*u(11,Lsel,KI,3) - 412659.571985344*u(11,Pap,EU,3) - 376648.92996336*u(11,Pap,IE,3) - 317978.715956032*u(11,Pap,PA,3) - 339973.39494504*u(11,Pap,KI,3) - 128553.671208705*u(12,Mas,EU,3) - 24384.1780217626*u(12,Mas,IE,3)
     
      - 11661.0136261151*u(12,Mas,PA,3) + 12923.7329673561*u(12,Mas,KI,3) + 21430.1002208256*u(12,Kos,EU,3) + 80900.143172608*u(12,Kos,IE,3) + 93390.1574898688*u(12,Kos,PA,3) + 117625.17896576*u(12,Kos,KI,3) - 437019.971365478*u(12,Kuv,EU,3)
     
      - 300549.928413696*u(12,Kuv,IE,3) - 255059.914096435*u(12,Kuv,PA,3) - 208824.892620544*u(12,Kuv,KI,3) - 426479.430988081*u(12,Kov,EU,3) - 334698.577470204*u(12,Kov,IE,3) - 289438.292964244*u(12,Kov,PA,3) - 243547.866205306*u(12,Kov,KI,3)
     
      - 229966.091612136*u(12,Hsel,EU,3) - 228932.183224271*u(12,Hsel,IE,3) - 195415.229030339*u(12,Hsel,PA,3) - 216898.274836407*u(12,Hsel,KI,3) - 240783.768498445*u(12,Lsel,EU,3) - 285189.178998963*u(12,Lsel,IE,3) - 195972.947497408*u(12,Lsel,PA,3)
     
      - 195162.126496371*u(12,Lsel,KI,3) - 449818.082102266*u(12,Pap,EU,3) - 404045.205255665*u(12,Pap,IE,3) - 337454.246306798*u(12,Pap,PA,3) - 358567.807883498*u(12,Pap,KI,3) - 135534.947554161*u(13,Mas,EU,3) - 14837.3688854034*u(13,Mas,IE,3)
     
      + 1395.15733751588*u(13,Mas,PA,3) + 31743.9466718949*u(13,Mas,KI,3) + 39685.4085272635*u(13,Kos,EU,3) + 111550.583610376*u(13,Kos,IE,3) + 127505.641971414*u(13,Kos,PA,3) + 157438.229512971*u(13,Kos,KI,3) - 472089.883277925*u(13,Kuv,EU,3)
     
      - 316224.708194812*u(13,Kuv,IE,3) - 264269.649833774*u(13,Kuv,PA,3) - 210337.062292218*u(13,Kuv,KI,3) - 460636.678200692*u(13,Kov,EU,3) - 353591.69550173*u(13,Kov,IE,3) - 301910.034602076*u(13,Kov,PA,3) - 248387.543252595*u(13,Kov,KI,3)
     
      - 248587.745389649*u(13,Hsel,EU,3) - 245175.490779298*u(13,Hsel,IE,3) - 207469.363474123*u(13,Hsel,PA,3) - 229763.236168947*u(13,Hsel,KI,3) - 259279.856725422*u(13,Lsel,EU,3) - 308853.237816948*u(13,Lsel,IE,3) - 208133.09454237*u(13,Lsel,PA,3)
     
      - 204986.332359318*u(13,Lsel,KI,3) - 486229.783658895*u(13,Pap,EU,3) - 429574.459147238*u(13,Pap,IE,3) - 354689.350976686*u(13,Pap,PA,3) - 374361.688720857*u(13,Pap,KI,3) - 141731.987060092*u(14,Mas,EU,3) - 3329.96765023039*u(14,Mas,IE,3)
     
      + 16804.0388197235*u(14,Mas,PA,3) + 53505.0485246544*u(14,Mas,KI,3) + 60658.5697299134*u(14,Kos,EU,3) + 146083.671042733*u(14,Kos,IE,3) + 165892.038147007*u(14,Kos,PA,3) + 202104.588803417*u(14,Kos,KI,3) - 506383.265791453*u(14,Kuv,EU,3)
     
      - 329958.164478633*u(14,Kuv,IE,3) - 271149.79737436*u(14,Kuv,PA,3) - 208937.24671795*u(14,Kuv,KI,3) - 494024.990388312*u(14,Kov,EU,3) - 370562.47597078*u(14,Kov,IE,3) - 312074.971164937*u(14,Kov,PA,3) - 250343.713956171*u(14,Kov,KI,3)
     
      - 266828.673408685*u(14,Hsel,EU,3) - 260657.346817371*u(14,Hsel,IE,3) - 218571.683521713*u(14,Hsel,PA,3) - 241486.020226056*u(14,Hsel,KI,3) - 277210.387406919*u(14,Lsel,EU,3) - 332140.258271279*u(14,Lsel,IE,3) - 219350.645678198*u(14,Lsel,PA,3)
     
      - 213490.903949477*u(14,Lsel,KI,3) - 521894.676655231*u(14,Pap,EU,3) - 453236.691638078*u(14,Pap,IE,3) - 369684.029965693*u(14,Pap,PA,3) - 387355.037457117*u(14,Pap,KI,3) - 147144.789726497*u(15,Mas,EU,3) + 10138.0256837565*u(15,Mas,IE,3)
     
      + 34565.6308205077*u(15,Mas,PA,3) + 78207.0385256347*u(15,Mas,KI,3) + 84349.5838287753*u(15,Kos,EU,3) + 184499.405469679*u(15,Kos,IE,3) + 208549.346016647*u(15,Kos,PA,3) + 251624.256837099*u(15,Kos,KI,3) - 539900.118906064*u(15,Kuv,EU,3)
     
      - 341750.29726516*u(15,Kuv,IE,3) - 275700.356718193*u(15,Kuv,PA,3) - 204625.445897741*u(15,Kuv,KI,3) - 526644.367550942*u(15,Kov,EU,3) - 385610.918877355*u(15,Kov,IE,3) - 319933.102652826*u(15,Kov,PA,3) - 249416.378316032*u(15,Kov,KI,3)
     
      - 284688.875669245*u(15,Hsel,EU,3) - 275377.751338489*u(15,Hsel,IE,3) - 228722.189173111*u(15,Hsel,PA,3) - 252066.627007734*u(15,Hsel,KI,3) - 294575.360542935*u(15,Lsel,EU,3) - 355050.240361957*u(15,Lsel,IE,3) - 229625.600904892*u(15,Lsel,PA,3)
     
      - 220675.841266849*u(15,Lsel,KI,3) - 556812.761091274*u(15,Pap,EU,3) - 475031.902728185*u(15,Pap,IE,3) - 382438.283273822*u(15,Pap,PA,3) - 397547.854092278*u(15,Pap,KI,3) - 151773.355553377*u(16,Mas,EU,3) + 25566.6111165572*u(16,Mas,IE,3)
     
      + 54679.9333398686*u(16,Mas,PA,3) + 105849.916674836*u(16,Mas,KI,3) + 110758.450823849*u(16,Kos,EU,3) + 226797.786891213*u(16,Kos,IE,3) + 255477.565580335*u(16,Kos,PA,3) + 305997.233614017*u(16,Kos,KI,3) - 572640.442621757*u(16,Kuv,EU,3)
     
      - 351601.106554393*u(16,Kuv,IE,3) - 277921.327865272*u(16,Kuv,PA,3) - 197401.65983159*u(16,Kuv,KI,3) - 558494.809688581*u(16,Kov,EU,3) - 398737.024221453*u(16,Kov,IE,3) - 325484.429065744*u(16,Kov,PA,3) - 245605.53633218*u(16,Kov,KI,3)
     
      - 302168.352171327*u(16,Hsel,EU,3) - 289336.704342653*u(16,Hsel,IE,3) - 237920.880428317*u(16,Hsel,PA,3) - 261505.05651398*u(16,Hsel,KI,3) - 311374.776133472*u(16,Lsel,EU,3) - 377583.184088981*u(16,Lsel,IE,3) - 238957.960222453*u(16,Lsel,PA,3)
     
      - 226541.144311434*u(16,Lsel,KI,3) - 590984.036967024*u(16,Pap,EU,3) - 494960.092417559*u(16,Pap,IE,3) - 392952.110901071*u(16,Pap,PA,3) - 404940.138626339*u(16,Pap,KI,3) - 155617.684540731*u(17,Mas,EU,3) + 42955.7886481718*u(17,Mas,IE,3)
     
      + 77146.946377806*u(17,Mas,PA,3) + 136433.682972258*u(17,Mas,KI,3) + 139885.170715135*u(17,Kos,EU,3) + 272978.815307336*u(17,Kos,IE,3) + 306676.696838069*u(17,Kos,PA,3) + 365223.51913417*u(17,Kos,KI,3) - 604604.236938533*u(17,Kuv,EU,3)
     
      - 359510.592346332*u(17,Kuv,IE,3) - 277812.710815598*u(17,Kuv,PA,3) - 187265.888519498*u(17,Kuv,KI,3) - 589576.31680123*u(17,Kov,EU,3) - 409940.792003076*u(17,Kov,IE,3) - 328728.950403691*u(17,Kov,PA,3) - 238911.188004614*u(17,Kov,KI,3)
     
      - 319267.102914932*u(17,Hsel,EU,3) - 302534.205829863*u(17,Hsel,IE,3) - 246167.757287329*u(17,Hsel,PA,3) - 269801.308744795*u(17,Hsel,KI,3) - 327608.634178528*u(17,Lsel,EU,3) - 399739.089452352*u(17,Lsel,IE,3) - 247347.723630879*u(17,Lsel,PA,3)
     
      - 231086.813083231*u(17,Lsel,KI,3) - 624408.50428248*u(17,Pap,EU,3) - 513021.260706201*u(17,Pap,IE,3) - 401225.512847441*u(17,Pap,PA,3) - 409531.891059301*u(17,Pap,KI,3) - 158677.77668856*u(18,Mas,EU,3) + 62305.5582786001*u(18,Mas,IE,3)
     
      + 101966.66993432*u(18,Mas,PA,3) + 169958.3374179*u(18,Mas,KI,3) + 171729.743502633*u(18,Kos,EU,3) + 323042.490718047*u(18,Kos,IE,3) + 362146.739789852*u(18,Kos,PA,3) + 429303.113397559*u(18,Kos,KI,3) - 635791.501856391*u(18,Kuv,EU,3)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/19/17 02:05:06 Page 65
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 437


     PROFIT  =E=  Profit is what we gain minus what we spend     
     
      - 365478.754640976*u(18,Kuv,IE,3) - 275374.505569172*u(18,Kuv,PA,3) - 174218.131961465*u(18,Kuv,KI,3) - 619888.888888889*u(18,Kov,EU,3) - 419222.222222222*u(18,Kov,IE,3) - 329666.666666667*u(18,Kov,PA,3) - 229333.333333333*u(18,Kov,KI,3)
     
      - 335985.12790006*u(18,Hsel,EU,3) - 314970.255800119*u(18,Hsel,IE,3) - 253462.819750149*u(18,Hsel,PA,3) - 276955.383700178*u(18,Hsel,KI,3) - 343276.934678103*u(18,Lsel,EU,3) - 421517.956452069*u(18,Lsel,IE,3) - 254794.891130173*u(18,Lsel,PA,3)
     
      - 234312.847582241*u(18,Lsel,KI,3) - 657086.163037644*u(18,Pap,EU,3) - 529215.40759411*u(18,Pap,IE,3) - 407258.489112931*u(18,Pap,PA,3) - 411323.111391164*u(18,Pap,KI,3) - 160953.631996863*u(19,Mas,EU,3) + 83615.9200078424*u(19,Mas,IE,3)
     
      + 129139.104009411*u(19,Mas,PA,3) + 206423.880011764*u(19,Mas,KI,3) + 206292.169186343*u(19,Kos,EU,3) + 376988.813123347*u(19,Kos,IE,3) + 421887.694435682*u(19,Kos,PA,3) + 498236.016404184*u(19,Kos,KI,3) - 666202.237375331*u(19,Kuv,EU,3)
     
      - 369505.593438326*u(19,Kuv,IE,3) - 270606.712125992*u(19,Kuv,PA,3) - 158258.39015749*u(19,Kuv,KI,3) - 649432.525951557*u(19,Kov,EU,3) - 426581.314878893*u(19,Kov,IE,3) - 328297.577854671*u(19,Kov,PA,3) - 216871.972318339*u(19,Kov,KI,3)
     
      - 352322.42712671*u(19,Hsel,EU,3) - 326644.854253421*u(19,Hsel,IE,3) - 259806.067816776*u(19,Hsel,PA,3) - 282967.281380131*u(19,Hsel,KI,3) - 358379.677632199*u(19,Lsel,EU,3) - 442919.785088133*u(19,Lsel,IE,3) - 261299.462720332*u(19,Lsel,PA,3)
     
      - 236219.247808465*u(19,Lsel,KI,3) - 689017.013232514*u(19,Pap,EU,3) - 543542.533081285*u(19,Pap,IE,3) - 411051.039697542*u(19,Pap,PA,3) - 410313.799621928*u(19,Pap,KI,3) - 162445.250465641*u(20,Mas,EU,3) + 106886.873835898*u(20,Mas,IE,3)
     
      + 158664.248603078*u(20,Mas,PA,3) + 245830.310753848*u(20,Mas,KI,3) + 243572.447766265*u(20,Kos,EU,3) + 434817.782523236*u(20,Kos,IE,3) + 485899.560775559*u(20,Kos,PA,3) + 572022.228154044*u(20,Kos,KI,3) - 695836.443495353*u(20,Kuv,EU,3)
     
      - 371591.108738382*u(20,Kuv,IE,3) - 263509.330486059*u(20,Kuv,PA,3) - 139386.663107573*u(20,Kuv,KI,3) - 678207.227989235*u(20,Kov,EU,3) - 432018.069973087*u(20,Kov,IE,3) - 324621.683967705*u(20,Kov,PA,3) - 201527.104959631*u(20,Kov,KI,3)
     
      - 368279.000594884*u(20,Hsel,EU,3) - 337558.001189768*u(20,Hsel,IE,3) - 265197.50148721*u(20,Hsel,PA,3) - 287837.001784652*u(20,Hsel,KI,3) - 372916.863040814*u(20,Lsel,EU,3) - 463944.575360543*u(20,Lsel,IE,3) - 266861.438401357*u(20,Lsel,PA,3)
     
      - 236806.0137619*u(20,Lsel,KI,3) - 720201.054867091*u(20,Pap,EU,3) - 556002.637167729*u(20,Pap,IE,3) - 412603.164601274*u(20,Pap,PA,3) - 406503.955751593*u(20,Pap,KI,3) - 163152.632094893*u(21,Mas,EU,3) + 132118.419762768*u(21,Mas,IE,3)
     
      + 190542.103715322*u(21,Mas,PA,3) + 288177.629644152*u(21,Mas,KI,3) + 283570.579242399*u(21,Kos,EU,3) + 496529.398917713*u(21,Kos,IE,3) + 554182.338809484*u(21,Kos,PA,3) + 650661.74864714*u(21,Kos,KI,3) - 724694.120216458*u(21,Kuv,EU,3)
     
      - 371735.300541144*u(21,Kuv,IE,3) - 254082.360649373*u(21,Kuv,PA,3) - 117602.950811716*u(21,Kuv,KI,3) - 706212.995001922*u(21,Kov,EU,3) - 435532.487504806*u(21,Kov,IE,3) - 318638.985005767*u(21,Kov,PA,3) - 183298.731257209*u(21,Kov,KI,3)
     
      - 383854.848304581*u(21,Hsel,EU,3) - 347709.696609161*u(21,Hsel,IE,3) - 269637.120761452*u(21,Hsel,PA,3) - 291564.544913742*u(21,Hsel,KI,3) - 386888.490903949*u(21,Lsel,EU,3) - 484592.3272693*u(21,Lsel,IE,3) - 271480.818173249*u(21,Lsel,PA,3)
     
      - 236073.145442549*u(21,Lsel,KI,3) - 750638.287941376*u(21,Pap,EU,3) - 566595.719853439*u(21,Pap,IE,3) - 411914.863824127*u(21,Pap,PA,3) - 399893.579780158*u(21,Pap,KI,3) - 163075.776884619*u(22,Mas,EU,3) + 159310.557788452*u(22,Mas,IE,3)
     
      + 224772.669346143*u(22,Mas,PA,3) + 333465.836682678*u(22,Mas,KI,3) + 326286.563614745*u(22,Kos,EU,3) + 562123.662306778*u(22,Kos,IE,3) + 626736.028537456*u(22,Kos,PA,3) + 734154.577883472*u(22,Kos,KI,3) - 752775.267538644*u(22,Kuv,EU,3)
     
      - 369938.168846611*u(22,Kuv,IE,3) - 242325.802615933*u(22,Kuv,PA,3) - 92907.2532699165*u(22,Kuv,KI,3) - 733449.826989619*u(22,Kov,EU,3) - 437124.567474048*u(22,Kov,IE,3) - 310349.480968858*u(22,Kov,PA,3) - 162186.851211073*u(22,Kov,KI,3)
     
      - 399049.9702558*u(22,Hsel,EU,3) - 357099.9405116*u(22,Hsel,IE,3) - 273124.9256395*u(22,Hsel,PA,3) - 294149.9107674*u(22,Hsel,KI,3) - 400294.561221604*u(22,Lsel,EU,3) - 504863.040814403*u(22,Lsel,IE,3) - 275157.602036007*u(22,Lsel,PA,3)
     
      - 234020.64285041*u(22,Lsel,KI,3) - 780328.712455367*u(22,Pap,EU,3) - 575321.781138416*u(22,Pap,IE,3) - 408986.1373661*u(22,Pap,PA,3) - 390482.671707624*u(22,Pap,KI,3) - 162214.68483482*u(23,Mas,EU,3) + 188463.28791295*u(23,Mas,IE,3)
     
      + 261355.94549554*u(23,Mas,PA,3) + 381694.931869425*u(23,Mas,KI,3) + 371720.400883302*u(23,Kos,EU,3) + 631600.572690432*u(23,Kos,IE,3) + 703560.629959475*u(23,Kos,PA,3) + 822500.71586304*u(23,Kos,KI,3) - 780079.885461914*u(23,Kuv,EU,3)
     
      - 366199.713654784*u(23,Kuv,IE,3) - 228239.656385741*u(23,Kuv,PA,3) - 65299.570482176*u(23,Kuv,KI,3) - 759917.723952326*u(23,Kov,EU,3) - 436794.309880815*u(23,Kov,IE,3) - 299753.171856978*u(23,Kov,PA,3) - 138191.464821223*u(23,Kov,KI,3)
     
      - 413864.366448543*u(23,Hsel,EU,3) - 365728.732897085*u(23,Hsel,IE,3) - 275660.916121356*u(23,Hsel,PA,3) - 295593.099345628*u(23,Hsel,KI,3) - 413135.073993779*u(23,Lsel,EU,3) - 524756.715995853*u(23,Lsel,IE,3) - 277891.789989632*u(23,Lsel,PA,3)
     
      - 230648.505985484*u(23,Lsel,KI,3) - 809272.328409064*u(23,Pap,EU,3) - 582180.821022661*u(23,Pap,IE,3) - 403816.985227193*u(23,Pap,PA,3) - 378271.231533991*u(23,Pap,KI,3) - 0.19*b(Mat,3) - 0.15*b(Kut,3) - 0.12*b(Kot,3) - 0.18*b(Mak,3)
     
      - 0.15*b(Kuk,3) - 0.15*b(Kok,3) + Pr(3) =E= 0 ; (LHS = 0)
     
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/19/17 02:05:06 Page 66
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 437


---- Capacity3  =G=  safdasd

Capacity3(SAW,1)..  Cap(SAW,1) =G= 0 ; (LHS = 0)
     
Capacity3(SAW,2)..  - Cap(SAW,1) + Cap(SAW,2) =G= 0 ; (LHS = 0)
     
Capacity3(SAW,3)..  - Cap(SAW,2) + Cap(SAW,3) =G= 0 ; (LHS = 0)
     
Capacity3(PLY,1)..  Cap(PLY,1) =G= 0 ; (LHS = 0)
     
Capacity3(PLY,2)..  - Cap(PLY,1) + Cap(PLY,2) =G= 0 ; (LHS = 0)
     
Capacity3(PLY,3)..  - Cap(PLY,2) + Cap(PLY,3) =G= 0 ; (LHS = 0)
     
Capacity3(SPULP,1)..  Cap(SPULP,1) =G= 0 ; (LHS = 0)
     
Capacity3(SPULP,2)..  - Cap(SPULP,1) + Cap(SPULP,2) =G= 0 ; (LHS = 0)
     
Capacity3(SPULP,3)..  - Cap(SPULP,2) + Cap(SPULP,3) =G= 0 ; (LHS = 0)
     
Capacity3(HPULP,1)..  Cap(HPULP,1) =G= 0 ; (LHS = 0)
     
Capacity3(HPULP,2)..  - Cap(HPULP,1) + Cap(HPULP,2) =G= 0 ; (LHS = 0)
     
Capacity3(HPULP,3)..  - Cap(HPULP,2) + Cap(HPULP,3) =G= 0 ; (LHS = 0)
     
Capacity3(PAPM,1)..  Cap(PAPM,1) =G= 0 ; (LHS = 0)
     
Capacity3(PAPM,2)..  - Cap(PAPM,1) + Cap(PAPM,2) =G= 0 ; (LHS = 0)
     
Capacity3(PAPM,3)..  - Cap(PAPM,2) + Cap(PAPM,3) =G= 0 ; (LHS = 0)
     
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/19/17 02:05:06 Page 67
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE final Using MIP From line 437


---- z  the objective

z
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       obj


---- y  Cubic meters produced of product j

y(Mas,1)
                (.LO, .L, .UP, .M = 0, 0, 1060000, 0)
        2       timber_used(Mat,1)
       -0.8     timber_used(Mak,1)
       -1       Sold_Prod(Mas,1)
       -1       Capacity2(SAW,1)
        0.542   PROFIT(1)

y(Mas,2)
                (.LO, .L, .UP, .M = 0, 0, 1060000, 0)
        2       timber_used(Mat,2)
       -0.8     timber_used(Mak,2)
       -1       Sold_Prod(Mas,2)
       -1       Capacity2(SAW,2)
        0.542   PROFIT(2)

y(Mas,3)
                (.LO, .L, .UP, .M = 0, 0, 1060000, 0)
        2       timber_used(Mat,3)
       -0.8     timber_used(Mak,3)
       -1       Sold_Prod(Mas,3)
       -1       Capacity2(SAW,3)
        0.642   PROFIT(3)

y(Kus,1)
                (.LO, .L, .UP, .M = 0, 0, 1060000, 0)
        2       timber_used(Kut,1)
       -0.8     timber_used(Kuk,1)
       -1       Sold_Prod(Kus,1)
       -1       Capacity2(SAW,1)
        0.492   PROFIT(1)

y(Kus,2)
                (.LO, .L, .UP, .M = 0, 0, 1060000, 0)
        2       timber_used(Kut,2)
       -0.8     timber_used(Kuk,2)
       -1       Sold_Prod(Kus,2)
       -1       Capacity2(SAW,2)
        0.492   PROFIT(2)

y(Kus,3)
                (.LO, .L, .UP, .M = 0, 0, 1060000, 0)
        2       timber_used(Kut,3)
       -0.8     timber_used(Kuk,3)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/19/17 02:05:06 Page 68
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE final Using MIP From line 437


     y  Cubic meters produced of product j

       -1       Sold_Prod(Kus,3)
       -1       Capacity2(SAW,3)
        0.592   PROFIT(3)

y(Kos,1)
                (.LO, .L, .UP, .M = 0, 0, 1060000, 0)
        2       timber_used(Kot,1)
       -0.8     timber_used(Kok,1)
       -1       Sold_Prod(Kos,1)
       -1       Capacity2(SAW,1)
        0.442   PROFIT(1)

y(Kos,2)
                (.LO, .L, .UP, .M = 0, 0, 1060000, 0)
        2       timber_used(Kot,2)
       -0.8     timber_used(Kok,2)
       -1       Sold_Prod(Kos,2)
       -1       Capacity2(SAW,2)
        0.442   PROFIT(2)

y(Kos,3)
                (.LO, .L, .UP, .M = 0, 0, 1060000, 0)
        2       timber_used(Kot,3)
       -0.8     timber_used(Kok,3)
       -1       Sold_Prod(Kos,3)
       -1       Capacity2(SAW,3)
        0.542   PROFIT(3)

y(Kuv,1)
                (.LO, .L, .UP, .M = 0, 0, 1060000, 0)
        2.8     timber_used(Kut,1)
       -1.6     timber_used(Kuk,1)
       -1       Sold_Prod(Kuv,1)
       -1       Capacity2(PLY,1)
        2.492   PROFIT(1)

y(Kuv,2)
                (.LO, .L, .UP, .M = 0, 0, 1060000, 0)
        2.8     timber_used(Kut,2)
       -1.6     timber_used(Kuk,2)
       -1       Sold_Prod(Kuv,2)
       -1       Capacity2(PLY,2)
        2.492   PROFIT(2)

y(Kuv,3)
                (.LO, .L, .UP, .M = 0, 0, 1060000, 0)
        2.8     timber_used(Kut,3)
       -1.6     timber_used(Kuk,3)
       -1       Sold_Prod(Kuv,3)
       -1       Capacity2(PLY,3)
        2.792   PROFIT(3)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/19/17 02:05:06 Page 69
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE final Using MIP From line 437


     y  Cubic meters produced of product j


y(Kov,1)
                (.LO, .L, .UP, .M = 0, 0, 1060000, 0)
        2.8     timber_used(Kot,1)
       -1.6     timber_used(Kok,1)
       -1       Sold_Prod(Kov,1)
       -1       Capacity2(PLY,1)
        2.592   PROFIT(1)

y(Kov,2)
                (.LO, .L, .UP, .M = 0, 0, 1060000, 0)
        2.8     timber_used(Kot,2)
       -1.6     timber_used(Kok,2)
       -1       Sold_Prod(Kov,2)
       -1       Capacity2(PLY,2)
        2.592   PROFIT(2)

y(Kov,3)
                (.LO, .L, .UP, .M = 0, 0, 1060000, 0)
        2.8     timber_used(Kot,3)
       -1.6     timber_used(Kok,3)
       -1       Sold_Prod(Kov,3)
       -1       Capacity2(PLY,3)
        2.892   PROFIT(3)

y(Hsel,1)
                (.LO, .L, .UP, .M = 0, 0, 1060000, 0)
        4.8     timber_used(Mak,1)
       -1       Sold_Prod(Hsel,1)
       -1       Capacity2(SPULP,1)
       -1       PAP_HSEL(1)
       -1       PULP_Bal(Hsel,1)
        0.82    PROFIT(1)

y(Hsel,2)
                (.LO, .L, .UP, .M = 0, 0, 1060000, 0)
        4.8     timber_used(Mak,2)
       -1       Sold_Prod(Hsel,2)
       -1       Capacity2(SPULP,2)
       -1       PAP_HSEL(2)
       -1       PULP_Bal(Hsel,2)
        0.82    PROFIT(2)

y(Hsel,3)
                (.LO, .L, .UP, .M = 0, 0, 1060000, 0)
        4.8     timber_used(Mak,3)
       -1       Sold_Prod(Hsel,3)
       -1       Capacity2(SPULP,3)
       -1       PAP_HSEL(3)
       -1       PULP_Bal(Hsel,3)
        1.32    PROFIT(3)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/19/17 02:05:06 Page 70
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE final Using MIP From line 437


     y  Cubic meters produced of product j


y(Lsel,1)
                (.LO, .L, .UP, .M = 0, 0, 1060000, 0)
        4.2     timber_used(Kok,1)
       -1       Sold_Prod(Lsel,1)
       -1       Capacity2(HPULP,1)
       -1       PAP_LSEL(1)
       -1       PULP_Bal(Lsel,1)
        0.8     PROFIT(1)

y(Lsel,2)
                (.LO, .L, .UP, .M = 0, 0, 1060000, 0)
        4.2     timber_used(Kok,2)
       -1       Sold_Prod(Lsel,2)
       -1       Capacity2(HPULP,2)
       -1       PAP_LSEL(2)
       -1       PULP_Bal(Lsel,2)
        0.8     PROFIT(2)

y(Lsel,3)
                (.LO, .L, .UP, .M = 0, 0, 1060000, 0)
        4.2     timber_used(Kok,3)
       -1       Sold_Prod(Lsel,3)
       -1       Capacity2(HPULP,3)
       -1       PAP_LSEL(3)
       -1       PULP_Bal(Lsel,3)
        1.3     PROFIT(3)

y(Pap,1)
                (.LO, .L, .UP, .M = 0, 0, 1060000, 0)
        1       timber_used(Kuk,1)
       -1       Sold_Prod(Pap,1)
       -1       Capacity2(PAPM,1)
        0.2     PAP_HSEL(1)
        0.2     PAP_LSEL(1)
        0.2     PULP_Bal(Hsel,1)
        0.2     PULP_Bal(Lsel,1)
        1.7     PROFIT(1)

y(Pap,2)
                (.LO, .L, .UP, .M = 0, 0, 1060000, 0)
        1       timber_used(Kuk,2)
       -1       Sold_Prod(Pap,2)
       -1       Capacity2(PAPM,2)
        0.2     PAP_HSEL(2)
        0.2     PAP_LSEL(2)
        0.2     PULP_Bal(Hsel,2)
        0.2     PULP_Bal(Lsel,2)
        1.7     PROFIT(2)

y(Pap,3)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/19/17 02:05:06 Page 71
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE final Using MIP From line 437


     y  Cubic meters produced of product j

                (.LO, .L, .UP, .M = 0, 0, 1060000, 0)
        1       timber_used(Kuk,3)
       -1       Sold_Prod(Pap,3)
       -1       Capacity2(PAPM,3)
        0.2     PAP_HSEL(3)
        0.2     PAP_LSEL(3)
        0.2     PULP_Bal(Hsel,3)
        0.2     PULP_Bal(Lsel,3)
        2.4     PROFIT(3)


---- s  amount of timber i used to make products

s(Mat,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -1       timber_used(Mat,1)
       -1       prod_starved(Mat,1)
        0.19    PROFIT(1)

s(Mat,2)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -1       timber_used(Mat,2)
       -1       prod_starved(Mat,2)
        0.19    PROFIT(2)

s(Mat,3)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -1       timber_used(Mat,3)
       -1       prod_starved(Mat,3)
        0.19    PROFIT(3)

s(Kut,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -1       timber_used(Kut,1)
       -1       prod_starved(Kut,1)
        0.15    PROFIT(1)

s(Kut,2)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -1       timber_used(Kut,2)
       -1       prod_starved(Kut,2)
        0.15    PROFIT(2)

s(Kut,3)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -1       timber_used(Kut,3)
       -1       prod_starved(Kut,3)
        0.15    PROFIT(3)

s(Kot,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/19/17 02:05:06 Page 72
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE final Using MIP From line 437


     s  amount of timber i used to make products

       -1       timber_used(Kot,1)
       -1       prod_starved(Kot,1)
        0.12    PROFIT(1)

s(Kot,2)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -1       timber_used(Kot,2)
       -1       prod_starved(Kot,2)
        0.12    PROFIT(2)

s(Kot,3)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -1       timber_used(Kot,3)
       -1       prod_starved(Kot,3)
        0.12    PROFIT(3)

s(Mak,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -1       timber_used(Mak,1)
       -1       prod_starved(Mak,1)
        0.18    PROFIT(1)

s(Mak,2)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -1       timber_used(Mak,2)
       -1       prod_starved(Mak,2)
        0.18    PROFIT(2)

s(Mak,3)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -1       timber_used(Mak,3)
       -1       prod_starved(Mak,3)
        0.18    PROFIT(3)

s(Kuk,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -1       timber_used(Kuk,1)
       -1       prod_starved(Kuk,1)
        0.15    PROFIT(1)

s(Kuk,2)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -1       timber_used(Kuk,2)
       -1       prod_starved(Kuk,2)
        0.15    PROFIT(2)

s(Kuk,3)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -1       timber_used(Kuk,3)
       -1       prod_starved(Kuk,3)
        0.15    PROFIT(3)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/19/17 02:05:06 Page 73
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE final Using MIP From line 437


     s  amount of timber i used to make products


s(Kok,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -1       timber_used(Kok,1)
       -1       prod_starved(Kok,1)
        0.15    PROFIT(1)

s(Kok,2)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -1       timber_used(Kok,2)
       -1       prod_starved(Kok,2)
        0.15    PROFIT(2)

s(Kok,3)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -1       timber_used(Kok,3)
       -1       prod_starved(Kok,3)
        0.15    PROFIT(3)


---- r  1 if we buy n boats of timber i, 0 otherwise

r(1,Mat,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_buy(Mat,1)

r(1,Mat,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_buy(Mat,2)

r(1,Mat,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_buy(Mat,3)

r(1,Kut,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_buy(Kut,1)

r(1,Kut,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_buy(Kut,2)

r(1,Kut,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_buy(Kut,3)

r(1,Kot,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_buy(Kot,1)

r(1,Kot,2)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/19/17 02:05:06 Page 74
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE final Using MIP From line 437


     r  1 if we buy n boats of timber i, 0 otherwise

                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_buy(Kot,2)

r(1,Kot,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_buy(Kot,3)

r(1,Mak,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_buy(Mak,1)

r(1,Mak,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_buy(Mak,2)

r(1,Mak,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_buy(Mak,3)

r(1,Kuk,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_buy(Kuk,1)

r(1,Kuk,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_buy(Kuk,2)

r(1,Kuk,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_buy(Kuk,3)

r(1,Kok,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_buy(Kok,1)

r(1,Kok,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_buy(Kok,2)

r(1,Kok,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_buy(Kok,3)

r(2,Mat,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    10000       prod_starved(Mat,1)
   -10000       timber_bought(Mat,1)
        1       Barges_buy(Mat,1)
     2000       PROFIT(1)

r(2,Mat,2)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/19/17 02:05:06 Page 75
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE final Using MIP From line 437


     r  1 if we buy n boats of timber i, 0 otherwise

                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    10000       prod_starved(Mat,2)
   -10000       timber_bought(Mat,2)
        1       Barges_buy(Mat,2)
     2000       PROFIT(2)

r(2,Mat,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    10000       prod_starved(Mat,3)
   -10000       timber_bought(Mat,3)
        1       Barges_buy(Mat,3)
     2000       PROFIT(3)

r(2,Kut,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    10000       prod_starved(Kut,1)
   -10000       timber_bought(Kut,1)
        1       Barges_buy(Kut,1)
     1550       PROFIT(1)

r(2,Kut,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    10000       prod_starved(Kut,2)
   -10000       timber_bought(Kut,2)
        1       Barges_buy(Kut,2)
     1550       PROFIT(2)

r(2,Kut,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    10000       prod_starved(Kut,3)
   -10000       timber_bought(Kut,3)
        1       Barges_buy(Kut,3)
     1550       PROFIT(3)

r(2,Kot,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    10000       prod_starved(Kot,1)
   -10000       timber_bought(Kot,1)
        1       Barges_buy(Kot,1)
     1500       PROFIT(1)

r(2,Kot,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    10000       prod_starved(Kot,2)
   -10000       timber_bought(Kot,2)
        1       Barges_buy(Kot,2)
     1500       PROFIT(2)

r(2,Kot,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    10000       prod_starved(Kot,3)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/19/17 02:05:06 Page 76
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE final Using MIP From line 437


     r  1 if we buy n boats of timber i, 0 otherwise

   -10000       timber_bought(Kot,3)
        1       Barges_buy(Kot,3)
     1500       PROFIT(3)

r(2,Mak,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    10000       prod_starved(Mak,1)
   -10000       timber_bought(Mak,1)
        1       Barges_buy(Mak,1)
     1820       PROFIT(1)

r(2,Mak,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    10000       prod_starved(Mak,2)
   -10000       timber_bought(Mak,2)
        1       Barges_buy(Mak,2)
     1820       PROFIT(2)

r(2,Mak,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    10000       prod_starved(Mak,3)
   -10000       timber_bought(Mak,3)
        1       Barges_buy(Mak,3)
     1820       PROFIT(3)

r(2,Kuk,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    10000       prod_starved(Kuk,1)
   -10000       timber_bought(Kuk,1)
        1       Barges_buy(Kuk,1)
     1530       PROFIT(1)

r(2,Kuk,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    10000       prod_starved(Kuk,2)
   -10000       timber_bought(Kuk,2)
        1       Barges_buy(Kuk,2)
     1530       PROFIT(2)

r(2,Kuk,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    10000       prod_starved(Kuk,3)
   -10000       timber_bought(Kuk,3)
        1       Barges_buy(Kuk,3)
     1530       PROFIT(3)

r(2,Kok,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    10000       prod_starved(Kok,1)
   -10000       timber_bought(Kok,1)
        1       Barges_buy(Kok,1)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/19/17 02:05:06 Page 77
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE final Using MIP From line 437


     r  1 if we buy n boats of timber i, 0 otherwise

     1520       PROFIT(1)

r(2,Kok,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    10000       prod_starved(Kok,2)
   -10000       timber_bought(Kok,2)
        1       Barges_buy(Kok,2)
     1520       PROFIT(2)

r(2,Kok,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    10000       prod_starved(Kok,3)
   -10000       timber_bought(Kok,3)
        1       Barges_buy(Kok,3)
     1520       PROFIT(3)

r(3,Mat,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    20000       prod_starved(Mat,1)
   -20000       timber_bought(Mat,1)
        1       Barges_buy(Mat,1)
     4200       PROFIT(1)

r(3,Mat,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    20000       prod_starved(Mat,2)
   -20000       timber_bought(Mat,2)
        1       Barges_buy(Mat,2)
     4200       PROFIT(2)

r(3,Mat,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    20000       prod_starved(Mat,3)
   -20000       timber_bought(Mat,3)
        1       Barges_buy(Mat,3)
     4200       PROFIT(3)

r(3,Kut,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    20000       prod_starved(Kut,1)
   -20000       timber_bought(Kut,1)
        1       Barges_buy(Kut,1)
     3200       PROFIT(1)

r(3,Kut,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    20000       prod_starved(Kut,2)
   -20000       timber_bought(Kut,2)
        1       Barges_buy(Kut,2)
     3200       PROFIT(2)

GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/19/17 02:05:06 Page 78
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE final Using MIP From line 437


     r  1 if we buy n boats of timber i, 0 otherwise

r(3,Kut,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    20000       prod_starved(Kut,3)
   -20000       timber_bought(Kut,3)
        1       Barges_buy(Kut,3)
     3200       PROFIT(3)

r(3,Kot,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    20000       prod_starved(Kot,1)
   -20000       timber_bought(Kot,1)
        1       Barges_buy(Kot,1)
     3600       PROFIT(1)

r(3,Kot,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    20000       prod_starved(Kot,2)
   -20000       timber_bought(Kot,2)
        1       Barges_buy(Kot,2)
     3600       PROFIT(2)

r(3,Kot,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    20000       prod_starved(Kot,3)
   -20000       timber_bought(Kot,3)
        1       Barges_buy(Kot,3)
     3600       PROFIT(3)

r(3,Mak,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    20000       prod_starved(Mak,1)
   -20000       timber_bought(Mak,1)
        1       Barges_buy(Mak,1)
     3680       PROFIT(1)

r(3,Mak,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    20000       prod_starved(Mak,2)
   -20000       timber_bought(Mak,2)
        1       Barges_buy(Mak,2)
     3680       PROFIT(2)

r(3,Mak,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    20000       prod_starved(Mak,3)
   -20000       timber_bought(Mak,3)
        1       Barges_buy(Mak,3)
     3680       PROFIT(3)

r(3,Kuk,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/19/17 02:05:06 Page 79
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE final Using MIP From line 437


     r  1 if we buy n boats of timber i, 0 otherwise

    20000       prod_starved(Kuk,1)
   -20000       timber_bought(Kuk,1)
        1       Barges_buy(Kuk,1)
     3120       PROFIT(1)

r(3,Kuk,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    20000       prod_starved(Kuk,2)
   -20000       timber_bought(Kuk,2)
        1       Barges_buy(Kuk,2)
     3120       PROFIT(2)

r(3,Kuk,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    20000       prod_starved(Kuk,3)
   -20000       timber_bought(Kuk,3)
        1       Barges_buy(Kuk,3)
     3120       PROFIT(3)

r(3,Kok,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    20000       prod_starved(Kok,1)
   -20000       timber_bought(Kok,1)
        1       Barges_buy(Kok,1)
     3080       PROFIT(1)

r(3,Kok,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    20000       prod_starved(Kok,2)
   -20000       timber_bought(Kok,2)
        1       Barges_buy(Kok,2)
     3080       PROFIT(2)

r(3,Kok,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    20000       prod_starved(Kok,3)
   -20000       timber_bought(Kok,3)
        1       Barges_buy(Kok,3)
     3080       PROFIT(3)

r(4,Mat,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    30000       prod_starved(Mat,1)
   -30000       timber_bought(Mat,1)
        1       Barges_buy(Mat,1)
     6600       PROFIT(1)

r(4,Mat,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    30000       prod_starved(Mat,2)
   -30000       timber_bought(Mat,2)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/19/17 02:05:06 Page 80
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE final Using MIP From line 437


     r  1 if we buy n boats of timber i, 0 otherwise

        1       Barges_buy(Mat,2)
     6600       PROFIT(2)

r(4,Mat,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    30000       prod_starved(Mat,3)
   -30000       timber_bought(Mat,3)
        1       Barges_buy(Mat,3)
     6600       PROFIT(3)

r(4,Kut,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    30000       prod_starved(Kut,1)
   -30000       timber_bought(Kut,1)
        1       Barges_buy(Kut,1)
     4950       PROFIT(1)

r(4,Kut,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    30000       prod_starved(Kut,2)
   -30000       timber_bought(Kut,2)
        1       Barges_buy(Kut,2)
     4950       PROFIT(2)

r(4,Kut,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    30000       prod_starved(Kut,3)
   -30000       timber_bought(Kut,3)
        1       Barges_buy(Kut,3)
     4950       PROFIT(3)

r(4,Kot,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    30000       prod_starved(Kot,1)
   -30000       timber_bought(Kot,1)
        1       Barges_buy(Kot,1)
     6300       PROFIT(1)

r(4,Kot,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    30000       prod_starved(Kot,2)
   -30000       timber_bought(Kot,2)
        1       Barges_buy(Kot,2)
     6300       PROFIT(2)

r(4,Kot,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    30000       prod_starved(Kot,3)
   -30000       timber_bought(Kot,3)
        1       Barges_buy(Kot,3)
     6300       PROFIT(3)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/19/17 02:05:06 Page 81
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE final Using MIP From line 437


     r  1 if we buy n boats of timber i, 0 otherwise


r(4,Mak,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    30000       prod_starved(Mak,1)
   -30000       timber_bought(Mak,1)
        1       Barges_buy(Mak,1)
     5580       PROFIT(1)

r(4,Mak,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    30000       prod_starved(Mak,2)
   -30000       timber_bought(Mak,2)
        1       Barges_buy(Mak,2)
     5580       PROFIT(2)

r(4,Mak,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    30000       prod_starved(Mak,3)
   -30000       timber_bought(Mak,3)
        1       Barges_buy(Mak,3)
     5580       PROFIT(3)

r(4,Kuk,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    30000       prod_starved(Kuk,1)
   -30000       timber_bought(Kuk,1)
        1       Barges_buy(Kuk,1)
     4770       PROFIT(1)

r(4,Kuk,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    30000       prod_starved(Kuk,2)
   -30000       timber_bought(Kuk,2)
        1       Barges_buy(Kuk,2)
     4770       PROFIT(2)

r(4,Kuk,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    30000       prod_starved(Kuk,3)
   -30000       timber_bought(Kuk,3)
        1       Barges_buy(Kuk,3)
     4770       PROFIT(3)

r(4,Kok,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    30000       prod_starved(Kok,1)
   -30000       timber_bought(Kok,1)
        1       Barges_buy(Kok,1)
     4680       PROFIT(1)

r(4,Kok,2)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/19/17 02:05:06 Page 82
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE final Using MIP From line 437


     r  1 if we buy n boats of timber i, 0 otherwise

                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    30000       prod_starved(Kok,2)
   -30000       timber_bought(Kok,2)
        1       Barges_buy(Kok,2)
     4680       PROFIT(2)

r(4,Kok,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    30000       prod_starved(Kok,3)
   -30000       timber_bought(Kok,3)
        1       Barges_buy(Kok,3)
     4680       PROFIT(3)

r(5,Mat,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    40000       prod_starved(Mat,1)
   -40000       timber_bought(Mat,1)
        1       Barges_buy(Mat,1)
     9200       PROFIT(1)

r(5,Mat,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    40000       prod_starved(Mat,2)
   -40000       timber_bought(Mat,2)
        1       Barges_buy(Mat,2)
     9200       PROFIT(2)

r(5,Mat,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    40000       prod_starved(Mat,3)
   -40000       timber_bought(Mat,3)
        1       Barges_buy(Mat,3)
     9200       PROFIT(3)

r(5,Kut,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    40000       prod_starved(Kut,1)
   -40000       timber_bought(Kut,1)
        1       Barges_buy(Kut,1)
     6800       PROFIT(1)

r(5,Kut,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    40000       prod_starved(Kut,2)
   -40000       timber_bought(Kut,2)
        1       Barges_buy(Kut,2)
     6800       PROFIT(2)

r(5,Kut,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    40000       prod_starved(Kut,3)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/19/17 02:05:06 Page 83
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE final Using MIP From line 437


     r  1 if we buy n boats of timber i, 0 otherwise

   -40000       timber_bought(Kut,3)
        1       Barges_buy(Kut,3)
     6800       PROFIT(3)

r(5,Kot,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    40000       prod_starved(Kot,1)
   -40000       timber_bought(Kot,1)
        1       Barges_buy(Kot,1)
     9600       PROFIT(1)

r(5,Kot,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    40000       prod_starved(Kot,2)
   -40000       timber_bought(Kot,2)
        1       Barges_buy(Kot,2)
     9600       PROFIT(2)

r(5,Kot,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    40000       prod_starved(Kot,3)
   -40000       timber_bought(Kot,3)
        1       Barges_buy(Kot,3)
     9600       PROFIT(3)

r(5,Mak,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    40000       prod_starved(Mak,1)
   -40000       timber_bought(Mak,1)
        1       Barges_buy(Mak,1)
     7520       PROFIT(1)

r(5,Mak,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    40000       prod_starved(Mak,2)
   -40000       timber_bought(Mak,2)
        1       Barges_buy(Mak,2)
     7520       PROFIT(2)

r(5,Mak,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    40000       prod_starved(Mak,3)
   -40000       timber_bought(Mak,3)
        1       Barges_buy(Mak,3)
     7520       PROFIT(3)

r(5,Kuk,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    40000       prod_starved(Kuk,1)
   -40000       timber_bought(Kuk,1)
        1       Barges_buy(Kuk,1)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/19/17 02:05:06 Page 84
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE final Using MIP From line 437


     r  1 if we buy n boats of timber i, 0 otherwise

     6480       PROFIT(1)

r(5,Kuk,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    40000       prod_starved(Kuk,2)
   -40000       timber_bought(Kuk,2)
        1       Barges_buy(Kuk,2)
     6480       PROFIT(2)

r(5,Kuk,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    40000       prod_starved(Kuk,3)
   -40000       timber_bought(Kuk,3)
        1       Barges_buy(Kuk,3)
     6480       PROFIT(3)

r(5,Kok,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    40000       prod_starved(Kok,1)
   -40000       timber_bought(Kok,1)
        1       Barges_buy(Kok,1)
     6320       PROFIT(1)

r(5,Kok,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    40000       prod_starved(Kok,2)
   -40000       timber_bought(Kok,2)
        1       Barges_buy(Kok,2)
     6320       PROFIT(2)

r(5,Kok,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    40000       prod_starved(Kok,3)
   -40000       timber_bought(Kok,3)
        1       Barges_buy(Kok,3)
     6320       PROFIT(3)

r(6,Mat,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    50000       prod_starved(Mat,1)
   -50000       timber_bought(Mat,1)
        1       Barges_buy(Mat,1)
    12000       PROFIT(1)

r(6,Mat,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    50000       prod_starved(Mat,2)
   -50000       timber_bought(Mat,2)
        1       Barges_buy(Mat,2)
    12000       PROFIT(2)

GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/19/17 02:05:06 Page 85
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE final Using MIP From line 437


     r  1 if we buy n boats of timber i, 0 otherwise

r(6,Mat,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    50000       prod_starved(Mat,3)
   -50000       timber_bought(Mat,3)
        1       Barges_buy(Mat,3)
    12000       PROFIT(3)

r(6,Kut,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    50000       prod_starved(Kut,1)
   -50000       timber_bought(Kut,1)
        1       Barges_buy(Kut,1)
     8750       PROFIT(1)

r(6,Kut,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    50000       prod_starved(Kut,2)
   -50000       timber_bought(Kut,2)
        1       Barges_buy(Kut,2)
     8750       PROFIT(2)

r(6,Kut,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    50000       prod_starved(Kut,3)
   -50000       timber_bought(Kut,3)
        1       Barges_buy(Kut,3)
     8750       PROFIT(3)

r(6,Kot,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    50000       prod_starved(Kot,1)
   -50000       timber_bought(Kot,1)
        1       Barges_buy(Kot,1)
    13500       PROFIT(1)

r(6,Kot,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    50000       prod_starved(Kot,2)
   -50000       timber_bought(Kot,2)
        1       Barges_buy(Kot,2)
    13500       PROFIT(2)

r(6,Kot,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    50000       prod_starved(Kot,3)
   -50000       timber_bought(Kot,3)
        1       Barges_buy(Kot,3)
    13500       PROFIT(3)

r(6,Mak,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/19/17 02:05:06 Page 86
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE final Using MIP From line 437


     r  1 if we buy n boats of timber i, 0 otherwise

    50000       prod_starved(Mak,1)
   -50000       timber_bought(Mak,1)
        1       Barges_buy(Mak,1)
     9500       PROFIT(1)

REMAINING 1826 ENTRIES SKIPPED

---- u  1 if we use n boats for product j shiping to region k, 0 otherwise

u(1,Mas,EU,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Mas,EU,1)

u(1,Mas,EU,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Mas,EU,2)

u(1,Mas,EU,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Mas,EU,3)

u(1,Mas,IE,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Mas,IE,1)

u(1,Mas,IE,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Mas,IE,2)

u(1,Mas,IE,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Mas,IE,3)

u(1,Mas,PA,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Mas,PA,1)

u(1,Mas,PA,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Mas,PA,2)

u(1,Mas,PA,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Mas,PA,3)

u(1,Mas,KI,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Mas,KI,1)

u(1,Mas,KI,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/19/17 02:05:06 Page 87
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE final Using MIP From line 437


     u  1 if we use n boats for product j shiping to region k, 0 otherwise

        1       Barges_sell(Mas,KI,2)

u(1,Mas,KI,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Mas,KI,3)

u(1,Kus,EU,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Kus,EU,1)

u(1,Kus,EU,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Kus,EU,2)

u(1,Kus,EU,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Kus,EU,3)

u(1,Kus,IE,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Kus,IE,1)

u(1,Kus,IE,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Kus,IE,2)

u(1,Kus,IE,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Kus,IE,3)

u(1,Kus,PA,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Kus,PA,1)

u(1,Kus,PA,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Kus,PA,2)

u(1,Kus,PA,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Kus,PA,3)

u(1,Kus,KI,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Kus,KI,1)

u(1,Kus,KI,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Kus,KI,2)

u(1,Kus,KI,3)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/19/17 02:05:06 Page 88
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE final Using MIP From line 437


     u  1 if we use n boats for product j shiping to region k, 0 otherwise

                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Kus,KI,3)

u(1,Kos,EU,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Kos,EU,1)

u(1,Kos,EU,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Kos,EU,2)

u(1,Kos,EU,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Kos,EU,3)

u(1,Kos,IE,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Kos,IE,1)

u(1,Kos,IE,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Kos,IE,2)

u(1,Kos,IE,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Kos,IE,3)

u(1,Kos,PA,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Kos,PA,1)

u(1,Kos,PA,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Kos,PA,2)

u(1,Kos,PA,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Kos,PA,3)

u(1,Kos,KI,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Kos,KI,1)

u(1,Kos,KI,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Kos,KI,2)

u(1,Kos,KI,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Kos,KI,3)

GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/19/17 02:05:06 Page 89
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE final Using MIP From line 437


     u  1 if we use n boats for product j shiping to region k, 0 otherwise

u(1,Kuv,EU,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Kuv,EU,1)

u(1,Kuv,EU,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Kuv,EU,2)

u(1,Kuv,EU,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Kuv,EU,3)

u(1,Kuv,IE,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Kuv,IE,1)

u(1,Kuv,IE,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Kuv,IE,2)

u(1,Kuv,IE,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Kuv,IE,3)

u(1,Kuv,PA,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Kuv,PA,1)

u(1,Kuv,PA,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Kuv,PA,2)

u(1,Kuv,PA,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Kuv,PA,3)

u(1,Kuv,KI,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Kuv,KI,1)

u(1,Kuv,KI,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Kuv,KI,2)

u(1,Kuv,KI,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Kuv,KI,3)

u(1,Kov,EU,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Kov,EU,1)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/19/17 02:05:06 Page 90
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE final Using MIP From line 437


     u  1 if we use n boats for product j shiping to region k, 0 otherwise


u(1,Kov,EU,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Kov,EU,2)

u(1,Kov,EU,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Kov,EU,3)

u(1,Kov,IE,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Kov,IE,1)

u(1,Kov,IE,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Kov,IE,2)

u(1,Kov,IE,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Kov,IE,3)

u(1,Kov,PA,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Kov,PA,1)

u(1,Kov,PA,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Kov,PA,2)

u(1,Kov,PA,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Kov,PA,3)

u(1,Kov,KI,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Kov,KI,1)

u(1,Kov,KI,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Kov,KI,2)

u(1,Kov,KI,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Kov,KI,3)

u(1,Hsel,EU,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Hsel,EU,1)

u(1,Hsel,EU,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/19/17 02:05:06 Page 91
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE final Using MIP From line 437


     u  1 if we use n boats for product j shiping to region k, 0 otherwise

        1       Barges_sell(Hsel,EU,2)

u(1,Hsel,EU,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Hsel,EU,3)

u(1,Hsel,IE,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Hsel,IE,1)

u(1,Hsel,IE,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Hsel,IE,2)

u(1,Hsel,IE,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Hsel,IE,3)

u(1,Hsel,PA,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Hsel,PA,1)

u(1,Hsel,PA,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Hsel,PA,2)

u(1,Hsel,PA,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Hsel,PA,3)

u(1,Hsel,KI,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Hsel,KI,1)

u(1,Hsel,KI,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Hsel,KI,2)

u(1,Hsel,KI,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Hsel,KI,3)

u(1,Lsel,EU,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Lsel,EU,1)

u(1,Lsel,EU,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Lsel,EU,2)

u(1,Lsel,EU,3)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/19/17 02:05:06 Page 92
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE final Using MIP From line 437


     u  1 if we use n boats for product j shiping to region k, 0 otherwise

                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Lsel,EU,3)

u(1,Lsel,IE,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Lsel,IE,1)

u(1,Lsel,IE,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Lsel,IE,2)

u(1,Lsel,IE,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Lsel,IE,3)

u(1,Lsel,PA,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Lsel,PA,1)

u(1,Lsel,PA,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Lsel,PA,2)

u(1,Lsel,PA,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Lsel,PA,3)

u(1,Lsel,KI,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Lsel,KI,1)

u(1,Lsel,KI,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Lsel,KI,2)

u(1,Lsel,KI,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Lsel,KI,3)

u(1,Pap,EU,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Pap,EU,1)

u(1,Pap,EU,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Pap,EU,2)

u(1,Pap,EU,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Pap,EU,3)

GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/19/17 02:05:06 Page 93
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE final Using MIP From line 437


     u  1 if we use n boats for product j shiping to region k, 0 otherwise

u(1,Pap,IE,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Pap,IE,1)

u(1,Pap,IE,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Pap,IE,2)

u(1,Pap,IE,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Pap,IE,3)

u(1,Pap,PA,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Pap,PA,1)

u(1,Pap,PA,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Pap,PA,2)

u(1,Pap,PA,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Pap,PA,3)

u(1,Pap,KI,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Pap,KI,1)

u(1,Pap,KI,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Pap,KI,2)

u(1,Pap,KI,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Pap,KI,3)

u(2,Mas,EU,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    10000       Sold_Prod(Mas,1)
        1       Barges_sell(Mas,EU,1)
   -15600       PROFIT(1)

u(2,Mas,EU,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    10000       Sold_Prod(Mas,2)
        1       Barges_sell(Mas,EU,2)
   -15603.9604  PROFIT(2)

u(2,Mas,EU,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    10000       Sold_Prod(Mas,3)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/19/17 02:05:06 Page 94
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE final Using MIP From line 437


     u  1 if we use n boats for product j shiping to region k, 0 otherwise

        1       Barges_sell(Mas,EU,3)
   -15607.8816  PROFIT(3)

u(2,Mas,IE,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    10000       Sold_Prod(Mas,1)
        1       Barges_sell(Mas,IE,1)
   -12000       PROFIT(1)

REMAINING 2108 ENTRIES SKIPPED

---- b  amount of timber i bought

b(Mat,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       timber_bought(Mat,1)
       -0.19    PROFIT(1)

b(Mat,2)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       timber_bought(Mat,2)
       -0.19    PROFIT(2)

b(Mat,3)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       timber_bought(Mat,3)
       -0.19    PROFIT(3)

b(Kut,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       timber_bought(Kut,1)
       -0.15    PROFIT(1)

b(Kut,2)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       timber_bought(Kut,2)
       -0.15    PROFIT(2)

b(Kut,3)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       timber_bought(Kut,3)
       -0.15    PROFIT(3)

b(Kot,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       timber_bought(Kot,1)
       -0.12    PROFIT(1)

b(Kot,2)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       timber_bought(Kot,2)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/19/17 02:05:06 Page 95
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE final Using MIP From line 437


     b  amount of timber i bought

       -0.12    PROFIT(2)

b(Kot,3)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       timber_bought(Kot,3)
       -0.12    PROFIT(3)

b(Mak,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       timber_bought(Mak,1)
       -0.18    PROFIT(1)

b(Mak,2)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       timber_bought(Mak,2)
       -0.18    PROFIT(2)

b(Mak,3)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       timber_bought(Mak,3)
       -0.18    PROFIT(3)

b(Kuk,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       timber_bought(Kuk,1)
       -0.15    PROFIT(1)

b(Kuk,2)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       timber_bought(Kuk,2)
       -0.15    PROFIT(2)

b(Kuk,3)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       timber_bought(Kuk,3)
       -0.15    PROFIT(3)

b(Kok,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       timber_bought(Kok,1)
       -0.15    PROFIT(1)

b(Kok,2)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       timber_bought(Kok,2)
       -0.15    PROFIT(2)

b(Kok,3)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       timber_bought(Kok,3)
       -0.15    PROFIT(3)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/19/17 02:05:06 Page 96
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE final Using MIP From line 437


     b  amount of timber i bought



---- Pr  Net profit in each year t

Pr(1)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
       -1       obj
        1       PROFIT(1)

Pr(2)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
       -0.95    obj
        1       PROFIT(2)

Pr(3)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
       -0.9025  obj
        1       PROFIT(3)


---- Cap  Capacity of machine m in year t

Cap(SAW,1)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       Capacity2(SAW,1)
        1       MaxCapacity(SAW,1)
        1       CapStart(SAW,1)
        1       CapStart(SAW,2)
        1       CapStart(SAW,3)
        1       Capacity3(SAW,1)
       -1       Capacity3(SAW,2)

Cap(SAW,2)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       Capacity2(SAW,2)
        1       MaxCapacity(SAW,2)
        0.1     PROFIT(1)
        1       Capacity3(SAW,2)
       -1       Capacity3(SAW,3)

Cap(SAW,3)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       Capacity2(SAW,3)
        1       MaxCapacity(SAW,3)
        0.1     PROFIT(2)
        1       Capacity3(SAW,3)

Cap(PLY,1)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       Capacity2(PLY,1)
        1       MaxCapacity(PLY,1)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/19/17 02:05:06 Page 97
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE final Using MIP From line 437


     Cap  Capacity of machine m in year t

        1       CapStart(PLY,1)
        1       CapStart(PLY,2)
        1       CapStart(PLY,3)
        1       Capacity3(PLY,1)
       -1       Capacity3(PLY,2)

Cap(PLY,2)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       Capacity2(PLY,2)
        1       MaxCapacity(PLY,2)
        0.3     PROFIT(1)
        1       Capacity3(PLY,2)
       -1       Capacity3(PLY,3)

Cap(PLY,3)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       Capacity2(PLY,3)
        1       MaxCapacity(PLY,3)
        0.3     PROFIT(2)
        1       Capacity3(PLY,3)

Cap(SPULP,1)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       Capacity2(SPULP,1)
        1       MaxCapacity(SPULP,1)
        1       CapStart(SPULP,1)
        1       CapStart(SPULP,2)
        1       CapStart(SPULP,3)
        1       Capacity3(SPULP,1)
       -1       Capacity3(SPULP,2)

Cap(SPULP,2)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       Capacity2(SPULP,2)
        1       MaxCapacity(SPULP,2)
        0.5     PROFIT(1)
        1       Capacity3(SPULP,2)
       -1       Capacity3(SPULP,3)

Cap(SPULP,3)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       Capacity2(SPULP,3)
        1       MaxCapacity(SPULP,3)
        0.5     PROFIT(2)
        1       Capacity3(SPULP,3)

Cap(HPULP,1)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       Capacity2(HPULP,1)
        1       MaxCapacity(HPULP,1)
        1       CapStart(HPULP,1)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/19/17 02:05:06 Page 98
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE final Using MIP From line 437


     Cap  Capacity of machine m in year t

        1       CapStart(HPULP,2)
        1       CapStart(HPULP,3)
        1       Capacity3(HPULP,1)
       -1       Capacity3(HPULP,2)

Cap(HPULP,2)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       Capacity2(HPULP,2)
        1       MaxCapacity(HPULP,2)
        0.5     PROFIT(1)
        1       Capacity3(HPULP,2)
       -1       Capacity3(HPULP,3)

Cap(HPULP,3)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       Capacity2(HPULP,3)
        1       MaxCapacity(HPULP,3)
        0.5     PROFIT(2)
        1       Capacity3(HPULP,3)

Cap(PAPM,1)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       Capacity2(PAPM,1)
        1       MaxCapacity(PAPM,1)
        1       CapStart(PAPM,1)
        1       CapStart(PAPM,2)
        1       CapStart(PAPM,3)
        1       Capacity3(PAPM,1)
       -1       Capacity3(PAPM,2)

Cap(PAPM,2)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       Capacity2(PAPM,2)
        1       MaxCapacity(PAPM,2)
        0.7     PROFIT(1)
        1       Capacity3(PAPM,2)
       -1       Capacity3(PAPM,3)

Cap(PAPM,3)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       Capacity2(PAPM,3)
        1       MaxCapacity(PAPM,3)
        0.7     PROFIT(2)
        1       Capacity3(PAPM,3)

GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/19/17 02:05:06 Page 99
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Model Statistics    SOLVE final Using MIP From line 437


MODEL STATISTICS

BLOCKS OF EQUATIONS          15     SINGLE EQUATIONS          268
BLOCKS OF VARIABLES           8     SINGLE VARIABLES        4,213
NON ZERO ELEMENTS        14,391     DISCRETE VARIABLES      4,158


GENERATION TIME      =        0.112 SECONDS      5 MB  24.8.1 r59919 DEX-DEG


EXECUTION TIME       =        0.113 SECONDS      5 MB  24.8.1 r59919 DEX-DEG
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/19/17 02:05:06 Page 100
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 437


               S O L V E      S U M M A R Y

     MODEL   final               OBJECTIVE  z
     TYPE    MIP                 DIRECTION  MAXIMIZE
     SOLVER  CPLEX               FROM LINE  437

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      1 Optimal                   
**** OBJECTIVE VALUE           529183.3036

 RESOURCE USAGE, LIMIT          1.175       300.000
 ITERATION COUNT, LIMIT      3106     999999999

IBM ILOG CPLEX   24.8.1 r59919 Released Dec 22, 2016 DEG x86 64bit/Mac OS X   
--- GAMS/Cplex licensed for continuous and discrete problems.
Cplex 12.7.0.0

Space for names approximately 0.09 Mb
Use option 'names no' to turn use of names off
MIP status(101): integer optimal solution
Cplex Time: 1.10sec (det. 517.81 ticks)
Fixing integer variables, and solving final LP...
Fixed MIP status(1): optimal
Cplex Time: 0.00sec (det. 1.77 ticks)
Proven optimal solution.

MIP Solution:       529183.303613    (3106 iterations, 576 nodes)
Final Solve:        529183.303608    (0 iterations)

Best possible:      529183.303613
Absolute gap:            0.000000
Relative gap:            0.000000


                           LOWER          LEVEL          UPPER         MARGINAL

---- EQU obj                 .              .              .             1.0000      

  obj  Maximum gross profit

---- EQU timber_used   amount of  timber i used to make  product j in year t

             LOWER          LEVEL          UPPER         MARGINAL

Mat.1          .              .              .             0.1900      
Mat.2          .              .              .             0.1805      
Mat.3          .              .              .             0.1715      
Kut.1          .              .              .             0.1500      
Kut.2          .              .              .             0.1425      
Kut.3          .              .              .             0.1354      
Kot.1          .              .              .             0.1200      
Kot.2          .              .              .             0.1140      
Kot.3          .              .              .             0.1083      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/19/17 02:05:06 Page 101
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 437


     EQU timber_used   amount of  timber i used to make  product j in year t

             LOWER          LEVEL          UPPER         MARGINAL

Mak.1          .              .              .             0.1800      
Mak.2          .              .              .             0.1710      
Mak.3          .              .              .             0.1624      
Kuk.1          .              .              .              .          
Kuk.2          .              .              .             0.1425      
Kuk.3          .              .              .             0.1354      
Kok.1          .              .              .             0.1500      
Kok.2          .              .              .             0.1425      
Kok.3          .              .              .             0.1354      

---- EQU prod_starved  ensure that production can not be starved in each year

             LOWER          LEVEL          UPPER         MARGINAL

Mat.1          .              .            +INF             .          
Mat.2          .              .            +INF             .          
Mat.3          .              .            +INF             .          
Kut.1          .              .            +INF             .          
Kut.2          .          6000.0000        +INF             .          
Kut.3          .          6000.0000        +INF             .          
Kot.1          .          6000.0000        +INF             .          
Kot.2          .          4000.0000        +INF             .          
Kot.3          .          4000.0000        +INF             .          
Mak.1          .          1200.0000        +INF             .          
Mak.2          .          2000.0000        +INF             .          
Mak.3          .          6000.0000        +INF             .          
Kuk.1          .              .            +INF             .          
Kuk.2          .          8000.0000        +INF             .          
Kuk.3          .          8000.0000        +INF             .          
Kok.1          .          4800.0000        +INF             .          
Kok.2          .              .            +INF             .          
Kok.3          .              .            +INF             .          

---- EQU Sold_Prod  we cant sell more than we produce in each year

              LOWER          LEVEL          UPPER         MARGINAL

Mas .1        -INF             .              .              .          
Mas .2        -INF             .              .              .          
Mas .3        -INF             .              .              .          
Kus .1        -INF             .              .              .          
Kus .2        -INF             .              .              .          
Kus .3        -INF             .              .              .          
Kos .1        -INF             .              .              .          
Kos .2        -INF      -5.540278E-7          .              .          
Kos .3        -INF      3.2175740E-7          .              .          
Kuv .1        -INF             .              .              .          
Kuv .2        -INF      -4.492758E-7          .              .          
Kuv .3        -INF             .              .              .          
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/19/17 02:05:06 Page 102
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 437


     EQU Sold_Prod  we cant sell more than we produce in each year

              LOWER          LEVEL          UPPER         MARGINAL

Kov .1        -INF             .              .              .          
Kov .2        -INF             .              .              .          
Kov .3        -INF             .              .              .          
Hsel.1        -INF       -16000.0000          .              .          
Hsel.2        -INF       -30000.0000          .              .          
Hsel.3        -INF       -30000.0000          .              .          
Lsel.1        -INF       -16000.0000          .              .          
Lsel.2        -INF       -30000.0000          .              .          
Lsel.3        -INF       -30000.0000          .              .          
Pap .1        -INF             .              .              .          
Pap .2        -INF             .              .              .          
Pap .3        -INF             .              .              .          

---- EQU timber_bought  amount of timber i bought in each year

             LOWER          LEVEL          UPPER         MARGINAL

Mat.1          .              .              .             0.1900      
Mat.2          .              .              .             0.1805      
Mat.3          .              .              .             0.1715      
Kut.1          .              .              .             0.1500      
Kut.2          .              .              .             0.1425      
Kut.3          .              .              .             0.1354      
Kot.1          .              .              .             0.1200      
Kot.2          .              .              .             0.1140      
Kot.3          .              .              .             0.1083      
Mak.1          .              .              .             0.1800      
Mak.2          .              .              .             0.1710      
Mak.3          .              .              .             0.1624      
Kuk.1          .              .              .             0.1500      
Kuk.2          .              .              .             0.1425      
Kuk.3          .              .              .             0.1354      
Kok.1          .              .              .             0.1500      
Kok.2          .              .              .             0.1425      
Kok.3          .              .              .             0.1354      

---- EQU Barges_buy  ensure we only pick one value n for barges for each timber i

             LOWER          LEVEL          UPPER         MARGINAL

Mat.1         1.0000         1.0000         1.0000          .          
Mat.2         1.0000         1.0000         1.0000          .          
Mat.3         1.0000         1.0000         1.0000          .          
Kut.1         1.0000         1.0000         1.0000          .          
Kut.2         1.0000         1.0000         1.0000          .          
Kut.3         1.0000         1.0000         1.0000          .          
Kot.1         1.0000         1.0000         1.0000          .          
Kot.2         1.0000         1.0000         1.0000          .          
Kot.3         1.0000         1.0000         1.0000          .          
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/19/17 02:05:06 Page 103
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 437


     EQU Barges_buy  ensure we only pick one value n for barges for each timber i

             LOWER          LEVEL          UPPER         MARGINAL

Mak.1         1.0000         1.0000         1.0000          .          
Mak.2         1.0000         1.0000         1.0000          .          
Mak.3         1.0000         1.0000         1.0000          .          
Kuk.1         1.0000         1.0000         1.0000          .          
Kuk.2         1.0000         1.0000         1.0000          .          
Kuk.3         1.0000         1.0000         1.0000          .          
Kok.1         1.0000         1.0000         1.0000          .          
Kok.2         1.0000         1.0000         1.0000          .          
Kok.3         1.0000         1.0000         1.0000          .          

---- EQU Barges_sell  ensure we only pick one value  n for barges for each product to each city

                 LOWER          LEVEL          UPPER         MARGINAL

Mas .EU.1         1.0000         1.0000         1.0000          .          
Mas .EU.2         1.0000         1.0000         1.0000          .          
Mas .EU.3         1.0000         1.0000         1.0000          .          
Mas .IE.1         1.0000         1.0000         1.0000          .          
Mas .IE.2         1.0000         1.0000         1.0000          .          
Mas .IE.3         1.0000         1.0000         1.0000          .          
Mas .PA.1         1.0000         1.0000         1.0000          .          
Mas .PA.2         1.0000         1.0000         1.0000          .          
Mas .PA.3         1.0000         1.0000         1.0000          .          
Mas .KI.1         1.0000         1.0000         1.0000          .          
Mas .KI.2         1.0000         1.0000         1.0000          .          
Mas .KI.3         1.0000         1.0000         1.0000          .          
Kus .EU.1         1.0000         1.0000         1.0000          .          
Kus .EU.2         1.0000         1.0000         1.0000          .          
Kus .EU.3         1.0000         1.0000         1.0000          .          
Kus .IE.1         1.0000         1.0000         1.0000          .          
Kus .IE.2         1.0000         1.0000         1.0000          .          
Kus .IE.3         1.0000         1.0000         1.0000          .          
Kus .PA.1         1.0000         1.0000         1.0000          .          
Kus .PA.2         1.0000         1.0000         1.0000          .          
Kus .PA.3         1.0000         1.0000         1.0000          .          
Kus .KI.1         1.0000         1.0000         1.0000          .          
Kus .KI.2         1.0000         1.0000         1.0000          .          
Kus .KI.3         1.0000         1.0000         1.0000          .          
Kos .EU.1         1.0000         1.0000         1.0000          .          
Kos .EU.2         1.0000         1.0000         1.0000          .          
Kos .EU.3         1.0000         1.0000         1.0000          .          
Kos .IE.1         1.0000         1.0000         1.0000          .          
Kos .IE.2         1.0000         1.0000         1.0000          .          
Kos .IE.3         1.0000         1.0000         1.0000          .          
Kos .PA.1         1.0000         1.0000         1.0000          .          
Kos .PA.2         1.0000         1.0000         1.0000          .          
Kos .PA.3         1.0000         1.0000         1.0000          .          
Kos .KI.1         1.0000         1.0000         1.0000          .          
Kos .KI.2         1.0000         1.0000         1.0000          .          
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/19/17 02:05:06 Page 104
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 437


     EQU Barges_sell  ensure we only pick one value  n for barges for each product to each city

                 LOWER          LEVEL          UPPER         MARGINAL

Kos .KI.3         1.0000         1.0000         1.0000          .          
Kuv .EU.1         1.0000         1.0000         1.0000          .          
Kuv .EU.2         1.0000         1.0000         1.0000          .          
Kuv .EU.3         1.0000         1.0000         1.0000          .          
Kuv .IE.1         1.0000         1.0000         1.0000          .          
Kuv .IE.2         1.0000         1.0000         1.0000          .          
Kuv .IE.3         1.0000         1.0000         1.0000          .          
Kuv .PA.1         1.0000         1.0000         1.0000          .          
Kuv .PA.2         1.0000         1.0000         1.0000          .          
Kuv .PA.3         1.0000         1.0000         1.0000          .          
Kuv .KI.1         1.0000         1.0000         1.0000          .          
Kuv .KI.2         1.0000         1.0000         1.0000          .          
Kuv .KI.3         1.0000         1.0000         1.0000          .          
Kov .EU.1         1.0000         1.0000         1.0000          .          
Kov .EU.2         1.0000         1.0000         1.0000          .          
Kov .EU.3         1.0000         1.0000         1.0000          .          
Kov .IE.1         1.0000         1.0000         1.0000          .          
Kov .IE.2         1.0000         1.0000         1.0000          .          
Kov .IE.3         1.0000         1.0000         1.0000          .          
Kov .PA.1         1.0000         1.0000         1.0000          .          
Kov .PA.2         1.0000         1.0000         1.0000          .          
Kov .PA.3         1.0000         1.0000         1.0000          .          
Kov .KI.1         1.0000         1.0000         1.0000          .          
Kov .KI.2         1.0000         1.0000         1.0000          .          
Kov .KI.3         1.0000         1.0000         1.0000          .          
Hsel.EU.1         1.0000         1.0000         1.0000          .          
Hsel.EU.2         1.0000         1.0000         1.0000          .          
Hsel.EU.3         1.0000         1.0000         1.0000          .          
Hsel.IE.1         1.0000         1.0000         1.0000          .          
Hsel.IE.2         1.0000         1.0000         1.0000          .          
Hsel.IE.3         1.0000         1.0000         1.0000          .          
Hsel.PA.1         1.0000         1.0000         1.0000          .          
Hsel.PA.2         1.0000         1.0000         1.0000          .          
Hsel.PA.3         1.0000         1.0000         1.0000          .          
Hsel.KI.1         1.0000         1.0000         1.0000          .          
Hsel.KI.2         1.0000         1.0000         1.0000          .          
Hsel.KI.3         1.0000         1.0000         1.0000          .          
Lsel.EU.1         1.0000         1.0000         1.0000          .          
Lsel.EU.2         1.0000         1.0000         1.0000          .          
Lsel.EU.3         1.0000         1.0000         1.0000          .          
Lsel.IE.1         1.0000         1.0000         1.0000          .          
Lsel.IE.2         1.0000         1.0000         1.0000          .          
Lsel.IE.3         1.0000         1.0000         1.0000          .          
Lsel.PA.1         1.0000         1.0000         1.0000          .          
Lsel.PA.2         1.0000         1.0000         1.0000          .          
Lsel.PA.3         1.0000         1.0000         1.0000          .          
Lsel.KI.1         1.0000         1.0000         1.0000          .          
Lsel.KI.2         1.0000         1.0000         1.0000          .          
Lsel.KI.3         1.0000         1.0000         1.0000          .          
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/19/17 02:05:06 Page 105
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 437


     EQU Barges_sell  ensure we only pick one value  n for barges for each product to each city

                 LOWER          LEVEL          UPPER         MARGINAL

Pap .EU.1         1.0000         1.0000         1.0000          .          
Pap .EU.2         1.0000         1.0000         1.0000          .          
Pap .EU.3         1.0000         1.0000         1.0000          .          
Pap .IE.1         1.0000         1.0000         1.0000          .          
Pap .IE.2         1.0000         1.0000         1.0000          .          
Pap .IE.3         1.0000         1.0000         1.0000          .          
Pap .PA.1         1.0000         1.0000         1.0000          .          
Pap .PA.2         1.0000         1.0000         1.0000          .          
Pap .PA.3         1.0000         1.0000         1.0000          .          
Pap .KI.1         1.0000         1.0000         1.0000          .          
Pap .KI.2         1.0000         1.0000         1.0000          .          
Pap .KI.3         1.0000         1.0000         1.0000          .          

---- EQU Capacity2  Make sure that the capacity does not go down

               LOWER          LEVEL          UPPER         MARGINAL

SAW  .1          .         30000.0000        +INF             .          
SAW  .2          .         20000.0000        +INF             .          
SAW  .3          .         30000.0000        +INF             .          
PLY  .1          .         10000.0000        +INF             .          
PLY  .2          .              .            +INF           -0.5850      
PLY  .3          .              .            +INF             .          
SPULP.1          .         24000.0000        +INF             .          
SPULP.2          .         20000.0000        +INF             .          
SPULP.3          .         60000.0000        +INF             .          
HPULP.1          .          4000.0000        +INF             .          
HPULP.2          .       1.1269003E-7        +INF             .          
HPULP.3          .         50000.0000        +INF             .          
PAPM .1          .              .            +INF            EPS         
PAPM .2          .              .            +INF           -1.3650      
PAPM .3          .       3.8562575E-8        +INF             .          

---- EQU MaxCapacity  Make sure we dont go over the maximum capacity

               LOWER          LEVEL          UPPER         MARGINAL

SAW  .1        -INF       100000.0000    150000.0000          .          
SAW  .2        -INF       100000.0000    150000.0000          .          
SAW  .3        -INF       100000.0000    150000.0000          .          
PLY  .1        -INF        90000.0000    135000.0000          .          
PLY  .2        -INF       100000.0000    135000.0000          .          
PLY  .3        -INF       100000.0000    135000.0000          .          
SPULP.1        -INF       100000.0000    200000.0000          .          
SPULP.2        -INF       100000.0000    200000.0000          .          
SPULP.3        -INF       100000.0000    200000.0000          .          
HPULP.1        -INF       150000.0000    300000.0000          .          
HPULP.2        -INF       150000.0000    300000.0000          .          
HPULP.3        -INF       150000.0000    300000.0000          .          
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/19/17 02:05:06 Page 106
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 437


     EQU MaxCapacity  Make sure we dont go over the maximum capacity

               LOWER          LEVEL          UPPER         MARGINAL

PAPM .1        -INF        80000.0000    160000.0000          .          
PAPM .2        -INF       150000.0000    160000.0000          .          
PAPM .3        -INF       150000.0000    160000.0000          .          

---- EQU CapStart  Make sure the starting capacity is right

               LOWER          LEVEL          UPPER         MARGINAL

SAW  .1    100000.0000    100000.0000    100000.0000        -0.1950      
SAW  .2    100000.0000    100000.0000    100000.0000          .          
SAW  .3    100000.0000    100000.0000    100000.0000          .          
PLY  .1     90000.0000     90000.0000     90000.0000         EPS         
PLY  .2     90000.0000     90000.0000     90000.0000          .          
PLY  .3     90000.0000     90000.0000     90000.0000          .          
SPULP.1    100000.0000    100000.0000    100000.0000        -0.9750      
SPULP.2    100000.0000    100000.0000    100000.0000          .          
SPULP.3    100000.0000    100000.0000    100000.0000          .          
HPULP.1    150000.0000    150000.0000    150000.0000        -0.9750      
HPULP.2    150000.0000    150000.0000    150000.0000          .          
HPULP.3    150000.0000    150000.0000    150000.0000          .          
PAPM .1     80000.0000     80000.0000     80000.0000          .          
PAPM .2     80000.0000     80000.0000     80000.0000          .          
PAPM .3     80000.0000     80000.0000     80000.0000          .          

---- EQU PAP_HSEL  Proportion needed of HSEL for PAP

         LOWER          LEVEL          UPPER         MARGINAL

1        -INF       -60000.0000          .              .          
2        -INF       -50000.0000          .              .          
3        -INF       -10000.0000          .              .          

---- EQU PAP_LSEL  Proportion needed of LSEL for PAP

         LOWER          LEVEL          UPPER         MARGINAL

1        -INF      -130000.0000          .              .          
2        -INF      -120000.0000          .              .          
3        -INF       -70000.0000          .              .          

---- EQU PULP_Bal  Cant produce paper without pulp

              LOWER          LEVEL          UPPER         MARGINAL

Hsel.1        -INF             .              .              .          
Hsel.2        -INF      -1.553053E-8          .              .          
Hsel.3        -INF             .              .              .          
Lsel.1        -INF             .              .              .          
Lsel.2        -INF      -1.083885E-6          .              .          
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/19/17 02:05:06 Page 107
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 437


     EQU PULP_Bal  Cant produce paper without pulp

              LOWER          LEVEL          UPPER         MARGINAL

Lsel.3        -INF             .              .              .          

---- EQU PROFIT  Profit is what we gain minus what we spend

         LOWER          LEVEL          UPPER         MARGINAL

1          .              .              .             1.0000      
2          .              .              .             0.9500      
3          .              .              .             0.9025      

---- EQU Capacity3  safdasd

               LOWER          LEVEL          UPPER         MARGINAL

SAW  .1          .        100000.0000        +INF             .          
SAW  .2          .              .            +INF           -0.1950      
SAW  .3          .              .            +INF           -0.0950      
PLY  .1          .         90000.0000        +INF             .          
PLY  .2          .         10000.0000        +INF             .          
PLY  .3          .              .            +INF           -0.2850      
SPULP.1          .        100000.0000        +INF             .          
SPULP.2          .              .            +INF           -0.9750      
SPULP.3          .              .            +INF           -0.4750      
HPULP.1          .        150000.0000        +INF             .          
HPULP.2          .              .            +INF           -0.9750      
HPULP.3          .              .            +INF           -0.4750      
PAPM .1          .         80000.0000        +INF             .          
PAPM .2          .         70000.0000        +INF             .          
PAPM .3          .              .            +INF           -0.6650      

                           LOWER          LEVEL          UPPER         MARGINAL

---- VAR z                 -INF       529183.3036        +INF             .          

  z  the objective

---- VAR y  Cubic meters produced of product j

              LOWER          LEVEL          UPPER         MARGINAL

Mas .1          .         70000.0000   1060000.0000        -0.7780      
Mas .2          .         70000.0000   1060000.0000        -0.7391      
Mas .3          .         60000.0000   1060000.0000        -0.7924      
Kus .1          .              .       1060000.0000        -0.7920      
Kus .2          .              .       1060000.0000        -0.6384      
Kus .3          .              .       1060000.0000        -0.6967      
Kos .1          .              .       1060000.0000        -0.5620      
Kos .2          .         10000.0000   1060000.0000        -0.5339      
Kos .3          .         10000.0000   1060000.0000        -0.5975      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/19/17 02:05:06 Page 108
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 437


     VAR y  Cubic meters produced of product j

              LOWER          LEVEL          UPPER         MARGINAL

Kuv .1          .         50000.0000   1060000.0000        -2.9120      
Kuv .2          .         80000.0000   1060000.0000        -3.1234      
Kuv .3          .         80000.0000   1060000.0000        -2.6822      
Kov .1          .         30000.0000   1060000.0000        -2.6880      
Kov .2          .         20000.0000   1060000.0000        -3.1386      
Kov .3          .         20000.0000   1060000.0000        -2.6967      
Hsel.1          .         76000.0000   1060000.0000        -1.6840      
Hsel.2          .         80000.0000   1060000.0000        -1.5998      
Hsel.3          .         40000.0000   1060000.0000        -1.9711      
Lsel.1          .        146000.0000   1060000.0000        -1.4300      
Lsel.2          .        150000.0000   1060000.0000        -1.3585      
Lsel.3          .        100000.0000   1060000.0000        -1.7418      
Pap .1          .         80000.0000   1060000.0000        -1.7000      
Pap .2          .        150000.0000   1060000.0000        -3.1225      
Pap .3          .        150000.0000   1060000.0000        -2.3014      

---- VAR s  amount of timber i used to make products

             LOWER          LEVEL          UPPER         MARGINAL

Mat.1          .        140000.0000        +INF             .          
Mat.2          .        140000.0000        +INF             .          
Mat.3          .        120000.0000        +INF             .          
Kut.1          .        140000.0000        +INF             .          
Kut.2          .        224000.0000        +INF             .          
Kut.3          .        224000.0000        +INF             .          
Kot.1          .         84000.0000        +INF             .          
Kot.2          .         76000.0000        +INF             .          
Kot.3          .         76000.0000        +INF             .          
Mak.1          .        308800.0000        +INF             .          
Mak.2          .        328000.0000        +INF             .          
Mak.3          .        144000.0000        +INF             .          
Kuk.1          .              .            +INF           -0.1500      
Kuk.2          .         22000.0000        +INF             .          
Kuk.3          .         22000.0000        +INF             .          
Kok.1          .        565200.0000        +INF             .          
Kok.2          .        590000.0000        +INF             .          
Kok.3          .        380000.0000        +INF             .          

---- VAR r  1 if we buy n boats of timber i, 0 otherwise

                 LOWER          LEVEL          UPPER         MARGINAL

1  .Mat.1          .              .             1.0000         EPS         
1  .Mat.2          .              .             1.0000         EPS         
1  .Mat.3          .              .             1.0000         EPS         
1  .Kut.1          .              .             1.0000         EPS         
1  .Kut.2          .              .             1.0000         EPS         
1  .Kut.3          .              .             1.0000         EPS         
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/19/17 02:05:06 Page 109
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 437


     VAR r  1 if we buy n boats of timber i, 0 otherwise

                 LOWER          LEVEL          UPPER         MARGINAL

1  .Kot.1          .              .             1.0000         EPS         
1  .Kot.2          .              .             1.0000         EPS         
1  .Kot.3          .              .             1.0000         EPS         
1  .Mak.1          .              .             1.0000         EPS         
1  .Mak.2          .              .             1.0000         EPS         
1  .Mak.3          .              .             1.0000         EPS         
1  .Kuk.1          .             1.0000         1.0000         EPS         
1  .Kuk.2          .              .             1.0000         EPS         
1  .Kuk.3          .              .             1.0000         EPS         
1  .Kok.1          .              .             1.0000         EPS         
1  .Kok.2          .              .             1.0000         EPS         
1  .Kok.3          .              .             1.0000         EPS         
2  .Mat.1          .              .             1.0000      -100.0000      
2  .Mat.2          .              .             1.0000       -95.0000      
2  .Mat.3          .              .             1.0000       -90.2500      
2  .Kut.1          .              .             1.0000       -50.0000      
2  .Kut.2          .              .             1.0000       -47.5000      
2  .Kut.3          .              .             1.0000       -45.1250      
2  .Kot.1          .              .             1.0000      -300.0000      
2  .Kot.2          .              .             1.0000      -285.0000      
2  .Kot.3          .              .             1.0000      -270.7500      
2  .Mak.1          .              .             1.0000       -20.0000      
2  .Mak.2          .              .             1.0000       -19.0000      
2  .Mak.3          .              .             1.0000       -18.0500      
2  .Kuk.1          .              .             1.0000       -30.0000      
2  .Kuk.2          .              .             1.0000       -28.5000      
2  .Kuk.3          .              .             1.0000       -27.0750      
2  .Kok.1          .              .             1.0000       -20.0000      
2  .Kok.2          .              .             1.0000       -19.0000      
2  .Kok.3          .              .             1.0000       -18.0500      
3  .Mat.1          .              .             1.0000      -400.0000      
3  .Mat.2          .              .             1.0000      -380.0000      
3  .Mat.3          .              .             1.0000      -361.0000      
3  .Kut.1          .              .             1.0000      -200.0000      
3  .Kut.2          .              .             1.0000      -190.0000      
3  .Kut.3          .              .             1.0000      -180.5000      
3  .Kot.1          .              .             1.0000     -1200.0000      
3  .Kot.2          .              .             1.0000     -1140.0000      
3  .Kot.3          .              .             1.0000     -1083.0000      
3  .Mak.1          .              .             1.0000       -80.0000      
3  .Mak.2          .              .             1.0000       -76.0000      
3  .Mak.3          .              .             1.0000       -72.2000      
3  .Kuk.1          .              .             1.0000      -120.0000      
3  .Kuk.2          .              .             1.0000      -114.0000      
3  .Kuk.3          .              .             1.0000      -108.3000      
3  .Kok.1          .              .             1.0000       -80.0000      
3  .Kok.2          .              .             1.0000       -76.0000      
3  .Kok.3          .              .             1.0000       -72.2000      
4  .Mat.1          .              .             1.0000      -900.0000      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/19/17 02:05:06 Page 110
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 437


     VAR r  1 if we buy n boats of timber i, 0 otherwise

                 LOWER          LEVEL          UPPER         MARGINAL

4  .Mat.2          .              .             1.0000      -855.0000      
4  .Mat.3          .              .             1.0000      -812.2500      
4  .Kut.1          .              .             1.0000      -450.0000      
4  .Kut.2          .              .             1.0000      -427.5000      
4  .Kut.3          .              .             1.0000      -406.1250      
4  .Kot.1          .              .             1.0000     -2700.0000      
4  .Kot.2          .              .             1.0000     -2565.0000      
4  .Kot.3          .              .             1.0000     -2436.7500      
4  .Mak.1          .              .             1.0000      -180.0000      
4  .Mak.2          .              .             1.0000      -171.0000      
4  .Mak.3          .              .             1.0000      -162.4500      
4  .Kuk.1          .              .             1.0000      -270.0000      
4  .Kuk.2          .             1.0000         1.0000      -256.5000      
4  .Kuk.3          .             1.0000         1.0000      -243.6750      
4  .Kok.1          .              .             1.0000      -180.0000      
4  .Kok.2          .              .             1.0000      -171.0000      
4  .Kok.3          .              .             1.0000      -162.4500      
5  .Mat.1          .              .             1.0000     -1600.0000      
5  .Mat.2          .              .             1.0000     -1520.0000      
5  .Mat.3          .              .             1.0000     -1444.0000      
5  .Kut.1          .              .             1.0000      -800.0000      
5  .Kut.2          .              .             1.0000      -760.0000      
5  .Kut.3          .              .             1.0000      -722.0000      
5  .Kot.1          .              .             1.0000     -4800.0000      
5  .Kot.2          .              .             1.0000     -4560.0000      
5  .Kot.3          .              .             1.0000     -4332.0000      
5  .Mak.1          .              .             1.0000      -320.0000      
5  .Mak.2          .              .             1.0000      -304.0000      
5  .Mak.3          .              .             1.0000      -288.8000      
5  .Kuk.1          .              .             1.0000      -480.0000      
5  .Kuk.2          .              .             1.0000      -456.0000      
5  .Kuk.3          .              .             1.0000      -433.2000      
5  .Kok.1          .              .             1.0000      -320.0000      
5  .Kok.2          .              .             1.0000      -304.0000      
5  .Kok.3          .              .             1.0000      -288.8000      
6  .Mat.1          .              .             1.0000     -2500.0000      
6  .Mat.2          .              .             1.0000     -2375.0000      
6  .Mat.3          .              .             1.0000     -2256.2500      
6  .Kut.1          .              .             1.0000     -1250.0000      
6  .Kut.2          .              .             1.0000     -1187.5000      
6  .Kut.3          .              .             1.0000     -1128.1250      
6  .Kot.1          .              .             1.0000     -7500.0000      
6  .Kot.2          .              .             1.0000     -7125.0000      
6  .Kot.3          .              .             1.0000     -6768.7500      
6  .Mak.1          .              .             1.0000      -500.0000      
6  .Mak.2          .              .             1.0000      -475.0000      
6  .Mak.3          .              .             1.0000      -451.2500      
6  .Kuk.1          .              .             1.0000      -750.0000      
6  .Kuk.2          .              .             1.0000      -712.5000      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/19/17 02:05:06 Page 111
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 437


     VAR r  1 if we buy n boats of timber i, 0 otherwise

                 LOWER          LEVEL          UPPER         MARGINAL

6  .Kuk.3          .              .             1.0000      -676.8750      
6  .Kok.1          .              .             1.0000      -500.0000      
6  .Kok.2          .              .             1.0000      -475.0000      
6  .Kok.3          .              .             1.0000      -451.2500      
7  .Mat.1          .              .             1.0000     -3600.0000      
7  .Mat.2          .              .             1.0000     -3420.0000      
7  .Mat.3          .              .             1.0000     -3249.0000      
7  .Kut.1          .              .             1.0000     -1800.0000      
7  .Kut.2          .              .             1.0000     -1710.0000      
7  .Kut.3          .              .             1.0000     -1624.5000      
7  .Kot.1          .              .             1.0000    -10800.0000      
7  .Kot.2          .              .             1.0000    -10260.0000      
7  .Kot.3          .              .             1.0000     -9747.0000      
7  .Mak.1          .              .             1.0000      -720.0000      
7  .Mak.2          .              .             1.0000      -684.0000      
7  .Mak.3          .              .             1.0000      -649.8000      
7  .Kuk.1          .              .             1.0000     -1080.0000      
7  .Kuk.2          .              .             1.0000     -1026.0000      
7  .Kuk.3          .              .             1.0000      -974.7000      
7  .Kok.1          .              .             1.0000      -720.0000      
7  .Kok.2          .              .             1.0000      -684.0000      
7  .Kok.3          .              .             1.0000      -649.8000      
8  .Mat.1          .              .             1.0000     -4900.0000      
8  .Mat.2          .              .             1.0000     -4655.0000      
8  .Mat.3          .              .             1.0000     -4422.2500      
8  .Kut.1          .              .             1.0000     -2450.0000      
8  .Kut.2          .              .             1.0000     -2327.5000      
8  .Kut.3          .              .             1.0000     -2211.1250      
8  .Kot.1          .              .             1.0000    -14700.0000      
8  .Kot.2          .              .             1.0000    -13965.0000      
8  .Kot.3          .              .             1.0000    -13266.7500      
8  .Mak.1          .              .             1.0000      -980.0000      
8  .Mak.2          .              .             1.0000      -931.0000      
8  .Mak.3          .              .             1.0000      -884.4500      
8  .Kuk.1          .              .             1.0000     -1470.0000      
8  .Kuk.2          .              .             1.0000     -1396.5000      
8  .Kuk.3          .              .             1.0000     -1326.6750      
8  .Kok.1          .              .             1.0000      -980.0000      
8  .Kok.2          .              .             1.0000      -931.0000      
8  .Kok.3          .              .             1.0000      -884.4500      
9  .Mat.1          .              .             1.0000     -6400.0000      
9  .Mat.2          .              .             1.0000     -6080.0000      
9  .Mat.3          .              .             1.0000     -5776.0000      
9  .Kut.1          .              .             1.0000     -3200.0000      
9  .Kut.2          .              .             1.0000     -3040.0000      
9  .Kut.3          .              .             1.0000     -2888.0000      
9  .Kot.1          .              .             1.0000    -19200.0000      
9  .Kot.2          .             1.0000         1.0000    -18240.0000      
9  .Kot.3          .             1.0000         1.0000    -17328.0000      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/19/17 02:05:06 Page 112
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 437


     VAR r  1 if we buy n boats of timber i, 0 otherwise

                 LOWER          LEVEL          UPPER         MARGINAL

9  .Mak.1          .              .             1.0000     -1280.0000      
9  .Mak.2          .              .             1.0000     -1216.0000      
9  .Mak.3          .              .             1.0000     -1155.2000      
9  .Kuk.1          .              .             1.0000     -1920.0000      
9  .Kuk.2          .              .             1.0000     -1824.0000      
9  .Kuk.3          .              .             1.0000     -1732.8000      
9  .Kok.1          .              .             1.0000     -1280.0000      
9  .Kok.2          .              .             1.0000     -1216.0000      
9  .Kok.3          .              .             1.0000     -1155.2000      
10 .Mat.1          .              .             1.0000     -8100.0000      
10 .Mat.2          .              .             1.0000     -7695.0000      
10 .Mat.3          .              .             1.0000     -7310.2500      
10 .Kut.1          .              .             1.0000     -4050.0000      
10 .Kut.2          .              .             1.0000     -3847.5000      
10 .Kut.3          .              .             1.0000     -3655.1250      
10 .Kot.1          .             1.0000         1.0000    -24300.0000      
10 .Kot.2          .              .             1.0000    -23085.0000      
10 .Kot.3          .              .             1.0000    -21930.7500      
10 .Mak.1          .              .             1.0000     -1620.0000      
10 .Mak.2          .              .             1.0000     -1539.0000      
10 .Mak.3          .              .             1.0000     -1462.0500      
10 .Kuk.1          .              .             1.0000     -2430.0000      
10 .Kuk.2          .              .             1.0000     -2308.5000      
10 .Kuk.3          .              .             1.0000     -2193.0750      
10 .Kok.1          .              .             1.0000     -1620.0000      
10 .Kok.2          .              .             1.0000     -1539.0000      
10 .Kok.3          .              .             1.0000     -1462.0500      
11 .Mat.1          .              .             1.0000    -10000.0000      
11 .Mat.2          .              .             1.0000     -9500.0000      
11 .Mat.3          .              .             1.0000     -9025.0000      
11 .Kut.1          .              .             1.0000     -5000.0000      
11 .Kut.2          .              .             1.0000     -4750.0000      
11 .Kut.3          .              .             1.0000     -4512.5000      
11 .Kot.1          .              .             1.0000    -30000.0000      
11 .Kot.2          .              .             1.0000    -28500.0000      
11 .Kot.3          .              .             1.0000    -27075.0000      
11 .Mak.1          .              .             1.0000     -2000.0000      
11 .Mak.2          .              .             1.0000     -1900.0000      
11 .Mak.3          .              .             1.0000     -1805.0000      
11 .Kuk.1          .              .             1.0000     -3000.0000      
11 .Kuk.2          .              .             1.0000     -2850.0000      
11 .Kuk.3          .              .             1.0000     -2707.5000      
11 .Kok.1          .              .             1.0000     -2000.0000      
11 .Kok.2          .              .             1.0000     -1900.0000      
11 .Kok.3          .              .             1.0000     -1805.0000      
12 .Mat.1          .              .             1.0000    -12100.0000      
12 .Mat.2          .              .             1.0000    -11495.0000      
12 .Mat.3          .              .             1.0000    -10920.2500      
12 .Kut.1          .              .             1.0000     -6050.0000      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/19/17 02:05:06 Page 113
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 437


     VAR r  1 if we buy n boats of timber i, 0 otherwise

                 LOWER          LEVEL          UPPER         MARGINAL

12 .Kut.2          .              .             1.0000     -5747.5000      
12 .Kut.3          .              .             1.0000     -5460.1250      
12 .Kot.1          .              .             1.0000    -36300.0000      
12 .Kot.2          .              .             1.0000    -34485.0000      
12 .Kot.3          .              .             1.0000    -32760.7500      
12 .Mak.1          .              .             1.0000     -2420.0000      
12 .Mak.2          .              .             1.0000     -2299.0000      
12 .Mak.3          .              .             1.0000     -2184.0500      
12 .Kuk.1          .              .             1.0000     -3630.0000      
12 .Kuk.2          .              .             1.0000     -3448.5000      
12 .Kuk.3          .              .             1.0000     -3276.0750      
12 .Kok.1          .              .             1.0000     -2420.0000      
12 .Kok.2          .              .             1.0000     -2299.0000      
12 .Kok.3          .              .             1.0000     -2184.0500      
13 .Mat.1          .              .             1.0000    -14400.0000      
13 .Mat.2          .              .             1.0000    -13680.0000      
13 .Mat.3          .             1.0000         1.0000    -12996.0000      
13 .Kut.1          .              .             1.0000     -7200.0000      
13 .Kut.2          .              .             1.0000     -6840.0000      
13 .Kut.3          .              .             1.0000     -6498.0000      
13 .Kot.1          .              .             1.0000    -43200.0000      
13 .Kot.2          .              .             1.0000    -41040.0000      
13 .Kot.3          .              .             1.0000    -38988.0000      
13 .Mak.1          .              .             1.0000     -2880.0000      
13 .Mak.2          .              .             1.0000     -2736.0000      
13 .Mak.3          .              .             1.0000     -2599.2000      
13 .Kuk.1          .              .             1.0000     -4320.0000      
13 .Kuk.2          .              .             1.0000     -4104.0000      
13 .Kuk.3          .              .             1.0000     -3898.8000      
13 .Kok.1          .              .             1.0000     -2880.0000      
13 .Kok.2          .              .             1.0000     -2736.0000      
13 .Kok.3          .              .             1.0000     -2599.2000      
14 .Mat.1          .              .             1.0000    -16900.0000      
14 .Mat.2          .              .             1.0000    -16055.0000      
14 .Mat.3          .              .             1.0000    -15252.2500      
14 .Kut.1          .              .             1.0000     -8450.0000      
14 .Kut.2          .              .             1.0000     -8027.5000      
14 .Kut.3          .              .             1.0000     -7626.1250      
14 .Kot.1          .              .             1.0000    -50700.0000      
14 .Kot.2          .              .             1.0000    -48165.0000      
14 .Kot.3          .              .             1.0000    -45756.7500      
14 .Mak.1          .              .             1.0000     -3380.0000      
14 .Mak.2          .              .             1.0000     -3211.0000      
14 .Mak.3          .              .             1.0000     -3050.4500      
14 .Kuk.1          .              .             1.0000     -5070.0000      
14 .Kuk.2          .              .             1.0000     -4816.5000      
14 .Kuk.3          .              .             1.0000     -4575.6750      
14 .Kok.1          .              .             1.0000     -3380.0000      
14 .Kok.2          .              .             1.0000     -3211.0000      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/19/17 02:05:06 Page 114
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 437


     VAR r  1 if we buy n boats of timber i, 0 otherwise

                 LOWER          LEVEL          UPPER         MARGINAL

14 .Kok.3          .              .             1.0000     -3050.4500      
15 .Mat.1          .             1.0000         1.0000    -19600.0000      
15 .Mat.2          .             1.0000         1.0000    -18620.0000      
15 .Mat.3          .              .             1.0000    -17689.0000      
15 .Kut.1          .             1.0000         1.0000     -9800.0000      
15 .Kut.2          .              .             1.0000     -9310.0000      
15 .Kut.3          .              .             1.0000     -8844.5000      
15 .Kot.1          .              .             1.0000    -58800.0000      
15 .Kot.2          .              .             1.0000    -55860.0000      
15 .Kot.3          .              .             1.0000    -53067.0000      
15 .Mak.1          .              .             1.0000     -3920.0000      
15 .Mak.2          .              .             1.0000     -3724.0000      
15 .Mak.3          .              .             1.0000     -3537.8000      
15 .Kuk.1          .              .             1.0000     -5880.0000      
15 .Kuk.2          .              .             1.0000     -5586.0000      
15 .Kuk.3          .              .             1.0000     -5306.7000      
15 .Kok.1          .              .             1.0000     -3920.0000      
15 .Kok.2          .              .             1.0000     -3724.0000      
15 .Kok.3          .              .             1.0000     -3537.8000      
16 .Mat.1          .              .             1.0000    -22500.0000      
16 .Mat.2          .              .             1.0000    -21375.0000      
16 .Mat.3          .              .             1.0000    -20306.2500      
16 .Kut.1          .              .             1.0000    -11250.0000      
16 .Kut.2          .              .             1.0000    -10687.5000      
16 .Kut.3          .              .             1.0000    -10153.1250      
16 .Kot.1          .              .             1.0000    -67500.0000      
16 .Kot.2          .              .             1.0000    -64125.0000      
16 .Kot.3          .              .             1.0000    -60918.7500      
16 .Mak.1          .              .             1.0000     -4500.0000      
16 .Mak.2          .              .             1.0000     -4275.0000      
16 .Mak.3          .             1.0000         1.0000     -4061.2500      
16 .Kuk.1          .              .             1.0000     -6750.0000      
16 .Kuk.2          .              .             1.0000     -6412.5000      
16 .Kuk.3          .              .             1.0000     -6091.8750      
16 .Kok.1          .              .             1.0000     -4500.0000      
16 .Kok.2          .              .             1.0000     -4275.0000      
16 .Kok.3          .              .             1.0000     -4061.2500      
17 .Mat.1          .              .             1.0000    -25600.0000      
17 .Mat.2          .              .             1.0000    -24320.0000      
17 .Mat.3          .              .             1.0000    -23104.0000      
17 .Kut.1          .              .             1.0000    -12800.0000      
17 .Kut.2          .              .             1.0000    -12160.0000      
17 .Kut.3          .              .             1.0000    -11552.0000      
17 .Kot.1          .              .             1.0000    -76800.0000      
17 .Kot.2          .              .             1.0000    -72960.0000      
17 .Kot.3          .              .             1.0000    -69312.0000      
17 .Mak.1          .              .             1.0000     -5120.0000      
17 .Mak.2          .              .             1.0000     -4864.0000      
17 .Mak.3          .              .             1.0000     -4620.8000      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/19/17 02:05:06 Page 115
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 437


     VAR r  1 if we buy n boats of timber i, 0 otherwise

                 LOWER          LEVEL          UPPER         MARGINAL

17 .Kuk.1          .              .             1.0000     -7680.0000      
17 .Kuk.2          .              .             1.0000     -7296.0000      
17 .Kuk.3          .              .             1.0000     -6931.2000      
17 .Kok.1          .              .             1.0000     -5120.0000      
17 .Kok.2          .              .             1.0000     -4864.0000      
17 .Kok.3          .              .             1.0000     -4620.8000      
18 .Mat.1          .              .             1.0000    -28900.0000      
18 .Mat.2          .              .             1.0000    -27455.0000      
18 .Mat.3          .              .             1.0000    -26082.2500      
18 .Kut.1          .              .             1.0000    -14450.0000      
18 .Kut.2          .              .             1.0000    -13727.5000      
18 .Kut.3          .              .             1.0000    -13041.1250      
18 .Kot.1          .              .             1.0000    -86700.0000      
18 .Kot.2          .              .             1.0000    -82365.0000      
18 .Kot.3          .              .             1.0000    -78246.7500      
18 .Mak.1          .              .             1.0000     -5780.0000      
18 .Mak.2          .              .             1.0000     -5491.0000      
18 .Mak.3          .              .             1.0000     -5216.4500      
18 .Kuk.1          .              .             1.0000     -8670.0000      
18 .Kuk.2          .              .             1.0000     -8236.5000      
18 .Kuk.3          .              .             1.0000     -7824.6750      
18 .Kok.1          .              .             1.0000     -5780.0000      
18 .Kok.2          .              .             1.0000     -5491.0000      
18 .Kok.3          .              .             1.0000     -5216.4500      
19 .Mat.1          .              .             1.0000    -32400.0000      
19 .Mat.2          .              .             1.0000    -30780.0000      
19 .Mat.3          .              .             1.0000    -29241.0000      
19 .Kut.1          .              .             1.0000    -16200.0000      
19 .Kut.2          .              .             1.0000    -15390.0000      
19 .Kut.3          .              .             1.0000    -14620.5000      
19 .Kot.1          .              .             1.0000    -97200.0000      
19 .Kot.2          .              .             1.0000    -92340.0000      
19 .Kot.3          .              .             1.0000    -87723.0000      
19 .Mak.1          .              .             1.0000     -6480.0000      
19 .Mak.2          .              .             1.0000     -6156.0000      
19 .Mak.3          .              .             1.0000     -5848.2000      
19 .Kuk.1          .              .             1.0000     -9720.0000      
19 .Kuk.2          .              .             1.0000     -9234.0000      
19 .Kuk.3          .              .             1.0000     -8772.3000      
19 .Kok.1          .              .             1.0000     -6480.0000      
19 .Kok.2          .              .             1.0000     -6156.0000      
19 .Kok.3          .              .             1.0000     -5848.2000      
20 .Mat.1          .              .             1.0000    -36100.0000      
20 .Mat.2          .              .             1.0000    -34295.0000      
20 .Mat.3          .              .             1.0000    -32580.2500      
20 .Kut.1          .              .             1.0000    -18050.0000      
20 .Kut.2          .              .             1.0000    -17147.5000      
20 .Kut.3          .              .             1.0000    -16290.1250      
20 .Kot.1          .              .             1.0000   -108300.0000      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/19/17 02:05:06 Page 116
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 437


     VAR r  1 if we buy n boats of timber i, 0 otherwise

                 LOWER          LEVEL          UPPER         MARGINAL

20 .Kot.2          .              .             1.0000   -102885.0000      
20 .Kot.3          .              .             1.0000    -97740.7500      
20 .Mak.1          .              .             1.0000     -7220.0000      
20 .Mak.2          .              .             1.0000     -6859.0000      
20 .Mak.3          .              .             1.0000     -6516.0500      
20 .Kuk.1          .              .             1.0000    -10830.0000      
20 .Kuk.2          .              .             1.0000    -10288.5000      
20 .Kuk.3          .              .             1.0000     -9774.0750      
20 .Kok.1          .              .             1.0000     -7220.0000      
20 .Kok.2          .              .             1.0000     -6859.0000      
20 .Kok.3          .              .             1.0000     -6516.0500      
21 .Mat.1          .              .             1.0000    -40000.0000      
21 .Mat.2          .              .             1.0000    -38000.0000      
21 .Mat.3          .              .             1.0000    -36100.0000      
21 .Kut.1          .              .             1.0000    -20000.0000      
21 .Kut.2          .              .             1.0000    -19000.0000      
21 .Kut.3          .              .             1.0000    -18050.0000      
21 .Kot.1          .              .             1.0000   -120000.0000      
21 .Kot.2          .              .             1.0000   -114000.0000      
21 .Kot.3          .              .             1.0000   -108300.0000      
21 .Mak.1          .              .             1.0000     -8000.0000      
21 .Mak.2          .              .             1.0000     -7600.0000      
21 .Mak.3          .              .             1.0000     -7220.0000      
21 .Kuk.1          .              .             1.0000    -12000.0000      
21 .Kuk.2          .              .             1.0000    -11400.0000      
21 .Kuk.3          .              .             1.0000    -10830.0000      
21 .Kok.1          .              .             1.0000     -8000.0000      
21 .Kok.2          .              .             1.0000     -7600.0000      
21 .Kok.3          .              .             1.0000     -7220.0000      
22 .Mat.1          .              .             1.0000    -44100.0000      
22 .Mat.2          .              .             1.0000    -41895.0000      
22 .Mat.3          .              .             1.0000    -39800.2500      
22 .Kut.1          .              .             1.0000    -22050.0000      
22 .Kut.2          .              .             1.0000    -20947.5000      
22 .Kut.3          .              .             1.0000    -19900.1250      
22 .Kot.1          .              .             1.0000   -132300.0000      
22 .Kot.2          .              .             1.0000   -125685.0000      
22 .Kot.3          .              .             1.0000   -119400.7500      
22 .Mak.1          .              .             1.0000     -8820.0000      
22 .Mak.2          .              .             1.0000     -8379.0000      
22 .Mak.3          .              .             1.0000     -7960.0500      
22 .Kuk.1          .              .             1.0000    -13230.0000      
22 .Kuk.2          .              .             1.0000    -12568.5000      
22 .Kuk.3          .              .             1.0000    -11940.0750      
22 .Kok.1          .              .             1.0000     -8820.0000      
22 .Kok.2          .              .             1.0000     -8379.0000      
22 .Kok.3          .              .             1.0000     -7960.0500      
23 .Mat.1          .              .             1.0000    -48400.0000      
23 .Mat.2          .              .             1.0000    -45980.0000      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/19/17 02:05:06 Page 117
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 437


     VAR r  1 if we buy n boats of timber i, 0 otherwise

                 LOWER          LEVEL          UPPER         MARGINAL

23 .Mat.3          .              .             1.0000    -43681.0000      
23 .Kut.1          .              .             1.0000    -24200.0000      
23 .Kut.2          .              .             1.0000    -22990.0000      
23 .Kut.3          .              .             1.0000    -21840.5000      
23 .Kot.1          .              .             1.0000   -145200.0000      
23 .Kot.2          .              .             1.0000   -137940.0000      
23 .Kot.3          .              .             1.0000   -131043.0000      
23 .Mak.1          .              .             1.0000     -9680.0000      
23 .Mak.2          .              .             1.0000     -9196.0000      
23 .Mak.3          .              .             1.0000     -8736.2000      
23 .Kuk.1          .              .             1.0000    -14520.0000      
23 .Kuk.2          .              .             1.0000    -13794.0000      
23 .Kuk.3          .              .             1.0000    -13104.3000      
23 .Kok.1          .              .             1.0000     -9680.0000      
23 .Kok.2          .              .             1.0000     -9196.0000      
23 .Kok.3          .              .             1.0000     -8736.2000      
24 .Mat.1          .              .             1.0000    -52900.0000      
24 .Mat.2          .              .             1.0000    -50255.0000      
24 .Mat.3          .              .             1.0000    -47742.2500      
24 .Kut.1          .              .             1.0000    -26450.0000      
24 .Kut.2          .             1.0000         1.0000    -25127.5000      
24 .Kut.3          .             1.0000         1.0000    -23871.1250      
24 .Kot.1          .              .             1.0000   -158700.0000      
24 .Kot.2          .              .             1.0000   -150765.0000      
24 .Kot.3          .              .             1.0000   -143226.7500      
24 .Mak.1          .              .             1.0000    -10580.0000      
24 .Mak.2          .              .             1.0000    -10051.0000      
24 .Mak.3          .              .             1.0000     -9548.4500      
24 .Kuk.1          .              .             1.0000    -15870.0000      
24 .Kuk.2          .              .             1.0000    -15076.5000      
24 .Kuk.3          .              .             1.0000    -14322.6750      
24 .Kok.1          .              .             1.0000    -10580.0000      
24 .Kok.2          .              .             1.0000    -10051.0000      
24 .Kok.3          .              .             1.0000     -9548.4500      
25 .Mat.1          .              .             1.0000    -57600.0000      
25 .Mat.2          .              .             1.0000    -54720.0000      
25 .Mat.3          .              .             1.0000    -51984.0000      
25 .Kut.1          .              .             1.0000    -28800.0000      
25 .Kut.2          .              .             1.0000    -27360.0000      
25 .Kut.3          .              .             1.0000    -25992.0000      
25 .Kot.1          .              .             1.0000   -172800.0000      
25 .Kot.2          .              .             1.0000   -164160.0000      
25 .Kot.3          .              .             1.0000   -155952.0000      
25 .Mak.1          .              .             1.0000    -11520.0000      
25 .Mak.2          .              .             1.0000    -10944.0000      
25 .Mak.3          .              .             1.0000    -10396.8000      
25 .Kuk.1          .              .             1.0000    -17280.0000      
25 .Kuk.2          .              .             1.0000    -16416.0000      
25 .Kuk.3          .              .             1.0000    -15595.2000      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/19/17 02:05:06 Page 118
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 437


     VAR r  1 if we buy n boats of timber i, 0 otherwise

                 LOWER          LEVEL          UPPER         MARGINAL

25 .Kok.1          .              .             1.0000    -11520.0000      
25 .Kok.2          .              .             1.0000    -10944.0000      
25 .Kok.3          .              .             1.0000    -10396.8000      
26 .Mat.1          .              .             1.0000    -62500.0000      
26 .Mat.2          .              .             1.0000    -59375.0000      
26 .Mat.3          .              .             1.0000    -56406.2500      
26 .Kut.1          .              .             1.0000    -31250.0000      
26 .Kut.2          .              .             1.0000    -29687.5000      
26 .Kut.3          .              .             1.0000    -28203.1250      
26 .Kot.1          .              .             1.0000   -187500.0000      
26 .Kot.2          .              .             1.0000   -178125.0000      
26 .Kot.3          .              .             1.0000   -169218.7500      
26 .Mak.1          .              .             1.0000    -12500.0000      
26 .Mak.2          .              .             1.0000    -11875.0000      
26 .Mak.3          .              .             1.0000    -11281.2500      
26 .Kuk.1          .              .             1.0000    -18750.0000      
26 .Kuk.2          .              .             1.0000    -17812.5000      
26 .Kuk.3          .              .             1.0000    -16921.8750      
26 .Kok.1          .              .             1.0000    -12500.0000      
26 .Kok.2          .              .             1.0000    -11875.0000      
26 .Kok.3          .              .             1.0000    -11281.2500      
27 .Mat.1          .              .             1.0000    -67600.0000      
27 .Mat.2          .              .             1.0000    -64220.0000      
27 .Mat.3          .              .             1.0000    -61009.0000      
27 .Kut.1          .              .             1.0000    -33800.0000      
27 .Kut.2          .              .             1.0000    -32110.0000      
27 .Kut.3          .              .             1.0000    -30504.5000      
27 .Kot.1          .              .             1.0000   -202800.0000      
27 .Kot.2          .              .             1.0000   -192660.0000      
27 .Kot.3          .              .             1.0000   -183027.0000      
27 .Mak.1          .              .             1.0000    -13520.0000      
27 .Mak.2          .              .             1.0000    -12844.0000      
27 .Mak.3          .              .             1.0000    -12201.8000      
27 .Kuk.1          .              .             1.0000    -20280.0000      
27 .Kuk.2          .              .             1.0000    -19266.0000      
27 .Kuk.3          .              .             1.0000    -18302.7000      
27 .Kok.1          .              .             1.0000    -13520.0000      
27 .Kok.2          .              .             1.0000    -12844.0000      
27 .Kok.3          .              .             1.0000    -12201.8000      
28 .Mat.1          .              .             1.0000    -72900.0000      
28 .Mat.2          .              .             1.0000    -69255.0000      
28 .Mat.3          .              .             1.0000    -65792.2500      
28 .Kut.1          .              .             1.0000    -36450.0000      
28 .Kut.2          .              .             1.0000    -34627.5000      
28 .Kut.3          .              .             1.0000    -32896.1250      
28 .Kot.1          .              .             1.0000   -218700.0000      
28 .Kot.2          .              .             1.0000   -207765.0000      
28 .Kot.3          .              .             1.0000   -197376.7500      
28 .Mak.1          .              .             1.0000    -14580.0000      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/19/17 02:05:06 Page 119
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 437


     VAR r  1 if we buy n boats of timber i, 0 otherwise

                 LOWER          LEVEL          UPPER         MARGINAL

28 .Mak.2          .              .             1.0000    -13851.0000      
28 .Mak.3          .              .             1.0000    -13158.4500      
28 .Kuk.1          .              .             1.0000    -21870.0000      
28 .Kuk.2          .              .             1.0000    -20776.5000      
28 .Kuk.3          .              .             1.0000    -19737.6750      
28 .Kok.1          .              .             1.0000    -14580.0000      
28 .Kok.2          .              .             1.0000    -13851.0000      
28 .Kok.3          .              .             1.0000    -13158.4500      
29 .Mat.1          .              .             1.0000    -78400.0000      
29 .Mat.2          .              .             1.0000    -74480.0000      
29 .Mat.3          .              .             1.0000    -70756.0000      
29 .Kut.1          .              .             1.0000    -39200.0000      
29 .Kut.2          .              .             1.0000    -37240.0000      
29 .Kut.3          .              .             1.0000    -35378.0000      
29 .Kot.1          .              .             1.0000   -235200.0000      
29 .Kot.2          .              .             1.0000   -223440.0000      
29 .Kot.3          .              .             1.0000   -212268.0000      
29 .Mak.1          .              .             1.0000    -15680.0000      
29 .Mak.2          .              .             1.0000    -14896.0000      
29 .Mak.3          .              .             1.0000    -14151.2000      
29 .Kuk.1          .              .             1.0000    -23520.0000      
29 .Kuk.2          .              .             1.0000    -22344.0000      
29 .Kuk.3          .              .             1.0000    -21226.8000      
29 .Kok.1          .              .             1.0000    -15680.0000      
29 .Kok.2          .              .             1.0000    -14896.0000      
29 .Kok.3          .              .             1.0000    -14151.2000      
30 .Mat.1          .              .             1.0000    -84100.0000      
30 .Mat.2          .              .             1.0000    -79895.0000      
30 .Mat.3          .              .             1.0000    -75900.2500      
30 .Kut.1          .              .             1.0000    -42050.0000      
30 .Kut.2          .              .             1.0000    -39947.5000      
30 .Kut.3          .              .             1.0000    -37950.1250      
30 .Kot.1          .              .             1.0000   -252300.0000      
30 .Kot.2          .              .             1.0000   -239685.0000      
30 .Kot.3          .              .             1.0000   -227700.7500      
30 .Mak.1          .              .             1.0000    -16820.0000      
30 .Mak.2          .              .             1.0000    -15979.0000      
30 .Mak.3          .              .             1.0000    -15180.0500      
30 .Kuk.1          .              .             1.0000    -25230.0000      
30 .Kuk.2          .              .             1.0000    -23968.5000      
30 .Kuk.3          .              .             1.0000    -22770.0750      
30 .Kok.1          .              .             1.0000    -16820.0000      
30 .Kok.2          .              .             1.0000    -15979.0000      
30 .Kok.3          .              .             1.0000    -15180.0500      
31 .Mat.1          .              .             1.0000    -90000.0000      
31 .Mat.2          .              .             1.0000    -85500.0000      
31 .Mat.3          .              .             1.0000    -81225.0000      
31 .Kut.1          .              .             1.0000    -45000.0000      
31 .Kut.2          .              .             1.0000    -42750.0000      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/19/17 02:05:06 Page 120
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 437


     VAR r  1 if we buy n boats of timber i, 0 otherwise

                 LOWER          LEVEL          UPPER         MARGINAL

31 .Kut.3          .              .             1.0000    -40612.5000      
31 .Kot.1          .              .             1.0000   -270000.0000      
31 .Kot.2          .              .             1.0000   -256500.0000      
31 .Kot.3          .              .             1.0000   -243675.0000      
31 .Mak.1          .              .             1.0000    -18000.0000      
31 .Mak.2          .              .             1.0000    -17100.0000      
31 .Mak.3          .              .             1.0000    -16245.0000      
31 .Kuk.1          .              .             1.0000    -27000.0000      
31 .Kuk.2          .              .             1.0000    -25650.0000      
31 .Kuk.3          .              .             1.0000    -24367.5000      
31 .Kok.1          .              .             1.0000    -18000.0000      
31 .Kok.2          .              .             1.0000    -17100.0000      
31 .Kok.3          .              .             1.0000    -16245.0000      
32 .Mat.1          .              .             1.0000    -96100.0000      
32 .Mat.2          .              .             1.0000    -91295.0000      
32 .Mat.3          .              .             1.0000    -86730.2500      
32 .Kut.1          .              .             1.0000    -48050.0000      
32 .Kut.2          .              .             1.0000    -45647.5000      
32 .Kut.3          .              .             1.0000    -43365.1250      
32 .Kot.1          .              .             1.0000   -288300.0000      
32 .Kot.2          .              .             1.0000   -273885.0000      
32 .Kot.3          .              .             1.0000   -260190.7500      
32 .Mak.1          .             1.0000         1.0000    -19220.0000      
32 .Mak.2          .              .             1.0000    -18259.0000      
32 .Mak.3          .              .             1.0000    -17346.0500      
32 .Kuk.1          .              .             1.0000    -28830.0000      
32 .Kuk.2          .              .             1.0000    -27388.5000      
32 .Kuk.3          .              .             1.0000    -26019.0750      
32 .Kok.1          .              .             1.0000    -19220.0000      
32 .Kok.2          .              .             1.0000    -18259.0000      
32 .Kok.3          .              .             1.0000    -17346.0500      
33 .Mat.1          .              .             1.0000   -102400.0000      
33 .Mat.2          .              .             1.0000    -97280.0000      
33 .Mat.3          .              .             1.0000    -92416.0000      
33 .Kut.1          .              .             1.0000    -51200.0000      
33 .Kut.2          .              .             1.0000    -48640.0000      
33 .Kut.3          .              .             1.0000    -46208.0000      
33 .Kot.1          .              .             1.0000   -307200.0000      
33 .Kot.2          .              .             1.0000   -291840.0000      
33 .Kot.3          .              .             1.0000   -277248.0000      
33 .Mak.1          .              .             1.0000    -20480.0000      
33 .Mak.2          .              .             1.0000    -19456.0000      
33 .Mak.3          .              .             1.0000    -18483.2000      
33 .Kuk.1          .              .             1.0000    -30720.0000      
33 .Kuk.2          .              .             1.0000    -29184.0000      
33 .Kuk.3          .              .             1.0000    -27724.8000      
33 .Kok.1          .              .             1.0000    -20480.0000      
33 .Kok.2          .              .             1.0000    -19456.0000      
33 .Kok.3          .              .             1.0000    -18483.2000      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/19/17 02:05:06 Page 121
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 437


     VAR r  1 if we buy n boats of timber i, 0 otherwise

                 LOWER          LEVEL          UPPER         MARGINAL

34 .Mat.1          .              .             1.0000   -108900.0000      
34 .Mat.2          .              .             1.0000   -103455.0000      
34 .Mat.3          .              .             1.0000    -98282.2500      
34 .Kut.1          .              .             1.0000    -54450.0000      
34 .Kut.2          .              .             1.0000    -51727.5000      
34 .Kut.3          .              .             1.0000    -49141.1250      
34 .Kot.1          .              .             1.0000   -326700.0000      
34 .Kot.2          .              .             1.0000   -310365.0000      
34 .Kot.3          .              .             1.0000   -294846.7500      
34 .Mak.1          .              .             1.0000    -21780.0000      
34 .Mak.2          .             1.0000         1.0000    -20691.0000      
34 .Mak.3          .              .             1.0000    -19656.4500      
34 .Kuk.1          .              .             1.0000    -32670.0000      
34 .Kuk.2          .              .             1.0000    -31036.5000      
34 .Kuk.3          .              .             1.0000    -29484.6750      
34 .Kok.1          .              .             1.0000    -21780.0000      
34 .Kok.2          .              .             1.0000    -20691.0000      
34 .Kok.3          .              .             1.0000    -19656.4500      
35 .Mat.1          .              .             1.0000   -115600.0000      
35 .Mat.2          .              .             1.0000   -109820.0000      
35 .Mat.3          .              .             1.0000   -104329.0000      
35 .Kut.1          .              .             1.0000    -57800.0000      
35 .Kut.2          .              .             1.0000    -54910.0000      
35 .Kut.3          .              .             1.0000    -52164.5000      
35 .Kot.1          .              .             1.0000   -346800.0000      
35 .Kot.2          .              .             1.0000   -329460.0000      
35 .Kot.3          .              .             1.0000   -312987.0000      
35 .Mak.1          .              .             1.0000    -23120.0000      
35 .Mak.2          .              .             1.0000    -21964.0000      
35 .Mak.3          .              .             1.0000    -20865.8000      
35 .Kuk.1          .              .             1.0000    -34680.0000      
35 .Kuk.2          .              .             1.0000    -32946.0000      
35 .Kuk.3          .              .             1.0000    -31298.7000      
35 .Kok.1          .              .             1.0000    -23120.0000      
35 .Kok.2          .              .             1.0000    -21964.0000      
35 .Kok.3          .              .             1.0000    -20865.8000      
36 .Mat.1          .              .             1.0000   -122500.0000      
36 .Mat.2          .              .             1.0000   -116375.0000      
36 .Mat.3          .              .             1.0000   -110556.2500      
36 .Kut.1          .              .             1.0000    -61250.0000      
36 .Kut.2          .              .             1.0000    -58187.5000      
36 .Kut.3          .              .             1.0000    -55278.1250      
36 .Kot.1          .              .             1.0000   -367500.0000      
36 .Kot.2          .              .             1.0000   -349125.0000      
36 .Kot.3          .              .             1.0000   -331668.7500      
36 .Mak.1          .              .             1.0000    -24500.0000      
36 .Mak.2          .              .             1.0000    -23275.0000      
36 .Mak.3          .              .             1.0000    -22111.2500      
36 .Kuk.1          .              .             1.0000    -36750.0000      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/19/17 02:05:06 Page 122
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 437


     VAR r  1 if we buy n boats of timber i, 0 otherwise

                 LOWER          LEVEL          UPPER         MARGINAL

36 .Kuk.2          .              .             1.0000    -34912.5000      
36 .Kuk.3          .              .             1.0000    -33166.8750      
36 .Kok.1          .              .             1.0000    -24500.0000      
36 .Kok.2          .              .             1.0000    -23275.0000      
36 .Kok.3          .              .             1.0000    -22111.2500      
37 .Mat.1          .              .             1.0000   -129600.0000      
37 .Mat.2          .              .             1.0000   -123120.0000      
37 .Mat.3          .              .             1.0000   -116964.0000      
37 .Kut.1          .              .             1.0000    -64800.0000      
37 .Kut.2          .              .             1.0000    -61560.0000      
37 .Kut.3          .              .             1.0000    -58482.0000      
37 .Kot.1          .              .             1.0000   -388800.0000      
37 .Kot.2          .              .             1.0000   -369360.0000      
37 .Kot.3          .              .             1.0000   -350892.0000      
37 .Mak.1          .              .             1.0000    -25920.0000      
37 .Mak.2          .              .             1.0000    -24624.0000      
37 .Mak.3          .              .             1.0000    -23392.8000      
37 .Kuk.1          .              .             1.0000    -38880.0000      
37 .Kuk.2          .              .             1.0000    -36936.0000      
37 .Kuk.3          .              .             1.0000    -35089.2000      
37 .Kok.1          .              .             1.0000    -25920.0000      
37 .Kok.2          .              .             1.0000    -24624.0000      
37 .Kok.3          .              .             1.0000    -23392.8000      
38 .Mat.1          .              .             1.0000   -136900.0000      
38 .Mat.2          .              .             1.0000   -130055.0000      
38 .Mat.3          .              .             1.0000   -123552.2500      
38 .Kut.1          .              .             1.0000    -68450.0000      
38 .Kut.2          .              .             1.0000    -65027.5000      
38 .Kut.3          .              .             1.0000    -61776.1250      
38 .Kot.1          .              .             1.0000   -410700.0000      
38 .Kot.2          .              .             1.0000   -390165.0000      
38 .Kot.3          .              .             1.0000   -370656.7500      
38 .Mak.1          .              .             1.0000    -27380.0000      
38 .Mak.2          .              .             1.0000    -26011.0000      
38 .Mak.3          .              .             1.0000    -24710.4500      
38 .Kuk.1          .              .             1.0000    -41070.0000      
38 .Kuk.2          .              .             1.0000    -39016.5000      
38 .Kuk.3          .              .             1.0000    -37065.6750      
38 .Kok.1          .              .             1.0000    -27380.0000      
38 .Kok.2          .              .             1.0000    -26011.0000      
38 .Kok.3          .              .             1.0000    -24710.4500      
39 .Mat.1          .              .             1.0000   -144400.0000      
39 .Mat.2          .              .             1.0000   -137180.0000      
39 .Mat.3          .              .             1.0000   -130321.0000      
39 .Kut.1          .              .             1.0000    -72200.0000      
39 .Kut.2          .              .             1.0000    -68590.0000      
39 .Kut.3          .              .             1.0000    -65160.5000      
39 .Kot.1          .              .             1.0000   -433200.0000      
39 .Kot.2          .              .             1.0000   -411540.0000      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/19/17 02:05:06 Page 123
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 437


     VAR r  1 if we buy n boats of timber i, 0 otherwise

                 LOWER          LEVEL          UPPER         MARGINAL

39 .Kot.3          .              .             1.0000   -390963.0000      
39 .Mak.1          .              .             1.0000    -28880.0000      
39 .Mak.2          .              .             1.0000    -27436.0000      
39 .Mak.3          .              .             1.0000    -26064.2000      
39 .Kuk.1          .              .             1.0000    -43320.0000      
39 .Kuk.2          .              .             1.0000    -41154.0000      
39 .Kuk.3          .              .             1.0000    -39096.3000      
39 .Kok.1          .              .             1.0000    -28880.0000      
39 .Kok.2          .              .             1.0000    -27436.0000      
39 .Kok.3          .             1.0000         1.0000    -26064.2000      
40 .Mat.1          .              .             1.0000   -152100.0000      
40 .Mat.2          .              .             1.0000   -144495.0000      
40 .Mat.3          .              .             1.0000   -137270.2500      
40 .Kut.1          .              .             1.0000    -76050.0000      
40 .Kut.2          .              .             1.0000    -72247.5000      
40 .Kut.3          .              .             1.0000    -68635.1250      
40 .Kot.1          .              .             1.0000   -456300.0000      
40 .Kot.2          .              .             1.0000   -433485.0000      
40 .Kot.3          .              .             1.0000   -411810.7500      
40 .Mak.1          .              .             1.0000    -30420.0000      
40 .Mak.2          .              .             1.0000    -28899.0000      
40 .Mak.3          .              .             1.0000    -27454.0500      
40 .Kuk.1          .              .             1.0000    -45630.0000      
40 .Kuk.2          .              .             1.0000    -43348.5000      
40 .Kuk.3          .              .             1.0000    -41181.0750      
40 .Kok.1          .              .             1.0000    -30420.0000      
40 .Kok.2          .              .             1.0000    -28899.0000      
40 .Kok.3          .              .             1.0000    -27454.0500      
41 .Mat.1          .              .             1.0000   -160000.0000      
41 .Mat.2          .              .             1.0000   -152000.0000      
41 .Mat.3          .              .             1.0000   -144400.0000      
41 .Kut.1          .              .             1.0000    -80000.0000      
41 .Kut.2          .              .             1.0000    -76000.0000      
41 .Kut.3          .              .             1.0000    -72200.0000      
41 .Kot.1          .              .             1.0000   -480000.0000      
41 .Kot.2          .              .             1.0000   -456000.0000      
41 .Kot.3          .              .             1.0000   -433200.0000      
41 .Mak.1          .              .             1.0000    -32000.0000      
41 .Mak.2          .              .             1.0000    -30400.0000      
41 .Mak.3          .              .             1.0000    -28880.0000      
41 .Kuk.1          .              .             1.0000    -48000.0000      
41 .Kuk.2          .              .             1.0000    -45600.0000      
41 .Kuk.3          .              .             1.0000    -43320.0000      
41 .Kok.1          .              .             1.0000    -32000.0000      
41 .Kok.2          .              .             1.0000    -30400.0000      
41 .Kok.3          .              .             1.0000    -28880.0000      
42 .Mat.1          .              .             1.0000   -168100.0000      
42 .Mat.2          .              .             1.0000   -159695.0000      
42 .Mat.3          .              .             1.0000   -151710.2500      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/19/17 02:05:06 Page 124
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 437


     VAR r  1 if we buy n boats of timber i, 0 otherwise

                 LOWER          LEVEL          UPPER         MARGINAL

42 .Kut.1          .              .             1.0000    -84050.0000      
42 .Kut.2          .              .             1.0000    -79847.5000      
42 .Kut.3          .              .             1.0000    -75855.1250      
42 .Kot.1          .              .             1.0000   -504300.0000      
42 .Kot.2          .              .             1.0000   -479085.0000      
42 .Kot.3          .              .             1.0000   -455130.7500      
42 .Mak.1          .              .             1.0000    -33620.0000      
42 .Mak.2          .              .             1.0000    -31939.0000      
42 .Mak.3          .              .             1.0000    -30342.0500      
42 .Kuk.1          .              .             1.0000    -50430.0000      
42 .Kuk.2          .              .             1.0000    -47908.5000      
42 .Kuk.3          .              .             1.0000    -45513.0750      
42 .Kok.1          .              .             1.0000    -33620.0000      
42 .Kok.2          .              .             1.0000    -31939.0000      
42 .Kok.3          .              .             1.0000    -30342.0500      
43 .Mat.1          .              .             1.0000   -176400.0000      
43 .Mat.2          .              .             1.0000   -167580.0000      
43 .Mat.3          .              .             1.0000   -159201.0000      
43 .Kut.1          .              .             1.0000    -88200.0000      
43 .Kut.2          .              .             1.0000    -83790.0000      
43 .Kut.3          .              .             1.0000    -79600.5000      
43 .Kot.1          .              .             1.0000   -529200.0000      
43 .Kot.2          .              .             1.0000   -502740.0000      
43 .Kot.3          .              .             1.0000   -477603.0000      
43 .Mak.1          .              .             1.0000    -35280.0000      
43 .Mak.2          .              .             1.0000    -33516.0000      
43 .Mak.3          .              .             1.0000    -31840.2000      
43 .Kuk.1          .              .             1.0000    -52920.0000      
43 .Kuk.2          .              .             1.0000    -50274.0000      
43 .Kuk.3          .              .             1.0000    -47760.3000      
43 .Kok.1          .              .             1.0000    -35280.0000      
43 .Kok.2          .              .             1.0000    -33516.0000      
43 .Kok.3          .              .             1.0000    -31840.2000      
44 .Mat.1          .              .             1.0000   -184900.0000      
44 .Mat.2          .              .             1.0000   -175655.0000      
44 .Mat.3          .              .             1.0000   -166872.2500      
44 .Kut.1          .              .             1.0000    -92450.0000      
44 .Kut.2          .              .             1.0000    -87827.5000      
44 .Kut.3          .              .             1.0000    -83436.1250      
44 .Kot.1          .              .             1.0000   -554700.0000      
44 .Kot.2          .              .             1.0000   -526965.0000      
44 .Kot.3          .              .             1.0000   -500616.7500      
44 .Mak.1          .              .             1.0000    -36980.0000      
44 .Mak.2          .              .             1.0000    -35131.0000      
44 .Mak.3          .              .             1.0000    -33374.4500      
44 .Kuk.1          .              .             1.0000    -55470.0000      
44 .Kuk.2          .              .             1.0000    -52696.5000      
44 .Kuk.3          .              .             1.0000    -50061.6750      
44 .Kok.1          .              .             1.0000    -36980.0000      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/19/17 02:05:06 Page 125
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 437


     VAR r  1 if we buy n boats of timber i, 0 otherwise

                 LOWER          LEVEL          UPPER         MARGINAL

44 .Kok.2          .              .             1.0000    -35131.0000      
44 .Kok.3          .              .             1.0000    -33374.4500      
45 .Mat.1          .              .             1.0000   -193600.0000      
45 .Mat.2          .              .             1.0000   -183920.0000      
45 .Mat.3          .              .             1.0000   -174724.0000      
45 .Kut.1          .              .             1.0000    -96800.0000      
45 .Kut.2          .              .             1.0000    -91960.0000      
45 .Kut.3          .              .             1.0000    -87362.0000      
45 .Kot.1          .              .             1.0000   -580800.0000      
45 .Kot.2          .              .             1.0000   -551760.0000      
45 .Kot.3          .              .             1.0000   -524172.0000      
45 .Mak.1          .              .             1.0000    -38720.0000      
45 .Mak.2          .              .             1.0000    -36784.0000      
45 .Mak.3          .              .             1.0000    -34944.8000      
45 .Kuk.1          .              .             1.0000    -58080.0000      
45 .Kuk.2          .              .             1.0000    -55176.0000      
45 .Kuk.3          .              .             1.0000    -52417.2000      
45 .Kok.1          .              .             1.0000    -38720.0000      
45 .Kok.2          .              .             1.0000    -36784.0000      
45 .Kok.3          .              .             1.0000    -34944.8000      
46 .Mat.1          .              .             1.0000   -202500.0000      
46 .Mat.2          .              .             1.0000   -192375.0000      
46 .Mat.3          .              .             1.0000   -182756.2500      
46 .Kut.1          .              .             1.0000   -101250.0000      
46 .Kut.2          .              .             1.0000    -96187.5000      
46 .Kut.3          .              .             1.0000    -91378.1250      
46 .Kot.1          .              .             1.0000   -607500.0000      
46 .Kot.2          .              .             1.0000   -577125.0000      
46 .Kot.3          .              .             1.0000   -548268.7500      
46 .Mak.1          .              .             1.0000    -40500.0000      
46 .Mak.2          .              .             1.0000    -38475.0000      
46 .Mak.3          .              .             1.0000    -36551.2500      
46 .Kuk.1          .              .             1.0000    -60750.0000      
46 .Kuk.2          .              .             1.0000    -57712.5000      
46 .Kuk.3          .              .             1.0000    -54826.8750      
46 .Kok.1          .              .             1.0000    -40500.0000      
46 .Kok.2          .              .             1.0000    -38475.0000      
46 .Kok.3          .              .             1.0000    -36551.2500      
47 .Mat.1          .              .             1.0000   -211600.0000      
47 .Mat.2          .              .             1.0000   -201020.0000      
47 .Mat.3          .              .             1.0000   -190969.0000      
47 .Kut.1          .              .             1.0000   -105800.0000      
47 .Kut.2          .              .             1.0000   -100510.0000      
47 .Kut.3          .              .             1.0000    -95484.5000      
47 .Kot.1          .              .             1.0000   -634800.0000      
47 .Kot.2          .              .             1.0000   -603060.0000      
47 .Kot.3          .              .             1.0000   -572907.0000      
47 .Mak.1          .              .             1.0000    -42320.0000      
47 .Mak.2          .              .             1.0000    -40204.0000      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/19/17 02:05:06 Page 126
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 437


     VAR r  1 if we buy n boats of timber i, 0 otherwise

                 LOWER          LEVEL          UPPER         MARGINAL

47 .Mak.3          .              .             1.0000    -38193.8000      
47 .Kuk.1          .              .             1.0000    -63480.0000      
47 .Kuk.2          .              .             1.0000    -60306.0000      
47 .Kuk.3          .              .             1.0000    -57290.7000      
47 .Kok.1          .              .             1.0000    -42320.0000      
47 .Kok.2          .              .             1.0000    -40204.0000      
47 .Kok.3          .              .             1.0000    -38193.8000      
48 .Mat.1          .              .             1.0000   -220900.0000      
48 .Mat.2          .              .             1.0000   -209855.0000      
48 .Mat.3          .              .             1.0000   -199362.2500      
48 .Kut.1          .              .             1.0000   -110450.0000      
48 .Kut.2          .              .             1.0000   -104927.5000      
48 .Kut.3          .              .             1.0000    -99681.1250      
48 .Kot.1          .              .             1.0000   -662700.0000      
48 .Kot.2          .              .             1.0000   -629565.0000      
48 .Kot.3          .              .             1.0000   -598086.7500      
48 .Mak.1          .              .             1.0000    -44180.0000      
48 .Mak.2          .              .             1.0000    -41971.0000      
48 .Mak.3          .              .             1.0000    -39872.4500      
48 .Kuk.1          .              .             1.0000    -66270.0000      
48 .Kuk.2          .              .             1.0000    -62956.5000      
48 .Kuk.3          .              .             1.0000    -59808.6750      
48 .Kok.1          .              .             1.0000    -44180.0000      
48 .Kok.2          .              .             1.0000    -41971.0000      
48 .Kok.3          .              .             1.0000    -39872.4500      
49 .Mat.1          .              .             1.0000   -230400.0000      
49 .Mat.2          .              .             1.0000   -218880.0000      
49 .Mat.3          .              .             1.0000   -207936.0000      
49 .Kut.1          .              .             1.0000   -115200.0000      
49 .Kut.2          .              .             1.0000   -109440.0000      
49 .Kut.3          .              .             1.0000   -103968.0000      
49 .Kot.1          .              .             1.0000   -691200.0000      
49 .Kot.2          .              .             1.0000   -656640.0000      
49 .Kot.3          .              .             1.0000   -623808.0000      
49 .Mak.1          .              .             1.0000    -46080.0000      
49 .Mak.2          .              .             1.0000    -43776.0000      
49 .Mak.3          .              .             1.0000    -41587.2000      
49 .Kuk.1          .              .             1.0000    -69120.0000      
49 .Kuk.2          .              .             1.0000    -65664.0000      
49 .Kuk.3          .              .             1.0000    -62380.8000      
49 .Kok.1          .              .             1.0000    -46080.0000      
49 .Kok.2          .              .             1.0000    -43776.0000      
49 .Kok.3          .              .             1.0000    -41587.2000      
50 .Mat.1          .              .             1.0000   -240100.0000      
50 .Mat.2          .              .             1.0000   -228095.0000      
50 .Mat.3          .              .             1.0000   -216690.2500      
50 .Kut.1          .              .             1.0000   -120050.0000      
50 .Kut.2          .              .             1.0000   -114047.5000      
50 .Kut.3          .              .             1.0000   -108345.1250      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/19/17 02:05:06 Page 127
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 437


     VAR r  1 if we buy n boats of timber i, 0 otherwise

                 LOWER          LEVEL          UPPER         MARGINAL

50 .Kot.1          .              .             1.0000   -720300.0000      
50 .Kot.2          .              .             1.0000   -684285.0000      
50 .Kot.3          .              .             1.0000   -650070.7500      
50 .Mak.1          .              .             1.0000    -48020.0000      
50 .Mak.2          .              .             1.0000    -45619.0000      
50 .Mak.3          .              .             1.0000    -43338.0500      
50 .Kuk.1          .              .             1.0000    -72030.0000      
50 .Kuk.2          .              .             1.0000    -68428.5000      
50 .Kuk.3          .              .             1.0000    -65007.0750      
50 .Kok.1          .              .             1.0000    -48020.0000      
50 .Kok.2          .              .             1.0000    -45619.0000      
50 .Kok.3          .              .             1.0000    -43338.0500      
51 .Mat.1          .              .             1.0000   -250000.0000      
51 .Mat.2          .              .             1.0000   -237500.0000      
51 .Mat.3          .              .             1.0000   -225625.0000      
51 .Kut.1          .              .             1.0000   -125000.0000      
51 .Kut.2          .              .             1.0000   -118750.0000      
51 .Kut.3          .              .             1.0000   -112812.5000      
51 .Kot.1          .              .             1.0000   -750000.0000      
51 .Kot.2          .              .             1.0000   -712500.0000      
51 .Kot.3          .              .             1.0000   -676875.0000      
51 .Mak.1          .              .             1.0000    -50000.0000      
51 .Mak.2          .              .             1.0000    -47500.0000      
51 .Mak.3          .              .             1.0000    -45125.0000      
51 .Kuk.1          .              .             1.0000    -75000.0000      
51 .Kuk.2          .              .             1.0000    -71250.0000      
51 .Kuk.3          .              .             1.0000    -67687.5000      
51 .Kok.1          .              .             1.0000    -50000.0000      
51 .Kok.2          .              .             1.0000    -47500.0000      
51 .Kok.3          .              .             1.0000    -45125.0000      
52 .Mat.1          .              .             1.0000   -260100.0000      
52 .Mat.2          .              .             1.0000   -247095.0000      
52 .Mat.3          .              .             1.0000   -234740.2500      
52 .Kut.1          .              .             1.0000   -130050.0000      
52 .Kut.2          .              .             1.0000   -123547.5000      
52 .Kut.3          .              .             1.0000   -117370.1250      
52 .Kot.1          .              .             1.0000   -780300.0000      
52 .Kot.2          .              .             1.0000   -741285.0000      
52 .Kot.3          .              .             1.0000   -704220.7500      
52 .Mak.1          .              .             1.0000    -52020.0000      
52 .Mak.2          .              .             1.0000    -49419.0000      
52 .Mak.3          .              .             1.0000    -46948.0500      
52 .Kuk.1          .              .             1.0000    -78030.0000      
52 .Kuk.2          .              .             1.0000    -74128.5000      
52 .Kuk.3          .              .             1.0000    -70422.0750      
52 .Kok.1          .              .             1.0000    -52020.0000      
52 .Kok.2          .              .             1.0000    -49419.0000      
52 .Kok.3          .              .             1.0000    -46948.0500      
53 .Mat.1          .              .             1.0000   -270400.0000      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/19/17 02:05:06 Page 128
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 437


     VAR r  1 if we buy n boats of timber i, 0 otherwise

                 LOWER          LEVEL          UPPER         MARGINAL

53 .Mat.2          .              .             1.0000   -256880.0000      
53 .Mat.3          .              .             1.0000   -244036.0000      
53 .Kut.1          .              .             1.0000   -135200.0000      
53 .Kut.2          .              .             1.0000   -128440.0000      
53 .Kut.3          .              .             1.0000   -122018.0000      
53 .Kot.1          .              .             1.0000   -811200.0000      
53 .Kot.2          .              .             1.0000   -770640.0000      
53 .Kot.3          .              .             1.0000   -732108.0000      
53 .Mak.1          .              .             1.0000    -54080.0000      
53 .Mak.2          .              .             1.0000    -51376.0000      
53 .Mak.3          .              .             1.0000    -48807.2000      
53 .Kuk.1          .              .             1.0000    -81120.0000      
53 .Kuk.2          .              .             1.0000    -77064.0000      
53 .Kuk.3          .              .             1.0000    -73210.8000      
53 .Kok.1          .              .             1.0000    -54080.0000      
53 .Kok.2          .              .             1.0000    -51376.0000      
53 .Kok.3          .              .             1.0000    -48807.2000      
54 .Mat.1          .              .             1.0000   -280900.0000      
54 .Mat.2          .              .             1.0000   -266855.0000      
54 .Mat.3          .              .             1.0000   -253512.2500      
54 .Kut.1          .              .             1.0000   -140450.0000      
54 .Kut.2          .              .             1.0000   -133427.5000      
54 .Kut.3          .              .             1.0000   -126756.1250      
54 .Kot.1          .              .             1.0000   -842700.0000      
54 .Kot.2          .              .             1.0000   -800565.0000      
54 .Kot.3          .              .             1.0000   -760536.7500      
54 .Mak.1          .              .             1.0000    -56180.0000      
54 .Mak.2          .              .             1.0000    -53371.0000      
54 .Mak.3          .              .             1.0000    -50702.4500      
54 .Kuk.1          .              .             1.0000    -84270.0000      
54 .Kuk.2          .              .             1.0000    -80056.5000      
54 .Kuk.3          .              .             1.0000    -76053.6750      
54 .Kok.1          .              .             1.0000    -56180.0000      
54 .Kok.2          .              .             1.0000    -53371.0000      
54 .Kok.3          .              .             1.0000    -50702.4500      
55 .Mat.1          .              .             1.0000   -291600.0000      
55 .Mat.2          .              .             1.0000   -277020.0000      
55 .Mat.3          .              .             1.0000   -263169.0000      
55 .Kut.1          .              .             1.0000   -145800.0000      
55 .Kut.2          .              .             1.0000   -138510.0000      
55 .Kut.3          .              .             1.0000   -131584.5000      
55 .Kot.1          .              .             1.0000   -874800.0000      
55 .Kot.2          .              .             1.0000   -831060.0000      
55 .Kot.3          .              .             1.0000   -789507.0000      
55 .Mak.1          .              .             1.0000    -58320.0000      
55 .Mak.2          .              .             1.0000    -55404.0000      
55 .Mak.3          .              .             1.0000    -52633.8000      
55 .Kuk.1          .              .             1.0000    -87480.0000      
55 .Kuk.2          .              .             1.0000    -83106.0000      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/19/17 02:05:06 Page 129
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 437


     VAR r  1 if we buy n boats of timber i, 0 otherwise

                 LOWER          LEVEL          UPPER         MARGINAL

55 .Kuk.3          .              .             1.0000    -78950.7000      
55 .Kok.1          .              .             1.0000    -58320.0000      
55 .Kok.2          .              .             1.0000    -55404.0000      
55 .Kok.3          .              .             1.0000    -52633.8000      
56 .Mat.1          .              .             1.0000   -302500.0000      
56 .Mat.2          .              .             1.0000   -287375.0000      
56 .Mat.3          .              .             1.0000   -273006.2500      
56 .Kut.1          .              .             1.0000   -151250.0000      
56 .Kut.2          .              .             1.0000   -143687.5000      
56 .Kut.3          .              .             1.0000   -136503.1250      
56 .Kot.1          .              .             1.0000   -907500.0000      
56 .Kot.2          .              .             1.0000   -862125.0000      
56 .Kot.3          .              .             1.0000   -819018.7500      
56 .Mak.1          .              .             1.0000    -60500.0000      
56 .Mak.2          .              .             1.0000    -57475.0000      
56 .Mak.3          .              .             1.0000    -54601.2500      
56 .Kuk.1          .              .             1.0000    -90750.0000      
56 .Kuk.2          .              .             1.0000    -86212.5000      
56 .Kuk.3          .              .             1.0000    -81901.8750      
56 .Kok.1          .              .             1.0000    -60500.0000      
56 .Kok.2          .              .             1.0000    -57475.0000      
56 .Kok.3          .              .             1.0000    -54601.2500      
57 .Mat.1          .              .             1.0000   -313600.0000      
57 .Mat.2          .              .             1.0000   -297920.0000      
57 .Mat.3          .              .             1.0000   -283024.0000      
57 .Kut.1          .              .             1.0000   -156800.0000      
57 .Kut.2          .              .             1.0000   -148960.0000      
57 .Kut.3          .              .             1.0000   -141512.0000      
57 .Kot.1          .              .             1.0000   -940800.0000      
57 .Kot.2          .              .             1.0000   -893760.0000      
57 .Kot.3          .              .             1.0000   -849072.0000      
57 .Mak.1          .              .             1.0000    -62720.0000      
57 .Mak.2          .              .             1.0000    -59584.0000      
57 .Mak.3          .              .             1.0000    -56604.8000      
57 .Kuk.1          .              .             1.0000    -94080.0000      
57 .Kuk.2          .              .             1.0000    -89376.0000      
57 .Kuk.3          .              .             1.0000    -84907.2000      
57 .Kok.1          .              .             1.0000    -62720.0000      
57 .Kok.2          .              .             1.0000    -59584.0000      
57 .Kok.3          .              .             1.0000    -56604.8000      
58 .Mat.1          .              .             1.0000   -324900.0000      
58 .Mat.2          .              .             1.0000   -308655.0000      
58 .Mat.3          .              .             1.0000   -293222.2500      
58 .Kut.1          .              .             1.0000   -162450.0000      
58 .Kut.2          .              .             1.0000   -154327.5000      
58 .Kut.3          .              .             1.0000   -146611.1250      
58 .Kot.1          .              .             1.0000   -974700.0000      
58 .Kot.2          .              .             1.0000   -925965.0000      
58 .Kot.3          .              .             1.0000   -879666.7500      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/19/17 02:05:06 Page 130
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 437


     VAR r  1 if we buy n boats of timber i, 0 otherwise

                 LOWER          LEVEL          UPPER         MARGINAL

58 .Mak.1          .              .             1.0000    -64980.0000      
58 .Mak.2          .              .             1.0000    -61731.0000      
58 .Mak.3          .              .             1.0000    -58644.4500      
58 .Kuk.1          .              .             1.0000    -97470.0000      
58 .Kuk.2          .              .             1.0000    -92596.5000      
58 .Kuk.3          .              .             1.0000    -87966.6750      
58 .Kok.1          .             1.0000         1.0000    -64980.0000      
58 .Kok.2          .              .             1.0000    -61731.0000      
58 .Kok.3          .              .             1.0000    -58644.4500      
59 .Mat.1          .              .             1.0000   -336400.0000      
59 .Mat.2          .              .             1.0000   -319580.0000      
59 .Mat.3          .              .             1.0000   -303601.0000      
59 .Kut.1          .              .             1.0000   -168200.0000      
59 .Kut.2          .              .             1.0000   -159790.0000      
59 .Kut.3          .              .             1.0000   -151800.5000      
59 .Kot.1          .              .             1.0000   -1.009200E+6      
59 .Kot.2          .              .             1.0000   -958740.0000      
59 .Kot.3          .              .             1.0000   -910803.0000      
59 .Mak.1          .              .             1.0000    -67280.0000      
59 .Mak.2          .              .             1.0000    -63916.0000      
59 .Mak.3          .              .             1.0000    -60720.2000      
59 .Kuk.1          .              .             1.0000   -100920.0000      
59 .Kuk.2          .              .             1.0000    -95874.0000      
59 .Kuk.3          .              .             1.0000    -91080.3000      
59 .Kok.1          .              .             1.0000    -67280.0000      
59 .Kok.2          .              .             1.0000    -63916.0000      
59 .Kok.3          .              .             1.0000    -60720.2000      
60 .Mat.1          .              .             1.0000   -348100.0000      
60 .Mat.2          .              .             1.0000   -330695.0000      
60 .Mat.3          .              .             1.0000   -314160.2500      
60 .Kut.1          .              .             1.0000   -174050.0000      
60 .Kut.2          .              .             1.0000   -165347.5000      
60 .Kut.3          .              .             1.0000   -157080.1250      
60 .Kot.1          .              .             1.0000   -1.044300E+6      
60 .Kot.2          .              .             1.0000   -992085.0000      
60 .Kot.3          .              .             1.0000   -942480.7500      
60 .Mak.1          .              .             1.0000    -69620.0000      
60 .Mak.2          .              .             1.0000    -66139.0000      
60 .Mak.3          .              .             1.0000    -62832.0500      
60 .Kuk.1          .              .             1.0000   -104430.0000      
60 .Kuk.2          .              .             1.0000    -99208.5000      
60 .Kuk.3          .              .             1.0000    -94248.0750      
60 .Kok.1          .              .             1.0000    -69620.0000      
60 .Kok.2          .             1.0000         1.0000    -66139.0000      
60 .Kok.3          .              .             1.0000    -62832.0500      
61 .Mat.1          .              .             1.0000   -360000.0000      
61 .Mat.2          .              .             1.0000   -342000.0000      
61 .Mat.3          .              .             1.0000   -324900.0000      
61 .Kut.1          .              .             1.0000   -180000.0000      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/19/17 02:05:06 Page 131
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 437


     VAR r  1 if we buy n boats of timber i, 0 otherwise

                 LOWER          LEVEL          UPPER         MARGINAL

61 .Kut.2          .              .             1.0000   -171000.0000      
61 .Kut.3          .              .             1.0000   -162450.0000      
61 .Kot.1          .              .             1.0000   -1.080000E+6      
61 .Kot.2          .              .             1.0000   -1.026000E+6      
61 .Kot.3          .              .             1.0000   -974700.0000      
61 .Mak.1          .              .             1.0000    -72000.0000      
61 .Mak.2          .              .             1.0000    -68400.0000      
61 .Mak.3          .              .             1.0000    -64980.0000      
61 .Kuk.1          .              .             1.0000   -108000.0000      
61 .Kuk.2          .              .             1.0000   -102600.0000      
61 .Kuk.3          .              .             1.0000    -97470.0000      
61 .Kok.1          .              .             1.0000    -72000.0000      
61 .Kok.2          .              .             1.0000    -68400.0000      
61 .Kok.3          .              .             1.0000    -64980.0000      
62 .Mat.1          .              .             1.0000   -372100.0000      
62 .Mat.2          .              .             1.0000   -353495.0000      
62 .Mat.3          .              .             1.0000   -335820.2500      
62 .Kut.1          .              .             1.0000   -186050.0000      
62 .Kut.2          .              .             1.0000   -176747.5000      
62 .Kut.3          .              .             1.0000   -167910.1250      
62 .Kot.1          .              .             1.0000   -1.116300E+6      
62 .Kot.2          .              .             1.0000   -1.060485E+6      
62 .Kot.3          .              .             1.0000   -1.007461E+6      
62 .Mak.1          .              .             1.0000    -74420.0000      
62 .Mak.2          .              .             1.0000    -70699.0000      
62 .Mak.3          .              .             1.0000    -67164.0500      
62 .Kuk.1          .              .             1.0000   -111630.0000      
62 .Kuk.2          .              .             1.0000   -106048.5000      
62 .Kuk.3          .              .             1.0000   -100746.0750      
62 .Kok.1          .              .             1.0000    -74420.0000      
62 .Kok.2          .              .             1.0000    -70699.0000      
62 .Kok.3          .              .             1.0000    -67164.0500      
63 .Mat.1          .              .             1.0000   -384400.0000      
63 .Mat.2          .              .             1.0000   -365180.0000      
63 .Mat.3          .              .             1.0000   -346921.0000      
63 .Kut.1          .              .             1.0000   -192200.0000      
63 .Kut.2          .              .             1.0000   -182590.0000      
63 .Kut.3          .              .             1.0000   -173460.5000      
63 .Kot.1          .              .             1.0000   -1.153200E+6      
63 .Kot.2          .              .             1.0000   -1.095540E+6      
63 .Kot.3          .              .             1.0000   -1.040763E+6      
63 .Mak.1          .              .             1.0000    -76880.0000      
63 .Mak.2          .              .             1.0000    -73036.0000      
63 .Mak.3          .              .             1.0000    -69384.2000      
63 .Kuk.1          .              .             1.0000   -115320.0000      
63 .Kuk.2          .              .             1.0000   -109554.0000      
63 .Kuk.3          .              .             1.0000   -104076.3000      
63 .Kok.1          .              .             1.0000    -76880.0000      
63 .Kok.2          .              .             1.0000    -73036.0000      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/19/17 02:05:06 Page 132
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 437


     VAR r  1 if we buy n boats of timber i, 0 otherwise

                 LOWER          LEVEL          UPPER         MARGINAL

63 .Kok.3          .              .             1.0000    -69384.2000      
64 .Mat.1          .              .             1.0000   -396900.0000      
64 .Mat.2          .              .             1.0000   -377055.0000      
64 .Mat.3          .              .             1.0000   -358202.2500      
64 .Kut.1          .              .             1.0000   -198450.0000      
64 .Kut.2          .              .             1.0000   -188527.5000      
64 .Kut.3          .              .             1.0000   -179101.1250      
64 .Kot.1          .              .             1.0000   -1.190700E+6      
64 .Kot.2          .              .             1.0000   -1.131165E+6      
64 .Kot.3          .              .             1.0000   -1.074607E+6      
64 .Mak.1          .              .             1.0000    -79380.0000      
64 .Mak.2          .              .             1.0000    -75411.0000      
64 .Mak.3          .              .             1.0000    -71640.4500      
64 .Kuk.1          .              .             1.0000   -119070.0000      
64 .Kuk.2          .              .             1.0000   -113116.5000      
64 .Kuk.3          .              .             1.0000   -107460.6750      
64 .Kok.1          .              .             1.0000    -79380.0000      
64 .Kok.2          .              .             1.0000    -75411.0000      
64 .Kok.3          .              .             1.0000    -71640.4500      
65 .Mat.1          .              .             1.0000   -409600.0000      
65 .Mat.2          .              .             1.0000   -389120.0000      
65 .Mat.3          .              .             1.0000   -369664.0000      
65 .Kut.1          .              .             1.0000   -204800.0000      
65 .Kut.2          .              .             1.0000   -194560.0000      
65 .Kut.3          .              .             1.0000   -184832.0000      
65 .Kot.1          .              .             1.0000   -1.228800E+6      
65 .Kot.2          .              .             1.0000   -1.167360E+6      
65 .Kot.3          .              .             1.0000   -1.108992E+6      
65 .Mak.1          .              .             1.0000    -81920.0000      
65 .Mak.2          .              .             1.0000    -77824.0000      
65 .Mak.3          .              .             1.0000    -73932.8000      
65 .Kuk.1          .              .             1.0000   -122880.0000      
65 .Kuk.2          .              .             1.0000   -116736.0000      
65 .Kuk.3          .              .             1.0000   -110899.2000      
65 .Kok.1          .              .             1.0000    -81920.0000      
65 .Kok.2          .              .             1.0000    -77824.0000      
65 .Kok.3          .              .             1.0000    -73932.8000      
66 .Mat.1          .              .             1.0000   -422500.0000      
66 .Mat.2          .              .             1.0000   -401375.0000      
66 .Mat.3          .              .             1.0000   -381306.2500      
66 .Kut.1          .              .             1.0000   -211250.0000      
66 .Kut.2          .              .             1.0000   -200687.5000      
66 .Kut.3          .              .             1.0000   -190653.1250      
66 .Kot.1          .              .             1.0000   -1.267500E+6      
66 .Kot.2          .              .             1.0000   -1.204125E+6      
66 .Kot.3          .              .             1.0000   -1.143919E+6      
66 .Mak.1          .              .             1.0000    -84500.0000      
66 .Mak.2          .              .             1.0000    -80275.0000      
66 .Mak.3          .              .             1.0000    -76261.2500      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/19/17 02:05:06 Page 133
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 437


     VAR r  1 if we buy n boats of timber i, 0 otherwise

                 LOWER          LEVEL          UPPER         MARGINAL

66 .Kuk.1          .              .             1.0000   -126750.0000      
66 .Kuk.2          .              .             1.0000   -120412.5000      
66 .Kuk.3          .              .             1.0000   -114391.8750      
66 .Kok.1          .              .             1.0000    -84500.0000      
66 .Kok.2          .              .             1.0000    -80275.0000      
66 .Kok.3          .              .             1.0000    -76261.2500      
67 .Mat.1          .              .             1.0000   -435600.0000      
67 .Mat.2          .              .             1.0000   -413820.0000      
67 .Mat.3          .              .             1.0000   -393129.0000      
67 .Kut.1          .              .             1.0000   -217800.0000      
67 .Kut.2          .              .             1.0000   -206910.0000      
67 .Kut.3          .              .             1.0000   -196564.5000      
67 .Kot.1          .              .             1.0000   -1.306800E+6      
67 .Kot.2          .              .             1.0000   -1.241460E+6      
67 .Kot.3          .              .             1.0000   -1.179387E+6      
67 .Mak.1          .              .             1.0000    -87120.0000      
67 .Mak.2          .              .             1.0000    -82764.0000      
67 .Mak.3          .              .             1.0000    -78625.8000      
67 .Kuk.1          .              .             1.0000   -130680.0000      
67 .Kuk.2          .              .             1.0000   -124146.0000      
67 .Kuk.3          .              .             1.0000   -117938.7000      
67 .Kok.1          .              .             1.0000    -87120.0000      
67 .Kok.2          .              .             1.0000    -82764.0000      
67 .Kok.3          .              .             1.0000    -78625.8000      
68 .Mat.1          .              .             1.0000   -448900.0000      
68 .Mat.2          .              .             1.0000   -426455.0000      
68 .Mat.3          .              .             1.0000   -405132.2500      
68 .Kut.1          .              .             1.0000   -224450.0000      
68 .Kut.2          .              .             1.0000   -213227.5000      
68 .Kut.3          .              .             1.0000   -202566.1250      
68 .Kot.1          .              .             1.0000   -1.346700E+6      
68 .Kot.2          .              .             1.0000   -1.279365E+6      
68 .Kot.3          .              .             1.0000   -1.215397E+6      
68 .Mak.1          .              .             1.0000    -89780.0000      
68 .Mak.2          .              .             1.0000    -85291.0000      
68 .Mak.3          .              .             1.0000    -81026.4500      
68 .Kuk.1          .              .             1.0000   -134670.0000      
68 .Kuk.2          .              .             1.0000   -127936.5000      
68 .Kuk.3          .              .             1.0000   -121539.6750      
68 .Kok.1          .              .             1.0000    -89780.0000      
68 .Kok.2          .              .             1.0000    -85291.0000      
68 .Kok.3          .              .             1.0000    -81026.4500      
69 .Mat.1          .              .             1.0000   -462400.0000      
69 .Mat.2          .              .             1.0000   -439280.0000      
69 .Mat.3          .              .             1.0000   -417316.0000      
69 .Kut.1          .              .             1.0000   -231200.0000      
69 .Kut.2          .              .             1.0000   -219640.0000      
69 .Kut.3          .              .             1.0000   -208658.0000      
69 .Kot.1          .              .             1.0000   -1.387200E+6      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/19/17 02:05:06 Page 134
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 437


     VAR r  1 if we buy n boats of timber i, 0 otherwise

                 LOWER          LEVEL          UPPER         MARGINAL

69 .Kot.2          .              .             1.0000   -1.317840E+6      
69 .Kot.3          .              .             1.0000   -1.251948E+6      
69 .Mak.1          .              .             1.0000    -92480.0000      
69 .Mak.2          .              .             1.0000    -87856.0000      
69 .Mak.3          .              .             1.0000    -83463.2000      
69 .Kuk.1          .              .             1.0000   -138720.0000      
69 .Kuk.2          .              .             1.0000   -131784.0000      
69 .Kuk.3          .              .             1.0000   -125194.8000      
69 .Kok.1          .              .             1.0000    -92480.0000      
69 .Kok.2          .              .             1.0000    -87856.0000      
69 .Kok.3          .              .             1.0000    -83463.2000      
70 .Mat.1          .              .             1.0000   -476100.0000      
70 .Mat.2          .              .             1.0000   -452295.0000      
70 .Mat.3          .              .             1.0000   -429680.2500      
70 .Kut.1          .              .             1.0000   -238050.0000      
70 .Kut.2          .              .             1.0000   -226147.5000      
70 .Kut.3          .              .             1.0000   -214840.1250      
70 .Kot.1          .              .             1.0000   -1.428300E+6      
70 .Kot.2          .              .             1.0000   -1.356885E+6      
70 .Kot.3          .              .             1.0000   -1.289041E+6      
70 .Mak.1          .              .             1.0000    -95220.0000      
70 .Mak.2          .              .             1.0000    -90459.0000      
70 .Mak.3          .              .             1.0000    -85936.0500      
70 .Kuk.1          .              .             1.0000   -142830.0000      
70 .Kuk.2          .              .             1.0000   -135688.5000      
70 .Kuk.3          .              .             1.0000   -128904.0750      
70 .Kok.1          .              .             1.0000    -95220.0000      
70 .Kok.2          .              .             1.0000    -90459.0000      
70 .Kok.3          .              .             1.0000    -85936.0500      
71 .Mat.1          .              .             1.0000   -490000.0000      
71 .Mat.2          .              .             1.0000   -465500.0000      
71 .Mat.3          .              .             1.0000   -442225.0000      
71 .Kut.1          .              .             1.0000   -245000.0000      
71 .Kut.2          .              .             1.0000   -232750.0000      
71 .Kut.3          .              .             1.0000   -221112.5000      
71 .Kot.1          .              .             1.0000   -1.470000E+6      
71 .Kot.2          .              .             1.0000   -1.396500E+6      
71 .Kot.3          .              .             1.0000   -1.326675E+6      
71 .Mak.1          .              .             1.0000    -98000.0000      
71 .Mak.2          .              .             1.0000    -93100.0000      
71 .Mak.3          .              .             1.0000    -88445.0000      
71 .Kuk.1          .              .             1.0000   -147000.0000      
71 .Kuk.2          .              .             1.0000   -139650.0000      
71 .Kuk.3          .              .             1.0000   -132667.5000      
71 .Kok.1          .              .             1.0000    -98000.0000      
71 .Kok.2          .              .             1.0000    -93100.0000      
71 .Kok.3          .              .             1.0000    -88445.0000      
72 .Mat.1          .              .             1.0000   -504100.0000      
72 .Mat.2          .              .             1.0000   -478895.0000      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/19/17 02:05:06 Page 135
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 437


     VAR r  1 if we buy n boats of timber i, 0 otherwise

                 LOWER          LEVEL          UPPER         MARGINAL

72 .Mat.3          .              .             1.0000   -454950.2500      
72 .Kut.1          .              .             1.0000   -252050.0000      
72 .Kut.2          .              .             1.0000   -239447.5000      
72 .Kut.3          .              .             1.0000   -227475.1250      
72 .Kot.1          .              .             1.0000   -1.512300E+6      
72 .Kot.2          .              .             1.0000   -1.436685E+6      
72 .Kot.3          .              .             1.0000   -1.364851E+6      
72 .Mak.1          .              .             1.0000   -100820.0000      
72 .Mak.2          .              .             1.0000    -95779.0000      
72 .Mak.3          .              .             1.0000    -90990.0500      
72 .Kuk.1          .              .             1.0000   -151230.0000      
72 .Kuk.2          .              .             1.0000   -143668.5000      
72 .Kuk.3          .              .             1.0000   -136485.0750      
72 .Kok.1          .              .             1.0000   -100820.0000      
72 .Kok.2          .              .             1.0000    -95779.0000      
72 .Kok.3          .              .             1.0000    -90990.0500      
73 .Mat.1          .              .             1.0000   -518400.0000      
73 .Mat.2          .              .             1.0000   -492480.0000      
73 .Mat.3          .              .             1.0000   -467856.0000      
73 .Kut.1          .              .             1.0000   -259200.0000      
73 .Kut.2          .              .             1.0000   -246240.0000      
73 .Kut.3          .              .             1.0000   -233928.0000      
73 .Kot.1          .              .             1.0000   -1.555200E+6      
73 .Kot.2          .              .             1.0000   -1.477440E+6      
73 .Kot.3          .              .             1.0000   -1.403568E+6      
73 .Mak.1          .              .             1.0000   -103680.0000      
73 .Mak.2          .              .             1.0000    -98496.0000      
73 .Mak.3          .              .             1.0000    -93571.2000      
73 .Kuk.1          .              .             1.0000   -155520.0000      
73 .Kuk.2          .              .             1.0000   -147744.0000      
73 .Kuk.3          .              .             1.0000   -140356.8000      
73 .Kok.1          .              .             1.0000   -103680.0000      
73 .Kok.2          .              .             1.0000    -98496.0000      
73 .Kok.3          .              .             1.0000    -93571.2000      
74 .Mat.1          .              .             1.0000   -532900.0000      
74 .Mat.2          .              .             1.0000   -506255.0000      
74 .Mat.3          .              .             1.0000   -480942.2500      
74 .Kut.1          .              .             1.0000   -266450.0000      
74 .Kut.2          .              .             1.0000   -253127.5000      
74 .Kut.3          .              .             1.0000   -240471.1250      
74 .Kot.1          .              .             1.0000   -1.598700E+6      
74 .Kot.2          .              .             1.0000   -1.518765E+6      
74 .Kot.3          .              .             1.0000   -1.442827E+6      
74 .Mak.1          .              .             1.0000   -106580.0000      
74 .Mak.2          .              .             1.0000   -101251.0000      
74 .Mak.3          .              .             1.0000    -96188.4500      
74 .Kuk.1          .              .             1.0000   -159870.0000      
74 .Kuk.2          .              .             1.0000   -151876.5000      
74 .Kuk.3          .              .             1.0000   -144282.6750      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/19/17 02:05:06 Page 136
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 437


     VAR r  1 if we buy n boats of timber i, 0 otherwise

                 LOWER          LEVEL          UPPER         MARGINAL

74 .Kok.1          .              .             1.0000   -106580.0000      
74 .Kok.2          .              .             1.0000   -101251.0000      
74 .Kok.3          .              .             1.0000    -96188.4500      
75 .Mat.1          .              .             1.0000   -547600.0000      
75 .Mat.2          .              .             1.0000   -520220.0000      
75 .Mat.3          .              .             1.0000   -494209.0000      
75 .Kut.1          .              .             1.0000   -273800.0000      
75 .Kut.2          .              .             1.0000   -260110.0000      
75 .Kut.3          .              .             1.0000   -247104.5000      
75 .Kot.1          .              .             1.0000   -1.642800E+6      
75 .Kot.2          .              .             1.0000   -1.560660E+6      
75 .Kot.3          .              .             1.0000   -1.482627E+6      
75 .Mak.1          .              .             1.0000   -109520.0000      
75 .Mak.2          .              .             1.0000   -104044.0000      
75 .Mak.3          .              .             1.0000    -98841.8000      
75 .Kuk.1          .              .             1.0000   -164280.0000      
75 .Kuk.2          .              .             1.0000   -156066.0000      
75 .Kuk.3          .              .             1.0000   -148262.7000      
75 .Kok.1          .              .             1.0000   -109520.0000      
75 .Kok.2          .              .             1.0000   -104044.0000      
75 .Kok.3          .              .             1.0000    -98841.8000      
76 .Mat.1          .              .             1.0000   -562500.0000      
76 .Mat.2          .              .             1.0000   -534375.0000      
76 .Mat.3          .              .             1.0000   -507656.2500      
76 .Kut.1          .              .             1.0000   -281250.0000      
76 .Kut.2          .              .             1.0000   -267187.5000      
76 .Kut.3          .              .             1.0000   -253828.1250      
76 .Kot.1          .              .             1.0000   -1.687500E+6      
76 .Kot.2          .              .             1.0000   -1.603125E+6      
76 .Kot.3          .              .             1.0000   -1.522969E+6      
76 .Mak.1          .              .             1.0000   -112500.0000      
76 .Mak.2          .              .             1.0000   -106875.0000      
76 .Mak.3          .              .             1.0000   -101531.2500      
76 .Kuk.1          .              .             1.0000   -168750.0000      
76 .Kuk.2          .              .             1.0000   -160312.5000      
76 .Kuk.3          .              .             1.0000   -152296.8750      
76 .Kok.1          .              .             1.0000   -112500.0000      
76 .Kok.2          .              .             1.0000   -106875.0000      
76 .Kok.3          .              .             1.0000   -101531.2500      
77 .Mat.1          .              .             1.0000   -577600.0000      
77 .Mat.2          .              .             1.0000   -548720.0000      
77 .Mat.3          .              .             1.0000   -521284.0000      
77 .Kut.1          .              .             1.0000   -288800.0000      
77 .Kut.2          .              .             1.0000   -274360.0000      
77 .Kut.3          .              .             1.0000   -260642.0000      
77 .Kot.1          .              .             1.0000   -1.732800E+6      
77 .Kot.2          .              .             1.0000   -1.646160E+6      
77 .Kot.3          .              .             1.0000   -1.563852E+6      
77 .Mak.1          .              .             1.0000   -115520.0000      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/19/17 02:05:06 Page 137
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 437


     VAR r  1 if we buy n boats of timber i, 0 otherwise

                 LOWER          LEVEL          UPPER         MARGINAL

77 .Mak.2          .              .             1.0000   -109744.0000      
77 .Mak.3          .              .             1.0000   -104256.8000      
77 .Kuk.1          .              .             1.0000   -173280.0000      
77 .Kuk.2          .              .             1.0000   -164616.0000      
77 .Kuk.3          .              .             1.0000   -156385.2000      
77 .Kok.1          .              .             1.0000   -115520.0000      
77 .Kok.2          .              .             1.0000   -109744.0000      
77 .Kok.3          .              .             1.0000   -104256.8000      
78 .Mat.1          .              .             1.0000   -592900.0000      
78 .Mat.2          .              .             1.0000   -563255.0000      
78 .Mat.3          .              .             1.0000   -535092.2500      
78 .Kut.1          .              .             1.0000   -296450.0000      
78 .Kut.2          .              .             1.0000   -281627.5000      
78 .Kut.3          .              .             1.0000   -267546.1250      
78 .Kot.1          .              .             1.0000   -1.778700E+6      
78 .Kot.2          .              .             1.0000   -1.689765E+6      
78 .Kot.3          .              .             1.0000   -1.605277E+6      
78 .Mak.1          .              .             1.0000   -118580.0000      
78 .Mak.2          .              .             1.0000   -112651.0000      
78 .Mak.3          .              .             1.0000   -107018.4500      
78 .Kuk.1          .              .             1.0000   -177870.0000      
78 .Kuk.2          .              .             1.0000   -168976.5000      
78 .Kuk.3          .              .             1.0000   -160527.6750      
78 .Kok.1          .              .             1.0000   -118580.0000      
78 .Kok.2          .              .             1.0000   -112651.0000      
78 .Kok.3          .              .             1.0000   -107018.4500      
79 .Mat.1          .              .             1.0000   -608400.0000      
79 .Mat.2          .              .             1.0000   -577980.0000      
79 .Mat.3          .              .             1.0000   -549081.0000      
79 .Kut.1          .              .             1.0000   -304200.0000      
79 .Kut.2          .              .             1.0000   -288990.0000      
79 .Kut.3          .              .             1.0000   -274540.5000      
79 .Kot.1          .              .             1.0000   -1.825200E+6      
79 .Kot.2          .              .             1.0000   -1.733940E+6      
79 .Kot.3          .              .             1.0000   -1.647243E+6      
79 .Mak.1          .              .             1.0000   -121680.0000      
79 .Mak.2          .              .             1.0000   -115596.0000      
79 .Mak.3          .              .             1.0000   -109816.2000      
79 .Kuk.1          .              .             1.0000   -182520.0000      
79 .Kuk.2          .              .             1.0000   -173394.0000      
79 .Kuk.3          .              .             1.0000   -164724.3000      
79 .Kok.1          .              .             1.0000   -121680.0000      
79 .Kok.2          .              .             1.0000   -115596.0000      
79 .Kok.3          .              .             1.0000   -109816.2000      
80 .Mat.1          .              .             1.0000   -624100.0000      
80 .Mat.2          .              .             1.0000   -592895.0000      
80 .Mat.3          .              .             1.0000   -563250.2500      
80 .Kut.1          .              .             1.0000   -312050.0000      
80 .Kut.2          .              .             1.0000   -296447.5000      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/19/17 02:05:06 Page 138
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 437


     VAR r  1 if we buy n boats of timber i, 0 otherwise

                 LOWER          LEVEL          UPPER         MARGINAL

80 .Kut.3          .              .             1.0000   -281625.1250      
80 .Kot.1          .              .             1.0000   -1.872300E+6      
80 .Kot.2          .              .             1.0000   -1.778685E+6      
80 .Kot.3          .              .             1.0000   -1.689751E+6      
80 .Mak.1          .              .             1.0000   -124820.0000      
80 .Mak.2          .              .             1.0000   -118579.0000      
80 .Mak.3          .              .             1.0000   -112650.0500      
80 .Kuk.1          .              .             1.0000   -187230.0000      
80 .Kuk.2          .              .             1.0000   -177868.5000      
80 .Kuk.3          .              .             1.0000   -168975.0750      
80 .Kok.1          .              .             1.0000   -124820.0000      
80 .Kok.2          .              .             1.0000   -118579.0000      
80 .Kok.3          .              .             1.0000   -112650.0500      
81 .Mat.1          .              .             1.0000   -640000.0000      
81 .Mat.2          .              .             1.0000   -608000.0000      
81 .Mat.3          .              .             1.0000   -577600.0000      
81 .Kut.1          .              .             1.0000   -320000.0000      
81 .Kut.2          .              .             1.0000   -304000.0000      
81 .Kut.3          .              .             1.0000   -288800.0000      
81 .Kot.1          .              .             1.0000   -1.920000E+6      
81 .Kot.2          .              .             1.0000   -1.824000E+6      
81 .Kot.3          .              .             1.0000   -1.732800E+6      
81 .Mak.1          .              .             1.0000   -128000.0000      
81 .Mak.2          .              .             1.0000   -121600.0000      
81 .Mak.3          .              .             1.0000   -115520.0000      
81 .Kuk.1          .              .             1.0000   -192000.0000      
81 .Kuk.2          .              .             1.0000   -182400.0000      
81 .Kuk.3          .              .             1.0000   -173280.0000      
81 .Kok.1          .              .             1.0000   -128000.0000      
81 .Kok.2          .              .             1.0000   -121600.0000      
81 .Kok.3          .              .             1.0000   -115520.0000      
82 .Mat.1          .              .             1.0000   -656100.0000      
82 .Mat.2          .              .             1.0000   -623295.0000      
82 .Mat.3          .              .             1.0000   -592130.2500      
82 .Kut.1          .              .             1.0000   -328050.0000      
82 .Kut.2          .              .             1.0000   -311647.5000      
82 .Kut.3          .              .             1.0000   -296065.1250      
82 .Kot.1          .              .             1.0000   -1.968300E+6      
82 .Kot.2          .              .             1.0000   -1.869885E+6      
82 .Kot.3          .              .             1.0000   -1.776391E+6      
82 .Mak.1          .              .             1.0000   -131220.0000      
82 .Mak.2          .              .             1.0000   -124659.0000      
82 .Mak.3          .              .             1.0000   -118426.0500      
82 .Kuk.1          .              .             1.0000   -196830.0000      
82 .Kuk.2          .              .             1.0000   -186988.5000      
82 .Kuk.3          .              .             1.0000   -177639.0750      
82 .Kok.1          .              .             1.0000   -131220.0000      
82 .Kok.2          .              .             1.0000   -124659.0000      
82 .Kok.3          .              .             1.0000   -118426.0500      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/19/17 02:05:06 Page 139
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 437


     VAR r  1 if we buy n boats of timber i, 0 otherwise

                 LOWER          LEVEL          UPPER         MARGINAL

83 .Mat.1          .              .             1.0000   -672400.0000      
83 .Mat.2          .              .             1.0000   -638780.0000      
83 .Mat.3          .              .             1.0000   -606841.0000      
83 .Kut.1          .              .             1.0000   -336200.0000      
83 .Kut.2          .              .             1.0000   -319390.0000      
83 .Kut.3          .              .             1.0000   -303420.5000      
83 .Kot.1          .              .             1.0000   -2.017200E+6      
83 .Kot.2          .              .             1.0000   -1.916340E+6      
83 .Kot.3          .              .             1.0000   -1.820523E+6      
83 .Mak.1          .              .             1.0000   -134480.0000      
83 .Mak.2          .              .             1.0000   -127756.0000      
83 .Mak.3          .              .             1.0000   -121368.2000      
83 .Kuk.1          .              .             1.0000   -201720.0000      
83 .Kuk.2          .              .             1.0000   -191634.0000      
83 .Kuk.3          .              .             1.0000   -182052.3000      
83 .Kok.1          .              .             1.0000   -134480.0000      
83 .Kok.2          .              .             1.0000   -127756.0000      
83 .Kok.3          .              .             1.0000   -121368.2000      
84 .Mat.1          .              .             1.0000   -688900.0000      
84 .Mat.2          .              .             1.0000   -654455.0000      
84 .Mat.3          .              .             1.0000   -621732.2500      
84 .Kut.1          .              .             1.0000   -344450.0000      
84 .Kut.2          .              .             1.0000   -327227.5000      
84 .Kut.3          .              .             1.0000   -310866.1250      
84 .Kot.1          .              .             1.0000   -2.066700E+6      
84 .Kot.2          .              .             1.0000   -1.963365E+6      
84 .Kot.3          .              .             1.0000   -1.865197E+6      
84 .Mak.1          .              .             1.0000   -137780.0000      
84 .Mak.2          .              .             1.0000   -130891.0000      
84 .Mak.3          .              .             1.0000   -124346.4500      
84 .Kuk.1          .              .             1.0000   -206670.0000      
84 .Kuk.2          .              .             1.0000   -196336.5000      
84 .Kuk.3          .              .             1.0000   -186519.6750      
84 .Kok.1          .              .             1.0000   -137780.0000      
84 .Kok.2          .              .             1.0000   -130891.0000      
84 .Kok.3          .              .             1.0000   -124346.4500      
85 .Mat.1          .              .             1.0000   -705600.0000      
85 .Mat.2          .              .             1.0000   -670320.0000      
85 .Mat.3          .              .             1.0000   -636804.0000      
85 .Kut.1          .              .             1.0000   -352800.0000      
85 .Kut.2          .              .             1.0000   -335160.0000      
85 .Kut.3          .              .             1.0000   -318402.0000      
85 .Kot.1          .              .             1.0000   -2.116800E+6      
85 .Kot.2          .              .             1.0000   -2.010960E+6      
85 .Kot.3          .              .             1.0000   -1.910412E+6      
85 .Mak.1          .              .             1.0000   -141120.0000      
85 .Mak.2          .              .             1.0000   -134064.0000      
85 .Mak.3          .              .             1.0000   -127360.8000      
85 .Kuk.1          .              .             1.0000   -211680.0000      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/19/17 02:05:06 Page 140
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 437


     VAR r  1 if we buy n boats of timber i, 0 otherwise

                 LOWER          LEVEL          UPPER         MARGINAL

85 .Kuk.2          .              .             1.0000   -201096.0000      
85 .Kuk.3          .              .             1.0000   -191041.2000      
85 .Kok.1          .              .             1.0000   -141120.0000      
85 .Kok.2          .              .             1.0000   -134064.0000      
85 .Kok.3          .              .             1.0000   -127360.8000      
86 .Mat.1          .              .             1.0000   -722500.0000      
86 .Mat.2          .              .             1.0000   -686375.0000      
86 .Mat.3          .              .             1.0000   -652056.2500      
86 .Kut.1          .              .             1.0000   -361250.0000      
86 .Kut.2          .              .             1.0000   -343187.5000      
86 .Kut.3          .              .             1.0000   -326028.1250      
86 .Kot.1          .              .             1.0000   -2.167500E+6      
86 .Kot.2          .              .             1.0000   -2.059125E+6      
86 .Kot.3          .              .             1.0000   -1.956169E+6      
86 .Mak.1          .              .             1.0000   -144500.0000      
86 .Mak.2          .              .             1.0000   -137275.0000      
86 .Mak.3          .              .             1.0000   -130411.2500      
86 .Kuk.1          .              .             1.0000   -216750.0000      
86 .Kuk.2          .              .             1.0000   -205912.5000      
86 .Kuk.3          .              .             1.0000   -195616.8750      
86 .Kok.1          .              .             1.0000   -144500.0000      
86 .Kok.2          .              .             1.0000   -137275.0000      
86 .Kok.3          .              .             1.0000   -130411.2500      
87 .Mat.1          .              .             1.0000   -739600.0000      
87 .Mat.2          .              .             1.0000   -702620.0000      
87 .Mat.3          .              .             1.0000   -667489.0000      
87 .Kut.1          .              .             1.0000   -369800.0000      
87 .Kut.2          .              .             1.0000   -351310.0000      
87 .Kut.3          .              .             1.0000   -333744.5000      
87 .Kot.1          .              .             1.0000   -2.218800E+6      
87 .Kot.2          .              .             1.0000   -2.107860E+6      
87 .Kot.3          .              .             1.0000   -2.002467E+6      
87 .Mak.1          .              .             1.0000   -147920.0000      
87 .Mak.2          .              .             1.0000   -140524.0000      
87 .Mak.3          .              .             1.0000   -133497.8000      
87 .Kuk.1          .              .             1.0000   -221880.0000      
87 .Kuk.2          .              .             1.0000   -210786.0000      
87 .Kuk.3          .              .             1.0000   -200246.7000      
87 .Kok.1          .              .             1.0000   -147920.0000      
87 .Kok.2          .              .             1.0000   -140524.0000      
87 .Kok.3          .              .             1.0000   -133497.8000      
88 .Mat.1          .              .             1.0000   -756900.0000      
88 .Mat.2          .              .             1.0000   -719055.0000      
88 .Mat.3          .              .             1.0000   -683102.2500      
88 .Kut.1          .              .             1.0000   -378450.0000      
88 .Kut.2          .              .             1.0000   -359527.5000      
88 .Kut.3          .              .             1.0000   -341551.1250      
88 .Kot.1          .              .             1.0000   -2.270700E+6      
88 .Kot.2          .              .             1.0000   -2.157165E+6      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/19/17 02:05:06 Page 141
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 437


     VAR r  1 if we buy n boats of timber i, 0 otherwise

                 LOWER          LEVEL          UPPER         MARGINAL

88 .Kot.3          .              .             1.0000   -2.049307E+6      
88 .Mak.1          .              .             1.0000   -151380.0000      
88 .Mak.2          .              .             1.0000   -143811.0000      
88 .Mak.3          .              .             1.0000   -136620.4500      
88 .Kuk.1          .              .             1.0000   -227070.0000      
88 .Kuk.2          .              .             1.0000   -215716.5000      
88 .Kuk.3          .              .             1.0000   -204930.6750      
88 .Kok.1          .              .             1.0000   -151380.0000      
88 .Kok.2          .              .             1.0000   -143811.0000      
88 .Kok.3          .              .             1.0000   -136620.4500      
89 .Mat.1          .              .             1.0000   -774400.0000      
89 .Mat.2          .              .             1.0000   -735680.0000      
89 .Mat.3          .              .             1.0000   -698896.0000      
89 .Kut.1          .              .             1.0000   -387200.0000      
89 .Kut.2          .              .             1.0000   -367840.0000      
89 .Kut.3          .              .             1.0000   -349448.0000      
89 .Kot.1          .              .             1.0000   -2.323200E+6      
89 .Kot.2          .              .             1.0000   -2.207040E+6      
89 .Kot.3          .              .             1.0000   -2.096688E+6      
89 .Mak.1          .              .             1.0000   -154880.0000      
89 .Mak.2          .              .             1.0000   -147136.0000      
89 .Mak.3          .              .             1.0000   -139779.2000      
89 .Kuk.1          .              .             1.0000   -232320.0000      
89 .Kuk.2          .              .             1.0000   -220704.0000      
89 .Kuk.3          .              .             1.0000   -209668.8000      
89 .Kok.1          .              .             1.0000   -154880.0000      
89 .Kok.2          .              .             1.0000   -147136.0000      
89 .Kok.3          .              .             1.0000   -139779.2000      
90 .Mat.1          .              .             1.0000   -792100.0000      
90 .Mat.2          .              .             1.0000   -752495.0000      
90 .Mat.3          .              .             1.0000   -714870.2500      
90 .Kut.1          .              .             1.0000   -396050.0000      
90 .Kut.2          .              .             1.0000   -376247.5000      
90 .Kut.3          .              .             1.0000   -357435.1250      
90 .Kot.1          .              .             1.0000   -2.376300E+6      
90 .Kot.2          .              .             1.0000   -2.257485E+6      
90 .Kot.3          .              .             1.0000   -2.144611E+6      
90 .Mak.1          .              .             1.0000   -158420.0000      
90 .Mak.2          .              .             1.0000   -150499.0000      
90 .Mak.3          .              .             1.0000   -142974.0500      
90 .Kuk.1          .              .             1.0000   -237630.0000      
90 .Kuk.2          .              .             1.0000   -225748.5000      
90 .Kuk.3          .              .             1.0000   -214461.0750      
90 .Kok.1          .              .             1.0000   -158420.0000      
90 .Kok.2          .              .             1.0000   -150499.0000      
90 .Kok.3          .              .             1.0000   -142974.0500      
91 .Mat.1          .              .             1.0000   -810000.0000      
91 .Mat.2          .              .             1.0000   -769500.0000      
91 .Mat.3          .              .             1.0000   -731025.0000      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/19/17 02:05:06 Page 142
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 437


     VAR r  1 if we buy n boats of timber i, 0 otherwise

                 LOWER          LEVEL          UPPER         MARGINAL

91 .Kut.1          .              .             1.0000   -405000.0000      
91 .Kut.2          .              .             1.0000   -384750.0000      
91 .Kut.3          .              .             1.0000   -365512.5000      
91 .Kot.1          .              .             1.0000   -2.430000E+6      
91 .Kot.2          .              .             1.0000   -2.308500E+6      
91 .Kot.3          .              .             1.0000   -2.193075E+6      
91 .Mak.1          .              .             1.0000   -162000.0000      
91 .Mak.2          .              .             1.0000   -153900.0000      
91 .Mak.3          .              .             1.0000   -146205.0000      
91 .Kuk.1          .              .             1.0000   -243000.0000      
91 .Kuk.2          .              .             1.0000   -230850.0000      
91 .Kuk.3          .              .             1.0000   -219307.5000      
91 .Kok.1          .              .             1.0000   -162000.0000      
91 .Kok.2          .              .             1.0000   -153900.0000      
91 .Kok.3          .              .             1.0000   -146205.0000      
92 .Mat.1          .              .             1.0000   -828100.0000      
92 .Mat.2          .              .             1.0000   -786695.0000      
92 .Mat.3          .              .             1.0000   -747360.2500      
92 .Kut.1          .              .             1.0000   -414050.0000      
92 .Kut.2          .              .             1.0000   -393347.5000      
92 .Kut.3          .              .             1.0000   -373680.1250      
92 .Kot.1          .              .             1.0000   -2.484300E+6      
92 .Kot.2          .              .             1.0000   -2.360085E+6      
92 .Kot.3          .              .             1.0000   -2.242081E+6      
92 .Mak.1          .              .             1.0000   -165620.0000      
92 .Mak.2          .              .             1.0000   -157339.0000      
92 .Mak.3          .              .             1.0000   -149472.0500      
92 .Kuk.1          .              .             1.0000   -248430.0000      
92 .Kuk.2          .              .             1.0000   -236008.5000      
92 .Kuk.3          .              .             1.0000   -224208.0750      
92 .Kok.1          .              .             1.0000   -165620.0000      
92 .Kok.2          .              .             1.0000   -157339.0000      
92 .Kok.3          .              .             1.0000   -149472.0500      
93 .Mat.1          .              .             1.0000   -846400.0000      
93 .Mat.2          .              .             1.0000   -804080.0000      
93 .Mat.3          .              .             1.0000   -763876.0000      
93 .Kut.1          .              .             1.0000   -423200.0000      
93 .Kut.2          .              .             1.0000   -402040.0000      
93 .Kut.3          .              .             1.0000   -381938.0000      
93 .Kot.1          .              .             1.0000   -2.539200E+6      
93 .Kot.2          .              .             1.0000   -2.412240E+6      
93 .Kot.3          .              .             1.0000   -2.291628E+6      
93 .Mak.1          .              .             1.0000   -169280.0000      
93 .Mak.2          .              .             1.0000   -160816.0000      
93 .Mak.3          .              .             1.0000   -152775.2000      
93 .Kuk.1          .              .             1.0000   -253920.0000      
93 .Kuk.2          .              .             1.0000   -241224.0000      
93 .Kuk.3          .              .             1.0000   -229162.8000      
93 .Kok.1          .              .             1.0000   -169280.0000      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/19/17 02:05:06 Page 143
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 437


     VAR r  1 if we buy n boats of timber i, 0 otherwise

                 LOWER          LEVEL          UPPER         MARGINAL

93 .Kok.2          .              .             1.0000   -160816.0000      
93 .Kok.3          .              .             1.0000   -152775.2000      
94 .Mat.1          .              .             1.0000   -864900.0000      
94 .Mat.2          .              .             1.0000   -821655.0000      
94 .Mat.3          .              .             1.0000   -780572.2500      
94 .Kut.1          .              .             1.0000   -432450.0000      
94 .Kut.2          .              .             1.0000   -410827.5000      
94 .Kut.3          .              .             1.0000   -390286.1250      
94 .Kot.1          .              .             1.0000   -2.594700E+6      
94 .Kot.2          .              .             1.0000   -2.464965E+6      
94 .Kot.3          .              .             1.0000   -2.341717E+6      
94 .Mak.1          .              .             1.0000   -172980.0000      
94 .Mak.2          .              .             1.0000   -164331.0000      
94 .Mak.3          .              .             1.0000   -156114.4500      
94 .Kuk.1          .              .             1.0000   -259470.0000      
94 .Kuk.2          .              .             1.0000   -246496.5000      
94 .Kuk.3          .              .             1.0000   -234171.6750      
94 .Kok.1          .              .             1.0000   -172980.0000      
94 .Kok.2          .              .             1.0000   -164331.0000      
94 .Kok.3          .              .             1.0000   -156114.4500      
95 .Mat.1          .              .             1.0000   -883600.0000      
95 .Mat.2          .              .             1.0000   -839420.0000      
95 .Mat.3          .              .             1.0000   -797449.0000      
95 .Kut.1          .              .             1.0000   -441800.0000      
95 .Kut.2          .              .             1.0000   -419710.0000      
95 .Kut.3          .              .             1.0000   -398724.5000      
95 .Kot.1          .              .             1.0000   -2.650800E+6      
95 .Kot.2          .              .             1.0000   -2.518260E+6      
95 .Kot.3          .              .             1.0000   -2.392347E+6      
95 .Mak.1          .              .             1.0000   -176720.0000      
95 .Mak.2          .              .             1.0000   -167884.0000      
95 .Mak.3          .              .             1.0000   -159489.8000      
95 .Kuk.1          .              .             1.0000   -265080.0000      
95 .Kuk.2          .              .             1.0000   -251826.0000      
95 .Kuk.3          .              .             1.0000   -239234.7000      
95 .Kok.1          .              .             1.0000   -176720.0000      
95 .Kok.2          .              .             1.0000   -167884.0000      
95 .Kok.3          .              .             1.0000   -159489.8000      
96 .Mat.1          .              .             1.0000   -902500.0000      
96 .Mat.2          .              .             1.0000   -857375.0000      
96 .Mat.3          .              .             1.0000   -814506.2500      
96 .Kut.1          .              .             1.0000   -451250.0000      
96 .Kut.2          .              .             1.0000   -428687.5000      
96 .Kut.3          .              .             1.0000   -407253.1250      
96 .Kot.1          .              .             1.0000   -2.707500E+6      
96 .Kot.2          .              .             1.0000   -2.572125E+6      
96 .Kot.3          .              .             1.0000   -2.443519E+6      
96 .Mak.1          .              .             1.0000   -180500.0000      
96 .Mak.2          .              .             1.0000   -171475.0000      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/19/17 02:05:06 Page 144
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 437


     VAR r  1 if we buy n boats of timber i, 0 otherwise

                 LOWER          LEVEL          UPPER         MARGINAL

96 .Mak.3          .              .             1.0000   -162901.2500      
96 .Kuk.1          .              .             1.0000   -270750.0000      
96 .Kuk.2          .              .             1.0000   -257212.5000      
96 .Kuk.3          .              .             1.0000   -244351.8750      
96 .Kok.1          .              .             1.0000   -180500.0000      
96 .Kok.2          .              .             1.0000   -171475.0000      
96 .Kok.3          .              .             1.0000   -162901.2500      
97 .Mat.1          .              .             1.0000   -921600.0000      
97 .Mat.2          .              .             1.0000   -875520.0000      
97 .Mat.3          .              .             1.0000   -831744.0000      
97 .Kut.1          .              .             1.0000   -460800.0000      
97 .Kut.2          .              .             1.0000   -437760.0000      
97 .Kut.3          .              .             1.0000   -415872.0000      
97 .Kot.1          .              .             1.0000   -2.764800E+6      
97 .Kot.2          .              .             1.0000   -2.626560E+6      
97 .Kot.3          .              .             1.0000   -2.495232E+6      
97 .Mak.1          .              .             1.0000   -184320.0000      
97 .Mak.2          .              .             1.0000   -175104.0000      
97 .Mak.3          .              .             1.0000   -166348.8000      
97 .Kuk.1          .              .             1.0000   -276480.0000      
97 .Kuk.2          .              .             1.0000   -262656.0000      
97 .Kuk.3          .              .             1.0000   -249523.2000      
97 .Kok.1          .              .             1.0000   -184320.0000      
97 .Kok.2          .              .             1.0000   -175104.0000      
97 .Kok.3          .              .             1.0000   -166348.8000      
98 .Mat.1          .              .             1.0000   -940900.0000      
98 .Mat.2          .              .             1.0000   -893855.0000      
98 .Mat.3          .              .             1.0000   -849162.2500      
98 .Kut.1          .              .             1.0000   -470450.0000      
98 .Kut.2          .              .             1.0000   -446927.5000      
98 .Kut.3          .              .             1.0000   -424581.1250      
98 .Kot.1          .              .             1.0000   -2.822700E+6      
98 .Kot.2          .              .             1.0000   -2.681565E+6      
98 .Kot.3          .              .             1.0000   -2.547487E+6      
98 .Mak.1          .              .             1.0000   -188180.0000      
98 .Mak.2          .              .             1.0000   -178771.0000      
98 .Mak.3          .              .             1.0000   -169832.4500      
98 .Kuk.1          .              .             1.0000   -282270.0000      
98 .Kuk.2          .              .             1.0000   -268156.5000      
98 .Kuk.3          .              .             1.0000   -254748.6750      
98 .Kok.1          .              .             1.0000   -188180.0000      
98 .Kok.2          .              .             1.0000   -178771.0000      
98 .Kok.3          .              .             1.0000   -169832.4500      
99 .Mat.1          .              .             1.0000   -960400.0000      
99 .Mat.2          .              .             1.0000   -912380.0000      
99 .Mat.3          .              .             1.0000   -866761.0000      
99 .Kut.1          .              .             1.0000   -480200.0000      
99 .Kut.2          .              .             1.0000   -456190.0000      
99 .Kut.3          .              .             1.0000   -433380.5000      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/19/17 02:05:06 Page 145
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 437


     VAR r  1 if we buy n boats of timber i, 0 otherwise

                 LOWER          LEVEL          UPPER         MARGINAL

99 .Kot.1          .              .             1.0000   -2.881200E+6      
99 .Kot.2          .              .             1.0000   -2.737140E+6      
99 .Kot.3          .              .             1.0000   -2.600283E+6      
99 .Mak.1          .              .             1.0000   -192080.0000      
99 .Mak.2          .              .             1.0000   -182476.0000      
99 .Mak.3          .              .             1.0000   -173352.2000      
99 .Kuk.1          .              .             1.0000   -288120.0000      
99 .Kuk.2          .              .             1.0000   -273714.0000      
99 .Kuk.3          .              .             1.0000   -260028.3000      
99 .Kok.1          .              .             1.0000   -192080.0000      
99 .Kok.2          .              .             1.0000   -182476.0000      
99 .Kok.3          .              .             1.0000   -173352.2000      
100.Mat.1          .              .             1.0000   -980100.0000      
100.Mat.2          .              .             1.0000   -931095.0000      
100.Mat.3          .              .             1.0000   -884540.2500      
100.Kut.1          .              .             1.0000   -490050.0000      
100.Kut.2          .              .             1.0000   -465547.5000      
100.Kut.3          .              .             1.0000   -442270.1250      
100.Kot.1          .              .             1.0000   -2.940300E+6      
100.Kot.2          .              .             1.0000   -2.793285E+6      
100.Kot.3          .              .             1.0000   -2.653621E+6      
100.Mak.1          .              .             1.0000   -196020.0000      
100.Mak.2          .              .             1.0000   -186219.0000      
100.Mak.3          .              .             1.0000   -176908.0500      
100.Kuk.1          .              .             1.0000   -294030.0000      
100.Kuk.2          .              .             1.0000   -279328.5000      
100.Kuk.3          .              .             1.0000   -265362.0750      
100.Kok.1          .              .             1.0000   -196020.0000      
100.Kok.2          .              .             1.0000   -186219.0000      
100.Kok.3          .              .             1.0000   -176908.0500      
101.Mat.1          .              .             1.0000   -1.000000E+6      
101.Mat.2          .              .             1.0000   -950000.0000      
101.Mat.3          .              .             1.0000   -902500.0000      
101.Kut.1          .              .             1.0000   -500000.0000      
101.Kut.2          .              .             1.0000   -475000.0000      
101.Kut.3          .              .             1.0000   -451250.0000      
101.Kot.1          .              .             1.0000   -3.000000E+6      
101.Kot.2          .              .             1.0000   -2.850000E+6      
101.Kot.3          .              .             1.0000   -2.707500E+6      
101.Mak.1          .              .             1.0000   -200000.0000      
101.Mak.2          .              .             1.0000   -190000.0000      
101.Mak.3          .              .             1.0000   -180500.0000      
101.Kuk.1          .              .             1.0000   -300000.0000      
101.Kuk.2          .              .             1.0000   -285000.0000      
101.Kuk.3          .              .             1.0000   -270750.0000      
101.Kok.1          .              .             1.0000   -200000.0000      
101.Kok.2          .              .             1.0000   -190000.0000      
101.Kok.3          .              .             1.0000   -180500.0000      
102.Mat.1          .              .             1.0000   -1.020100E+6      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/19/17 02:05:06 Page 146
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 437


     VAR r  1 if we buy n boats of timber i, 0 otherwise

                 LOWER          LEVEL          UPPER         MARGINAL

102.Mat.2          .              .             1.0000   -969095.0000      
102.Mat.3          .              .             1.0000   -920640.2500      
102.Kut.1          .              .             1.0000   -510050.0000      
102.Kut.2          .              .             1.0000   -484547.5000      
102.Kut.3          .              .             1.0000   -460320.1250      
102.Kot.1          .              .             1.0000   -3.060300E+6      
102.Kot.2          .              .             1.0000   -2.907285E+6      
102.Kot.3          .              .             1.0000   -2.761921E+6      
102.Mak.1          .              .             1.0000   -204020.0000      
102.Mak.2          .              .             1.0000   -193819.0000      
102.Mak.3          .              .             1.0000   -184128.0500      
102.Kuk.1          .              .             1.0000   -306030.0000      
102.Kuk.2          .              .             1.0000   -290728.5000      
102.Kuk.3          .              .             1.0000   -276192.0750      
102.Kok.1          .              .             1.0000   -204020.0000      
102.Kok.2          .              .             1.0000   -193819.0000      
102.Kok.3          .              .             1.0000   -184128.0500      
103.Mat.1          .              .             1.0000   -1.040400E+6      
103.Mat.2          .              .             1.0000   -988380.0000      
103.Mat.3          .              .             1.0000   -938961.0000      
103.Kut.1          .              .             1.0000   -520200.0000      
103.Kut.2          .              .             1.0000   -494190.0000      
103.Kut.3          .              .             1.0000   -469480.5000      
103.Kot.1          .              .             1.0000   -3.121200E+6      
103.Kot.2          .              .             1.0000   -2.965140E+6      
103.Kot.3          .              .             1.0000   -2.816883E+6      
103.Mak.1          .              .             1.0000   -208080.0000      
103.Mak.2          .              .             1.0000   -197676.0000      
103.Mak.3          .              .             1.0000   -187792.2000      
103.Kuk.1          .              .             1.0000   -312120.0000      
103.Kuk.2          .              .             1.0000   -296514.0000      
103.Kuk.3          .              .             1.0000   -281688.3000      
103.Kok.1          .              .             1.0000   -208080.0000      
103.Kok.2          .              .             1.0000   -197676.0000      
103.Kok.3          .              .             1.0000   -187792.2000      
104.Mat.1          .              .             1.0000   -1.060900E+6      
104.Mat.2          .              .             1.0000   -1.007855E+6      
104.Mat.3          .              .             1.0000   -957462.2500      
104.Kut.1          .              .             1.0000   -530450.0000      
104.Kut.2          .              .             1.0000   -503927.5000      
104.Kut.3          .              .             1.0000   -478731.1250      
104.Kot.1          .              .             1.0000   -3.182700E+6      
104.Kot.2          .              .             1.0000   -3.023565E+6      
104.Kot.3          .              .             1.0000   -2.872387E+6      
104.Mak.1          .              .             1.0000   -212180.0000      
104.Mak.2          .              .             1.0000   -201571.0000      
104.Mak.3          .              .             1.0000   -191492.4500      
104.Kuk.1          .              .             1.0000   -318270.0000      
104.Kuk.2          .              .             1.0000   -302356.5000      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/19/17 02:05:06 Page 147
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 437


     VAR r  1 if we buy n boats of timber i, 0 otherwise

                 LOWER          LEVEL          UPPER         MARGINAL

104.Kuk.3          .              .             1.0000   -287238.6750      
104.Kok.1          .              .             1.0000   -212180.0000      
104.Kok.2          .              .             1.0000   -201571.0000      
104.Kok.3          .              .             1.0000   -191492.4500      
105.Mat.1          .              .             1.0000   -1.081600E+6      
105.Mat.2          .              .             1.0000   -1.027520E+6      
105.Mat.3          .              .             1.0000   -976144.0000      
105.Kut.1          .              .             1.0000   -540800.0000      
105.Kut.2          .              .             1.0000   -513760.0000      
105.Kut.3          .              .             1.0000   -488072.0000      
105.Kot.1          .              .             1.0000   -3.244800E+6      
105.Kot.2          .              .             1.0000   -3.082560E+6      
105.Kot.3          .              .             1.0000   -2.928432E+6      
105.Mak.1          .              .             1.0000   -216320.0000      
105.Mak.2          .              .             1.0000   -205504.0000      
105.Mak.3          .              .             1.0000   -195228.8000      
105.Kuk.1          .              .             1.0000   -324480.0000      
105.Kuk.2          .              .             1.0000   -308256.0000      
105.Kuk.3          .              .             1.0000   -292843.2000      
105.Kok.1          .              .             1.0000   -216320.0000      
105.Kok.2          .              .             1.0000   -205504.0000      
105.Kok.3          .              .             1.0000   -195228.8000      
106.Mat.1          .              .             1.0000   -1.102500E+6      
106.Mat.2          .              .             1.0000   -1.047375E+6      
106.Mat.3          .              .             1.0000   -995006.2500      
106.Kut.1          .              .             1.0000   -551250.0000      
106.Kut.2          .              .             1.0000   -523687.5000      
106.Kut.3          .              .             1.0000   -497503.1250      
106.Kot.1          .              .             1.0000   -3.307500E+6      
106.Kot.2          .              .             1.0000   -3.142125E+6      
106.Kot.3          .              .             1.0000   -2.985019E+6      
106.Mak.1          .              .             1.0000   -220500.0000      
106.Mak.2          .              .             1.0000   -209475.0000      
106.Mak.3          .              .             1.0000   -199001.2500      
106.Kuk.1          .              .             1.0000   -330750.0000      
106.Kuk.2          .              .             1.0000   -314212.5000      
106.Kuk.3          .              .             1.0000   -298501.8750      
106.Kok.1          .              .             1.0000   -220500.0000      
106.Kok.2          .              .             1.0000   -209475.0000      
106.Kok.3          .              .             1.0000   -199001.2500      
107.Mat.1          .              .             1.0000   -1.123600E+6      
107.Mat.2          .              .             1.0000   -1.067420E+6      
107.Mat.3          .              .             1.0000   -1.014049E+6      
107.Kut.1          .              .             1.0000   -561800.0000      
107.Kut.2          .              .             1.0000   -533710.0000      
107.Kut.3          .              .             1.0000   -507024.5000      
107.Kot.1          .              .             1.0000   -3.370800E+6      
107.Kot.2          .              .             1.0000   -3.202260E+6      
107.Kot.3          .              .             1.0000   -3.042147E+6      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/19/17 02:05:06 Page 148
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 437


     VAR r  1 if we buy n boats of timber i, 0 otherwise

                 LOWER          LEVEL          UPPER         MARGINAL

107.Mak.1          .              .             1.0000   -224720.0000      
107.Mak.2          .              .             1.0000   -213484.0000      
107.Mak.3          .              .             1.0000   -202809.8000      
107.Kuk.1          .              .             1.0000   -337080.0000      
107.Kuk.2          .              .             1.0000   -320226.0000      
107.Kuk.3          .              .             1.0000   -304214.7000      
107.Kok.1          .              .             1.0000   -224720.0000      
107.Kok.2          .              .             1.0000   -213484.0000      
107.Kok.3          .              .             1.0000   -202809.8000      

---- VAR u  1 if we use n boats for product j shiping to region k, 0 otherwise

                    LOWER          LEVEL          UPPER         MARGINAL

1 .Mas .EU.1          .              .             1.0000         EPS         
1 .Mas .EU.2          .              .             1.0000         EPS         
1 .Mas .EU.3          .              .             1.0000         EPS         
1 .Mas .IE.1          .             1.0000         1.0000         EPS         
1 .Mas .IE.2          .             1.0000         1.0000         EPS         
1 .Mas .IE.3          .             1.0000         1.0000         EPS         
1 .Mas .PA.1          .              .             1.0000         EPS         
1 .Mas .PA.2          .              .             1.0000         EPS         
1 .Mas .PA.3          .              .             1.0000         EPS         
1 .Mas .KI.1          .              .             1.0000         EPS         
1 .Mas .KI.2          .              .             1.0000         EPS         
1 .Mas .KI.3          .              .             1.0000         EPS         
1 .Kus .EU.1          .             1.0000         1.0000         EPS         
1 .Kus .EU.2          .             1.0000         1.0000         EPS         
1 .Kus .EU.3          .             1.0000         1.0000         EPS         
1 .Kus .IE.1          .             1.0000         1.0000         EPS         
1 .Kus .IE.2          .             1.0000         1.0000         EPS         
1 .Kus .IE.3          .             1.0000         1.0000         EPS         
1 .Kus .PA.1          .             1.0000         1.0000         EPS         
1 .Kus .PA.2          .             1.0000         1.0000         EPS         
1 .Kus .PA.3          .             1.0000         1.0000         EPS         
1 .Kus .KI.1          .             1.0000         1.0000         EPS         
1 .Kus .KI.2          .             1.0000         1.0000         EPS         
1 .Kus .KI.3          .             1.0000         1.0000         EPS         
1 .Kos .EU.1          .             1.0000         1.0000         EPS         
1 .Kos .EU.2          .             1.0000         1.0000         EPS         
1 .Kos .EU.3          .             1.0000         1.0000         EPS         
1 .Kos .IE.1          .             1.0000         1.0000         EPS         
1 .Kos .IE.2          .             1.0000         1.0000         EPS         
1 .Kos .IE.3          .             1.0000         1.0000         EPS         
1 .Kos .PA.1          .             1.0000         1.0000         EPS         
1 .Kos .PA.2          .             1.0000         1.0000         EPS         
1 .Kos .PA.3          .             1.0000         1.0000         EPS         
1 .Kos .KI.1          .             1.0000         1.0000         EPS         
1 .Kos .KI.2          .              .             1.0000         EPS         
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/19/17 02:05:06 Page 149
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 437


     VAR u  1 if we use n boats for product j shiping to region k, 0 otherwise

                    LOWER          LEVEL          UPPER         MARGINAL

1 .Kos .KI.3          .              .             1.0000         EPS         
1 .Kuv .EU.1          .              .             1.0000         EPS         
1 .Kuv .EU.2          .              .             1.0000         EPS         
1 .Kuv .EU.3          .              .             1.0000         EPS         
1 .Kuv .IE.1          .             1.0000         1.0000         EPS         
1 .Kuv .IE.2          .             1.0000         1.0000         EPS         
1 .Kuv .IE.3          .             1.0000         1.0000         EPS         
1 .Kuv .PA.1          .             1.0000         1.0000         EPS         
1 .Kuv .PA.2          .             1.0000         1.0000         EPS         
1 .Kuv .PA.3          .             1.0000         1.0000         EPS         
1 .Kuv .KI.1          .             1.0000         1.0000         EPS         
1 .Kuv .KI.2          .             1.0000         1.0000         EPS         
1 .Kuv .KI.3          .             1.0000         1.0000         EPS         
1 .Kov .EU.1          .              .             1.0000         EPS         
1 .Kov .EU.2          .              .             1.0000         EPS         
1 .Kov .EU.3          .              .             1.0000         EPS         
1 .Kov .IE.1          .             1.0000         1.0000         EPS         
1 .Kov .IE.2          .             1.0000         1.0000         EPS         
1 .Kov .IE.3          .             1.0000         1.0000         EPS         
1 .Kov .PA.1          .             1.0000         1.0000         EPS         
1 .Kov .PA.2          .             1.0000         1.0000         EPS         
1 .Kov .PA.3          .             1.0000         1.0000         EPS         
1 .Kov .KI.1          .             1.0000         1.0000         EPS         
1 .Kov .KI.2          .             1.0000         1.0000         EPS         
1 .Kov .KI.3          .             1.0000         1.0000         EPS         
1 .Hsel.EU.1          .             1.0000         1.0000         EPS         
1 .Hsel.EU.2          .             1.0000         1.0000         EPS         
1 .Hsel.EU.3          .             1.0000         1.0000         EPS         
1 .Hsel.IE.1          .              .             1.0000         EPS         
1 .Hsel.IE.2          .              .             1.0000         EPS         
1 .Hsel.IE.3          .             1.0000         1.0000         EPS         
1 .Hsel.PA.1          .             1.0000         1.0000         EPS         
1 .Hsel.PA.2          .             1.0000         1.0000         EPS         
1 .Hsel.PA.3          .             1.0000         1.0000         EPS         
1 .Hsel.KI.1          .              .             1.0000         EPS         
1 .Hsel.KI.2          .              .             1.0000         EPS         
1 .Hsel.KI.3          .              .             1.0000         EPS         
1 .Lsel.EU.1          .              .             1.0000         EPS         
1 .Lsel.EU.2          .              .             1.0000         EPS         
1 .Lsel.EU.3          .             1.0000         1.0000         EPS         
1 .Lsel.IE.1          .              .             1.0000         EPS         
1 .Lsel.IE.2          .              .             1.0000         EPS         
1 .Lsel.IE.3          .              .             1.0000         EPS         
1 .Lsel.PA.1          .             1.0000         1.0000         EPS         
1 .Lsel.PA.2          .             1.0000         1.0000         EPS         
1 .Lsel.PA.3          .             1.0000         1.0000         EPS         
1 .Lsel.KI.1          .              .             1.0000         EPS         
1 .Lsel.KI.2          .              .             1.0000         EPS         
1 .Lsel.KI.3          .             1.0000         1.0000         EPS         
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/19/17 02:05:06 Page 150
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 437


     VAR u  1 if we use n boats for product j shiping to region k, 0 otherwise

                    LOWER          LEVEL          UPPER         MARGINAL

1 .Pap .EU.1          .              .             1.0000         EPS         
1 .Pap .EU.2          .              .             1.0000         EPS         
1 .Pap .EU.3          .              .             1.0000         EPS         
1 .Pap .IE.1          .              .             1.0000         EPS         
1 .Pap .IE.2          .              .             1.0000         EPS         
1 .Pap .IE.3          .              .             1.0000         EPS         
1 .Pap .PA.1          .             1.0000         1.0000         EPS         
1 .Pap .PA.2          .              .             1.0000         EPS         
1 .Pap .PA.3          .              .             1.0000         EPS         
1 .Pap .KI.1          .              .             1.0000         EPS         
1 .Pap .KI.2          .              .             1.0000         EPS         
1 .Pap .KI.3          .              .             1.0000         EPS         
2 .Mas .EU.1          .              .             1.0000     15600.0000      
2 .Mas .EU.2          .              .             1.0000     14823.7624      
2 .Mas .EU.3          .              .             1.0000     14086.1131      
2 .Mas .IE.1          .              .             1.0000     12000.0000      
2 .Mas .IE.2          .              .             1.0000     11409.4059      
2 .Mas .IE.3          .              .             1.0000     10847.7828      
2 .Mas .PA.1          .             1.0000         1.0000     12800.0000      
2 .Mas .PA.2          .             1.0000         1.0000     12171.2871      
2 .Mas .PA.3          .             1.0000         1.0000     11573.3394      
2 .Mas .KI.1          .             1.0000         1.0000     13500.0000      
2 .Mas .KI.2          .             1.0000         1.0000     12839.1089      
2 .Mas .KI.3          .             1.0000         1.0000     12210.4242      
2 .Kus .EU.1          .              .             1.0000         EPS         
2 .Kus .EU.2          .              .             1.0000         EPS         
2 .Kus .EU.3          .              .             1.0000         EPS         
2 .Kus .IE.1          .              .             1.0000         EPS         
2 .Kus .IE.2          .              .             1.0000         EPS         
2 .Kus .IE.3          .              .             1.0000         EPS         
2 .Kus .PA.1          .              .             1.0000         EPS         
2 .Kus .PA.2          .              .             1.0000         EPS         
2 .Kus .PA.3          .              .             1.0000         EPS         
2 .Kus .KI.1          .              .             1.0000         EPS         
2 .Kus .KI.2          .              .             1.0000         EPS         
2 .Kus .KI.3          .              .             1.0000         EPS         
2 .Kos .EU.1          .              .             1.0000     11600.0000      
2 .Kos .EU.2          .              .             1.0000     11039.6552      
2 .Kos .EU.3          .              .             1.0000     10506.0689      
2 .Kos .IE.1          .              .             1.0000     12000.0000      
2 .Kos .IE.2          .              .             1.0000     11428.0788      
2 .Kos .IE.3          .              .             1.0000     10882.9555      
2 .Kos .PA.1          .              .             1.0000     12800.0000      
2 .Kos .PA.2          .              .             1.0000     12190.8867      
2 .Kos .PA.3          .              .             1.0000     11610.2511      
2 .Kos .KI.1          .              .             1.0000     13500.0000      
2 .Kos .KI.2          .             1.0000         1.0000     12860.0985      
2 .Kos .KI.3          .             1.0000         1.0000     12249.9444      
2 .Kuv .EU.1          .              .             1.0000     43600.0000      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/19/17 02:05:06 Page 151
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 437


     VAR u  1 if we use n boats for product j shiping to region k, 0 otherwise

                    LOWER          LEVEL          UPPER         MARGINAL

2 .Kuv .EU.2          .              .             1.0000     41425.6158      
2 .Kuv .EU.3          .              .             1.0000     39359.5911      
2 .Kuv .IE.1          .              .             1.0000     37000.0000      
2 .Kuv .IE.2          .              .             1.0000     35164.0394      
2 .Kuv .IE.3          .              .             1.0000     33418.9778      
2 .Kuv .PA.1          .              .             1.0000     34800.0000      
2 .Kuv .PA.2          .              .             1.0000     33076.8473      
2 .Kuv .PA.3          .              .             1.0000     31438.7733      
2 .Kuv .KI.1          .              .             1.0000     33500.0000      
2 .Kuv .KI.2          .              .             1.0000     31846.0591      
2 .Kuv .KI.3          .              .             1.0000     30273.4667      
2 .Kov .EU.1          .              .             1.0000     42600.0000      
2 .Kov .EU.2          .              .             1.0000     40477.4510      
2 .Kov .EU.3          .              .             1.0000     38460.5181      
2 .Kov .IE.1          .              .             1.0000     40000.0000      
2 .Kov .IE.2          .              .             1.0000     38018.6275      
2 .Kov .IE.3          .              .             1.0000     36135.0452      
2 .Kov .PA.1          .              .             1.0000     37800.0000      
2 .Kov .PA.2          .              .             1.0000     35932.3529      
2 .Kov .PA.3          .              .             1.0000     34156.5542      
2 .Kov .KI.1          .              .             1.0000     36500.0000      
2 .Kov .KI.2          .              .             1.0000     34702.9412      
2 .Kov .KI.3          .              .             1.0000     32993.8178      
2 .Hsel.EU.1          .              .             1.0000     22800.0000      
2 .Hsel.EU.2          .              .             1.0000     21664.6341      
2 .Hsel.EU.3          .              .             1.0000     20585.6975      
2 .Hsel.IE.1          .              .             1.0000     24600.0000      
2 .Hsel.IE.2          .              .             1.0000     23379.2683      
2 .Hsel.IE.3          .              .             1.0000     22218.8950      
2 .Hsel.PA.1          .              .             1.0000     22500.0000      
2 .Hsel.PA.2          .              .             1.0000     21386.5854      
2 .Hsel.PA.3          .              .             1.0000     20327.9938      
2 .Hsel.KI.1          .              .             1.0000     25400.0000      
2 .Hsel.KI.2          .              .             1.0000     24143.9024      
2 .Hsel.KI.3          .             1.0000         1.0000     22949.5925      
2 .Lsel.EU.1          .              .             1.0000     24700.0000      
2 .Lsel.EU.2          .             1.0000         1.0000     23473.3010      
2 .Lsel.EU.3          .              .             1.0000     22307.2922      
2 .Lsel.IE.1          .              .             1.0000     27800.0000      
2 .Lsel.IE.2          .              .             1.0000     26415.5340      
2 .Lsel.IE.3          .              .             1.0000     25099.8614      
2 .Lsel.PA.1          .              .             1.0000     22500.0000      
2 .Lsel.PA.2          .              .             1.0000     21388.8350      
2 .Lsel.PA.3          .              .             1.0000     20332.1536      
2 .Lsel.KI.1          .             1.0000         1.0000     24300.0000      
2 .Lsel.KI.2          .             1.0000         1.0000     23104.3689      
2 .Lsel.KI.3          .              .             1.0000     21967.0150      
2 .Pap .EU.1          .              .             1.0000     44600.0000      
2 .Pap .EU.2          .              .             1.0000     42382.8502      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/19/17 02:05:06 Page 152
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 437


     VAR u  1 if we use n boats for product j shiping to region k, 0 otherwise

                    LOWER          LEVEL          UPPER         MARGINAL

2 .Pap .EU.3          .              .             1.0000     40275.5026      
2 .Pap .IE.1          .              .             1.0000     46000.0000      
2 .Pap .IE.2          .              .             1.0000     43732.1256      
2 .Pap .IE.3          .              .             1.0000     41575.0066      
2 .Pap .PA.1          .              .             1.0000     41800.0000      
2 .Pap .PA.2          .             1.0000         1.0000     39748.5507      
2 .Pap .PA.3          .             1.0000         1.0000     37796.5079      
2 .Pap .KI.1          .              .             1.0000     46500.0000      
2 .Pap .KI.2          .              .             1.0000     44223.1884      
2 .Pap .KI.3          .              .             1.0000     42056.2599      
3 .Mas .EU.1          .              .             1.0000     30400.0000      
3 .Mas .EU.2          .              .             1.0000     28895.0495      
3 .Mas .EU.3          .              .             1.0000     27464.4525      
3 .Mas .IE.1          .              .             1.0000     22000.0000      
3 .Mas .IE.2          .              .             1.0000     20937.6238      
3 .Mas .IE.3          .              .             1.0000     19926.1313      
3 .Mas .PA.1          .              .             1.0000     23200.0000      
3 .Mas .PA.2          .              .             1.0000     22085.1485      
3 .Mas .PA.3          .              .             1.0000     21023.3575      
3 .Mas .KI.1          .              .             1.0000     24000.0000      
3 .Mas .KI.2          .              .             1.0000     22856.4356      
3 .Mas .KI.3          .              .             1.0000     21766.6969      
3 .Kus .EU.1          .              .             1.0000         EPS         
3 .Kus .EU.2          .              .             1.0000         EPS         
3 .Kus .EU.3          .              .             1.0000         EPS         
3 .Kus .IE.1          .              .             1.0000         EPS         
3 .Kus .IE.2          .              .             1.0000         EPS         
3 .Kus .IE.3          .              .             1.0000         EPS         
3 .Kus .PA.1          .              .             1.0000         EPS         
3 .Kus .PA.2          .              .             1.0000         EPS         
3 .Kus .PA.3          .              .             1.0000         EPS         
3 .Kus .KI.1          .              .             1.0000         EPS         
3 .Kus .KI.2          .              .             1.0000         EPS         
3 .Kus .KI.3          .              .             1.0000         EPS         
3 .Kos .EU.1          .              .             1.0000     20400.0000      
3 .Kos .EU.2          .              .             1.0000     19458.6207      
3 .Kos .EU.3          .              .             1.0000     18559.2755      
3 .Kos .IE.1          .              .             1.0000     20000.0000      
3 .Kos .IE.2          .              .             1.0000     19112.3153      
3 .Kos .IE.3          .              .             1.0000     18261.8222      
3 .Kos .PA.1          .              .             1.0000     21200.0000      
3 .Kos .PA.2          .              .             1.0000     20263.5468      
3 .Kos .PA.3          .              .             1.0000     19366.0044      
3 .Kos .KI.1          .              .             1.0000     22000.0000      
3 .Kos .KI.2          .              .             1.0000     21040.3941      
3 .Kos .KI.3          .              .             1.0000     20119.7777      
3 .Kuv .EU.1          .              .             1.0000     86400.0000      
3 .Kuv .EU.2          .              .             1.0000     82102.4631      
3 .Kuv .EU.3          .              .             1.0000     78018.3644      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/19/17 02:05:06 Page 153
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 437


     VAR u  1 if we use n boats for product j shiping to region k, 0 otherwise

                    LOWER          LEVEL          UPPER         MARGINAL

3 .Kuv .IE.1          .              .             1.0000     72000.0000      
3 .Kuv .IE.2          .              .             1.0000     68456.1576      
3 .Kuv .IE.3          .              .             1.0000     65085.9111      
3 .Kuv .PA.1          .              .             1.0000     67200.0000      
3 .Kuv .PA.2          .              .             1.0000     63907.3892      
3 .Kuv .PA.3          .              .             1.0000     60775.0933      
3 .Kuv .KI.1          .              .             1.0000     64000.0000      
3 .Kuv .KI.2          .              .             1.0000     60884.2365      
3 .Kuv .KI.3          .              .             1.0000     57918.8666      
3 .Kov .EU.1          .              .             1.0000     84400.0000      
3 .Kov .EU.2          .             1.0000         1.0000     80209.8039      
3 .Kov .EU.3          .             1.0000         1.0000     76227.0723      
3 .Kov .IE.1          .              .             1.0000     78000.0000      
3 .Kov .IE.2          .              .             1.0000     74174.5098      
3 .Kov .IE.3          .              .             1.0000     70535.1807      
3 .Kov .PA.1          .              .             1.0000     73200.0000      
3 .Kov .PA.2          .              .             1.0000     69629.4118      
3 .Kov .PA.3          .              .             1.0000     66231.2168      
3 .Kov .KI.1          .              .             1.0000     70000.0000      
3 .Kov .KI.2          .              .             1.0000     66611.7647      
3 .Kov .KI.3          .              .             1.0000     63385.2710      
3 .Hsel.EU.1          .              .             1.0000     45200.0000      
3 .Hsel.EU.2          .              .             1.0000     42958.5366      
3 .Hsel.EU.3          .              .             1.0000     40827.7900      
3 .Hsel.IE.1          .              .             1.0000     48400.0000      
3 .Hsel.IE.2          .             1.0000         1.0000     46017.0732      
3 .Hsel.IE.3          .              .             1.0000     43750.5800      
3 .Hsel.PA.1          .              .             1.0000     44000.0000      
3 .Hsel.PA.2          .              .             1.0000     41846.3415      
3 .Hsel.PA.3          .              .             1.0000     39796.9750      
3 .Hsel.KI.1          .              .             1.0000     49600.0000      
3 .Hsel.KI.2          .              .             1.0000     47175.6098      
3 .Hsel.KI.3          .              .             1.0000     44868.3700      
3 .Lsel.EU.1          .             1.0000         1.0000     48800.0000      
3 .Lsel.EU.2          .              .             1.0000     46393.2039      
3 .Lsel.EU.3          .              .             1.0000     44104.1686      
3 .Lsel.IE.1          .              .             1.0000     55200.0000      
3 .Lsel.IE.2          .              .             1.0000     52462.1359      
3 .Lsel.IE.3          .              .             1.0000     49859.4458      
3 .Lsel.PA.1          .              .             1.0000     44000.0000      
3 .Lsel.PA.2          .              .             1.0000     41855.3398      
3 .Lsel.PA.3          .              .             1.0000     39813.6144      
3 .Lsel.KI.1          .              .             1.0000     47200.0000      
3 .Lsel.KI.2          .              .             1.0000     44917.4757      
3 .Lsel.KI.3          .              .             1.0000     42743.0601      
3 .Pap .EU.1          .              .             1.0000     88400.0000      
3 .Pap .EU.2          .              .             1.0000     84031.4010      
3 .Pap .EU.3          .              .             1.0000     79877.0105      
3 .Pap .IE.1          .             1.0000         1.0000     90000.0000      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/19/17 02:05:06 Page 154
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 437


     VAR u  1 if we use n boats for product j shiping to region k, 0 otherwise

                    LOWER          LEVEL          UPPER         MARGINAL

3 .Pap .IE.2          .              .             1.0000     85628.5024      
3 .Pap .IE.3          .              .             1.0000     81465.0264      
3 .Pap .PA.1          .              .             1.0000     81200.0000      
3 .Pap .PA.2          .              .             1.0000     77294.2029      
3 .Pap .PA.3          .              .             1.0000     73571.0316      
3 .Pap .KI.1          .             1.0000         1.0000     90000.0000      
3 .Pap .KI.2          .              .             1.0000     85692.7536      
3 .Pap .KI.3          .              .             1.0000     81585.0396      
4 .Mas .EU.1          .              .             1.0000     44400.0000      
4 .Mas .EU.2          .              .             1.0000     42213.8614      
4 .Mas .EU.3          .              .             1.0000     40135.0181      
4 .Mas .IE.1          .              .             1.0000     30000.0000      
4 .Mas .IE.2          .              .             1.0000     28584.6535      
4 .Mas .IE.3          .              .             1.0000     27235.0453      
4 .Mas .PA.1          .              .             1.0000     31200.0000      
4 .Mas .PA.2          .              .             1.0000     29741.5842      
4 .Mas .PA.3          .              .             1.0000     28350.0544      
4 .Mas .KI.1          .              .             1.0000     31500.0000      
4 .Mas .KI.2          .              .             1.0000     30051.9802      
4 .Mas .KI.3          .              .             1.0000     28668.8180      
4 .Kus .EU.1          .              .             1.0000         EPS         
4 .Kus .EU.2          .              .             1.0000         EPS         
4 .Kus .EU.3          .              .             1.0000         EPS         
4 .Kus .IE.1          .              .             1.0000         EPS         
4 .Kus .IE.2          .              .             1.0000         EPS         
4 .Kus .IE.3          .              .             1.0000         EPS         
4 .Kus .PA.1          .              .             1.0000         EPS         
4 .Kus .PA.2          .              .             1.0000         EPS         
4 .Kus .PA.3          .              .             1.0000         EPS         
4 .Kus .KI.1          .              .             1.0000         EPS         
4 .Kus .KI.2          .              .             1.0000         EPS         
4 .Kus .KI.3          .              .             1.0000         EPS         
4 .Kos .EU.1          .              .             1.0000     26400.0000      
4 .Kos .EU.2          .              .             1.0000     25256.8966      
4 .Kos .EU.3          .              .             1.0000     24159.6199      
4 .Kos .IE.1          .              .             1.0000     24000.0000      
4 .Kos .IE.2          .              .             1.0000     23052.7094      
4 .Kos .IE.3          .              .             1.0000     22136.5999      
4 .Kos .PA.1          .              .             1.0000     25200.0000      
4 .Kos .PA.2          .              .             1.0000     24217.9803      
4 .Kos .PA.3          .              .             1.0000     23267.2599      
4 .Kos .KI.1          .              .             1.0000     25500.0000      
4 .Kos .KI.2          .              .             1.0000     24540.8867      
4 .Kos .KI.3          .              .             1.0000     23609.4999      
4 .Kuv .EU.1          .              .             1.0000    128400.0000      
4 .Kuv .EU.2          .              .             1.0000    122030.5419      
4 .Kuv .EU.3          .              .             1.0000    115976.3200      
4 .Kuv .IE.1          .              .             1.0000    105000.0000      
4 .Kuv .IE.2          .              .             1.0000     99876.3547      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/19/17 02:05:06 Page 155
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 437


     VAR u  1 if we use n boats for product j shiping to region k, 0 otherwise

                    LOWER          LEVEL          UPPER         MARGINAL

4 .Kuv .IE.3          .              .             1.0000     95000.7999      
4 .Kuv .PA.1          .              .             1.0000     97200.0000      
4 .Kuv .PA.2          .              .             1.0000     92491.6256      
4 .Kuv .PA.3          .              .             1.0000     88008.9599      
4 .Kuv .KI.1          .              .             1.0000     91500.0000      
4 .Kuv .KI.2          .              .             1.0000     87114.5320      
4 .Kuv .KI.3          .              .             1.0000     82936.1999      
4 .Kov .EU.1          .             1.0000         1.0000    125400.0000      
4 .Kov .EU.2          .              .             1.0000    119197.0588      
4 .Kov .EU.3          .              .             1.0000    113299.6626      
4 .Kov .IE.1          .              .             1.0000    114000.0000      
4 .Kov .IE.2          .              .             1.0000    108467.6471      
4 .Kov .IE.3          .              .             1.0000    103200.4066      
4 .Kov .PA.1          .              .             1.0000    106200.0000      
4 .Kov .PA.2          .              .             1.0000    101091.1765      
4 .Kov .PA.3          .              .             1.0000     96223.9879      
4 .Kov .KI.1          .              .             1.0000    100500.0000      
4 .Kov .KI.2          .              .             1.0000     95726.4706      
4 .Kov .KI.3          .              .             1.0000     91174.3599      
4 .Hsel.EU.1          .              .             1.0000     67200.0000      
4 .Hsel.EU.2          .              .             1.0000     63881.7073      
4 .Hsel.EU.3          .              .             1.0000     60726.2775      
4 .Hsel.IE.1          .             1.0000         1.0000     71400.0000      
4 .Hsel.IE.2          .              .             1.0000     67913.4146      
4 .Hsel.IE.3          .              .             1.0000     64595.0550      
4 .Hsel.PA.1          .              .             1.0000     64500.0000      
4 .Hsel.PA.2          .              .             1.0000     61379.2683      
4 .Hsel.PA.3          .              .             1.0000     58406.9438      
4 .Hsel.KI.1          .             1.0000         1.0000     72600.0000      
4 .Hsel.KI.2          .             1.0000         1.0000     69095.1220      
4 .Hsel.KI.3          .              .             1.0000     65756.3325      
4 .Lsel.EU.1          .              .             1.0000     72300.0000      
4 .Lsel.EU.2          .              .             1.0000     68759.7087      
4 .Lsel.EU.3          .              .             1.0000     65390.6294      
4 .Lsel.IE.1          .              .             1.0000     82200.0000      
4 .Lsel.IE.2          .              .             1.0000     78139.8058      
4 .Lsel.IE.3          .              .             1.0000     74278.7529      
4 .Lsel.PA.1          .              .             1.0000     64500.0000      
4 .Lsel.PA.2          .              .             1.0000     61399.5146      
4 .Lsel.PA.3          .              .             1.0000     58444.3824      
4 .Lsel.KI.1          .              .             1.0000     68700.0000      
4 .Lsel.KI.2          .              .             1.0000     65439.3204      
4 .Lsel.KI.3          .              .             1.0000     62328.1353      
4 .Pap .EU.1          .              .             1.0000    131400.0000      
4 .Pap .EU.2          .              .             1.0000    124945.6522      
4 .Pap .EU.3          .              .             1.0000    118804.5237      
4 .Pap .IE.1          .              .             1.0000    132000.0000      
4 .Pap .IE.2          .              .             1.0000    125689.1304      
4 .Pap .IE.3          .              .             1.0000    119670.0593      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/19/17 02:05:06 Page 156
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 437


     VAR u  1 if we use n boats for product j shiping to region k, 0 otherwise

                    LOWER          LEVEL          UPPER         MARGINAL

4 .Pap .PA.1          .              .             1.0000    118200.0000      
4 .Pap .PA.2          .              .             1.0000    112636.9565      
4 .Pap .PA.3          .              .             1.0000    107323.5712      
4 .Pap .KI.1          .              .             1.0000    130500.0000      
4 .Pap .KI.2          .             1.0000         1.0000    124408.6957      
4 .Pap .KI.3          .             1.0000         1.0000    118586.3390      
5 .Mas .EU.1          .              .             1.0000     57600.0000      
5 .Mas .EU.2          .              .             1.0000     54780.1980      
5 .Mas .EU.3          .             1.0000         1.0000     52097.8100      
5 .Mas .IE.1          .              .             1.0000     36000.0000      
5 .Mas .IE.2          .              .             1.0000     34350.4950      
5 .Mas .IE.3          .              .             1.0000     32774.5250      
5 .Mas .PA.1          .              .             1.0000     36800.0000      
5 .Mas .PA.2          .              .             1.0000     35140.5941      
5 .Mas .PA.3          .              .             1.0000     33553.4301      
5 .Mas .KI.1          .              .             1.0000     36000.0000      
5 .Mas .KI.2          .              .             1.0000     34425.7426      
5 .Mas .KI.3          .              .             1.0000     32916.7876      
5 .Kus .EU.1          .              .             1.0000         EPS         
5 .Kus .EU.2          .              .             1.0000         EPS         
5 .Kus .EU.3          .              .             1.0000         EPS         
5 .Kus .IE.1          .              .             1.0000         EPS         
5 .Kus .IE.2          .              .             1.0000         EPS         
5 .Kus .IE.3          .              .             1.0000         EPS         
5 .Kus .PA.1          .              .             1.0000         EPS         
5 .Kus .PA.2          .              .             1.0000         EPS         
5 .Kus .PA.3          .              .             1.0000         EPS         
5 .Kus .KI.1          .              .             1.0000         EPS         
5 .Kus .KI.2          .              .             1.0000         EPS         
5 .Kus .KI.3          .              .             1.0000         EPS         
5 .Kos .EU.1          .              .             1.0000     29600.0000      
5 .Kos .EU.2          .              .             1.0000     28434.4828      
5 .Kos .EU.3          .              .             1.0000     27307.1021      
5 .Kos .IE.1          .              .             1.0000     24000.0000      
5 .Kos .IE.2          .              .             1.0000     23249.2611      
5 .Kos .IE.3          .              .             1.0000     22507.2887      
5 .Kos .PA.1          .              .             1.0000     24800.0000      
5 .Kos .PA.2          .              .             1.0000     24054.1872      
5 .Kos .PA.3          .              .             1.0000     23314.0176      
5 .Kos .KI.1          .              .             1.0000     24000.0000      
5 .Kos .KI.2          .              .             1.0000     23361.5764      
5 .Kos .KI.3          .              .             1.0000     22719.1109      
5 .Kuv .EU.1          .              .             1.0000    169600.0000      
5 .Kuv .EU.2          .              .             1.0000    161209.8522      
5 .Kuv .EU.3          .              .             1.0000    153233.4577      
5 .Kuv .IE.1          .              .             1.0000    136000.0000      
5 .Kuv .IE.2          .              .             1.0000    129424.6305      
5 .Kuv .IE.3          .              .             1.0000    123163.6443      
5 .Kuv .PA.1          .              .             1.0000    124800.0000      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/19/17 02:05:06 Page 157
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 437


     VAR u  1 if we use n boats for product j shiping to region k, 0 otherwise

                    LOWER          LEVEL          UPPER         MARGINAL

5 .Kuv .PA.2          .              .             1.0000    118829.5567      
5 .Kuv .PA.3          .              .             1.0000    113140.3732      
5 .Kuv .KI.1          .              .             1.0000    116000.0000      
5 .Kuv .KI.2          .              .             1.0000    110536.9458      
5 .Kuv .KI.3          .              .             1.0000    105325.4665      
5 .Kov .EU.1          .              .             1.0000    165600.0000      
5 .Kov .EU.2          .              .             1.0000    157439.2157      
5 .Kov .EU.3          .              .             1.0000    149678.2891      
5 .Kov .IE.1          .              .             1.0000    148000.0000      
5 .Kov .IE.2          .              .             1.0000    140898.0392      
5 .Kov .IE.3          .              .             1.0000    134130.7228      
5 .Kov .PA.1          .              .             1.0000    136800.0000      
5 .Kov .PA.2          .              .             1.0000    130317.6471      
5 .Kov .PA.3          .              .             1.0000    124134.8674      
5 .Kov .KI.1          .              .             1.0000    128000.0000      
5 .Kov .KI.2          .              .             1.0000    122047.0588      
5 .Kov .KI.3          .              .             1.0000    116361.0842      
5 .Hsel.EU.1          .              .             1.0000     88800.0000      
5 .Hsel.EU.2          .              .             1.0000     84434.1463      
5 .Hsel.EU.3          .              .             1.0000     80281.1600      
5 .Hsel.IE.1          .              .             1.0000     93600.0000      
5 .Hsel.IE.2          .              .             1.0000     89068.2927      
5 .Hsel.IE.3          .              .             1.0000     84752.3200      
5 .Hsel.PA.1          .              .             1.0000     84000.0000      
5 .Hsel.PA.2          .              .             1.0000     79985.3659      
5 .Hsel.PA.3          .              .             1.0000     76157.9001      
5 .Hsel.KI.1          .              .             1.0000     94400.0000      
5 .Hsel.KI.2          .              .             1.0000     89902.4390      
5 .Hsel.KI.3          .              .             1.0000     85613.4801      
5 .Lsel.EU.1          .              .             1.0000     95200.0000      
5 .Lsel.EU.2          .              .             1.0000     90572.8155      
5 .Lsel.EU.3          .              .             1.0000     86166.6745      
5 .Lsel.IE.1          .              .             1.0000    108800.0000      
5 .Lsel.IE.2          .              .             1.0000    103448.5437      
5 .Lsel.IE.3          .              .             1.0000     98357.7830      
5 .Lsel.PA.1          .              .             1.0000     84000.0000      
5 .Lsel.PA.2          .              .             1.0000     80021.3592      
5 .Lsel.PA.3          .              .             1.0000     76224.4575      
5 .Lsel.KI.1          .              .             1.0000     88800.0000      
5 .Lsel.KI.2          .              .             1.0000     84669.9029      
5 .Lsel.KI.3          .              .             1.0000     80722.2406      
5 .Pap .EU.1          .             1.0000         1.0000    173600.0000      
5 .Pap .EU.2          .              .             1.0000    165125.6039      
5 .Pap .EU.3          .              .             1.0000    157058.0422      
5 .Pap .IE.1          .              .             1.0000    172000.0000      
5 .Pap .IE.2          .             1.0000         1.0000    163914.0097      
5 .Pap .IE.3          .             1.0000         1.0000    156190.1055      
5 .Pap .PA.1          .              .             1.0000    152800.0000      
5 .Pap .PA.2          .              .             1.0000    145776.8116      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/19/17 02:05:06 Page 158
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 437


     VAR u  1 if we use n boats for product j shiping to region k, 0 otherwise

                    LOWER          LEVEL          UPPER         MARGINAL

5 .Pap .PA.3          .              .             1.0000    139054.1266      
5 .Pap .KI.1          .              .             1.0000    168000.0000      
5 .Pap .KI.2          .              .             1.0000    160371.0145      
5 .Pap .KI.3          .              .             1.0000    153060.1582      
6 .Mas .EU.1          .             1.0000         1.0000     70000.0000      
6 .Mas .EU.2          .             1.0000         1.0000     66594.0594      
6 .Mas .EU.3          .              .             1.0000     63352.8282      
6 .Mas .IE.1          .              .             1.0000     40000.0000      
6 .Mas .IE.2          .              .             1.0000     38235.1485      
6 .Mas .IE.3          .              .             1.0000     36544.5704      
6 .Mas .PA.1          .              .             1.0000     40000.0000      
6 .Mas .PA.2          .              .             1.0000     38282.1782      
6 .Mas .PA.3          .              .             1.0000     36633.4845      
6 .Mas .KI.1          .              .             1.0000     37500.0000      
6 .Mas .KI.2          .              .             1.0000     35977.7228      
6 .Mas .KI.3          .              .             1.0000     34510.6056      
6 .Kus .EU.1          .              .             1.0000         EPS         
6 .Kus .EU.2          .              .             1.0000         EPS         
6 .Kus .EU.3          .              .             1.0000         EPS         
6 .Kus .IE.1          .              .             1.0000         EPS         
6 .Kus .IE.2          .              .             1.0000         EPS         
6 .Kus .IE.3          .              .             1.0000         EPS         
6 .Kus .PA.1          .              .             1.0000         EPS         
6 .Kus .PA.2          .              .             1.0000         EPS         
6 .Kus .PA.3          .              .             1.0000         EPS         
6 .Kus .KI.1          .              .             1.0000         EPS         
6 .Kus .KI.2          .              .             1.0000         EPS         
6 .Kus .KI.3          .              .             1.0000         EPS         
6 .Kos .EU.1          .              .             1.0000     30000.0000      
6 .Kos .EU.2          .              .             1.0000     28991.3793      
6 .Kos .EU.3          .              .             1.0000     28001.7220      
6 .Kos .IE.1          .              .             1.0000     20000.0000      
6 .Kos .IE.2          .              .             1.0000     19701.9704      
6 .Kos .IE.3          .              .             1.0000     19373.8886      
6 .Kos .PA.1          .              .             1.0000     20000.0000      
6 .Kos .PA.2          .              .             1.0000     19772.1675      
6 .Kos .PA.3          .              .             1.0000     19506.2775      
6 .Kos .KI.1          .              .             1.0000     17500.0000      
6 .Kos .KI.2          .              .             1.0000     17502.4631      
6 .Kos .KI.3          .              .             1.0000     17448.6107      
6 .Kuv .EU.1          .             1.0000         1.0000    210000.0000      
6 .Kuv .EU.2          .              .             1.0000    199640.3941      
6 .Kuv .EU.3          .              .             1.0000    189789.7777      
6 .Kuv .IE.1          .              .             1.0000    165000.0000      
6 .Kuv .IE.2          .              .             1.0000    157100.9852      
6 .Kuv .IE.3          .              .             1.0000    149574.4443      
6 .Kuv .PA.1          .              .             1.0000    150000.0000      
6 .Kuv .PA.2          .              .             1.0000    142921.1823      
6 .Kuv .PA.3          .              .             1.0000    136169.3332      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/19/17 02:05:06 Page 159
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 437


     VAR u  1 if we use n boats for product j shiping to region k, 0 otherwise

                    LOWER          LEVEL          UPPER         MARGINAL

6 .Kuv .KI.1          .              .             1.0000    137500.0000      
6 .Kuv .KI.2          .              .             1.0000    131151.4778      
6 .Kuv .KI.3          .              .             1.0000    125086.6664      
6 .Kov .EU.1          .              .             1.0000    205000.0000      
6 .Kov .EU.2          .              .             1.0000    194936.2745      
6 .Kov .EU.3          .              .             1.0000    185362.9517      
6 .Kov .IE.1          .              .             1.0000    180000.0000      
6 .Kov .IE.2          .              .             1.0000    171465.6863      
6 .Kov .IE.3          .              .             1.0000    163326.1294      
6 .Kov .PA.1          .              .             1.0000    165000.0000      
6 .Kov .PA.2          .              .             1.0000    157308.8235      
6 .Kov .PA.3          .              .             1.0000    149963.8552      
6 .Kov .KI.1          .              .             1.0000    152500.0000      
6 .Kov .KI.2          .              .             1.0000    145573.5294      
6 .Kov .KI.3          .              .             1.0000    138945.4441      
6 .Hsel.EU.1          .              .             1.0000    110000.0000      
6 .Hsel.EU.2          .              .             1.0000    104615.8537      
6 .Hsel.EU.3          .              .             1.0000     99492.4375      
6 .Hsel.IE.1          .              .             1.0000    115000.0000      
6 .Hsel.IE.2          .              .             1.0000    109481.7073      
6 .Hsel.IE.3          .              .             1.0000    104222.3751      
6 .Hsel.PA.1          .              .             1.0000    102500.0000      
6 .Hsel.PA.2          .              .             1.0000     97664.6341      
6 .Hsel.PA.3          .              .             1.0000     93049.8438      
6 .Hsel.KI.1          .              .             1.0000    115000.0000      
6 .Hsel.KI.2          .              .             1.0000    109597.5610      
6 .Hsel.KI.3          .              .             1.0000    104439.8126      
6 .Lsel.EU.1          .              .             1.0000    117500.0000      
6 .Lsel.EU.2          .              .             1.0000    111832.5243      
6 .Lsel.EU.3          .              .             1.0000    106432.3039      
6 .Lsel.IE.1          .              .             1.0000    135000.0000      
6 .Lsel.IE.2          .              .             1.0000    128388.3495      
6 .Lsel.IE.3          .              .             1.0000    122096.5360      
6 .Lsel.PA.1          .              .             1.0000    102500.0000      
6 .Lsel.PA.2          .              .             1.0000     97720.8738      
6 .Lsel.PA.3          .              .             1.0000     93153.8399      
6 .Lsel.KI.1          .              .             1.0000    107500.0000      
6 .Lsel.KI.2          .              .             1.0000    102609.2233      
6 .Lsel.KI.3          .              .             1.0000     97925.3759      
6 .Pap .EU.1          .              .             1.0000    215000.0000      
6 .Pap .EU.2          .              .             1.0000    204571.2560      
6 .Pap .EU.3          .              .             1.0000    194637.5659      
6 .Pap .IE.1          .              .             1.0000    210000.0000      
6 .Pap .IE.2          .              .             1.0000    200303.1401      
6 .Pap .IE.3          .              .             1.0000    191025.1648      
6 .Pap .PA.1          .              .             1.0000    185000.0000      
6 .Pap .PA.2          .              .             1.0000    176713.7681      
6 .Pap .PA.3          .              .             1.0000    168762.6978      
6 .Pap .KI.1          .              .             1.0000    202500.0000      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/19/17 02:05:06 Page 160
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 437


     VAR u  1 if we use n boats for product j shiping to region k, 0 otherwise

                    LOWER          LEVEL          UPPER         MARGINAL

6 .Pap .KI.2          .              .             1.0000    193579.7101      
6 .Pap .KI.3          .              .             1.0000    185006.4972      
7 .Mas .EU.1          .              .             1.0000     81600.0000      
7 .Mas .EU.2          .              .             1.0000     77655.4455      
7 .Mas .EU.3          .              .             1.0000     73900.0725      
7 .Mas .IE.1          .              .             1.0000     42000.0000      
7 .Mas .IE.2          .              .             1.0000     40238.6139      
7 .Mas .IE.3          .              .             1.0000     38545.1814      
7 .Mas .PA.1          .              .             1.0000     40800.0000      
7 .Mas .PA.2          .              .             1.0000     39166.3366      
7 .Mas .PA.3          .              .             1.0000     37590.2176      
7 .Mas .KI.1          .              .             1.0000     36000.0000      
7 .Mas .KI.2          .              .             1.0000     34707.9208      
7 .Mas .KI.3          .              .             1.0000     33450.2720      
7 .Kus .EU.1          .              .             1.0000         EPS         
7 .Kus .EU.2          .              .             1.0000         EPS         
7 .Kus .EU.3          .              .             1.0000         EPS         
7 .Kus .IE.1          .              .             1.0000         EPS         
7 .Kus .IE.2          .              .             1.0000         EPS         
7 .Kus .IE.3          .              .             1.0000         EPS         
7 .Kus .PA.1          .              .             1.0000         EPS         
7 .Kus .PA.2          .              .             1.0000         EPS         
7 .Kus .PA.3          .              .             1.0000         EPS         
7 .Kus .KI.1          .              .             1.0000         EPS         
7 .Kus .KI.2          .              .             1.0000         EPS         
7 .Kus .KI.3          .              .             1.0000         EPS         
7 .Kos .EU.1          .              .             1.0000     27600.0000      
7 .Kos .EU.2          .              .             1.0000     26927.5862      
7 .Kos .EU.3          .              .             1.0000     26243.4797      
7 .Kos .IE.1          .              .             1.0000     12000.0000      
7 .Kos .IE.2          .              .             1.0000     12410.8374      
7 .Kos .IE.3          .              .             1.0000     12736.3996      
7 .Kos .PA.1          .              .             1.0000     10800.0000      
7 .Kos .PA.2          .              .             1.0000     11371.9212      
7 .Kos .PA.3          .              .             1.0000     11844.0395      
7 .Kos .KI.1          .              .             1.0000      6000.0000      
7 .Kos .KI.2          .              .             1.0000      6963.5468      
7 .Kos .KI.3          .              .             1.0000      7797.9995      
7 .Kuv .EU.1          .              .             1.0000    249600.0000      
7 .Kuv .EU.2          .              .             1.0000    237322.1675      
7 .Kuv .EU.3          .              .             1.0000    225645.2799      
7 .Kuv .IE.1          .              .             1.0000    192000.0000      
7 .Kuv .IE.2          .              .             1.0000    182905.4187      
7 .Kuv .IE.3          .              .             1.0000    174233.1998      
7 .Kuv .PA.1          .              .             1.0000    172800.0000      
7 .Kuv .PA.2          .              .             1.0000    164766.5025      
7 .Kuv .PA.3          .              .             1.0000    157095.8397      
7 .Kuv .KI.1          .              .             1.0000    156000.0000      
7 .Kuv .KI.2          .              .             1.0000    148958.1281      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/19/17 02:05:06 Page 161
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 437


     VAR u  1 if we use n boats for product j shiping to region k, 0 otherwise

                    LOWER          LEVEL          UPPER         MARGINAL

7 .Kuv .KI.3          .              .             1.0000    142219.7997      
7 .Kov .EU.1          .              .             1.0000    243600.0000      
7 .Kov .EU.2          .              .             1.0000    231688.2353      
7 .Kov .EU.3          .              .             1.0000    220353.6505      
7 .Kov .IE.1          .              .             1.0000    210000.0000      
7 .Kov .IE.2          .              .             1.0000    200170.5882      
7 .Kov .IE.3          .              .             1.0000    190786.6263      
7 .Kov .PA.1          .              .             1.0000    190800.0000      
7 .Kov .PA.2          .              .             1.0000    182064.7059      
7 .Kov .PA.3          .              .             1.0000    173710.9516      
7 .Kov .KI.1          .              .             1.0000    174000.0000      
7 .Kov .KI.2          .              .             1.0000    166305.8824      
7 .Kov .KI.3          .              .             1.0000    158927.4394      
7 .Hsel.EU.1          .              .             1.0000    130800.0000      
7 .Hsel.EU.2          .              .             1.0000    124426.8293      
7 .Hsel.EU.3          .              .             1.0000    118360.1101      
7 .Hsel.IE.1          .              .             1.0000    135600.0000      
7 .Hsel.IE.2          .              .             1.0000    129153.6585      
7 .Hsel.IE.3          .              .             1.0000    123005.2201      
7 .Hsel.PA.1          .              .             1.0000    120000.0000      
7 .Hsel.PA.2          .              .             1.0000    114417.0732      
7 .Hsel.PA.3          .              .             1.0000    109082.7751      
7 .Hsel.KI.1          .              .             1.0000    134400.0000      
7 .Hsel.KI.2          .              .             1.0000    128180.4878      
7 .Hsel.KI.3          .              .             1.0000    122235.3302      
7 .Lsel.EU.1          .              .             1.0000    139200.0000      
7 .Lsel.EU.2          .              .             1.0000    132538.8350      
7 .Lsel.EU.3          .              .             1.0000    126187.5177      
7 .Lsel.IE.1          .              .             1.0000    160800.0000      
7 .Lsel.IE.2          .              .             1.0000    152959.2233      
7 .Lsel.IE.3          .              .             1.0000    145495.0118      
7 .Lsel.PA.1          .              .             1.0000    120000.0000      
7 .Lsel.PA.2          .              .             1.0000    114498.0583      
7 .Lsel.PA.3          .              .             1.0000    109232.5295      
7 .Lsel.KI.1          .              .             1.0000    124800.0000      
7 .Lsel.KI.2          .              .             1.0000    119257.2816      
7 .Lsel.KI.3          .              .             1.0000    113937.5412      
7 .Pap .EU.1          .              .             1.0000    255600.0000      
7 .Pap .EU.2          .              .             1.0000    243282.6087      
7 .Pap .EU.3          .              .             1.0000    231543.0949      
7 .Pap .IE.1          .              .             1.0000    246000.0000      
7 .Pap .IE.2          .              .             1.0000    234856.5217      
7 .Pap .IE.3          .              .             1.0000    224175.2373      
7 .Pap .PA.1          .              .             1.0000    214800.0000      
7 .Pap .PA.2          .              .             1.0000    205447.8261      
7 .Pap .PA.3          .              .             1.0000    196449.2848      
7 .Pap .KI.1          .              .             1.0000    234000.0000      
7 .Pap .KI.2          .              .             1.0000    224034.7826      
7 .Pap .KI.3          .              .             1.0000    214425.3560      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/19/17 02:05:06 Page 162
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 437


     VAR u  1 if we use n boats for product j shiping to region k, 0 otherwise

                    LOWER          LEVEL          UPPER         MARGINAL

8 .Mas .EU.1          .              .             1.0000     92400.0000      
8 .Mas .EU.2          .              .             1.0000     87964.3564      
8 .Mas .EU.3          .              .             1.0000     83739.5432      
8 .Mas .IE.1          .              .             1.0000     42000.0000      
8 .Mas .IE.2          .              .             1.0000     40360.8911      
8 .Mas .IE.3          .              .             1.0000     38776.3580      
8 .Mas .PA.1          .              .             1.0000     39200.0000      
8 .Mas .PA.2          .              .             1.0000     37793.0693      
8 .Mas .PA.3          .              .             1.0000     36423.6295      
8 .Mas .KI.1          .              .             1.0000     31500.0000      
8 .Mas .KI.2          .              .             1.0000     30616.3366      
8 .Mas .KI.3          .              .             1.0000     29735.7869      
8 .Kus .EU.1          .              .             1.0000         EPS         
8 .Kus .EU.2          .              .             1.0000         EPS         
8 .Kus .EU.3          .              .             1.0000         EPS         
8 .Kus .IE.1          .              .             1.0000         EPS         
8 .Kus .IE.2          .              .             1.0000         EPS         
8 .Kus .IE.3          .              .             1.0000         EPS         
8 .Kus .PA.1          .              .             1.0000         EPS         
8 .Kus .PA.2          .              .             1.0000         EPS         
8 .Kus .PA.3          .              .             1.0000         EPS         
8 .Kus .KI.1          .              .             1.0000         EPS         
8 .Kus .KI.2          .              .             1.0000         EPS         
8 .Kus .KI.3          .              .             1.0000         EPS         
8 .Kos .EU.1          .              .             1.0000     22400.0000      
8 .Kos .EU.2          .              .             1.0000     22243.1034      
8 .Kos .EU.3          .              .             1.0000     22032.3751      
8 .Kos .IE.1          .              .             1.0000         EPS         
8 .Kos .IE.2          .              .             1.0000      1375.8621      
8 .Kos .IE.3          .              .             1.0000      2594.8216      
8 .Kos .PA.1          .              .             1.0000     -2800.0000      
8 .Kos .PA.2          .              .             1.0000     -1146.5517      
8 .Kos .PA.3          .              .             1.0000       327.3038      
8 .Kos .KI.1          .              .             1.0000    -10500.0000      
8 .Kos .KI.2          .              .             1.0000     -8255.1724      
8 .Kos .KI.3          .              .             1.0000     -6232.7229      
8 .Kuv .EU.1          .              .             1.0000    288400.0000      
8 .Kuv .EU.2          .              .             1.0000    274255.1724      
8 .Kuv .EU.3          .              .             1.0000    260799.9643      
8 .Kuv .IE.1          .              .             1.0000    217000.0000      
8 .Kuv .IE.2          .              .             1.0000    206837.9310      
8 .Kuv .IE.3          .              .             1.0000    197139.9108      
8 .Kuv .PA.1          .              .             1.0000    193200.0000      
8 .Kuv .PA.2          .              .             1.0000    184365.5172      
8 .Kuv .PA.3          .              .             1.0000    175919.8930      
8 .Kuv .KI.1          .              .             1.0000    171500.0000      
8 .Kuv .KI.2          .              .             1.0000    163956.8966      
8 .Kuv .KI.3          .              .             1.0000    156724.8662      
8 .Kov .EU.1          .              .             1.0000    281400.0000      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/19/17 02:05:06 Page 163
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 437


     VAR u  1 if we use n boats for product j shiping to region k, 0 otherwise

                    LOWER          LEVEL          UPPER         MARGINAL

8 .Kov .EU.2          .              .             1.0000    267695.0980      
8 .Kov .EU.3          .              .             1.0000    254650.3854      
8 .Kov .IE.1          .              .             1.0000    238000.0000      
8 .Kov .IE.2          .              .             1.0000    227012.7451      
8 .Kov .IE.3          .              .             1.0000    216512.2136      
8 .Kov .PA.1          .              .             1.0000    214200.0000      
8 .Kov .PA.2          .              .             1.0000    204585.2941      
8 .Kov .PA.3          .              .             1.0000    195376.1563      
8 .Kov .KI.1          .              .             1.0000    192500.0000      
8 .Kov .KI.2          .              .             1.0000    184244.1176      
8 .Kov .KI.3          .              .             1.0000    176307.0704      
8 .Hsel.EU.1          .              .             1.0000    151200.0000      
8 .Hsel.EU.2          .              .             1.0000    143867.0732      
8 .Hsel.EU.3          .              .             1.0000    136884.1776      
8 .Hsel.IE.1          .              .             1.0000    155400.0000      
8 .Hsel.IE.2          .              .             1.0000    148084.1463      
8 .Hsel.IE.3          .              .             1.0000    141100.8551      
8 .Hsel.PA.1          .              .             1.0000    136500.0000      
8 .Hsel.PA.2          .              .             1.0000    130242.6829      
8 .Hsel.PA.3          .              .             1.0000    124256.6939      
8 .Hsel.KI.1          .              .             1.0000    152600.0000      
8 .Hsel.KI.2          .              .             1.0000    145651.2195      
8 .Hsel.KI.3          .              .             1.0000    139000.0327      
8 .Lsel.EU.1          .              .             1.0000    160300.0000      
8 .Lsel.EU.2          .              .             1.0000    152691.7476      
8 .Lsel.EU.3          .              .             1.0000    145432.3157      
8 .Lsel.IE.1          .              .             1.0000    186200.0000      
8 .Lsel.IE.2          .              .             1.0000    177161.1650      
8 .Lsel.IE.3          .             1.0000         1.0000    168553.2105      
8 .Lsel.PA.1          .              .             1.0000    136500.0000      
8 .Lsel.PA.2          .              .             1.0000    130352.9126      
8 .Lsel.PA.3          .              .             1.0000    124460.5262      
8 .Lsel.KI.1          .              .             1.0000    140700.0000      
8 .Lsel.KI.2          .              .             1.0000    134614.0777      
8 .Lsel.KI.3          .              .             1.0000    128758.7367      
8 .Pap .EU.1          .              .             1.0000    295400.0000      
8 .Pap .EU.2          .             1.0000         1.0000    281259.6618      
8 .Pap .EU.3          .             1.0000         1.0000    267774.6292      
8 .Pap .IE.1          .              .             1.0000    280000.0000      
8 .Pap .IE.2          .              .             1.0000    267574.1546      
8 .Pap .IE.3          .              .             1.0000    255640.3231      
8 .Pap .PA.1          .              .             1.0000    242200.0000      
8 .Pap .PA.2          .              .             1.0000    231978.9855      
8 .Pap .PA.3          .              .             1.0000    222113.8877      
8 .Pap .KI.1          .              .             1.0000    262500.0000      
8 .Pap .KI.2          .              .             1.0000    251736.2319      
8 .Pap .KI.3          .              .             1.0000    241316.7346      
9 .Mas .EU.1          .              .             1.0000    102400.0000      
9 .Mas .EU.2          .              .             1.0000     97520.7921      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/19/17 02:05:06 Page 164
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 437


     VAR u  1 if we use n boats for product j shiping to region k, 0 otherwise

                    LOWER          LEVEL          UPPER         MARGINAL

9 .Mas .EU.3          .              .             1.0000     92871.2401      
9 .Mas .IE.1          .              .             1.0000     40000.0000      
9 .Mas .IE.2          .              .             1.0000     38601.9802      
9 .Mas .IE.3          .              .             1.0000     37238.1002      
9 .Mas .PA.1          .              .             1.0000     35200.0000      
9 .Mas .PA.2          .              .             1.0000     34162.3762      
9 .Mas .PA.3          .              .             1.0000     33133.7202      
9 .Mas .KI.1          .              .             1.0000     24000.0000      
9 .Mas .KI.2          .              .             1.0000     23702.9703      
9 .Mas .KI.3          .              .             1.0000     23367.1503      
9 .Kus .EU.1          .              .             1.0000         EPS         
9 .Kus .EU.2          .              .             1.0000         EPS         
9 .Kus .EU.3          .              .             1.0000         EPS         
9 .Kus .IE.1          .              .             1.0000         EPS         
9 .Kus .IE.2          .              .             1.0000         EPS         
9 .Kus .IE.3          .              .             1.0000         EPS         
9 .Kus .PA.1          .              .             1.0000         EPS         
9 .Kus .PA.2          .              .             1.0000         EPS         
9 .Kus .PA.3          .              .             1.0000         EPS         
9 .Kus .KI.1          .              .             1.0000         EPS         
9 .Kus .KI.2          .              .             1.0000         EPS         
9 .Kus .KI.3          .              .             1.0000         EPS         
9 .Kos .EU.1          .              .             1.0000     14400.0000      
9 .Kos .EU.2          .              .             1.0000     14937.9310      
9 .Kos .EU.3          .              .             1.0000     15368.4084      
9 .Kos .IE.1          .              .             1.0000    -16000.0000      
9 .Kos .IE.2          .              .             1.0000    -13402.9557      
9 .Kos .IE.3          .              .             1.0000    -11050.8452      
9 .Kos .PA.1          .              .             1.0000    -20800.0000      
9 .Kos .PA.2          .              .             1.0000    -17783.2512      
9 .Kos .PA.3          .              .             1.0000    -15043.9297      
9 .Kos .KI.1          .              .             1.0000    -32000.0000      
9 .Kos .KI.2          .              .             1.0000    -28153.6946      
9 .Kos .KI.3          .              .             1.0000    -24643.5565      
9 .Kuv .EU.1          .              .             1.0000    326400.0000      
9 .Kuv .EU.2          .             1.0000         1.0000    310439.4089      
9 .Kuv .EU.3          .             1.0000         1.0000    295253.8310      
9 .Kuv .IE.1          .              .             1.0000    240000.0000      
9 .Kuv .IE.2          .              .             1.0000    228898.5222      
9 .Kuv .IE.3          .              .             1.0000    218294.5774      
9 .Kuv .PA.1          .              .             1.0000    211200.0000      
9 .Kuv .PA.2          .              .             1.0000    201718.2266      
9 .Kuv .PA.3          .              .             1.0000    192641.4929      
9 .Kuv .KI.1          .              .             1.0000    184000.0000      
9 .Kuv .KI.2          .              .             1.0000    176147.7833      
9 .Kuv .KI.3          .              .             1.0000    168601.8661      
9 .Kov .EU.1          .              .             1.0000    318400.0000      
9 .Kov .EU.2          .              .             1.0000    302956.8627      
9 .Kov .EU.3          .              .             1.0000    288253.1565      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/19/17 02:05:06 Page 165
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 437


     VAR u  1 if we use n boats for product j shiping to region k, 0 otherwise

                    LOWER          LEVEL          UPPER         MARGINAL

9 .Kov .IE.1          .              .             1.0000    264000.0000      
9 .Kov .IE.2          .              .             1.0000    251992.1569      
9 .Kov .IE.3          .              .             1.0000    240502.8912      
9 .Kov .PA.1          .              .             1.0000    235200.0000      
9 .Kov .PA.2          .              .             1.0000    224870.5882      
9 .Kov .PA.3          .              .             1.0000    214959.4694      
9 .Kov .KI.1          .              .             1.0000    208000.0000      
9 .Kov .KI.2          .              .             1.0000    199388.2353      
9 .Kov .KI.3          .              .             1.0000    191084.3368      
9 .Hsel.EU.1          .              .             1.0000    171200.0000      
9 .Hsel.EU.2          .              .             1.0000    162936.5854      
9 .Hsel.EU.3          .              .             1.0000    155064.6401      
9 .Hsel.IE.1          .              .             1.0000    174400.0000      
9 .Hsel.IE.2          .              .             1.0000    166273.1707      
9 .Hsel.IE.3          .              .             1.0000    158509.2802      
9 .Hsel.PA.1          .              .             1.0000    152000.0000      
9 .Hsel.PA.2          .              .             1.0000    145141.4634      
9 .Hsel.PA.3          .              .             1.0000    138571.6002      
9 .Hsel.KI.1          .              .             1.0000    169600.0000      
9 .Hsel.KI.2          .              .             1.0000    162009.7561      
9 .Hsel.KI.3          .              .             1.0000    154733.9203      
9 .Lsel.EU.1          .              .             1.0000    180800.0000      
9 .Lsel.EU.2          .              .             1.0000    172291.2621      
9 .Lsel.EU.3          .              .             1.0000    164166.6981      
9 .Lsel.IE.1          .              .             1.0000    211200.0000      
9 .Lsel.IE.2          .              .             1.0000    200994.1748      
9 .Lsel.IE.3          .              .             1.0000    191271.1321      
9 .Lsel.PA.1          .              .             1.0000    152000.0000      
9 .Lsel.PA.2          .              .             1.0000    145285.4369      
9 .Lsel.PA.3          .              .             1.0000    138837.8301      
9 .Lsel.KI.1          .              .             1.0000    155200.0000      
9 .Lsel.KI.2          .              .             1.0000    148679.6117      
9 .Lsel.KI.3          .              .             1.0000    142388.9622      
9 .Pap .EU.1          .              .             1.0000    334400.0000      
9 .Pap .EU.2          .              .             1.0000    318502.4155      
9 .Pap .EU.3          .              .             1.0000    303332.1688      
9 .Pap .IE.1          .              .             1.0000    312000.0000      
9 .Pap .IE.2          .              .             1.0000    298456.0386      
9 .Pap .IE.3          .              .             1.0000    285420.4219      
9 .Pap .PA.1          .              .             1.0000    267200.0000      
9 .Pap .PA.2          .              .             1.0000    256307.2464      
9 .Pap .PA.3          .              .             1.0000    245756.5063      
9 .Pap .KI.1          .              .             1.0000    288000.0000      
9 .Pap .KI.2          .              .             1.0000    276684.0580      
9 .Pap .KI.3          .              .             1.0000    265680.6329      
10.Mas .EU.1          .              .             1.0000    111600.0000      
10.Mas .EU.2          .              .             1.0000    106324.7525      
10.Mas .EU.3          .              .             1.0000    101295.1632      
10.Mas .IE.1          .              .             1.0000     36000.0000      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/19/17 02:05:06 Page 166
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 437


     VAR u  1 if we use n boats for product j shiping to region k, 0 otherwise

                    LOWER          LEVEL          UPPER         MARGINAL

10.Mas .IE.2          .              .             1.0000     34961.8812      
10.Mas .IE.3          .              .             1.0000     33930.4080      
10.Mas .PA.1          .              .             1.0000     28800.0000      
10.Mas .PA.2          .              .             1.0000     28274.2574      
10.Mas .PA.3          .              .             1.0000     27720.4897      
10.Mas .KI.1          .              .             1.0000     13500.0000      
10.Mas .KI.2          .              .             1.0000     13967.8218      
10.Mas .KI.3          .              .             1.0000     14344.3621      
10.Kus .EU.1          .              .             1.0000         EPS         
10.Kus .EU.2          .              .             1.0000         EPS         
10.Kus .EU.3          .              .             1.0000         EPS         
10.Kus .IE.1          .              .             1.0000         EPS         
10.Kus .IE.2          .              .             1.0000         EPS         
10.Kus .IE.3          .              .             1.0000         EPS         
10.Kus .PA.1          .              .             1.0000         EPS         
10.Kus .PA.2          .              .             1.0000         EPS         
10.Kus .PA.3          .              .             1.0000         EPS         
10.Kus .KI.1          .              .             1.0000         EPS         
10.Kus .KI.2          .              .             1.0000         EPS         
10.Kus .KI.3          .              .             1.0000         EPS         
10.Kos .EU.1          .              .             1.0000      3600.0000      
10.Kos .EU.2          .              .             1.0000      5012.0690      
10.Kos .EU.3          .              .             1.0000      6251.5793      
10.Kos .IE.1          .              .             1.0000    -36000.0000      
10.Kos .IE.2          .              .             1.0000    -31925.6158      
10.Kos .IE.3          .              .             1.0000    -28200.6010      
10.Kos .PA.1          .              .             1.0000    -43200.0000      
10.Kos .PA.2          .              .             1.0000    -38538.1773      
10.Kos .PA.3          .              .             1.0000    -34269.6611      
10.Kos .KI.1          .              .             1.0000    -58500.0000      
10.Kos .KI.2          .              .             1.0000    -52732.0197      
10.Kos .KI.3          .              .             1.0000    -47434.5012      
10.Kuv .EU.1          .              .             1.0000    363600.0000      
10.Kuv .EU.2          .              .             1.0000    345874.8768      
10.Kuv .EU.3          .              .             1.0000    329006.8798      
10.Kuv .IE.1          .              .             1.0000    261000.0000      
10.Kuv .IE.2          .              .             1.0000    249087.1921      
10.Kuv .IE.3          .              .             1.0000    237697.1995      
10.Kuv .PA.1          .              .             1.0000    226800.0000      
10.Kuv .PA.2          .              .             1.0000    216824.6305      
10.Kuv .PA.3          .              .             1.0000    207260.6394      
10.Kuv .KI.1          .              .             1.0000    193500.0000      
10.Kuv .KI.2          .              .             1.0000    185530.7882      
10.Kuv .KI.3          .              .             1.0000    177850.7993      
10.Kov .EU.1          .              .             1.0000    354600.0000      
10.Kov .EU.2          .              .             1.0000    337473.5294      
10.Kov .EU.3          .              .             1.0000    321161.9637      
10.Kov .IE.1          .              .             1.0000    288000.0000      
10.Kov .IE.2          .              .             1.0000    275108.8235      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/19/17 02:05:06 Page 167
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 437


     VAR u  1 if we use n boats for product j shiping to region k, 0 otherwise

                    LOWER          LEVEL          UPPER         MARGINAL

10.Kov .IE.3          .              .             1.0000    262758.6592      
10.Kov .PA.1          .              .             1.0000    253800.0000      
10.Kov .PA.2          .              .             1.0000    242920.5882      
10.Kov .PA.3          .              .             1.0000    232460.8910      
10.Kov .KI.1          .              .             1.0000    220500.0000      
10.Kov .KI.2          .              .             1.0000    211738.2353      
10.Kov .KI.3          .              .             1.0000    203259.2388      
10.Hsel.EU.1          .              .             1.0000    190800.0000      
10.Hsel.EU.2          .              .             1.0000    181635.3659      
10.Hsel.EU.3          .              .             1.0000    172901.4976      
10.Hsel.IE.1          .              .             1.0000    192600.0000      
10.Hsel.IE.2          .              .             1.0000    183720.7317      
10.Hsel.IE.3          .              .             1.0000    175230.4952      
10.Hsel.PA.1          .              .             1.0000    166500.0000      
10.Hsel.PA.2          .              .             1.0000    159113.4146      
10.Hsel.PA.3          .              .             1.0000    152027.4941      
10.Hsel.KI.1          .              .             1.0000    185400.0000      
10.Hsel.KI.2          .              .             1.0000    177256.0976      
10.Hsel.KI.3          .              .             1.0000    169436.9929      
10.Lsel.EU.1          .              .             1.0000    200700.0000      
10.Lsel.EU.2          .              .             1.0000    191337.3786      
10.Lsel.EU.3          .              .             1.0000    182390.6648      
10.Lsel.IE.1          .              .             1.0000    235800.0000      
10.Lsel.IE.2          .              .             1.0000    224458.2524      
10.Lsel.IE.3          .              .             1.0000    213648.7765      
10.Lsel.PA.1          .              .             1.0000    166500.0000      
10.Lsel.PA.2          .              .             1.0000    159295.6311      
10.Lsel.PA.3          .              .             1.0000    152364.4413      
10.Lsel.KI.1          .              .             1.0000    168300.0000      
10.Lsel.KI.2          .              .             1.0000    161453.8835      
10.Lsel.KI.3          .              .             1.0000    154828.2178      
10.Pap .EU.1          .              .             1.0000    372600.0000      
10.Pap .EU.2          .              .             1.0000    355010.8696      
10.Pap .EU.3          .              .             1.0000    338215.7136      
10.Pap .IE.1          .              .             1.0000    342000.0000      
10.Pap .IE.2          .              .             1.0000    327502.1739      
10.Pap .IE.3          .              .             1.0000    313515.5340      
10.Pap .PA.1          .              .             1.0000    289800.0000      
10.Pap .PA.2          .              .             1.0000    278432.6087      
10.Pap .PA.3          .              .             1.0000    267377.1408      
10.Pap .KI.1          .              .             1.0000    310500.0000      
10.Pap .KI.2          .              .             1.0000    298878.2609      
10.Pap .KI.3          .              .             1.0000    287517.0510      
11.Mas .EU.1          .              .             1.0000    120000.0000      
11.Mas .EU.2          .              .             1.0000    114376.2376      
11.Mas .EU.3          .              .             1.0000    109011.3126      
11.Mas .IE.1          .              .             1.0000     30000.0000      
11.Mas .IE.2          .              .             1.0000     29440.5941      
11.Mas .IE.3          .              .             1.0000     28853.2815      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/19/17 02:05:06 Page 168
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 437


     VAR u  1 if we use n boats for product j shiping to region k, 0 otherwise

                    LOWER          LEVEL          UPPER         MARGINAL

11.Mas .PA.1          .              .             1.0000     20000.0000      
11.Mas .PA.2          .              .             1.0000     20128.7129      
11.Mas .PA.3          .              .             1.0000     20183.9378      
11.Mas .KI.1          .              .             1.0000         EPS         
11.Mas .KI.2          .              .             1.0000      1410.8911      
11.Mas .KI.3          .              .             1.0000      2667.4223      
11.Kus .EU.1          .              .             1.0000         EPS         
11.Kus .EU.2          .              .             1.0000         EPS         
11.Kus .EU.3          .              .             1.0000         EPS         
11.Kus .IE.1          .              .             1.0000         EPS         
11.Kus .IE.2          .              .             1.0000         EPS         
11.Kus .IE.3          .              .             1.0000         EPS         
11.Kus .PA.1          .              .             1.0000         EPS         
11.Kus .PA.2          .              .             1.0000         EPS         
11.Kus .PA.3          .              .             1.0000         EPS         
11.Kus .KI.1          .              .             1.0000         EPS         
11.Kus .KI.2          .              .             1.0000         EPS         
11.Kus .KI.3          .              .             1.0000         EPS         
11.Kos .EU.1          .              .             1.0000    -10000.0000      
11.Kos .EU.2          .              .             1.0000     -7534.4828      
11.Kos .EU.3          .              .             1.0000     -5318.1119      
11.Kos .IE.1          .              .             1.0000    -60000.0000      
11.Kos .IE.2          .              .             1.0000    -54192.1182      
11.Kos .IE.3          .              .             1.0000    -48854.4456      
11.Kos .PA.1          .              .             1.0000    -70000.0000      
11.Kos .PA.2          .              .             1.0000    -63411.3300      
11.Kos .PA.3          .              .             1.0000    -57349.8902      
11.Kos .KI.1          .              .             1.0000    -90000.0000      
11.Kos .KI.2          .              .             1.0000    -81990.1478      
11.Kos .KI.3          .              .             1.0000    -74605.5570      
11.Kuv .EU.1          .              .             1.0000    400000.0000      
11.Kuv .EU.2          .              .             1.0000    380561.5764      
11.Kuv .EU.3          .              .             1.0000    362059.1109      
11.Kuv .IE.1          .              .             1.0000    280000.0000      
11.Kuv .IE.2          .              .             1.0000    267403.9409      
11.Kuv .IE.3          .              .             1.0000    255347.7772      
11.Kuv .PA.1          .              .             1.0000    240000.0000      
11.Kuv .PA.2          .              .             1.0000    229684.7291      
11.Kuv .PA.3          .              .             1.0000    219777.3326      
11.Kuv .KI.1          .              .             1.0000    200000.0000      
11.Kuv .KI.2          .              .             1.0000    192105.9113      
11.Kuv .KI.3          .              .             1.0000    184471.6658      
11.Kov .EU.1          .              .             1.0000    390000.0000      
11.Kov .EU.2          .              .             1.0000    371245.0980      
11.Kov .EU.3          .              .             1.0000    353376.8070      
11.Kov .IE.1          .              .             1.0000    310000.0000      
11.Kov .IE.2          .              .             1.0000    296362.7451      
11.Kov .IE.3          .              .             1.0000    283279.5175      
11.Kov .PA.1          .              .             1.0000    270000.0000      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/19/17 02:05:06 Page 169
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 437


     VAR u  1 if we use n boats for product j shiping to region k, 0 otherwise

                    LOWER          LEVEL          UPPER         MARGINAL

11.Kov .PA.2          .              .             1.0000    258735.2941      
11.Kov .PA.3          .              .             1.0000    247880.4210      
11.Kov .KI.1          .              .             1.0000    230000.0000      
11.Kov .KI.2          .              .             1.0000    221294.1176      
11.Kov .KI.3          .              .             1.0000    212831.7762      
11.Hsel.EU.1          .              .             1.0000    210000.0000      
11.Hsel.EU.2          .              .             1.0000    199963.4146      
11.Hsel.EU.3          .              .             1.0000    190394.7501      
11.Hsel.IE.1          .              .             1.0000    210000.0000      
11.Hsel.IE.2          .              .             1.0000    200426.8293      
11.Hsel.IE.3          .              .             1.0000    191264.5003      
11.Hsel.PA.1          .              .             1.0000    180000.0000      
11.Hsel.PA.2          .              .             1.0000    172158.5366      
11.Hsel.PA.3          .              .             1.0000    164624.3754      
11.Hsel.KI.1          .              .             1.0000    200000.0000      
11.Hsel.KI.2          .              .             1.0000    191390.2439      
11.Hsel.KI.3          .              .             1.0000    183109.2504      
11.Lsel.EU.1          .              .             1.0000    220000.0000      
11.Lsel.EU.2          .              .             1.0000    209830.0971      
11.Lsel.EU.3          .              .             1.0000    200104.2158      
11.Lsel.IE.1          .             1.0000         1.0000    260000.0000      
11.Lsel.IE.2          .             1.0000         1.0000    247553.3981      
11.Lsel.IE.3          .              .             1.0000    235686.1438      
11.Lsel.PA.1          .              .             1.0000    180000.0000      
11.Lsel.PA.2          .              .             1.0000    172383.4951      
11.Lsel.PA.3          .              .             1.0000    165040.3596      
11.Lsel.KI.1          .              .             1.0000    180000.0000      
11.Lsel.KI.2          .              .             1.0000    172936.8932      
11.Lsel.KI.3          .              .             1.0000    166076.5034      
11.Pap .EU.1          .              .             1.0000    410000.0000      
11.Pap .EU.2          .              .             1.0000    390785.0242      
11.Pap .EU.3          .              .             1.0000    372425.2637      
11.Pap .IE.1          .              .             1.0000    370000.0000      
11.Pap .IE.2          .              .             1.0000    354712.5604      
11.Pap .IE.3          .              .             1.0000    339925.6593      
11.Pap .PA.1          .              .             1.0000    310000.0000      
11.Pap .PA.2          .              .             1.0000    298355.0725      
11.Pap .PA.3          .              .             1.0000    286975.7912      
11.Pap .KI.1          .              .             1.0000    330000.0000      
11.Pap .KI.2          .              .             1.0000    318318.8406      
11.Pap .KI.3          .              .             1.0000    306825.9889      
12.Mas .EU.1          .              .             1.0000    127600.0000      
12.Mas .EU.2          .              .             1.0000    121675.2475      
12.Mas .EU.3          .              .             1.0000    116019.6883      
12.Mas .IE.1          .              .             1.0000     22000.0000      
12.Mas .IE.2          .              .             1.0000     22038.1188      
12.Mas .IE.3          .              .             1.0000     22006.7207      
12.Mas .PA.1          .              .             1.0000      8800.0000      
12.Mas .PA.2          .              .             1.0000      9725.7426      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/19/17 02:05:06 Page 170
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 437


     VAR u  1 if we use n boats for product j shiping to region k, 0 otherwise

                    LOWER          LEVEL          UPPER         MARGINAL

12.Mas .PA.3          .              .             1.0000     10524.0648      
12.Mas .KI.1          .              .             1.0000    -16500.0000      
12.Mas .KI.2          .              .             1.0000    -13967.8218      
12.Mas .KI.3          .              .             1.0000    -11663.6690      
12.Kus .EU.1          .              .             1.0000         EPS         
12.Kus .EU.2          .              .             1.0000         EPS         
12.Kus .EU.3          .              .             1.0000         EPS         
12.Kus .IE.1          .              .             1.0000         EPS         
12.Kus .IE.2          .              .             1.0000         EPS         
12.Kus .IE.3          .              .             1.0000         EPS         
12.Kus .PA.1          .              .             1.0000         EPS         
12.Kus .PA.2          .              .             1.0000         EPS         
12.Kus .PA.3          .              .             1.0000         EPS         
12.Kus .KI.1          .              .             1.0000         EPS         
12.Kus .KI.2          .              .             1.0000         EPS         
12.Kus .KI.3          .              .             1.0000         EPS         
12.Kos .EU.1          .              .             1.0000    -26400.0000      
12.Kos .EU.2          .              .             1.0000    -22701.7241      
12.Kos .EU.3          .              .             1.0000    -19340.6654      
12.Kos .IE.1          .              .             1.0000    -88000.0000      
12.Kos .IE.2          .              .             1.0000    -80202.4631      
12.Kos .IE.3          .              .             1.0000    -73012.3792      
12.Kos .PA.1          .              .             1.0000   -101200.0000      
12.Kos .PA.2          .              .             1.0000    -92402.7094      
12.Kos .PA.3          .              .             1.0000    -84284.6171      
12.Kos .KI.1          .              .             1.0000   -126500.0000      
12.Kos .KI.2          .              .             1.0000   -115928.0788      
12.Kos .KI.3          .              .             1.0000   -106156.7240      
12.Kuv .EU.1          .              .             1.0000    435600.0000      
12.Kuv .EU.2          .              .             1.0000    414499.5074      
12.Kuv .EU.3          .              .             1.0000    394410.5242      
12.Kuv .IE.1          .              .             1.0000    297000.0000      
12.Kuv .IE.2          .              .             1.0000    283848.7685      
12.Kuv .IE.3          .              .             1.0000    271246.3104      
12.Kuv .PA.1          .              .             1.0000    250800.0000      
12.Kuv .PA.2          .              .             1.0000    240298.5222      
12.Kuv .PA.3          .              .             1.0000    230191.5725      
12.Kuv .KI.1          .              .             1.0000    203500.0000      
12.Kuv .KI.2          .              .             1.0000    195873.1527      
12.Kuv .KI.3          .              .             1.0000    188464.4656      
12.Kov .EU.1          .              .             1.0000    424600.0000      
12.Kov .EU.2          .              .             1.0000    404271.5686      
12.Kov .EU.3          .              .             1.0000    384897.6865      
12.Kov .IE.1          .              .             1.0000    330000.0000      
12.Kov .IE.2          .              .             1.0000    315753.9216      
12.Kov .IE.3          .              .             1.0000    302065.4662      
12.Kov .PA.1          .              .             1.0000    283800.0000      
12.Kov .PA.2          .              .             1.0000    272314.7059      
12.Kov .PA.3          .              .             1.0000    261218.0594      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/19/17 02:05:06 Page 171
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 437


     VAR u  1 if we use n boats for product j shiping to region k, 0 otherwise

                    LOWER          LEVEL          UPPER         MARGINAL

12.Kov .KI.1          .              .             1.0000    236500.0000      
12.Kov .KI.2          .              .             1.0000    228055.8824      
12.Kov .KI.3          .              .             1.0000    219801.9493      
12.Hsel.EU.1          .              .             1.0000    228800.0000      
12.Hsel.EU.2          .              .             1.0000    217920.7317      
12.Hsel.EU.3          .              .             1.0000    207544.3977      
12.Hsel.IE.1          .              .             1.0000    226600.0000      
12.Hsel.IE.2          .              .             1.0000    216391.4634      
12.Hsel.IE.3          .              .             1.0000    206611.2954      
12.Hsel.PA.1          .              .             1.0000    192500.0000      
12.Hsel.PA.2          .              .             1.0000    184276.8293      
12.Hsel.PA.3          .              .             1.0000    176362.2442      
12.Hsel.KI.1          .              .             1.0000    213400.0000      
12.Hsel.KI.2          .              .             1.0000    204412.1951      
12.Hsel.KI.3          .              .             1.0000    195750.6930      
12.Lsel.EU.1          .              .             1.0000    238700.0000      
12.Lsel.EU.2          .              .             1.0000    227769.4175      
12.Lsel.EU.3          .              .             1.0000    217307.3511      
12.Lsel.IE.1          .              .             1.0000    283800.0000      
12.Lsel.IE.2          .              .             1.0000    270279.6117      
12.Lsel.IE.3          .              .             1.0000    257383.2340      
12.Lsel.PA.1          .              .             1.0000    192500.0000      
12.Lsel.PA.2          .              .             1.0000    184549.0291      
12.Lsel.PA.3          .              .             1.0000    176865.5851      
12.Lsel.KI.1          .              .             1.0000    190300.0000      
12.Lsel.KI.2          .              .             1.0000    183128.6408      
12.Lsel.KI.3          .              .             1.0000    176133.8192      
12.Pap .EU.1          .              .             1.0000    446600.0000      
12.Pap .EU.2          .              .             1.0000    425824.8792      
12.Pap .EU.3          .              .             1.0000    405960.8191      
12.Pap .IE.1          .              .             1.0000    396000.0000      
12.Pap .IE.2          .              .             1.0000    380087.1981      
12.Pap .IE.3          .              .             1.0000    364650.7977      
12.Pap .PA.1          .              .             1.0000    327800.0000      
12.Pap .PA.2          .              .             1.0000    316074.6377      
12.Pap .PA.3          .              .             1.0000    304552.4573      
12.Pap .KI.1          .              .             1.0000    346500.0000      
12.Pap .KI.2          .              .             1.0000    335005.7971      
12.Pap .KI.3          .              .             1.0000    323607.4466      
13.Mas .EU.1          .              .             1.0000    134400.0000      
13.Mas .EU.2          .              .             1.0000    128221.7822      
13.Mas .EU.3          .              .             1.0000    122320.2902      
13.Mas .IE.1          .              .             1.0000     12000.0000      
13.Mas .IE.2          .              .             1.0000     12754.4554      
13.Mas .IE.3          .              .             1.0000     13390.7254      
13.Mas .PA.1          .              .             1.0000     -4800.0000      
13.Mas .PA.2          .              .             1.0000     -2934.6535      
13.Mas .PA.3          .              .             1.0000     -1259.1295      
13.Mas .KI.1          .              .             1.0000    -36000.0000      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/19/17 02:05:06 Page 172
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 437


     VAR u  1 if we use n boats for product j shiping to region k, 0 otherwise

                    LOWER          LEVEL          UPPER         MARGINAL

13.Mas .KI.2          .              .             1.0000    -32168.3168      
13.Mas .KI.3          .              .             1.0000    -28648.9119      
13.Kus .EU.1          .              .             1.0000         EPS         
13.Kus .EU.2          .              .             1.0000         EPS         
13.Kus .EU.3          .              .             1.0000         EPS         
13.Kus .IE.1          .              .             1.0000         EPS         
13.Kus .IE.2          .              .             1.0000         EPS         
13.Kus .IE.3          .              .             1.0000         EPS         
13.Kus .PA.1          .              .             1.0000         EPS         
13.Kus .PA.2          .              .             1.0000         EPS         
13.Kus .PA.3          .              .             1.0000         EPS         
13.Kus .KI.1          .              .             1.0000         EPS         
13.Kus .KI.2          .              .             1.0000         EPS         
13.Kus .KI.3          .              .             1.0000         EPS         
13.Kos .EU.1          .              .             1.0000    -45600.0000      
13.Kos .EU.2          .              .             1.0000    -40489.6552      
13.Kos .EU.3          .              .             1.0000    -35816.0812      
13.Kos .IE.1          .              .             1.0000   -120000.0000      
13.Kos .IE.2          .              .             1.0000   -109956.6502      
13.Kos .IE.3          .              .             1.0000   -100674.4017      
13.Kos .PA.1          .              .             1.0000   -136800.0000      
13.Kos .PA.2          .              .             1.0000   -125512.3153      
13.Kos .PA.3          .              .             1.0000   -115073.8419      
13.Kos .KI.1          .              .             1.0000   -168000.0000      
13.Kos .KI.2          .              .             1.0000   -154545.8128      
13.Kos .KI.3          .              .             1.0000   -142088.0021      
13.Kuv .EU.1          .              .             1.0000    470400.0000      
13.Kuv .EU.2          .              .             1.0000    447688.6700      
13.Kuv .EU.3          .              .             1.0000    426061.1197      
13.Kuv .IE.1          .              .             1.0000    312000.0000      
13.Kuv .IE.2          .              .             1.0000    298421.6749      
13.Kuv .IE.3          .              .             1.0000    285392.7991      
13.Kuv .PA.1          .              .             1.0000    259200.0000      
13.Kuv .PA.2          .              .             1.0000    248666.0099      
13.Kuv .PA.3          .              .             1.0000    238503.3590      
13.Kuv .KI.1          .              .             1.0000    204000.0000      
13.Kuv .KI.2          .              .             1.0000    196832.5123      
13.Kuv .KI.3          .              .             1.0000    189829.1987      
13.Kov .EU.1          .              .             1.0000    458400.0000      
13.Kov .EU.2          .              .             1.0000    436552.9412      
13.Kov .EU.3          .              .             1.0000    415724.6021      
13.Kov .IE.1          .              .             1.0000    348000.0000      
13.Kov .IE.2          .              .             1.0000    333282.3529      
13.Kov .IE.3          .              .             1.0000    319116.5052      
13.Kov .PA.1          .              .             1.0000    295200.0000      
13.Kov .PA.2          .              .             1.0000    283658.8235      
13.Kov .PA.3          .              .             1.0000    272473.8062      
13.Kov .KI.1          .              .             1.0000    240000.0000      
13.Kov .KI.2          .              .             1.0000    232023.5294      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/19/17 02:05:06 Page 173
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 437


     VAR u  1 if we use n boats for product j shiping to region k, 0 otherwise

                    LOWER          LEVEL          UPPER         MARGINAL

13.Kov .KI.3          .              .             1.0000    224169.7578      
13.Hsel.EU.1          .              .             1.0000    247200.0000      
13.Hsel.EU.2          .              .             1.0000    235507.3171      
13.Hsel.EU.3          .              .             1.0000    224350.4402      
13.Hsel.IE.1          .              .             1.0000    242400.0000      
13.Hsel.IE.2          .              .             1.0000    231614.6341      
13.Hsel.IE.3          .              .             1.0000    221270.8804      
13.Hsel.PA.1          .              .             1.0000    204000.0000      
13.Hsel.PA.2          .              .             1.0000    195468.2927      
13.Hsel.PA.3          .              .             1.0000    187241.1005      
13.Hsel.KI.1          .              .             1.0000    225600.0000      
13.Hsel.KI.2          .              .             1.0000    216321.9512      
13.Hsel.KI.3          .              .             1.0000    207361.3206      
13.Lsel.EU.1          .              .             1.0000    256800.0000      
13.Lsel.EU.2          .              .             1.0000    245155.3398      
13.Lsel.EU.3          .              .             1.0000    234000.0707      
13.Lsel.IE.1          .              .             1.0000    307200.0000      
13.Lsel.IE.2          .              .             1.0000    292636.8932      
13.Lsel.IE.3          .              .             1.0000    278740.0471      
13.Lsel.PA.1          .              .             1.0000    204000.0000      
13.Lsel.PA.2          .              .             1.0000    195792.2330      
13.Lsel.PA.3          .              .             1.0000    187840.1178      
13.Lsel.KI.1          .              .             1.0000    199200.0000      
13.Lsel.KI.2          .              .             1.0000    192029.1262      
13.Lsel.KI.3          .              .             1.0000    185000.1650      
13.Pap .EU.1          .              .             1.0000    482400.0000      
13.Pap .EU.2          .              .             1.0000    460130.4348      
13.Pap .EU.3          .              .             1.0000    438822.3798      
13.Pap .IE.1          .              .             1.0000    420000.0000      
13.Pap .IE.2          .              .             1.0000    403626.0870      
13.Pap .IE.3          .              .             1.0000    387690.9494      
13.Pap .PA.1          .              .             1.0000    343200.0000      
13.Pap .PA.2          .              .             1.0000    331591.3043      
13.Pap .PA.3          .              .             1.0000    320107.1393      
13.Pap .KI.1          .              .             1.0000    360000.0000      
13.Pap .KI.2          .              .             1.0000    348939.1304      
13.Pap .KI.3          .              .             1.0000    337861.4241      
14.Mas .EU.1          .              .             1.0000    140400.0000      
14.Mas .EU.2          .              .             1.0000    134015.8416      
14.Mas .EU.3          .              .             1.0000    127913.1183      
14.Mas .IE.1          .              .             1.0000         EPS         
14.Mas .IE.2          .              .             1.0000      1589.6040      
14.Mas .IE.3          .              .             1.0000      3005.2958      
14.Mas .PA.1          .              .             1.0000    -20800.0000      
14.Mas .PA.2          .              .             1.0000    -17852.4752      
14.Mas .PA.3          .              .             1.0000    -15165.6450      
14.Mas .KI.1          .              .             1.0000    -58500.0000      
14.Mas .KI.2          .              .             1.0000    -53190.5941      
14.Mas .KI.3          .              .             1.0000    -48288.3063      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/19/17 02:05:06 Page 174
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 437


     VAR u  1 if we use n boats for product j shiping to region k, 0 otherwise

                    LOWER          LEVEL          UPPER         MARGINAL

14.Kus .EU.1          .              .             1.0000         EPS         
14.Kus .EU.2          .              .             1.0000         EPS         
14.Kus .EU.3          .              .             1.0000         EPS         
14.Kus .IE.1          .              .             1.0000         EPS         
14.Kus .IE.2          .              .             1.0000         EPS         
14.Kus .IE.3          .              .             1.0000         EPS         
14.Kus .PA.1          .              .             1.0000         EPS         
14.Kus .PA.2          .              .             1.0000         EPS         
14.Kus .PA.3          .              .             1.0000         EPS         
14.Kus .KI.1          .              .             1.0000         EPS         
14.Kus .KI.2          .              .             1.0000         EPS         
14.Kus .KI.3          .              .             1.0000         EPS         
14.Kos .EU.1          .              .             1.0000    -67600.0000      
14.Kos .EU.2          .              .             1.0000    -60898.2759      
14.Kos .EU.3          .              .             1.0000    -54744.3592      
14.Kos .IE.1          .              .             1.0000   -156000.0000      
14.Kos .IE.2          .              .             1.0000   -143454.6798      
14.Kos .IE.3          .              .             1.0000   -131840.5131      
14.Kos .PA.1          .              .             1.0000   -176800.0000      
14.Kos .PA.2          .              .             1.0000   -162740.1478      
14.Kos .PA.3          .              .             1.0000   -149717.5644      
14.Kos .KI.1          .              .             1.0000   -214500.0000      
14.Kos .KI.2          .              .             1.0000   -197843.3498      
14.Kos .KI.3          .              .             1.0000   -182399.3914      
14.Kuv .EU.1          .              .             1.0000    504400.0000      
14.Kuv .EU.2          .              .             1.0000    480129.0640      
14.Kuv .EU.3          .              .             1.0000    457010.8974      
14.Kuv .IE.1          .              .             1.0000    325000.0000      
14.Kuv .IE.2          .              .             1.0000    311122.6601      
14.Kuv .IE.3          .              .             1.0000    297787.2434      
14.Kuv .PA.1          .              .             1.0000    265200.0000      
14.Kuv .PA.2          .              .             1.0000    254787.1921      
14.Kuv .PA.3          .              .             1.0000    244712.6921      
14.Kuv .KI.1          .              .             1.0000    201500.0000      
14.Kuv .KI.2          .              .             1.0000    194983.9901      
14.Kuv .KI.3          .              .             1.0000    188565.8652      
14.Kov .EU.1          .              .             1.0000    491400.0000      
14.Kov .EU.2          .              .             1.0000    468089.2157      
14.Kov .EU.3          .              .             1.0000    445857.5538      
14.Kov .IE.1          .              .             1.0000    364000.0000      
14.Kov .IE.2          .              .             1.0000    348948.0392      
14.Kov .IE.3          .              .             1.0000    334432.6346      
14.Kov .PA.1          .              .             1.0000    304200.0000      
14.Kov .PA.2          .              .             1.0000    292767.6471      
14.Kov .PA.3          .              .             1.0000    281647.6615      
14.Kov .KI.1          .              .             1.0000    240500.0000      
14.Kov .KI.2          .              .             1.0000    233197.0588      
14.Kov .KI.3          .              .             1.0000    225935.2018      
14.Hsel.EU.1          .              .             1.0000    265200.0000      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/19/17 02:05:06 Page 175
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 437


     VAR u  1 if we use n boats for product j shiping to region k, 0 otherwise

                    LOWER          LEVEL          UPPER         MARGINAL

14.Hsel.EU.2          .              .             1.0000    252723.1707      
14.Hsel.EU.3          .              .             1.0000    240812.8778      
14.Hsel.IE.1          .              .             1.0000    257400.0000      
14.Hsel.IE.2          .              .             1.0000    246096.3415      
14.Hsel.IE.3          .              .             1.0000    235243.2555      
14.Hsel.PA.1          .              .             1.0000    214500.0000      
14.Hsel.PA.2          .              .             1.0000    205732.9268      
14.Hsel.PA.3          .              .             1.0000    197260.9444      
14.Hsel.KI.1          .              .             1.0000    236600.0000      
14.Hsel.KI.2          .              .             1.0000    227119.5122      
14.Hsel.KI.3          .              .             1.0000    217941.1333      
14.Lsel.EU.1          .              .             1.0000    274300.0000      
14.Lsel.EU.2          .              .             1.0000    261987.8641      
14.Lsel.EU.3          .              .             1.0000    250182.3746      
14.Lsel.IE.1          .              .             1.0000    330200.0000      
14.Lsel.IE.2          .              .             1.0000    314625.2427      
14.Lsel.IE.3          .              .             1.0000    299756.5831      
14.Lsel.PA.1          .              .             1.0000    214500.0000      
14.Lsel.PA.2          .              .             1.0000    206113.1068      
14.Lsel.PA.3          .              .             1.0000    197963.9577      
14.Lsel.KI.1          .              .             1.0000    206700.0000      
14.Lsel.KI.2          .              .             1.0000    199638.3495      
14.Lsel.KI.3          .              .             1.0000    192675.5408      
14.Pap .EU.1          .              .             1.0000    517400.0000      
14.Pap .EU.2          .              .             1.0000    493701.6908      
14.Pap .EU.3          .              .             1.0000    471009.9457      
14.Pap .IE.1          .              .             1.0000    442000.0000      
14.Pap .IE.2          .              .             1.0000    425329.2271      
14.Pap .IE.3          .              .             1.0000    409046.1142      
14.Pap .PA.1          .              .             1.0000    356200.0000      
14.Pap .PA.2          .              .             1.0000    344905.0725      
14.Pap .PA.3          .              .             1.0000    333639.8370      
14.Pap .KI.1          .              .             1.0000    370500.0000      
14.Pap .KI.2          .              .             1.0000    360118.8406      
14.Pap .KI.3          .              .             1.0000    349587.9213      
15.Mas .EU.1          .              .             1.0000    145600.0000      
15.Mas .EU.2          .              .             1.0000    139057.4257      
15.Mas .EU.3          .              .             1.0000    132798.1727      
15.Mas .IE.1          .              .             1.0000    -14000.0000      
15.Mas .IE.2          .              .             1.0000    -11456.4356      
15.Mas .IE.3          .              .             1.0000     -9149.5682      
15.Mas .PA.1          .              .             1.0000    -39200.0000      
15.Mas .PA.2          .              .             1.0000    -35027.7228      
15.Mas .PA.3          .              .             1.0000    -31195.4818      
15.Mas .KI.1          .              .             1.0000    -84000.0000      
15.Mas .KI.2          .              .             1.0000    -77034.6535      
15.Mas .KI.3          .              .             1.0000    -70581.8523      
15.Kus .EU.1          .              .             1.0000         EPS         
15.Kus .EU.2          .              .             1.0000         EPS         
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/19/17 02:05:06 Page 176
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 437


     VAR u  1 if we use n boats for product j shiping to region k, 0 otherwise

                    LOWER          LEVEL          UPPER         MARGINAL

15.Kus .EU.3          .              .             1.0000         EPS         
15.Kus .IE.1          .              .             1.0000         EPS         
15.Kus .IE.2          .              .             1.0000         EPS         
15.Kus .IE.3          .              .             1.0000         EPS         
15.Kus .PA.1          .              .             1.0000         EPS         
15.Kus .PA.2          .              .             1.0000         EPS         
15.Kus .PA.3          .              .             1.0000         EPS         
15.Kus .KI.1          .              .             1.0000         EPS         
15.Kus .KI.2          .              .             1.0000         EPS         
15.Kus .KI.3          .              .             1.0000         EPS         
15.Kos .EU.1          .              .             1.0000    -92400.0000      
15.Kos .EU.2          .              .             1.0000    -83927.5862      
15.Kos .EU.3          .              .             1.0000    -76125.4994      
15.Kos .IE.1          .              .             1.0000   -196000.0000      
15.Kos .IE.2          .              .             1.0000   -180696.5517      
15.Kos .IE.3          .              .             1.0000   -166510.7134      
15.Kos .PA.1          .              .             1.0000   -221200.0000      
15.Kos .PA.2          .              .             1.0000   -204086.2069      
15.Kos .PA.3          .              .             1.0000   -188215.7848      
15.Kos .KI.1          .              .             1.0000   -266000.0000      
15.Kos .KI.2          .              .             1.0000   -245820.6897      
15.Kos .KI.3          .              .             1.0000   -227090.8918      
15.Kuv .EU.1          .              .             1.0000    537600.0000      
15.Kuv .EU.2          .              .             1.0000    511820.6897      
15.Kuv .EU.3          .              .             1.0000    487259.8573      
15.Kuv .IE.1          .              .             1.0000    336000.0000      
15.Kuv .IE.2          .              .             1.0000    321951.7241      
15.Kuv .IE.3          .              .             1.0000    308429.6433      
15.Kuv .PA.1          .              .             1.0000    268800.0000      
15.Kuv .PA.2          .              .             1.0000    258662.0690      
15.Kuv .PA.3          .              .             1.0000    248819.5719      
15.Kuv .KI.1          .              .             1.0000    196000.0000      
15.Kuv .KI.2          .              .             1.0000    190327.5862      
15.Kuv .KI.3          .              .             1.0000    184674.4649      
15.Kov .EU.1          .              .             1.0000    523600.0000      
15.Kov .EU.2          .              .             1.0000    498880.3922      
15.Kov .EU.3          .              .             1.0000    475296.5417      
15.Kov .IE.1          .              .             1.0000    378000.0000      
15.Kov .IE.2          .              .             1.0000    362750.9804      
15.Kov .IE.3          .              .             1.0000    348013.8543      
15.Kov .PA.1          .              .             1.0000    310800.0000      
15.Kov .PA.2          .              .             1.0000    299641.1765      
15.Kov .PA.3          .              .             1.0000    288739.6251      
15.Kov .KI.1          .              .             1.0000    238000.0000      
15.Kov .KI.2          .              .             1.0000    231576.4706      
15.Kov .KI.3          .              .             1.0000    225098.2814      
15.Hsel.EU.1          .              .             1.0000    282800.0000      
15.Hsel.EU.2          .              .             1.0000    269568.2927      
15.Hsel.EU.3          .              .             1.0000    256931.7103      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/19/17 02:05:06 Page 177
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 437


     VAR u  1 if we use n boats for product j shiping to region k, 0 otherwise

                    LOWER          LEVEL          UPPER         MARGINAL

15.Hsel.IE.1          .              .             1.0000    271600.0000      
15.Hsel.IE.2          .              .             1.0000    259836.5854      
15.Hsel.IE.3          .              .             1.0000    248528.4206      
15.Hsel.PA.1          .              .             1.0000    224000.0000      
15.Hsel.PA.2          .              .             1.0000    215070.7317      
15.Hsel.PA.3          .              .             1.0000    206421.7757      
15.Hsel.KI.1          .              .             1.0000    246400.0000      
15.Hsel.KI.2          .              .             1.0000    236804.8780      
15.Hsel.KI.3          .              .             1.0000    227490.1309      
15.Lsel.EU.1          .              .             1.0000    291200.0000      
15.Lsel.EU.2          .              .             1.0000    278266.9903      
15.Lsel.EU.3          .              .             1.0000    265854.2629      
15.Lsel.IE.1          .              .             1.0000    352800.0000      
15.Lsel.IE.2          .              .             1.0000    336244.6602      
15.Lsel.IE.3          .              .             1.0000    320432.8419      
15.Lsel.PA.1          .              .             1.0000    224000.0000      
15.Lsel.PA.2          .              .             1.0000    215511.6505      
15.Lsel.PA.3          .              .             1.0000    207237.1048      
15.Lsel.KI.1          .              .             1.0000    212800.0000      
15.Lsel.KI.2          .              .             1.0000    205956.3107      
15.Lsel.KI.3          .              .             1.0000    199159.9467      
15.Pap .EU.1          .              .             1.0000    551600.0000      
15.Pap .EU.2          .              .             1.0000    526538.6473      
15.Pap .EU.3          .              .             1.0000    502523.5169      
15.Pap .IE.1          .              .             1.0000    462000.0000      
15.Pap .IE.2          .              .             1.0000    445196.6184      
15.Pap .IE.3          .              .             1.0000    428716.2922      
15.Pap .PA.1          .              .             1.0000    366800.0000      
15.Pap .PA.2          .              .             1.0000    356015.9420      
15.Pap .PA.3          .              .             1.0000    345150.5507      
15.Pap .KI.1          .              .             1.0000    378000.0000      
15.Pap .KI.2          .              .             1.0000    368544.9275      
15.Pap .KI.3          .              .             1.0000    358786.9383      
16.Mas .EU.1          .              .             1.0000    150000.0000      
16.Mas .EU.2          .              .             1.0000    143346.5347      
16.Mas .EU.3          .              .             1.0000    136975.4534      
16.Mas .IE.1          .              .             1.0000    -30000.0000      
16.Mas .IE.2          .              .             1.0000    -26383.6634      
16.Mas .IE.3          .              .             1.0000    -23073.8665      
16.Mas .PA.1          .              .             1.0000    -60000.0000      
16.Mas .PA.2          .              .             1.0000    -54460.3960      
16.Mas .PA.3          .              .             1.0000    -49348.6398      
16.Mas .KI.1          .              .             1.0000   -112500.0000      
16.Mas .KI.2          .              .             1.0000   -103700.4950      
16.Mas .KI.3          .              .             1.0000    -95529.5498      
16.Kus .EU.1          .              .             1.0000         EPS         
16.Kus .EU.2          .              .             1.0000         EPS         
16.Kus .EU.3          .              .             1.0000         EPS         
16.Kus .IE.1          .              .             1.0000         EPS         
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/19/17 02:05:06 Page 178
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 437


     VAR u  1 if we use n boats for product j shiping to region k, 0 otherwise

                    LOWER          LEVEL          UPPER         MARGINAL

16.Kus .IE.2          .              .             1.0000         EPS         
16.Kus .IE.3          .              .             1.0000         EPS         
16.Kus .PA.1          .              .             1.0000         EPS         
16.Kus .PA.2          .              .             1.0000         EPS         
16.Kus .PA.3          .              .             1.0000         EPS         
16.Kus .KI.1          .              .             1.0000         EPS         
16.Kus .KI.2          .              .             1.0000         EPS         
16.Kus .KI.3          .              .             1.0000         EPS         
16.Kos .EU.1          .              .             1.0000   -120000.0000      
16.Kos .EU.2          .              .             1.0000   -109577.5862      
16.Kos .EU.3          .              .             1.0000    -99959.5019      
16.Kos .IE.1          .              .             1.0000   -240000.0000      
16.Kos .IE.2          .              .             1.0000   -221682.2660      
16.Kos .IE.3          .              .             1.0000   -204685.0027      
16.Kos .PA.1          .              .             1.0000   -270000.0000      
16.Kos .PA.2          .              .             1.0000   -249550.4926      
16.Kos .PA.3          .              .             1.0000   -230568.5029      
16.Kos .KI.1          .              .             1.0000   -322500.0000      
16.Kos .KI.2          .              .             1.0000   -298477.8325      
16.Kos .KI.3          .              .             1.0000   -276162.5033      
16.Kuv .EU.1          .              .             1.0000    570000.0000      
16.Kuv .EU.2          .              .             1.0000    542763.5468      
16.Kuv .EU.3          .              .             1.0000    516807.9995      
16.Kuv .IE.1          .              .             1.0000    345000.0000      
16.Kuv .IE.2          .              .             1.0000    330908.8670      
16.Kuv .IE.3          .              .             1.0000    317319.9987      
16.Kuv .PA.1          .              .             1.0000    270000.0000      
16.Kuv .PA.2          .              .             1.0000    260290.6404      
16.Kuv .PA.3          .              .             1.0000    250823.9984      
16.Kuv .KI.1          .              .             1.0000    187500.0000      
16.Kuv .KI.2          .              .             1.0000    182863.3005      
16.Kuv .KI.3          .              .             1.0000    178154.9980      
16.Kov .EU.1          .              .             1.0000    555000.0000      
16.Kov .EU.2          .              .             1.0000    528926.4706      
16.Kov .EU.3          .              .             1.0000    504041.5657      
16.Kov .IE.1          .              .             1.0000    390000.0000      
16.Kov .IE.2          .              .             1.0000    374691.1765      
16.Kov .IE.3          .              .             1.0000    359860.1644      
16.Kov .PA.1          .              .             1.0000    315000.0000      
16.Kov .PA.2          .              .             1.0000    304279.4118      
16.Kov .PA.3          .              .             1.0000    293749.6972      
16.Kov .KI.1          .              .             1.0000    232500.0000      
16.Kov .KI.2          .              .             1.0000    227161.7647      
16.Kov .KI.3          .              .             1.0000    221658.9965      
16.Hsel.EU.1          .              .             1.0000    300000.0000      
16.Hsel.EU.2          .              .             1.0000    286042.6829      
16.Hsel.EU.3          .              .             1.0000    272706.9378      
16.Hsel.IE.1          .              .             1.0000    285000.0000      
16.Hsel.IE.2          .              .             1.0000    272835.3659      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/19/17 02:05:06 Page 179
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 437


     VAR u  1 if we use n boats for product j shiping to region k, 0 otherwise

                    LOWER          LEVEL          UPPER         MARGINAL

16.Hsel.IE.3          .              .             1.0000    261126.3757      
16.Hsel.PA.1          .              .             1.0000    232500.0000      
16.Hsel.PA.2          .              .             1.0000    223481.7073      
16.Hsel.PA.3          .              .             1.0000    214723.5946      
16.Hsel.KI.1          .              .             1.0000    255000.0000      
16.Hsel.KI.2          .              .             1.0000    245378.0488      
16.Hsel.KI.3          .              .             1.0000    236008.3135      
16.Lsel.EU.1          .              .             1.0000    307500.0000      
16.Lsel.EU.2          .              .             1.0000    293992.7184      
16.Lsel.EU.3          .              .             1.0000    281015.7355      
16.Lsel.IE.1          .              .             1.0000    375000.0000      
16.Lsel.IE.2          .              .             1.0000    357495.1456      
16.Lsel.IE.3          .              .             1.0000    340768.8236      
16.Lsel.PA.1          .              .             1.0000    232500.0000      
16.Lsel.PA.2          .              .             1.0000    223987.8641      
16.Lsel.PA.3          .              .             1.0000    215659.5591      
16.Lsel.KI.1          .              .             1.0000    217500.0000      
16.Lsel.KI.2          .              .             1.0000    210983.0097      
16.Lsel.KI.3          .              .             1.0000    204453.3827      
16.Pap .EU.1          .              .             1.0000    585000.0000      
16.Pap .EU.2          .              .             1.0000    558641.3043      
16.Pap .EU.3          .              .             1.0000    533363.0934      
16.Pap .IE.1          .              .             1.0000    480000.0000      
16.Pap .IE.2          .              .             1.0000    463228.2609      
16.Pap .IE.3          .              .             1.0000    446701.4834      
16.Pap .PA.1          .              .             1.0000    375000.0000      
16.Pap .PA.2          .              .             1.0000    364923.9130      
16.Pap .PA.3          .              .             1.0000    354639.2801      
16.Pap .KI.1          .              .             1.0000    382500.0000      
16.Pap .KI.2          .              .             1.0000    374217.3913      
16.Pap .KI.3          .              .             1.0000    365458.4751      
17.Mas .EU.1          .              .             1.0000    153600.0000      
17.Mas .EU.2          .              .             1.0000    146883.1683      
17.Mas .EU.3          .              .             1.0000    140444.9603      
17.Mas .IE.1          .              .             1.0000    -48000.0000      
17.Mas .IE.2          .              .             1.0000    -43192.0792      
17.Mas .IE.3          .              .             1.0000    -38767.5993      
17.Mas .PA.1          .              .             1.0000    -83200.0000      
17.Mas .PA.2          .              .             1.0000    -76150.4950      
17.Mas .PA.3          .              .             1.0000    -69625.1191      
17.Mas .KI.1          .              .             1.0000   -144000.0000      
17.Mas .KI.2          .              .             1.0000   -133188.1188      
17.Mas .KI.3          .              .             1.0000   -123131.3989      
17.Kus .EU.1          .              .             1.0000         EPS         
17.Kus .EU.2          .              .             1.0000         EPS         
17.Kus .EU.3          .              .             1.0000         EPS         
17.Kus .IE.1          .              .             1.0000         EPS         
17.Kus .IE.2          .              .             1.0000         EPS         
17.Kus .IE.3          .              .             1.0000         EPS         
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/19/17 02:05:06 Page 180
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 437


     VAR u  1 if we use n boats for product j shiping to region k, 0 otherwise

                    LOWER          LEVEL          UPPER         MARGINAL

17.Kus .PA.1          .              .             1.0000         EPS         
17.Kus .PA.2          .              .             1.0000         EPS         
17.Kus .PA.3          .              .             1.0000         EPS         
17.Kus .KI.1          .              .             1.0000         EPS         
17.Kus .KI.2          .              .             1.0000         EPS         
17.Kus .KI.3          .              .             1.0000         EPS         
17.Kos .EU.1          .              .             1.0000   -150400.0000      
17.Kos .EU.2          .              .             1.0000   -137848.2759      
17.Kos .EU.3          .              .             1.0000   -126246.3666      
17.Kos .IE.1          .              .             1.0000   -288000.0000      
17.Kos .IE.2          .              .             1.0000   -266411.8227      
17.Kos .IE.3          .              .             1.0000   -246363.3808      
17.Kos .PA.1          .              .             1.0000   -323200.0000      
17.Kos .PA.2          .              .             1.0000   -299133.0049      
17.Kos .PA.3          .              .             1.0000   -276775.7189      
17.Kos .KI.1          .              .             1.0000   -384000.0000      
17.Kos .KI.2          .              .             1.0000   -355814.7783      
17.Kos .KI.3          .              .             1.0000   -329614.2260      
17.Kuv .EU.1          .              .             1.0000    601600.0000      
17.Kuv .EU.2          .              .             1.0000    572957.6355      
17.Kuv .EU.3          .              .             1.0000    545655.3238      
17.Kuv .IE.1          .              .             1.0000    352000.0000      
17.Kuv .IE.2          .              .             1.0000    337994.0887      
17.Kuv .IE.3          .              .             1.0000    324458.3096      
17.Kuv .PA.1          .              .             1.0000    268800.0000      
17.Kuv .PA.2          .              .             1.0000    259672.9064      
17.Kuv .PA.3          .              .             1.0000    250725.9715      
17.Kuv .KI.1          .              .             1.0000    176000.0000      
17.Kuv .KI.2          .              .             1.0000    172591.1330      
17.Kuv .KI.3          .              .             1.0000    169007.4644      
17.Kov .EU.1          .              .             1.0000    585600.0000      
17.Kov .EU.2          .              .             1.0000    558227.4510      
17.Kov .EU.3          .              .             1.0000    532092.6259      
17.Kov .IE.1          .              .             1.0000    400000.0000      
17.Kov .IE.2          .              .             1.0000    384768.6275      
17.Kov .IE.3          .              .             1.0000    369971.5648      
17.Kov .PA.1          .              .             1.0000    316800.0000      
17.Kov .PA.2          .              .             1.0000    306682.3529      
17.Kov .PA.3          .              .             1.0000    296677.8777      
17.Kov .KI.1          .              .             1.0000    224000.0000      
17.Kov .KI.2          .              .             1.0000    219952.9412      
17.Kov .KI.3          .              .             1.0000    215617.3472      
17.Hsel.EU.1          .              .             1.0000    316800.0000      
17.Hsel.EU.2          .              .             1.0000    302146.3415      
17.Hsel.EU.3          .              .             1.0000    288138.5604      
17.Hsel.IE.1          .              .             1.0000    297600.0000      
17.Hsel.IE.2          .              .             1.0000    285092.6829      
17.Hsel.IE.3          .              .             1.0000    273037.1208      
17.Hsel.PA.1          .              .             1.0000    240000.0000      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/19/17 02:05:06 Page 181
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 437


     VAR u  1 if we use n boats for product j shiping to region k, 0 otherwise

                    LOWER          LEVEL          UPPER         MARGINAL

17.Hsel.PA.2          .              .             1.0000    230965.8537      
17.Hsel.PA.3          .              .             1.0000    222166.4010      
17.Hsel.KI.1          .              .             1.0000    262400.0000      
17.Hsel.KI.2          .              .             1.0000    252839.0244      
17.Hsel.KI.3          .              .             1.0000    243495.6811      
17.Lsel.EU.1          .              .             1.0000    323200.0000      
17.Lsel.EU.2          .              .             1.0000    309165.0485      
17.Lsel.EU.3          .              .             1.0000    295666.7923      
17.Lsel.IE.1          .              .             1.0000    396800.0000      
17.Lsel.IE.2          .              .             1.0000    378376.6990      
17.Lsel.IE.3          .              .             1.0000    360764.5282      
17.Lsel.PA.1          .              .             1.0000    240000.0000      
17.Lsel.PA.2          .              .             1.0000    231541.7476      
17.Lsel.PA.3          .              .             1.0000    223231.3206      
17.Lsel.KI.1          .              .             1.0000    220800.0000      
17.Lsel.KI.2          .              .             1.0000    214718.4466      
17.Lsel.KI.3          .              .             1.0000    208555.8488      
17.Pap .EU.1          .              .             1.0000    617600.0000      
17.Pap .EU.2          .              .             1.0000    590009.6618      
17.Pap .EU.3          .              .             1.0000    563528.6751      
17.Pap .IE.1          .              .             1.0000    496000.0000      
17.Pap .IE.2          .              .             1.0000    479424.1546      
17.Pap .IE.3          .              .             1.0000    463001.6878      
17.Pap .PA.1          .              .             1.0000    380800.0000      
17.Pap .PA.2          .              .             1.0000    371628.9855      
17.Pap .PA.3          .              .             1.0000    362106.0253      
17.Pap .KI.1          .              .             1.0000    384000.0000      
17.Pap .KI.2          .              .             1.0000    377136.2319      
17.Pap .KI.3          .              .             1.0000    369602.5317      
18.Mas .EU.1          .              .             1.0000    156400.0000      
18.Mas .EU.2          .              .             1.0000    149667.3267      
18.Mas .EU.3          .              .             1.0000    143206.6935      
18.Mas .IE.1          .              .             1.0000    -68000.0000      
18.Mas .IE.2          .              .             1.0000    -61881.6832      
18.Mas .IE.3          .              .             1.0000    -56230.7663      
18.Mas .PA.1          .              .             1.0000   -108800.0000      
18.Mas .PA.2          .              .             1.0000   -100098.0198      
18.Mas .PA.3          .              .             1.0000    -92024.9196      
18.Mas .KI.1          .              .             1.0000   -178500.0000      
18.Mas .KI.2          .              .             1.0000   -165497.5248      
18.Mas .KI.3          .              .             1.0000   -153387.3995      
18.Kus .EU.1          .              .             1.0000         EPS         
18.Kus .EU.2          .              .             1.0000         EPS         
18.Kus .EU.3          .              .             1.0000         EPS         
18.Kus .IE.1          .              .             1.0000         EPS         
18.Kus .IE.2          .              .             1.0000         EPS         
18.Kus .IE.3          .              .             1.0000         EPS         
18.Kus .PA.1          .              .             1.0000         EPS         
18.Kus .PA.2          .              .             1.0000         EPS         
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/19/17 02:05:06 Page 182
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 437


     VAR u  1 if we use n boats for product j shiping to region k, 0 otherwise

                    LOWER          LEVEL          UPPER         MARGINAL

18.Kus .PA.3          .              .             1.0000         EPS         
18.Kus .KI.1          .              .             1.0000         EPS         
18.Kus .KI.2          .              .             1.0000         EPS         
18.Kus .KI.3          .              .             1.0000         EPS         
18.Kos .EU.1          .              .             1.0000   -183600.0000      
18.Kos .EU.2          .              .             1.0000   -168739.6552      
18.Kos .EU.3          .              .             1.0000   -154986.0935      
18.Kos .IE.1          .              .             1.0000   -340000.0000      
18.Kos .IE.2          .              .             1.0000   -314885.2217      
18.Kos .IE.3          .              .             1.0000   -291545.8479      
18.Kos .PA.1          .              .             1.0000   -380800.0000      
18.Kos .PA.2          .              .             1.0000   -352833.7438      
18.Kos .PA.3          .              .             1.0000   -326837.4327      
18.Kos .KI.1          .              .             1.0000   -450500.0000      
18.Kos .KI.2          .              .             1.0000   -417831.5271      
18.Kos .KI.3          .              .             1.0000   -387446.0598      
18.Kuv .EU.1          .              .             1.0000    632400.0000      
18.Kuv .EU.2          .              .             1.0000    602402.9557      
18.Kuv .EU.3          .              .             1.0000    573801.8304      
18.Kuv .IE.1          .              .             1.0000    357000.0000      
18.Kuv .IE.2          .              .             1.0000    343207.3892      
18.Kuv .IE.3          .              .             1.0000    329844.5761      
18.Kuv .PA.1          .              .             1.0000    265200.0000      
18.Kuv .PA.2          .              .             1.0000    256808.8670      
18.Kuv .PA.3          .              .             1.0000    248525.4913      
18.Kuv .KI.1          .              .             1.0000    161500.0000      
18.Kuv .KI.2          .              .             1.0000    159511.0837      
18.Kuv .KI.3          .              .             1.0000    157231.8641      
18.Kov .EU.1          .              .             1.0000    615400.0000      
18.Kov .EU.2          .              .             1.0000    586783.3333      
18.Kov .EU.3          .              .             1.0000    559449.7222      
18.Kov .IE.1          .              .             1.0000    408000.0000      
18.Kov .IE.2          .              .             1.0000    392983.3333      
18.Kov .IE.3          .              .             1.0000    378348.0556      
18.Kov .PA.1          .              .             1.0000    316200.0000      
18.Kov .PA.2          .              .             1.0000    306850.0000      
18.Kov .PA.3          .              .             1.0000    297524.1667      
18.Kov .KI.1          .              .             1.0000    212500.0000      
18.Kov .KI.2          .              .             1.0000    209950.0000      
18.Kov .KI.3          .              .             1.0000    206973.3333      
18.Hsel.EU.1          .              .             1.0000    333200.0000      
18.Hsel.EU.2          .              .             1.0000    317879.2683      
18.Hsel.EU.3          .              .             1.0000    303226.5779      
18.Hsel.IE.1          .              .             1.0000    309400.0000      
18.Hsel.IE.2          .              .             1.0000    296608.5366      
18.Hsel.IE.3          .              .             1.0000    284260.6559      
18.Hsel.PA.1          .              .             1.0000    246500.0000      
18.Hsel.PA.2          .              .             1.0000    237523.1707      
18.Hsel.PA.3          .              .             1.0000    228750.1948      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/19/17 02:05:06 Page 183
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 437


     VAR u  1 if we use n boats for product j shiping to region k, 0 otherwise

                    LOWER          LEVEL          UPPER         MARGINAL

18.Hsel.KI.1          .              .             1.0000    268600.0000      
18.Hsel.KI.2          .              .             1.0000    259187.8049      
18.Hsel.KI.3          .              .             1.0000    249952.2338      
18.Lsel.EU.1          .              .             1.0000    338300.0000      
18.Lsel.EU.2          .              .             1.0000    323783.9806      
18.Lsel.EU.3          .              .             1.0000    309807.4335      
18.Lsel.IE.1          .              .             1.0000    418200.0000      
18.Lsel.IE.2          .              .             1.0000    398889.3204      
18.Lsel.IE.3          .              .             1.0000    380419.9557      
18.Lsel.PA.1          .              .             1.0000    246500.0000      
18.Lsel.PA.2          .              .             1.0000    238173.3010      
18.Lsel.PA.3          .              .             1.0000    229952.3892      
18.Lsel.KI.1          .              .             1.0000    222700.0000      
18.Lsel.KI.2          .              .             1.0000    217162.6214      
18.Lsel.KI.3          .              .             1.0000    211467.3449      
18.Pap .EU.1          .              .             1.0000    649400.0000      
18.Pap .EU.2          .              .             1.0000    620643.7198      
18.Pap .EU.3          .              .             1.0000    593020.2621      
18.Pap .IE.1          .              .             1.0000    510000.0000      
18.Pap .IE.2          .              .             1.0000    493784.2995      
18.Pap .IE.3          .              .             1.0000    477616.9054      
18.Pap .PA.1          .              .             1.0000    384200.0000      
18.Pap .PA.2          .              .             1.0000    376131.1594      
18.Pap .PA.3          .              .             1.0000    367550.7864      
18.Pap .KI.1          .              .             1.0000    382500.0000      
18.Pap .KI.2          .              .             1.0000    377301.4493      
18.Pap .KI.3          .              .             1.0000    371219.1080      
19.Mas .EU.1          .              .             1.0000    158400.0000      
19.Mas .EU.2          .              .             1.0000    151699.0099      
19.Mas .EU.3          .              .             1.0000    145260.6529      
19.Mas .IE.1          .              .             1.0000    -90000.0000      
19.Mas .IE.2          .              .             1.0000    -82452.4752      
19.Mas .IE.3          .              .             1.0000    -75463.3678      
19.Mas .PA.1          .              .             1.0000   -136800.0000      
19.Mas .PA.2          .              .             1.0000   -126302.9703      
19.Mas .PA.3          .              .             1.0000   -116548.0414      
19.Mas .KI.1          .              .             1.0000   -216000.0000      
19.Mas .KI.2          .              .             1.0000   -200628.7129      
19.Mas .KI.3          .              .             1.0000   -186297.5517      
19.Kus .EU.1          .              .             1.0000         EPS         
19.Kus .EU.2          .              .             1.0000         EPS         
19.Kus .EU.3          .              .             1.0000         EPS         
19.Kus .IE.1          .              .             1.0000         EPS         
19.Kus .IE.2          .              .             1.0000         EPS         
19.Kus .IE.3          .              .             1.0000         EPS         
19.Kus .PA.1          .              .             1.0000         EPS         
19.Kus .PA.2          .              .             1.0000         EPS         
19.Kus .PA.3          .              .             1.0000         EPS         
19.Kus .KI.1          .              .             1.0000         EPS         
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/19/17 02:05:06 Page 184
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 437


     VAR u  1 if we use n boats for product j shiping to region k, 0 otherwise

                    LOWER          LEVEL          UPPER         MARGINAL

19.Kus .KI.2          .              .             1.0000         EPS         
19.Kus .KI.3          .              .             1.0000         EPS         
19.Kos .EU.1          .              .             1.0000   -219600.0000      
19.Kos .EU.2          .              .             1.0000   -202251.7241      
19.Kos .EU.3          .              .             1.0000   -186178.6827      
19.Kos .IE.1          .              .             1.0000   -396000.0000      
19.Kos .IE.2          .              .             1.0000   -367102.4631      
19.Kos .IE.3          .              .             1.0000   -340232.4038      
19.Kos .PA.1          .              .             1.0000   -442800.0000      
19.Kos .PA.2          .              .             1.0000   -410652.7094      
19.Kos .PA.3          .              .             1.0000   -380753.6442      
19.Kos .KI.1          .              .             1.0000   -522000.0000      
19.Kos .KI.2          .              .             1.0000   -484528.0788      
19.Kos .KI.3          .              .             1.0000   -449658.0048      
19.Kuv .EU.1          .              .             1.0000    662400.0000      
19.Kuv .EU.2          .              .             1.0000    631099.5074      
19.Kuv .EU.3          .              .             1.0000    601247.5192      
19.Kuv .IE.1          .              .             1.0000    360000.0000      
19.Kuv .IE.2          .              .             1.0000    346548.7685      
19.Kuv .IE.3          .              .             1.0000    333478.7981      
19.Kuv .PA.1          .              .             1.0000    259200.0000      
19.Kuv .PA.2          .              .             1.0000    251698.5222      
19.Kuv .PA.3          .              .             1.0000    244222.5577      
19.Kuv .KI.1          .              .             1.0000    144000.0000      
19.Kuv .KI.2          .              .             1.0000    143623.1527      
19.Kuv .KI.3          .              .             1.0000    142828.1971      
19.Kov .EU.1          .              .             1.0000    644400.0000      
19.Kov .EU.2          .              .             1.0000    614594.1176      
19.Kov .EU.3          .              .             1.0000    586112.8547      
19.Kov .IE.1          .              .             1.0000    414000.0000      
19.Kov .IE.2          .              .             1.0000    399335.2941      
19.Kov .IE.3          .              .             1.0000    384989.6367      
19.Kov .PA.1          .              .             1.0000    313200.0000      
19.Kov .PA.2          .              .             1.0000    304782.3529      
19.Kov .PA.3          .              .             1.0000    296288.5640      
19.Kov .KI.1          .              .             1.0000    198000.0000      
19.Kov .KI.2          .              .             1.0000    197152.9412      
19.Kov .KI.3          .              .             1.0000    195726.9550      
19.Hsel.EU.1          .              .             1.0000    349200.0000      
19.Hsel.EU.2          .              .             1.0000    333241.4634      
19.Hsel.EU.3          .              .             1.0000    317970.9905      
19.Hsel.IE.1          .              .             1.0000    320400.0000      
19.Hsel.IE.2          .              .             1.0000    307382.9268      
19.Hsel.IE.3          .              .             1.0000    294796.9810      
19.Hsel.PA.1          .              .             1.0000    252000.0000      
19.Hsel.PA.2          .              .             1.0000    243153.6585      
19.Hsel.PA.3          .              .             1.0000    234474.9762      
19.Hsel.KI.1          .              .             1.0000    273600.0000      
19.Hsel.KI.2          .              .             1.0000    264424.3902      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/19/17 02:05:06 Page 185
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 437


     VAR u  1 if we use n boats for product j shiping to region k, 0 otherwise

                    LOWER          LEVEL          UPPER         MARGINAL

19.Hsel.KI.3          .              .             1.0000    255377.9714      
19.Lsel.EU.1          .              .             1.0000    352800.0000      
19.Lsel.EU.2          .              .             1.0000    337849.5146      
19.Lsel.EU.3          .              .             1.0000    323437.6591      
19.Lsel.IE.1          .              .             1.0000    439200.0000      
19.Lsel.IE.2          .              .             1.0000    419033.0097      
19.Lsel.IE.3          .              .             1.0000    399735.1060      
19.Lsel.PA.1          .              .             1.0000    252000.0000      
19.Lsel.PA.2          .              .             1.0000    243882.5243      
19.Lsel.PA.3          .              .             1.0000    235822.7651      
19.Lsel.KI.1          .              .             1.0000    223200.0000      
19.Lsel.KI.2          .              .             1.0000    218315.5340      
19.Lsel.KI.3          .              .             1.0000    213187.8711      
19.Pap .EU.1          .              .             1.0000    680400.0000      
19.Pap .EU.2          .              .             1.0000    650543.4783      
19.Pap .EU.3          .              .             1.0000    621837.8544      
19.Pap .IE.1          .              .             1.0000    522000.0000      
19.Pap .IE.2          .              .             1.0000    506308.6957      
19.Pap .IE.3          .              .             1.0000    490547.1361      
19.Pap .PA.1          .              .             1.0000    385200.0000      
19.Pap .PA.2          .              .             1.0000    378430.4348      
19.Pap .PA.3          .              .             1.0000    370973.5633      
19.Pap .KI.1          .              .             1.0000    378000.0000      
19.Pap .KI.2          .              .             1.0000    374713.0435      
19.Pap .KI.3          .              .             1.0000    370308.2042      
20.Mas .EU.1          .              .             1.0000    159600.0000      
20.Mas .EU.2          .              .             1.0000    152978.2178      
20.Mas .EU.3          .              .             1.0000    146606.8385      
20.Mas .IE.1          .              .             1.0000   -114000.0000      
20.Mas .IE.2          .              .             1.0000   -104904.4554      
20.Mas .IE.3          .              .             1.0000    -96465.4036      
20.Mas .PA.1          .              .             1.0000   -167200.0000      
20.Mas .PA.2          .              .             1.0000   -154765.3465      
20.Mas .PA.3          .              .             1.0000   -143194.4844      
20.Mas .KI.1          .              .             1.0000   -256500.0000      
20.Mas .KI.2          .              .             1.0000   -238581.6832      
20.Mas .KI.3          .              .             1.0000   -221861.8555      
20.Kus .EU.1          .              .             1.0000         EPS         
20.Kus .EU.2          .              .             1.0000         EPS         
20.Kus .EU.3          .              .             1.0000         EPS         
20.Kus .IE.1          .              .             1.0000         EPS         
20.Kus .IE.2          .              .             1.0000         EPS         
20.Kus .IE.3          .              .             1.0000         EPS         
20.Kus .PA.1          .              .             1.0000         EPS         
20.Kus .PA.2          .              .             1.0000         EPS         
20.Kus .PA.3          .              .             1.0000         EPS         
20.Kus .KI.1          .              .             1.0000         EPS         
20.Kus .KI.2          .              .             1.0000         EPS         
20.Kus .KI.3          .              .             1.0000         EPS         
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/19/17 02:05:06 Page 186
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 437


     VAR u  1 if we use n boats for product j shiping to region k, 0 otherwise

                    LOWER          LEVEL          UPPER         MARGINAL

20.Kos .EU.1          .              .             1.0000   -258400.0000      
20.Kos .EU.2          .              .             1.0000   -238384.4828      
20.Kos .EU.3          .              .             1.0000   -219824.1341      
20.Kos .IE.1          .              .             1.0000   -456000.0000      
20.Kos .IE.2          .              .             1.0000   -423063.5468      
20.Kos .IE.3          .              .             1.0000   -392423.0487      
20.Kos .PA.1          .              .             1.0000   -509200.0000      
20.Kos .PA.2          .              .             1.0000   -472589.9015      
20.Kos .PA.3          .              .             1.0000   -438524.3536      
20.Kos .KI.1          .              .             1.0000   -598500.0000      
20.Kos .KI.2          .              .             1.0000   -555904.4335      
20.Kos .KI.3          .              .             1.0000   -516250.0609      
20.Kuv .EU.1          .              .             1.0000    691600.0000      
20.Kuv .EU.2          .              .             1.0000    659047.2906      
20.Kuv .EU.3          .              .             1.0000    627992.3903      
20.Kuv .IE.1          .              .             1.0000    361000.0000      
20.Kuv .IE.2          .              .             1.0000    348018.2266      
20.Kuv .IE.3          .              .             1.0000    335360.9756      
20.Kuv .PA.1          .              .             1.0000    250800.0000      
20.Kuv .PA.2          .              .             1.0000    244341.8719      
20.Kuv .PA.3          .              .             1.0000    237817.1708      
20.Kuv .KI.1          .              .             1.0000    123500.0000      
20.Kuv .KI.2          .              .             1.0000    124927.3399      
20.Kuv .KI.3          .              .             1.0000    125796.4635      
20.Kov .EU.1          .              .             1.0000    672600.0000      
20.Kov .EU.2          .              .             1.0000    641659.8039      
20.Kov .EU.3          .              .             1.0000    612082.0233      
20.Kov .IE.1          .              .             1.0000    418000.0000      
20.Kov .IE.2          .              .             1.0000    403824.5098      
20.Kov .IE.3          .              .             1.0000    389896.3082      
20.Kov .PA.1          .              .             1.0000    307800.0000      
20.Kov .PA.2          .              .             1.0000    300479.4118      
20.Kov .PA.3          .              .             1.0000    292971.0698      
20.Kov .KI.1          .              .             1.0000    180500.0000      
20.Kov .KI.2          .              .             1.0000    181561.7647      
20.Kov .KI.3          .              .             1.0000    181878.2122      
20.Hsel.EU.1          .              .             1.0000    364800.0000      
20.Hsel.EU.2          .              .             1.0000    348232.9268      
20.Hsel.EU.3          .              .             1.0000    332371.7980      
20.Hsel.IE.1          .              .             1.0000    330600.0000      
20.Hsel.IE.2          .              .             1.0000    317415.8537      
20.Hsel.IE.3          .              .             1.0000    304646.0961      
20.Hsel.PA.1          .              .             1.0000    256500.0000      
20.Hsel.PA.2          .              .             1.0000    247857.3171      
20.Hsel.PA.3          .              .             1.0000    239340.7451      
20.Hsel.KI.1          .              .             1.0000    277400.0000      
20.Hsel.KI.2          .              .             1.0000    268548.7805      
20.Hsel.KI.3          .              .             1.0000    259772.8941      
20.Lsel.EU.1          .              .             1.0000    366700.0000      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/19/17 02:05:06 Page 187
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 437


     VAR u  1 if we use n boats for product j shiping to region k, 0 otherwise

                    LOWER          LEVEL          UPPER         MARGINAL

20.Lsel.EU.2          .              .             1.0000    351361.6505      
20.Lsel.EU.3          .              .             1.0000    336557.4689      
20.Lsel.IE.1          .              .             1.0000    459800.0000      
20.Lsel.IE.2          .              .             1.0000    438807.7670      
20.Lsel.IE.3          .              .             1.0000    418709.9793      
20.Lsel.PA.1          .              .             1.0000    256500.0000      
20.Lsel.PA.2          .              .             1.0000    248669.4175      
20.Lsel.PA.3          .              .             1.0000    240842.4482      
20.Lsel.KI.1          .              .             1.0000    222300.0000      
20.Lsel.KI.2          .              .             1.0000    218177.1845      
20.Lsel.KI.3          .              .             1.0000    213717.4274      
20.Pap .EU.1          .              .             1.0000    710600.0000      
20.Pap .EU.2          .              .             1.0000    679708.9372      
20.Pap .EU.3          .              .             1.0000    649981.4520      
20.Pap .IE.1          .              .             1.0000    532000.0000      
20.Pap .IE.2          .              .             1.0000    516997.3430      
20.Pap .IE.3          .              .             1.0000    501792.3800      
20.Pap .PA.1          .              .             1.0000    383800.0000      
20.Pap .PA.2          .              .             1.0000    378526.8116      
20.Pap .PA.3          .              .             1.0000    372374.3561      
20.Pap .KI.1          .              .             1.0000    370500.0000      
20.Pap .KI.2          .              .             1.0000    369371.0145      
20.Pap .KI.3          .              .             1.0000    366869.8201      
21.Mas .EU.1          .              .             1.0000    160000.0000      
21.Mas .EU.2          .              .             1.0000    153504.9505      
21.Mas .EU.3          .              .             1.0000    147245.2505      
21.Mas .IE.1          .              .             1.0000   -140000.0000      
21.Mas .IE.2          .              .             1.0000   -129237.6238      
21.Mas .IE.3          .              .             1.0000   -119236.8738      
21.Mas .PA.1          .              .             1.0000   -200000.0000      
21.Mas .PA.2          .              .             1.0000   -185485.1485      
21.Mas .PA.3          .              .             1.0000   -171964.2486      
21.Mas .KI.1          .              .             1.0000   -300000.0000      
21.Mas .KI.2          .              .             1.0000   -279356.4356      
21.Mas .KI.3          .              .             1.0000   -260080.3108      
21.Kus .EU.1          .              .             1.0000         EPS         
21.Kus .EU.2          .              .             1.0000         EPS         
21.Kus .EU.3          .              .             1.0000         EPS         
21.Kus .IE.1          .              .             1.0000         EPS         
21.Kus .IE.2          .              .             1.0000         EPS         
21.Kus .IE.3          .              .             1.0000         EPS         
21.Kus .PA.1          .              .             1.0000         EPS         
21.Kus .PA.2          .              .             1.0000         EPS         
21.Kus .PA.3          .              .             1.0000         EPS         
21.Kus .KI.1          .              .             1.0000         EPS         
21.Kus .KI.2          .              .             1.0000         EPS         
21.Kus .KI.3          .              .             1.0000         EPS         
21.Kos .EU.1          .              .             1.0000   -300000.0000      
21.Kos .EU.2          .              .             1.0000   -277137.9310      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/19/17 02:05:06 Page 188
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 437


     VAR u  1 if we use n boats for product j shiping to region k, 0 otherwise

                    LOWER          LEVEL          UPPER         MARGINAL

21.Kos .EU.3          .              .             1.0000   -255922.4478      
21.Kos .IE.1          .              .             1.0000   -520000.0000      
21.Kos .IE.2          .              .             1.0000   -482768.4729      
21.Kos .IE.3          .              .             1.0000   -448117.7825      
21.Kos .PA.1          .              .             1.0000   -580000.0000      
21.Kos .PA.2          .              .             1.0000   -538645.3202      
21.Kos .PA.3          .              .             1.0000   -500149.5608      
21.Kos .KI.1          .              .             1.0000   -680000.0000      
21.Kos .KI.2          .              .             1.0000   -631960.5911      
21.Kos .KI.3          .              .             1.0000   -587222.2282      
21.Kuv .EU.1          .              .             1.0000    720000.0000      
21.Kuv .EU.2          .              .             1.0000    686246.3054      
21.Kuv .EU.3          .              .             1.0000    654036.4435      
21.Kuv .IE.1          .              .             1.0000    360000.0000      
21.Kuv .IE.2          .              .             1.0000    347615.7635      
21.Kuv .IE.3          .              .             1.0000    335491.1087      
21.Kuv .PA.1          .              .             1.0000    240000.0000      
21.Kuv .PA.2          .              .             1.0000    234738.9163      
21.Kuv .PA.3          .              .             1.0000    229309.3305      
21.Kuv .KI.1          .              .             1.0000    100000.0000      
21.Kuv .KI.2          .              .             1.0000    103423.6453      
21.Kuv .KI.3          .              .             1.0000    106136.6631      
21.Kov .EU.1          .              .             1.0000    700000.0000      
21.Kov .EU.2          .              .             1.0000    667980.3922      
21.Kov .EU.3          .              .             1.0000    637357.2280      
21.Kov .IE.1          .              .             1.0000    420000.0000      
21.Kov .IE.2          .              .             1.0000    406450.9804      
21.Kov .IE.3          .              .             1.0000    393068.0700      
21.Kov .PA.1          .              .             1.0000    300000.0000      
21.Kov .PA.2          .              .             1.0000    293941.1765      
21.Kov .PA.3          .              .             1.0000    287571.6840      
21.Kov .KI.1          .              .             1.0000    160000.0000      
21.Kov .KI.2          .              .             1.0000    163176.4706      
21.Kov .KI.3          .              .             1.0000    165427.1050      
21.Hsel.EU.1          .              .             1.0000    380000.0000      
21.Hsel.EU.2          .              .             1.0000    362853.6585      
21.Hsel.EU.3          .              .             1.0000    346429.0006      
21.Hsel.IE.1          .              .             1.0000    340000.0000      
21.Hsel.IE.2          .              .             1.0000    326707.3171      
21.Hsel.IE.3          .              .             1.0000    313808.0012      
21.Hsel.PA.1          .              .             1.0000    260000.0000      
21.Hsel.PA.2          .              .             1.0000    251634.1463      
21.Hsel.PA.3          .              .             1.0000    243347.5015      
21.Hsel.KI.1          .              .             1.0000    280000.0000      
21.Hsel.KI.2          .              .             1.0000    271560.9756      
21.Hsel.KI.3          .              .             1.0000    263137.0018      
21.Lsel.EU.1          .              .             1.0000    380000.0000      
21.Lsel.EU.2          .              .             1.0000    364320.3883      
21.Lsel.EU.3          .              .             1.0000    349166.8630      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/19/17 02:05:06 Page 189
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 437


     VAR u  1 if we use n boats for product j shiping to region k, 0 otherwise

                    LOWER          LEVEL          UPPER         MARGINAL

21.Lsel.IE.1          .              .             1.0000    480000.0000      
21.Lsel.IE.2          .              .             1.0000    458213.5922      
21.Lsel.IE.3          .              .             1.0000    437344.5754      
21.Lsel.PA.1          .              .             1.0000    260000.0000      
21.Lsel.PA.2          .              .             1.0000    252533.9806      
21.Lsel.PA.3          .              .             1.0000    245011.4384      
21.Lsel.KI.1          .              .             1.0000    220000.0000      
21.Lsel.KI.2          .              .             1.0000    216747.5728      
21.Lsel.KI.3          .              .             1.0000    213056.0138      
21.Pap .EU.1          .              .             1.0000    740000.0000      
21.Pap .EU.2          .              .             1.0000    708140.0966      
21.Pap .EU.3          .              .             1.0000    677451.0549      
21.Pap .IE.1          .              .             1.0000    540000.0000      
21.Pap .IE.2          .              .             1.0000    525850.2415      
21.Pap .IE.3          .              .             1.0000    511352.6372      
21.Pap .PA.1          .              .             1.0000    380000.0000      
21.Pap .PA.2          .              .             1.0000    376420.2899      
21.Pap .PA.3          .              .             1.0000    371753.1646      
21.Pap .KI.1          .              .             1.0000    360000.0000      
21.Pap .KI.2          .              .             1.0000    361275.3623      
21.Pap .KI.3          .              .             1.0000    360903.9558      
22.Mas .EU.1          .              .             1.0000    159600.0000      
22.Mas .EU.2          .              .             1.0000    153279.2079      
22.Mas .EU.3          .              .             1.0000    147175.8886      
22.Mas .IE.1          .              .             1.0000   -168000.0000      
22.Mas .IE.2          .              .             1.0000   -155451.9802      
22.Mas .IE.3          .              .             1.0000   -143777.7784      
22.Mas .PA.1          .              .             1.0000   -235200.0000      
22.Mas .PA.2          .              .             1.0000   -218462.3762      
22.Mas .PA.3          .              .             1.0000   -202857.3341      
22.Mas .KI.1          .              .             1.0000   -346500.0000      
22.Mas .KI.2          .              .             1.0000   -322952.9703      
22.Mas .KI.3          .              .             1.0000   -300952.9176      
22.Kus .EU.1          .              .             1.0000         EPS         
22.Kus .EU.2          .              .             1.0000         EPS         
22.Kus .EU.3          .              .             1.0000         EPS         
22.Kus .IE.1          .              .             1.0000         EPS         
22.Kus .IE.2          .              .             1.0000         EPS         
22.Kus .IE.3          .              .             1.0000         EPS         
22.Kus .PA.1          .              .             1.0000         EPS         
22.Kus .PA.2          .              .             1.0000         EPS         
22.Kus .PA.3          .              .             1.0000         EPS         
22.Kus .KI.1          .              .             1.0000         EPS         
22.Kus .KI.2          .              .             1.0000         EPS         
22.Kus .KI.3          .              .             1.0000         EPS         
22.Kos .EU.1          .              .             1.0000   -344400.0000      
22.Kos .EU.2          .              .             1.0000   -318512.0690      
22.Kos .EU.3          .              .             1.0000   -294473.6237      
22.Kos .IE.1          .              .             1.0000   -588000.0000      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/19/17 02:05:06 Page 190
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 437


     VAR u  1 if we use n boats for product j shiping to region k, 0 otherwise

                    LOWER          LEVEL          UPPER         MARGINAL

22.Kos .IE.2          .              .             1.0000   -546217.2414      
22.Kos .IE.3          .              .             1.0000   -507316.6052      
22.Kos .PA.1          .              .             1.0000   -655200.0000      
22.Kos .PA.2          .              .             1.0000   -608818.9655      
22.Kos .PA.3          .              .             1.0000   -565629.2658      
22.Kos .KI.1          .              .             1.0000   -766500.0000      
22.Kos .KI.2          .              .             1.0000   -712696.5517      
22.Kos .KI.3          .              .             1.0000   -662574.5065      
22.Kuv .EU.1          .              .             1.0000    747600.0000      
22.Kuv .EU.2          .              .             1.0000    712696.5517      
22.Kuv .EU.3          .              .             1.0000    679379.6790      
22.Kuv .IE.1          .              .             1.0000    357000.0000      
22.Kuv .IE.2          .              .             1.0000    345341.3793      
22.Kuv .IE.3          .              .             1.0000    333869.1974      
22.Kuv .PA.1          .              .             1.0000    226800.0000      
22.Kuv .PA.2          .              .             1.0000    222889.6552      
22.Kuv .PA.3          .              .             1.0000    218699.0369      
22.Kuv .KI.1          .              .             1.0000     73500.0000      
22.Kuv .KI.2          .              .             1.0000     79112.0690      
22.Kuv .KI.3          .              .             1.0000     83848.7961      
22.Kov .EU.1          .              .             1.0000    726600.0000      
22.Kov .EU.2          .              .             1.0000    693555.8824      
22.Kov .EU.3          .              .             1.0000    661938.4689      
22.Kov .IE.1          .              .             1.0000    420000.0000      
22.Kov .IE.2          .              .             1.0000    407214.7059      
22.Kov .IE.3          .              .             1.0000    394504.9221      
22.Kov .PA.1          .              .             1.0000    289800.0000      
22.Kov .PA.2          .              .             1.0000    285167.6471      
22.Kov .PA.3          .              .             1.0000    280090.4066      
22.Kov .KI.1          .              .             1.0000    136500.0000      
22.Kov .KI.2          .              .             1.0000    141997.0588      
22.Kov .KI.3          .              .             1.0000    146373.6332      
22.Hsel.EU.1          .              .             1.0000    394800.0000      
22.Hsel.EU.2          .              .             1.0000    377103.6585      
22.Hsel.EU.3          .              .             1.0000    360142.5982      
22.Hsel.IE.1          .              .             1.0000    348600.0000      
22.Hsel.IE.2          .              .             1.0000    335257.3171      
22.Hsel.IE.3          .              .             1.0000    322282.6963      
22.Hsel.PA.1          .              .             1.0000    262500.0000      
22.Hsel.PA.2          .              .             1.0000    254484.1463      
22.Hsel.PA.3          .              .             1.0000    246495.2454      
22.Hsel.KI.1          .              .             1.0000    281400.0000      
22.Hsel.KI.2          .              .             1.0000    273460.9756      
22.Hsel.KI.3          .              .             1.0000    265470.2945      
22.Lsel.EU.1          .              .             1.0000    392700.0000      
22.Lsel.EU.2          .              .             1.0000    376725.7282      
22.Lsel.EU.3          .              .             1.0000    361265.8415      
22.Lsel.IE.1          .              .             1.0000    499800.0000      
22.Lsel.IE.2          .              .             1.0000    477250.4854      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/19/17 02:05:06 Page 191
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 437


     VAR u  1 if we use n boats for product j shiping to region k, 0 otherwise

                    LOWER          LEVEL          UPPER         MARGINAL

22.Lsel.IE.3          .              .             1.0000    455638.8943      
22.Lsel.PA.1          .              .             1.0000    262500.0000      
22.Lsel.PA.2          .              .             1.0000    255476.2136      
22.Lsel.PA.3          .              .             1.0000    248329.7358      
22.Lsel.KI.1          .              .             1.0000    216300.0000      
22.Lsel.KI.2          .              .             1.0000    214026.6990      
22.Lsel.KI.3          .              .             1.0000    211203.6302      
22.Pap .EU.1          .              .             1.0000    768600.0000      
22.Pap .EU.2          .              .             1.0000    735836.9565      
22.Pap .EU.3          .              .             1.0000    704246.6630      
22.Pap .IE.1          .              .             1.0000    546000.0000      
22.Pap .IE.2          .              .             1.0000    532867.3913      
22.Pap .IE.3          .              .             1.0000    519227.9075      
22.Pap .PA.1          .              .             1.0000    373800.0000      
22.Pap .PA.2          .              .             1.0000    372110.8696      
22.Pap .PA.3          .              .             1.0000    369109.9890      
22.Pap .KI.1          .              .             1.0000    346500.0000      
22.Pap .KI.2          .              .             1.0000    350426.0870      
22.Pap .KI.3          .              .             1.0000    352410.6112      
23.Mas .EU.1          .              .             1.0000    158400.0000      
23.Mas .EU.2          .              .             1.0000    152300.9901      
23.Mas .EU.3          .              .             1.0000    146398.7531      
23.Mas .IE.1          .              .             1.0000   -198000.0000      
23.Mas .IE.2          .              .             1.0000   -183547.5248      
23.Mas .IE.3          .              .             1.0000   -170088.1173      
23.Mas .PA.1          .              .             1.0000   -272800.0000      
23.Mas .PA.2          .              .             1.0000   -253697.0297      
23.Mas .PA.3          .              .             1.0000   -235873.7408      
23.Mas .KI.1          .              .             1.0000   -396000.0000      
23.Mas .KI.2          .              .             1.0000   -369371.2871      
23.Mas .KI.3          .              .             1.0000   -344479.6760      
23.Kus .EU.1          .              .             1.0000         EPS         
23.Kus .EU.2          .              .             1.0000         EPS         
23.Kus .EU.3          .              .             1.0000         EPS         
23.Kus .IE.1          .              .             1.0000         EPS         
23.Kus .IE.2          .              .             1.0000         EPS         
23.Kus .IE.3          .              .             1.0000         EPS         
23.Kus .PA.1          .              .             1.0000         EPS         
23.Kus .PA.2          .              .             1.0000         EPS         
23.Kus .PA.3          .              .             1.0000         EPS         
23.Kus .KI.1          .              .             1.0000         EPS         
23.Kus .KI.2          .              .             1.0000         EPS         
23.Kus .KI.3          .              .             1.0000         EPS         
23.Kos .EU.1          .              .             1.0000   -391600.0000      
23.Kos .EU.2          .              .             1.0000   -362506.8966      
23.Kos .EU.3          .              .             1.0000   -335477.6618      
23.Kos .IE.1          .              .             1.0000   -660000.0000      
23.Kos .IE.2          .              .             1.0000   -613409.8522      
23.Kos .IE.3          .              .             1.0000   -570019.5169      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/19/17 02:05:06 Page 192
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 437


     VAR u  1 if we use n boats for product j shiping to region k, 0 otherwise

                    LOWER          LEVEL          UPPER         MARGINAL

23.Kos .PA.1          .              .             1.0000   -734800.0000      
23.Kos .PA.2          .              .             1.0000   -683110.8374      
23.Kos .PA.3          .              .             1.0000   -634963.4685      
23.Kos .KI.1          .              .             1.0000   -858000.0000      
23.Kos .KI.2          .              .             1.0000   -798112.3153      
23.Kos .KI.3          .              .             1.0000   -742306.8961      
23.Kuv .EU.1          .              .             1.0000    774400.0000      
23.Kuv .EU.2          .              .             1.0000    738398.0296      
23.Kuv .EU.3          .              .             1.0000    704022.0966      
23.Kuv .IE.1          .              .             1.0000    352000.0000      
23.Kuv .IE.2          .              .             1.0000    341195.0739      
23.Kuv .IE.3          .              .             1.0000    330495.2416      
23.Kuv .PA.1          .              .             1.0000    211200.0000      
23.Kuv .PA.2          .              .             1.0000    208794.0887      
23.Kuv .PA.3          .              .             1.0000    205986.2899      
23.Kuv .KI.1          .              .             1.0000     44000.0000      
23.Kuv .KI.2          .              .             1.0000     51992.6108      
23.Kuv .KI.3          .              .             1.0000     58932.8624      
23.Kov .EU.1          .              .             1.0000    752400.0000      
23.Kov .EU.2          .              .             1.0000    718386.2745      
23.Kov .EU.3          .              .             1.0000    685825.7459      
23.Kov .IE.1          .              .             1.0000    418000.0000      
23.Kov .IE.2          .              .             1.0000    406115.6863      
23.Kov .IE.3          .              .             1.0000    394206.8647      
23.Kov .PA.1          .              .             1.0000    277200.0000      
23.Kov .PA.2          .              .             1.0000    274158.8235      
23.Kov .PA.3          .              .             1.0000    270527.2376      
23.Kov .KI.1          .              .             1.0000    110000.0000      
23.Kov .KI.2          .              .             1.0000    118023.5294      
23.Kov .KI.3          .              .             1.0000    124717.7970      
23.Hsel.EU.1          .              .             1.0000    409200.0000      
23.Hsel.EU.2          .              .             1.0000    390982.9268      
23.Hsel.EU.3          .              .             1.0000    373512.5907      
23.Hsel.IE.1          .              .             1.0000    356400.0000      
23.Hsel.IE.2          .              .             1.0000    343065.8537      
23.Hsel.IE.3          .              .             1.0000    330070.1814      
23.Hsel.PA.1          .              .             1.0000    264000.0000      
23.Hsel.PA.2          .              .             1.0000    256407.3171      
23.Hsel.PA.3          .              .             1.0000    248783.9768      
23.Hsel.KI.1          .              .             1.0000    281600.0000      
23.Hsel.KI.2          .              .             1.0000    274248.7805      
23.Hsel.KI.3          .              .             1.0000    266772.7722      
23.Lsel.EU.1          .              .             1.0000    404800.0000      
23.Lsel.EU.2          .              .             1.0000    388577.6699      
23.Lsel.EU.3          .              .             1.0000    372854.4043      
23.Lsel.IE.1          .              .             1.0000    519200.0000      
23.Lsel.IE.2          .              .             1.0000    495918.4466      
23.Lsel.IE.3          .              .             1.0000    473592.9362      
23.Lsel.PA.1          .              .             1.0000    264000.0000      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/19/17 02:05:06 Page 193
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 437


     VAR u  1 if we use n boats for product j shiping to region k, 0 otherwise

                    LOWER          LEVEL          UPPER         MARGINAL

23.Lsel.PA.2          .              .             1.0000    257496.1165      
23.Lsel.PA.3          .              .             1.0000    250797.3405      
23.Lsel.KI.1          .              .             1.0000    211200.0000      
23.Lsel.KI.2          .              .             1.0000    210014.5631      
23.Lsel.KI.3          .              .             1.0000    208160.2767      
23.Pap .EU.1          .              .             1.0000    796400.0000      
23.Pap .EU.2          .              .             1.0000    762799.5169      
23.Pap .EU.3          .              .             1.0000    730368.2764      
23.Pap .IE.1          .              .             1.0000    550000.0000      
23.Pap .IE.2          .              .             1.0000    538048.7923      
23.Pap .IE.3          .              .             1.0000    525418.1910      
23.Pap .PA.1          .              .             1.0000    365200.0000      
23.Pap .PA.2          .              .             1.0000    365598.5507      
23.Pap .PA.3          .              .             1.0000    364444.8292      
23.Pap .KI.1          .              .             1.0000    330000.0000      
23.Pap .KI.2          .              .             1.0000    336823.1884      
23.Pap .KI.3          .              .             1.0000    341389.7865      

---- VAR b  amount of timber i bought

             LOWER          LEVEL          UPPER         MARGINAL

Mat.1          .        140000.0000        +INF             .          
Mat.2          .        140000.0000        +INF             .          
Mat.3          .        120000.0000        +INF             .          
Kut.1          .        140000.0000        +INF             .          
Kut.2          .        230000.0000        +INF             .          
Kut.3          .        230000.0000        +INF             .          
Kot.1          .         90000.0000        +INF             .          
Kot.2          .         80000.0000        +INF             .          
Kot.3          .         80000.0000        +INF             .          
Mak.1          .        310000.0000        +INF             .          
Mak.2          .        330000.0000        +INF             .          
Mak.3          .        150000.0000        +INF             .          
Kuk.1          .              .            +INF             .          
Kuk.2          .         30000.0000        +INF             .          
Kuk.3          .         30000.0000        +INF             .          
Kok.1          .        570000.0000        +INF             .          
Kok.2          .        590000.0000        +INF             .          
Kok.3          .        380000.0000        +INF             .          

---- VAR Pr  Net profit in each year t

         LOWER          LEVEL          UPPER         MARGINAL

1        -INF       101036.0000        +INF             .          
2        -INF       212115.7344        +INF             .          
3        -INF       251121.7240        +INF             .          
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/19/17 02:05:06 Page 194
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 437


---- VAR Cap  Capacity of machine m in year t

               LOWER          LEVEL          UPPER         MARGINAL

SAW  .1        -INF       100000.0000        +INF             .          
SAW  .2        -INF       100000.0000        +INF             .          
SAW  .3        -INF       100000.0000        +INF             .          
PLY  .1        -INF        90000.0000        +INF             .          
PLY  .2        -INF       100000.0000        +INF             .          
PLY  .3        -INF       100000.0000        +INF             .          
SPULP.1        -INF       100000.0000        +INF             .          
SPULP.2        -INF       100000.0000        +INF             .          
SPULP.3        -INF       100000.0000        +INF             .          
HPULP.1        -INF       150000.0000        +INF             .          
HPULP.2        -INF       150000.0000        +INF             .          
HPULP.3        -INF       150000.0000        +INF             .          
PAPM .1        -INF        80000.0000        +INF             .          
PAPM .2        -INF       150000.0000        +INF             .          
PAPM .3        -INF       150000.0000        +INF             .          


**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
                            41  PROJECTED
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/19/17 02:05:06 Page 195
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
E x e c u t i o n


----    438 VARIABLE z.L                   =   529183.304  the objective

----    438 VARIABLE u.L  1 if we use n boats for product j shiping to region k, 0 otherwise

INDEX 1 = 1

                  1           2           3

Mas .IE       1.000       1.000       1.000
Kus .EU       1.000       1.000       1.000
Kus .IE       1.000       1.000       1.000
Kus .PA       1.000       1.000       1.000
Kus .KI       1.000       1.000       1.000
Kos .EU       1.000       1.000       1.000
Kos .IE       1.000       1.000       1.000
Kos .PA       1.000       1.000       1.000
Kos .KI       1.000
Kuv .IE       1.000       1.000       1.000
Kuv .PA       1.000       1.000       1.000
Kuv .KI       1.000       1.000       1.000
Kov .IE       1.000       1.000       1.000
Kov .PA       1.000       1.000       1.000
Kov .KI       1.000       1.000       1.000
Hsel.EU       1.000       1.000       1.000
Hsel.IE                               1.000
Hsel.PA       1.000       1.000       1.000
Lsel.EU                               1.000
Lsel.PA       1.000       1.000       1.000
Lsel.KI                               1.000
Pap .PA       1.000

INDEX 1 = 2

                  1           2           3

Mas .PA       1.000       1.000       1.000
Mas .KI       1.000       1.000       1.000
Kos .KI                   1.000       1.000
Hsel.KI                               1.000
Lsel.EU                   1.000
Lsel.KI       1.000       1.000
Pap .PA                   1.000       1.000

INDEX 1 = 3

                  1           2           3

Kov .EU                   1.000       1.000
Hsel.IE                   1.000
Lsel.EU       1.000
Pap .IE       1.000
Pap .KI       1.000
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/19/17 02:05:06 Page 196
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
E x e c u t i o n


        438 VARIABLE u.L  1 if we use n boats for product j shiping to region k, 0 otherwise

INDEX 1 = 4

                  1           2           3

Kov .EU       1.000
Hsel.IE       1.000
Hsel.KI       1.000       1.000
Pap .KI                   1.000       1.000

INDEX 1 = 5

                  1           2           3

Mas .EU                               1.000
Pap .EU       1.000
Pap .IE                   1.000       1.000

INDEX 1 = 6

                  1           2

Mas .EU       1.000       1.000
Kuv .EU       1.000

INDEX 1 = 8

                  2           3

Lsel.IE                   1.000
Pap .EU       1.000       1.000

INDEX 1 = 9

                  2           3

Kuv .EU       1.000       1.000

INDEX 1 = 11

                  1           2

Lsel.IE       1.000       1.000


----    438 VARIABLE r.L  1 if we buy n boats of timber i, 0 otherwise

                  1           2           3

1  .Kuk       1.000
4  .Kuk                   1.000       1.000
9  .Kot                   1.000       1.000
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/19/17 02:05:06 Page 197
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
E x e c u t i o n


        438 VARIABLE r.L  1 if we buy n boats of timber i, 0 otherwise

                  1           2           3

10 .Kot       1.000
13 .Mat                               1.000
15 .Mat       1.000       1.000
15 .Kut       1.000
16 .Mak                               1.000
24 .Kut                   1.000       1.000
32 .Mak       1.000
34 .Mak                   1.000
39 .Kok                               1.000
58 .Kok       1.000
60 .Kok                   1.000


----    438 VARIABLE y.L  Cubic meters produced of product j

               1           2           3

Mas    70000.000   70000.000   60000.000
Kos                10000.000   10000.000
Kuv    50000.000   80000.000   80000.000
Kov    30000.000   20000.000   20000.000
Hsel   76000.000   80000.000   40000.000
Lsel  146000.000  150000.000  100000.000
Pap    80000.000  150000.000  150000.000


----    438 VARIABLE s.L  amount of timber i used to make products

              1           2           3

Mat  140000.000  140000.000  120000.000
Kut  140000.000  224000.000  224000.000
Kot   84000.000   76000.000   76000.000
Mak  308800.000  328000.000  144000.000
Kuk               22000.000   22000.000
Kok  565200.000  590000.000  380000.000


----    438 VARIABLE b.L  amount of timber i bought

              1           2           3

Mat  140000.000  140000.000  120000.000
Kut  140000.000  230000.000  230000.000
Kot   90000.000   80000.000   80000.000
Mak  310000.000  330000.000  150000.000
Kuk               30000.000   30000.000
Kok  570000.000  590000.000  380000.000

GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/19/17 02:05:06 Page 198
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
E x e c u t i o n


----    438 VARIABLE Cap.L  Capacity of machine m in year t

                1           2           3

SAW    100000.000  100000.000  100000.000
PLY     90000.000  100000.000  100000.000
SPULP  100000.000  100000.000  100000.000
HPULP  150000.000  150000.000  150000.000
PAPM    80000.000  150000.000  150000.000



EXECUTION TIME       =        0.048 SECONDS      3 MB  24.8.1 r59919 DEX-DEG


USER: Course License Spring 2017                     A161219:0249AN-GEN
      Management Engineering, Technical University of Denmark    DC8756
      License for teaching and research at degree granting institutions


**** FILE SUMMARY

Input      /Users/AtliPall/AHI/batli.gms
Output     /Users/AtliPall/AHI/batli.lst
