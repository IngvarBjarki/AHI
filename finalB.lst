GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                   01/19/17 02:47:17 Page 1
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


   1  * FinalA.gms
   2  *
   4  option iterlim=999999999;     // avoid limit on iterations
   5  option reslim=300;            // timelimit for solver in sec.
   6  option optcr=0.0;             // gap tolerance
   7  option solprint=ON;           // include solution print in .lst file
   8  option limrow=100;            // limit number of rows in .lst file
   9  option limcol=100;            // limit number of columns in .lst file
  10  //--------------------------------------------------------------------
  11   
  12  SET timber 'raw material timber bought by Metsa Oy'
  13  /   Mat, Kut, Kot, Mak, Kuk, Kok   /;
  14  SET products 'Products made by Metsa Oy'
  15  /   Mas, Kus, Kos, Kuv, Kov, Hsel, Lsel, Pap    /;
  16  SET destinations 'destinations where Metsa sells products'
  17  /   EU, IE, PA, KI  /;
  18  SET p1(products) 'normal products p1 produced'
  19  / Mas, Kus, Kos, Kuv, Kov  /;
  20  SET p2(products) 'products p2 possible to make from leftovers'
  21  /   Hsel, Lsel, Pap     /;
  22  SET p3(products) 'Pulp products p3 which can make paper'
  23  /   HSEL, LSEL /;
  24  SET n 'number of barges n bought'
  25  /   1*107  /;
  26  SET l 'number of barges l sold'
  27  / 1*23 /;
  28  SET v 'Set for profit calculations'
  29  /   ATO, DPC, SP, FC, PROFIT /;
  30  SET t 'years'
  31  / 1, 2, 3 /;
  32   
  33   
  34   
  35  SET m 'production lines'
  36  /   SAW, PLY, SPULP, HPULP, PAPM /;
  37   
  38  ALIAS(timber, i);
  39  ALIAS(products, j);
  40  ALIAS(destinations, k);
  41   
  42  PARAMETERS
  43   
  44   
  45  c(products) 'the cost of producing each product, mesured in erous/1000m^3'
  46      /   Mas   550
  47          Kus   500
  48          Kos   450
  49          Kuv   2500
  50          Kov   2600
  51          Hsel  820
  52          Lsel  800
  53          Pap   1700  /
  54   
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                   01/19/17 02:47:17 Page 2
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


  55   
  56  alpha(timber) 'alpha cost parameters by timber assortments'
  57      /   MAT     190
  58          KUT     150
  59          KOT     120
  60          MAK     180
  61          KUK     150
  62          KOK     150 /
  63   
  64  beta(timber) 'Beta cost parameter by timber assortments'
  65      /   MAT     1.0
  66          KUT     0.5
  67          KOT     3.0
  68          MAK     0.2
  69          KUK     0.3
  70          KOK     0.2 /
  71   
  72  CAP0(m) 'Starting capacity'
  73      /   SAW     100000
  74          PLY     90000
  75          SPULP   100000
  76          HPULP   150000
  77          PAPM    80000  /
  78   
  79  demand_growth(j) 'demand growth for product j'
  80  /   MAS    1.010
  81       KUS    1.008
  82       KOS    1.015
  83       KUV    1.015
  84       KOV    1.020
  85       HSEL  1.025
  86       LSEL   1.030
  87       PAP     1.035  /
  88   
  89   
  90  FCOST(m) 'Fixed cost'
  91      /   SAW     100
  92          PLY     300
  93          SPULP   500
  94          HPULP   500
  95          PAPM    700 /
  96   
  97  MaxCap(m)
  98     /SAW     150000
  99      PLY     135000
 100      SPULP   200000
 101      HPULP   300000
 102      PAPM    160000 /;
 103   
 104   
 105   
 106   
 107   
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                   01/19/17 02:47:17 Page 3
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


 108   
 109  TABLE table2(j,i)'Cubic-meters of material i used in cubic-meter of product j'
 110                  MAT     KUT     KOT     MAK     KUK     KOK
 111          MAS     2.0     0.0     0.0     -0.8    0.0     0.0
 112          KUS     0.0     2.0     0.0     0.0     -0.8    0.0
 113          KOS     0.0     0.0     2.0     0.0     0.0     -0.8
 114          KUV     0.0     2.8     0.0     0.0     -1.6    0.0
 115          KOV     0.0     0.0     2.8     0.0     0.0     -1.6
 116          HSEL    0.0     0.0     0.0     4.8     0.0     0.0
 117          LSEL    0.0     0.0     0.0     0.0     0.0     4.2
 118          PAP     0.0     0.0     0.0     0.0     1.0     0.0      ;
 119   
 120   
 121   
 122  TABLE Prodinm(m,j) 'What products j are in what machines m'
 123          MAS     KUS     KOS     KUV     KOV     HSEL    LSEL    PAP
 124  SAW       1       1       1       0       0        0       0      0
 125  PLY       0       0       0       1       1        0       0      0
 126  SPULP     0       0       0       0       0        1       0      0
 127  HPULP     0       0       0       0       0        0       1      0
 128  PAPM      0       0       0       0       0        0       0      1;
 129   
 130   
 131   
 132   
 133  TABLE GAMMA(j,k) 'Gamma coefficent for selling product j in region k'
 134                    EU      IE      PA      KI
 135           MAS     1600    1300    1400    1500
 136           KUS     1400    1200    1300    1400
 137           KOS     1300    1400    1500    1600
 138           KUV     4400    3800    3600    3500
 139           KOV     4300    4100    3900    3800
 140           HSEL    2300    2500    2300    2600
 141           LSEL    2500    2800    2300    2500
 142           PAP     4500    4700    4300    4800 ;
 143   
 144   
 145  TABLE DELTA(j,k) 'Delta coefficient for selling product j in region k'
 146                   EU      IE      PA      KI
 147           MAS     4       10      12      15
 148           KUS     4       10      12      15
 149           KOS     14      20      22      25
 150           KUV     4       10      12      15
 151           KOV     4       10      12      15
 152           HSEL    2       4       5       6
 153           LSEL    3       2       5       7
 154           PAP     4       10      12      15 ;
 155   
 156   
 157   
 158   
 159   
 160  TABLE q(l,j) 'Options of amount l to be sold of product j'
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                   01/19/17 02:47:17 Page 4
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


 161     MAS     KOS     KUV     KOV    HSEL   LSEL   PAP
 162  1  0       0       0       0      0      0      0
 163  2  10000   10000   10000   10000  10000  10000  10000
 164  3  20000   20000   20000   20000  20000  20000  20000
 165  4  30000   30000   30000   30000  30000  30000  30000
 166  5  40000   40000   40000   40000  40000  40000  40000
 167  6  50000   50000   50000   50000  50000  50000  50000
 168  7  60000   60000   60000   60000  60000  60000  60000
 169  8  70000   70000   70000   70000  70000  70000  70000
 170  9  80000   80000   80000   80000  80000  80000  80000
 171  10 90000   90000   90000   90000  90000  90000  90000
 172  11 100000  100000  100000  100000 100000 100000 100000
 173  12 110000  110000  110000  110000 110000 110000 110000
 174  13 120000  120000  120000  120000 120000 120000 120000
 175  14 130000  130000  130000  130000 130000 130000 130000
 176  15 140000  140000  140000  140000 140000 140000 140000
 177  16 150000  150000  150000  150000 150000 150000 150000
 178  17 160000  160000  160000  160000 160000 160000 160000
 179  18 170000  170000  170000  170000 170000 170000 170000
 180  19 180000  180000  180000  180000 180000 180000 180000
 181  20 190000  190000  190000  190000 190000 190000 190000
 182  21 200000  200000  200000  200000 200000 200000 200000
 183  22 210000  210000  210000  210000 210000 210000 210000
 184  23 220000  220000  220000  220000 220000 220000 220000 ;
 185   
 186   
 187   
 188  TABLE h(n,i) 'Options of amount n to be bought of material i'
 189      Mat     KUT     KOT     MAK     KUK     KOK
 190  1   0       0       0       0       0       0
 191  2   10000   10000   10000   10000   10000   10000
 192  3   20000   20000   20000   20000   20000   20000
 193  4   30000   30000   30000   30000   30000   30000
 194  5   40000   40000   40000   40000   40000   40000
 195  6   50000   50000   50000   50000   50000   50000
 196  7   60000   60000   60000   60000   60000   60000
 197  8   70000   70000   70000   70000   70000   70000
 198  9   80000   80000   80000   80000   80000   80000
 199  10  90000   90000   90000   90000   90000   90000
 200  11  100000  100000  100000  100000  100000  100000
 201  12  110000  110000  110000  110000  110000  110000
 202  13  120000  120000  120000  120000  120000  120000
 203  14  130000  130000  130000  130000  130000  130000
 204  15  140000  140000  140000  140000  140000  140000
 205  16  150000  150000  150000  150000  150000  150000
 206  17  160000  160000  160000  160000  160000  160000
 207  18  170000  170000  170000  170000  170000  170000
 208  19  180000  180000  180000  180000  180000  180000
 209  20  190000  190000  190000  190000  190000  190000
 210  21  200000  200000  200000  200000  200000  200000
 211  22  210000  210000  210000  210000  210000  210000
 212  23  220000  220000  220000  220000  220000  220000
 213  24  230000  230000  230000  230000  230000  230000
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                   01/19/17 02:47:17 Page 5
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


 214  25  240000  240000  240000  240000  240000  240000
 215  26  250000  250000  250000  250000  250000  250000
 216  27  260000  260000  260000  260000  260000  260000
 217  28  270000  270000  270000  270000  270000  270000
 218  29  280000  280000  280000  280000  280000  280000
 219  30  290000  290000  290000  290000  290000  290000
 220  31  300000  300000  300000  300000  300000  300000
 221  32  310000  310000  310000  310000  310000  310000
 222  33  320000  320000  320000  320000  320000  320000
 223  34  330000  330000  330000  330000  330000  330000
 224  35  340000  340000  340000  340000  340000  340000
 225  36  350000  350000  350000  350000  350000  350000
 226  37  360000  360000  360000  360000  360000  360000
 227  38  370000  370000  370000  370000  370000  370000
 228  39  380000  380000  380000  380000  380000  380000
 229  40  390000  390000  390000  390000  390000  390000
 230  41  400000  400000  400000  400000  400000  400000
 231  42  410000  410000  410000  410000  410000  410000
 232  43  420000  420000  420000  420000  420000  420000
 233  44  430000  430000  430000  430000  430000  430000
 234  45  440000  440000  440000  440000  440000  440000
 235  46  450000  450000  450000  450000  450000  450000
 236  47  460000  460000  460000  460000  460000  460000
 237  48  470000  470000  470000  470000  470000  470000
 238  49  480000  480000  480000  480000  480000  480000
 239  50  490000  490000  490000  490000  490000  490000
 240  51  500000  500000  500000  500000  500000  500000
 241  52  510000  510000  510000  510000  510000  510000
 242  53  520000  520000  520000  520000  520000  520000
 243  54  530000  530000  530000  530000  530000  530000
 244  55  540000  540000  540000  540000  540000  540000
 245  56  550000  550000  550000  550000  550000  550000
 246  57  560000  560000  560000  560000  560000  560000
 247  58  570000  570000  570000  570000  570000  570000
 248  59  580000  580000  580000  580000  580000  580000
 249  60  590000  590000  590000  590000  590000  590000
 250  61  600000  600000  600000  600000  600000  600000
 251  62  610000  610000  610000  610000  610000  610000
 252  63  620000  620000  620000  620000  620000  620000
 253  64  630000  630000  630000  630000  630000  630000
 254  65  640000  640000  640000  640000  640000  640000
 255  66  650000  650000  650000  650000  650000  650000
 256  67  660000  660000  660000  660000  660000  660000
 257  68  670000  670000  670000  670000  670000  670000
 258  69  680000  680000  680000  680000  680000  680000
 259  70  690000  690000  690000  690000  690000  690000
 260  71  700000  700000  700000  700000  700000  700000
 261  72  710000  710000  710000  710000  710000  710000
 262  73  720000  720000  720000  720000  720000  720000
 263  74  730000  730000  730000  730000  730000  730000
 264  75  740000  740000  740000  740000  740000  740000
 265  76  750000  750000  750000  750000  750000  750000
 266  77  760000  760000  760000  760000  760000  760000
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                   01/19/17 02:47:17 Page 6
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


 267  78  770000  770000  770000  770000  770000  770000
 268  79  780000  780000  780000  780000  780000  780000
 269  80  790000  790000  790000  790000  790000  790000
 270  81  800000  800000  800000  800000  800000  800000
 271  82  810000  810000  810000  810000  810000  810000
 272  83  820000  820000  820000  820000  820000  820000
 273  84  830000  830000  830000  830000  830000  830000
 274  85  840000  840000  840000  840000  840000  840000
 275  86  850000  850000  850000  850000  850000  850000
 276  87  860000  860000  860000  860000  860000  860000
 277  88  870000  870000  870000  870000  870000  870000
 278  89  880000  880000  880000  880000  880000  880000
 279  90  890000  890000  890000  890000  890000  890000
 280  91  900000  900000  900000  900000  900000  900000
 281  92  910000  910000  910000  910000  910000  910000
 282  93  920000  920000  920000  920000  920000  920000
 283  94  930000  930000  930000  930000  930000  930000
 284  95  940000  940000  940000  940000  940000  940000
 285  96  950000  950000  950000  950000  950000  950000
 286  97  960000  960000  960000  960000  960000  960000
 287  98  970000  970000  970000  970000  970000  970000
 288  99  980000  980000  980000  980000  980000  980000
 289  100 990000  990000  990000  990000  990000  990000
 290  101 1000000 1000000 1000000 1000000 1000000 1000000
 291  102 1010000 1010000 1010000 1010000 1010000 1010000
 292  103 1020000 1020000 1020000 1020000 1020000 1020000
 293  104 1030000 1030000 1030000 1030000 1030000 1030000
 294  105 1040000 1040000 1040000 1040000 1040000 1040000
 295  106 1050000 1050000 1050000 1050000 1050000 1050000
 296  107 1060000 1060000 1060000 1060000 1060000 1060000 ;
 297   
 298   
 299   
 300  SCALAR fuel_price 'fuel wood suitable for producing energy at value of 40'
 301           /40/;
 302  SCALAR PAP_Pro  'Proportion of HSEL and LSEL needed for PAP'
 303           /0.2/;
 304  SCALAR fuel_amount 'the amount of fuel we gain by production timbers in p1'
 305           /-0.2/
 306   
 307   
 308  VARIABLES
 309  z 'the objective'
 310  *h(i) 'Cubic meters of timber i' // getum breytt í parameter og margfaldað með r(i,n) fyrir balance
 311  y(j,t) 'Cubic meters produced of product j'//total timber i for used in product j -- make constraint to find outu how many products..
 312  *q(j, k) 'Cubic meters of product j sold to destination k' // getum breytt í parameter og margfaldað með u
 313  //s(i)'Cubic meters of timber i in stock' // should be integer since all member of the constraint are integer
 314  s(i,t) 'amount of timber i used to make products'
 315  r(n, i,t) '1 if we buy n boats of timber i, 0 otherwise'
 316  u(l,j,k,t) '1 if we use n boats for product j shiping to region k, 0 otherwise'
 317  b(i,t) 'amount of timber i bought'
 318  fxC(t) 'Fixed cost of machine m in year t'
 319  Pr(t) 'Net profit in each year t'
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                   01/19/17 02:47:17 Page 7
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


 320  Cap(m,t) 'Capacity of machine m in year t'
 321   
 322  *EXCECUTIVE-OVERVIEW(V,t) 'Overview over profit calculation parameters v in each year t'
 323  ;
 324   
 325  // y/table --> product made
 326  INTEGER VARIABLES y;
 327  BINARY VARIABLES u, r;
 328  POSITIVE VARIABLES s, b;
 329   
 330  y.up(j,t) = 1060000;
 331   
 332   
 333  EQUATIONS
 334   
 335  obj  'Maximum gross profit'
 336   
 337   
 338   
 339  //=============================================ENOUGH TIMBER
 340  timber_used(i,t) ' amount of  timber i used to make  product j in year t'
 341  prod_starved(i,t)  'ensure that production can not be starved in each year'
 342  //USAGE(i)     'We have to buy material (or produce as byproducts) to be able to produce products'
 343  Sold_Prod(j,t)   'we cant sell more than we produce in each year'
 344  timber_bought(i,t) 'amount of timber i bought in each year'
 345   
 346  //============================== ONLY BUY ONE NUMBER OF BARGERS FOR EACH TIMBER i
 347  Barges_buy(i,t)  'ensure we only pick one value n for barges for each timber i'
 348  Barges_sell(j, k,t)  'ensure we only pick one value  n for barges for each product to each city'
 349   
 350  //=====================================CAPACITYS FOR PRODUCTION
 351  //Capacity1(m,t) 'Capacity goes up if we produce over the capacity'
 352  Capacity2(m,t) 'Make sure that the capacity does not go down'
 353  MaxCapacity(m,t) 'Make sure we dont go over the maximum capacity'
 354  //CapStart(m,t)   'Make sure the starting capacity is right'
 355   
 356  // =====================  PROPORTION OF HSEL AND LSEL NEEDED FOR PAP
 357  PAP_HSEL(t)     'Proportion needed of HSEL for PAP'
 358  PAP_LSEL(t)     'Proportion needed of LSEL for PAP'
 359  PULP_Bal(p3,t)     'Cant produce paper without pulp'
 360   
 361  // =========ADD FIXED COST FOR INCREASED CAPACITY========== //
 362  *FixedCost(t) 'Fixed cost of machine m in year t'
 363   
 364  // =====PROFIT(OLD OBJECTIVE FUNCTION)=======//
 365  PROFIT(t) 'Profit is what we gain minus what we spend'
 366   
 367  Capacity3(m,t) 'safdasd'
 368   
 369  // ====Overview====//
 370  ExeOT 'Excecutive overview table'
 371  ;
 372   
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                   01/19/17 02:47:17 Page 8
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


 373   
 374   
 375  obj ..
 376   
 377          Z =e= sum(t, power(0.95, ord(t)-1)*Pr(t));
 378   
 379  //==========================ENSURE WE HAVE ENOUGH TIMBER==================================
 380  timber_used(i,t) ..  sum(j, y(j,t)*table2(j, i)) =e= s(i,t);
 381  prod_starved(i,t) .. sum(n, r(n, i,t)*h(n, i)) =g= s(i,t);
 382  //Sold_Prod(j,t) .. sum((l,k), q(l,j)*u(l,j,k,t)) =l= y(j,t);
 383  Sold_Prod(j,t) .. sum((l,k), q(l,j)*u(l,j,k,t)) =l= y(j,t);
 384  //USAGE(i) .. sum(j, y(j) * table2(j,i)) =l= sum(n, h(n,i) * r(n,i));
 385  timber_bought(i,t) .. b(i,t) =e= sum(n, r(n, i,t)*h(n, i));
 386   
 387  //=================== ONLY BUY ONE NUMBER OF BARGERS FOR EACH TIMBER i ========================
 388  Barges_buy(i,t) ..  sum( n,r(n,i,t)) =E= 1;
 389  Barges_sell(j, k,t) .. sum(l, u(l, j, k,t)) =E= 1;
 390   
 391   
 392  //=============================== CAPACITYS FOR PRODUCTION =============================
 393   
 394   
 395  //Capacity1(m,t).. Cap(m,t) =g= Cap(m,t-1)+(sum(j, y(j,t)*Prodinm(m,j))-Cap(m,t-1));
 396  Capacity2(m,t).. Cap(m,t-1) + Cap0(m)$(ord(t)=1) =g= sum(j, y(j,t)*Prodinm(m,j));
 397  Capacity3(m,t).. Cap(m,t) =g=  Cap(m,t-1) + Cap0(m)$(ord(t)=1);
 398   
 399   
 400  MaxCapacity(m,t).. Cap(m,t) =l= MaxCap(m);
 401  //CapStart(m,t).. Cap(m,"1") =e= Cap0(m);
 402   
 403   
 404   
 405  // =====================  PROPORTION OF HSEL AND LSEL NEEDED FOR PAP ===========
 406  PAP_HSEL(t)..  PAP_Pro*y("PAP",t) =l= y("HSEL",t);
 407  PAP_LSEL(t)..  PAP_Pro*y("PAP",t) =l= y("LSEL",t);
 408  PULP_Bal(p3,t) .. sum((l,k), u(l,p3,k,t)*q(l,p3)) + PAP_Pro*y("PAP",t) =l= y(P3,t);
 409   
 410  // =========ADD FIXED COST FOR INCREASED CAPACITY========== //
 411   
 412   
 413   
 414  // =====PROFIT(OLD OBJECTIVE FUNCTION)=======//
 415   
 416  PROFIT(t).. Pr(t) =e=  (sum((k,j), (GAMMA(j,k)/1000) * sum(l, q(l,j)*u(l,j,k,t)))
 417  - sum((k,j), (DELTA(j,k)/(1000*1000)) * sum(l, q(l,j)*q(l,j) * u(l,j,k,t))/power(demand_growth(j), ord(t)-1)))   //Amount sold times sellingprice
 418   
 419                      - sum(i, ALPHA(i)/1000 * sum(n, h(n,i)*r(n,i,t))) - sum(i, BETA(i)/(1000*1000) * sum(n, h(n,i)*h(n,i) * r(n,i,t)))                    //Amount bought times buying price
 420                      + sum(p1, y(p1,t)*fuel_amount*(-fuel_price/1000))                                                               //Amount of fuel produced times selling price of fuel
 421                      + sum(i, (b(i,t)-s(i,t))*ALPHA(i)/1000)                                                                                        //Amount of extra material times its selling price
 422                      - sum(j, y(j,t)*c(j)/1000)
 423                      - sum(m, Cap(m,t)*FCost(m)/1000)                                                                                      //Amount of produced products times the production cost
 424                      ;
 425   
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                   01/19/17 02:47:17 Page 9
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


 426   
 427  // =======Overview======== //
 428  *ExeOT.. EXCECUTIVE-OVERVIEW(V,t) =e=
 429  MODEL final /all/;
 430  Solve final using mip maxmizing Z;
****                                   $71,256
**** The following MIP errors were detected in model final:
****  71 ExeOT is an undefined equation
 431  DISPLAY z.l, u.l, r.l, y.l, s.l, b.l, Cap.l, pr.l;
 432   
 433   
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/19/17 02:47:17 Page 10
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Error Messages


 71  The symbol shown has been declared as an equation, but no
        Symbolic equation (..) was found. hint - look for commas in the
        Documentation text for the equations. use quotes around the
        Text or eliminate the commas.
256  Error(s) in analyzing solve statement. More detail appears
     Below the solve statement above

**** 2 ERROR(S)   0 WARNING(S)


COMPILATION TIME     =        0.015 SECONDS      3 MB  24.8.1 r59919 DEX-DEG


USER: Course License Spring 2017                     A161219:0249AN-GEN
      Management Engineering, Technical University of Denmark    DC8756
      License for teaching and research at degree granting institutions


**** FILE SUMMARY

Input      /Users/AtliPall/AHI/finalB.gms
Output     /Users/AtliPall/AHI/finalB.lst

**** USER ERROR(S) ENCOUNTERED
