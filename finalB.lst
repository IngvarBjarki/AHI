GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                   01/18/17 22:25:36 Page 1
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


   1  * FinalA.gms
   2  *
   4  option iterlim=999999999;     // avoid limit on iterations
   5  option reslim=300;            // timelimit for solver in sec.
   6  option optcr=0.0;             // gap tolerance
   7  option solprint=ON;           // include solution print in .lst file
   8  option limrow=100;            // limit number of rows in .lst file
   9  option limcol=100;            // limit number of columns in .lst file
  10  //--------------------------------------------------------------------
  11   
  12  SET timber 'raw material timber bought by Metsa Oy'
  13  /   Mat, Kut, Kot, Mak, Kuk, Kok   /;
  14  SET products 'Products made by Metsa Oy'
  15  /   Mas, Kus, Kos, Kuv, Kov, Hsel, Lsel, Pap    /;
  16  SET destinations 'destinations where Metsa sells products'
  17  /   EU, IE, PA, KI  /;
  18  SET p1(products) 'normal products p1 produced'
  19  / Mas, Kus, Kos, Kuv, Kov  /;
  20  SET p2(products) 'products p2 possible to make from leftovers'
  21  /   Hsel, Lsel, Pap     /;
  22  SET p3(products) 'Pulp products p3 which can make paper'
  23  /   HSEL, LSEL /;
  24  SET n 'number of barges n bought'
  25  /   1*107  /;
  26  SET l 'number of barges l sold'
  27  / 1*23 /;
  28  SET v 'Set for profit calculations'
  29  /   ATO, DPC, SP, FC, PROFIT /;
  30  SET t 'years'
  31  / 1, 2, 3 /;
  32   
  33   
  34      SET SAWm(products)
  35          / MAS, KUS, KOS /;
  36      SET PLYm(products)
  37          / KUV, KOV /;
  38      SET SPULPm(products)
  39          /HSEL/;
  40      SET HPULPm(products)
  41          /LSEL/;
  42      SET PAPm(Products)
  43          /PAP/;
  44   
  45  SET m 'production lines'
  46  /   SAW, PLY, SPULP, HPULP, PAP /;
  47   
  48  ALIAS(timber, i);
  49  ALIAS(products, j);
  50  ALIAS(destinations, k);
  51   
  52  PARAMETERS
  53   
  54   
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                   01/18/17 22:25:36 Page 2
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


  55  c(products) 'the cost of producing each product, mesured in erous/1000m^3'
  56      /   Mas   550
  57          Kus   500
  58          Kos   450
  59          Kuv   2500
  60          Kov   2600
  61          Hsel  820
  62          Lsel  800
  63          Pap   1700  /
  64   
  65   
  66  alpha(timber) 'alpha cost parameters by timber assortments'
  67      /   MAT     190
  68          KUT     150
  69          KOT     120
  70          MAK     180
  71          KUK     150
  72          KOK     150 /
  73   
  74  beta(timber) 'Beta cost parameter by timber assortments'
  75      /   MAT     1.0
  76          KUT     0.5
  77          KOT     3.0
  78          MAK     0.2
  79          KUK     0.3
  80          KOK     0.2 /
  81   
  82  CAP0(m) 'Starting capacity'
  83      /   SAW     100000
  84          PLY     90000
  85          SPULP   100000
  86          HPULP   150000
  87          PAP     80000  /
  88   
  89  FCOST(m) 'Fixed cost'
  90      /   SAW     100
  91          PLY     300
  92          SPULP   500
  93          HPULP   500
  94          PAP     700 /
  95   
  96  MaxCap(m)
  97     /SAW     150000
  98      PLY     135000
  99      SPULP   200000
 100      HPULP   300000
 101      PAP     160000 /;
 102   
 103   
 104   
 105   
 106  TABLE table2(j,i)'Cubic-meters of material i used in cubic-meter of product j'
 107                  MAT     KUT     KOT     MAK     KUK     KOK
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                   01/18/17 22:25:36 Page 3
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


 108          MAS     2.0     0.0     0.0     -0.8    0.0     0.0
 109          KUS     0.0     2.0     0.0     0.0     -0.8    0.0
 110          KOS     0.0     0.0     2.0     0.0     0.0     -0.8
 111          KUV     0.0     2.8     0.0     0.0     -1.6    0.0
 112          KOV     0.0     0.0     2.8     0.0     0.0     -1.6
 113          HSEL    0.0     0.0     0.0     4.8     0.0     0.0
 114          LSEL    0.0     0.0     0.0     0.0     0.0     4.2
 115          PAP     0.0     0.0     0.0     0.0     1.0     0.0      ;
 116   
 117   
 118  *TABLE table3(p2, p3) 'timber p3 needed for production of product p2'
 119  *                     Mak    Kuk     Kok   Hsel    Lsel
 120  *        Hsel      4.8      0.0      0.0      0.0      0.0
 121  *        Lsel       0.0      0.0      4.2      0.0      0.0
 122  *        Pap       0.0      1.0       0.0     0.2      0.2;
 123   
 124  TABLE Prodinm(m,j) 'What products j are in what machines m'
 125          MAS     KUS     KOS     KUV     KOV     HSEL    LSEL    PAP
 126  SAW       1       1       1       0       0        0       0      0
 127  PLY       0       0       0       1       1        0       0      0
 128  SPULP     0       0       0       0       0        1       0      0
 129  HPULP     0       0       0       0       0        0       1      0
 130  PAP       0       0       0       0       0        0       0      1;
 131   
 132   
 133   
 134   
 135  TABLE GAMMA(j,k) 'Gamma coefficent for selling product j in region k'
 136                    EU      IE      PA      KI
 137           MAS     1600    1300    1400    1500
 138           KUS     1400    1200    1300    1400
 139           KOS     1300    1400    1500    1600
 140           KUV     4400    3800    3600    3500
 141           KOV     4300    4100    3900    3800
 142           HSEL    2300    2500    2300    2600
 143           LSEL    2500    2800    2300    2500
 144           PAP     4500    4700    4300    4800 ;
 145   
 146   
 147  TABLE DELTA(j,k) 'Delta coefficient for selling product j in region k'
 148                   EU      IE      PA      KI
 149           MAS     4       10      12      15
 150           KUS     4       10      12      15
 151           KOS     14      20      22      25
 152           KUV     4       10      12      15
 153           KOV     4       10      12      15
 154           HSEL    2       4       5       6
 155           LSEL    3       2       5       7
 156           PAP     4       10      12      15 ;
 157   
 158   
 159   
 160   
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                   01/18/17 22:25:36 Page 4
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


 161   
 162  TABLE q(l,j) 'Options of amount l to be sold of product j'
 163     MAS     KOS     KUV     KOV    HSEL   LSEL   PAP
 164  1  0       0       0       0      0      0      0
 165  2  10000   10000   10000   10000  10000  10000  10000
 166  3  20000   20000   20000   20000  20000  20000  20000
 167  4  30000   30000   30000   30000  30000  30000  30000
 168  5  40000   40000   40000   40000  40000  40000  40000
 169  6  50000   50000   50000   50000  50000  50000  50000
 170  7  60000   60000   60000   60000  60000  60000  60000
 171  8  70000   70000   70000   70000  70000  70000  70000
 172  9  80000   80000   80000   80000  80000  80000  80000
 173  10 90000   90000   90000   90000  90000  90000  90000
 174  11 100000  100000  100000  100000 100000 100000 100000
 175  12 110000  110000  110000  110000 110000 110000 110000
 176  13 120000  120000  120000  120000 120000 120000 120000
 177  14 130000  130000  130000  130000 130000 130000 130000
 178  15 140000  140000  140000  140000 140000 140000 140000
 179  16 150000  150000  150000  150000 150000 150000 150000
 180  17 160000  160000  160000  160000 160000 160000 160000
 181  18 170000  170000  170000  170000 170000 170000 170000
 182  19 180000  180000  180000  180000 180000 180000 180000
 183  20 190000  190000  190000  190000 190000 190000 190000
 184  21 200000  200000  200000  200000 200000 200000 200000
 185  22 210000  210000  210000  210000 210000 210000 210000
 186  23 220000  220000  220000  220000 220000 220000 220000 ;
 187   
 188   
 189   
 190  TABLE h(n,i) 'Options of amount n to be bought of material i'
 191      Mat     KUT     KOT     MAK     KUK     KOK
 192  1   0       0       0       0       0       0
 193  2   10000   10000   10000   10000   10000   10000
 194  3   20000   20000   20000   20000   20000   20000
 195  4   30000   30000   30000   30000   30000   30000
 196  5   40000   40000   40000   40000   40000   40000
 197  6   50000   50000   50000   50000   50000   50000
 198  7   60000   60000   60000   60000   60000   60000
 199  8   70000   70000   70000   70000   70000   70000
 200  9   80000   80000   80000   80000   80000   80000
 201  10  90000   90000   90000   90000   90000   90000
 202  11  100000  100000  100000  100000  100000  100000
 203  12  110000  110000  110000  110000  110000  110000
 204  13  120000  120000  120000  120000  120000  120000
 205  14  130000  130000  130000  130000  130000  130000
 206  15  140000  140000  140000  140000  140000  140000
 207  16  150000  150000  150000  150000  150000  150000
 208  17  160000  160000  160000  160000  160000  160000
 209  18  170000  170000  170000  170000  170000  170000
 210  19  180000  180000  180000  180000  180000  180000
 211  20  190000  190000  190000  190000  190000  190000
 212  21  200000  200000  200000  200000  200000  200000
 213  22  210000  210000  210000  210000  210000  210000
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                   01/18/17 22:25:36 Page 5
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


 214  23  220000  220000  220000  220000  220000  220000
 215  24  230000  230000  230000  230000  230000  230000
 216  25  240000  240000  240000  240000  240000  240000
 217  26  250000  250000  250000  250000  250000  250000
 218  27  260000  260000  260000  260000  260000  260000
 219  28  270000  270000  270000  270000  270000  270000
 220  29  280000  280000  280000  280000  280000  280000
 221  30  290000  290000  290000  290000  290000  290000
 222  31  300000  300000  300000  300000  300000  300000
 223  32  310000  310000  310000  310000  310000  310000
 224  33  320000  320000  320000  320000  320000  320000
 225  34  330000  330000  330000  330000  330000  330000
 226  35  340000  340000  340000  340000  340000  340000
 227  36  350000  350000  350000  350000  350000  350000
 228  37  360000  360000  360000  360000  360000  360000
 229  38  370000  370000  370000  370000  370000  370000
 230  39  380000  380000  380000  380000  380000  380000
 231  40  390000  390000  390000  390000  390000  390000
 232  41  400000  400000  400000  400000  400000  400000
 233  42  410000  410000  410000  410000  410000  410000
 234  43  420000  420000  420000  420000  420000  420000
 235  44  430000  430000  430000  430000  430000  430000
 236  45  440000  440000  440000  440000  440000  440000
 237  46  450000  450000  450000  450000  450000  450000
 238  47  460000  460000  460000  460000  460000  460000
 239  48  470000  470000  470000  470000  470000  470000
 240  49  480000  480000  480000  480000  480000  480000
 241  50  490000  490000  490000  490000  490000  490000
 242  51  500000  500000  500000  500000  500000  500000
 243  52  510000  510000  510000  510000  510000  510000
 244  53  520000  520000  520000  520000  520000  520000
 245  54  530000  530000  530000  530000  530000  530000
 246  55  540000  540000  540000  540000  540000  540000
 247  56  550000  550000  550000  550000  550000  550000
 248  57  560000  560000  560000  560000  560000  560000
 249  58  570000  570000  570000  570000  570000  570000
 250  59  580000  580000  580000  580000  580000  580000
 251  60  590000  590000  590000  590000  590000  590000
 252  61  600000  600000  600000  600000  600000  600000
 253  62  610000  610000  610000  610000  610000  610000
 254  63  620000  620000  620000  620000  620000  620000
 255  64  630000  630000  630000  630000  630000  630000
 256  65  640000  640000  640000  640000  640000  640000
 257  66  650000  650000  650000  650000  650000  650000
 258  67  660000  660000  660000  660000  660000  660000
 259  68  670000  670000  670000  670000  670000  670000
 260  69  680000  680000  680000  680000  680000  680000
 261  70  690000  690000  690000  690000  690000  690000
 262  71  700000  700000  700000  700000  700000  700000
 263  72  710000  710000  710000  710000  710000  710000
 264  73  720000  720000  720000  720000  720000  720000
 265  74  730000  730000  730000  730000  730000  730000
 266  75  740000  740000  740000  740000  740000  740000
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                   01/18/17 22:25:36 Page 6
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


 267  76  750000  750000  750000  750000  750000  750000
 268  77  760000  760000  760000  760000  760000  760000
 269  78  770000  770000  770000  770000  770000  770000
 270  79  780000  780000  780000  780000  780000  780000
 271  80  790000  790000  790000  790000  790000  790000
 272  81  800000  800000  800000  800000  800000  800000
 273  82  810000  810000  810000  810000  810000  810000
 274  83  820000  820000  820000  820000  820000  820000
 275  84  830000  830000  830000  830000  830000  830000
 276  85  840000  840000  840000  840000  840000  840000
 277  86  850000  850000  850000  850000  850000  850000
 278  87  860000  860000  860000  860000  860000  860000
 279  88  870000  870000  870000  870000  870000  870000
 280  89  880000  880000  880000  880000  880000  880000
 281  90  890000  890000  890000  890000  890000  890000
 282  91  900000  900000  900000  900000  900000  900000
 283  92  910000  910000  910000  910000  910000  910000
 284  93  920000  920000  920000  920000  920000  920000
 285  94  930000  930000  930000  930000  930000  930000
 286  95  940000  940000  940000  940000  940000  940000
 287  96  950000  950000  950000  950000  950000  950000
 288  97  960000  960000  960000  960000  960000  960000
 289  98  970000  970000  970000  970000  970000  970000
 290  99  980000  980000  980000  980000  980000  980000
 291  100 990000  990000  990000  990000  990000  990000
 292  101 1000000 1000000 1000000 1000000 1000000 1000000
 293  102 1010000 1010000 1010000 1010000 1010000 1010000
 294  103 1020000 1020000 1020000 1020000 1020000 1020000
 295  104 1030000 1030000 1030000 1030000 1030000 1030000
 296  105 1040000 1040000 1040000 1040000 1040000 1040000
 297  106 1050000 1050000 1050000 1050000 1050000 1050000
 298  107 1060000 1060000 1060000 1060000 1060000 1060000 ;
 299   
 300   
 301   
 302  SCALAR fuel_price 'fuel wood suitable for producing energy at value of 40'
 303           /40/;
 304  SCALAR PAP_Pro  'Proportion of HSEL and LSEL needed for PAP'
 305           /0.2/;
 306  SCALAR fuel_amount 'the amount of fuel we gain by production timbers in p1'
 307           /-0.2/
 308   
 309   
 310  VARIABLES
 311  z 'the objective'
 312  *h(i) 'Cubic meters of timber i' // getum breytt í parameter og margfaldað með r(i,n) fyrir balance
 313  y(j,t) 'Cubic meters produced of product j'//total timber i for used in product j -- make constraint to find outu how many products..
 314  *q(j, k) 'Cubic meters of product j sold to destination k' // getum breytt í parameter og margfaldað með u
 315  //s(i)'Cubic meters of timber i in stock' // should be integer since all member of the constraint are integer
 316  s(i,t) 'amount of timber i used to make products'
 317  r(n, i,t) '1 if we buy n boats of timber i, 0 otherwise'
 318  u(l,j,k,t) '1 if we use n boats for product j shiping to region k, 0 otherwise'
 319  b(i,t) 'amount of timber i bought'
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                   01/18/17 22:25:36 Page 7
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


 320  fxC(t) 'Fixed cost of machine m in year t'
 321  Pr(t) 'Net profit in each year t'
 322  Cap(m,t) 'Capacity of machine m in year t'
 323  ;
 324   
 325  // y/table --> product made
 326  INTEGER VARIABLES y;
 327  BINARY VARIABLES u, r;
 328  POSITIVE VARIABLES s, b;
 329   
 330  y.up(j,t) = 1060000;
 331   
 332   
 333  EQUATIONS
 334   
 335  obj  'Maximum gross profit'
 336   
 337   
 338   
 339  //=============================================ENOUGH TIMBER
 340  timber_used(i,t) ' amount of  timber i used to make  product j in year t'
 341  prod_starved(i,t)  'ensure that production can not be starved in each year'
 342  //USAGE(i)     'We have to buy material (or produce as byproducts) to be able to produce products'
 343  Sold_Prod(j,t)   'we cant sell more than we produce in each year'
 344  timber_bought(i,t) 'amount of timber i bought in each year'
 345   
 346  //============================== ONLY BUY ONE NUMBER OF BARGERS FOR EACH TIMBER i
 347  Barges_buy(i,t)  'ensure we only pick one value n for barges for each timber i'
 348  Barges_sell(j, k,t)  'ensure we only pick one value  n for barges for each product to each city'
 349   
 350  //=====================================CAPACITYS FOR PRODUCTION
 351  Capacity1(m,t) 'Capacity goes up if we produce over the capacity'
 352  Capacity2(m,t) 'Make sure that the capacity does not go down'
 353  MaxCapacity(m,t) 'Make sure we dont go over the maximum capacity'
 354  CapStart(m,t)   'Make sure the starting capacity is right'
 355   
 356  // =====================  PROPORTION OF HSEL AND LSEL NEEDED FOR PAP
 357  PAP_HSEL(t)     'Proportion needed of HSEL for PAP'
 358  PAP_LSEL(t)     'Proportion needed of LSEL for PAP'
 359  PULP_Bal(p3,t)     'Cant produce paper without pulp'
 360   
 361  // =========ADD FIXED COST FOR INCREASED CAPACITY========== //
 362  *FixedCost(t) 'Fixed cost of machine m in year t'
 363   
 364  // =====PROFIT(OLD OBJECTIVE FUNCTION)=======//
 365  PROFIT(t) 'Profit is what we gain minus what we spend'
 366  ;
 367   
 368   
 369   
 370  obj ..
 371   
 372          Z =e= sum(t, Pr(t));
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                   01/18/17 22:25:36 Page 8
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


 373   
 374  //==========================ENSURE WE HAVE ENOUGH TIMBER==================================
 375  timber_used(i,t) ..  sum(j, y(j,t)*table2(j, i)) =e= s(i,t);
 376  prod_starved(i,t) .. sum(n, r(n, i,t)*h(n, i)) =g= s(i,t);
 377  Sold_Prod(j,t) .. sum((l,k), q(l,j)*u(l,j,k,t)) =l= y(j,t);
 378  //USAGE(i) .. sum(j, y(j) * table2(j,i)) =l= sum(n, h(n,i) * r(n,i));
 379  timber_bought(i,t) .. b(i,t) =e= sum(n, r(n, i,t)*h(n, i));
 380   
 381  //=================== ONLY BUY ONE NUMBER OF BARGERS FOR EACH TIMBER i ========================
 382  Barges_buy(i,t) ..  sum( n,r(n,i,t)) =E= 1;
 383  Barges_sell(j, k,t) .. sum(l, u(l, j, k,t)) =E= 1;
 384   
 385   
 386  //=============================== CAPACITYS FOR PRODUCTION =============================
 387  Capacity1(m,t).. Cap(m,t) =g= Cap(m,t-1)+(sum(j, y(j,t)*Prodinm(m,j))-Cap(m,t-1));
 388  Capacity2(m,t).. Cap(m,t) =g= sum(j, y(j,t)*Prodinm(m,j));
 389  MaxCapacity(m,t).. Cap(m,t) =l= MaxCap(m);
 390  CapStart(m,t).. Cap(m,"1") =l= Cap0(m);
 391   
 392   
 393  // =====================  PROPORTION OF HSEL AND LSEL NEEDED FOR PAP ===========
 394  PAP_HSEL(t)..  PAP_Pro*y("PAP",t) =l= y("HSEL",t);
 395  PAP_LSEL(t)..  PAP_Pro*y("PAP",t) =l= y("LSEL",t);
 396  PULP_Bal(p3,t) .. sum((l,k), u(l,p3,k,t)*q(l,p3)) + PAP_Pro*y("PAP",t) =l= y(P3,t);
 397   
 398  // =========ADD FIXED COST FOR INCREASED CAPACITY========== //
 399   
 400   
 401   
 402  // =====PROFIT(OLD OBJECTIVE FUNCTION)=======//
 403  PROFIT(t).. Pr(t) =e= power(0.95, ord(t)-1)* (sum((k,j), (GAMMA(j,k)/1000) * sum(l, q(l,j)*u(l,j,k,t)))- sum((k,j), (DELTA(j,k)/(1000*1000)) * sum(l, q(l,j)*q(l,j) * u(l,j,k,t))))   //Amount sold times sellingprice
 404   
 405                      - sum(i, ALPHA(i)/1000 * sum(n, h(n,i)*r(n,i,t))) - sum(i, BETA(i)/(1000*1000) * sum(n, h(n,i)*h(n,i) * r(n,i,t)))                    //Amount bought times buying price
 406                      + sum(p1, y(p1,t)*fuel_amount*(-fuel_price/1000))                                                               //Amount of fuel produced times selling price of fuel
 407                      + sum(i, (b(i,t)-s(i,t))*ALPHA(i)/1000)                                                                                        //Amount of extra material times its selling price
 408   
 409                      - sum(j, y(j,t)*c(j)/1000)
 410                      - sum(m, Cap(m,t+1)*FCost(m)/1000)                                                                                      //Amount of produced products times the production cost
 411                      ;
 412   
 413   
 414   
 415  MODEL final /all/;
 416  Solve final using mip maxmizing Z;
 417  DISPLAY z.l, u.l, r.l, y.l, s.l, b.l, Cap.l;
 418   
 419   


COMPILATION TIME     =        0.004 SECONDS      3 MB  24.8.1 r59919 DEX-DEG
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                   01/18/17 22:25:36 Page 9
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 416


---- obj  =E=  Maximum gross profit

obj..  z - Pr(1) - Pr(2) - Pr(3) =E= 0 ; (LHS = 0)
     

---- timber_used  =E=   amount of  timber i used to make  product j in year t

timber_used(Mat,1)..  2*y(Mas,1) - s(Mat,1) =E= 0 ; (LHS = 0)
     
timber_used(Mat,2)..  2*y(Mas,2) - s(Mat,2) =E= 0 ; (LHS = 0)
     
timber_used(Mat,3)..  2*y(Mas,3) - s(Mat,3) =E= 0 ; (LHS = 0)
     
timber_used(Kut,1)..  2*y(Kus,1) + 2.8*y(Kuv,1) - s(Kut,1) =E= 0 ; (LHS = 0)
     
timber_used(Kut,2)..  2*y(Kus,2) + 2.8*y(Kuv,2) - s(Kut,2) =E= 0 ; (LHS = 0)
     
timber_used(Kut,3)..  2*y(Kus,3) + 2.8*y(Kuv,3) - s(Kut,3) =E= 0 ; (LHS = 0)
     
timber_used(Kot,1)..  2*y(Kos,1) + 2.8*y(Kov,1) - s(Kot,1) =E= 0 ; (LHS = 0)
     
timber_used(Kot,2)..  2*y(Kos,2) + 2.8*y(Kov,2) - s(Kot,2) =E= 0 ; (LHS = 0)
     
timber_used(Kot,3)..  2*y(Kos,3) + 2.8*y(Kov,3) - s(Kot,3) =E= 0 ; (LHS = 0)
     
timber_used(Mak,1)..  - 0.8*y(Mas,1) + 4.8*y(Hsel,1) - s(Mak,1) =E= 0 ; (LHS = 0)
     
timber_used(Mak,2)..  - 0.8*y(Mas,2) + 4.8*y(Hsel,2) - s(Mak,2) =E= 0 ; (LHS = 0)
     
timber_used(Mak,3)..  - 0.8*y(Mas,3) + 4.8*y(Hsel,3) - s(Mak,3) =E= 0 ; (LHS = 0)
     
timber_used(Kuk,1)..  - 0.8*y(Kus,1) - 1.6*y(Kuv,1) + y(Pap,1) - s(Kuk,1) =E= 0 ; (LHS = 0)
     
timber_used(Kuk,2)..  - 0.8*y(Kus,2) - 1.6*y(Kuv,2) + y(Pap,2) - s(Kuk,2) =E= 0 ; (LHS = 0)
     
timber_used(Kuk,3)..  - 0.8*y(Kus,3) - 1.6*y(Kuv,3) + y(Pap,3) - s(Kuk,3) =E= 0 ; (LHS = 0)
     
timber_used(Kok,1)..  - 0.8*y(Kos,1) - 1.6*y(Kov,1) + 4.2*y(Lsel,1) - s(Kok,1) =E= 0 ; (LHS = 0)
     
timber_used(Kok,2)..  - 0.8*y(Kos,2) - 1.6*y(Kov,2) + 4.2*y(Lsel,2) - s(Kok,2) =E= 0 ; (LHS = 0)
     
timber_used(Kok,3)..  - 0.8*y(Kos,3) - 1.6*y(Kov,3) + 4.2*y(Lsel,3) - s(Kok,3) =E= 0 ; (LHS = 0)
     

---- prod_starved  =G=  ensure that production can not be starved in each year

prod_starved(Mat,1)..  - s(Mat,1) + 10000*r(2,Mat,1) + 20000*r(3,Mat,1) + 30000*r(4,Mat,1) + 40000*r(5,Mat,1) + 50000*r(6,Mat,1) + 60000*r(7,Mat,1) + 70000*r(8,Mat,1) + 80000*r(9,Mat,1) + 90000*r(10,Mat,1) + 100000*r(11,Mat,1) + 110000*r(12,Mat,1)
     
      + 120000*r(13,Mat,1) + 130000*r(14,Mat,1) + 140000*r(15,Mat,1) + 150000*r(16,Mat,1) + 160000*r(17,Mat,1) + 170000*r(18,Mat,1) + 180000*r(19,Mat,1) + 190000*r(20,Mat,1) + 200000*r(21,Mat,1) + 210000*r(22,Mat,1) + 220000*r(23,Mat,1)
     
      + 230000*r(24,Mat,1) + 240000*r(25,Mat,1) + 250000*r(26,Mat,1) + 260000*r(27,Mat,1) + 270000*r(28,Mat,1) + 280000*r(29,Mat,1) + 290000*r(30,Mat,1) + 300000*r(31,Mat,1) + 310000*r(32,Mat,1) + 320000*r(33,Mat,1) + 330000*r(34,Mat,1)
     
      + 340000*r(35,Mat,1) + 350000*r(36,Mat,1) + 360000*r(37,Mat,1) + 370000*r(38,Mat,1) + 380000*r(39,Mat,1) + 390000*r(40,Mat,1) + 400000*r(41,Mat,1) + 410000*r(42,Mat,1) + 420000*r(43,Mat,1) + 430000*r(44,Mat,1) + 440000*r(45,Mat,1)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 22:25:36 Page 10
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 416


     prod_starved  =G=  ensure that production can not be starved in each year     
     
      + 450000*r(46,Mat,1) + 460000*r(47,Mat,1) + 470000*r(48,Mat,1) + 480000*r(49,Mat,1) + 490000*r(50,Mat,1) + 500000*r(51,Mat,1) + 510000*r(52,Mat,1) + 520000*r(53,Mat,1) + 530000*r(54,Mat,1) + 540000*r(55,Mat,1) + 550000*r(56,Mat,1)
     
      + 560000*r(57,Mat,1) + 570000*r(58,Mat,1) + 580000*r(59,Mat,1) + 590000*r(60,Mat,1) + 600000*r(61,Mat,1) + 610000*r(62,Mat,1) + 620000*r(63,Mat,1) + 630000*r(64,Mat,1) + 640000*r(65,Mat,1) + 650000*r(66,Mat,1) + 660000*r(67,Mat,1)
     
      + 670000*r(68,Mat,1) + 680000*r(69,Mat,1) + 690000*r(70,Mat,1) + 700000*r(71,Mat,1) + 710000*r(72,Mat,1) + 720000*r(73,Mat,1) + 730000*r(74,Mat,1) + 740000*r(75,Mat,1) + 750000*r(76,Mat,1) + 760000*r(77,Mat,1) + 770000*r(78,Mat,1)
     
      + 780000*r(79,Mat,1) + 790000*r(80,Mat,1) + 800000*r(81,Mat,1) + 810000*r(82,Mat,1) + 820000*r(83,Mat,1) + 830000*r(84,Mat,1) + 840000*r(85,Mat,1) + 850000*r(86,Mat,1) + 860000*r(87,Mat,1) + 870000*r(88,Mat,1) + 880000*r(89,Mat,1)
     
      + 890000*r(90,Mat,1) + 900000*r(91,Mat,1) + 910000*r(92,Mat,1) + 920000*r(93,Mat,1) + 930000*r(94,Mat,1) + 940000*r(95,Mat,1) + 950000*r(96,Mat,1) + 960000*r(97,Mat,1) + 970000*r(98,Mat,1) + 980000*r(99,Mat,1) + 990000*r(100,Mat,1)
     
      + 1000000*r(101,Mat,1) + 1010000*r(102,Mat,1) + 1020000*r(103,Mat,1) + 1030000*r(104,Mat,1) + 1040000*r(105,Mat,1) + 1050000*r(106,Mat,1) + 1060000*r(107,Mat,1) =G= 0 ; (LHS = 0)
     
prod_starved(Mat,2)..  - s(Mat,2) + 10000*r(2,Mat,2) + 20000*r(3,Mat,2) + 30000*r(4,Mat,2) + 40000*r(5,Mat,2) + 50000*r(6,Mat,2) + 60000*r(7,Mat,2) + 70000*r(8,Mat,2) + 80000*r(9,Mat,2) + 90000*r(10,Mat,2) + 100000*r(11,Mat,2) + 110000*r(12,Mat,2)
     
      + 120000*r(13,Mat,2) + 130000*r(14,Mat,2) + 140000*r(15,Mat,2) + 150000*r(16,Mat,2) + 160000*r(17,Mat,2) + 170000*r(18,Mat,2) + 180000*r(19,Mat,2) + 190000*r(20,Mat,2) + 200000*r(21,Mat,2) + 210000*r(22,Mat,2) + 220000*r(23,Mat,2)
     
      + 230000*r(24,Mat,2) + 240000*r(25,Mat,2) + 250000*r(26,Mat,2) + 260000*r(27,Mat,2) + 270000*r(28,Mat,2) + 280000*r(29,Mat,2) + 290000*r(30,Mat,2) + 300000*r(31,Mat,2) + 310000*r(32,Mat,2) + 320000*r(33,Mat,2) + 330000*r(34,Mat,2)
     
      + 340000*r(35,Mat,2) + 350000*r(36,Mat,2) + 360000*r(37,Mat,2) + 370000*r(38,Mat,2) + 380000*r(39,Mat,2) + 390000*r(40,Mat,2) + 400000*r(41,Mat,2) + 410000*r(42,Mat,2) + 420000*r(43,Mat,2) + 430000*r(44,Mat,2) + 440000*r(45,Mat,2)
     
      + 450000*r(46,Mat,2) + 460000*r(47,Mat,2) + 470000*r(48,Mat,2) + 480000*r(49,Mat,2) + 490000*r(50,Mat,2) + 500000*r(51,Mat,2) + 510000*r(52,Mat,2) + 520000*r(53,Mat,2) + 530000*r(54,Mat,2) + 540000*r(55,Mat,2) + 550000*r(56,Mat,2)
     
      + 560000*r(57,Mat,2) + 570000*r(58,Mat,2) + 580000*r(59,Mat,2) + 590000*r(60,Mat,2) + 600000*r(61,Mat,2) + 610000*r(62,Mat,2) + 620000*r(63,Mat,2) + 630000*r(64,Mat,2) + 640000*r(65,Mat,2) + 650000*r(66,Mat,2) + 660000*r(67,Mat,2)
     
      + 670000*r(68,Mat,2) + 680000*r(69,Mat,2) + 690000*r(70,Mat,2) + 700000*r(71,Mat,2) + 710000*r(72,Mat,2) + 720000*r(73,Mat,2) + 730000*r(74,Mat,2) + 740000*r(75,Mat,2) + 750000*r(76,Mat,2) + 760000*r(77,Mat,2) + 770000*r(78,Mat,2)
     
      + 780000*r(79,Mat,2) + 790000*r(80,Mat,2) + 800000*r(81,Mat,2) + 810000*r(82,Mat,2) + 820000*r(83,Mat,2) + 830000*r(84,Mat,2) + 840000*r(85,Mat,2) + 850000*r(86,Mat,2) + 860000*r(87,Mat,2) + 870000*r(88,Mat,2) + 880000*r(89,Mat,2)
     
      + 890000*r(90,Mat,2) + 900000*r(91,Mat,2) + 910000*r(92,Mat,2) + 920000*r(93,Mat,2) + 930000*r(94,Mat,2) + 940000*r(95,Mat,2) + 950000*r(96,Mat,2) + 960000*r(97,Mat,2) + 970000*r(98,Mat,2) + 980000*r(99,Mat,2) + 990000*r(100,Mat,2)
     
      + 1000000*r(101,Mat,2) + 1010000*r(102,Mat,2) + 1020000*r(103,Mat,2) + 1030000*r(104,Mat,2) + 1040000*r(105,Mat,2) + 1050000*r(106,Mat,2) + 1060000*r(107,Mat,2) =G= 0 ; (LHS = 0)
     
prod_starved(Mat,3)..  - s(Mat,3) + 10000*r(2,Mat,3) + 20000*r(3,Mat,3) + 30000*r(4,Mat,3) + 40000*r(5,Mat,3) + 50000*r(6,Mat,3) + 60000*r(7,Mat,3) + 70000*r(8,Mat,3) + 80000*r(9,Mat,3) + 90000*r(10,Mat,3) + 100000*r(11,Mat,3) + 110000*r(12,Mat,3)
     
      + 120000*r(13,Mat,3) + 130000*r(14,Mat,3) + 140000*r(15,Mat,3) + 150000*r(16,Mat,3) + 160000*r(17,Mat,3) + 170000*r(18,Mat,3) + 180000*r(19,Mat,3) + 190000*r(20,Mat,3) + 200000*r(21,Mat,3) + 210000*r(22,Mat,3) + 220000*r(23,Mat,3)
     
      + 230000*r(24,Mat,3) + 240000*r(25,Mat,3) + 250000*r(26,Mat,3) + 260000*r(27,Mat,3) + 270000*r(28,Mat,3) + 280000*r(29,Mat,3) + 290000*r(30,Mat,3) + 300000*r(31,Mat,3) + 310000*r(32,Mat,3) + 320000*r(33,Mat,3) + 330000*r(34,Mat,3)
     
      + 340000*r(35,Mat,3) + 350000*r(36,Mat,3) + 360000*r(37,Mat,3) + 370000*r(38,Mat,3) + 380000*r(39,Mat,3) + 390000*r(40,Mat,3) + 400000*r(41,Mat,3) + 410000*r(42,Mat,3) + 420000*r(43,Mat,3) + 430000*r(44,Mat,3) + 440000*r(45,Mat,3)
     
      + 450000*r(46,Mat,3) + 460000*r(47,Mat,3) + 470000*r(48,Mat,3) + 480000*r(49,Mat,3) + 490000*r(50,Mat,3) + 500000*r(51,Mat,3) + 510000*r(52,Mat,3) + 520000*r(53,Mat,3) + 530000*r(54,Mat,3) + 540000*r(55,Mat,3) + 550000*r(56,Mat,3)
     
      + 560000*r(57,Mat,3) + 570000*r(58,Mat,3) + 580000*r(59,Mat,3) + 590000*r(60,Mat,3) + 600000*r(61,Mat,3) + 610000*r(62,Mat,3) + 620000*r(63,Mat,3) + 630000*r(64,Mat,3) + 640000*r(65,Mat,3) + 650000*r(66,Mat,3) + 660000*r(67,Mat,3)
     
      + 670000*r(68,Mat,3) + 680000*r(69,Mat,3) + 690000*r(70,Mat,3) + 700000*r(71,Mat,3) + 710000*r(72,Mat,3) + 720000*r(73,Mat,3) + 730000*r(74,Mat,3) + 740000*r(75,Mat,3) + 750000*r(76,Mat,3) + 760000*r(77,Mat,3) + 770000*r(78,Mat,3)
     
      + 780000*r(79,Mat,3) + 790000*r(80,Mat,3) + 800000*r(81,Mat,3) + 810000*r(82,Mat,3) + 820000*r(83,Mat,3) + 830000*r(84,Mat,3) + 840000*r(85,Mat,3) + 850000*r(86,Mat,3) + 860000*r(87,Mat,3) + 870000*r(88,Mat,3) + 880000*r(89,Mat,3)
     
      + 890000*r(90,Mat,3) + 900000*r(91,Mat,3) + 910000*r(92,Mat,3) + 920000*r(93,Mat,3) + 930000*r(94,Mat,3) + 940000*r(95,Mat,3) + 950000*r(96,Mat,3) + 960000*r(97,Mat,3) + 970000*r(98,Mat,3) + 980000*r(99,Mat,3) + 990000*r(100,Mat,3)
     
      + 1000000*r(101,Mat,3) + 1010000*r(102,Mat,3) + 1020000*r(103,Mat,3) + 1030000*r(104,Mat,3) + 1040000*r(105,Mat,3) + 1050000*r(106,Mat,3) + 1060000*r(107,Mat,3) =G= 0 ; (LHS = 0)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 22:25:36 Page 11
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 416


     prod_starved  =G=  ensure that production can not be starved in each year

prod_starved(Kut,1)..  - s(Kut,1) + 10000*r(2,Kut,1) + 20000*r(3,Kut,1) + 30000*r(4,Kut,1) + 40000*r(5,Kut,1) + 50000*r(6,Kut,1) + 60000*r(7,Kut,1) + 70000*r(8,Kut,1) + 80000*r(9,Kut,1) + 90000*r(10,Kut,1) + 100000*r(11,Kut,1) + 110000*r(12,Kut,1)
     
      + 120000*r(13,Kut,1) + 130000*r(14,Kut,1) + 140000*r(15,Kut,1) + 150000*r(16,Kut,1) + 160000*r(17,Kut,1) + 170000*r(18,Kut,1) + 180000*r(19,Kut,1) + 190000*r(20,Kut,1) + 200000*r(21,Kut,1) + 210000*r(22,Kut,1) + 220000*r(23,Kut,1)
     
      + 230000*r(24,Kut,1) + 240000*r(25,Kut,1) + 250000*r(26,Kut,1) + 260000*r(27,Kut,1) + 270000*r(28,Kut,1) + 280000*r(29,Kut,1) + 290000*r(30,Kut,1) + 300000*r(31,Kut,1) + 310000*r(32,Kut,1) + 320000*r(33,Kut,1) + 330000*r(34,Kut,1)
     
      + 340000*r(35,Kut,1) + 350000*r(36,Kut,1) + 360000*r(37,Kut,1) + 370000*r(38,Kut,1) + 380000*r(39,Kut,1) + 390000*r(40,Kut,1) + 400000*r(41,Kut,1) + 410000*r(42,Kut,1) + 420000*r(43,Kut,1) + 430000*r(44,Kut,1) + 440000*r(45,Kut,1)
     
      + 450000*r(46,Kut,1) + 460000*r(47,Kut,1) + 470000*r(48,Kut,1) + 480000*r(49,Kut,1) + 490000*r(50,Kut,1) + 500000*r(51,Kut,1) + 510000*r(52,Kut,1) + 520000*r(53,Kut,1) + 530000*r(54,Kut,1) + 540000*r(55,Kut,1) + 550000*r(56,Kut,1)
     
      + 560000*r(57,Kut,1) + 570000*r(58,Kut,1) + 580000*r(59,Kut,1) + 590000*r(60,Kut,1) + 600000*r(61,Kut,1) + 610000*r(62,Kut,1) + 620000*r(63,Kut,1) + 630000*r(64,Kut,1) + 640000*r(65,Kut,1) + 650000*r(66,Kut,1) + 660000*r(67,Kut,1)
     
      + 670000*r(68,Kut,1) + 680000*r(69,Kut,1) + 690000*r(70,Kut,1) + 700000*r(71,Kut,1) + 710000*r(72,Kut,1) + 720000*r(73,Kut,1) + 730000*r(74,Kut,1) + 740000*r(75,Kut,1) + 750000*r(76,Kut,1) + 760000*r(77,Kut,1) + 770000*r(78,Kut,1)
     
      + 780000*r(79,Kut,1) + 790000*r(80,Kut,1) + 800000*r(81,Kut,1) + 810000*r(82,Kut,1) + 820000*r(83,Kut,1) + 830000*r(84,Kut,1) + 840000*r(85,Kut,1) + 850000*r(86,Kut,1) + 860000*r(87,Kut,1) + 870000*r(88,Kut,1) + 880000*r(89,Kut,1)
     
      + 890000*r(90,Kut,1) + 900000*r(91,Kut,1) + 910000*r(92,Kut,1) + 920000*r(93,Kut,1) + 930000*r(94,Kut,1) + 940000*r(95,Kut,1) + 950000*r(96,Kut,1) + 960000*r(97,Kut,1) + 970000*r(98,Kut,1) + 980000*r(99,Kut,1) + 990000*r(100,Kut,1)
     
      + 1000000*r(101,Kut,1) + 1010000*r(102,Kut,1) + 1020000*r(103,Kut,1) + 1030000*r(104,Kut,1) + 1040000*r(105,Kut,1) + 1050000*r(106,Kut,1) + 1060000*r(107,Kut,1) =G= 0 ; (LHS = 0)
     
prod_starved(Kut,2)..  - s(Kut,2) + 10000*r(2,Kut,2) + 20000*r(3,Kut,2) + 30000*r(4,Kut,2) + 40000*r(5,Kut,2) + 50000*r(6,Kut,2) + 60000*r(7,Kut,2) + 70000*r(8,Kut,2) + 80000*r(9,Kut,2) + 90000*r(10,Kut,2) + 100000*r(11,Kut,2) + 110000*r(12,Kut,2)
     
      + 120000*r(13,Kut,2) + 130000*r(14,Kut,2) + 140000*r(15,Kut,2) + 150000*r(16,Kut,2) + 160000*r(17,Kut,2) + 170000*r(18,Kut,2) + 180000*r(19,Kut,2) + 190000*r(20,Kut,2) + 200000*r(21,Kut,2) + 210000*r(22,Kut,2) + 220000*r(23,Kut,2)
     
      + 230000*r(24,Kut,2) + 240000*r(25,Kut,2) + 250000*r(26,Kut,2) + 260000*r(27,Kut,2) + 270000*r(28,Kut,2) + 280000*r(29,Kut,2) + 290000*r(30,Kut,2) + 300000*r(31,Kut,2) + 310000*r(32,Kut,2) + 320000*r(33,Kut,2) + 330000*r(34,Kut,2)
     
      + 340000*r(35,Kut,2) + 350000*r(36,Kut,2) + 360000*r(37,Kut,2) + 370000*r(38,Kut,2) + 380000*r(39,Kut,2) + 390000*r(40,Kut,2) + 400000*r(41,Kut,2) + 410000*r(42,Kut,2) + 420000*r(43,Kut,2) + 430000*r(44,Kut,2) + 440000*r(45,Kut,2)
     
      + 450000*r(46,Kut,2) + 460000*r(47,Kut,2) + 470000*r(48,Kut,2) + 480000*r(49,Kut,2) + 490000*r(50,Kut,2) + 500000*r(51,Kut,2) + 510000*r(52,Kut,2) + 520000*r(53,Kut,2) + 530000*r(54,Kut,2) + 540000*r(55,Kut,2) + 550000*r(56,Kut,2)
     
      + 560000*r(57,Kut,2) + 570000*r(58,Kut,2) + 580000*r(59,Kut,2) + 590000*r(60,Kut,2) + 600000*r(61,Kut,2) + 610000*r(62,Kut,2) + 620000*r(63,Kut,2) + 630000*r(64,Kut,2) + 640000*r(65,Kut,2) + 650000*r(66,Kut,2) + 660000*r(67,Kut,2)
     
      + 670000*r(68,Kut,2) + 680000*r(69,Kut,2) + 690000*r(70,Kut,2) + 700000*r(71,Kut,2) + 710000*r(72,Kut,2) + 720000*r(73,Kut,2) + 730000*r(74,Kut,2) + 740000*r(75,Kut,2) + 750000*r(76,Kut,2) + 760000*r(77,Kut,2) + 770000*r(78,Kut,2)
     
      + 780000*r(79,Kut,2) + 790000*r(80,Kut,2) + 800000*r(81,Kut,2) + 810000*r(82,Kut,2) + 820000*r(83,Kut,2) + 830000*r(84,Kut,2) + 840000*r(85,Kut,2) + 850000*r(86,Kut,2) + 860000*r(87,Kut,2) + 870000*r(88,Kut,2) + 880000*r(89,Kut,2)
     
      + 890000*r(90,Kut,2) + 900000*r(91,Kut,2) + 910000*r(92,Kut,2) + 920000*r(93,Kut,2) + 930000*r(94,Kut,2) + 940000*r(95,Kut,2) + 950000*r(96,Kut,2) + 960000*r(97,Kut,2) + 970000*r(98,Kut,2) + 980000*r(99,Kut,2) + 990000*r(100,Kut,2)
     
      + 1000000*r(101,Kut,2) + 1010000*r(102,Kut,2) + 1020000*r(103,Kut,2) + 1030000*r(104,Kut,2) + 1040000*r(105,Kut,2) + 1050000*r(106,Kut,2) + 1060000*r(107,Kut,2) =G= 0 ; (LHS = 0)
     
prod_starved(Kut,3)..  - s(Kut,3) + 10000*r(2,Kut,3) + 20000*r(3,Kut,3) + 30000*r(4,Kut,3) + 40000*r(5,Kut,3) + 50000*r(6,Kut,3) + 60000*r(7,Kut,3) + 70000*r(8,Kut,3) + 80000*r(9,Kut,3) + 90000*r(10,Kut,3) + 100000*r(11,Kut,3) + 110000*r(12,Kut,3)
     
      + 120000*r(13,Kut,3) + 130000*r(14,Kut,3) + 140000*r(15,Kut,3) + 150000*r(16,Kut,3) + 160000*r(17,Kut,3) + 170000*r(18,Kut,3) + 180000*r(19,Kut,3) + 190000*r(20,Kut,3) + 200000*r(21,Kut,3) + 210000*r(22,Kut,3) + 220000*r(23,Kut,3)
     
      + 230000*r(24,Kut,3) + 240000*r(25,Kut,3) + 250000*r(26,Kut,3) + 260000*r(27,Kut,3) + 270000*r(28,Kut,3) + 280000*r(29,Kut,3) + 290000*r(30,Kut,3) + 300000*r(31,Kut,3) + 310000*r(32,Kut,3) + 320000*r(33,Kut,3) + 330000*r(34,Kut,3)
     
      + 340000*r(35,Kut,3) + 350000*r(36,Kut,3) + 360000*r(37,Kut,3) + 370000*r(38,Kut,3) + 380000*r(39,Kut,3) + 390000*r(40,Kut,3) + 400000*r(41,Kut,3) + 410000*r(42,Kut,3) + 420000*r(43,Kut,3) + 430000*r(44,Kut,3) + 440000*r(45,Kut,3)
     
      + 450000*r(46,Kut,3) + 460000*r(47,Kut,3) + 470000*r(48,Kut,3) + 480000*r(49,Kut,3) + 490000*r(50,Kut,3) + 500000*r(51,Kut,3) + 510000*r(52,Kut,3) + 520000*r(53,Kut,3) + 530000*r(54,Kut,3) + 540000*r(55,Kut,3) + 550000*r(56,Kut,3)
     
      + 560000*r(57,Kut,3) + 570000*r(58,Kut,3) + 580000*r(59,Kut,3) + 590000*r(60,Kut,3) + 600000*r(61,Kut,3) + 610000*r(62,Kut,3) + 620000*r(63,Kut,3) + 630000*r(64,Kut,3) + 640000*r(65,Kut,3) + 650000*r(66,Kut,3) + 660000*r(67,Kut,3)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 22:25:36 Page 12
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 416


     prod_starved  =G=  ensure that production can not be starved in each year     
     
      + 670000*r(68,Kut,3) + 680000*r(69,Kut,3) + 690000*r(70,Kut,3) + 700000*r(71,Kut,3) + 710000*r(72,Kut,3) + 720000*r(73,Kut,3) + 730000*r(74,Kut,3) + 740000*r(75,Kut,3) + 750000*r(76,Kut,3) + 760000*r(77,Kut,3) + 770000*r(78,Kut,3)
     
      + 780000*r(79,Kut,3) + 790000*r(80,Kut,3) + 800000*r(81,Kut,3) + 810000*r(82,Kut,3) + 820000*r(83,Kut,3) + 830000*r(84,Kut,3) + 840000*r(85,Kut,3) + 850000*r(86,Kut,3) + 860000*r(87,Kut,3) + 870000*r(88,Kut,3) + 880000*r(89,Kut,3)
     
      + 890000*r(90,Kut,3) + 900000*r(91,Kut,3) + 910000*r(92,Kut,3) + 920000*r(93,Kut,3) + 930000*r(94,Kut,3) + 940000*r(95,Kut,3) + 950000*r(96,Kut,3) + 960000*r(97,Kut,3) + 970000*r(98,Kut,3) + 980000*r(99,Kut,3) + 990000*r(100,Kut,3)
     
      + 1000000*r(101,Kut,3) + 1010000*r(102,Kut,3) + 1020000*r(103,Kut,3) + 1030000*r(104,Kut,3) + 1040000*r(105,Kut,3) + 1050000*r(106,Kut,3) + 1060000*r(107,Kut,3) =G= 0 ; (LHS = 0)
     
prod_starved(Kot,1)..  - s(Kot,1) + 10000*r(2,Kot,1) + 20000*r(3,Kot,1) + 30000*r(4,Kot,1) + 40000*r(5,Kot,1) + 50000*r(6,Kot,1) + 60000*r(7,Kot,1) + 70000*r(8,Kot,1) + 80000*r(9,Kot,1) + 90000*r(10,Kot,1) + 100000*r(11,Kot,1) + 110000*r(12,Kot,1)
     
      + 120000*r(13,Kot,1) + 130000*r(14,Kot,1) + 140000*r(15,Kot,1) + 150000*r(16,Kot,1) + 160000*r(17,Kot,1) + 170000*r(18,Kot,1) + 180000*r(19,Kot,1) + 190000*r(20,Kot,1) + 200000*r(21,Kot,1) + 210000*r(22,Kot,1) + 220000*r(23,Kot,1)
     
      + 230000*r(24,Kot,1) + 240000*r(25,Kot,1) + 250000*r(26,Kot,1) + 260000*r(27,Kot,1) + 270000*r(28,Kot,1) + 280000*r(29,Kot,1) + 290000*r(30,Kot,1) + 300000*r(31,Kot,1) + 310000*r(32,Kot,1) + 320000*r(33,Kot,1) + 330000*r(34,Kot,1)
     
      + 340000*r(35,Kot,1) + 350000*r(36,Kot,1) + 360000*r(37,Kot,1) + 370000*r(38,Kot,1) + 380000*r(39,Kot,1) + 390000*r(40,Kot,1) + 400000*r(41,Kot,1) + 410000*r(42,Kot,1) + 420000*r(43,Kot,1) + 430000*r(44,Kot,1) + 440000*r(45,Kot,1)
     
      + 450000*r(46,Kot,1) + 460000*r(47,Kot,1) + 470000*r(48,Kot,1) + 480000*r(49,Kot,1) + 490000*r(50,Kot,1) + 500000*r(51,Kot,1) + 510000*r(52,Kot,1) + 520000*r(53,Kot,1) + 530000*r(54,Kot,1) + 540000*r(55,Kot,1) + 550000*r(56,Kot,1)
     
      + 560000*r(57,Kot,1) + 570000*r(58,Kot,1) + 580000*r(59,Kot,1) + 590000*r(60,Kot,1) + 600000*r(61,Kot,1) + 610000*r(62,Kot,1) + 620000*r(63,Kot,1) + 630000*r(64,Kot,1) + 640000*r(65,Kot,1) + 650000*r(66,Kot,1) + 660000*r(67,Kot,1)
     
      + 670000*r(68,Kot,1) + 680000*r(69,Kot,1) + 690000*r(70,Kot,1) + 700000*r(71,Kot,1) + 710000*r(72,Kot,1) + 720000*r(73,Kot,1) + 730000*r(74,Kot,1) + 740000*r(75,Kot,1) + 750000*r(76,Kot,1) + 760000*r(77,Kot,1) + 770000*r(78,Kot,1)
     
      + 780000*r(79,Kot,1) + 790000*r(80,Kot,1) + 800000*r(81,Kot,1) + 810000*r(82,Kot,1) + 820000*r(83,Kot,1) + 830000*r(84,Kot,1) + 840000*r(85,Kot,1) + 850000*r(86,Kot,1) + 860000*r(87,Kot,1) + 870000*r(88,Kot,1) + 880000*r(89,Kot,1)
     
      + 890000*r(90,Kot,1) + 900000*r(91,Kot,1) + 910000*r(92,Kot,1) + 920000*r(93,Kot,1) + 930000*r(94,Kot,1) + 940000*r(95,Kot,1) + 950000*r(96,Kot,1) + 960000*r(97,Kot,1) + 970000*r(98,Kot,1) + 980000*r(99,Kot,1) + 990000*r(100,Kot,1)
     
      + 1000000*r(101,Kot,1) + 1010000*r(102,Kot,1) + 1020000*r(103,Kot,1) + 1030000*r(104,Kot,1) + 1040000*r(105,Kot,1) + 1050000*r(106,Kot,1) + 1060000*r(107,Kot,1) =G= 0 ; (LHS = 0)
     
prod_starved(Kot,2)..  - s(Kot,2) + 10000*r(2,Kot,2) + 20000*r(3,Kot,2) + 30000*r(4,Kot,2) + 40000*r(5,Kot,2) + 50000*r(6,Kot,2) + 60000*r(7,Kot,2) + 70000*r(8,Kot,2) + 80000*r(9,Kot,2) + 90000*r(10,Kot,2) + 100000*r(11,Kot,2) + 110000*r(12,Kot,2)
     
      + 120000*r(13,Kot,2) + 130000*r(14,Kot,2) + 140000*r(15,Kot,2) + 150000*r(16,Kot,2) + 160000*r(17,Kot,2) + 170000*r(18,Kot,2) + 180000*r(19,Kot,2) + 190000*r(20,Kot,2) + 200000*r(21,Kot,2) + 210000*r(22,Kot,2) + 220000*r(23,Kot,2)
     
      + 230000*r(24,Kot,2) + 240000*r(25,Kot,2) + 250000*r(26,Kot,2) + 260000*r(27,Kot,2) + 270000*r(28,Kot,2) + 280000*r(29,Kot,2) + 290000*r(30,Kot,2) + 300000*r(31,Kot,2) + 310000*r(32,Kot,2) + 320000*r(33,Kot,2) + 330000*r(34,Kot,2)
     
      + 340000*r(35,Kot,2) + 350000*r(36,Kot,2) + 360000*r(37,Kot,2) + 370000*r(38,Kot,2) + 380000*r(39,Kot,2) + 390000*r(40,Kot,2) + 400000*r(41,Kot,2) + 410000*r(42,Kot,2) + 420000*r(43,Kot,2) + 430000*r(44,Kot,2) + 440000*r(45,Kot,2)
     
      + 450000*r(46,Kot,2) + 460000*r(47,Kot,2) + 470000*r(48,Kot,2) + 480000*r(49,Kot,2) + 490000*r(50,Kot,2) + 500000*r(51,Kot,2) + 510000*r(52,Kot,2) + 520000*r(53,Kot,2) + 530000*r(54,Kot,2) + 540000*r(55,Kot,2) + 550000*r(56,Kot,2)
     
      + 560000*r(57,Kot,2) + 570000*r(58,Kot,2) + 580000*r(59,Kot,2) + 590000*r(60,Kot,2) + 600000*r(61,Kot,2) + 610000*r(62,Kot,2) + 620000*r(63,Kot,2) + 630000*r(64,Kot,2) + 640000*r(65,Kot,2) + 650000*r(66,Kot,2) + 660000*r(67,Kot,2)
     
      + 670000*r(68,Kot,2) + 680000*r(69,Kot,2) + 690000*r(70,Kot,2) + 700000*r(71,Kot,2) + 710000*r(72,Kot,2) + 720000*r(73,Kot,2) + 730000*r(74,Kot,2) + 740000*r(75,Kot,2) + 750000*r(76,Kot,2) + 760000*r(77,Kot,2) + 770000*r(78,Kot,2)
     
      + 780000*r(79,Kot,2) + 790000*r(80,Kot,2) + 800000*r(81,Kot,2) + 810000*r(82,Kot,2) + 820000*r(83,Kot,2) + 830000*r(84,Kot,2) + 840000*r(85,Kot,2) + 850000*r(86,Kot,2) + 860000*r(87,Kot,2) + 870000*r(88,Kot,2) + 880000*r(89,Kot,2)
     
      + 890000*r(90,Kot,2) + 900000*r(91,Kot,2) + 910000*r(92,Kot,2) + 920000*r(93,Kot,2) + 930000*r(94,Kot,2) + 940000*r(95,Kot,2) + 950000*r(96,Kot,2) + 960000*r(97,Kot,2) + 970000*r(98,Kot,2) + 980000*r(99,Kot,2) + 990000*r(100,Kot,2)
     
      + 1000000*r(101,Kot,2) + 1010000*r(102,Kot,2) + 1020000*r(103,Kot,2) + 1030000*r(104,Kot,2) + 1040000*r(105,Kot,2) + 1050000*r(106,Kot,2) + 1060000*r(107,Kot,2) =G= 0 ; (LHS = 0)
     
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 22:25:36 Page 13
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 416


     prod_starved  =G=  ensure that production can not be starved in each year

prod_starved(Kot,3)..  - s(Kot,3) + 10000*r(2,Kot,3) + 20000*r(3,Kot,3) + 30000*r(4,Kot,3) + 40000*r(5,Kot,3) + 50000*r(6,Kot,3) + 60000*r(7,Kot,3) + 70000*r(8,Kot,3) + 80000*r(9,Kot,3) + 90000*r(10,Kot,3) + 100000*r(11,Kot,3) + 110000*r(12,Kot,3)
     
      + 120000*r(13,Kot,3) + 130000*r(14,Kot,3) + 140000*r(15,Kot,3) + 150000*r(16,Kot,3) + 160000*r(17,Kot,3) + 170000*r(18,Kot,3) + 180000*r(19,Kot,3) + 190000*r(20,Kot,3) + 200000*r(21,Kot,3) + 210000*r(22,Kot,3) + 220000*r(23,Kot,3)
     
      + 230000*r(24,Kot,3) + 240000*r(25,Kot,3) + 250000*r(26,Kot,3) + 260000*r(27,Kot,3) + 270000*r(28,Kot,3) + 280000*r(29,Kot,3) + 290000*r(30,Kot,3) + 300000*r(31,Kot,3) + 310000*r(32,Kot,3) + 320000*r(33,Kot,3) + 330000*r(34,Kot,3)
     
      + 340000*r(35,Kot,3) + 350000*r(36,Kot,3) + 360000*r(37,Kot,3) + 370000*r(38,Kot,3) + 380000*r(39,Kot,3) + 390000*r(40,Kot,3) + 400000*r(41,Kot,3) + 410000*r(42,Kot,3) + 420000*r(43,Kot,3) + 430000*r(44,Kot,3) + 440000*r(45,Kot,3)
     
      + 450000*r(46,Kot,3) + 460000*r(47,Kot,3) + 470000*r(48,Kot,3) + 480000*r(49,Kot,3) + 490000*r(50,Kot,3) + 500000*r(51,Kot,3) + 510000*r(52,Kot,3) + 520000*r(53,Kot,3) + 530000*r(54,Kot,3) + 540000*r(55,Kot,3) + 550000*r(56,Kot,3)
     
      + 560000*r(57,Kot,3) + 570000*r(58,Kot,3) + 580000*r(59,Kot,3) + 590000*r(60,Kot,3) + 600000*r(61,Kot,3) + 610000*r(62,Kot,3) + 620000*r(63,Kot,3) + 630000*r(64,Kot,3) + 640000*r(65,Kot,3) + 650000*r(66,Kot,3) + 660000*r(67,Kot,3)
     
      + 670000*r(68,Kot,3) + 680000*r(69,Kot,3) + 690000*r(70,Kot,3) + 700000*r(71,Kot,3) + 710000*r(72,Kot,3) + 720000*r(73,Kot,3) + 730000*r(74,Kot,3) + 740000*r(75,Kot,3) + 750000*r(76,Kot,3) + 760000*r(77,Kot,3) + 770000*r(78,Kot,3)
     
      + 780000*r(79,Kot,3) + 790000*r(80,Kot,3) + 800000*r(81,Kot,3) + 810000*r(82,Kot,3) + 820000*r(83,Kot,3) + 830000*r(84,Kot,3) + 840000*r(85,Kot,3) + 850000*r(86,Kot,3) + 860000*r(87,Kot,3) + 870000*r(88,Kot,3) + 880000*r(89,Kot,3)
     
      + 890000*r(90,Kot,3) + 900000*r(91,Kot,3) + 910000*r(92,Kot,3) + 920000*r(93,Kot,3) + 930000*r(94,Kot,3) + 940000*r(95,Kot,3) + 950000*r(96,Kot,3) + 960000*r(97,Kot,3) + 970000*r(98,Kot,3) + 980000*r(99,Kot,3) + 990000*r(100,Kot,3)
     
      + 1000000*r(101,Kot,3) + 1010000*r(102,Kot,3) + 1020000*r(103,Kot,3) + 1030000*r(104,Kot,3) + 1040000*r(105,Kot,3) + 1050000*r(106,Kot,3) + 1060000*r(107,Kot,3) =G= 0 ; (LHS = 0)
     
prod_starved(Mak,1)..  - s(Mak,1) + 10000*r(2,Mak,1) + 20000*r(3,Mak,1) + 30000*r(4,Mak,1) + 40000*r(5,Mak,1) + 50000*r(6,Mak,1) + 60000*r(7,Mak,1) + 70000*r(8,Mak,1) + 80000*r(9,Mak,1) + 90000*r(10,Mak,1) + 100000*r(11,Mak,1) + 110000*r(12,Mak,1)
     
      + 120000*r(13,Mak,1) + 130000*r(14,Mak,1) + 140000*r(15,Mak,1) + 150000*r(16,Mak,1) + 160000*r(17,Mak,1) + 170000*r(18,Mak,1) + 180000*r(19,Mak,1) + 190000*r(20,Mak,1) + 200000*r(21,Mak,1) + 210000*r(22,Mak,1) + 220000*r(23,Mak,1)
     
      + 230000*r(24,Mak,1) + 240000*r(25,Mak,1) + 250000*r(26,Mak,1) + 260000*r(27,Mak,1) + 270000*r(28,Mak,1) + 280000*r(29,Mak,1) + 290000*r(30,Mak,1) + 300000*r(31,Mak,1) + 310000*r(32,Mak,1) + 320000*r(33,Mak,1) + 330000*r(34,Mak,1)
     
      + 340000*r(35,Mak,1) + 350000*r(36,Mak,1) + 360000*r(37,Mak,1) + 370000*r(38,Mak,1) + 380000*r(39,Mak,1) + 390000*r(40,Mak,1) + 400000*r(41,Mak,1) + 410000*r(42,Mak,1) + 420000*r(43,Mak,1) + 430000*r(44,Mak,1) + 440000*r(45,Mak,1)
     
      + 450000*r(46,Mak,1) + 460000*r(47,Mak,1) + 470000*r(48,Mak,1) + 480000*r(49,Mak,1) + 490000*r(50,Mak,1) + 500000*r(51,Mak,1) + 510000*r(52,Mak,1) + 520000*r(53,Mak,1) + 530000*r(54,Mak,1) + 540000*r(55,Mak,1) + 550000*r(56,Mak,1)
     
      + 560000*r(57,Mak,1) + 570000*r(58,Mak,1) + 580000*r(59,Mak,1) + 590000*r(60,Mak,1) + 600000*r(61,Mak,1) + 610000*r(62,Mak,1) + 620000*r(63,Mak,1) + 630000*r(64,Mak,1) + 640000*r(65,Mak,1) + 650000*r(66,Mak,1) + 660000*r(67,Mak,1)
     
      + 670000*r(68,Mak,1) + 680000*r(69,Mak,1) + 690000*r(70,Mak,1) + 700000*r(71,Mak,1) + 710000*r(72,Mak,1) + 720000*r(73,Mak,1) + 730000*r(74,Mak,1) + 740000*r(75,Mak,1) + 750000*r(76,Mak,1) + 760000*r(77,Mak,1) + 770000*r(78,Mak,1)
     
      + 780000*r(79,Mak,1) + 790000*r(80,Mak,1) + 800000*r(81,Mak,1) + 810000*r(82,Mak,1) + 820000*r(83,Mak,1) + 830000*r(84,Mak,1) + 840000*r(85,Mak,1) + 850000*r(86,Mak,1) + 860000*r(87,Mak,1) + 870000*r(88,Mak,1) + 880000*r(89,Mak,1)
     
      + 890000*r(90,Mak,1) + 900000*r(91,Mak,1) + 910000*r(92,Mak,1) + 920000*r(93,Mak,1) + 930000*r(94,Mak,1) + 940000*r(95,Mak,1) + 950000*r(96,Mak,1) + 960000*r(97,Mak,1) + 970000*r(98,Mak,1) + 980000*r(99,Mak,1) + 990000*r(100,Mak,1)
     
      + 1000000*r(101,Mak,1) + 1010000*r(102,Mak,1) + 1020000*r(103,Mak,1) + 1030000*r(104,Mak,1) + 1040000*r(105,Mak,1) + 1050000*r(106,Mak,1) + 1060000*r(107,Mak,1) =G= 0 ; (LHS = 0)
     
prod_starved(Mak,2)..  - s(Mak,2) + 10000*r(2,Mak,2) + 20000*r(3,Mak,2) + 30000*r(4,Mak,2) + 40000*r(5,Mak,2) + 50000*r(6,Mak,2) + 60000*r(7,Mak,2) + 70000*r(8,Mak,2) + 80000*r(9,Mak,2) + 90000*r(10,Mak,2) + 100000*r(11,Mak,2) + 110000*r(12,Mak,2)
     
      + 120000*r(13,Mak,2) + 130000*r(14,Mak,2) + 140000*r(15,Mak,2) + 150000*r(16,Mak,2) + 160000*r(17,Mak,2) + 170000*r(18,Mak,2) + 180000*r(19,Mak,2) + 190000*r(20,Mak,2) + 200000*r(21,Mak,2) + 210000*r(22,Mak,2) + 220000*r(23,Mak,2)
     
      + 230000*r(24,Mak,2) + 240000*r(25,Mak,2) + 250000*r(26,Mak,2) + 260000*r(27,Mak,2) + 270000*r(28,Mak,2) + 280000*r(29,Mak,2) + 290000*r(30,Mak,2) + 300000*r(31,Mak,2) + 310000*r(32,Mak,2) + 320000*r(33,Mak,2) + 330000*r(34,Mak,2)
     
      + 340000*r(35,Mak,2) + 350000*r(36,Mak,2) + 360000*r(37,Mak,2) + 370000*r(38,Mak,2) + 380000*r(39,Mak,2) + 390000*r(40,Mak,2) + 400000*r(41,Mak,2) + 410000*r(42,Mak,2) + 420000*r(43,Mak,2) + 430000*r(44,Mak,2) + 440000*r(45,Mak,2)
     
      + 450000*r(46,Mak,2) + 460000*r(47,Mak,2) + 470000*r(48,Mak,2) + 480000*r(49,Mak,2) + 490000*r(50,Mak,2) + 500000*r(51,Mak,2) + 510000*r(52,Mak,2) + 520000*r(53,Mak,2) + 530000*r(54,Mak,2) + 540000*r(55,Mak,2) + 550000*r(56,Mak,2)
     
      + 560000*r(57,Mak,2) + 570000*r(58,Mak,2) + 580000*r(59,Mak,2) + 590000*r(60,Mak,2) + 600000*r(61,Mak,2) + 610000*r(62,Mak,2) + 620000*r(63,Mak,2) + 630000*r(64,Mak,2) + 640000*r(65,Mak,2) + 650000*r(66,Mak,2) + 660000*r(67,Mak,2)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 22:25:36 Page 14
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 416


     prod_starved  =G=  ensure that production can not be starved in each year     
     
      + 670000*r(68,Mak,2) + 680000*r(69,Mak,2) + 690000*r(70,Mak,2) + 700000*r(71,Mak,2) + 710000*r(72,Mak,2) + 720000*r(73,Mak,2) + 730000*r(74,Mak,2) + 740000*r(75,Mak,2) + 750000*r(76,Mak,2) + 760000*r(77,Mak,2) + 770000*r(78,Mak,2)
     
      + 780000*r(79,Mak,2) + 790000*r(80,Mak,2) + 800000*r(81,Mak,2) + 810000*r(82,Mak,2) + 820000*r(83,Mak,2) + 830000*r(84,Mak,2) + 840000*r(85,Mak,2) + 850000*r(86,Mak,2) + 860000*r(87,Mak,2) + 870000*r(88,Mak,2) + 880000*r(89,Mak,2)
     
      + 890000*r(90,Mak,2) + 900000*r(91,Mak,2) + 910000*r(92,Mak,2) + 920000*r(93,Mak,2) + 930000*r(94,Mak,2) + 940000*r(95,Mak,2) + 950000*r(96,Mak,2) + 960000*r(97,Mak,2) + 970000*r(98,Mak,2) + 980000*r(99,Mak,2) + 990000*r(100,Mak,2)
     
      + 1000000*r(101,Mak,2) + 1010000*r(102,Mak,2) + 1020000*r(103,Mak,2) + 1030000*r(104,Mak,2) + 1040000*r(105,Mak,2) + 1050000*r(106,Mak,2) + 1060000*r(107,Mak,2) =G= 0 ; (LHS = 0)
     
prod_starved(Mak,3)..  - s(Mak,3) + 10000*r(2,Mak,3) + 20000*r(3,Mak,3) + 30000*r(4,Mak,3) + 40000*r(5,Mak,3) + 50000*r(6,Mak,3) + 60000*r(7,Mak,3) + 70000*r(8,Mak,3) + 80000*r(9,Mak,3) + 90000*r(10,Mak,3) + 100000*r(11,Mak,3) + 110000*r(12,Mak,3)
     
      + 120000*r(13,Mak,3) + 130000*r(14,Mak,3) + 140000*r(15,Mak,3) + 150000*r(16,Mak,3) + 160000*r(17,Mak,3) + 170000*r(18,Mak,3) + 180000*r(19,Mak,3) + 190000*r(20,Mak,3) + 200000*r(21,Mak,3) + 210000*r(22,Mak,3) + 220000*r(23,Mak,3)
     
      + 230000*r(24,Mak,3) + 240000*r(25,Mak,3) + 250000*r(26,Mak,3) + 260000*r(27,Mak,3) + 270000*r(28,Mak,3) + 280000*r(29,Mak,3) + 290000*r(30,Mak,3) + 300000*r(31,Mak,3) + 310000*r(32,Mak,3) + 320000*r(33,Mak,3) + 330000*r(34,Mak,3)
     
      + 340000*r(35,Mak,3) + 350000*r(36,Mak,3) + 360000*r(37,Mak,3) + 370000*r(38,Mak,3) + 380000*r(39,Mak,3) + 390000*r(40,Mak,3) + 400000*r(41,Mak,3) + 410000*r(42,Mak,3) + 420000*r(43,Mak,3) + 430000*r(44,Mak,3) + 440000*r(45,Mak,3)
     
      + 450000*r(46,Mak,3) + 460000*r(47,Mak,3) + 470000*r(48,Mak,3) + 480000*r(49,Mak,3) + 490000*r(50,Mak,3) + 500000*r(51,Mak,3) + 510000*r(52,Mak,3) + 520000*r(53,Mak,3) + 530000*r(54,Mak,3) + 540000*r(55,Mak,3) + 550000*r(56,Mak,3)
     
      + 560000*r(57,Mak,3) + 570000*r(58,Mak,3) + 580000*r(59,Mak,3) + 590000*r(60,Mak,3) + 600000*r(61,Mak,3) + 610000*r(62,Mak,3) + 620000*r(63,Mak,3) + 630000*r(64,Mak,3) + 640000*r(65,Mak,3) + 650000*r(66,Mak,3) + 660000*r(67,Mak,3)
     
      + 670000*r(68,Mak,3) + 680000*r(69,Mak,3) + 690000*r(70,Mak,3) + 700000*r(71,Mak,3) + 710000*r(72,Mak,3) + 720000*r(73,Mak,3) + 730000*r(74,Mak,3) + 740000*r(75,Mak,3) + 750000*r(76,Mak,3) + 760000*r(77,Mak,3) + 770000*r(78,Mak,3)
     
      + 780000*r(79,Mak,3) + 790000*r(80,Mak,3) + 800000*r(81,Mak,3) + 810000*r(82,Mak,3) + 820000*r(83,Mak,3) + 830000*r(84,Mak,3) + 840000*r(85,Mak,3) + 850000*r(86,Mak,3) + 860000*r(87,Mak,3) + 870000*r(88,Mak,3) + 880000*r(89,Mak,3)
     
      + 890000*r(90,Mak,3) + 900000*r(91,Mak,3) + 910000*r(92,Mak,3) + 920000*r(93,Mak,3) + 930000*r(94,Mak,3) + 940000*r(95,Mak,3) + 950000*r(96,Mak,3) + 960000*r(97,Mak,3) + 970000*r(98,Mak,3) + 980000*r(99,Mak,3) + 990000*r(100,Mak,3)
     
      + 1000000*r(101,Mak,3) + 1010000*r(102,Mak,3) + 1020000*r(103,Mak,3) + 1030000*r(104,Mak,3) + 1040000*r(105,Mak,3) + 1050000*r(106,Mak,3) + 1060000*r(107,Mak,3) =G= 0 ; (LHS = 0)
     
prod_starved(Kuk,1)..  - s(Kuk,1) + 10000*r(2,Kuk,1) + 20000*r(3,Kuk,1) + 30000*r(4,Kuk,1) + 40000*r(5,Kuk,1) + 50000*r(6,Kuk,1) + 60000*r(7,Kuk,1) + 70000*r(8,Kuk,1) + 80000*r(9,Kuk,1) + 90000*r(10,Kuk,1) + 100000*r(11,Kuk,1) + 110000*r(12,Kuk,1)
     
      + 120000*r(13,Kuk,1) + 130000*r(14,Kuk,1) + 140000*r(15,Kuk,1) + 150000*r(16,Kuk,1) + 160000*r(17,Kuk,1) + 170000*r(18,Kuk,1) + 180000*r(19,Kuk,1) + 190000*r(20,Kuk,1) + 200000*r(21,Kuk,1) + 210000*r(22,Kuk,1) + 220000*r(23,Kuk,1)
     
      + 230000*r(24,Kuk,1) + 240000*r(25,Kuk,1) + 250000*r(26,Kuk,1) + 260000*r(27,Kuk,1) + 270000*r(28,Kuk,1) + 280000*r(29,Kuk,1) + 290000*r(30,Kuk,1) + 300000*r(31,Kuk,1) + 310000*r(32,Kuk,1) + 320000*r(33,Kuk,1) + 330000*r(34,Kuk,1)
     
      + 340000*r(35,Kuk,1) + 350000*r(36,Kuk,1) + 360000*r(37,Kuk,1) + 370000*r(38,Kuk,1) + 380000*r(39,Kuk,1) + 390000*r(40,Kuk,1) + 400000*r(41,Kuk,1) + 410000*r(42,Kuk,1) + 420000*r(43,Kuk,1) + 430000*r(44,Kuk,1) + 440000*r(45,Kuk,1)
     
      + 450000*r(46,Kuk,1) + 460000*r(47,Kuk,1) + 470000*r(48,Kuk,1) + 480000*r(49,Kuk,1) + 490000*r(50,Kuk,1) + 500000*r(51,Kuk,1) + 510000*r(52,Kuk,1) + 520000*r(53,Kuk,1) + 530000*r(54,Kuk,1) + 540000*r(55,Kuk,1) + 550000*r(56,Kuk,1)
     
      + 560000*r(57,Kuk,1) + 570000*r(58,Kuk,1) + 580000*r(59,Kuk,1) + 590000*r(60,Kuk,1) + 600000*r(61,Kuk,1) + 610000*r(62,Kuk,1) + 620000*r(63,Kuk,1) + 630000*r(64,Kuk,1) + 640000*r(65,Kuk,1) + 650000*r(66,Kuk,1) + 660000*r(67,Kuk,1)
     
      + 670000*r(68,Kuk,1) + 680000*r(69,Kuk,1) + 690000*r(70,Kuk,1) + 700000*r(71,Kuk,1) + 710000*r(72,Kuk,1) + 720000*r(73,Kuk,1) + 730000*r(74,Kuk,1) + 740000*r(75,Kuk,1) + 750000*r(76,Kuk,1) + 760000*r(77,Kuk,1) + 770000*r(78,Kuk,1)
     
      + 780000*r(79,Kuk,1) + 790000*r(80,Kuk,1) + 800000*r(81,Kuk,1) + 810000*r(82,Kuk,1) + 820000*r(83,Kuk,1) + 830000*r(84,Kuk,1) + 840000*r(85,Kuk,1) + 850000*r(86,Kuk,1) + 860000*r(87,Kuk,1) + 870000*r(88,Kuk,1) + 880000*r(89,Kuk,1)
     
      + 890000*r(90,Kuk,1) + 900000*r(91,Kuk,1) + 910000*r(92,Kuk,1) + 920000*r(93,Kuk,1) + 930000*r(94,Kuk,1) + 940000*r(95,Kuk,1) + 950000*r(96,Kuk,1) + 960000*r(97,Kuk,1) + 970000*r(98,Kuk,1) + 980000*r(99,Kuk,1) + 990000*r(100,Kuk,1)
     
      + 1000000*r(101,Kuk,1) + 1010000*r(102,Kuk,1) + 1020000*r(103,Kuk,1) + 1030000*r(104,Kuk,1) + 1040000*r(105,Kuk,1) + 1050000*r(106,Kuk,1) + 1060000*r(107,Kuk,1) =G= 0 ; (LHS = 0)
     
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 22:25:36 Page 15
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 416


     prod_starved  =G=  ensure that production can not be starved in each year

prod_starved(Kuk,2)..  - s(Kuk,2) + 10000*r(2,Kuk,2) + 20000*r(3,Kuk,2) + 30000*r(4,Kuk,2) + 40000*r(5,Kuk,2) + 50000*r(6,Kuk,2) + 60000*r(7,Kuk,2) + 70000*r(8,Kuk,2) + 80000*r(9,Kuk,2) + 90000*r(10,Kuk,2) + 100000*r(11,Kuk,2) + 110000*r(12,Kuk,2)
     
      + 120000*r(13,Kuk,2) + 130000*r(14,Kuk,2) + 140000*r(15,Kuk,2) + 150000*r(16,Kuk,2) + 160000*r(17,Kuk,2) + 170000*r(18,Kuk,2) + 180000*r(19,Kuk,2) + 190000*r(20,Kuk,2) + 200000*r(21,Kuk,2) + 210000*r(22,Kuk,2) + 220000*r(23,Kuk,2)
     
      + 230000*r(24,Kuk,2) + 240000*r(25,Kuk,2) + 250000*r(26,Kuk,2) + 260000*r(27,Kuk,2) + 270000*r(28,Kuk,2) + 280000*r(29,Kuk,2) + 290000*r(30,Kuk,2) + 300000*r(31,Kuk,2) + 310000*r(32,Kuk,2) + 320000*r(33,Kuk,2) + 330000*r(34,Kuk,2)
     
      + 340000*r(35,Kuk,2) + 350000*r(36,Kuk,2) + 360000*r(37,Kuk,2) + 370000*r(38,Kuk,2) + 380000*r(39,Kuk,2) + 390000*r(40,Kuk,2) + 400000*r(41,Kuk,2) + 410000*r(42,Kuk,2) + 420000*r(43,Kuk,2) + 430000*r(44,Kuk,2) + 440000*r(45,Kuk,2)
     
      + 450000*r(46,Kuk,2) + 460000*r(47,Kuk,2) + 470000*r(48,Kuk,2) + 480000*r(49,Kuk,2) + 490000*r(50,Kuk,2) + 500000*r(51,Kuk,2) + 510000*r(52,Kuk,2) + 520000*r(53,Kuk,2) + 530000*r(54,Kuk,2) + 540000*r(55,Kuk,2) + 550000*r(56,Kuk,2)
     
      + 560000*r(57,Kuk,2) + 570000*r(58,Kuk,2) + 580000*r(59,Kuk,2) + 590000*r(60,Kuk,2) + 600000*r(61,Kuk,2) + 610000*r(62,Kuk,2) + 620000*r(63,Kuk,2) + 630000*r(64,Kuk,2) + 640000*r(65,Kuk,2) + 650000*r(66,Kuk,2) + 660000*r(67,Kuk,2)
     
      + 670000*r(68,Kuk,2) + 680000*r(69,Kuk,2) + 690000*r(70,Kuk,2) + 700000*r(71,Kuk,2) + 710000*r(72,Kuk,2) + 720000*r(73,Kuk,2) + 730000*r(74,Kuk,2) + 740000*r(75,Kuk,2) + 750000*r(76,Kuk,2) + 760000*r(77,Kuk,2) + 770000*r(78,Kuk,2)
     
      + 780000*r(79,Kuk,2) + 790000*r(80,Kuk,2) + 800000*r(81,Kuk,2) + 810000*r(82,Kuk,2) + 820000*r(83,Kuk,2) + 830000*r(84,Kuk,2) + 840000*r(85,Kuk,2) + 850000*r(86,Kuk,2) + 860000*r(87,Kuk,2) + 870000*r(88,Kuk,2) + 880000*r(89,Kuk,2)
     
      + 890000*r(90,Kuk,2) + 900000*r(91,Kuk,2) + 910000*r(92,Kuk,2) + 920000*r(93,Kuk,2) + 930000*r(94,Kuk,2) + 940000*r(95,Kuk,2) + 950000*r(96,Kuk,2) + 960000*r(97,Kuk,2) + 970000*r(98,Kuk,2) + 980000*r(99,Kuk,2) + 990000*r(100,Kuk,2)
     
      + 1000000*r(101,Kuk,2) + 1010000*r(102,Kuk,2) + 1020000*r(103,Kuk,2) + 1030000*r(104,Kuk,2) + 1040000*r(105,Kuk,2) + 1050000*r(106,Kuk,2) + 1060000*r(107,Kuk,2) =G= 0 ; (LHS = 0)
     
prod_starved(Kuk,3)..  - s(Kuk,3) + 10000*r(2,Kuk,3) + 20000*r(3,Kuk,3) + 30000*r(4,Kuk,3) + 40000*r(5,Kuk,3) + 50000*r(6,Kuk,3) + 60000*r(7,Kuk,3) + 70000*r(8,Kuk,3) + 80000*r(9,Kuk,3) + 90000*r(10,Kuk,3) + 100000*r(11,Kuk,3) + 110000*r(12,Kuk,3)
     
      + 120000*r(13,Kuk,3) + 130000*r(14,Kuk,3) + 140000*r(15,Kuk,3) + 150000*r(16,Kuk,3) + 160000*r(17,Kuk,3) + 170000*r(18,Kuk,3) + 180000*r(19,Kuk,3) + 190000*r(20,Kuk,3) + 200000*r(21,Kuk,3) + 210000*r(22,Kuk,3) + 220000*r(23,Kuk,3)
     
      + 230000*r(24,Kuk,3) + 240000*r(25,Kuk,3) + 250000*r(26,Kuk,3) + 260000*r(27,Kuk,3) + 270000*r(28,Kuk,3) + 280000*r(29,Kuk,3) + 290000*r(30,Kuk,3) + 300000*r(31,Kuk,3) + 310000*r(32,Kuk,3) + 320000*r(33,Kuk,3) + 330000*r(34,Kuk,3)
     
      + 340000*r(35,Kuk,3) + 350000*r(36,Kuk,3) + 360000*r(37,Kuk,3) + 370000*r(38,Kuk,3) + 380000*r(39,Kuk,3) + 390000*r(40,Kuk,3) + 400000*r(41,Kuk,3) + 410000*r(42,Kuk,3) + 420000*r(43,Kuk,3) + 430000*r(44,Kuk,3) + 440000*r(45,Kuk,3)
     
      + 450000*r(46,Kuk,3) + 460000*r(47,Kuk,3) + 470000*r(48,Kuk,3) + 480000*r(49,Kuk,3) + 490000*r(50,Kuk,3) + 500000*r(51,Kuk,3) + 510000*r(52,Kuk,3) + 520000*r(53,Kuk,3) + 530000*r(54,Kuk,3) + 540000*r(55,Kuk,3) + 550000*r(56,Kuk,3)
     
      + 560000*r(57,Kuk,3) + 570000*r(58,Kuk,3) + 580000*r(59,Kuk,3) + 590000*r(60,Kuk,3) + 600000*r(61,Kuk,3) + 610000*r(62,Kuk,3) + 620000*r(63,Kuk,3) + 630000*r(64,Kuk,3) + 640000*r(65,Kuk,3) + 650000*r(66,Kuk,3) + 660000*r(67,Kuk,3)
     
      + 670000*r(68,Kuk,3) + 680000*r(69,Kuk,3) + 690000*r(70,Kuk,3) + 700000*r(71,Kuk,3) + 710000*r(72,Kuk,3) + 720000*r(73,Kuk,3) + 730000*r(74,Kuk,3) + 740000*r(75,Kuk,3) + 750000*r(76,Kuk,3) + 760000*r(77,Kuk,3) + 770000*r(78,Kuk,3)
     
      + 780000*r(79,Kuk,3) + 790000*r(80,Kuk,3) + 800000*r(81,Kuk,3) + 810000*r(82,Kuk,3) + 820000*r(83,Kuk,3) + 830000*r(84,Kuk,3) + 840000*r(85,Kuk,3) + 850000*r(86,Kuk,3) + 860000*r(87,Kuk,3) + 870000*r(88,Kuk,3) + 880000*r(89,Kuk,3)
     
      + 890000*r(90,Kuk,3) + 900000*r(91,Kuk,3) + 910000*r(92,Kuk,3) + 920000*r(93,Kuk,3) + 930000*r(94,Kuk,3) + 940000*r(95,Kuk,3) + 950000*r(96,Kuk,3) + 960000*r(97,Kuk,3) + 970000*r(98,Kuk,3) + 980000*r(99,Kuk,3) + 990000*r(100,Kuk,3)
     
      + 1000000*r(101,Kuk,3) + 1010000*r(102,Kuk,3) + 1020000*r(103,Kuk,3) + 1030000*r(104,Kuk,3) + 1040000*r(105,Kuk,3) + 1050000*r(106,Kuk,3) + 1060000*r(107,Kuk,3) =G= 0 ; (LHS = 0)
     
prod_starved(Kok,1)..  - s(Kok,1) + 10000*r(2,Kok,1) + 20000*r(3,Kok,1) + 30000*r(4,Kok,1) + 40000*r(5,Kok,1) + 50000*r(6,Kok,1) + 60000*r(7,Kok,1) + 70000*r(8,Kok,1) + 80000*r(9,Kok,1) + 90000*r(10,Kok,1) + 100000*r(11,Kok,1) + 110000*r(12,Kok,1)
     
      + 120000*r(13,Kok,1) + 130000*r(14,Kok,1) + 140000*r(15,Kok,1) + 150000*r(16,Kok,1) + 160000*r(17,Kok,1) + 170000*r(18,Kok,1) + 180000*r(19,Kok,1) + 190000*r(20,Kok,1) + 200000*r(21,Kok,1) + 210000*r(22,Kok,1) + 220000*r(23,Kok,1)
     
      + 230000*r(24,Kok,1) + 240000*r(25,Kok,1) + 250000*r(26,Kok,1) + 260000*r(27,Kok,1) + 270000*r(28,Kok,1) + 280000*r(29,Kok,1) + 290000*r(30,Kok,1) + 300000*r(31,Kok,1) + 310000*r(32,Kok,1) + 320000*r(33,Kok,1) + 330000*r(34,Kok,1)
     
      + 340000*r(35,Kok,1) + 350000*r(36,Kok,1) + 360000*r(37,Kok,1) + 370000*r(38,Kok,1) + 380000*r(39,Kok,1) + 390000*r(40,Kok,1) + 400000*r(41,Kok,1) + 410000*r(42,Kok,1) + 420000*r(43,Kok,1) + 430000*r(44,Kok,1) + 440000*r(45,Kok,1)
     
      + 450000*r(46,Kok,1) + 460000*r(47,Kok,1) + 470000*r(48,Kok,1) + 480000*r(49,Kok,1) + 490000*r(50,Kok,1) + 500000*r(51,Kok,1) + 510000*r(52,Kok,1) + 520000*r(53,Kok,1) + 530000*r(54,Kok,1) + 540000*r(55,Kok,1) + 550000*r(56,Kok,1)
     
      + 560000*r(57,Kok,1) + 570000*r(58,Kok,1) + 580000*r(59,Kok,1) + 590000*r(60,Kok,1) + 600000*r(61,Kok,1) + 610000*r(62,Kok,1) + 620000*r(63,Kok,1) + 630000*r(64,Kok,1) + 640000*r(65,Kok,1) + 650000*r(66,Kok,1) + 660000*r(67,Kok,1)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 22:25:36 Page 16
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 416


     prod_starved  =G=  ensure that production can not be starved in each year     
     
      + 670000*r(68,Kok,1) + 680000*r(69,Kok,1) + 690000*r(70,Kok,1) + 700000*r(71,Kok,1) + 710000*r(72,Kok,1) + 720000*r(73,Kok,1) + 730000*r(74,Kok,1) + 740000*r(75,Kok,1) + 750000*r(76,Kok,1) + 760000*r(77,Kok,1) + 770000*r(78,Kok,1)
     
      + 780000*r(79,Kok,1) + 790000*r(80,Kok,1) + 800000*r(81,Kok,1) + 810000*r(82,Kok,1) + 820000*r(83,Kok,1) + 830000*r(84,Kok,1) + 840000*r(85,Kok,1) + 850000*r(86,Kok,1) + 860000*r(87,Kok,1) + 870000*r(88,Kok,1) + 880000*r(89,Kok,1)
     
      + 890000*r(90,Kok,1) + 900000*r(91,Kok,1) + 910000*r(92,Kok,1) + 920000*r(93,Kok,1) + 930000*r(94,Kok,1) + 940000*r(95,Kok,1) + 950000*r(96,Kok,1) + 960000*r(97,Kok,1) + 970000*r(98,Kok,1) + 980000*r(99,Kok,1) + 990000*r(100,Kok,1)
     
      + 1000000*r(101,Kok,1) + 1010000*r(102,Kok,1) + 1020000*r(103,Kok,1) + 1030000*r(104,Kok,1) + 1040000*r(105,Kok,1) + 1050000*r(106,Kok,1) + 1060000*r(107,Kok,1) =G= 0 ; (LHS = 0)
     
prod_starved(Kok,2)..  - s(Kok,2) + 10000*r(2,Kok,2) + 20000*r(3,Kok,2) + 30000*r(4,Kok,2) + 40000*r(5,Kok,2) + 50000*r(6,Kok,2) + 60000*r(7,Kok,2) + 70000*r(8,Kok,2) + 80000*r(9,Kok,2) + 90000*r(10,Kok,2) + 100000*r(11,Kok,2) + 110000*r(12,Kok,2)
     
      + 120000*r(13,Kok,2) + 130000*r(14,Kok,2) + 140000*r(15,Kok,2) + 150000*r(16,Kok,2) + 160000*r(17,Kok,2) + 170000*r(18,Kok,2) + 180000*r(19,Kok,2) + 190000*r(20,Kok,2) + 200000*r(21,Kok,2) + 210000*r(22,Kok,2) + 220000*r(23,Kok,2)
     
      + 230000*r(24,Kok,2) + 240000*r(25,Kok,2) + 250000*r(26,Kok,2) + 260000*r(27,Kok,2) + 270000*r(28,Kok,2) + 280000*r(29,Kok,2) + 290000*r(30,Kok,2) + 300000*r(31,Kok,2) + 310000*r(32,Kok,2) + 320000*r(33,Kok,2) + 330000*r(34,Kok,2)
     
      + 340000*r(35,Kok,2) + 350000*r(36,Kok,2) + 360000*r(37,Kok,2) + 370000*r(38,Kok,2) + 380000*r(39,Kok,2) + 390000*r(40,Kok,2) + 400000*r(41,Kok,2) + 410000*r(42,Kok,2) + 420000*r(43,Kok,2) + 430000*r(44,Kok,2) + 440000*r(45,Kok,2)
     
      + 450000*r(46,Kok,2) + 460000*r(47,Kok,2) + 470000*r(48,Kok,2) + 480000*r(49,Kok,2) + 490000*r(50,Kok,2) + 500000*r(51,Kok,2) + 510000*r(52,Kok,2) + 520000*r(53,Kok,2) + 530000*r(54,Kok,2) + 540000*r(55,Kok,2) + 550000*r(56,Kok,2)
     
      + 560000*r(57,Kok,2) + 570000*r(58,Kok,2) + 580000*r(59,Kok,2) + 590000*r(60,Kok,2) + 600000*r(61,Kok,2) + 610000*r(62,Kok,2) + 620000*r(63,Kok,2) + 630000*r(64,Kok,2) + 640000*r(65,Kok,2) + 650000*r(66,Kok,2) + 660000*r(67,Kok,2)
     
      + 670000*r(68,Kok,2) + 680000*r(69,Kok,2) + 690000*r(70,Kok,2) + 700000*r(71,Kok,2) + 710000*r(72,Kok,2) + 720000*r(73,Kok,2) + 730000*r(74,Kok,2) + 740000*r(75,Kok,2) + 750000*r(76,Kok,2) + 760000*r(77,Kok,2) + 770000*r(78,Kok,2)
     
      + 780000*r(79,Kok,2) + 790000*r(80,Kok,2) + 800000*r(81,Kok,2) + 810000*r(82,Kok,2) + 820000*r(83,Kok,2) + 830000*r(84,Kok,2) + 840000*r(85,Kok,2) + 850000*r(86,Kok,2) + 860000*r(87,Kok,2) + 870000*r(88,Kok,2) + 880000*r(89,Kok,2)
     
      + 890000*r(90,Kok,2) + 900000*r(91,Kok,2) + 910000*r(92,Kok,2) + 920000*r(93,Kok,2) + 930000*r(94,Kok,2) + 940000*r(95,Kok,2) + 950000*r(96,Kok,2) + 960000*r(97,Kok,2) + 970000*r(98,Kok,2) + 980000*r(99,Kok,2) + 990000*r(100,Kok,2)
     
      + 1000000*r(101,Kok,2) + 1010000*r(102,Kok,2) + 1020000*r(103,Kok,2) + 1030000*r(104,Kok,2) + 1040000*r(105,Kok,2) + 1050000*r(106,Kok,2) + 1060000*r(107,Kok,2) =G= 0 ; (LHS = 0)
     
prod_starved(Kok,3)..  - s(Kok,3) + 10000*r(2,Kok,3) + 20000*r(3,Kok,3) + 30000*r(4,Kok,3) + 40000*r(5,Kok,3) + 50000*r(6,Kok,3) + 60000*r(7,Kok,3) + 70000*r(8,Kok,3) + 80000*r(9,Kok,3) + 90000*r(10,Kok,3) + 100000*r(11,Kok,3) + 110000*r(12,Kok,3)
     
      + 120000*r(13,Kok,3) + 130000*r(14,Kok,3) + 140000*r(15,Kok,3) + 150000*r(16,Kok,3) + 160000*r(17,Kok,3) + 170000*r(18,Kok,3) + 180000*r(19,Kok,3) + 190000*r(20,Kok,3) + 200000*r(21,Kok,3) + 210000*r(22,Kok,3) + 220000*r(23,Kok,3)
     
      + 230000*r(24,Kok,3) + 240000*r(25,Kok,3) + 250000*r(26,Kok,3) + 260000*r(27,Kok,3) + 270000*r(28,Kok,3) + 280000*r(29,Kok,3) + 290000*r(30,Kok,3) + 300000*r(31,Kok,3) + 310000*r(32,Kok,3) + 320000*r(33,Kok,3) + 330000*r(34,Kok,3)
     
      + 340000*r(35,Kok,3) + 350000*r(36,Kok,3) + 360000*r(37,Kok,3) + 370000*r(38,Kok,3) + 380000*r(39,Kok,3) + 390000*r(40,Kok,3) + 400000*r(41,Kok,3) + 410000*r(42,Kok,3) + 420000*r(43,Kok,3) + 430000*r(44,Kok,3) + 440000*r(45,Kok,3)
     
      + 450000*r(46,Kok,3) + 460000*r(47,Kok,3) + 470000*r(48,Kok,3) + 480000*r(49,Kok,3) + 490000*r(50,Kok,3) + 500000*r(51,Kok,3) + 510000*r(52,Kok,3) + 520000*r(53,Kok,3) + 530000*r(54,Kok,3) + 540000*r(55,Kok,3) + 550000*r(56,Kok,3)
     
      + 560000*r(57,Kok,3) + 570000*r(58,Kok,3) + 580000*r(59,Kok,3) + 590000*r(60,Kok,3) + 600000*r(61,Kok,3) + 610000*r(62,Kok,3) + 620000*r(63,Kok,3) + 630000*r(64,Kok,3) + 640000*r(65,Kok,3) + 650000*r(66,Kok,3) + 660000*r(67,Kok,3)
     
      + 670000*r(68,Kok,3) + 680000*r(69,Kok,3) + 690000*r(70,Kok,3) + 700000*r(71,Kok,3) + 710000*r(72,Kok,3) + 720000*r(73,Kok,3) + 730000*r(74,Kok,3) + 740000*r(75,Kok,3) + 750000*r(76,Kok,3) + 760000*r(77,Kok,3) + 770000*r(78,Kok,3)
     
      + 780000*r(79,Kok,3) + 790000*r(80,Kok,3) + 800000*r(81,Kok,3) + 810000*r(82,Kok,3) + 820000*r(83,Kok,3) + 830000*r(84,Kok,3) + 840000*r(85,Kok,3) + 850000*r(86,Kok,3) + 860000*r(87,Kok,3) + 870000*r(88,Kok,3) + 880000*r(89,Kok,3)
     
      + 890000*r(90,Kok,3) + 900000*r(91,Kok,3) + 910000*r(92,Kok,3) + 920000*r(93,Kok,3) + 930000*r(94,Kok,3) + 940000*r(95,Kok,3) + 950000*r(96,Kok,3) + 960000*r(97,Kok,3) + 970000*r(98,Kok,3) + 980000*r(99,Kok,3) + 990000*r(100,Kok,3)
     
      + 1000000*r(101,Kok,3) + 1010000*r(102,Kok,3) + 1020000*r(103,Kok,3) + 1030000*r(104,Kok,3) + 1040000*r(105,Kok,3) + 1050000*r(106,Kok,3) + 1060000*r(107,Kok,3) =G= 0 ; (LHS = 0)
     
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 22:25:36 Page 17
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 416


---- Sold_Prod  =L=  we cant sell more than we produce in each year

Sold_Prod(Mas,1)..  - y(Mas,1) + 10000*u(2,Mas,EU,1) + 10000*u(2,Mas,IE,1) + 10000*u(2,Mas,PA,1) + 10000*u(2,Mas,KI,1) + 20000*u(3,Mas,EU,1) + 20000*u(3,Mas,IE,1) + 20000*u(3,Mas,PA,1) + 20000*u(3,Mas,KI,1) + 30000*u(4,Mas,EU,1) + 30000*u(4,Mas,IE,1)
     
      + 30000*u(4,Mas,PA,1) + 30000*u(4,Mas,KI,1) + 40000*u(5,Mas,EU,1) + 40000*u(5,Mas,IE,1) + 40000*u(5,Mas,PA,1) + 40000*u(5,Mas,KI,1) + 50000*u(6,Mas,EU,1) + 50000*u(6,Mas,IE,1) + 50000*u(6,Mas,PA,1) + 50000*u(6,Mas,KI,1) + 60000*u(7,Mas,EU,1)
     
      + 60000*u(7,Mas,IE,1) + 60000*u(7,Mas,PA,1) + 60000*u(7,Mas,KI,1) + 70000*u(8,Mas,EU,1) + 70000*u(8,Mas,IE,1) + 70000*u(8,Mas,PA,1) + 70000*u(8,Mas,KI,1) + 80000*u(9,Mas,EU,1) + 80000*u(9,Mas,IE,1) + 80000*u(9,Mas,PA,1) + 80000*u(9,Mas,KI,1)
     
      + 90000*u(10,Mas,EU,1) + 90000*u(10,Mas,IE,1) + 90000*u(10,Mas,PA,1) + 90000*u(10,Mas,KI,1) + 100000*u(11,Mas,EU,1) + 100000*u(11,Mas,IE,1) + 100000*u(11,Mas,PA,1) + 100000*u(11,Mas,KI,1) + 110000*u(12,Mas,EU,1) + 110000*u(12,Mas,IE,1)
     
      + 110000*u(12,Mas,PA,1) + 110000*u(12,Mas,KI,1) + 120000*u(13,Mas,EU,1) + 120000*u(13,Mas,IE,1) + 120000*u(13,Mas,PA,1) + 120000*u(13,Mas,KI,1) + 130000*u(14,Mas,EU,1) + 130000*u(14,Mas,IE,1) + 130000*u(14,Mas,PA,1) + 130000*u(14,Mas,KI,1)
     
      + 140000*u(15,Mas,EU,1) + 140000*u(15,Mas,IE,1) + 140000*u(15,Mas,PA,1) + 140000*u(15,Mas,KI,1) + 150000*u(16,Mas,EU,1) + 150000*u(16,Mas,IE,1) + 150000*u(16,Mas,PA,1) + 150000*u(16,Mas,KI,1) + 160000*u(17,Mas,EU,1) + 160000*u(17,Mas,IE,1)
     
      + 160000*u(17,Mas,PA,1) + 160000*u(17,Mas,KI,1) + 170000*u(18,Mas,EU,1) + 170000*u(18,Mas,IE,1) + 170000*u(18,Mas,PA,1) + 170000*u(18,Mas,KI,1) + 180000*u(19,Mas,EU,1) + 180000*u(19,Mas,IE,1) + 180000*u(19,Mas,PA,1) + 180000*u(19,Mas,KI,1)
     
      + 190000*u(20,Mas,EU,1) + 190000*u(20,Mas,IE,1) + 190000*u(20,Mas,PA,1) + 190000*u(20,Mas,KI,1) + 200000*u(21,Mas,EU,1) + 200000*u(21,Mas,IE,1) + 200000*u(21,Mas,PA,1) + 200000*u(21,Mas,KI,1) + 210000*u(22,Mas,EU,1) + 210000*u(22,Mas,IE,1)
     
      + 210000*u(22,Mas,PA,1) + 210000*u(22,Mas,KI,1) + 220000*u(23,Mas,EU,1) + 220000*u(23,Mas,IE,1) + 220000*u(23,Mas,PA,1) + 220000*u(23,Mas,KI,1) =L= 0 ; (LHS = 0)
     
Sold_Prod(Mas,2)..  - y(Mas,2) + 10000*u(2,Mas,EU,2) + 10000*u(2,Mas,IE,2) + 10000*u(2,Mas,PA,2) + 10000*u(2,Mas,KI,2) + 20000*u(3,Mas,EU,2) + 20000*u(3,Mas,IE,2) + 20000*u(3,Mas,PA,2) + 20000*u(3,Mas,KI,2) + 30000*u(4,Mas,EU,2) + 30000*u(4,Mas,IE,2)
     
      + 30000*u(4,Mas,PA,2) + 30000*u(4,Mas,KI,2) + 40000*u(5,Mas,EU,2) + 40000*u(5,Mas,IE,2) + 40000*u(5,Mas,PA,2) + 40000*u(5,Mas,KI,2) + 50000*u(6,Mas,EU,2) + 50000*u(6,Mas,IE,2) + 50000*u(6,Mas,PA,2) + 50000*u(6,Mas,KI,2) + 60000*u(7,Mas,EU,2)
     
      + 60000*u(7,Mas,IE,2) + 60000*u(7,Mas,PA,2) + 60000*u(7,Mas,KI,2) + 70000*u(8,Mas,EU,2) + 70000*u(8,Mas,IE,2) + 70000*u(8,Mas,PA,2) + 70000*u(8,Mas,KI,2) + 80000*u(9,Mas,EU,2) + 80000*u(9,Mas,IE,2) + 80000*u(9,Mas,PA,2) + 80000*u(9,Mas,KI,2)
     
      + 90000*u(10,Mas,EU,2) + 90000*u(10,Mas,IE,2) + 90000*u(10,Mas,PA,2) + 90000*u(10,Mas,KI,2) + 100000*u(11,Mas,EU,2) + 100000*u(11,Mas,IE,2) + 100000*u(11,Mas,PA,2) + 100000*u(11,Mas,KI,2) + 110000*u(12,Mas,EU,2) + 110000*u(12,Mas,IE,2)
     
      + 110000*u(12,Mas,PA,2) + 110000*u(12,Mas,KI,2) + 120000*u(13,Mas,EU,2) + 120000*u(13,Mas,IE,2) + 120000*u(13,Mas,PA,2) + 120000*u(13,Mas,KI,2) + 130000*u(14,Mas,EU,2) + 130000*u(14,Mas,IE,2) + 130000*u(14,Mas,PA,2) + 130000*u(14,Mas,KI,2)
     
      + 140000*u(15,Mas,EU,2) + 140000*u(15,Mas,IE,2) + 140000*u(15,Mas,PA,2) + 140000*u(15,Mas,KI,2) + 150000*u(16,Mas,EU,2) + 150000*u(16,Mas,IE,2) + 150000*u(16,Mas,PA,2) + 150000*u(16,Mas,KI,2) + 160000*u(17,Mas,EU,2) + 160000*u(17,Mas,IE,2)
     
      + 160000*u(17,Mas,PA,2) + 160000*u(17,Mas,KI,2) + 170000*u(18,Mas,EU,2) + 170000*u(18,Mas,IE,2) + 170000*u(18,Mas,PA,2) + 170000*u(18,Mas,KI,2) + 180000*u(19,Mas,EU,2) + 180000*u(19,Mas,IE,2) + 180000*u(19,Mas,PA,2) + 180000*u(19,Mas,KI,2)
     
      + 190000*u(20,Mas,EU,2) + 190000*u(20,Mas,IE,2) + 190000*u(20,Mas,PA,2) + 190000*u(20,Mas,KI,2) + 200000*u(21,Mas,EU,2) + 200000*u(21,Mas,IE,2) + 200000*u(21,Mas,PA,2) + 200000*u(21,Mas,KI,2) + 210000*u(22,Mas,EU,2) + 210000*u(22,Mas,IE,2)
     
      + 210000*u(22,Mas,PA,2) + 210000*u(22,Mas,KI,2) + 220000*u(23,Mas,EU,2) + 220000*u(23,Mas,IE,2) + 220000*u(23,Mas,PA,2) + 220000*u(23,Mas,KI,2) =L= 0 ; (LHS = 0)
     
Sold_Prod(Mas,3)..  - y(Mas,3) + 10000*u(2,Mas,EU,3) + 10000*u(2,Mas,IE,3) + 10000*u(2,Mas,PA,3) + 10000*u(2,Mas,KI,3) + 20000*u(3,Mas,EU,3) + 20000*u(3,Mas,IE,3) + 20000*u(3,Mas,PA,3) + 20000*u(3,Mas,KI,3) + 30000*u(4,Mas,EU,3) + 30000*u(4,Mas,IE,3)
     
      + 30000*u(4,Mas,PA,3) + 30000*u(4,Mas,KI,3) + 40000*u(5,Mas,EU,3) + 40000*u(5,Mas,IE,3) + 40000*u(5,Mas,PA,3) + 40000*u(5,Mas,KI,3) + 50000*u(6,Mas,EU,3) + 50000*u(6,Mas,IE,3) + 50000*u(6,Mas,PA,3) + 50000*u(6,Mas,KI,3) + 60000*u(7,Mas,EU,3)
     
      + 60000*u(7,Mas,IE,3) + 60000*u(7,Mas,PA,3) + 60000*u(7,Mas,KI,3) + 70000*u(8,Mas,EU,3) + 70000*u(8,Mas,IE,3) + 70000*u(8,Mas,PA,3) + 70000*u(8,Mas,KI,3) + 80000*u(9,Mas,EU,3) + 80000*u(9,Mas,IE,3) + 80000*u(9,Mas,PA,3) + 80000*u(9,Mas,KI,3)
     
      + 90000*u(10,Mas,EU,3) + 90000*u(10,Mas,IE,3) + 90000*u(10,Mas,PA,3) + 90000*u(10,Mas,KI,3) + 100000*u(11,Mas,EU,3) + 100000*u(11,Mas,IE,3) + 100000*u(11,Mas,PA,3) + 100000*u(11,Mas,KI,3) + 110000*u(12,Mas,EU,3) + 110000*u(12,Mas,IE,3)
     
      + 110000*u(12,Mas,PA,3) + 110000*u(12,Mas,KI,3) + 120000*u(13,Mas,EU,3) + 120000*u(13,Mas,IE,3) + 120000*u(13,Mas,PA,3) + 120000*u(13,Mas,KI,3) + 130000*u(14,Mas,EU,3) + 130000*u(14,Mas,IE,3) + 130000*u(14,Mas,PA,3) + 130000*u(14,Mas,KI,3)
     
      + 140000*u(15,Mas,EU,3) + 140000*u(15,Mas,IE,3) + 140000*u(15,Mas,PA,3) + 140000*u(15,Mas,KI,3) + 150000*u(16,Mas,EU,3) + 150000*u(16,Mas,IE,3) + 150000*u(16,Mas,PA,3) + 150000*u(16,Mas,KI,3) + 160000*u(17,Mas,EU,3) + 160000*u(17,Mas,IE,3)
     
      + 160000*u(17,Mas,PA,3) + 160000*u(17,Mas,KI,3) + 170000*u(18,Mas,EU,3) + 170000*u(18,Mas,IE,3) + 170000*u(18,Mas,PA,3) + 170000*u(18,Mas,KI,3) + 180000*u(19,Mas,EU,3) + 180000*u(19,Mas,IE,3) + 180000*u(19,Mas,PA,3) + 180000*u(19,Mas,KI,3)
     
      + 190000*u(20,Mas,EU,3) + 190000*u(20,Mas,IE,3) + 190000*u(20,Mas,PA,3) + 190000*u(20,Mas,KI,3) + 200000*u(21,Mas,EU,3) + 200000*u(21,Mas,IE,3) + 200000*u(21,Mas,PA,3) + 200000*u(21,Mas,KI,3) + 210000*u(22,Mas,EU,3) + 210000*u(22,Mas,IE,3)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 22:25:36 Page 18
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 416


     Sold_Prod  =L=  we cant sell more than we produce in each year     
     
      + 210000*u(22,Mas,PA,3) + 210000*u(22,Mas,KI,3) + 220000*u(23,Mas,EU,3) + 220000*u(23,Mas,IE,3) + 220000*u(23,Mas,PA,3) + 220000*u(23,Mas,KI,3) =L= 0 ; (LHS = 0)
     
Sold_Prod(Kus,1)..  - y(Kus,1) =L= 0 ; (LHS = 0)
     
Sold_Prod(Kus,2)..  - y(Kus,2) =L= 0 ; (LHS = 0)
     
Sold_Prod(Kus,3)..  - y(Kus,3) =L= 0 ; (LHS = 0)
     
Sold_Prod(Kos,1)..  - y(Kos,1) + 10000*u(2,Kos,EU,1) + 10000*u(2,Kos,IE,1) + 10000*u(2,Kos,PA,1) + 10000*u(2,Kos,KI,1) + 20000*u(3,Kos,EU,1) + 20000*u(3,Kos,IE,1) + 20000*u(3,Kos,PA,1) + 20000*u(3,Kos,KI,1) + 30000*u(4,Kos,EU,1) + 30000*u(4,Kos,IE,1)
     
      + 30000*u(4,Kos,PA,1) + 30000*u(4,Kos,KI,1) + 40000*u(5,Kos,EU,1) + 40000*u(5,Kos,IE,1) + 40000*u(5,Kos,PA,1) + 40000*u(5,Kos,KI,1) + 50000*u(6,Kos,EU,1) + 50000*u(6,Kos,IE,1) + 50000*u(6,Kos,PA,1) + 50000*u(6,Kos,KI,1) + 60000*u(7,Kos,EU,1)
     
      + 60000*u(7,Kos,IE,1) + 60000*u(7,Kos,PA,1) + 60000*u(7,Kos,KI,1) + 70000*u(8,Kos,EU,1) + 70000*u(8,Kos,IE,1) + 70000*u(8,Kos,PA,1) + 70000*u(8,Kos,KI,1) + 80000*u(9,Kos,EU,1) + 80000*u(9,Kos,IE,1) + 80000*u(9,Kos,PA,1) + 80000*u(9,Kos,KI,1)
     
      + 90000*u(10,Kos,EU,1) + 90000*u(10,Kos,IE,1) + 90000*u(10,Kos,PA,1) + 90000*u(10,Kos,KI,1) + 100000*u(11,Kos,EU,1) + 100000*u(11,Kos,IE,1) + 100000*u(11,Kos,PA,1) + 100000*u(11,Kos,KI,1) + 110000*u(12,Kos,EU,1) + 110000*u(12,Kos,IE,1)
     
      + 110000*u(12,Kos,PA,1) + 110000*u(12,Kos,KI,1) + 120000*u(13,Kos,EU,1) + 120000*u(13,Kos,IE,1) + 120000*u(13,Kos,PA,1) + 120000*u(13,Kos,KI,1) + 130000*u(14,Kos,EU,1) + 130000*u(14,Kos,IE,1) + 130000*u(14,Kos,PA,1) + 130000*u(14,Kos,KI,1)
     
      + 140000*u(15,Kos,EU,1) + 140000*u(15,Kos,IE,1) + 140000*u(15,Kos,PA,1) + 140000*u(15,Kos,KI,1) + 150000*u(16,Kos,EU,1) + 150000*u(16,Kos,IE,1) + 150000*u(16,Kos,PA,1) + 150000*u(16,Kos,KI,1) + 160000*u(17,Kos,EU,1) + 160000*u(17,Kos,IE,1)
     
      + 160000*u(17,Kos,PA,1) + 160000*u(17,Kos,KI,1) + 170000*u(18,Kos,EU,1) + 170000*u(18,Kos,IE,1) + 170000*u(18,Kos,PA,1) + 170000*u(18,Kos,KI,1) + 180000*u(19,Kos,EU,1) + 180000*u(19,Kos,IE,1) + 180000*u(19,Kos,PA,1) + 180000*u(19,Kos,KI,1)
     
      + 190000*u(20,Kos,EU,1) + 190000*u(20,Kos,IE,1) + 190000*u(20,Kos,PA,1) + 190000*u(20,Kos,KI,1) + 200000*u(21,Kos,EU,1) + 200000*u(21,Kos,IE,1) + 200000*u(21,Kos,PA,1) + 200000*u(21,Kos,KI,1) + 210000*u(22,Kos,EU,1) + 210000*u(22,Kos,IE,1)
     
      + 210000*u(22,Kos,PA,1) + 210000*u(22,Kos,KI,1) + 220000*u(23,Kos,EU,1) + 220000*u(23,Kos,IE,1) + 220000*u(23,Kos,PA,1) + 220000*u(23,Kos,KI,1) =L= 0 ; (LHS = 0)
     
Sold_Prod(Kos,2)..  - y(Kos,2) + 10000*u(2,Kos,EU,2) + 10000*u(2,Kos,IE,2) + 10000*u(2,Kos,PA,2) + 10000*u(2,Kos,KI,2) + 20000*u(3,Kos,EU,2) + 20000*u(3,Kos,IE,2) + 20000*u(3,Kos,PA,2) + 20000*u(3,Kos,KI,2) + 30000*u(4,Kos,EU,2) + 30000*u(4,Kos,IE,2)
     
      + 30000*u(4,Kos,PA,2) + 30000*u(4,Kos,KI,2) + 40000*u(5,Kos,EU,2) + 40000*u(5,Kos,IE,2) + 40000*u(5,Kos,PA,2) + 40000*u(5,Kos,KI,2) + 50000*u(6,Kos,EU,2) + 50000*u(6,Kos,IE,2) + 50000*u(6,Kos,PA,2) + 50000*u(6,Kos,KI,2) + 60000*u(7,Kos,EU,2)
     
      + 60000*u(7,Kos,IE,2) + 60000*u(7,Kos,PA,2) + 60000*u(7,Kos,KI,2) + 70000*u(8,Kos,EU,2) + 70000*u(8,Kos,IE,2) + 70000*u(8,Kos,PA,2) + 70000*u(8,Kos,KI,2) + 80000*u(9,Kos,EU,2) + 80000*u(9,Kos,IE,2) + 80000*u(9,Kos,PA,2) + 80000*u(9,Kos,KI,2)
     
      + 90000*u(10,Kos,EU,2) + 90000*u(10,Kos,IE,2) + 90000*u(10,Kos,PA,2) + 90000*u(10,Kos,KI,2) + 100000*u(11,Kos,EU,2) + 100000*u(11,Kos,IE,2) + 100000*u(11,Kos,PA,2) + 100000*u(11,Kos,KI,2) + 110000*u(12,Kos,EU,2) + 110000*u(12,Kos,IE,2)
     
      + 110000*u(12,Kos,PA,2) + 110000*u(12,Kos,KI,2) + 120000*u(13,Kos,EU,2) + 120000*u(13,Kos,IE,2) + 120000*u(13,Kos,PA,2) + 120000*u(13,Kos,KI,2) + 130000*u(14,Kos,EU,2) + 130000*u(14,Kos,IE,2) + 130000*u(14,Kos,PA,2) + 130000*u(14,Kos,KI,2)
     
      + 140000*u(15,Kos,EU,2) + 140000*u(15,Kos,IE,2) + 140000*u(15,Kos,PA,2) + 140000*u(15,Kos,KI,2) + 150000*u(16,Kos,EU,2) + 150000*u(16,Kos,IE,2) + 150000*u(16,Kos,PA,2) + 150000*u(16,Kos,KI,2) + 160000*u(17,Kos,EU,2) + 160000*u(17,Kos,IE,2)
     
      + 160000*u(17,Kos,PA,2) + 160000*u(17,Kos,KI,2) + 170000*u(18,Kos,EU,2) + 170000*u(18,Kos,IE,2) + 170000*u(18,Kos,PA,2) + 170000*u(18,Kos,KI,2) + 180000*u(19,Kos,EU,2) + 180000*u(19,Kos,IE,2) + 180000*u(19,Kos,PA,2) + 180000*u(19,Kos,KI,2)
     
      + 190000*u(20,Kos,EU,2) + 190000*u(20,Kos,IE,2) + 190000*u(20,Kos,PA,2) + 190000*u(20,Kos,KI,2) + 200000*u(21,Kos,EU,2) + 200000*u(21,Kos,IE,2) + 200000*u(21,Kos,PA,2) + 200000*u(21,Kos,KI,2) + 210000*u(22,Kos,EU,2) + 210000*u(22,Kos,IE,2)
     
      + 210000*u(22,Kos,PA,2) + 210000*u(22,Kos,KI,2) + 220000*u(23,Kos,EU,2) + 220000*u(23,Kos,IE,2) + 220000*u(23,Kos,PA,2) + 220000*u(23,Kos,KI,2) =L= 0 ; (LHS = 0)
     
Sold_Prod(Kos,3)..  - y(Kos,3) + 10000*u(2,Kos,EU,3) + 10000*u(2,Kos,IE,3) + 10000*u(2,Kos,PA,3) + 10000*u(2,Kos,KI,3) + 20000*u(3,Kos,EU,3) + 20000*u(3,Kos,IE,3) + 20000*u(3,Kos,PA,3) + 20000*u(3,Kos,KI,3) + 30000*u(4,Kos,EU,3) + 30000*u(4,Kos,IE,3)
     
      + 30000*u(4,Kos,PA,3) + 30000*u(4,Kos,KI,3) + 40000*u(5,Kos,EU,3) + 40000*u(5,Kos,IE,3) + 40000*u(5,Kos,PA,3) + 40000*u(5,Kos,KI,3) + 50000*u(6,Kos,EU,3) + 50000*u(6,Kos,IE,3) + 50000*u(6,Kos,PA,3) + 50000*u(6,Kos,KI,3) + 60000*u(7,Kos,EU,3)
     
      + 60000*u(7,Kos,IE,3) + 60000*u(7,Kos,PA,3) + 60000*u(7,Kos,KI,3) + 70000*u(8,Kos,EU,3) + 70000*u(8,Kos,IE,3) + 70000*u(8,Kos,PA,3) + 70000*u(8,Kos,KI,3) + 80000*u(9,Kos,EU,3) + 80000*u(9,Kos,IE,3) + 80000*u(9,Kos,PA,3) + 80000*u(9,Kos,KI,3)
     
      + 90000*u(10,Kos,EU,3) + 90000*u(10,Kos,IE,3) + 90000*u(10,Kos,PA,3) + 90000*u(10,Kos,KI,3) + 100000*u(11,Kos,EU,3) + 100000*u(11,Kos,IE,3) + 100000*u(11,Kos,PA,3) + 100000*u(11,Kos,KI,3) + 110000*u(12,Kos,EU,3) + 110000*u(12,Kos,IE,3)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 22:25:36 Page 19
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 416


     Sold_Prod  =L=  we cant sell more than we produce in each year     
     
      + 110000*u(12,Kos,PA,3) + 110000*u(12,Kos,KI,3) + 120000*u(13,Kos,EU,3) + 120000*u(13,Kos,IE,3) + 120000*u(13,Kos,PA,3) + 120000*u(13,Kos,KI,3) + 130000*u(14,Kos,EU,3) + 130000*u(14,Kos,IE,3) + 130000*u(14,Kos,PA,3) + 130000*u(14,Kos,KI,3)
     
      + 140000*u(15,Kos,EU,3) + 140000*u(15,Kos,IE,3) + 140000*u(15,Kos,PA,3) + 140000*u(15,Kos,KI,3) + 150000*u(16,Kos,EU,3) + 150000*u(16,Kos,IE,3) + 150000*u(16,Kos,PA,3) + 150000*u(16,Kos,KI,3) + 160000*u(17,Kos,EU,3) + 160000*u(17,Kos,IE,3)
     
      + 160000*u(17,Kos,PA,3) + 160000*u(17,Kos,KI,3) + 170000*u(18,Kos,EU,3) + 170000*u(18,Kos,IE,3) + 170000*u(18,Kos,PA,3) + 170000*u(18,Kos,KI,3) + 180000*u(19,Kos,EU,3) + 180000*u(19,Kos,IE,3) + 180000*u(19,Kos,PA,3) + 180000*u(19,Kos,KI,3)
     
      + 190000*u(20,Kos,EU,3) + 190000*u(20,Kos,IE,3) + 190000*u(20,Kos,PA,3) + 190000*u(20,Kos,KI,3) + 200000*u(21,Kos,EU,3) + 200000*u(21,Kos,IE,3) + 200000*u(21,Kos,PA,3) + 200000*u(21,Kos,KI,3) + 210000*u(22,Kos,EU,3) + 210000*u(22,Kos,IE,3)
     
      + 210000*u(22,Kos,PA,3) + 210000*u(22,Kos,KI,3) + 220000*u(23,Kos,EU,3) + 220000*u(23,Kos,IE,3) + 220000*u(23,Kos,PA,3) + 220000*u(23,Kos,KI,3) =L= 0 ; (LHS = 0)
     
Sold_Prod(Kuv,1)..  - y(Kuv,1) + 10000*u(2,Kuv,EU,1) + 10000*u(2,Kuv,IE,1) + 10000*u(2,Kuv,PA,1) + 10000*u(2,Kuv,KI,1) + 20000*u(3,Kuv,EU,1) + 20000*u(3,Kuv,IE,1) + 20000*u(3,Kuv,PA,1) + 20000*u(3,Kuv,KI,1) + 30000*u(4,Kuv,EU,1) + 30000*u(4,Kuv,IE,1)
     
      + 30000*u(4,Kuv,PA,1) + 30000*u(4,Kuv,KI,1) + 40000*u(5,Kuv,EU,1) + 40000*u(5,Kuv,IE,1) + 40000*u(5,Kuv,PA,1) + 40000*u(5,Kuv,KI,1) + 50000*u(6,Kuv,EU,1) + 50000*u(6,Kuv,IE,1) + 50000*u(6,Kuv,PA,1) + 50000*u(6,Kuv,KI,1) + 60000*u(7,Kuv,EU,1)
     
      + 60000*u(7,Kuv,IE,1) + 60000*u(7,Kuv,PA,1) + 60000*u(7,Kuv,KI,1) + 70000*u(8,Kuv,EU,1) + 70000*u(8,Kuv,IE,1) + 70000*u(8,Kuv,PA,1) + 70000*u(8,Kuv,KI,1) + 80000*u(9,Kuv,EU,1) + 80000*u(9,Kuv,IE,1) + 80000*u(9,Kuv,PA,1) + 80000*u(9,Kuv,KI,1)
     
      + 90000*u(10,Kuv,EU,1) + 90000*u(10,Kuv,IE,1) + 90000*u(10,Kuv,PA,1) + 90000*u(10,Kuv,KI,1) + 100000*u(11,Kuv,EU,1) + 100000*u(11,Kuv,IE,1) + 100000*u(11,Kuv,PA,1) + 100000*u(11,Kuv,KI,1) + 110000*u(12,Kuv,EU,1) + 110000*u(12,Kuv,IE,1)
     
      + 110000*u(12,Kuv,PA,1) + 110000*u(12,Kuv,KI,1) + 120000*u(13,Kuv,EU,1) + 120000*u(13,Kuv,IE,1) + 120000*u(13,Kuv,PA,1) + 120000*u(13,Kuv,KI,1) + 130000*u(14,Kuv,EU,1) + 130000*u(14,Kuv,IE,1) + 130000*u(14,Kuv,PA,1) + 130000*u(14,Kuv,KI,1)
     
      + 140000*u(15,Kuv,EU,1) + 140000*u(15,Kuv,IE,1) + 140000*u(15,Kuv,PA,1) + 140000*u(15,Kuv,KI,1) + 150000*u(16,Kuv,EU,1) + 150000*u(16,Kuv,IE,1) + 150000*u(16,Kuv,PA,1) + 150000*u(16,Kuv,KI,1) + 160000*u(17,Kuv,EU,1) + 160000*u(17,Kuv,IE,1)
     
      + 160000*u(17,Kuv,PA,1) + 160000*u(17,Kuv,KI,1) + 170000*u(18,Kuv,EU,1) + 170000*u(18,Kuv,IE,1) + 170000*u(18,Kuv,PA,1) + 170000*u(18,Kuv,KI,1) + 180000*u(19,Kuv,EU,1) + 180000*u(19,Kuv,IE,1) + 180000*u(19,Kuv,PA,1) + 180000*u(19,Kuv,KI,1)
     
      + 190000*u(20,Kuv,EU,1) + 190000*u(20,Kuv,IE,1) + 190000*u(20,Kuv,PA,1) + 190000*u(20,Kuv,KI,1) + 200000*u(21,Kuv,EU,1) + 200000*u(21,Kuv,IE,1) + 200000*u(21,Kuv,PA,1) + 200000*u(21,Kuv,KI,1) + 210000*u(22,Kuv,EU,1) + 210000*u(22,Kuv,IE,1)
     
      + 210000*u(22,Kuv,PA,1) + 210000*u(22,Kuv,KI,1) + 220000*u(23,Kuv,EU,1) + 220000*u(23,Kuv,IE,1) + 220000*u(23,Kuv,PA,1) + 220000*u(23,Kuv,KI,1) =L= 0 ; (LHS = 0)
     
Sold_Prod(Kuv,2)..  - y(Kuv,2) + 10000*u(2,Kuv,EU,2) + 10000*u(2,Kuv,IE,2) + 10000*u(2,Kuv,PA,2) + 10000*u(2,Kuv,KI,2) + 20000*u(3,Kuv,EU,2) + 20000*u(3,Kuv,IE,2) + 20000*u(3,Kuv,PA,2) + 20000*u(3,Kuv,KI,2) + 30000*u(4,Kuv,EU,2) + 30000*u(4,Kuv,IE,2)
     
      + 30000*u(4,Kuv,PA,2) + 30000*u(4,Kuv,KI,2) + 40000*u(5,Kuv,EU,2) + 40000*u(5,Kuv,IE,2) + 40000*u(5,Kuv,PA,2) + 40000*u(5,Kuv,KI,2) + 50000*u(6,Kuv,EU,2) + 50000*u(6,Kuv,IE,2) + 50000*u(6,Kuv,PA,2) + 50000*u(6,Kuv,KI,2) + 60000*u(7,Kuv,EU,2)
     
      + 60000*u(7,Kuv,IE,2) + 60000*u(7,Kuv,PA,2) + 60000*u(7,Kuv,KI,2) + 70000*u(8,Kuv,EU,2) + 70000*u(8,Kuv,IE,2) + 70000*u(8,Kuv,PA,2) + 70000*u(8,Kuv,KI,2) + 80000*u(9,Kuv,EU,2) + 80000*u(9,Kuv,IE,2) + 80000*u(9,Kuv,PA,2) + 80000*u(9,Kuv,KI,2)
     
      + 90000*u(10,Kuv,EU,2) + 90000*u(10,Kuv,IE,2) + 90000*u(10,Kuv,PA,2) + 90000*u(10,Kuv,KI,2) + 100000*u(11,Kuv,EU,2) + 100000*u(11,Kuv,IE,2) + 100000*u(11,Kuv,PA,2) + 100000*u(11,Kuv,KI,2) + 110000*u(12,Kuv,EU,2) + 110000*u(12,Kuv,IE,2)
     
      + 110000*u(12,Kuv,PA,2) + 110000*u(12,Kuv,KI,2) + 120000*u(13,Kuv,EU,2) + 120000*u(13,Kuv,IE,2) + 120000*u(13,Kuv,PA,2) + 120000*u(13,Kuv,KI,2) + 130000*u(14,Kuv,EU,2) + 130000*u(14,Kuv,IE,2) + 130000*u(14,Kuv,PA,2) + 130000*u(14,Kuv,KI,2)
     
      + 140000*u(15,Kuv,EU,2) + 140000*u(15,Kuv,IE,2) + 140000*u(15,Kuv,PA,2) + 140000*u(15,Kuv,KI,2) + 150000*u(16,Kuv,EU,2) + 150000*u(16,Kuv,IE,2) + 150000*u(16,Kuv,PA,2) + 150000*u(16,Kuv,KI,2) + 160000*u(17,Kuv,EU,2) + 160000*u(17,Kuv,IE,2)
     
      + 160000*u(17,Kuv,PA,2) + 160000*u(17,Kuv,KI,2) + 170000*u(18,Kuv,EU,2) + 170000*u(18,Kuv,IE,2) + 170000*u(18,Kuv,PA,2) + 170000*u(18,Kuv,KI,2) + 180000*u(19,Kuv,EU,2) + 180000*u(19,Kuv,IE,2) + 180000*u(19,Kuv,PA,2) + 180000*u(19,Kuv,KI,2)
     
      + 190000*u(20,Kuv,EU,2) + 190000*u(20,Kuv,IE,2) + 190000*u(20,Kuv,PA,2) + 190000*u(20,Kuv,KI,2) + 200000*u(21,Kuv,EU,2) + 200000*u(21,Kuv,IE,2) + 200000*u(21,Kuv,PA,2) + 200000*u(21,Kuv,KI,2) + 210000*u(22,Kuv,EU,2) + 210000*u(22,Kuv,IE,2)
     
      + 210000*u(22,Kuv,PA,2) + 210000*u(22,Kuv,KI,2) + 220000*u(23,Kuv,EU,2) + 220000*u(23,Kuv,IE,2) + 220000*u(23,Kuv,PA,2) + 220000*u(23,Kuv,KI,2) =L= 0 ; (LHS = 0)
     
Sold_Prod(Kuv,3)..  - y(Kuv,3) + 10000*u(2,Kuv,EU,3) + 10000*u(2,Kuv,IE,3) + 10000*u(2,Kuv,PA,3) + 10000*u(2,Kuv,KI,3) + 20000*u(3,Kuv,EU,3) + 20000*u(3,Kuv,IE,3) + 20000*u(3,Kuv,PA,3) + 20000*u(3,Kuv,KI,3) + 30000*u(4,Kuv,EU,3) + 30000*u(4,Kuv,IE,3)
     
      + 30000*u(4,Kuv,PA,3) + 30000*u(4,Kuv,KI,3) + 40000*u(5,Kuv,EU,3) + 40000*u(5,Kuv,IE,3) + 40000*u(5,Kuv,PA,3) + 40000*u(5,Kuv,KI,3) + 50000*u(6,Kuv,EU,3) + 50000*u(6,Kuv,IE,3) + 50000*u(6,Kuv,PA,3) + 50000*u(6,Kuv,KI,3) + 60000*u(7,Kuv,EU,3)
     
      + 60000*u(7,Kuv,IE,3) + 60000*u(7,Kuv,PA,3) + 60000*u(7,Kuv,KI,3) + 70000*u(8,Kuv,EU,3) + 70000*u(8,Kuv,IE,3) + 70000*u(8,Kuv,PA,3) + 70000*u(8,Kuv,KI,3) + 80000*u(9,Kuv,EU,3) + 80000*u(9,Kuv,IE,3) + 80000*u(9,Kuv,PA,3) + 80000*u(9,Kuv,KI,3)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 22:25:36 Page 20
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 416


     Sold_Prod  =L=  we cant sell more than we produce in each year     
     
      + 90000*u(10,Kuv,EU,3) + 90000*u(10,Kuv,IE,3) + 90000*u(10,Kuv,PA,3) + 90000*u(10,Kuv,KI,3) + 100000*u(11,Kuv,EU,3) + 100000*u(11,Kuv,IE,3) + 100000*u(11,Kuv,PA,3) + 100000*u(11,Kuv,KI,3) + 110000*u(12,Kuv,EU,3) + 110000*u(12,Kuv,IE,3)
     
      + 110000*u(12,Kuv,PA,3) + 110000*u(12,Kuv,KI,3) + 120000*u(13,Kuv,EU,3) + 120000*u(13,Kuv,IE,3) + 120000*u(13,Kuv,PA,3) + 120000*u(13,Kuv,KI,3) + 130000*u(14,Kuv,EU,3) + 130000*u(14,Kuv,IE,3) + 130000*u(14,Kuv,PA,3) + 130000*u(14,Kuv,KI,3)
     
      + 140000*u(15,Kuv,EU,3) + 140000*u(15,Kuv,IE,3) + 140000*u(15,Kuv,PA,3) + 140000*u(15,Kuv,KI,3) + 150000*u(16,Kuv,EU,3) + 150000*u(16,Kuv,IE,3) + 150000*u(16,Kuv,PA,3) + 150000*u(16,Kuv,KI,3) + 160000*u(17,Kuv,EU,3) + 160000*u(17,Kuv,IE,3)
     
      + 160000*u(17,Kuv,PA,3) + 160000*u(17,Kuv,KI,3) + 170000*u(18,Kuv,EU,3) + 170000*u(18,Kuv,IE,3) + 170000*u(18,Kuv,PA,3) + 170000*u(18,Kuv,KI,3) + 180000*u(19,Kuv,EU,3) + 180000*u(19,Kuv,IE,3) + 180000*u(19,Kuv,PA,3) + 180000*u(19,Kuv,KI,3)
     
      + 190000*u(20,Kuv,EU,3) + 190000*u(20,Kuv,IE,3) + 190000*u(20,Kuv,PA,3) + 190000*u(20,Kuv,KI,3) + 200000*u(21,Kuv,EU,3) + 200000*u(21,Kuv,IE,3) + 200000*u(21,Kuv,PA,3) + 200000*u(21,Kuv,KI,3) + 210000*u(22,Kuv,EU,3) + 210000*u(22,Kuv,IE,3)
     
      + 210000*u(22,Kuv,PA,3) + 210000*u(22,Kuv,KI,3) + 220000*u(23,Kuv,EU,3) + 220000*u(23,Kuv,IE,3) + 220000*u(23,Kuv,PA,3) + 220000*u(23,Kuv,KI,3) =L= 0 ; (LHS = 0)
     
Sold_Prod(Kov,1)..  - y(Kov,1) + 10000*u(2,Kov,EU,1) + 10000*u(2,Kov,IE,1) + 10000*u(2,Kov,PA,1) + 10000*u(2,Kov,KI,1) + 20000*u(3,Kov,EU,1) + 20000*u(3,Kov,IE,1) + 20000*u(3,Kov,PA,1) + 20000*u(3,Kov,KI,1) + 30000*u(4,Kov,EU,1) + 30000*u(4,Kov,IE,1)
     
      + 30000*u(4,Kov,PA,1) + 30000*u(4,Kov,KI,1) + 40000*u(5,Kov,EU,1) + 40000*u(5,Kov,IE,1) + 40000*u(5,Kov,PA,1) + 40000*u(5,Kov,KI,1) + 50000*u(6,Kov,EU,1) + 50000*u(6,Kov,IE,1) + 50000*u(6,Kov,PA,1) + 50000*u(6,Kov,KI,1) + 60000*u(7,Kov,EU,1)
     
      + 60000*u(7,Kov,IE,1) + 60000*u(7,Kov,PA,1) + 60000*u(7,Kov,KI,1) + 70000*u(8,Kov,EU,1) + 70000*u(8,Kov,IE,1) + 70000*u(8,Kov,PA,1) + 70000*u(8,Kov,KI,1) + 80000*u(9,Kov,EU,1) + 80000*u(9,Kov,IE,1) + 80000*u(9,Kov,PA,1) + 80000*u(9,Kov,KI,1)
     
      + 90000*u(10,Kov,EU,1) + 90000*u(10,Kov,IE,1) + 90000*u(10,Kov,PA,1) + 90000*u(10,Kov,KI,1) + 100000*u(11,Kov,EU,1) + 100000*u(11,Kov,IE,1) + 100000*u(11,Kov,PA,1) + 100000*u(11,Kov,KI,1) + 110000*u(12,Kov,EU,1) + 110000*u(12,Kov,IE,1)
     
      + 110000*u(12,Kov,PA,1) + 110000*u(12,Kov,KI,1) + 120000*u(13,Kov,EU,1) + 120000*u(13,Kov,IE,1) + 120000*u(13,Kov,PA,1) + 120000*u(13,Kov,KI,1) + 130000*u(14,Kov,EU,1) + 130000*u(14,Kov,IE,1) + 130000*u(14,Kov,PA,1) + 130000*u(14,Kov,KI,1)
     
      + 140000*u(15,Kov,EU,1) + 140000*u(15,Kov,IE,1) + 140000*u(15,Kov,PA,1) + 140000*u(15,Kov,KI,1) + 150000*u(16,Kov,EU,1) + 150000*u(16,Kov,IE,1) + 150000*u(16,Kov,PA,1) + 150000*u(16,Kov,KI,1) + 160000*u(17,Kov,EU,1) + 160000*u(17,Kov,IE,1)
     
      + 160000*u(17,Kov,PA,1) + 160000*u(17,Kov,KI,1) + 170000*u(18,Kov,EU,1) + 170000*u(18,Kov,IE,1) + 170000*u(18,Kov,PA,1) + 170000*u(18,Kov,KI,1) + 180000*u(19,Kov,EU,1) + 180000*u(19,Kov,IE,1) + 180000*u(19,Kov,PA,1) + 180000*u(19,Kov,KI,1)
     
      + 190000*u(20,Kov,EU,1) + 190000*u(20,Kov,IE,1) + 190000*u(20,Kov,PA,1) + 190000*u(20,Kov,KI,1) + 200000*u(21,Kov,EU,1) + 200000*u(21,Kov,IE,1) + 200000*u(21,Kov,PA,1) + 200000*u(21,Kov,KI,1) + 210000*u(22,Kov,EU,1) + 210000*u(22,Kov,IE,1)
     
      + 210000*u(22,Kov,PA,1) + 210000*u(22,Kov,KI,1) + 220000*u(23,Kov,EU,1) + 220000*u(23,Kov,IE,1) + 220000*u(23,Kov,PA,1) + 220000*u(23,Kov,KI,1) =L= 0 ; (LHS = 0)
     
Sold_Prod(Kov,2)..  - y(Kov,2) + 10000*u(2,Kov,EU,2) + 10000*u(2,Kov,IE,2) + 10000*u(2,Kov,PA,2) + 10000*u(2,Kov,KI,2) + 20000*u(3,Kov,EU,2) + 20000*u(3,Kov,IE,2) + 20000*u(3,Kov,PA,2) + 20000*u(3,Kov,KI,2) + 30000*u(4,Kov,EU,2) + 30000*u(4,Kov,IE,2)
     
      + 30000*u(4,Kov,PA,2) + 30000*u(4,Kov,KI,2) + 40000*u(5,Kov,EU,2) + 40000*u(5,Kov,IE,2) + 40000*u(5,Kov,PA,2) + 40000*u(5,Kov,KI,2) + 50000*u(6,Kov,EU,2) + 50000*u(6,Kov,IE,2) + 50000*u(6,Kov,PA,2) + 50000*u(6,Kov,KI,2) + 60000*u(7,Kov,EU,2)
     
      + 60000*u(7,Kov,IE,2) + 60000*u(7,Kov,PA,2) + 60000*u(7,Kov,KI,2) + 70000*u(8,Kov,EU,2) + 70000*u(8,Kov,IE,2) + 70000*u(8,Kov,PA,2) + 70000*u(8,Kov,KI,2) + 80000*u(9,Kov,EU,2) + 80000*u(9,Kov,IE,2) + 80000*u(9,Kov,PA,2) + 80000*u(9,Kov,KI,2)
     
      + 90000*u(10,Kov,EU,2) + 90000*u(10,Kov,IE,2) + 90000*u(10,Kov,PA,2) + 90000*u(10,Kov,KI,2) + 100000*u(11,Kov,EU,2) + 100000*u(11,Kov,IE,2) + 100000*u(11,Kov,PA,2) + 100000*u(11,Kov,KI,2) + 110000*u(12,Kov,EU,2) + 110000*u(12,Kov,IE,2)
     
      + 110000*u(12,Kov,PA,2) + 110000*u(12,Kov,KI,2) + 120000*u(13,Kov,EU,2) + 120000*u(13,Kov,IE,2) + 120000*u(13,Kov,PA,2) + 120000*u(13,Kov,KI,2) + 130000*u(14,Kov,EU,2) + 130000*u(14,Kov,IE,2) + 130000*u(14,Kov,PA,2) + 130000*u(14,Kov,KI,2)
     
      + 140000*u(15,Kov,EU,2) + 140000*u(15,Kov,IE,2) + 140000*u(15,Kov,PA,2) + 140000*u(15,Kov,KI,2) + 150000*u(16,Kov,EU,2) + 150000*u(16,Kov,IE,2) + 150000*u(16,Kov,PA,2) + 150000*u(16,Kov,KI,2) + 160000*u(17,Kov,EU,2) + 160000*u(17,Kov,IE,2)
     
      + 160000*u(17,Kov,PA,2) + 160000*u(17,Kov,KI,2) + 170000*u(18,Kov,EU,2) + 170000*u(18,Kov,IE,2) + 170000*u(18,Kov,PA,2) + 170000*u(18,Kov,KI,2) + 180000*u(19,Kov,EU,2) + 180000*u(19,Kov,IE,2) + 180000*u(19,Kov,PA,2) + 180000*u(19,Kov,KI,2)
     
      + 190000*u(20,Kov,EU,2) + 190000*u(20,Kov,IE,2) + 190000*u(20,Kov,PA,2) + 190000*u(20,Kov,KI,2) + 200000*u(21,Kov,EU,2) + 200000*u(21,Kov,IE,2) + 200000*u(21,Kov,PA,2) + 200000*u(21,Kov,KI,2) + 210000*u(22,Kov,EU,2) + 210000*u(22,Kov,IE,2)
     
      + 210000*u(22,Kov,PA,2) + 210000*u(22,Kov,KI,2) + 220000*u(23,Kov,EU,2) + 220000*u(23,Kov,IE,2) + 220000*u(23,Kov,PA,2) + 220000*u(23,Kov,KI,2) =L= 0 ; (LHS = 0)
     
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 22:25:36 Page 21
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 416


     Sold_Prod  =L=  we cant sell more than we produce in each year

Sold_Prod(Kov,3)..  - y(Kov,3) + 10000*u(2,Kov,EU,3) + 10000*u(2,Kov,IE,3) + 10000*u(2,Kov,PA,3) + 10000*u(2,Kov,KI,3) + 20000*u(3,Kov,EU,3) + 20000*u(3,Kov,IE,3) + 20000*u(3,Kov,PA,3) + 20000*u(3,Kov,KI,3) + 30000*u(4,Kov,EU,3) + 30000*u(4,Kov,IE,3)
     
      + 30000*u(4,Kov,PA,3) + 30000*u(4,Kov,KI,3) + 40000*u(5,Kov,EU,3) + 40000*u(5,Kov,IE,3) + 40000*u(5,Kov,PA,3) + 40000*u(5,Kov,KI,3) + 50000*u(6,Kov,EU,3) + 50000*u(6,Kov,IE,3) + 50000*u(6,Kov,PA,3) + 50000*u(6,Kov,KI,3) + 60000*u(7,Kov,EU,3)
     
      + 60000*u(7,Kov,IE,3) + 60000*u(7,Kov,PA,3) + 60000*u(7,Kov,KI,3) + 70000*u(8,Kov,EU,3) + 70000*u(8,Kov,IE,3) + 70000*u(8,Kov,PA,3) + 70000*u(8,Kov,KI,3) + 80000*u(9,Kov,EU,3) + 80000*u(9,Kov,IE,3) + 80000*u(9,Kov,PA,3) + 80000*u(9,Kov,KI,3)
     
      + 90000*u(10,Kov,EU,3) + 90000*u(10,Kov,IE,3) + 90000*u(10,Kov,PA,3) + 90000*u(10,Kov,KI,3) + 100000*u(11,Kov,EU,3) + 100000*u(11,Kov,IE,3) + 100000*u(11,Kov,PA,3) + 100000*u(11,Kov,KI,3) + 110000*u(12,Kov,EU,3) + 110000*u(12,Kov,IE,3)
     
      + 110000*u(12,Kov,PA,3) + 110000*u(12,Kov,KI,3) + 120000*u(13,Kov,EU,3) + 120000*u(13,Kov,IE,3) + 120000*u(13,Kov,PA,3) + 120000*u(13,Kov,KI,3) + 130000*u(14,Kov,EU,3) + 130000*u(14,Kov,IE,3) + 130000*u(14,Kov,PA,3) + 130000*u(14,Kov,KI,3)
     
      + 140000*u(15,Kov,EU,3) + 140000*u(15,Kov,IE,3) + 140000*u(15,Kov,PA,3) + 140000*u(15,Kov,KI,3) + 150000*u(16,Kov,EU,3) + 150000*u(16,Kov,IE,3) + 150000*u(16,Kov,PA,3) + 150000*u(16,Kov,KI,3) + 160000*u(17,Kov,EU,3) + 160000*u(17,Kov,IE,3)
     
      + 160000*u(17,Kov,PA,3) + 160000*u(17,Kov,KI,3) + 170000*u(18,Kov,EU,3) + 170000*u(18,Kov,IE,3) + 170000*u(18,Kov,PA,3) + 170000*u(18,Kov,KI,3) + 180000*u(19,Kov,EU,3) + 180000*u(19,Kov,IE,3) + 180000*u(19,Kov,PA,3) + 180000*u(19,Kov,KI,3)
     
      + 190000*u(20,Kov,EU,3) + 190000*u(20,Kov,IE,3) + 190000*u(20,Kov,PA,3) + 190000*u(20,Kov,KI,3) + 200000*u(21,Kov,EU,3) + 200000*u(21,Kov,IE,3) + 200000*u(21,Kov,PA,3) + 200000*u(21,Kov,KI,3) + 210000*u(22,Kov,EU,3) + 210000*u(22,Kov,IE,3)
     
      + 210000*u(22,Kov,PA,3) + 210000*u(22,Kov,KI,3) + 220000*u(23,Kov,EU,3) + 220000*u(23,Kov,IE,3) + 220000*u(23,Kov,PA,3) + 220000*u(23,Kov,KI,3) =L= 0 ; (LHS = 0)
     
Sold_Prod(Hsel,1)..  - y(Hsel,1) + 10000*u(2,Hsel,EU,1) + 10000*u(2,Hsel,IE,1) + 10000*u(2,Hsel,PA,1) + 10000*u(2,Hsel,KI,1) + 20000*u(3,Hsel,EU,1) + 20000*u(3,Hsel,IE,1) + 20000*u(3,Hsel,PA,1) + 20000*u(3,Hsel,KI,1) + 30000*u(4,Hsel,EU,1)
     
      + 30000*u(4,Hsel,IE,1) + 30000*u(4,Hsel,PA,1) + 30000*u(4,Hsel,KI,1) + 40000*u(5,Hsel,EU,1) + 40000*u(5,Hsel,IE,1) + 40000*u(5,Hsel,PA,1) + 40000*u(5,Hsel,KI,1) + 50000*u(6,Hsel,EU,1) + 50000*u(6,Hsel,IE,1) + 50000*u(6,Hsel,PA,1)
     
      + 50000*u(6,Hsel,KI,1) + 60000*u(7,Hsel,EU,1) + 60000*u(7,Hsel,IE,1) + 60000*u(7,Hsel,PA,1) + 60000*u(7,Hsel,KI,1) + 70000*u(8,Hsel,EU,1) + 70000*u(8,Hsel,IE,1) + 70000*u(8,Hsel,PA,1) + 70000*u(8,Hsel,KI,1) + 80000*u(9,Hsel,EU,1)
     
      + 80000*u(9,Hsel,IE,1) + 80000*u(9,Hsel,PA,1) + 80000*u(9,Hsel,KI,1) + 90000*u(10,Hsel,EU,1) + 90000*u(10,Hsel,IE,1) + 90000*u(10,Hsel,PA,1) + 90000*u(10,Hsel,KI,1) + 100000*u(11,Hsel,EU,1) + 100000*u(11,Hsel,IE,1) + 100000*u(11,Hsel,PA,1)
     
      + 100000*u(11,Hsel,KI,1) + 110000*u(12,Hsel,EU,1) + 110000*u(12,Hsel,IE,1) + 110000*u(12,Hsel,PA,1) + 110000*u(12,Hsel,KI,1) + 120000*u(13,Hsel,EU,1) + 120000*u(13,Hsel,IE,1) + 120000*u(13,Hsel,PA,1) + 120000*u(13,Hsel,KI,1) + 130000*u(14,Hsel,EU,1)
     
      + 130000*u(14,Hsel,IE,1) + 130000*u(14,Hsel,PA,1) + 130000*u(14,Hsel,KI,1) + 140000*u(15,Hsel,EU,1) + 140000*u(15,Hsel,IE,1) + 140000*u(15,Hsel,PA,1) + 140000*u(15,Hsel,KI,1) + 150000*u(16,Hsel,EU,1) + 150000*u(16,Hsel,IE,1) + 150000*u(16,Hsel,PA,1)
     
      + 150000*u(16,Hsel,KI,1) + 160000*u(17,Hsel,EU,1) + 160000*u(17,Hsel,IE,1) + 160000*u(17,Hsel,PA,1) + 160000*u(17,Hsel,KI,1) + 170000*u(18,Hsel,EU,1) + 170000*u(18,Hsel,IE,1) + 170000*u(18,Hsel,PA,1) + 170000*u(18,Hsel,KI,1) + 180000*u(19,Hsel,EU,1)
     
      + 180000*u(19,Hsel,IE,1) + 180000*u(19,Hsel,PA,1) + 180000*u(19,Hsel,KI,1) + 190000*u(20,Hsel,EU,1) + 190000*u(20,Hsel,IE,1) + 190000*u(20,Hsel,PA,1) + 190000*u(20,Hsel,KI,1) + 200000*u(21,Hsel,EU,1) + 200000*u(21,Hsel,IE,1) + 200000*u(21,Hsel,PA,1)
     
      + 200000*u(21,Hsel,KI,1) + 210000*u(22,Hsel,EU,1) + 210000*u(22,Hsel,IE,1) + 210000*u(22,Hsel,PA,1) + 210000*u(22,Hsel,KI,1) + 220000*u(23,Hsel,EU,1) + 220000*u(23,Hsel,IE,1) + 220000*u(23,Hsel,PA,1) + 220000*u(23,Hsel,KI,1) =L= 0 ; (LHS = 0)
     
Sold_Prod(Hsel,2)..  - y(Hsel,2) + 10000*u(2,Hsel,EU,2) + 10000*u(2,Hsel,IE,2) + 10000*u(2,Hsel,PA,2) + 10000*u(2,Hsel,KI,2) + 20000*u(3,Hsel,EU,2) + 20000*u(3,Hsel,IE,2) + 20000*u(3,Hsel,PA,2) + 20000*u(3,Hsel,KI,2) + 30000*u(4,Hsel,EU,2)
     
      + 30000*u(4,Hsel,IE,2) + 30000*u(4,Hsel,PA,2) + 30000*u(4,Hsel,KI,2) + 40000*u(5,Hsel,EU,2) + 40000*u(5,Hsel,IE,2) + 40000*u(5,Hsel,PA,2) + 40000*u(5,Hsel,KI,2) + 50000*u(6,Hsel,EU,2) + 50000*u(6,Hsel,IE,2) + 50000*u(6,Hsel,PA,2)
     
      + 50000*u(6,Hsel,KI,2) + 60000*u(7,Hsel,EU,2) + 60000*u(7,Hsel,IE,2) + 60000*u(7,Hsel,PA,2) + 60000*u(7,Hsel,KI,2) + 70000*u(8,Hsel,EU,2) + 70000*u(8,Hsel,IE,2) + 70000*u(8,Hsel,PA,2) + 70000*u(8,Hsel,KI,2) + 80000*u(9,Hsel,EU,2)
     
      + 80000*u(9,Hsel,IE,2) + 80000*u(9,Hsel,PA,2) + 80000*u(9,Hsel,KI,2) + 90000*u(10,Hsel,EU,2) + 90000*u(10,Hsel,IE,2) + 90000*u(10,Hsel,PA,2) + 90000*u(10,Hsel,KI,2) + 100000*u(11,Hsel,EU,2) + 100000*u(11,Hsel,IE,2) + 100000*u(11,Hsel,PA,2)
     
      + 100000*u(11,Hsel,KI,2) + 110000*u(12,Hsel,EU,2) + 110000*u(12,Hsel,IE,2) + 110000*u(12,Hsel,PA,2) + 110000*u(12,Hsel,KI,2) + 120000*u(13,Hsel,EU,2) + 120000*u(13,Hsel,IE,2) + 120000*u(13,Hsel,PA,2) + 120000*u(13,Hsel,KI,2) + 130000*u(14,Hsel,EU,2)
     
      + 130000*u(14,Hsel,IE,2) + 130000*u(14,Hsel,PA,2) + 130000*u(14,Hsel,KI,2) + 140000*u(15,Hsel,EU,2) + 140000*u(15,Hsel,IE,2) + 140000*u(15,Hsel,PA,2) + 140000*u(15,Hsel,KI,2) + 150000*u(16,Hsel,EU,2) + 150000*u(16,Hsel,IE,2) + 150000*u(16,Hsel,PA,2)
     
      + 150000*u(16,Hsel,KI,2) + 160000*u(17,Hsel,EU,2) + 160000*u(17,Hsel,IE,2) + 160000*u(17,Hsel,PA,2) + 160000*u(17,Hsel,KI,2) + 170000*u(18,Hsel,EU,2) + 170000*u(18,Hsel,IE,2) + 170000*u(18,Hsel,PA,2) + 170000*u(18,Hsel,KI,2) + 180000*u(19,Hsel,EU,2)
     
      + 180000*u(19,Hsel,IE,2) + 180000*u(19,Hsel,PA,2) + 180000*u(19,Hsel,KI,2) + 190000*u(20,Hsel,EU,2) + 190000*u(20,Hsel,IE,2) + 190000*u(20,Hsel,PA,2) + 190000*u(20,Hsel,KI,2) + 200000*u(21,Hsel,EU,2) + 200000*u(21,Hsel,IE,2) + 200000*u(21,Hsel,PA,2)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 22:25:36 Page 22
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 416


     Sold_Prod  =L=  we cant sell more than we produce in each year     
     
      + 200000*u(21,Hsel,KI,2) + 210000*u(22,Hsel,EU,2) + 210000*u(22,Hsel,IE,2) + 210000*u(22,Hsel,PA,2) + 210000*u(22,Hsel,KI,2) + 220000*u(23,Hsel,EU,2) + 220000*u(23,Hsel,IE,2) + 220000*u(23,Hsel,PA,2) + 220000*u(23,Hsel,KI,2) =L= 0 ; (LHS = 0)
     
Sold_Prod(Hsel,3)..  - y(Hsel,3) + 10000*u(2,Hsel,EU,3) + 10000*u(2,Hsel,IE,3) + 10000*u(2,Hsel,PA,3) + 10000*u(2,Hsel,KI,3) + 20000*u(3,Hsel,EU,3) + 20000*u(3,Hsel,IE,3) + 20000*u(3,Hsel,PA,3) + 20000*u(3,Hsel,KI,3) + 30000*u(4,Hsel,EU,3)
     
      + 30000*u(4,Hsel,IE,3) + 30000*u(4,Hsel,PA,3) + 30000*u(4,Hsel,KI,3) + 40000*u(5,Hsel,EU,3) + 40000*u(5,Hsel,IE,3) + 40000*u(5,Hsel,PA,3) + 40000*u(5,Hsel,KI,3) + 50000*u(6,Hsel,EU,3) + 50000*u(6,Hsel,IE,3) + 50000*u(6,Hsel,PA,3)
     
      + 50000*u(6,Hsel,KI,3) + 60000*u(7,Hsel,EU,3) + 60000*u(7,Hsel,IE,3) + 60000*u(7,Hsel,PA,3) + 60000*u(7,Hsel,KI,3) + 70000*u(8,Hsel,EU,3) + 70000*u(8,Hsel,IE,3) + 70000*u(8,Hsel,PA,3) + 70000*u(8,Hsel,KI,3) + 80000*u(9,Hsel,EU,3)
     
      + 80000*u(9,Hsel,IE,3) + 80000*u(9,Hsel,PA,3) + 80000*u(9,Hsel,KI,3) + 90000*u(10,Hsel,EU,3) + 90000*u(10,Hsel,IE,3) + 90000*u(10,Hsel,PA,3) + 90000*u(10,Hsel,KI,3) + 100000*u(11,Hsel,EU,3) + 100000*u(11,Hsel,IE,3) + 100000*u(11,Hsel,PA,3)
     
      + 100000*u(11,Hsel,KI,3) + 110000*u(12,Hsel,EU,3) + 110000*u(12,Hsel,IE,3) + 110000*u(12,Hsel,PA,3) + 110000*u(12,Hsel,KI,3) + 120000*u(13,Hsel,EU,3) + 120000*u(13,Hsel,IE,3) + 120000*u(13,Hsel,PA,3) + 120000*u(13,Hsel,KI,3) + 130000*u(14,Hsel,EU,3)
     
      + 130000*u(14,Hsel,IE,3) + 130000*u(14,Hsel,PA,3) + 130000*u(14,Hsel,KI,3) + 140000*u(15,Hsel,EU,3) + 140000*u(15,Hsel,IE,3) + 140000*u(15,Hsel,PA,3) + 140000*u(15,Hsel,KI,3) + 150000*u(16,Hsel,EU,3) + 150000*u(16,Hsel,IE,3) + 150000*u(16,Hsel,PA,3)
     
      + 150000*u(16,Hsel,KI,3) + 160000*u(17,Hsel,EU,3) + 160000*u(17,Hsel,IE,3) + 160000*u(17,Hsel,PA,3) + 160000*u(17,Hsel,KI,3) + 170000*u(18,Hsel,EU,3) + 170000*u(18,Hsel,IE,3) + 170000*u(18,Hsel,PA,3) + 170000*u(18,Hsel,KI,3) + 180000*u(19,Hsel,EU,3)
     
      + 180000*u(19,Hsel,IE,3) + 180000*u(19,Hsel,PA,3) + 180000*u(19,Hsel,KI,3) + 190000*u(20,Hsel,EU,3) + 190000*u(20,Hsel,IE,3) + 190000*u(20,Hsel,PA,3) + 190000*u(20,Hsel,KI,3) + 200000*u(21,Hsel,EU,3) + 200000*u(21,Hsel,IE,3) + 200000*u(21,Hsel,PA,3)
     
      + 200000*u(21,Hsel,KI,3) + 210000*u(22,Hsel,EU,3) + 210000*u(22,Hsel,IE,3) + 210000*u(22,Hsel,PA,3) + 210000*u(22,Hsel,KI,3) + 220000*u(23,Hsel,EU,3) + 220000*u(23,Hsel,IE,3) + 220000*u(23,Hsel,PA,3) + 220000*u(23,Hsel,KI,3) =L= 0 ; (LHS = 0)
     
Sold_Prod(Lsel,1)..  - y(Lsel,1) + 10000*u(2,Lsel,EU,1) + 10000*u(2,Lsel,IE,1) + 10000*u(2,Lsel,PA,1) + 10000*u(2,Lsel,KI,1) + 20000*u(3,Lsel,EU,1) + 20000*u(3,Lsel,IE,1) + 20000*u(3,Lsel,PA,1) + 20000*u(3,Lsel,KI,1) + 30000*u(4,Lsel,EU,1)
     
      + 30000*u(4,Lsel,IE,1) + 30000*u(4,Lsel,PA,1) + 30000*u(4,Lsel,KI,1) + 40000*u(5,Lsel,EU,1) + 40000*u(5,Lsel,IE,1) + 40000*u(5,Lsel,PA,1) + 40000*u(5,Lsel,KI,1) + 50000*u(6,Lsel,EU,1) + 50000*u(6,Lsel,IE,1) + 50000*u(6,Lsel,PA,1)
     
      + 50000*u(6,Lsel,KI,1) + 60000*u(7,Lsel,EU,1) + 60000*u(7,Lsel,IE,1) + 60000*u(7,Lsel,PA,1) + 60000*u(7,Lsel,KI,1) + 70000*u(8,Lsel,EU,1) + 70000*u(8,Lsel,IE,1) + 70000*u(8,Lsel,PA,1) + 70000*u(8,Lsel,KI,1) + 80000*u(9,Lsel,EU,1)
     
      + 80000*u(9,Lsel,IE,1) + 80000*u(9,Lsel,PA,1) + 80000*u(9,Lsel,KI,1) + 90000*u(10,Lsel,EU,1) + 90000*u(10,Lsel,IE,1) + 90000*u(10,Lsel,PA,1) + 90000*u(10,Lsel,KI,1) + 100000*u(11,Lsel,EU,1) + 100000*u(11,Lsel,IE,1) + 100000*u(11,Lsel,PA,1)
     
      + 100000*u(11,Lsel,KI,1) + 110000*u(12,Lsel,EU,1) + 110000*u(12,Lsel,IE,1) + 110000*u(12,Lsel,PA,1) + 110000*u(12,Lsel,KI,1) + 120000*u(13,Lsel,EU,1) + 120000*u(13,Lsel,IE,1) + 120000*u(13,Lsel,PA,1) + 120000*u(13,Lsel,KI,1) + 130000*u(14,Lsel,EU,1)
     
      + 130000*u(14,Lsel,IE,1) + 130000*u(14,Lsel,PA,1) + 130000*u(14,Lsel,KI,1) + 140000*u(15,Lsel,EU,1) + 140000*u(15,Lsel,IE,1) + 140000*u(15,Lsel,PA,1) + 140000*u(15,Lsel,KI,1) + 150000*u(16,Lsel,EU,1) + 150000*u(16,Lsel,IE,1) + 150000*u(16,Lsel,PA,1)
     
      + 150000*u(16,Lsel,KI,1) + 160000*u(17,Lsel,EU,1) + 160000*u(17,Lsel,IE,1) + 160000*u(17,Lsel,PA,1) + 160000*u(17,Lsel,KI,1) + 170000*u(18,Lsel,EU,1) + 170000*u(18,Lsel,IE,1) + 170000*u(18,Lsel,PA,1) + 170000*u(18,Lsel,KI,1) + 180000*u(19,Lsel,EU,1)
     
      + 180000*u(19,Lsel,IE,1) + 180000*u(19,Lsel,PA,1) + 180000*u(19,Lsel,KI,1) + 190000*u(20,Lsel,EU,1) + 190000*u(20,Lsel,IE,1) + 190000*u(20,Lsel,PA,1) + 190000*u(20,Lsel,KI,1) + 200000*u(21,Lsel,EU,1) + 200000*u(21,Lsel,IE,1) + 200000*u(21,Lsel,PA,1)
     
      + 200000*u(21,Lsel,KI,1) + 210000*u(22,Lsel,EU,1) + 210000*u(22,Lsel,IE,1) + 210000*u(22,Lsel,PA,1) + 210000*u(22,Lsel,KI,1) + 220000*u(23,Lsel,EU,1) + 220000*u(23,Lsel,IE,1) + 220000*u(23,Lsel,PA,1) + 220000*u(23,Lsel,KI,1) =L= 0 ; (LHS = 0)
     
Sold_Prod(Lsel,2)..  - y(Lsel,2) + 10000*u(2,Lsel,EU,2) + 10000*u(2,Lsel,IE,2) + 10000*u(2,Lsel,PA,2) + 10000*u(2,Lsel,KI,2) + 20000*u(3,Lsel,EU,2) + 20000*u(3,Lsel,IE,2) + 20000*u(3,Lsel,PA,2) + 20000*u(3,Lsel,KI,2) + 30000*u(4,Lsel,EU,2)
     
      + 30000*u(4,Lsel,IE,2) + 30000*u(4,Lsel,PA,2) + 30000*u(4,Lsel,KI,2) + 40000*u(5,Lsel,EU,2) + 40000*u(5,Lsel,IE,2) + 40000*u(5,Lsel,PA,2) + 40000*u(5,Lsel,KI,2) + 50000*u(6,Lsel,EU,2) + 50000*u(6,Lsel,IE,2) + 50000*u(6,Lsel,PA,2)
     
      + 50000*u(6,Lsel,KI,2) + 60000*u(7,Lsel,EU,2) + 60000*u(7,Lsel,IE,2) + 60000*u(7,Lsel,PA,2) + 60000*u(7,Lsel,KI,2) + 70000*u(8,Lsel,EU,2) + 70000*u(8,Lsel,IE,2) + 70000*u(8,Lsel,PA,2) + 70000*u(8,Lsel,KI,2) + 80000*u(9,Lsel,EU,2)
     
      + 80000*u(9,Lsel,IE,2) + 80000*u(9,Lsel,PA,2) + 80000*u(9,Lsel,KI,2) + 90000*u(10,Lsel,EU,2) + 90000*u(10,Lsel,IE,2) + 90000*u(10,Lsel,PA,2) + 90000*u(10,Lsel,KI,2) + 100000*u(11,Lsel,EU,2) + 100000*u(11,Lsel,IE,2) + 100000*u(11,Lsel,PA,2)
     
      + 100000*u(11,Lsel,KI,2) + 110000*u(12,Lsel,EU,2) + 110000*u(12,Lsel,IE,2) + 110000*u(12,Lsel,PA,2) + 110000*u(12,Lsel,KI,2) + 120000*u(13,Lsel,EU,2) + 120000*u(13,Lsel,IE,2) + 120000*u(13,Lsel,PA,2) + 120000*u(13,Lsel,KI,2) + 130000*u(14,Lsel,EU,2)
     
      + 130000*u(14,Lsel,IE,2) + 130000*u(14,Lsel,PA,2) + 130000*u(14,Lsel,KI,2) + 140000*u(15,Lsel,EU,2) + 140000*u(15,Lsel,IE,2) + 140000*u(15,Lsel,PA,2) + 140000*u(15,Lsel,KI,2) + 150000*u(16,Lsel,EU,2) + 150000*u(16,Lsel,IE,2) + 150000*u(16,Lsel,PA,2)
     
      + 150000*u(16,Lsel,KI,2) + 160000*u(17,Lsel,EU,2) + 160000*u(17,Lsel,IE,2) + 160000*u(17,Lsel,PA,2) + 160000*u(17,Lsel,KI,2) + 170000*u(18,Lsel,EU,2) + 170000*u(18,Lsel,IE,2) + 170000*u(18,Lsel,PA,2) + 170000*u(18,Lsel,KI,2) + 180000*u(19,Lsel,EU,2)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 22:25:36 Page 23
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 416


     Sold_Prod  =L=  we cant sell more than we produce in each year     
     
      + 180000*u(19,Lsel,IE,2) + 180000*u(19,Lsel,PA,2) + 180000*u(19,Lsel,KI,2) + 190000*u(20,Lsel,EU,2) + 190000*u(20,Lsel,IE,2) + 190000*u(20,Lsel,PA,2) + 190000*u(20,Lsel,KI,2) + 200000*u(21,Lsel,EU,2) + 200000*u(21,Lsel,IE,2) + 200000*u(21,Lsel,PA,2)
     
      + 200000*u(21,Lsel,KI,2) + 210000*u(22,Lsel,EU,2) + 210000*u(22,Lsel,IE,2) + 210000*u(22,Lsel,PA,2) + 210000*u(22,Lsel,KI,2) + 220000*u(23,Lsel,EU,2) + 220000*u(23,Lsel,IE,2) + 220000*u(23,Lsel,PA,2) + 220000*u(23,Lsel,KI,2) =L= 0 ; (LHS = 0)
     
Sold_Prod(Lsel,3)..  - y(Lsel,3) + 10000*u(2,Lsel,EU,3) + 10000*u(2,Lsel,IE,3) + 10000*u(2,Lsel,PA,3) + 10000*u(2,Lsel,KI,3) + 20000*u(3,Lsel,EU,3) + 20000*u(3,Lsel,IE,3) + 20000*u(3,Lsel,PA,3) + 20000*u(3,Lsel,KI,3) + 30000*u(4,Lsel,EU,3)
     
      + 30000*u(4,Lsel,IE,3) + 30000*u(4,Lsel,PA,3) + 30000*u(4,Lsel,KI,3) + 40000*u(5,Lsel,EU,3) + 40000*u(5,Lsel,IE,3) + 40000*u(5,Lsel,PA,3) + 40000*u(5,Lsel,KI,3) + 50000*u(6,Lsel,EU,3) + 50000*u(6,Lsel,IE,3) + 50000*u(6,Lsel,PA,3)
     
      + 50000*u(6,Lsel,KI,3) + 60000*u(7,Lsel,EU,3) + 60000*u(7,Lsel,IE,3) + 60000*u(7,Lsel,PA,3) + 60000*u(7,Lsel,KI,3) + 70000*u(8,Lsel,EU,3) + 70000*u(8,Lsel,IE,3) + 70000*u(8,Lsel,PA,3) + 70000*u(8,Lsel,KI,3) + 80000*u(9,Lsel,EU,3)
     
      + 80000*u(9,Lsel,IE,3) + 80000*u(9,Lsel,PA,3) + 80000*u(9,Lsel,KI,3) + 90000*u(10,Lsel,EU,3) + 90000*u(10,Lsel,IE,3) + 90000*u(10,Lsel,PA,3) + 90000*u(10,Lsel,KI,3) + 100000*u(11,Lsel,EU,3) + 100000*u(11,Lsel,IE,3) + 100000*u(11,Lsel,PA,3)
     
      + 100000*u(11,Lsel,KI,3) + 110000*u(12,Lsel,EU,3) + 110000*u(12,Lsel,IE,3) + 110000*u(12,Lsel,PA,3) + 110000*u(12,Lsel,KI,3) + 120000*u(13,Lsel,EU,3) + 120000*u(13,Lsel,IE,3) + 120000*u(13,Lsel,PA,3) + 120000*u(13,Lsel,KI,3) + 130000*u(14,Lsel,EU,3)
     
      + 130000*u(14,Lsel,IE,3) + 130000*u(14,Lsel,PA,3) + 130000*u(14,Lsel,KI,3) + 140000*u(15,Lsel,EU,3) + 140000*u(15,Lsel,IE,3) + 140000*u(15,Lsel,PA,3) + 140000*u(15,Lsel,KI,3) + 150000*u(16,Lsel,EU,3) + 150000*u(16,Lsel,IE,3) + 150000*u(16,Lsel,PA,3)
     
      + 150000*u(16,Lsel,KI,3) + 160000*u(17,Lsel,EU,3) + 160000*u(17,Lsel,IE,3) + 160000*u(17,Lsel,PA,3) + 160000*u(17,Lsel,KI,3) + 170000*u(18,Lsel,EU,3) + 170000*u(18,Lsel,IE,3) + 170000*u(18,Lsel,PA,3) + 170000*u(18,Lsel,KI,3) + 180000*u(19,Lsel,EU,3)
     
      + 180000*u(19,Lsel,IE,3) + 180000*u(19,Lsel,PA,3) + 180000*u(19,Lsel,KI,3) + 190000*u(20,Lsel,EU,3) + 190000*u(20,Lsel,IE,3) + 190000*u(20,Lsel,PA,3) + 190000*u(20,Lsel,KI,3) + 200000*u(21,Lsel,EU,3) + 200000*u(21,Lsel,IE,3) + 200000*u(21,Lsel,PA,3)
     
      + 200000*u(21,Lsel,KI,3) + 210000*u(22,Lsel,EU,3) + 210000*u(22,Lsel,IE,3) + 210000*u(22,Lsel,PA,3) + 210000*u(22,Lsel,KI,3) + 220000*u(23,Lsel,EU,3) + 220000*u(23,Lsel,IE,3) + 220000*u(23,Lsel,PA,3) + 220000*u(23,Lsel,KI,3) =L= 0 ; (LHS = 0)
     
Sold_Prod(Pap,1)..  - y(Pap,1) + 10000*u(2,Pap,EU,1) + 10000*u(2,Pap,IE,1) + 10000*u(2,Pap,PA,1) + 10000*u(2,Pap,KI,1) + 20000*u(3,Pap,EU,1) + 20000*u(3,Pap,IE,1) + 20000*u(3,Pap,PA,1) + 20000*u(3,Pap,KI,1) + 30000*u(4,Pap,EU,1) + 30000*u(4,Pap,IE,1)
     
      + 30000*u(4,Pap,PA,1) + 30000*u(4,Pap,KI,1) + 40000*u(5,Pap,EU,1) + 40000*u(5,Pap,IE,1) + 40000*u(5,Pap,PA,1) + 40000*u(5,Pap,KI,1) + 50000*u(6,Pap,EU,1) + 50000*u(6,Pap,IE,1) + 50000*u(6,Pap,PA,1) + 50000*u(6,Pap,KI,1) + 60000*u(7,Pap,EU,1)
     
      + 60000*u(7,Pap,IE,1) + 60000*u(7,Pap,PA,1) + 60000*u(7,Pap,KI,1) + 70000*u(8,Pap,EU,1) + 70000*u(8,Pap,IE,1) + 70000*u(8,Pap,PA,1) + 70000*u(8,Pap,KI,1) + 80000*u(9,Pap,EU,1) + 80000*u(9,Pap,IE,1) + 80000*u(9,Pap,PA,1) + 80000*u(9,Pap,KI,1)
     
      + 90000*u(10,Pap,EU,1) + 90000*u(10,Pap,IE,1) + 90000*u(10,Pap,PA,1) + 90000*u(10,Pap,KI,1) + 100000*u(11,Pap,EU,1) + 100000*u(11,Pap,IE,1) + 100000*u(11,Pap,PA,1) + 100000*u(11,Pap,KI,1) + 110000*u(12,Pap,EU,1) + 110000*u(12,Pap,IE,1)
     
      + 110000*u(12,Pap,PA,1) + 110000*u(12,Pap,KI,1) + 120000*u(13,Pap,EU,1) + 120000*u(13,Pap,IE,1) + 120000*u(13,Pap,PA,1) + 120000*u(13,Pap,KI,1) + 130000*u(14,Pap,EU,1) + 130000*u(14,Pap,IE,1) + 130000*u(14,Pap,PA,1) + 130000*u(14,Pap,KI,1)
     
      + 140000*u(15,Pap,EU,1) + 140000*u(15,Pap,IE,1) + 140000*u(15,Pap,PA,1) + 140000*u(15,Pap,KI,1) + 150000*u(16,Pap,EU,1) + 150000*u(16,Pap,IE,1) + 150000*u(16,Pap,PA,1) + 150000*u(16,Pap,KI,1) + 160000*u(17,Pap,EU,1) + 160000*u(17,Pap,IE,1)
     
      + 160000*u(17,Pap,PA,1) + 160000*u(17,Pap,KI,1) + 170000*u(18,Pap,EU,1) + 170000*u(18,Pap,IE,1) + 170000*u(18,Pap,PA,1) + 170000*u(18,Pap,KI,1) + 180000*u(19,Pap,EU,1) + 180000*u(19,Pap,IE,1) + 180000*u(19,Pap,PA,1) + 180000*u(19,Pap,KI,1)
     
      + 190000*u(20,Pap,EU,1) + 190000*u(20,Pap,IE,1) + 190000*u(20,Pap,PA,1) + 190000*u(20,Pap,KI,1) + 200000*u(21,Pap,EU,1) + 200000*u(21,Pap,IE,1) + 200000*u(21,Pap,PA,1) + 200000*u(21,Pap,KI,1) + 210000*u(22,Pap,EU,1) + 210000*u(22,Pap,IE,1)
     
      + 210000*u(22,Pap,PA,1) + 210000*u(22,Pap,KI,1) + 220000*u(23,Pap,EU,1) + 220000*u(23,Pap,IE,1) + 220000*u(23,Pap,PA,1) + 220000*u(23,Pap,KI,1) =L= 0 ; (LHS = 0)
     
Sold_Prod(Pap,2)..  - y(Pap,2) + 10000*u(2,Pap,EU,2) + 10000*u(2,Pap,IE,2) + 10000*u(2,Pap,PA,2) + 10000*u(2,Pap,KI,2) + 20000*u(3,Pap,EU,2) + 20000*u(3,Pap,IE,2) + 20000*u(3,Pap,PA,2) + 20000*u(3,Pap,KI,2) + 30000*u(4,Pap,EU,2) + 30000*u(4,Pap,IE,2)
     
      + 30000*u(4,Pap,PA,2) + 30000*u(4,Pap,KI,2) + 40000*u(5,Pap,EU,2) + 40000*u(5,Pap,IE,2) + 40000*u(5,Pap,PA,2) + 40000*u(5,Pap,KI,2) + 50000*u(6,Pap,EU,2) + 50000*u(6,Pap,IE,2) + 50000*u(6,Pap,PA,2) + 50000*u(6,Pap,KI,2) + 60000*u(7,Pap,EU,2)
     
      + 60000*u(7,Pap,IE,2) + 60000*u(7,Pap,PA,2) + 60000*u(7,Pap,KI,2) + 70000*u(8,Pap,EU,2) + 70000*u(8,Pap,IE,2) + 70000*u(8,Pap,PA,2) + 70000*u(8,Pap,KI,2) + 80000*u(9,Pap,EU,2) + 80000*u(9,Pap,IE,2) + 80000*u(9,Pap,PA,2) + 80000*u(9,Pap,KI,2)
     
      + 90000*u(10,Pap,EU,2) + 90000*u(10,Pap,IE,2) + 90000*u(10,Pap,PA,2) + 90000*u(10,Pap,KI,2) + 100000*u(11,Pap,EU,2) + 100000*u(11,Pap,IE,2) + 100000*u(11,Pap,PA,2) + 100000*u(11,Pap,KI,2) + 110000*u(12,Pap,EU,2) + 110000*u(12,Pap,IE,2)
     
      + 110000*u(12,Pap,PA,2) + 110000*u(12,Pap,KI,2) + 120000*u(13,Pap,EU,2) + 120000*u(13,Pap,IE,2) + 120000*u(13,Pap,PA,2) + 120000*u(13,Pap,KI,2) + 130000*u(14,Pap,EU,2) + 130000*u(14,Pap,IE,2) + 130000*u(14,Pap,PA,2) + 130000*u(14,Pap,KI,2)
     
      + 140000*u(15,Pap,EU,2) + 140000*u(15,Pap,IE,2) + 140000*u(15,Pap,PA,2) + 140000*u(15,Pap,KI,2) + 150000*u(16,Pap,EU,2) + 150000*u(16,Pap,IE,2) + 150000*u(16,Pap,PA,2) + 150000*u(16,Pap,KI,2) + 160000*u(17,Pap,EU,2) + 160000*u(17,Pap,IE,2)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 22:25:36 Page 24
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 416


     Sold_Prod  =L=  we cant sell more than we produce in each year     
     
      + 160000*u(17,Pap,PA,2) + 160000*u(17,Pap,KI,2) + 170000*u(18,Pap,EU,2) + 170000*u(18,Pap,IE,2) + 170000*u(18,Pap,PA,2) + 170000*u(18,Pap,KI,2) + 180000*u(19,Pap,EU,2) + 180000*u(19,Pap,IE,2) + 180000*u(19,Pap,PA,2) + 180000*u(19,Pap,KI,2)
     
      + 190000*u(20,Pap,EU,2) + 190000*u(20,Pap,IE,2) + 190000*u(20,Pap,PA,2) + 190000*u(20,Pap,KI,2) + 200000*u(21,Pap,EU,2) + 200000*u(21,Pap,IE,2) + 200000*u(21,Pap,PA,2) + 200000*u(21,Pap,KI,2) + 210000*u(22,Pap,EU,2) + 210000*u(22,Pap,IE,2)
     
      + 210000*u(22,Pap,PA,2) + 210000*u(22,Pap,KI,2) + 220000*u(23,Pap,EU,2) + 220000*u(23,Pap,IE,2) + 220000*u(23,Pap,PA,2) + 220000*u(23,Pap,KI,2) =L= 0 ; (LHS = 0)
     
Sold_Prod(Pap,3)..  - y(Pap,3) + 10000*u(2,Pap,EU,3) + 10000*u(2,Pap,IE,3) + 10000*u(2,Pap,PA,3) + 10000*u(2,Pap,KI,3) + 20000*u(3,Pap,EU,3) + 20000*u(3,Pap,IE,3) + 20000*u(3,Pap,PA,3) + 20000*u(3,Pap,KI,3) + 30000*u(4,Pap,EU,3) + 30000*u(4,Pap,IE,3)
     
      + 30000*u(4,Pap,PA,3) + 30000*u(4,Pap,KI,3) + 40000*u(5,Pap,EU,3) + 40000*u(5,Pap,IE,3) + 40000*u(5,Pap,PA,3) + 40000*u(5,Pap,KI,3) + 50000*u(6,Pap,EU,3) + 50000*u(6,Pap,IE,3) + 50000*u(6,Pap,PA,3) + 50000*u(6,Pap,KI,3) + 60000*u(7,Pap,EU,3)
     
      + 60000*u(7,Pap,IE,3) + 60000*u(7,Pap,PA,3) + 60000*u(7,Pap,KI,3) + 70000*u(8,Pap,EU,3) + 70000*u(8,Pap,IE,3) + 70000*u(8,Pap,PA,3) + 70000*u(8,Pap,KI,3) + 80000*u(9,Pap,EU,3) + 80000*u(9,Pap,IE,3) + 80000*u(9,Pap,PA,3) + 80000*u(9,Pap,KI,3)
     
      + 90000*u(10,Pap,EU,3) + 90000*u(10,Pap,IE,3) + 90000*u(10,Pap,PA,3) + 90000*u(10,Pap,KI,3) + 100000*u(11,Pap,EU,3) + 100000*u(11,Pap,IE,3) + 100000*u(11,Pap,PA,3) + 100000*u(11,Pap,KI,3) + 110000*u(12,Pap,EU,3) + 110000*u(12,Pap,IE,3)
     
      + 110000*u(12,Pap,PA,3) + 110000*u(12,Pap,KI,3) + 120000*u(13,Pap,EU,3) + 120000*u(13,Pap,IE,3) + 120000*u(13,Pap,PA,3) + 120000*u(13,Pap,KI,3) + 130000*u(14,Pap,EU,3) + 130000*u(14,Pap,IE,3) + 130000*u(14,Pap,PA,3) + 130000*u(14,Pap,KI,3)
     
      + 140000*u(15,Pap,EU,3) + 140000*u(15,Pap,IE,3) + 140000*u(15,Pap,PA,3) + 140000*u(15,Pap,KI,3) + 150000*u(16,Pap,EU,3) + 150000*u(16,Pap,IE,3) + 150000*u(16,Pap,PA,3) + 150000*u(16,Pap,KI,3) + 160000*u(17,Pap,EU,3) + 160000*u(17,Pap,IE,3)
     
      + 160000*u(17,Pap,PA,3) + 160000*u(17,Pap,KI,3) + 170000*u(18,Pap,EU,3) + 170000*u(18,Pap,IE,3) + 170000*u(18,Pap,PA,3) + 170000*u(18,Pap,KI,3) + 180000*u(19,Pap,EU,3) + 180000*u(19,Pap,IE,3) + 180000*u(19,Pap,PA,3) + 180000*u(19,Pap,KI,3)
     
      + 190000*u(20,Pap,EU,3) + 190000*u(20,Pap,IE,3) + 190000*u(20,Pap,PA,3) + 190000*u(20,Pap,KI,3) + 200000*u(21,Pap,EU,3) + 200000*u(21,Pap,IE,3) + 200000*u(21,Pap,PA,3) + 200000*u(21,Pap,KI,3) + 210000*u(22,Pap,EU,3) + 210000*u(22,Pap,IE,3)
     
      + 210000*u(22,Pap,PA,3) + 210000*u(22,Pap,KI,3) + 220000*u(23,Pap,EU,3) + 220000*u(23,Pap,IE,3) + 220000*u(23,Pap,PA,3) + 220000*u(23,Pap,KI,3) =L= 0 ; (LHS = 0)
     

---- timber_bought  =E=  amount of timber i bought in each year

timber_bought(Mat,1)..  - 10000*r(2,Mat,1) - 20000*r(3,Mat,1) - 30000*r(4,Mat,1) - 40000*r(5,Mat,1) - 50000*r(6,Mat,1) - 60000*r(7,Mat,1) - 70000*r(8,Mat,1) - 80000*r(9,Mat,1) - 90000*r(10,Mat,1) - 100000*r(11,Mat,1) - 110000*r(12,Mat,1)
     
      - 120000*r(13,Mat,1) - 130000*r(14,Mat,1) - 140000*r(15,Mat,1) - 150000*r(16,Mat,1) - 160000*r(17,Mat,1) - 170000*r(18,Mat,1) - 180000*r(19,Mat,1) - 190000*r(20,Mat,1) - 200000*r(21,Mat,1) - 210000*r(22,Mat,1) - 220000*r(23,Mat,1)
     
      - 230000*r(24,Mat,1) - 240000*r(25,Mat,1) - 250000*r(26,Mat,1) - 260000*r(27,Mat,1) - 270000*r(28,Mat,1) - 280000*r(29,Mat,1) - 290000*r(30,Mat,1) - 300000*r(31,Mat,1) - 310000*r(32,Mat,1) - 320000*r(33,Mat,1) - 330000*r(34,Mat,1)
     
      - 340000*r(35,Mat,1) - 350000*r(36,Mat,1) - 360000*r(37,Mat,1) - 370000*r(38,Mat,1) - 380000*r(39,Mat,1) - 390000*r(40,Mat,1) - 400000*r(41,Mat,1) - 410000*r(42,Mat,1) - 420000*r(43,Mat,1) - 430000*r(44,Mat,1) - 440000*r(45,Mat,1)
     
      - 450000*r(46,Mat,1) - 460000*r(47,Mat,1) - 470000*r(48,Mat,1) - 480000*r(49,Mat,1) - 490000*r(50,Mat,1) - 500000*r(51,Mat,1) - 510000*r(52,Mat,1) - 520000*r(53,Mat,1) - 530000*r(54,Mat,1) - 540000*r(55,Mat,1) - 550000*r(56,Mat,1)
     
      - 560000*r(57,Mat,1) - 570000*r(58,Mat,1) - 580000*r(59,Mat,1) - 590000*r(60,Mat,1) - 600000*r(61,Mat,1) - 610000*r(62,Mat,1) - 620000*r(63,Mat,1) - 630000*r(64,Mat,1) - 640000*r(65,Mat,1) - 650000*r(66,Mat,1) - 660000*r(67,Mat,1)
     
      - 670000*r(68,Mat,1) - 680000*r(69,Mat,1) - 690000*r(70,Mat,1) - 700000*r(71,Mat,1) - 710000*r(72,Mat,1) - 720000*r(73,Mat,1) - 730000*r(74,Mat,1) - 740000*r(75,Mat,1) - 750000*r(76,Mat,1) - 760000*r(77,Mat,1) - 770000*r(78,Mat,1)
     
      - 780000*r(79,Mat,1) - 790000*r(80,Mat,1) - 800000*r(81,Mat,1) - 810000*r(82,Mat,1) - 820000*r(83,Mat,1) - 830000*r(84,Mat,1) - 840000*r(85,Mat,1) - 850000*r(86,Mat,1) - 860000*r(87,Mat,1) - 870000*r(88,Mat,1) - 880000*r(89,Mat,1)
     
      - 890000*r(90,Mat,1) - 900000*r(91,Mat,1) - 910000*r(92,Mat,1) - 920000*r(93,Mat,1) - 930000*r(94,Mat,1) - 940000*r(95,Mat,1) - 950000*r(96,Mat,1) - 960000*r(97,Mat,1) - 970000*r(98,Mat,1) - 980000*r(99,Mat,1) - 990000*r(100,Mat,1)
     
      - 1000000*r(101,Mat,1) - 1010000*r(102,Mat,1) - 1020000*r(103,Mat,1) - 1030000*r(104,Mat,1) - 1040000*r(105,Mat,1) - 1050000*r(106,Mat,1) - 1060000*r(107,Mat,1) + b(Mat,1) =E= 0 ; (LHS = 0)
     
timber_bought(Mat,2)..  - 10000*r(2,Mat,2) - 20000*r(3,Mat,2) - 30000*r(4,Mat,2) - 40000*r(5,Mat,2) - 50000*r(6,Mat,2) - 60000*r(7,Mat,2) - 70000*r(8,Mat,2) - 80000*r(9,Mat,2) - 90000*r(10,Mat,2) - 100000*r(11,Mat,2) - 110000*r(12,Mat,2)
     
      - 120000*r(13,Mat,2) - 130000*r(14,Mat,2) - 140000*r(15,Mat,2) - 150000*r(16,Mat,2) - 160000*r(17,Mat,2) - 170000*r(18,Mat,2) - 180000*r(19,Mat,2) - 190000*r(20,Mat,2) - 200000*r(21,Mat,2) - 210000*r(22,Mat,2) - 220000*r(23,Mat,2)
     
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 22:25:36 Page 25
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 416


     timber_bought  =E=  amount of timber i bought in each year     
     
      - 230000*r(24,Mat,2) - 240000*r(25,Mat,2) - 250000*r(26,Mat,2) - 260000*r(27,Mat,2) - 270000*r(28,Mat,2) - 280000*r(29,Mat,2) - 290000*r(30,Mat,2) - 300000*r(31,Mat,2) - 310000*r(32,Mat,2) - 320000*r(33,Mat,2) - 330000*r(34,Mat,2)
     
      - 340000*r(35,Mat,2) - 350000*r(36,Mat,2) - 360000*r(37,Mat,2) - 370000*r(38,Mat,2) - 380000*r(39,Mat,2) - 390000*r(40,Mat,2) - 400000*r(41,Mat,2) - 410000*r(42,Mat,2) - 420000*r(43,Mat,2) - 430000*r(44,Mat,2) - 440000*r(45,Mat,2)
     
      - 450000*r(46,Mat,2) - 460000*r(47,Mat,2) - 470000*r(48,Mat,2) - 480000*r(49,Mat,2) - 490000*r(50,Mat,2) - 500000*r(51,Mat,2) - 510000*r(52,Mat,2) - 520000*r(53,Mat,2) - 530000*r(54,Mat,2) - 540000*r(55,Mat,2) - 550000*r(56,Mat,2)
     
      - 560000*r(57,Mat,2) - 570000*r(58,Mat,2) - 580000*r(59,Mat,2) - 590000*r(60,Mat,2) - 600000*r(61,Mat,2) - 610000*r(62,Mat,2) - 620000*r(63,Mat,2) - 630000*r(64,Mat,2) - 640000*r(65,Mat,2) - 650000*r(66,Mat,2) - 660000*r(67,Mat,2)
     
      - 670000*r(68,Mat,2) - 680000*r(69,Mat,2) - 690000*r(70,Mat,2) - 700000*r(71,Mat,2) - 710000*r(72,Mat,2) - 720000*r(73,Mat,2) - 730000*r(74,Mat,2) - 740000*r(75,Mat,2) - 750000*r(76,Mat,2) - 760000*r(77,Mat,2) - 770000*r(78,Mat,2)
     
      - 780000*r(79,Mat,2) - 790000*r(80,Mat,2) - 800000*r(81,Mat,2) - 810000*r(82,Mat,2) - 820000*r(83,Mat,2) - 830000*r(84,Mat,2) - 840000*r(85,Mat,2) - 850000*r(86,Mat,2) - 860000*r(87,Mat,2) - 870000*r(88,Mat,2) - 880000*r(89,Mat,2)
     
      - 890000*r(90,Mat,2) - 900000*r(91,Mat,2) - 910000*r(92,Mat,2) - 920000*r(93,Mat,2) - 930000*r(94,Mat,2) - 940000*r(95,Mat,2) - 950000*r(96,Mat,2) - 960000*r(97,Mat,2) - 970000*r(98,Mat,2) - 980000*r(99,Mat,2) - 990000*r(100,Mat,2)
     
      - 1000000*r(101,Mat,2) - 1010000*r(102,Mat,2) - 1020000*r(103,Mat,2) - 1030000*r(104,Mat,2) - 1040000*r(105,Mat,2) - 1050000*r(106,Mat,2) - 1060000*r(107,Mat,2) + b(Mat,2) =E= 0 ; (LHS = 0)
     
timber_bought(Mat,3)..  - 10000*r(2,Mat,3) - 20000*r(3,Mat,3) - 30000*r(4,Mat,3) - 40000*r(5,Mat,3) - 50000*r(6,Mat,3) - 60000*r(7,Mat,3) - 70000*r(8,Mat,3) - 80000*r(9,Mat,3) - 90000*r(10,Mat,3) - 100000*r(11,Mat,3) - 110000*r(12,Mat,3)
     
      - 120000*r(13,Mat,3) - 130000*r(14,Mat,3) - 140000*r(15,Mat,3) - 150000*r(16,Mat,3) - 160000*r(17,Mat,3) - 170000*r(18,Mat,3) - 180000*r(19,Mat,3) - 190000*r(20,Mat,3) - 200000*r(21,Mat,3) - 210000*r(22,Mat,3) - 220000*r(23,Mat,3)
     
      - 230000*r(24,Mat,3) - 240000*r(25,Mat,3) - 250000*r(26,Mat,3) - 260000*r(27,Mat,3) - 270000*r(28,Mat,3) - 280000*r(29,Mat,3) - 290000*r(30,Mat,3) - 300000*r(31,Mat,3) - 310000*r(32,Mat,3) - 320000*r(33,Mat,3) - 330000*r(34,Mat,3)
     
      - 340000*r(35,Mat,3) - 350000*r(36,Mat,3) - 360000*r(37,Mat,3) - 370000*r(38,Mat,3) - 380000*r(39,Mat,3) - 390000*r(40,Mat,3) - 400000*r(41,Mat,3) - 410000*r(42,Mat,3) - 420000*r(43,Mat,3) - 430000*r(44,Mat,3) - 440000*r(45,Mat,3)
     
      - 450000*r(46,Mat,3) - 460000*r(47,Mat,3) - 470000*r(48,Mat,3) - 480000*r(49,Mat,3) - 490000*r(50,Mat,3) - 500000*r(51,Mat,3) - 510000*r(52,Mat,3) - 520000*r(53,Mat,3) - 530000*r(54,Mat,3) - 540000*r(55,Mat,3) - 550000*r(56,Mat,3)
     
      - 560000*r(57,Mat,3) - 570000*r(58,Mat,3) - 580000*r(59,Mat,3) - 590000*r(60,Mat,3) - 600000*r(61,Mat,3) - 610000*r(62,Mat,3) - 620000*r(63,Mat,3) - 630000*r(64,Mat,3) - 640000*r(65,Mat,3) - 650000*r(66,Mat,3) - 660000*r(67,Mat,3)
     
      - 670000*r(68,Mat,3) - 680000*r(69,Mat,3) - 690000*r(70,Mat,3) - 700000*r(71,Mat,3) - 710000*r(72,Mat,3) - 720000*r(73,Mat,3) - 730000*r(74,Mat,3) - 740000*r(75,Mat,3) - 750000*r(76,Mat,3) - 760000*r(77,Mat,3) - 770000*r(78,Mat,3)
     
      - 780000*r(79,Mat,3) - 790000*r(80,Mat,3) - 800000*r(81,Mat,3) - 810000*r(82,Mat,3) - 820000*r(83,Mat,3) - 830000*r(84,Mat,3) - 840000*r(85,Mat,3) - 850000*r(86,Mat,3) - 860000*r(87,Mat,3) - 870000*r(88,Mat,3) - 880000*r(89,Mat,3)
     
      - 890000*r(90,Mat,3) - 900000*r(91,Mat,3) - 910000*r(92,Mat,3) - 920000*r(93,Mat,3) - 930000*r(94,Mat,3) - 940000*r(95,Mat,3) - 950000*r(96,Mat,3) - 960000*r(97,Mat,3) - 970000*r(98,Mat,3) - 980000*r(99,Mat,3) - 990000*r(100,Mat,3)
     
      - 1000000*r(101,Mat,3) - 1010000*r(102,Mat,3) - 1020000*r(103,Mat,3) - 1030000*r(104,Mat,3) - 1040000*r(105,Mat,3) - 1050000*r(106,Mat,3) - 1060000*r(107,Mat,3) + b(Mat,3) =E= 0 ; (LHS = 0)
     
timber_bought(Kut,1)..  - 10000*r(2,Kut,1) - 20000*r(3,Kut,1) - 30000*r(4,Kut,1) - 40000*r(5,Kut,1) - 50000*r(6,Kut,1) - 60000*r(7,Kut,1) - 70000*r(8,Kut,1) - 80000*r(9,Kut,1) - 90000*r(10,Kut,1) - 100000*r(11,Kut,1) - 110000*r(12,Kut,1)
     
      - 120000*r(13,Kut,1) - 130000*r(14,Kut,1) - 140000*r(15,Kut,1) - 150000*r(16,Kut,1) - 160000*r(17,Kut,1) - 170000*r(18,Kut,1) - 180000*r(19,Kut,1) - 190000*r(20,Kut,1) - 200000*r(21,Kut,1) - 210000*r(22,Kut,1) - 220000*r(23,Kut,1)
     
      - 230000*r(24,Kut,1) - 240000*r(25,Kut,1) - 250000*r(26,Kut,1) - 260000*r(27,Kut,1) - 270000*r(28,Kut,1) - 280000*r(29,Kut,1) - 290000*r(30,Kut,1) - 300000*r(31,Kut,1) - 310000*r(32,Kut,1) - 320000*r(33,Kut,1) - 330000*r(34,Kut,1)
     
      - 340000*r(35,Kut,1) - 350000*r(36,Kut,1) - 360000*r(37,Kut,1) - 370000*r(38,Kut,1) - 380000*r(39,Kut,1) - 390000*r(40,Kut,1) - 400000*r(41,Kut,1) - 410000*r(42,Kut,1) - 420000*r(43,Kut,1) - 430000*r(44,Kut,1) - 440000*r(45,Kut,1)
     
      - 450000*r(46,Kut,1) - 460000*r(47,Kut,1) - 470000*r(48,Kut,1) - 480000*r(49,Kut,1) - 490000*r(50,Kut,1) - 500000*r(51,Kut,1) - 510000*r(52,Kut,1) - 520000*r(53,Kut,1) - 530000*r(54,Kut,1) - 540000*r(55,Kut,1) - 550000*r(56,Kut,1)
     
      - 560000*r(57,Kut,1) - 570000*r(58,Kut,1) - 580000*r(59,Kut,1) - 590000*r(60,Kut,1) - 600000*r(61,Kut,1) - 610000*r(62,Kut,1) - 620000*r(63,Kut,1) - 630000*r(64,Kut,1) - 640000*r(65,Kut,1) - 650000*r(66,Kut,1) - 660000*r(67,Kut,1)
     
      - 670000*r(68,Kut,1) - 680000*r(69,Kut,1) - 690000*r(70,Kut,1) - 700000*r(71,Kut,1) - 710000*r(72,Kut,1) - 720000*r(73,Kut,1) - 730000*r(74,Kut,1) - 740000*r(75,Kut,1) - 750000*r(76,Kut,1) - 760000*r(77,Kut,1) - 770000*r(78,Kut,1)
     
      - 780000*r(79,Kut,1) - 790000*r(80,Kut,1) - 800000*r(81,Kut,1) - 810000*r(82,Kut,1) - 820000*r(83,Kut,1) - 830000*r(84,Kut,1) - 840000*r(85,Kut,1) - 850000*r(86,Kut,1) - 860000*r(87,Kut,1) - 870000*r(88,Kut,1) - 880000*r(89,Kut,1)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 22:25:36 Page 26
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 416


     timber_bought  =E=  amount of timber i bought in each year     
     
      - 890000*r(90,Kut,1) - 900000*r(91,Kut,1) - 910000*r(92,Kut,1) - 920000*r(93,Kut,1) - 930000*r(94,Kut,1) - 940000*r(95,Kut,1) - 950000*r(96,Kut,1) - 960000*r(97,Kut,1) - 970000*r(98,Kut,1) - 980000*r(99,Kut,1) - 990000*r(100,Kut,1)
     
      - 1000000*r(101,Kut,1) - 1010000*r(102,Kut,1) - 1020000*r(103,Kut,1) - 1030000*r(104,Kut,1) - 1040000*r(105,Kut,1) - 1050000*r(106,Kut,1) - 1060000*r(107,Kut,1) + b(Kut,1) =E= 0 ; (LHS = 0)
     
timber_bought(Kut,2)..  - 10000*r(2,Kut,2) - 20000*r(3,Kut,2) - 30000*r(4,Kut,2) - 40000*r(5,Kut,2) - 50000*r(6,Kut,2) - 60000*r(7,Kut,2) - 70000*r(8,Kut,2) - 80000*r(9,Kut,2) - 90000*r(10,Kut,2) - 100000*r(11,Kut,2) - 110000*r(12,Kut,2)
     
      - 120000*r(13,Kut,2) - 130000*r(14,Kut,2) - 140000*r(15,Kut,2) - 150000*r(16,Kut,2) - 160000*r(17,Kut,2) - 170000*r(18,Kut,2) - 180000*r(19,Kut,2) - 190000*r(20,Kut,2) - 200000*r(21,Kut,2) - 210000*r(22,Kut,2) - 220000*r(23,Kut,2)
     
      - 230000*r(24,Kut,2) - 240000*r(25,Kut,2) - 250000*r(26,Kut,2) - 260000*r(27,Kut,2) - 270000*r(28,Kut,2) - 280000*r(29,Kut,2) - 290000*r(30,Kut,2) - 300000*r(31,Kut,2) - 310000*r(32,Kut,2) - 320000*r(33,Kut,2) - 330000*r(34,Kut,2)
     
      - 340000*r(35,Kut,2) - 350000*r(36,Kut,2) - 360000*r(37,Kut,2) - 370000*r(38,Kut,2) - 380000*r(39,Kut,2) - 390000*r(40,Kut,2) - 400000*r(41,Kut,2) - 410000*r(42,Kut,2) - 420000*r(43,Kut,2) - 430000*r(44,Kut,2) - 440000*r(45,Kut,2)
     
      - 450000*r(46,Kut,2) - 460000*r(47,Kut,2) - 470000*r(48,Kut,2) - 480000*r(49,Kut,2) - 490000*r(50,Kut,2) - 500000*r(51,Kut,2) - 510000*r(52,Kut,2) - 520000*r(53,Kut,2) - 530000*r(54,Kut,2) - 540000*r(55,Kut,2) - 550000*r(56,Kut,2)
     
      - 560000*r(57,Kut,2) - 570000*r(58,Kut,2) - 580000*r(59,Kut,2) - 590000*r(60,Kut,2) - 600000*r(61,Kut,2) - 610000*r(62,Kut,2) - 620000*r(63,Kut,2) - 630000*r(64,Kut,2) - 640000*r(65,Kut,2) - 650000*r(66,Kut,2) - 660000*r(67,Kut,2)
     
      - 670000*r(68,Kut,2) - 680000*r(69,Kut,2) - 690000*r(70,Kut,2) - 700000*r(71,Kut,2) - 710000*r(72,Kut,2) - 720000*r(73,Kut,2) - 730000*r(74,Kut,2) - 740000*r(75,Kut,2) - 750000*r(76,Kut,2) - 760000*r(77,Kut,2) - 770000*r(78,Kut,2)
     
      - 780000*r(79,Kut,2) - 790000*r(80,Kut,2) - 800000*r(81,Kut,2) - 810000*r(82,Kut,2) - 820000*r(83,Kut,2) - 830000*r(84,Kut,2) - 840000*r(85,Kut,2) - 850000*r(86,Kut,2) - 860000*r(87,Kut,2) - 870000*r(88,Kut,2) - 880000*r(89,Kut,2)
     
      - 890000*r(90,Kut,2) - 900000*r(91,Kut,2) - 910000*r(92,Kut,2) - 920000*r(93,Kut,2) - 930000*r(94,Kut,2) - 940000*r(95,Kut,2) - 950000*r(96,Kut,2) - 960000*r(97,Kut,2) - 970000*r(98,Kut,2) - 980000*r(99,Kut,2) - 990000*r(100,Kut,2)
     
      - 1000000*r(101,Kut,2) - 1010000*r(102,Kut,2) - 1020000*r(103,Kut,2) - 1030000*r(104,Kut,2) - 1040000*r(105,Kut,2) - 1050000*r(106,Kut,2) - 1060000*r(107,Kut,2) + b(Kut,2) =E= 0 ; (LHS = 0)
     
timber_bought(Kut,3)..  - 10000*r(2,Kut,3) - 20000*r(3,Kut,3) - 30000*r(4,Kut,3) - 40000*r(5,Kut,3) - 50000*r(6,Kut,3) - 60000*r(7,Kut,3) - 70000*r(8,Kut,3) - 80000*r(9,Kut,3) - 90000*r(10,Kut,3) - 100000*r(11,Kut,3) - 110000*r(12,Kut,3)
     
      - 120000*r(13,Kut,3) - 130000*r(14,Kut,3) - 140000*r(15,Kut,3) - 150000*r(16,Kut,3) - 160000*r(17,Kut,3) - 170000*r(18,Kut,3) - 180000*r(19,Kut,3) - 190000*r(20,Kut,3) - 200000*r(21,Kut,3) - 210000*r(22,Kut,3) - 220000*r(23,Kut,3)
     
      - 230000*r(24,Kut,3) - 240000*r(25,Kut,3) - 250000*r(26,Kut,3) - 260000*r(27,Kut,3) - 270000*r(28,Kut,3) - 280000*r(29,Kut,3) - 290000*r(30,Kut,3) - 300000*r(31,Kut,3) - 310000*r(32,Kut,3) - 320000*r(33,Kut,3) - 330000*r(34,Kut,3)
     
      - 340000*r(35,Kut,3) - 350000*r(36,Kut,3) - 360000*r(37,Kut,3) - 370000*r(38,Kut,3) - 380000*r(39,Kut,3) - 390000*r(40,Kut,3) - 400000*r(41,Kut,3) - 410000*r(42,Kut,3) - 420000*r(43,Kut,3) - 430000*r(44,Kut,3) - 440000*r(45,Kut,3)
     
      - 450000*r(46,Kut,3) - 460000*r(47,Kut,3) - 470000*r(48,Kut,3) - 480000*r(49,Kut,3) - 490000*r(50,Kut,3) - 500000*r(51,Kut,3) - 510000*r(52,Kut,3) - 520000*r(53,Kut,3) - 530000*r(54,Kut,3) - 540000*r(55,Kut,3) - 550000*r(56,Kut,3)
     
      - 560000*r(57,Kut,3) - 570000*r(58,Kut,3) - 580000*r(59,Kut,3) - 590000*r(60,Kut,3) - 600000*r(61,Kut,3) - 610000*r(62,Kut,3) - 620000*r(63,Kut,3) - 630000*r(64,Kut,3) - 640000*r(65,Kut,3) - 650000*r(66,Kut,3) - 660000*r(67,Kut,3)
     
      - 670000*r(68,Kut,3) - 680000*r(69,Kut,3) - 690000*r(70,Kut,3) - 700000*r(71,Kut,3) - 710000*r(72,Kut,3) - 720000*r(73,Kut,3) - 730000*r(74,Kut,3) - 740000*r(75,Kut,3) - 750000*r(76,Kut,3) - 760000*r(77,Kut,3) - 770000*r(78,Kut,3)
     
      - 780000*r(79,Kut,3) - 790000*r(80,Kut,3) - 800000*r(81,Kut,3) - 810000*r(82,Kut,3) - 820000*r(83,Kut,3) - 830000*r(84,Kut,3) - 840000*r(85,Kut,3) - 850000*r(86,Kut,3) - 860000*r(87,Kut,3) - 870000*r(88,Kut,3) - 880000*r(89,Kut,3)
     
      - 890000*r(90,Kut,3) - 900000*r(91,Kut,3) - 910000*r(92,Kut,3) - 920000*r(93,Kut,3) - 930000*r(94,Kut,3) - 940000*r(95,Kut,3) - 950000*r(96,Kut,3) - 960000*r(97,Kut,3) - 970000*r(98,Kut,3) - 980000*r(99,Kut,3) - 990000*r(100,Kut,3)
     
      - 1000000*r(101,Kut,3) - 1010000*r(102,Kut,3) - 1020000*r(103,Kut,3) - 1030000*r(104,Kut,3) - 1040000*r(105,Kut,3) - 1050000*r(106,Kut,3) - 1060000*r(107,Kut,3) + b(Kut,3) =E= 0 ; (LHS = 0)
     
timber_bought(Kot,1)..  - 10000*r(2,Kot,1) - 20000*r(3,Kot,1) - 30000*r(4,Kot,1) - 40000*r(5,Kot,1) - 50000*r(6,Kot,1) - 60000*r(7,Kot,1) - 70000*r(8,Kot,1) - 80000*r(9,Kot,1) - 90000*r(10,Kot,1) - 100000*r(11,Kot,1) - 110000*r(12,Kot,1)
     
      - 120000*r(13,Kot,1) - 130000*r(14,Kot,1) - 140000*r(15,Kot,1) - 150000*r(16,Kot,1) - 160000*r(17,Kot,1) - 170000*r(18,Kot,1) - 180000*r(19,Kot,1) - 190000*r(20,Kot,1) - 200000*r(21,Kot,1) - 210000*r(22,Kot,1) - 220000*r(23,Kot,1)
     
      - 230000*r(24,Kot,1) - 240000*r(25,Kot,1) - 250000*r(26,Kot,1) - 260000*r(27,Kot,1) - 270000*r(28,Kot,1) - 280000*r(29,Kot,1) - 290000*r(30,Kot,1) - 300000*r(31,Kot,1) - 310000*r(32,Kot,1) - 320000*r(33,Kot,1) - 330000*r(34,Kot,1)
     
      - 340000*r(35,Kot,1) - 350000*r(36,Kot,1) - 360000*r(37,Kot,1) - 370000*r(38,Kot,1) - 380000*r(39,Kot,1) - 390000*r(40,Kot,1) - 400000*r(41,Kot,1) - 410000*r(42,Kot,1) - 420000*r(43,Kot,1) - 430000*r(44,Kot,1) - 440000*r(45,Kot,1)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 22:25:36 Page 27
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 416


     timber_bought  =E=  amount of timber i bought in each year     
     
      - 450000*r(46,Kot,1) - 460000*r(47,Kot,1) - 470000*r(48,Kot,1) - 480000*r(49,Kot,1) - 490000*r(50,Kot,1) - 500000*r(51,Kot,1) - 510000*r(52,Kot,1) - 520000*r(53,Kot,1) - 530000*r(54,Kot,1) - 540000*r(55,Kot,1) - 550000*r(56,Kot,1)
     
      - 560000*r(57,Kot,1) - 570000*r(58,Kot,1) - 580000*r(59,Kot,1) - 590000*r(60,Kot,1) - 600000*r(61,Kot,1) - 610000*r(62,Kot,1) - 620000*r(63,Kot,1) - 630000*r(64,Kot,1) - 640000*r(65,Kot,1) - 650000*r(66,Kot,1) - 660000*r(67,Kot,1)
     
      - 670000*r(68,Kot,1) - 680000*r(69,Kot,1) - 690000*r(70,Kot,1) - 700000*r(71,Kot,1) - 710000*r(72,Kot,1) - 720000*r(73,Kot,1) - 730000*r(74,Kot,1) - 740000*r(75,Kot,1) - 750000*r(76,Kot,1) - 760000*r(77,Kot,1) - 770000*r(78,Kot,1)
     
      - 780000*r(79,Kot,1) - 790000*r(80,Kot,1) - 800000*r(81,Kot,1) - 810000*r(82,Kot,1) - 820000*r(83,Kot,1) - 830000*r(84,Kot,1) - 840000*r(85,Kot,1) - 850000*r(86,Kot,1) - 860000*r(87,Kot,1) - 870000*r(88,Kot,1) - 880000*r(89,Kot,1)
     
      - 890000*r(90,Kot,1) - 900000*r(91,Kot,1) - 910000*r(92,Kot,1) - 920000*r(93,Kot,1) - 930000*r(94,Kot,1) - 940000*r(95,Kot,1) - 950000*r(96,Kot,1) - 960000*r(97,Kot,1) - 970000*r(98,Kot,1) - 980000*r(99,Kot,1) - 990000*r(100,Kot,1)
     
      - 1000000*r(101,Kot,1) - 1010000*r(102,Kot,1) - 1020000*r(103,Kot,1) - 1030000*r(104,Kot,1) - 1040000*r(105,Kot,1) - 1050000*r(106,Kot,1) - 1060000*r(107,Kot,1) + b(Kot,1) =E= 0 ; (LHS = 0)
     
timber_bought(Kot,2)..  - 10000*r(2,Kot,2) - 20000*r(3,Kot,2) - 30000*r(4,Kot,2) - 40000*r(5,Kot,2) - 50000*r(6,Kot,2) - 60000*r(7,Kot,2) - 70000*r(8,Kot,2) - 80000*r(9,Kot,2) - 90000*r(10,Kot,2) - 100000*r(11,Kot,2) - 110000*r(12,Kot,2)
     
      - 120000*r(13,Kot,2) - 130000*r(14,Kot,2) - 140000*r(15,Kot,2) - 150000*r(16,Kot,2) - 160000*r(17,Kot,2) - 170000*r(18,Kot,2) - 180000*r(19,Kot,2) - 190000*r(20,Kot,2) - 200000*r(21,Kot,2) - 210000*r(22,Kot,2) - 220000*r(23,Kot,2)
     
      - 230000*r(24,Kot,2) - 240000*r(25,Kot,2) - 250000*r(26,Kot,2) - 260000*r(27,Kot,2) - 270000*r(28,Kot,2) - 280000*r(29,Kot,2) - 290000*r(30,Kot,2) - 300000*r(31,Kot,2) - 310000*r(32,Kot,2) - 320000*r(33,Kot,2) - 330000*r(34,Kot,2)
     
      - 340000*r(35,Kot,2) - 350000*r(36,Kot,2) - 360000*r(37,Kot,2) - 370000*r(38,Kot,2) - 380000*r(39,Kot,2) - 390000*r(40,Kot,2) - 400000*r(41,Kot,2) - 410000*r(42,Kot,2) - 420000*r(43,Kot,2) - 430000*r(44,Kot,2) - 440000*r(45,Kot,2)
     
      - 450000*r(46,Kot,2) - 460000*r(47,Kot,2) - 470000*r(48,Kot,2) - 480000*r(49,Kot,2) - 490000*r(50,Kot,2) - 500000*r(51,Kot,2) - 510000*r(52,Kot,2) - 520000*r(53,Kot,2) - 530000*r(54,Kot,2) - 540000*r(55,Kot,2) - 550000*r(56,Kot,2)
     
      - 560000*r(57,Kot,2) - 570000*r(58,Kot,2) - 580000*r(59,Kot,2) - 590000*r(60,Kot,2) - 600000*r(61,Kot,2) - 610000*r(62,Kot,2) - 620000*r(63,Kot,2) - 630000*r(64,Kot,2) - 640000*r(65,Kot,2) - 650000*r(66,Kot,2) - 660000*r(67,Kot,2)
     
      - 670000*r(68,Kot,2) - 680000*r(69,Kot,2) - 690000*r(70,Kot,2) - 700000*r(71,Kot,2) - 710000*r(72,Kot,2) - 720000*r(73,Kot,2) - 730000*r(74,Kot,2) - 740000*r(75,Kot,2) - 750000*r(76,Kot,2) - 760000*r(77,Kot,2) - 770000*r(78,Kot,2)
     
      - 780000*r(79,Kot,2) - 790000*r(80,Kot,2) - 800000*r(81,Kot,2) - 810000*r(82,Kot,2) - 820000*r(83,Kot,2) - 830000*r(84,Kot,2) - 840000*r(85,Kot,2) - 850000*r(86,Kot,2) - 860000*r(87,Kot,2) - 870000*r(88,Kot,2) - 880000*r(89,Kot,2)
     
      - 890000*r(90,Kot,2) - 900000*r(91,Kot,2) - 910000*r(92,Kot,2) - 920000*r(93,Kot,2) - 930000*r(94,Kot,2) - 940000*r(95,Kot,2) - 950000*r(96,Kot,2) - 960000*r(97,Kot,2) - 970000*r(98,Kot,2) - 980000*r(99,Kot,2) - 990000*r(100,Kot,2)
     
      - 1000000*r(101,Kot,2) - 1010000*r(102,Kot,2) - 1020000*r(103,Kot,2) - 1030000*r(104,Kot,2) - 1040000*r(105,Kot,2) - 1050000*r(106,Kot,2) - 1060000*r(107,Kot,2) + b(Kot,2) =E= 0 ; (LHS = 0)
     
timber_bought(Kot,3)..  - 10000*r(2,Kot,3) - 20000*r(3,Kot,3) - 30000*r(4,Kot,3) - 40000*r(5,Kot,3) - 50000*r(6,Kot,3) - 60000*r(7,Kot,3) - 70000*r(8,Kot,3) - 80000*r(9,Kot,3) - 90000*r(10,Kot,3) - 100000*r(11,Kot,3) - 110000*r(12,Kot,3)
     
      - 120000*r(13,Kot,3) - 130000*r(14,Kot,3) - 140000*r(15,Kot,3) - 150000*r(16,Kot,3) - 160000*r(17,Kot,3) - 170000*r(18,Kot,3) - 180000*r(19,Kot,3) - 190000*r(20,Kot,3) - 200000*r(21,Kot,3) - 210000*r(22,Kot,3) - 220000*r(23,Kot,3)
     
      - 230000*r(24,Kot,3) - 240000*r(25,Kot,3) - 250000*r(26,Kot,3) - 260000*r(27,Kot,3) - 270000*r(28,Kot,3) - 280000*r(29,Kot,3) - 290000*r(30,Kot,3) - 300000*r(31,Kot,3) - 310000*r(32,Kot,3) - 320000*r(33,Kot,3) - 330000*r(34,Kot,3)
     
      - 340000*r(35,Kot,3) - 350000*r(36,Kot,3) - 360000*r(37,Kot,3) - 370000*r(38,Kot,3) - 380000*r(39,Kot,3) - 390000*r(40,Kot,3) - 400000*r(41,Kot,3) - 410000*r(42,Kot,3) - 420000*r(43,Kot,3) - 430000*r(44,Kot,3) - 440000*r(45,Kot,3)
     
      - 450000*r(46,Kot,3) - 460000*r(47,Kot,3) - 470000*r(48,Kot,3) - 480000*r(49,Kot,3) - 490000*r(50,Kot,3) - 500000*r(51,Kot,3) - 510000*r(52,Kot,3) - 520000*r(53,Kot,3) - 530000*r(54,Kot,3) - 540000*r(55,Kot,3) - 550000*r(56,Kot,3)
     
      - 560000*r(57,Kot,3) - 570000*r(58,Kot,3) - 580000*r(59,Kot,3) - 590000*r(60,Kot,3) - 600000*r(61,Kot,3) - 610000*r(62,Kot,3) - 620000*r(63,Kot,3) - 630000*r(64,Kot,3) - 640000*r(65,Kot,3) - 650000*r(66,Kot,3) - 660000*r(67,Kot,3)
     
      - 670000*r(68,Kot,3) - 680000*r(69,Kot,3) - 690000*r(70,Kot,3) - 700000*r(71,Kot,3) - 710000*r(72,Kot,3) - 720000*r(73,Kot,3) - 730000*r(74,Kot,3) - 740000*r(75,Kot,3) - 750000*r(76,Kot,3) - 760000*r(77,Kot,3) - 770000*r(78,Kot,3)
     
      - 780000*r(79,Kot,3) - 790000*r(80,Kot,3) - 800000*r(81,Kot,3) - 810000*r(82,Kot,3) - 820000*r(83,Kot,3) - 830000*r(84,Kot,3) - 840000*r(85,Kot,3) - 850000*r(86,Kot,3) - 860000*r(87,Kot,3) - 870000*r(88,Kot,3) - 880000*r(89,Kot,3)
     
      - 890000*r(90,Kot,3) - 900000*r(91,Kot,3) - 910000*r(92,Kot,3) - 920000*r(93,Kot,3) - 930000*r(94,Kot,3) - 940000*r(95,Kot,3) - 950000*r(96,Kot,3) - 960000*r(97,Kot,3) - 970000*r(98,Kot,3) - 980000*r(99,Kot,3) - 990000*r(100,Kot,3)
     
      - 1000000*r(101,Kot,3) - 1010000*r(102,Kot,3) - 1020000*r(103,Kot,3) - 1030000*r(104,Kot,3) - 1040000*r(105,Kot,3) - 1050000*r(106,Kot,3) - 1060000*r(107,Kot,3) + b(Kot,3) =E= 0 ; (LHS = 0)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 22:25:36 Page 28
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 416


     timber_bought  =E=  amount of timber i bought in each year

timber_bought(Mak,1)..  - 10000*r(2,Mak,1) - 20000*r(3,Mak,1) - 30000*r(4,Mak,1) - 40000*r(5,Mak,1) - 50000*r(6,Mak,1) - 60000*r(7,Mak,1) - 70000*r(8,Mak,1) - 80000*r(9,Mak,1) - 90000*r(10,Mak,1) - 100000*r(11,Mak,1) - 110000*r(12,Mak,1)
     
      - 120000*r(13,Mak,1) - 130000*r(14,Mak,1) - 140000*r(15,Mak,1) - 150000*r(16,Mak,1) - 160000*r(17,Mak,1) - 170000*r(18,Mak,1) - 180000*r(19,Mak,1) - 190000*r(20,Mak,1) - 200000*r(21,Mak,1) - 210000*r(22,Mak,1) - 220000*r(23,Mak,1)
     
      - 230000*r(24,Mak,1) - 240000*r(25,Mak,1) - 250000*r(26,Mak,1) - 260000*r(27,Mak,1) - 270000*r(28,Mak,1) - 280000*r(29,Mak,1) - 290000*r(30,Mak,1) - 300000*r(31,Mak,1) - 310000*r(32,Mak,1) - 320000*r(33,Mak,1) - 330000*r(34,Mak,1)
     
      - 340000*r(35,Mak,1) - 350000*r(36,Mak,1) - 360000*r(37,Mak,1) - 370000*r(38,Mak,1) - 380000*r(39,Mak,1) - 390000*r(40,Mak,1) - 400000*r(41,Mak,1) - 410000*r(42,Mak,1) - 420000*r(43,Mak,1) - 430000*r(44,Mak,1) - 440000*r(45,Mak,1)
     
      - 450000*r(46,Mak,1) - 460000*r(47,Mak,1) - 470000*r(48,Mak,1) - 480000*r(49,Mak,1) - 490000*r(50,Mak,1) - 500000*r(51,Mak,1) - 510000*r(52,Mak,1) - 520000*r(53,Mak,1) - 530000*r(54,Mak,1) - 540000*r(55,Mak,1) - 550000*r(56,Mak,1)
     
      - 560000*r(57,Mak,1) - 570000*r(58,Mak,1) - 580000*r(59,Mak,1) - 590000*r(60,Mak,1) - 600000*r(61,Mak,1) - 610000*r(62,Mak,1) - 620000*r(63,Mak,1) - 630000*r(64,Mak,1) - 640000*r(65,Mak,1) - 650000*r(66,Mak,1) - 660000*r(67,Mak,1)
     
      - 670000*r(68,Mak,1) - 680000*r(69,Mak,1) - 690000*r(70,Mak,1) - 700000*r(71,Mak,1) - 710000*r(72,Mak,1) - 720000*r(73,Mak,1) - 730000*r(74,Mak,1) - 740000*r(75,Mak,1) - 750000*r(76,Mak,1) - 760000*r(77,Mak,1) - 770000*r(78,Mak,1)
     
      - 780000*r(79,Mak,1) - 790000*r(80,Mak,1) - 800000*r(81,Mak,1) - 810000*r(82,Mak,1) - 820000*r(83,Mak,1) - 830000*r(84,Mak,1) - 840000*r(85,Mak,1) - 850000*r(86,Mak,1) - 860000*r(87,Mak,1) - 870000*r(88,Mak,1) - 880000*r(89,Mak,1)
     
      - 890000*r(90,Mak,1) - 900000*r(91,Mak,1) - 910000*r(92,Mak,1) - 920000*r(93,Mak,1) - 930000*r(94,Mak,1) - 940000*r(95,Mak,1) - 950000*r(96,Mak,1) - 960000*r(97,Mak,1) - 970000*r(98,Mak,1) - 980000*r(99,Mak,1) - 990000*r(100,Mak,1)
     
      - 1000000*r(101,Mak,1) - 1010000*r(102,Mak,1) - 1020000*r(103,Mak,1) - 1030000*r(104,Mak,1) - 1040000*r(105,Mak,1) - 1050000*r(106,Mak,1) - 1060000*r(107,Mak,1) + b(Mak,1) =E= 0 ; (LHS = 0)
     
timber_bought(Mak,2)..  - 10000*r(2,Mak,2) - 20000*r(3,Mak,2) - 30000*r(4,Mak,2) - 40000*r(5,Mak,2) - 50000*r(6,Mak,2) - 60000*r(7,Mak,2) - 70000*r(8,Mak,2) - 80000*r(9,Mak,2) - 90000*r(10,Mak,2) - 100000*r(11,Mak,2) - 110000*r(12,Mak,2)
     
      - 120000*r(13,Mak,2) - 130000*r(14,Mak,2) - 140000*r(15,Mak,2) - 150000*r(16,Mak,2) - 160000*r(17,Mak,2) - 170000*r(18,Mak,2) - 180000*r(19,Mak,2) - 190000*r(20,Mak,2) - 200000*r(21,Mak,2) - 210000*r(22,Mak,2) - 220000*r(23,Mak,2)
     
      - 230000*r(24,Mak,2) - 240000*r(25,Mak,2) - 250000*r(26,Mak,2) - 260000*r(27,Mak,2) - 270000*r(28,Mak,2) - 280000*r(29,Mak,2) - 290000*r(30,Mak,2) - 300000*r(31,Mak,2) - 310000*r(32,Mak,2) - 320000*r(33,Mak,2) - 330000*r(34,Mak,2)
     
      - 340000*r(35,Mak,2) - 350000*r(36,Mak,2) - 360000*r(37,Mak,2) - 370000*r(38,Mak,2) - 380000*r(39,Mak,2) - 390000*r(40,Mak,2) - 400000*r(41,Mak,2) - 410000*r(42,Mak,2) - 420000*r(43,Mak,2) - 430000*r(44,Mak,2) - 440000*r(45,Mak,2)
     
      - 450000*r(46,Mak,2) - 460000*r(47,Mak,2) - 470000*r(48,Mak,2) - 480000*r(49,Mak,2) - 490000*r(50,Mak,2) - 500000*r(51,Mak,2) - 510000*r(52,Mak,2) - 520000*r(53,Mak,2) - 530000*r(54,Mak,2) - 540000*r(55,Mak,2) - 550000*r(56,Mak,2)
     
      - 560000*r(57,Mak,2) - 570000*r(58,Mak,2) - 580000*r(59,Mak,2) - 590000*r(60,Mak,2) - 600000*r(61,Mak,2) - 610000*r(62,Mak,2) - 620000*r(63,Mak,2) - 630000*r(64,Mak,2) - 640000*r(65,Mak,2) - 650000*r(66,Mak,2) - 660000*r(67,Mak,2)
     
      - 670000*r(68,Mak,2) - 680000*r(69,Mak,2) - 690000*r(70,Mak,2) - 700000*r(71,Mak,2) - 710000*r(72,Mak,2) - 720000*r(73,Mak,2) - 730000*r(74,Mak,2) - 740000*r(75,Mak,2) - 750000*r(76,Mak,2) - 760000*r(77,Mak,2) - 770000*r(78,Mak,2)
     
      - 780000*r(79,Mak,2) - 790000*r(80,Mak,2) - 800000*r(81,Mak,2) - 810000*r(82,Mak,2) - 820000*r(83,Mak,2) - 830000*r(84,Mak,2) - 840000*r(85,Mak,2) - 850000*r(86,Mak,2) - 860000*r(87,Mak,2) - 870000*r(88,Mak,2) - 880000*r(89,Mak,2)
     
      - 890000*r(90,Mak,2) - 900000*r(91,Mak,2) - 910000*r(92,Mak,2) - 920000*r(93,Mak,2) - 930000*r(94,Mak,2) - 940000*r(95,Mak,2) - 950000*r(96,Mak,2) - 960000*r(97,Mak,2) - 970000*r(98,Mak,2) - 980000*r(99,Mak,2) - 990000*r(100,Mak,2)
     
      - 1000000*r(101,Mak,2) - 1010000*r(102,Mak,2) - 1020000*r(103,Mak,2) - 1030000*r(104,Mak,2) - 1040000*r(105,Mak,2) - 1050000*r(106,Mak,2) - 1060000*r(107,Mak,2) + b(Mak,2) =E= 0 ; (LHS = 0)
     
timber_bought(Mak,3)..  - 10000*r(2,Mak,3) - 20000*r(3,Mak,3) - 30000*r(4,Mak,3) - 40000*r(5,Mak,3) - 50000*r(6,Mak,3) - 60000*r(7,Mak,3) - 70000*r(8,Mak,3) - 80000*r(9,Mak,3) - 90000*r(10,Mak,3) - 100000*r(11,Mak,3) - 110000*r(12,Mak,3)
     
      - 120000*r(13,Mak,3) - 130000*r(14,Mak,3) - 140000*r(15,Mak,3) - 150000*r(16,Mak,3) - 160000*r(17,Mak,3) - 170000*r(18,Mak,3) - 180000*r(19,Mak,3) - 190000*r(20,Mak,3) - 200000*r(21,Mak,3) - 210000*r(22,Mak,3) - 220000*r(23,Mak,3)
     
      - 230000*r(24,Mak,3) - 240000*r(25,Mak,3) - 250000*r(26,Mak,3) - 260000*r(27,Mak,3) - 270000*r(28,Mak,3) - 280000*r(29,Mak,3) - 290000*r(30,Mak,3) - 300000*r(31,Mak,3) - 310000*r(32,Mak,3) - 320000*r(33,Mak,3) - 330000*r(34,Mak,3)
     
      - 340000*r(35,Mak,3) - 350000*r(36,Mak,3) - 360000*r(37,Mak,3) - 370000*r(38,Mak,3) - 380000*r(39,Mak,3) - 390000*r(40,Mak,3) - 400000*r(41,Mak,3) - 410000*r(42,Mak,3) - 420000*r(43,Mak,3) - 430000*r(44,Mak,3) - 440000*r(45,Mak,3)
     
      - 450000*r(46,Mak,3) - 460000*r(47,Mak,3) - 470000*r(48,Mak,3) - 480000*r(49,Mak,3) - 490000*r(50,Mak,3) - 500000*r(51,Mak,3) - 510000*r(52,Mak,3) - 520000*r(53,Mak,3) - 530000*r(54,Mak,3) - 540000*r(55,Mak,3) - 550000*r(56,Mak,3)
     
      - 560000*r(57,Mak,3) - 570000*r(58,Mak,3) - 580000*r(59,Mak,3) - 590000*r(60,Mak,3) - 600000*r(61,Mak,3) - 610000*r(62,Mak,3) - 620000*r(63,Mak,3) - 630000*r(64,Mak,3) - 640000*r(65,Mak,3) - 650000*r(66,Mak,3) - 660000*r(67,Mak,3)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 22:25:36 Page 29
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 416


     timber_bought  =E=  amount of timber i bought in each year     
     
      - 670000*r(68,Mak,3) - 680000*r(69,Mak,3) - 690000*r(70,Mak,3) - 700000*r(71,Mak,3) - 710000*r(72,Mak,3) - 720000*r(73,Mak,3) - 730000*r(74,Mak,3) - 740000*r(75,Mak,3) - 750000*r(76,Mak,3) - 760000*r(77,Mak,3) - 770000*r(78,Mak,3)
     
      - 780000*r(79,Mak,3) - 790000*r(80,Mak,3) - 800000*r(81,Mak,3) - 810000*r(82,Mak,3) - 820000*r(83,Mak,3) - 830000*r(84,Mak,3) - 840000*r(85,Mak,3) - 850000*r(86,Mak,3) - 860000*r(87,Mak,3) - 870000*r(88,Mak,3) - 880000*r(89,Mak,3)
     
      - 890000*r(90,Mak,3) - 900000*r(91,Mak,3) - 910000*r(92,Mak,3) - 920000*r(93,Mak,3) - 930000*r(94,Mak,3) - 940000*r(95,Mak,3) - 950000*r(96,Mak,3) - 960000*r(97,Mak,3) - 970000*r(98,Mak,3) - 980000*r(99,Mak,3) - 990000*r(100,Mak,3)
     
      - 1000000*r(101,Mak,3) - 1010000*r(102,Mak,3) - 1020000*r(103,Mak,3) - 1030000*r(104,Mak,3) - 1040000*r(105,Mak,3) - 1050000*r(106,Mak,3) - 1060000*r(107,Mak,3) + b(Mak,3) =E= 0 ; (LHS = 0)
     
timber_bought(Kuk,1)..  - 10000*r(2,Kuk,1) - 20000*r(3,Kuk,1) - 30000*r(4,Kuk,1) - 40000*r(5,Kuk,1) - 50000*r(6,Kuk,1) - 60000*r(7,Kuk,1) - 70000*r(8,Kuk,1) - 80000*r(9,Kuk,1) - 90000*r(10,Kuk,1) - 100000*r(11,Kuk,1) - 110000*r(12,Kuk,1)
     
      - 120000*r(13,Kuk,1) - 130000*r(14,Kuk,1) - 140000*r(15,Kuk,1) - 150000*r(16,Kuk,1) - 160000*r(17,Kuk,1) - 170000*r(18,Kuk,1) - 180000*r(19,Kuk,1) - 190000*r(20,Kuk,1) - 200000*r(21,Kuk,1) - 210000*r(22,Kuk,1) - 220000*r(23,Kuk,1)
     
      - 230000*r(24,Kuk,1) - 240000*r(25,Kuk,1) - 250000*r(26,Kuk,1) - 260000*r(27,Kuk,1) - 270000*r(28,Kuk,1) - 280000*r(29,Kuk,1) - 290000*r(30,Kuk,1) - 300000*r(31,Kuk,1) - 310000*r(32,Kuk,1) - 320000*r(33,Kuk,1) - 330000*r(34,Kuk,1)
     
      - 340000*r(35,Kuk,1) - 350000*r(36,Kuk,1) - 360000*r(37,Kuk,1) - 370000*r(38,Kuk,1) - 380000*r(39,Kuk,1) - 390000*r(40,Kuk,1) - 400000*r(41,Kuk,1) - 410000*r(42,Kuk,1) - 420000*r(43,Kuk,1) - 430000*r(44,Kuk,1) - 440000*r(45,Kuk,1)
     
      - 450000*r(46,Kuk,1) - 460000*r(47,Kuk,1) - 470000*r(48,Kuk,1) - 480000*r(49,Kuk,1) - 490000*r(50,Kuk,1) - 500000*r(51,Kuk,1) - 510000*r(52,Kuk,1) - 520000*r(53,Kuk,1) - 530000*r(54,Kuk,1) - 540000*r(55,Kuk,1) - 550000*r(56,Kuk,1)
     
      - 560000*r(57,Kuk,1) - 570000*r(58,Kuk,1) - 580000*r(59,Kuk,1) - 590000*r(60,Kuk,1) - 600000*r(61,Kuk,1) - 610000*r(62,Kuk,1) - 620000*r(63,Kuk,1) - 630000*r(64,Kuk,1) - 640000*r(65,Kuk,1) - 650000*r(66,Kuk,1) - 660000*r(67,Kuk,1)
     
      - 670000*r(68,Kuk,1) - 680000*r(69,Kuk,1) - 690000*r(70,Kuk,1) - 700000*r(71,Kuk,1) - 710000*r(72,Kuk,1) - 720000*r(73,Kuk,1) - 730000*r(74,Kuk,1) - 740000*r(75,Kuk,1) - 750000*r(76,Kuk,1) - 760000*r(77,Kuk,1) - 770000*r(78,Kuk,1)
     
      - 780000*r(79,Kuk,1) - 790000*r(80,Kuk,1) - 800000*r(81,Kuk,1) - 810000*r(82,Kuk,1) - 820000*r(83,Kuk,1) - 830000*r(84,Kuk,1) - 840000*r(85,Kuk,1) - 850000*r(86,Kuk,1) - 860000*r(87,Kuk,1) - 870000*r(88,Kuk,1) - 880000*r(89,Kuk,1)
     
      - 890000*r(90,Kuk,1) - 900000*r(91,Kuk,1) - 910000*r(92,Kuk,1) - 920000*r(93,Kuk,1) - 930000*r(94,Kuk,1) - 940000*r(95,Kuk,1) - 950000*r(96,Kuk,1) - 960000*r(97,Kuk,1) - 970000*r(98,Kuk,1) - 980000*r(99,Kuk,1) - 990000*r(100,Kuk,1)
     
      - 1000000*r(101,Kuk,1) - 1010000*r(102,Kuk,1) - 1020000*r(103,Kuk,1) - 1030000*r(104,Kuk,1) - 1040000*r(105,Kuk,1) - 1050000*r(106,Kuk,1) - 1060000*r(107,Kuk,1) + b(Kuk,1) =E= 0 ; (LHS = 0)
     
timber_bought(Kuk,2)..  - 10000*r(2,Kuk,2) - 20000*r(3,Kuk,2) - 30000*r(4,Kuk,2) - 40000*r(5,Kuk,2) - 50000*r(6,Kuk,2) - 60000*r(7,Kuk,2) - 70000*r(8,Kuk,2) - 80000*r(9,Kuk,2) - 90000*r(10,Kuk,2) - 100000*r(11,Kuk,2) - 110000*r(12,Kuk,2)
     
      - 120000*r(13,Kuk,2) - 130000*r(14,Kuk,2) - 140000*r(15,Kuk,2) - 150000*r(16,Kuk,2) - 160000*r(17,Kuk,2) - 170000*r(18,Kuk,2) - 180000*r(19,Kuk,2) - 190000*r(20,Kuk,2) - 200000*r(21,Kuk,2) - 210000*r(22,Kuk,2) - 220000*r(23,Kuk,2)
     
      - 230000*r(24,Kuk,2) - 240000*r(25,Kuk,2) - 250000*r(26,Kuk,2) - 260000*r(27,Kuk,2) - 270000*r(28,Kuk,2) - 280000*r(29,Kuk,2) - 290000*r(30,Kuk,2) - 300000*r(31,Kuk,2) - 310000*r(32,Kuk,2) - 320000*r(33,Kuk,2) - 330000*r(34,Kuk,2)
     
      - 340000*r(35,Kuk,2) - 350000*r(36,Kuk,2) - 360000*r(37,Kuk,2) - 370000*r(38,Kuk,2) - 380000*r(39,Kuk,2) - 390000*r(40,Kuk,2) - 400000*r(41,Kuk,2) - 410000*r(42,Kuk,2) - 420000*r(43,Kuk,2) - 430000*r(44,Kuk,2) - 440000*r(45,Kuk,2)
     
      - 450000*r(46,Kuk,2) - 460000*r(47,Kuk,2) - 470000*r(48,Kuk,2) - 480000*r(49,Kuk,2) - 490000*r(50,Kuk,2) - 500000*r(51,Kuk,2) - 510000*r(52,Kuk,2) - 520000*r(53,Kuk,2) - 530000*r(54,Kuk,2) - 540000*r(55,Kuk,2) - 550000*r(56,Kuk,2)
     
      - 560000*r(57,Kuk,2) - 570000*r(58,Kuk,2) - 580000*r(59,Kuk,2) - 590000*r(60,Kuk,2) - 600000*r(61,Kuk,2) - 610000*r(62,Kuk,2) - 620000*r(63,Kuk,2) - 630000*r(64,Kuk,2) - 640000*r(65,Kuk,2) - 650000*r(66,Kuk,2) - 660000*r(67,Kuk,2)
     
      - 670000*r(68,Kuk,2) - 680000*r(69,Kuk,2) - 690000*r(70,Kuk,2) - 700000*r(71,Kuk,2) - 710000*r(72,Kuk,2) - 720000*r(73,Kuk,2) - 730000*r(74,Kuk,2) - 740000*r(75,Kuk,2) - 750000*r(76,Kuk,2) - 760000*r(77,Kuk,2) - 770000*r(78,Kuk,2)
     
      - 780000*r(79,Kuk,2) - 790000*r(80,Kuk,2) - 800000*r(81,Kuk,2) - 810000*r(82,Kuk,2) - 820000*r(83,Kuk,2) - 830000*r(84,Kuk,2) - 840000*r(85,Kuk,2) - 850000*r(86,Kuk,2) - 860000*r(87,Kuk,2) - 870000*r(88,Kuk,2) - 880000*r(89,Kuk,2)
     
      - 890000*r(90,Kuk,2) - 900000*r(91,Kuk,2) - 910000*r(92,Kuk,2) - 920000*r(93,Kuk,2) - 930000*r(94,Kuk,2) - 940000*r(95,Kuk,2) - 950000*r(96,Kuk,2) - 960000*r(97,Kuk,2) - 970000*r(98,Kuk,2) - 980000*r(99,Kuk,2) - 990000*r(100,Kuk,2)
     
      - 1000000*r(101,Kuk,2) - 1010000*r(102,Kuk,2) - 1020000*r(103,Kuk,2) - 1030000*r(104,Kuk,2) - 1040000*r(105,Kuk,2) - 1050000*r(106,Kuk,2) - 1060000*r(107,Kuk,2) + b(Kuk,2) =E= 0 ; (LHS = 0)
     
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 22:25:36 Page 30
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 416


     timber_bought  =E=  amount of timber i bought in each year

timber_bought(Kuk,3)..  - 10000*r(2,Kuk,3) - 20000*r(3,Kuk,3) - 30000*r(4,Kuk,3) - 40000*r(5,Kuk,3) - 50000*r(6,Kuk,3) - 60000*r(7,Kuk,3) - 70000*r(8,Kuk,3) - 80000*r(9,Kuk,3) - 90000*r(10,Kuk,3) - 100000*r(11,Kuk,3) - 110000*r(12,Kuk,3)
     
      - 120000*r(13,Kuk,3) - 130000*r(14,Kuk,3) - 140000*r(15,Kuk,3) - 150000*r(16,Kuk,3) - 160000*r(17,Kuk,3) - 170000*r(18,Kuk,3) - 180000*r(19,Kuk,3) - 190000*r(20,Kuk,3) - 200000*r(21,Kuk,3) - 210000*r(22,Kuk,3) - 220000*r(23,Kuk,3)
     
      - 230000*r(24,Kuk,3) - 240000*r(25,Kuk,3) - 250000*r(26,Kuk,3) - 260000*r(27,Kuk,3) - 270000*r(28,Kuk,3) - 280000*r(29,Kuk,3) - 290000*r(30,Kuk,3) - 300000*r(31,Kuk,3) - 310000*r(32,Kuk,3) - 320000*r(33,Kuk,3) - 330000*r(34,Kuk,3)
     
      - 340000*r(35,Kuk,3) - 350000*r(36,Kuk,3) - 360000*r(37,Kuk,3) - 370000*r(38,Kuk,3) - 380000*r(39,Kuk,3) - 390000*r(40,Kuk,3) - 400000*r(41,Kuk,3) - 410000*r(42,Kuk,3) - 420000*r(43,Kuk,3) - 430000*r(44,Kuk,3) - 440000*r(45,Kuk,3)
     
      - 450000*r(46,Kuk,3) - 460000*r(47,Kuk,3) - 470000*r(48,Kuk,3) - 480000*r(49,Kuk,3) - 490000*r(50,Kuk,3) - 500000*r(51,Kuk,3) - 510000*r(52,Kuk,3) - 520000*r(53,Kuk,3) - 530000*r(54,Kuk,3) - 540000*r(55,Kuk,3) - 550000*r(56,Kuk,3)
     
      - 560000*r(57,Kuk,3) - 570000*r(58,Kuk,3) - 580000*r(59,Kuk,3) - 590000*r(60,Kuk,3) - 600000*r(61,Kuk,3) - 610000*r(62,Kuk,3) - 620000*r(63,Kuk,3) - 630000*r(64,Kuk,3) - 640000*r(65,Kuk,3) - 650000*r(66,Kuk,3) - 660000*r(67,Kuk,3)
     
      - 670000*r(68,Kuk,3) - 680000*r(69,Kuk,3) - 690000*r(70,Kuk,3) - 700000*r(71,Kuk,3) - 710000*r(72,Kuk,3) - 720000*r(73,Kuk,3) - 730000*r(74,Kuk,3) - 740000*r(75,Kuk,3) - 750000*r(76,Kuk,3) - 760000*r(77,Kuk,3) - 770000*r(78,Kuk,3)
     
      - 780000*r(79,Kuk,3) - 790000*r(80,Kuk,3) - 800000*r(81,Kuk,3) - 810000*r(82,Kuk,3) - 820000*r(83,Kuk,3) - 830000*r(84,Kuk,3) - 840000*r(85,Kuk,3) - 850000*r(86,Kuk,3) - 860000*r(87,Kuk,3) - 870000*r(88,Kuk,3) - 880000*r(89,Kuk,3)
     
      - 890000*r(90,Kuk,3) - 900000*r(91,Kuk,3) - 910000*r(92,Kuk,3) - 920000*r(93,Kuk,3) - 930000*r(94,Kuk,3) - 940000*r(95,Kuk,3) - 950000*r(96,Kuk,3) - 960000*r(97,Kuk,3) - 970000*r(98,Kuk,3) - 980000*r(99,Kuk,3) - 990000*r(100,Kuk,3)
     
      - 1000000*r(101,Kuk,3) - 1010000*r(102,Kuk,3) - 1020000*r(103,Kuk,3) - 1030000*r(104,Kuk,3) - 1040000*r(105,Kuk,3) - 1050000*r(106,Kuk,3) - 1060000*r(107,Kuk,3) + b(Kuk,3) =E= 0 ; (LHS = 0)
     
timber_bought(Kok,1)..  - 10000*r(2,Kok,1) - 20000*r(3,Kok,1) - 30000*r(4,Kok,1) - 40000*r(5,Kok,1) - 50000*r(6,Kok,1) - 60000*r(7,Kok,1) - 70000*r(8,Kok,1) - 80000*r(9,Kok,1) - 90000*r(10,Kok,1) - 100000*r(11,Kok,1) - 110000*r(12,Kok,1)
     
      - 120000*r(13,Kok,1) - 130000*r(14,Kok,1) - 140000*r(15,Kok,1) - 150000*r(16,Kok,1) - 160000*r(17,Kok,1) - 170000*r(18,Kok,1) - 180000*r(19,Kok,1) - 190000*r(20,Kok,1) - 200000*r(21,Kok,1) - 210000*r(22,Kok,1) - 220000*r(23,Kok,1)
     
      - 230000*r(24,Kok,1) - 240000*r(25,Kok,1) - 250000*r(26,Kok,1) - 260000*r(27,Kok,1) - 270000*r(28,Kok,1) - 280000*r(29,Kok,1) - 290000*r(30,Kok,1) - 300000*r(31,Kok,1) - 310000*r(32,Kok,1) - 320000*r(33,Kok,1) - 330000*r(34,Kok,1)
     
      - 340000*r(35,Kok,1) - 350000*r(36,Kok,1) - 360000*r(37,Kok,1) - 370000*r(38,Kok,1) - 380000*r(39,Kok,1) - 390000*r(40,Kok,1) - 400000*r(41,Kok,1) - 410000*r(42,Kok,1) - 420000*r(43,Kok,1) - 430000*r(44,Kok,1) - 440000*r(45,Kok,1)
     
      - 450000*r(46,Kok,1) - 460000*r(47,Kok,1) - 470000*r(48,Kok,1) - 480000*r(49,Kok,1) - 490000*r(50,Kok,1) - 500000*r(51,Kok,1) - 510000*r(52,Kok,1) - 520000*r(53,Kok,1) - 530000*r(54,Kok,1) - 540000*r(55,Kok,1) - 550000*r(56,Kok,1)
     
      - 560000*r(57,Kok,1) - 570000*r(58,Kok,1) - 580000*r(59,Kok,1) - 590000*r(60,Kok,1) - 600000*r(61,Kok,1) - 610000*r(62,Kok,1) - 620000*r(63,Kok,1) - 630000*r(64,Kok,1) - 640000*r(65,Kok,1) - 650000*r(66,Kok,1) - 660000*r(67,Kok,1)
     
      - 670000*r(68,Kok,1) - 680000*r(69,Kok,1) - 690000*r(70,Kok,1) - 700000*r(71,Kok,1) - 710000*r(72,Kok,1) - 720000*r(73,Kok,1) - 730000*r(74,Kok,1) - 740000*r(75,Kok,1) - 750000*r(76,Kok,1) - 760000*r(77,Kok,1) - 770000*r(78,Kok,1)
     
      - 780000*r(79,Kok,1) - 790000*r(80,Kok,1) - 800000*r(81,Kok,1) - 810000*r(82,Kok,1) - 820000*r(83,Kok,1) - 830000*r(84,Kok,1) - 840000*r(85,Kok,1) - 850000*r(86,Kok,1) - 860000*r(87,Kok,1) - 870000*r(88,Kok,1) - 880000*r(89,Kok,1)
     
      - 890000*r(90,Kok,1) - 900000*r(91,Kok,1) - 910000*r(92,Kok,1) - 920000*r(93,Kok,1) - 930000*r(94,Kok,1) - 940000*r(95,Kok,1) - 950000*r(96,Kok,1) - 960000*r(97,Kok,1) - 970000*r(98,Kok,1) - 980000*r(99,Kok,1) - 990000*r(100,Kok,1)
     
      - 1000000*r(101,Kok,1) - 1010000*r(102,Kok,1) - 1020000*r(103,Kok,1) - 1030000*r(104,Kok,1) - 1040000*r(105,Kok,1) - 1050000*r(106,Kok,1) - 1060000*r(107,Kok,1) + b(Kok,1) =E= 0 ; (LHS = 0)
     
timber_bought(Kok,2)..  - 10000*r(2,Kok,2) - 20000*r(3,Kok,2) - 30000*r(4,Kok,2) - 40000*r(5,Kok,2) - 50000*r(6,Kok,2) - 60000*r(7,Kok,2) - 70000*r(8,Kok,2) - 80000*r(9,Kok,2) - 90000*r(10,Kok,2) - 100000*r(11,Kok,2) - 110000*r(12,Kok,2)
     
      - 120000*r(13,Kok,2) - 130000*r(14,Kok,2) - 140000*r(15,Kok,2) - 150000*r(16,Kok,2) - 160000*r(17,Kok,2) - 170000*r(18,Kok,2) - 180000*r(19,Kok,2) - 190000*r(20,Kok,2) - 200000*r(21,Kok,2) - 210000*r(22,Kok,2) - 220000*r(23,Kok,2)
     
      - 230000*r(24,Kok,2) - 240000*r(25,Kok,2) - 250000*r(26,Kok,2) - 260000*r(27,Kok,2) - 270000*r(28,Kok,2) - 280000*r(29,Kok,2) - 290000*r(30,Kok,2) - 300000*r(31,Kok,2) - 310000*r(32,Kok,2) - 320000*r(33,Kok,2) - 330000*r(34,Kok,2)
     
      - 340000*r(35,Kok,2) - 350000*r(36,Kok,2) - 360000*r(37,Kok,2) - 370000*r(38,Kok,2) - 380000*r(39,Kok,2) - 390000*r(40,Kok,2) - 400000*r(41,Kok,2) - 410000*r(42,Kok,2) - 420000*r(43,Kok,2) - 430000*r(44,Kok,2) - 440000*r(45,Kok,2)
     
      - 450000*r(46,Kok,2) - 460000*r(47,Kok,2) - 470000*r(48,Kok,2) - 480000*r(49,Kok,2) - 490000*r(50,Kok,2) - 500000*r(51,Kok,2) - 510000*r(52,Kok,2) - 520000*r(53,Kok,2) - 530000*r(54,Kok,2) - 540000*r(55,Kok,2) - 550000*r(56,Kok,2)
     
      - 560000*r(57,Kok,2) - 570000*r(58,Kok,2) - 580000*r(59,Kok,2) - 590000*r(60,Kok,2) - 600000*r(61,Kok,2) - 610000*r(62,Kok,2) - 620000*r(63,Kok,2) - 630000*r(64,Kok,2) - 640000*r(65,Kok,2) - 650000*r(66,Kok,2) - 660000*r(67,Kok,2)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 22:25:36 Page 31
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 416


     timber_bought  =E=  amount of timber i bought in each year     
     
      - 670000*r(68,Kok,2) - 680000*r(69,Kok,2) - 690000*r(70,Kok,2) - 700000*r(71,Kok,2) - 710000*r(72,Kok,2) - 720000*r(73,Kok,2) - 730000*r(74,Kok,2) - 740000*r(75,Kok,2) - 750000*r(76,Kok,2) - 760000*r(77,Kok,2) - 770000*r(78,Kok,2)
     
      - 780000*r(79,Kok,2) - 790000*r(80,Kok,2) - 800000*r(81,Kok,2) - 810000*r(82,Kok,2) - 820000*r(83,Kok,2) - 830000*r(84,Kok,2) - 840000*r(85,Kok,2) - 850000*r(86,Kok,2) - 860000*r(87,Kok,2) - 870000*r(88,Kok,2) - 880000*r(89,Kok,2)
     
      - 890000*r(90,Kok,2) - 900000*r(91,Kok,2) - 910000*r(92,Kok,2) - 920000*r(93,Kok,2) - 930000*r(94,Kok,2) - 940000*r(95,Kok,2) - 950000*r(96,Kok,2) - 960000*r(97,Kok,2) - 970000*r(98,Kok,2) - 980000*r(99,Kok,2) - 990000*r(100,Kok,2)
     
      - 1000000*r(101,Kok,2) - 1010000*r(102,Kok,2) - 1020000*r(103,Kok,2) - 1030000*r(104,Kok,2) - 1040000*r(105,Kok,2) - 1050000*r(106,Kok,2) - 1060000*r(107,Kok,2) + b(Kok,2) =E= 0 ; (LHS = 0)
     
timber_bought(Kok,3)..  - 10000*r(2,Kok,3) - 20000*r(3,Kok,3) - 30000*r(4,Kok,3) - 40000*r(5,Kok,3) - 50000*r(6,Kok,3) - 60000*r(7,Kok,3) - 70000*r(8,Kok,3) - 80000*r(9,Kok,3) - 90000*r(10,Kok,3) - 100000*r(11,Kok,3) - 110000*r(12,Kok,3)
     
      - 120000*r(13,Kok,3) - 130000*r(14,Kok,3) - 140000*r(15,Kok,3) - 150000*r(16,Kok,3) - 160000*r(17,Kok,3) - 170000*r(18,Kok,3) - 180000*r(19,Kok,3) - 190000*r(20,Kok,3) - 200000*r(21,Kok,3) - 210000*r(22,Kok,3) - 220000*r(23,Kok,3)
     
      - 230000*r(24,Kok,3) - 240000*r(25,Kok,3) - 250000*r(26,Kok,3) - 260000*r(27,Kok,3) - 270000*r(28,Kok,3) - 280000*r(29,Kok,3) - 290000*r(30,Kok,3) - 300000*r(31,Kok,3) - 310000*r(32,Kok,3) - 320000*r(33,Kok,3) - 330000*r(34,Kok,3)
     
      - 340000*r(35,Kok,3) - 350000*r(36,Kok,3) - 360000*r(37,Kok,3) - 370000*r(38,Kok,3) - 380000*r(39,Kok,3) - 390000*r(40,Kok,3) - 400000*r(41,Kok,3) - 410000*r(42,Kok,3) - 420000*r(43,Kok,3) - 430000*r(44,Kok,3) - 440000*r(45,Kok,3)
     
      - 450000*r(46,Kok,3) - 460000*r(47,Kok,3) - 470000*r(48,Kok,3) - 480000*r(49,Kok,3) - 490000*r(50,Kok,3) - 500000*r(51,Kok,3) - 510000*r(52,Kok,3) - 520000*r(53,Kok,3) - 530000*r(54,Kok,3) - 540000*r(55,Kok,3) - 550000*r(56,Kok,3)
     
      - 560000*r(57,Kok,3) - 570000*r(58,Kok,3) - 580000*r(59,Kok,3) - 590000*r(60,Kok,3) - 600000*r(61,Kok,3) - 610000*r(62,Kok,3) - 620000*r(63,Kok,3) - 630000*r(64,Kok,3) - 640000*r(65,Kok,3) - 650000*r(66,Kok,3) - 660000*r(67,Kok,3)
     
      - 670000*r(68,Kok,3) - 680000*r(69,Kok,3) - 690000*r(70,Kok,3) - 700000*r(71,Kok,3) - 710000*r(72,Kok,3) - 720000*r(73,Kok,3) - 730000*r(74,Kok,3) - 740000*r(75,Kok,3) - 750000*r(76,Kok,3) - 760000*r(77,Kok,3) - 770000*r(78,Kok,3)
     
      - 780000*r(79,Kok,3) - 790000*r(80,Kok,3) - 800000*r(81,Kok,3) - 810000*r(82,Kok,3) - 820000*r(83,Kok,3) - 830000*r(84,Kok,3) - 840000*r(85,Kok,3) - 850000*r(86,Kok,3) - 860000*r(87,Kok,3) - 870000*r(88,Kok,3) - 880000*r(89,Kok,3)
     
      - 890000*r(90,Kok,3) - 900000*r(91,Kok,3) - 910000*r(92,Kok,3) - 920000*r(93,Kok,3) - 930000*r(94,Kok,3) - 940000*r(95,Kok,3) - 950000*r(96,Kok,3) - 960000*r(97,Kok,3) - 970000*r(98,Kok,3) - 980000*r(99,Kok,3) - 990000*r(100,Kok,3)
     
      - 1000000*r(101,Kok,3) - 1010000*r(102,Kok,3) - 1020000*r(103,Kok,3) - 1030000*r(104,Kok,3) - 1040000*r(105,Kok,3) - 1050000*r(106,Kok,3) - 1060000*r(107,Kok,3) + b(Kok,3) =E= 0 ; (LHS = 0)
     

---- Barges_buy  =E=  ensure we only pick one value n for barges for each timber i

Barges_buy(Mat,1)..  r(1,Mat,1) + r(2,Mat,1) + r(3,Mat,1) + r(4,Mat,1) + r(5,Mat,1) + r(6,Mat,1) + r(7,Mat,1) + r(8,Mat,1) + r(9,Mat,1) + r(10,Mat,1) + r(11,Mat,1) + r(12,Mat,1) + r(13,Mat,1) + r(14,Mat,1) + r(15,Mat,1) + r(16,Mat,1) + r(17,Mat,1)
     
      + r(18,Mat,1) + r(19,Mat,1) + r(20,Mat,1) + r(21,Mat,1) + r(22,Mat,1) + r(23,Mat,1) + r(24,Mat,1) + r(25,Mat,1) + r(26,Mat,1) + r(27,Mat,1) + r(28,Mat,1) + r(29,Mat,1) + r(30,Mat,1) + r(31,Mat,1) + r(32,Mat,1) + r(33,Mat,1) + r(34,Mat,1)
     
      + r(35,Mat,1) + r(36,Mat,1) + r(37,Mat,1) + r(38,Mat,1) + r(39,Mat,1) + r(40,Mat,1) + r(41,Mat,1) + r(42,Mat,1) + r(43,Mat,1) + r(44,Mat,1) + r(45,Mat,1) + r(46,Mat,1) + r(47,Mat,1) + r(48,Mat,1) + r(49,Mat,1) + r(50,Mat,1) + r(51,Mat,1)
     
      + r(52,Mat,1) + r(53,Mat,1) + r(54,Mat,1) + r(55,Mat,1) + r(56,Mat,1) + r(57,Mat,1) + r(58,Mat,1) + r(59,Mat,1) + r(60,Mat,1) + r(61,Mat,1) + r(62,Mat,1) + r(63,Mat,1) + r(64,Mat,1) + r(65,Mat,1) + r(66,Mat,1) + r(67,Mat,1) + r(68,Mat,1)
     
      + r(69,Mat,1) + r(70,Mat,1) + r(71,Mat,1) + r(72,Mat,1) + r(73,Mat,1) + r(74,Mat,1) + r(75,Mat,1) + r(76,Mat,1) + r(77,Mat,1) + r(78,Mat,1) + r(79,Mat,1) + r(80,Mat,1) + r(81,Mat,1) + r(82,Mat,1) + r(83,Mat,1) + r(84,Mat,1) + r(85,Mat,1)
     
      + r(86,Mat,1) + r(87,Mat,1) + r(88,Mat,1) + r(89,Mat,1) + r(90,Mat,1) + r(91,Mat,1) + r(92,Mat,1) + r(93,Mat,1) + r(94,Mat,1) + r(95,Mat,1) + r(96,Mat,1) + r(97,Mat,1) + r(98,Mat,1) + r(99,Mat,1) + r(100,Mat,1) + r(101,Mat,1) + r(102,Mat,1)
     
      + r(103,Mat,1) + r(104,Mat,1) + r(105,Mat,1) + r(106,Mat,1) + r(107,Mat,1) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_buy(Mat,2)..  r(1,Mat,2) + r(2,Mat,2) + r(3,Mat,2) + r(4,Mat,2) + r(5,Mat,2) + r(6,Mat,2) + r(7,Mat,2) + r(8,Mat,2) + r(9,Mat,2) + r(10,Mat,2) + r(11,Mat,2) + r(12,Mat,2) + r(13,Mat,2) + r(14,Mat,2) + r(15,Mat,2) + r(16,Mat,2) + r(17,Mat,2)
     
      + r(18,Mat,2) + r(19,Mat,2) + r(20,Mat,2) + r(21,Mat,2) + r(22,Mat,2) + r(23,Mat,2) + r(24,Mat,2) + r(25,Mat,2) + r(26,Mat,2) + r(27,Mat,2) + r(28,Mat,2) + r(29,Mat,2) + r(30,Mat,2) + r(31,Mat,2) + r(32,Mat,2) + r(33,Mat,2) + r(34,Mat,2)
     
      + r(35,Mat,2) + r(36,Mat,2) + r(37,Mat,2) + r(38,Mat,2) + r(39,Mat,2) + r(40,Mat,2) + r(41,Mat,2) + r(42,Mat,2) + r(43,Mat,2) + r(44,Mat,2) + r(45,Mat,2) + r(46,Mat,2) + r(47,Mat,2) + r(48,Mat,2) + r(49,Mat,2) + r(50,Mat,2) + r(51,Mat,2)
     
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 22:25:36 Page 32
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 416


     Barges_buy  =E=  ensure we only pick one value n for barges for each timber i     
     
      + r(52,Mat,2) + r(53,Mat,2) + r(54,Mat,2) + r(55,Mat,2) + r(56,Mat,2) + r(57,Mat,2) + r(58,Mat,2) + r(59,Mat,2) + r(60,Mat,2) + r(61,Mat,2) + r(62,Mat,2) + r(63,Mat,2) + r(64,Mat,2) + r(65,Mat,2) + r(66,Mat,2) + r(67,Mat,2) + r(68,Mat,2)
     
      + r(69,Mat,2) + r(70,Mat,2) + r(71,Mat,2) + r(72,Mat,2) + r(73,Mat,2) + r(74,Mat,2) + r(75,Mat,2) + r(76,Mat,2) + r(77,Mat,2) + r(78,Mat,2) + r(79,Mat,2) + r(80,Mat,2) + r(81,Mat,2) + r(82,Mat,2) + r(83,Mat,2) + r(84,Mat,2) + r(85,Mat,2)
     
      + r(86,Mat,2) + r(87,Mat,2) + r(88,Mat,2) + r(89,Mat,2) + r(90,Mat,2) + r(91,Mat,2) + r(92,Mat,2) + r(93,Mat,2) + r(94,Mat,2) + r(95,Mat,2) + r(96,Mat,2) + r(97,Mat,2) + r(98,Mat,2) + r(99,Mat,2) + r(100,Mat,2) + r(101,Mat,2) + r(102,Mat,2)
     
      + r(103,Mat,2) + r(104,Mat,2) + r(105,Mat,2) + r(106,Mat,2) + r(107,Mat,2) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_buy(Mat,3)..  r(1,Mat,3) + r(2,Mat,3) + r(3,Mat,3) + r(4,Mat,3) + r(5,Mat,3) + r(6,Mat,3) + r(7,Mat,3) + r(8,Mat,3) + r(9,Mat,3) + r(10,Mat,3) + r(11,Mat,3) + r(12,Mat,3) + r(13,Mat,3) + r(14,Mat,3) + r(15,Mat,3) + r(16,Mat,3) + r(17,Mat,3)
     
      + r(18,Mat,3) + r(19,Mat,3) + r(20,Mat,3) + r(21,Mat,3) + r(22,Mat,3) + r(23,Mat,3) + r(24,Mat,3) + r(25,Mat,3) + r(26,Mat,3) + r(27,Mat,3) + r(28,Mat,3) + r(29,Mat,3) + r(30,Mat,3) + r(31,Mat,3) + r(32,Mat,3) + r(33,Mat,3) + r(34,Mat,3)
     
      + r(35,Mat,3) + r(36,Mat,3) + r(37,Mat,3) + r(38,Mat,3) + r(39,Mat,3) + r(40,Mat,3) + r(41,Mat,3) + r(42,Mat,3) + r(43,Mat,3) + r(44,Mat,3) + r(45,Mat,3) + r(46,Mat,3) + r(47,Mat,3) + r(48,Mat,3) + r(49,Mat,3) + r(50,Mat,3) + r(51,Mat,3)
     
      + r(52,Mat,3) + r(53,Mat,3) + r(54,Mat,3) + r(55,Mat,3) + r(56,Mat,3) + r(57,Mat,3) + r(58,Mat,3) + r(59,Mat,3) + r(60,Mat,3) + r(61,Mat,3) + r(62,Mat,3) + r(63,Mat,3) + r(64,Mat,3) + r(65,Mat,3) + r(66,Mat,3) + r(67,Mat,3) + r(68,Mat,3)
     
      + r(69,Mat,3) + r(70,Mat,3) + r(71,Mat,3) + r(72,Mat,3) + r(73,Mat,3) + r(74,Mat,3) + r(75,Mat,3) + r(76,Mat,3) + r(77,Mat,3) + r(78,Mat,3) + r(79,Mat,3) + r(80,Mat,3) + r(81,Mat,3) + r(82,Mat,3) + r(83,Mat,3) + r(84,Mat,3) + r(85,Mat,3)
     
      + r(86,Mat,3) + r(87,Mat,3) + r(88,Mat,3) + r(89,Mat,3) + r(90,Mat,3) + r(91,Mat,3) + r(92,Mat,3) + r(93,Mat,3) + r(94,Mat,3) + r(95,Mat,3) + r(96,Mat,3) + r(97,Mat,3) + r(98,Mat,3) + r(99,Mat,3) + r(100,Mat,3) + r(101,Mat,3) + r(102,Mat,3)
     
      + r(103,Mat,3) + r(104,Mat,3) + r(105,Mat,3) + r(106,Mat,3) + r(107,Mat,3) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_buy(Kut,1)..  r(1,Kut,1) + r(2,Kut,1) + r(3,Kut,1) + r(4,Kut,1) + r(5,Kut,1) + r(6,Kut,1) + r(7,Kut,1) + r(8,Kut,1) + r(9,Kut,1) + r(10,Kut,1) + r(11,Kut,1) + r(12,Kut,1) + r(13,Kut,1) + r(14,Kut,1) + r(15,Kut,1) + r(16,Kut,1) + r(17,Kut,1)
     
      + r(18,Kut,1) + r(19,Kut,1) + r(20,Kut,1) + r(21,Kut,1) + r(22,Kut,1) + r(23,Kut,1) + r(24,Kut,1) + r(25,Kut,1) + r(26,Kut,1) + r(27,Kut,1) + r(28,Kut,1) + r(29,Kut,1) + r(30,Kut,1) + r(31,Kut,1) + r(32,Kut,1) + r(33,Kut,1) + r(34,Kut,1)
     
      + r(35,Kut,1) + r(36,Kut,1) + r(37,Kut,1) + r(38,Kut,1) + r(39,Kut,1) + r(40,Kut,1) + r(41,Kut,1) + r(42,Kut,1) + r(43,Kut,1) + r(44,Kut,1) + r(45,Kut,1) + r(46,Kut,1) + r(47,Kut,1) + r(48,Kut,1) + r(49,Kut,1) + r(50,Kut,1) + r(51,Kut,1)
     
      + r(52,Kut,1) + r(53,Kut,1) + r(54,Kut,1) + r(55,Kut,1) + r(56,Kut,1) + r(57,Kut,1) + r(58,Kut,1) + r(59,Kut,1) + r(60,Kut,1) + r(61,Kut,1) + r(62,Kut,1) + r(63,Kut,1) + r(64,Kut,1) + r(65,Kut,1) + r(66,Kut,1) + r(67,Kut,1) + r(68,Kut,1)
     
      + r(69,Kut,1) + r(70,Kut,1) + r(71,Kut,1) + r(72,Kut,1) + r(73,Kut,1) + r(74,Kut,1) + r(75,Kut,1) + r(76,Kut,1) + r(77,Kut,1) + r(78,Kut,1) + r(79,Kut,1) + r(80,Kut,1) + r(81,Kut,1) + r(82,Kut,1) + r(83,Kut,1) + r(84,Kut,1) + r(85,Kut,1)
     
      + r(86,Kut,1) + r(87,Kut,1) + r(88,Kut,1) + r(89,Kut,1) + r(90,Kut,1) + r(91,Kut,1) + r(92,Kut,1) + r(93,Kut,1) + r(94,Kut,1) + r(95,Kut,1) + r(96,Kut,1) + r(97,Kut,1) + r(98,Kut,1) + r(99,Kut,1) + r(100,Kut,1) + r(101,Kut,1) + r(102,Kut,1)
     
      + r(103,Kut,1) + r(104,Kut,1) + r(105,Kut,1) + r(106,Kut,1) + r(107,Kut,1) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_buy(Kut,2)..  r(1,Kut,2) + r(2,Kut,2) + r(3,Kut,2) + r(4,Kut,2) + r(5,Kut,2) + r(6,Kut,2) + r(7,Kut,2) + r(8,Kut,2) + r(9,Kut,2) + r(10,Kut,2) + r(11,Kut,2) + r(12,Kut,2) + r(13,Kut,2) + r(14,Kut,2) + r(15,Kut,2) + r(16,Kut,2) + r(17,Kut,2)
     
      + r(18,Kut,2) + r(19,Kut,2) + r(20,Kut,2) + r(21,Kut,2) + r(22,Kut,2) + r(23,Kut,2) + r(24,Kut,2) + r(25,Kut,2) + r(26,Kut,2) + r(27,Kut,2) + r(28,Kut,2) + r(29,Kut,2) + r(30,Kut,2) + r(31,Kut,2) + r(32,Kut,2) + r(33,Kut,2) + r(34,Kut,2)
     
      + r(35,Kut,2) + r(36,Kut,2) + r(37,Kut,2) + r(38,Kut,2) + r(39,Kut,2) + r(40,Kut,2) + r(41,Kut,2) + r(42,Kut,2) + r(43,Kut,2) + r(44,Kut,2) + r(45,Kut,2) + r(46,Kut,2) + r(47,Kut,2) + r(48,Kut,2) + r(49,Kut,2) + r(50,Kut,2) + r(51,Kut,2)
     
      + r(52,Kut,2) + r(53,Kut,2) + r(54,Kut,2) + r(55,Kut,2) + r(56,Kut,2) + r(57,Kut,2) + r(58,Kut,2) + r(59,Kut,2) + r(60,Kut,2) + r(61,Kut,2) + r(62,Kut,2) + r(63,Kut,2) + r(64,Kut,2) + r(65,Kut,2) + r(66,Kut,2) + r(67,Kut,2) + r(68,Kut,2)
     
      + r(69,Kut,2) + r(70,Kut,2) + r(71,Kut,2) + r(72,Kut,2) + r(73,Kut,2) + r(74,Kut,2) + r(75,Kut,2) + r(76,Kut,2) + r(77,Kut,2) + r(78,Kut,2) + r(79,Kut,2) + r(80,Kut,2) + r(81,Kut,2) + r(82,Kut,2) + r(83,Kut,2) + r(84,Kut,2) + r(85,Kut,2)
     
      + r(86,Kut,2) + r(87,Kut,2) + r(88,Kut,2) + r(89,Kut,2) + r(90,Kut,2) + r(91,Kut,2) + r(92,Kut,2) + r(93,Kut,2) + r(94,Kut,2) + r(95,Kut,2) + r(96,Kut,2) + r(97,Kut,2) + r(98,Kut,2) + r(99,Kut,2) + r(100,Kut,2) + r(101,Kut,2) + r(102,Kut,2)
     
      + r(103,Kut,2) + r(104,Kut,2) + r(105,Kut,2) + r(106,Kut,2) + r(107,Kut,2) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 22:25:36 Page 33
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 416


     Barges_buy  =E=  ensure we only pick one value n for barges for each timber i

Barges_buy(Kut,3)..  r(1,Kut,3) + r(2,Kut,3) + r(3,Kut,3) + r(4,Kut,3) + r(5,Kut,3) + r(6,Kut,3) + r(7,Kut,3) + r(8,Kut,3) + r(9,Kut,3) + r(10,Kut,3) + r(11,Kut,3) + r(12,Kut,3) + r(13,Kut,3) + r(14,Kut,3) + r(15,Kut,3) + r(16,Kut,3) + r(17,Kut,3)
     
      + r(18,Kut,3) + r(19,Kut,3) + r(20,Kut,3) + r(21,Kut,3) + r(22,Kut,3) + r(23,Kut,3) + r(24,Kut,3) + r(25,Kut,3) + r(26,Kut,3) + r(27,Kut,3) + r(28,Kut,3) + r(29,Kut,3) + r(30,Kut,3) + r(31,Kut,3) + r(32,Kut,3) + r(33,Kut,3) + r(34,Kut,3)
     
      + r(35,Kut,3) + r(36,Kut,3) + r(37,Kut,3) + r(38,Kut,3) + r(39,Kut,3) + r(40,Kut,3) + r(41,Kut,3) + r(42,Kut,3) + r(43,Kut,3) + r(44,Kut,3) + r(45,Kut,3) + r(46,Kut,3) + r(47,Kut,3) + r(48,Kut,3) + r(49,Kut,3) + r(50,Kut,3) + r(51,Kut,3)
     
      + r(52,Kut,3) + r(53,Kut,3) + r(54,Kut,3) + r(55,Kut,3) + r(56,Kut,3) + r(57,Kut,3) + r(58,Kut,3) + r(59,Kut,3) + r(60,Kut,3) + r(61,Kut,3) + r(62,Kut,3) + r(63,Kut,3) + r(64,Kut,3) + r(65,Kut,3) + r(66,Kut,3) + r(67,Kut,3) + r(68,Kut,3)
     
      + r(69,Kut,3) + r(70,Kut,3) + r(71,Kut,3) + r(72,Kut,3) + r(73,Kut,3) + r(74,Kut,3) + r(75,Kut,3) + r(76,Kut,3) + r(77,Kut,3) + r(78,Kut,3) + r(79,Kut,3) + r(80,Kut,3) + r(81,Kut,3) + r(82,Kut,3) + r(83,Kut,3) + r(84,Kut,3) + r(85,Kut,3)
     
      + r(86,Kut,3) + r(87,Kut,3) + r(88,Kut,3) + r(89,Kut,3) + r(90,Kut,3) + r(91,Kut,3) + r(92,Kut,3) + r(93,Kut,3) + r(94,Kut,3) + r(95,Kut,3) + r(96,Kut,3) + r(97,Kut,3) + r(98,Kut,3) + r(99,Kut,3) + r(100,Kut,3) + r(101,Kut,3) + r(102,Kut,3)
     
      + r(103,Kut,3) + r(104,Kut,3) + r(105,Kut,3) + r(106,Kut,3) + r(107,Kut,3) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_buy(Kot,1)..  r(1,Kot,1) + r(2,Kot,1) + r(3,Kot,1) + r(4,Kot,1) + r(5,Kot,1) + r(6,Kot,1) + r(7,Kot,1) + r(8,Kot,1) + r(9,Kot,1) + r(10,Kot,1) + r(11,Kot,1) + r(12,Kot,1) + r(13,Kot,1) + r(14,Kot,1) + r(15,Kot,1) + r(16,Kot,1) + r(17,Kot,1)
     
      + r(18,Kot,1) + r(19,Kot,1) + r(20,Kot,1) + r(21,Kot,1) + r(22,Kot,1) + r(23,Kot,1) + r(24,Kot,1) + r(25,Kot,1) + r(26,Kot,1) + r(27,Kot,1) + r(28,Kot,1) + r(29,Kot,1) + r(30,Kot,1) + r(31,Kot,1) + r(32,Kot,1) + r(33,Kot,1) + r(34,Kot,1)
     
      + r(35,Kot,1) + r(36,Kot,1) + r(37,Kot,1) + r(38,Kot,1) + r(39,Kot,1) + r(40,Kot,1) + r(41,Kot,1) + r(42,Kot,1) + r(43,Kot,1) + r(44,Kot,1) + r(45,Kot,1) + r(46,Kot,1) + r(47,Kot,1) + r(48,Kot,1) + r(49,Kot,1) + r(50,Kot,1) + r(51,Kot,1)
     
      + r(52,Kot,1) + r(53,Kot,1) + r(54,Kot,1) + r(55,Kot,1) + r(56,Kot,1) + r(57,Kot,1) + r(58,Kot,1) + r(59,Kot,1) + r(60,Kot,1) + r(61,Kot,1) + r(62,Kot,1) + r(63,Kot,1) + r(64,Kot,1) + r(65,Kot,1) + r(66,Kot,1) + r(67,Kot,1) + r(68,Kot,1)
     
      + r(69,Kot,1) + r(70,Kot,1) + r(71,Kot,1) + r(72,Kot,1) + r(73,Kot,1) + r(74,Kot,1) + r(75,Kot,1) + r(76,Kot,1) + r(77,Kot,1) + r(78,Kot,1) + r(79,Kot,1) + r(80,Kot,1) + r(81,Kot,1) + r(82,Kot,1) + r(83,Kot,1) + r(84,Kot,1) + r(85,Kot,1)
     
      + r(86,Kot,1) + r(87,Kot,1) + r(88,Kot,1) + r(89,Kot,1) + r(90,Kot,1) + r(91,Kot,1) + r(92,Kot,1) + r(93,Kot,1) + r(94,Kot,1) + r(95,Kot,1) + r(96,Kot,1) + r(97,Kot,1) + r(98,Kot,1) + r(99,Kot,1) + r(100,Kot,1) + r(101,Kot,1) + r(102,Kot,1)
     
      + r(103,Kot,1) + r(104,Kot,1) + r(105,Kot,1) + r(106,Kot,1) + r(107,Kot,1) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_buy(Kot,2)..  r(1,Kot,2) + r(2,Kot,2) + r(3,Kot,2) + r(4,Kot,2) + r(5,Kot,2) + r(6,Kot,2) + r(7,Kot,2) + r(8,Kot,2) + r(9,Kot,2) + r(10,Kot,2) + r(11,Kot,2) + r(12,Kot,2) + r(13,Kot,2) + r(14,Kot,2) + r(15,Kot,2) + r(16,Kot,2) + r(17,Kot,2)
     
      + r(18,Kot,2) + r(19,Kot,2) + r(20,Kot,2) + r(21,Kot,2) + r(22,Kot,2) + r(23,Kot,2) + r(24,Kot,2) + r(25,Kot,2) + r(26,Kot,2) + r(27,Kot,2) + r(28,Kot,2) + r(29,Kot,2) + r(30,Kot,2) + r(31,Kot,2) + r(32,Kot,2) + r(33,Kot,2) + r(34,Kot,2)
     
      + r(35,Kot,2) + r(36,Kot,2) + r(37,Kot,2) + r(38,Kot,2) + r(39,Kot,2) + r(40,Kot,2) + r(41,Kot,2) + r(42,Kot,2) + r(43,Kot,2) + r(44,Kot,2) + r(45,Kot,2) + r(46,Kot,2) + r(47,Kot,2) + r(48,Kot,2) + r(49,Kot,2) + r(50,Kot,2) + r(51,Kot,2)
     
      + r(52,Kot,2) + r(53,Kot,2) + r(54,Kot,2) + r(55,Kot,2) + r(56,Kot,2) + r(57,Kot,2) + r(58,Kot,2) + r(59,Kot,2) + r(60,Kot,2) + r(61,Kot,2) + r(62,Kot,2) + r(63,Kot,2) + r(64,Kot,2) + r(65,Kot,2) + r(66,Kot,2) + r(67,Kot,2) + r(68,Kot,2)
     
      + r(69,Kot,2) + r(70,Kot,2) + r(71,Kot,2) + r(72,Kot,2) + r(73,Kot,2) + r(74,Kot,2) + r(75,Kot,2) + r(76,Kot,2) + r(77,Kot,2) + r(78,Kot,2) + r(79,Kot,2) + r(80,Kot,2) + r(81,Kot,2) + r(82,Kot,2) + r(83,Kot,2) + r(84,Kot,2) + r(85,Kot,2)
     
      + r(86,Kot,2) + r(87,Kot,2) + r(88,Kot,2) + r(89,Kot,2) + r(90,Kot,2) + r(91,Kot,2) + r(92,Kot,2) + r(93,Kot,2) + r(94,Kot,2) + r(95,Kot,2) + r(96,Kot,2) + r(97,Kot,2) + r(98,Kot,2) + r(99,Kot,2) + r(100,Kot,2) + r(101,Kot,2) + r(102,Kot,2)
     
      + r(103,Kot,2) + r(104,Kot,2) + r(105,Kot,2) + r(106,Kot,2) + r(107,Kot,2) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_buy(Kot,3)..  r(1,Kot,3) + r(2,Kot,3) + r(3,Kot,3) + r(4,Kot,3) + r(5,Kot,3) + r(6,Kot,3) + r(7,Kot,3) + r(8,Kot,3) + r(9,Kot,3) + r(10,Kot,3) + r(11,Kot,3) + r(12,Kot,3) + r(13,Kot,3) + r(14,Kot,3) + r(15,Kot,3) + r(16,Kot,3) + r(17,Kot,3)
     
      + r(18,Kot,3) + r(19,Kot,3) + r(20,Kot,3) + r(21,Kot,3) + r(22,Kot,3) + r(23,Kot,3) + r(24,Kot,3) + r(25,Kot,3) + r(26,Kot,3) + r(27,Kot,3) + r(28,Kot,3) + r(29,Kot,3) + r(30,Kot,3) + r(31,Kot,3) + r(32,Kot,3) + r(33,Kot,3) + r(34,Kot,3)
     
      + r(35,Kot,3) + r(36,Kot,3) + r(37,Kot,3) + r(38,Kot,3) + r(39,Kot,3) + r(40,Kot,3) + r(41,Kot,3) + r(42,Kot,3) + r(43,Kot,3) + r(44,Kot,3) + r(45,Kot,3) + r(46,Kot,3) + r(47,Kot,3) + r(48,Kot,3) + r(49,Kot,3) + r(50,Kot,3) + r(51,Kot,3)
     
      + r(52,Kot,3) + r(53,Kot,3) + r(54,Kot,3) + r(55,Kot,3) + r(56,Kot,3) + r(57,Kot,3) + r(58,Kot,3) + r(59,Kot,3) + r(60,Kot,3) + r(61,Kot,3) + r(62,Kot,3) + r(63,Kot,3) + r(64,Kot,3) + r(65,Kot,3) + r(66,Kot,3) + r(67,Kot,3) + r(68,Kot,3)
     
      + r(69,Kot,3) + r(70,Kot,3) + r(71,Kot,3) + r(72,Kot,3) + r(73,Kot,3) + r(74,Kot,3) + r(75,Kot,3) + r(76,Kot,3) + r(77,Kot,3) + r(78,Kot,3) + r(79,Kot,3) + r(80,Kot,3) + r(81,Kot,3) + r(82,Kot,3) + r(83,Kot,3) + r(84,Kot,3) + r(85,Kot,3)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 22:25:36 Page 34
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 416


     Barges_buy  =E=  ensure we only pick one value n for barges for each timber i     
     
      + r(86,Kot,3) + r(87,Kot,3) + r(88,Kot,3) + r(89,Kot,3) + r(90,Kot,3) + r(91,Kot,3) + r(92,Kot,3) + r(93,Kot,3) + r(94,Kot,3) + r(95,Kot,3) + r(96,Kot,3) + r(97,Kot,3) + r(98,Kot,3) + r(99,Kot,3) + r(100,Kot,3) + r(101,Kot,3) + r(102,Kot,3)
     
      + r(103,Kot,3) + r(104,Kot,3) + r(105,Kot,3) + r(106,Kot,3) + r(107,Kot,3) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_buy(Mak,1)..  r(1,Mak,1) + r(2,Mak,1) + r(3,Mak,1) + r(4,Mak,1) + r(5,Mak,1) + r(6,Mak,1) + r(7,Mak,1) + r(8,Mak,1) + r(9,Mak,1) + r(10,Mak,1) + r(11,Mak,1) + r(12,Mak,1) + r(13,Mak,1) + r(14,Mak,1) + r(15,Mak,1) + r(16,Mak,1) + r(17,Mak,1)
     
      + r(18,Mak,1) + r(19,Mak,1) + r(20,Mak,1) + r(21,Mak,1) + r(22,Mak,1) + r(23,Mak,1) + r(24,Mak,1) + r(25,Mak,1) + r(26,Mak,1) + r(27,Mak,1) + r(28,Mak,1) + r(29,Mak,1) + r(30,Mak,1) + r(31,Mak,1) + r(32,Mak,1) + r(33,Mak,1) + r(34,Mak,1)
     
      + r(35,Mak,1) + r(36,Mak,1) + r(37,Mak,1) + r(38,Mak,1) + r(39,Mak,1) + r(40,Mak,1) + r(41,Mak,1) + r(42,Mak,1) + r(43,Mak,1) + r(44,Mak,1) + r(45,Mak,1) + r(46,Mak,1) + r(47,Mak,1) + r(48,Mak,1) + r(49,Mak,1) + r(50,Mak,1) + r(51,Mak,1)
     
      + r(52,Mak,1) + r(53,Mak,1) + r(54,Mak,1) + r(55,Mak,1) + r(56,Mak,1) + r(57,Mak,1) + r(58,Mak,1) + r(59,Mak,1) + r(60,Mak,1) + r(61,Mak,1) + r(62,Mak,1) + r(63,Mak,1) + r(64,Mak,1) + r(65,Mak,1) + r(66,Mak,1) + r(67,Mak,1) + r(68,Mak,1)
     
      + r(69,Mak,1) + r(70,Mak,1) + r(71,Mak,1) + r(72,Mak,1) + r(73,Mak,1) + r(74,Mak,1) + r(75,Mak,1) + r(76,Mak,1) + r(77,Mak,1) + r(78,Mak,1) + r(79,Mak,1) + r(80,Mak,1) + r(81,Mak,1) + r(82,Mak,1) + r(83,Mak,1) + r(84,Mak,1) + r(85,Mak,1)
     
      + r(86,Mak,1) + r(87,Mak,1) + r(88,Mak,1) + r(89,Mak,1) + r(90,Mak,1) + r(91,Mak,1) + r(92,Mak,1) + r(93,Mak,1) + r(94,Mak,1) + r(95,Mak,1) + r(96,Mak,1) + r(97,Mak,1) + r(98,Mak,1) + r(99,Mak,1) + r(100,Mak,1) + r(101,Mak,1) + r(102,Mak,1)
     
      + r(103,Mak,1) + r(104,Mak,1) + r(105,Mak,1) + r(106,Mak,1) + r(107,Mak,1) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_buy(Mak,2)..  r(1,Mak,2) + r(2,Mak,2) + r(3,Mak,2) + r(4,Mak,2) + r(5,Mak,2) + r(6,Mak,2) + r(7,Mak,2) + r(8,Mak,2) + r(9,Mak,2) + r(10,Mak,2) + r(11,Mak,2) + r(12,Mak,2) + r(13,Mak,2) + r(14,Mak,2) + r(15,Mak,2) + r(16,Mak,2) + r(17,Mak,2)
     
      + r(18,Mak,2) + r(19,Mak,2) + r(20,Mak,2) + r(21,Mak,2) + r(22,Mak,2) + r(23,Mak,2) + r(24,Mak,2) + r(25,Mak,2) + r(26,Mak,2) + r(27,Mak,2) + r(28,Mak,2) + r(29,Mak,2) + r(30,Mak,2) + r(31,Mak,2) + r(32,Mak,2) + r(33,Mak,2) + r(34,Mak,2)
     
      + r(35,Mak,2) + r(36,Mak,2) + r(37,Mak,2) + r(38,Mak,2) + r(39,Mak,2) + r(40,Mak,2) + r(41,Mak,2) + r(42,Mak,2) + r(43,Mak,2) + r(44,Mak,2) + r(45,Mak,2) + r(46,Mak,2) + r(47,Mak,2) + r(48,Mak,2) + r(49,Mak,2) + r(50,Mak,2) + r(51,Mak,2)
     
      + r(52,Mak,2) + r(53,Mak,2) + r(54,Mak,2) + r(55,Mak,2) + r(56,Mak,2) + r(57,Mak,2) + r(58,Mak,2) + r(59,Mak,2) + r(60,Mak,2) + r(61,Mak,2) + r(62,Mak,2) + r(63,Mak,2) + r(64,Mak,2) + r(65,Mak,2) + r(66,Mak,2) + r(67,Mak,2) + r(68,Mak,2)
     
      + r(69,Mak,2) + r(70,Mak,2) + r(71,Mak,2) + r(72,Mak,2) + r(73,Mak,2) + r(74,Mak,2) + r(75,Mak,2) + r(76,Mak,2) + r(77,Mak,2) + r(78,Mak,2) + r(79,Mak,2) + r(80,Mak,2) + r(81,Mak,2) + r(82,Mak,2) + r(83,Mak,2) + r(84,Mak,2) + r(85,Mak,2)
     
      + r(86,Mak,2) + r(87,Mak,2) + r(88,Mak,2) + r(89,Mak,2) + r(90,Mak,2) + r(91,Mak,2) + r(92,Mak,2) + r(93,Mak,2) + r(94,Mak,2) + r(95,Mak,2) + r(96,Mak,2) + r(97,Mak,2) + r(98,Mak,2) + r(99,Mak,2) + r(100,Mak,2) + r(101,Mak,2) + r(102,Mak,2)
     
      + r(103,Mak,2) + r(104,Mak,2) + r(105,Mak,2) + r(106,Mak,2) + r(107,Mak,2) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_buy(Mak,3)..  r(1,Mak,3) + r(2,Mak,3) + r(3,Mak,3) + r(4,Mak,3) + r(5,Mak,3) + r(6,Mak,3) + r(7,Mak,3) + r(8,Mak,3) + r(9,Mak,3) + r(10,Mak,3) + r(11,Mak,3) + r(12,Mak,3) + r(13,Mak,3) + r(14,Mak,3) + r(15,Mak,3) + r(16,Mak,3) + r(17,Mak,3)
     
      + r(18,Mak,3) + r(19,Mak,3) + r(20,Mak,3) + r(21,Mak,3) + r(22,Mak,3) + r(23,Mak,3) + r(24,Mak,3) + r(25,Mak,3) + r(26,Mak,3) + r(27,Mak,3) + r(28,Mak,3) + r(29,Mak,3) + r(30,Mak,3) + r(31,Mak,3) + r(32,Mak,3) + r(33,Mak,3) + r(34,Mak,3)
     
      + r(35,Mak,3) + r(36,Mak,3) + r(37,Mak,3) + r(38,Mak,3) + r(39,Mak,3) + r(40,Mak,3) + r(41,Mak,3) + r(42,Mak,3) + r(43,Mak,3) + r(44,Mak,3) + r(45,Mak,3) + r(46,Mak,3) + r(47,Mak,3) + r(48,Mak,3) + r(49,Mak,3) + r(50,Mak,3) + r(51,Mak,3)
     
      + r(52,Mak,3) + r(53,Mak,3) + r(54,Mak,3) + r(55,Mak,3) + r(56,Mak,3) + r(57,Mak,3) + r(58,Mak,3) + r(59,Mak,3) + r(60,Mak,3) + r(61,Mak,3) + r(62,Mak,3) + r(63,Mak,3) + r(64,Mak,3) + r(65,Mak,3) + r(66,Mak,3) + r(67,Mak,3) + r(68,Mak,3)
     
      + r(69,Mak,3) + r(70,Mak,3) + r(71,Mak,3) + r(72,Mak,3) + r(73,Mak,3) + r(74,Mak,3) + r(75,Mak,3) + r(76,Mak,3) + r(77,Mak,3) + r(78,Mak,3) + r(79,Mak,3) + r(80,Mak,3) + r(81,Mak,3) + r(82,Mak,3) + r(83,Mak,3) + r(84,Mak,3) + r(85,Mak,3)
     
      + r(86,Mak,3) + r(87,Mak,3) + r(88,Mak,3) + r(89,Mak,3) + r(90,Mak,3) + r(91,Mak,3) + r(92,Mak,3) + r(93,Mak,3) + r(94,Mak,3) + r(95,Mak,3) + r(96,Mak,3) + r(97,Mak,3) + r(98,Mak,3) + r(99,Mak,3) + r(100,Mak,3) + r(101,Mak,3) + r(102,Mak,3)
     
      + r(103,Mak,3) + r(104,Mak,3) + r(105,Mak,3) + r(106,Mak,3) + r(107,Mak,3) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_buy(Kuk,1)..  r(1,Kuk,1) + r(2,Kuk,1) + r(3,Kuk,1) + r(4,Kuk,1) + r(5,Kuk,1) + r(6,Kuk,1) + r(7,Kuk,1) + r(8,Kuk,1) + r(9,Kuk,1) + r(10,Kuk,1) + r(11,Kuk,1) + r(12,Kuk,1) + r(13,Kuk,1) + r(14,Kuk,1) + r(15,Kuk,1) + r(16,Kuk,1) + r(17,Kuk,1)
     
      + r(18,Kuk,1) + r(19,Kuk,1) + r(20,Kuk,1) + r(21,Kuk,1) + r(22,Kuk,1) + r(23,Kuk,1) + r(24,Kuk,1) + r(25,Kuk,1) + r(26,Kuk,1) + r(27,Kuk,1) + r(28,Kuk,1) + r(29,Kuk,1) + r(30,Kuk,1) + r(31,Kuk,1) + r(32,Kuk,1) + r(33,Kuk,1) + r(34,Kuk,1)
     
      + r(35,Kuk,1) + r(36,Kuk,1) + r(37,Kuk,1) + r(38,Kuk,1) + r(39,Kuk,1) + r(40,Kuk,1) + r(41,Kuk,1) + r(42,Kuk,1) + r(43,Kuk,1) + r(44,Kuk,1) + r(45,Kuk,1) + r(46,Kuk,1) + r(47,Kuk,1) + r(48,Kuk,1) + r(49,Kuk,1) + r(50,Kuk,1) + r(51,Kuk,1)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 22:25:36 Page 35
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 416


     Barges_buy  =E=  ensure we only pick one value n for barges for each timber i     
     
      + r(52,Kuk,1) + r(53,Kuk,1) + r(54,Kuk,1) + r(55,Kuk,1) + r(56,Kuk,1) + r(57,Kuk,1) + r(58,Kuk,1) + r(59,Kuk,1) + r(60,Kuk,1) + r(61,Kuk,1) + r(62,Kuk,1) + r(63,Kuk,1) + r(64,Kuk,1) + r(65,Kuk,1) + r(66,Kuk,1) + r(67,Kuk,1) + r(68,Kuk,1)
     
      + r(69,Kuk,1) + r(70,Kuk,1) + r(71,Kuk,1) + r(72,Kuk,1) + r(73,Kuk,1) + r(74,Kuk,1) + r(75,Kuk,1) + r(76,Kuk,1) + r(77,Kuk,1) + r(78,Kuk,1) + r(79,Kuk,1) + r(80,Kuk,1) + r(81,Kuk,1) + r(82,Kuk,1) + r(83,Kuk,1) + r(84,Kuk,1) + r(85,Kuk,1)
     
      + r(86,Kuk,1) + r(87,Kuk,1) + r(88,Kuk,1) + r(89,Kuk,1) + r(90,Kuk,1) + r(91,Kuk,1) + r(92,Kuk,1) + r(93,Kuk,1) + r(94,Kuk,1) + r(95,Kuk,1) + r(96,Kuk,1) + r(97,Kuk,1) + r(98,Kuk,1) + r(99,Kuk,1) + r(100,Kuk,1) + r(101,Kuk,1) + r(102,Kuk,1)
     
      + r(103,Kuk,1) + r(104,Kuk,1) + r(105,Kuk,1) + r(106,Kuk,1) + r(107,Kuk,1) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_buy(Kuk,2)..  r(1,Kuk,2) + r(2,Kuk,2) + r(3,Kuk,2) + r(4,Kuk,2) + r(5,Kuk,2) + r(6,Kuk,2) + r(7,Kuk,2) + r(8,Kuk,2) + r(9,Kuk,2) + r(10,Kuk,2) + r(11,Kuk,2) + r(12,Kuk,2) + r(13,Kuk,2) + r(14,Kuk,2) + r(15,Kuk,2) + r(16,Kuk,2) + r(17,Kuk,2)
     
      + r(18,Kuk,2) + r(19,Kuk,2) + r(20,Kuk,2) + r(21,Kuk,2) + r(22,Kuk,2) + r(23,Kuk,2) + r(24,Kuk,2) + r(25,Kuk,2) + r(26,Kuk,2) + r(27,Kuk,2) + r(28,Kuk,2) + r(29,Kuk,2) + r(30,Kuk,2) + r(31,Kuk,2) + r(32,Kuk,2) + r(33,Kuk,2) + r(34,Kuk,2)
     
      + r(35,Kuk,2) + r(36,Kuk,2) + r(37,Kuk,2) + r(38,Kuk,2) + r(39,Kuk,2) + r(40,Kuk,2) + r(41,Kuk,2) + r(42,Kuk,2) + r(43,Kuk,2) + r(44,Kuk,2) + r(45,Kuk,2) + r(46,Kuk,2) + r(47,Kuk,2) + r(48,Kuk,2) + r(49,Kuk,2) + r(50,Kuk,2) + r(51,Kuk,2)
     
      + r(52,Kuk,2) + r(53,Kuk,2) + r(54,Kuk,2) + r(55,Kuk,2) + r(56,Kuk,2) + r(57,Kuk,2) + r(58,Kuk,2) + r(59,Kuk,2) + r(60,Kuk,2) + r(61,Kuk,2) + r(62,Kuk,2) + r(63,Kuk,2) + r(64,Kuk,2) + r(65,Kuk,2) + r(66,Kuk,2) + r(67,Kuk,2) + r(68,Kuk,2)
     
      + r(69,Kuk,2) + r(70,Kuk,2) + r(71,Kuk,2) + r(72,Kuk,2) + r(73,Kuk,2) + r(74,Kuk,2) + r(75,Kuk,2) + r(76,Kuk,2) + r(77,Kuk,2) + r(78,Kuk,2) + r(79,Kuk,2) + r(80,Kuk,2) + r(81,Kuk,2) + r(82,Kuk,2) + r(83,Kuk,2) + r(84,Kuk,2) + r(85,Kuk,2)
     
      + r(86,Kuk,2) + r(87,Kuk,2) + r(88,Kuk,2) + r(89,Kuk,2) + r(90,Kuk,2) + r(91,Kuk,2) + r(92,Kuk,2) + r(93,Kuk,2) + r(94,Kuk,2) + r(95,Kuk,2) + r(96,Kuk,2) + r(97,Kuk,2) + r(98,Kuk,2) + r(99,Kuk,2) + r(100,Kuk,2) + r(101,Kuk,2) + r(102,Kuk,2)
     
      + r(103,Kuk,2) + r(104,Kuk,2) + r(105,Kuk,2) + r(106,Kuk,2) + r(107,Kuk,2) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_buy(Kuk,3)..  r(1,Kuk,3) + r(2,Kuk,3) + r(3,Kuk,3) + r(4,Kuk,3) + r(5,Kuk,3) + r(6,Kuk,3) + r(7,Kuk,3) + r(8,Kuk,3) + r(9,Kuk,3) + r(10,Kuk,3) + r(11,Kuk,3) + r(12,Kuk,3) + r(13,Kuk,3) + r(14,Kuk,3) + r(15,Kuk,3) + r(16,Kuk,3) + r(17,Kuk,3)
     
      + r(18,Kuk,3) + r(19,Kuk,3) + r(20,Kuk,3) + r(21,Kuk,3) + r(22,Kuk,3) + r(23,Kuk,3) + r(24,Kuk,3) + r(25,Kuk,3) + r(26,Kuk,3) + r(27,Kuk,3) + r(28,Kuk,3) + r(29,Kuk,3) + r(30,Kuk,3) + r(31,Kuk,3) + r(32,Kuk,3) + r(33,Kuk,3) + r(34,Kuk,3)
     
      + r(35,Kuk,3) + r(36,Kuk,3) + r(37,Kuk,3) + r(38,Kuk,3) + r(39,Kuk,3) + r(40,Kuk,3) + r(41,Kuk,3) + r(42,Kuk,3) + r(43,Kuk,3) + r(44,Kuk,3) + r(45,Kuk,3) + r(46,Kuk,3) + r(47,Kuk,3) + r(48,Kuk,3) + r(49,Kuk,3) + r(50,Kuk,3) + r(51,Kuk,3)
     
      + r(52,Kuk,3) + r(53,Kuk,3) + r(54,Kuk,3) + r(55,Kuk,3) + r(56,Kuk,3) + r(57,Kuk,3) + r(58,Kuk,3) + r(59,Kuk,3) + r(60,Kuk,3) + r(61,Kuk,3) + r(62,Kuk,3) + r(63,Kuk,3) + r(64,Kuk,3) + r(65,Kuk,3) + r(66,Kuk,3) + r(67,Kuk,3) + r(68,Kuk,3)
     
      + r(69,Kuk,3) + r(70,Kuk,3) + r(71,Kuk,3) + r(72,Kuk,3) + r(73,Kuk,3) + r(74,Kuk,3) + r(75,Kuk,3) + r(76,Kuk,3) + r(77,Kuk,3) + r(78,Kuk,3) + r(79,Kuk,3) + r(80,Kuk,3) + r(81,Kuk,3) + r(82,Kuk,3) + r(83,Kuk,3) + r(84,Kuk,3) + r(85,Kuk,3)
     
      + r(86,Kuk,3) + r(87,Kuk,3) + r(88,Kuk,3) + r(89,Kuk,3) + r(90,Kuk,3) + r(91,Kuk,3) + r(92,Kuk,3) + r(93,Kuk,3) + r(94,Kuk,3) + r(95,Kuk,3) + r(96,Kuk,3) + r(97,Kuk,3) + r(98,Kuk,3) + r(99,Kuk,3) + r(100,Kuk,3) + r(101,Kuk,3) + r(102,Kuk,3)
     
      + r(103,Kuk,3) + r(104,Kuk,3) + r(105,Kuk,3) + r(106,Kuk,3) + r(107,Kuk,3) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_buy(Kok,1)..  r(1,Kok,1) + r(2,Kok,1) + r(3,Kok,1) + r(4,Kok,1) + r(5,Kok,1) + r(6,Kok,1) + r(7,Kok,1) + r(8,Kok,1) + r(9,Kok,1) + r(10,Kok,1) + r(11,Kok,1) + r(12,Kok,1) + r(13,Kok,1) + r(14,Kok,1) + r(15,Kok,1) + r(16,Kok,1) + r(17,Kok,1)
     
      + r(18,Kok,1) + r(19,Kok,1) + r(20,Kok,1) + r(21,Kok,1) + r(22,Kok,1) + r(23,Kok,1) + r(24,Kok,1) + r(25,Kok,1) + r(26,Kok,1) + r(27,Kok,1) + r(28,Kok,1) + r(29,Kok,1) + r(30,Kok,1) + r(31,Kok,1) + r(32,Kok,1) + r(33,Kok,1) + r(34,Kok,1)
     
      + r(35,Kok,1) + r(36,Kok,1) + r(37,Kok,1) + r(38,Kok,1) + r(39,Kok,1) + r(40,Kok,1) + r(41,Kok,1) + r(42,Kok,1) + r(43,Kok,1) + r(44,Kok,1) + r(45,Kok,1) + r(46,Kok,1) + r(47,Kok,1) + r(48,Kok,1) + r(49,Kok,1) + r(50,Kok,1) + r(51,Kok,1)
     
      + r(52,Kok,1) + r(53,Kok,1) + r(54,Kok,1) + r(55,Kok,1) + r(56,Kok,1) + r(57,Kok,1) + r(58,Kok,1) + r(59,Kok,1) + r(60,Kok,1) + r(61,Kok,1) + r(62,Kok,1) + r(63,Kok,1) + r(64,Kok,1) + r(65,Kok,1) + r(66,Kok,1) + r(67,Kok,1) + r(68,Kok,1)
     
      + r(69,Kok,1) + r(70,Kok,1) + r(71,Kok,1) + r(72,Kok,1) + r(73,Kok,1) + r(74,Kok,1) + r(75,Kok,1) + r(76,Kok,1) + r(77,Kok,1) + r(78,Kok,1) + r(79,Kok,1) + r(80,Kok,1) + r(81,Kok,1) + r(82,Kok,1) + r(83,Kok,1) + r(84,Kok,1) + r(85,Kok,1)
     
      + r(86,Kok,1) + r(87,Kok,1) + r(88,Kok,1) + r(89,Kok,1) + r(90,Kok,1) + r(91,Kok,1) + r(92,Kok,1) + r(93,Kok,1) + r(94,Kok,1) + r(95,Kok,1) + r(96,Kok,1) + r(97,Kok,1) + r(98,Kok,1) + r(99,Kok,1) + r(100,Kok,1) + r(101,Kok,1) + r(102,Kok,1)
     
      + r(103,Kok,1) + r(104,Kok,1) + r(105,Kok,1) + r(106,Kok,1) + r(107,Kok,1) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 22:25:36 Page 36
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 416


     Barges_buy  =E=  ensure we only pick one value n for barges for each timber i

Barges_buy(Kok,2)..  r(1,Kok,2) + r(2,Kok,2) + r(3,Kok,2) + r(4,Kok,2) + r(5,Kok,2) + r(6,Kok,2) + r(7,Kok,2) + r(8,Kok,2) + r(9,Kok,2) + r(10,Kok,2) + r(11,Kok,2) + r(12,Kok,2) + r(13,Kok,2) + r(14,Kok,2) + r(15,Kok,2) + r(16,Kok,2) + r(17,Kok,2)
     
      + r(18,Kok,2) + r(19,Kok,2) + r(20,Kok,2) + r(21,Kok,2) + r(22,Kok,2) + r(23,Kok,2) + r(24,Kok,2) + r(25,Kok,2) + r(26,Kok,2) + r(27,Kok,2) + r(28,Kok,2) + r(29,Kok,2) + r(30,Kok,2) + r(31,Kok,2) + r(32,Kok,2) + r(33,Kok,2) + r(34,Kok,2)
     
      + r(35,Kok,2) + r(36,Kok,2) + r(37,Kok,2) + r(38,Kok,2) + r(39,Kok,2) + r(40,Kok,2) + r(41,Kok,2) + r(42,Kok,2) + r(43,Kok,2) + r(44,Kok,2) + r(45,Kok,2) + r(46,Kok,2) + r(47,Kok,2) + r(48,Kok,2) + r(49,Kok,2) + r(50,Kok,2) + r(51,Kok,2)
     
      + r(52,Kok,2) + r(53,Kok,2) + r(54,Kok,2) + r(55,Kok,2) + r(56,Kok,2) + r(57,Kok,2) + r(58,Kok,2) + r(59,Kok,2) + r(60,Kok,2) + r(61,Kok,2) + r(62,Kok,2) + r(63,Kok,2) + r(64,Kok,2) + r(65,Kok,2) + r(66,Kok,2) + r(67,Kok,2) + r(68,Kok,2)
     
      + r(69,Kok,2) + r(70,Kok,2) + r(71,Kok,2) + r(72,Kok,2) + r(73,Kok,2) + r(74,Kok,2) + r(75,Kok,2) + r(76,Kok,2) + r(77,Kok,2) + r(78,Kok,2) + r(79,Kok,2) + r(80,Kok,2) + r(81,Kok,2) + r(82,Kok,2) + r(83,Kok,2) + r(84,Kok,2) + r(85,Kok,2)
     
      + r(86,Kok,2) + r(87,Kok,2) + r(88,Kok,2) + r(89,Kok,2) + r(90,Kok,2) + r(91,Kok,2) + r(92,Kok,2) + r(93,Kok,2) + r(94,Kok,2) + r(95,Kok,2) + r(96,Kok,2) + r(97,Kok,2) + r(98,Kok,2) + r(99,Kok,2) + r(100,Kok,2) + r(101,Kok,2) + r(102,Kok,2)
     
      + r(103,Kok,2) + r(104,Kok,2) + r(105,Kok,2) + r(106,Kok,2) + r(107,Kok,2) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_buy(Kok,3)..  r(1,Kok,3) + r(2,Kok,3) + r(3,Kok,3) + r(4,Kok,3) + r(5,Kok,3) + r(6,Kok,3) + r(7,Kok,3) + r(8,Kok,3) + r(9,Kok,3) + r(10,Kok,3) + r(11,Kok,3) + r(12,Kok,3) + r(13,Kok,3) + r(14,Kok,3) + r(15,Kok,3) + r(16,Kok,3) + r(17,Kok,3)
     
      + r(18,Kok,3) + r(19,Kok,3) + r(20,Kok,3) + r(21,Kok,3) + r(22,Kok,3) + r(23,Kok,3) + r(24,Kok,3) + r(25,Kok,3) + r(26,Kok,3) + r(27,Kok,3) + r(28,Kok,3) + r(29,Kok,3) + r(30,Kok,3) + r(31,Kok,3) + r(32,Kok,3) + r(33,Kok,3) + r(34,Kok,3)
     
      + r(35,Kok,3) + r(36,Kok,3) + r(37,Kok,3) + r(38,Kok,3) + r(39,Kok,3) + r(40,Kok,3) + r(41,Kok,3) + r(42,Kok,3) + r(43,Kok,3) + r(44,Kok,3) + r(45,Kok,3) + r(46,Kok,3) + r(47,Kok,3) + r(48,Kok,3) + r(49,Kok,3) + r(50,Kok,3) + r(51,Kok,3)
     
      + r(52,Kok,3) + r(53,Kok,3) + r(54,Kok,3) + r(55,Kok,3) + r(56,Kok,3) + r(57,Kok,3) + r(58,Kok,3) + r(59,Kok,3) + r(60,Kok,3) + r(61,Kok,3) + r(62,Kok,3) + r(63,Kok,3) + r(64,Kok,3) + r(65,Kok,3) + r(66,Kok,3) + r(67,Kok,3) + r(68,Kok,3)
     
      + r(69,Kok,3) + r(70,Kok,3) + r(71,Kok,3) + r(72,Kok,3) + r(73,Kok,3) + r(74,Kok,3) + r(75,Kok,3) + r(76,Kok,3) + r(77,Kok,3) + r(78,Kok,3) + r(79,Kok,3) + r(80,Kok,3) + r(81,Kok,3) + r(82,Kok,3) + r(83,Kok,3) + r(84,Kok,3) + r(85,Kok,3)
     
      + r(86,Kok,3) + r(87,Kok,3) + r(88,Kok,3) + r(89,Kok,3) + r(90,Kok,3) + r(91,Kok,3) + r(92,Kok,3) + r(93,Kok,3) + r(94,Kok,3) + r(95,Kok,3) + r(96,Kok,3) + r(97,Kok,3) + r(98,Kok,3) + r(99,Kok,3) + r(100,Kok,3) + r(101,Kok,3) + r(102,Kok,3)
     
      + r(103,Kok,3) + r(104,Kok,3) + r(105,Kok,3) + r(106,Kok,3) + r(107,Kok,3) =E= 1 ; (LHS = 0, INFES = 1 ****)
     

---- Barges_sell  =E=  ensure we only pick one value  n for barges for each product to each city

Barges_sell(Mas,EU,1)..  u(1,Mas,EU,1) + u(2,Mas,EU,1) + u(3,Mas,EU,1) + u(4,Mas,EU,1) + u(5,Mas,EU,1) + u(6,Mas,EU,1) + u(7,Mas,EU,1) + u(8,Mas,EU,1) + u(9,Mas,EU,1) + u(10,Mas,EU,1) + u(11,Mas,EU,1) + u(12,Mas,EU,1) + u(13,Mas,EU,1) + u(14,Mas,EU,1)
     
      + u(15,Mas,EU,1) + u(16,Mas,EU,1) + u(17,Mas,EU,1) + u(18,Mas,EU,1) + u(19,Mas,EU,1) + u(20,Mas,EU,1) + u(21,Mas,EU,1) + u(22,Mas,EU,1) + u(23,Mas,EU,1) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Mas,EU,2)..  u(1,Mas,EU,2) + u(2,Mas,EU,2) + u(3,Mas,EU,2) + u(4,Mas,EU,2) + u(5,Mas,EU,2) + u(6,Mas,EU,2) + u(7,Mas,EU,2) + u(8,Mas,EU,2) + u(9,Mas,EU,2) + u(10,Mas,EU,2) + u(11,Mas,EU,2) + u(12,Mas,EU,2) + u(13,Mas,EU,2) + u(14,Mas,EU,2)
     
      + u(15,Mas,EU,2) + u(16,Mas,EU,2) + u(17,Mas,EU,2) + u(18,Mas,EU,2) + u(19,Mas,EU,2) + u(20,Mas,EU,2) + u(21,Mas,EU,2) + u(22,Mas,EU,2) + u(23,Mas,EU,2) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Mas,EU,3)..  u(1,Mas,EU,3) + u(2,Mas,EU,3) + u(3,Mas,EU,3) + u(4,Mas,EU,3) + u(5,Mas,EU,3) + u(6,Mas,EU,3) + u(7,Mas,EU,3) + u(8,Mas,EU,3) + u(9,Mas,EU,3) + u(10,Mas,EU,3) + u(11,Mas,EU,3) + u(12,Mas,EU,3) + u(13,Mas,EU,3) + u(14,Mas,EU,3)
     
      + u(15,Mas,EU,3) + u(16,Mas,EU,3) + u(17,Mas,EU,3) + u(18,Mas,EU,3) + u(19,Mas,EU,3) + u(20,Mas,EU,3) + u(21,Mas,EU,3) + u(22,Mas,EU,3) + u(23,Mas,EU,3) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Mas,IE,1)..  u(1,Mas,IE,1) + u(2,Mas,IE,1) + u(3,Mas,IE,1) + u(4,Mas,IE,1) + u(5,Mas,IE,1) + u(6,Mas,IE,1) + u(7,Mas,IE,1) + u(8,Mas,IE,1) + u(9,Mas,IE,1) + u(10,Mas,IE,1) + u(11,Mas,IE,1) + u(12,Mas,IE,1) + u(13,Mas,IE,1) + u(14,Mas,IE,1)
     
      + u(15,Mas,IE,1) + u(16,Mas,IE,1) + u(17,Mas,IE,1) + u(18,Mas,IE,1) + u(19,Mas,IE,1) + u(20,Mas,IE,1) + u(21,Mas,IE,1) + u(22,Mas,IE,1) + u(23,Mas,IE,1) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Mas,IE,2)..  u(1,Mas,IE,2) + u(2,Mas,IE,2) + u(3,Mas,IE,2) + u(4,Mas,IE,2) + u(5,Mas,IE,2) + u(6,Mas,IE,2) + u(7,Mas,IE,2) + u(8,Mas,IE,2) + u(9,Mas,IE,2) + u(10,Mas,IE,2) + u(11,Mas,IE,2) + u(12,Mas,IE,2) + u(13,Mas,IE,2) + u(14,Mas,IE,2)
     
      + u(15,Mas,IE,2) + u(16,Mas,IE,2) + u(17,Mas,IE,2) + u(18,Mas,IE,2) + u(19,Mas,IE,2) + u(20,Mas,IE,2) + u(21,Mas,IE,2) + u(22,Mas,IE,2) + u(23,Mas,IE,2) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 22:25:36 Page 37
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 416


     Barges_sell  =E=  ensure we only pick one value  n for barges for each product to each city

Barges_sell(Mas,IE,3)..  u(1,Mas,IE,3) + u(2,Mas,IE,3) + u(3,Mas,IE,3) + u(4,Mas,IE,3) + u(5,Mas,IE,3) + u(6,Mas,IE,3) + u(7,Mas,IE,3) + u(8,Mas,IE,3) + u(9,Mas,IE,3) + u(10,Mas,IE,3) + u(11,Mas,IE,3) + u(12,Mas,IE,3) + u(13,Mas,IE,3) + u(14,Mas,IE,3)
     
      + u(15,Mas,IE,3) + u(16,Mas,IE,3) + u(17,Mas,IE,3) + u(18,Mas,IE,3) + u(19,Mas,IE,3) + u(20,Mas,IE,3) + u(21,Mas,IE,3) + u(22,Mas,IE,3) + u(23,Mas,IE,3) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Mas,PA,1)..  u(1,Mas,PA,1) + u(2,Mas,PA,1) + u(3,Mas,PA,1) + u(4,Mas,PA,1) + u(5,Mas,PA,1) + u(6,Mas,PA,1) + u(7,Mas,PA,1) + u(8,Mas,PA,1) + u(9,Mas,PA,1) + u(10,Mas,PA,1) + u(11,Mas,PA,1) + u(12,Mas,PA,1) + u(13,Mas,PA,1) + u(14,Mas,PA,1)
     
      + u(15,Mas,PA,1) + u(16,Mas,PA,1) + u(17,Mas,PA,1) + u(18,Mas,PA,1) + u(19,Mas,PA,1) + u(20,Mas,PA,1) + u(21,Mas,PA,1) + u(22,Mas,PA,1) + u(23,Mas,PA,1) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Mas,PA,2)..  u(1,Mas,PA,2) + u(2,Mas,PA,2) + u(3,Mas,PA,2) + u(4,Mas,PA,2) + u(5,Mas,PA,2) + u(6,Mas,PA,2) + u(7,Mas,PA,2) + u(8,Mas,PA,2) + u(9,Mas,PA,2) + u(10,Mas,PA,2) + u(11,Mas,PA,2) + u(12,Mas,PA,2) + u(13,Mas,PA,2) + u(14,Mas,PA,2)
     
      + u(15,Mas,PA,2) + u(16,Mas,PA,2) + u(17,Mas,PA,2) + u(18,Mas,PA,2) + u(19,Mas,PA,2) + u(20,Mas,PA,2) + u(21,Mas,PA,2) + u(22,Mas,PA,2) + u(23,Mas,PA,2) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Mas,PA,3)..  u(1,Mas,PA,3) + u(2,Mas,PA,3) + u(3,Mas,PA,3) + u(4,Mas,PA,3) + u(5,Mas,PA,3) + u(6,Mas,PA,3) + u(7,Mas,PA,3) + u(8,Mas,PA,3) + u(9,Mas,PA,3) + u(10,Mas,PA,3) + u(11,Mas,PA,3) + u(12,Mas,PA,3) + u(13,Mas,PA,3) + u(14,Mas,PA,3)
     
      + u(15,Mas,PA,3) + u(16,Mas,PA,3) + u(17,Mas,PA,3) + u(18,Mas,PA,3) + u(19,Mas,PA,3) + u(20,Mas,PA,3) + u(21,Mas,PA,3) + u(22,Mas,PA,3) + u(23,Mas,PA,3) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Mas,KI,1)..  u(1,Mas,KI,1) + u(2,Mas,KI,1) + u(3,Mas,KI,1) + u(4,Mas,KI,1) + u(5,Mas,KI,1) + u(6,Mas,KI,1) + u(7,Mas,KI,1) + u(8,Mas,KI,1) + u(9,Mas,KI,1) + u(10,Mas,KI,1) + u(11,Mas,KI,1) + u(12,Mas,KI,1) + u(13,Mas,KI,1) + u(14,Mas,KI,1)
     
      + u(15,Mas,KI,1) + u(16,Mas,KI,1) + u(17,Mas,KI,1) + u(18,Mas,KI,1) + u(19,Mas,KI,1) + u(20,Mas,KI,1) + u(21,Mas,KI,1) + u(22,Mas,KI,1) + u(23,Mas,KI,1) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Mas,KI,2)..  u(1,Mas,KI,2) + u(2,Mas,KI,2) + u(3,Mas,KI,2) + u(4,Mas,KI,2) + u(5,Mas,KI,2) + u(6,Mas,KI,2) + u(7,Mas,KI,2) + u(8,Mas,KI,2) + u(9,Mas,KI,2) + u(10,Mas,KI,2) + u(11,Mas,KI,2) + u(12,Mas,KI,2) + u(13,Mas,KI,2) + u(14,Mas,KI,2)
     
      + u(15,Mas,KI,2) + u(16,Mas,KI,2) + u(17,Mas,KI,2) + u(18,Mas,KI,2) + u(19,Mas,KI,2) + u(20,Mas,KI,2) + u(21,Mas,KI,2) + u(22,Mas,KI,2) + u(23,Mas,KI,2) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Mas,KI,3)..  u(1,Mas,KI,3) + u(2,Mas,KI,3) + u(3,Mas,KI,3) + u(4,Mas,KI,3) + u(5,Mas,KI,3) + u(6,Mas,KI,3) + u(7,Mas,KI,3) + u(8,Mas,KI,3) + u(9,Mas,KI,3) + u(10,Mas,KI,3) + u(11,Mas,KI,3) + u(12,Mas,KI,3) + u(13,Mas,KI,3) + u(14,Mas,KI,3)
     
      + u(15,Mas,KI,3) + u(16,Mas,KI,3) + u(17,Mas,KI,3) + u(18,Mas,KI,3) + u(19,Mas,KI,3) + u(20,Mas,KI,3) + u(21,Mas,KI,3) + u(22,Mas,KI,3) + u(23,Mas,KI,3) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Kus,EU,1)..  u(1,Kus,EU,1) + u(2,Kus,EU,1) + u(3,Kus,EU,1) + u(4,Kus,EU,1) + u(5,Kus,EU,1) + u(6,Kus,EU,1) + u(7,Kus,EU,1) + u(8,Kus,EU,1) + u(9,Kus,EU,1) + u(10,Kus,EU,1) + u(11,Kus,EU,1) + u(12,Kus,EU,1) + u(13,Kus,EU,1) + u(14,Kus,EU,1)
     
      + u(15,Kus,EU,1) + u(16,Kus,EU,1) + u(17,Kus,EU,1) + u(18,Kus,EU,1) + u(19,Kus,EU,1) + u(20,Kus,EU,1) + u(21,Kus,EU,1) + u(22,Kus,EU,1) + u(23,Kus,EU,1) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Kus,EU,2)..  u(1,Kus,EU,2) + u(2,Kus,EU,2) + u(3,Kus,EU,2) + u(4,Kus,EU,2) + u(5,Kus,EU,2) + u(6,Kus,EU,2) + u(7,Kus,EU,2) + u(8,Kus,EU,2) + u(9,Kus,EU,2) + u(10,Kus,EU,2) + u(11,Kus,EU,2) + u(12,Kus,EU,2) + u(13,Kus,EU,2) + u(14,Kus,EU,2)
     
      + u(15,Kus,EU,2) + u(16,Kus,EU,2) + u(17,Kus,EU,2) + u(18,Kus,EU,2) + u(19,Kus,EU,2) + u(20,Kus,EU,2) + u(21,Kus,EU,2) + u(22,Kus,EU,2) + u(23,Kus,EU,2) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Kus,EU,3)..  u(1,Kus,EU,3) + u(2,Kus,EU,3) + u(3,Kus,EU,3) + u(4,Kus,EU,3) + u(5,Kus,EU,3) + u(6,Kus,EU,3) + u(7,Kus,EU,3) + u(8,Kus,EU,3) + u(9,Kus,EU,3) + u(10,Kus,EU,3) + u(11,Kus,EU,3) + u(12,Kus,EU,3) + u(13,Kus,EU,3) + u(14,Kus,EU,3)
     
      + u(15,Kus,EU,3) + u(16,Kus,EU,3) + u(17,Kus,EU,3) + u(18,Kus,EU,3) + u(19,Kus,EU,3) + u(20,Kus,EU,3) + u(21,Kus,EU,3) + u(22,Kus,EU,3) + u(23,Kus,EU,3) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Kus,IE,1)..  u(1,Kus,IE,1) + u(2,Kus,IE,1) + u(3,Kus,IE,1) + u(4,Kus,IE,1) + u(5,Kus,IE,1) + u(6,Kus,IE,1) + u(7,Kus,IE,1) + u(8,Kus,IE,1) + u(9,Kus,IE,1) + u(10,Kus,IE,1) + u(11,Kus,IE,1) + u(12,Kus,IE,1) + u(13,Kus,IE,1) + u(14,Kus,IE,1)
     
      + u(15,Kus,IE,1) + u(16,Kus,IE,1) + u(17,Kus,IE,1) + u(18,Kus,IE,1) + u(19,Kus,IE,1) + u(20,Kus,IE,1) + u(21,Kus,IE,1) + u(22,Kus,IE,1) + u(23,Kus,IE,1) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Kus,IE,2)..  u(1,Kus,IE,2) + u(2,Kus,IE,2) + u(3,Kus,IE,2) + u(4,Kus,IE,2) + u(5,Kus,IE,2) + u(6,Kus,IE,2) + u(7,Kus,IE,2) + u(8,Kus,IE,2) + u(9,Kus,IE,2) + u(10,Kus,IE,2) + u(11,Kus,IE,2) + u(12,Kus,IE,2) + u(13,Kus,IE,2) + u(14,Kus,IE,2)
     
      + u(15,Kus,IE,2) + u(16,Kus,IE,2) + u(17,Kus,IE,2) + u(18,Kus,IE,2) + u(19,Kus,IE,2) + u(20,Kus,IE,2) + u(21,Kus,IE,2) + u(22,Kus,IE,2) + u(23,Kus,IE,2) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 22:25:36 Page 38
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 416


     Barges_sell  =E=  ensure we only pick one value  n for barges for each product to each city

Barges_sell(Kus,IE,3)..  u(1,Kus,IE,3) + u(2,Kus,IE,3) + u(3,Kus,IE,3) + u(4,Kus,IE,3) + u(5,Kus,IE,3) + u(6,Kus,IE,3) + u(7,Kus,IE,3) + u(8,Kus,IE,3) + u(9,Kus,IE,3) + u(10,Kus,IE,3) + u(11,Kus,IE,3) + u(12,Kus,IE,3) + u(13,Kus,IE,3) + u(14,Kus,IE,3)
     
      + u(15,Kus,IE,3) + u(16,Kus,IE,3) + u(17,Kus,IE,3) + u(18,Kus,IE,3) + u(19,Kus,IE,3) + u(20,Kus,IE,3) + u(21,Kus,IE,3) + u(22,Kus,IE,3) + u(23,Kus,IE,3) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Kus,PA,1)..  u(1,Kus,PA,1) + u(2,Kus,PA,1) + u(3,Kus,PA,1) + u(4,Kus,PA,1) + u(5,Kus,PA,1) + u(6,Kus,PA,1) + u(7,Kus,PA,1) + u(8,Kus,PA,1) + u(9,Kus,PA,1) + u(10,Kus,PA,1) + u(11,Kus,PA,1) + u(12,Kus,PA,1) + u(13,Kus,PA,1) + u(14,Kus,PA,1)
     
      + u(15,Kus,PA,1) + u(16,Kus,PA,1) + u(17,Kus,PA,1) + u(18,Kus,PA,1) + u(19,Kus,PA,1) + u(20,Kus,PA,1) + u(21,Kus,PA,1) + u(22,Kus,PA,1) + u(23,Kus,PA,1) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Kus,PA,2)..  u(1,Kus,PA,2) + u(2,Kus,PA,2) + u(3,Kus,PA,2) + u(4,Kus,PA,2) + u(5,Kus,PA,2) + u(6,Kus,PA,2) + u(7,Kus,PA,2) + u(8,Kus,PA,2) + u(9,Kus,PA,2) + u(10,Kus,PA,2) + u(11,Kus,PA,2) + u(12,Kus,PA,2) + u(13,Kus,PA,2) + u(14,Kus,PA,2)
     
      + u(15,Kus,PA,2) + u(16,Kus,PA,2) + u(17,Kus,PA,2) + u(18,Kus,PA,2) + u(19,Kus,PA,2) + u(20,Kus,PA,2) + u(21,Kus,PA,2) + u(22,Kus,PA,2) + u(23,Kus,PA,2) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Kus,PA,3)..  u(1,Kus,PA,3) + u(2,Kus,PA,3) + u(3,Kus,PA,3) + u(4,Kus,PA,3) + u(5,Kus,PA,3) + u(6,Kus,PA,3) + u(7,Kus,PA,3) + u(8,Kus,PA,3) + u(9,Kus,PA,3) + u(10,Kus,PA,3) + u(11,Kus,PA,3) + u(12,Kus,PA,3) + u(13,Kus,PA,3) + u(14,Kus,PA,3)
     
      + u(15,Kus,PA,3) + u(16,Kus,PA,3) + u(17,Kus,PA,3) + u(18,Kus,PA,3) + u(19,Kus,PA,3) + u(20,Kus,PA,3) + u(21,Kus,PA,3) + u(22,Kus,PA,3) + u(23,Kus,PA,3) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Kus,KI,1)..  u(1,Kus,KI,1) + u(2,Kus,KI,1) + u(3,Kus,KI,1) + u(4,Kus,KI,1) + u(5,Kus,KI,1) + u(6,Kus,KI,1) + u(7,Kus,KI,1) + u(8,Kus,KI,1) + u(9,Kus,KI,1) + u(10,Kus,KI,1) + u(11,Kus,KI,1) + u(12,Kus,KI,1) + u(13,Kus,KI,1) + u(14,Kus,KI,1)
     
      + u(15,Kus,KI,1) + u(16,Kus,KI,1) + u(17,Kus,KI,1) + u(18,Kus,KI,1) + u(19,Kus,KI,1) + u(20,Kus,KI,1) + u(21,Kus,KI,1) + u(22,Kus,KI,1) + u(23,Kus,KI,1) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Kus,KI,2)..  u(1,Kus,KI,2) + u(2,Kus,KI,2) + u(3,Kus,KI,2) + u(4,Kus,KI,2) + u(5,Kus,KI,2) + u(6,Kus,KI,2) + u(7,Kus,KI,2) + u(8,Kus,KI,2) + u(9,Kus,KI,2) + u(10,Kus,KI,2) + u(11,Kus,KI,2) + u(12,Kus,KI,2) + u(13,Kus,KI,2) + u(14,Kus,KI,2)
     
      + u(15,Kus,KI,2) + u(16,Kus,KI,2) + u(17,Kus,KI,2) + u(18,Kus,KI,2) + u(19,Kus,KI,2) + u(20,Kus,KI,2) + u(21,Kus,KI,2) + u(22,Kus,KI,2) + u(23,Kus,KI,2) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Kus,KI,3)..  u(1,Kus,KI,3) + u(2,Kus,KI,3) + u(3,Kus,KI,3) + u(4,Kus,KI,3) + u(5,Kus,KI,3) + u(6,Kus,KI,3) + u(7,Kus,KI,3) + u(8,Kus,KI,3) + u(9,Kus,KI,3) + u(10,Kus,KI,3) + u(11,Kus,KI,3) + u(12,Kus,KI,3) + u(13,Kus,KI,3) + u(14,Kus,KI,3)
     
      + u(15,Kus,KI,3) + u(16,Kus,KI,3) + u(17,Kus,KI,3) + u(18,Kus,KI,3) + u(19,Kus,KI,3) + u(20,Kus,KI,3) + u(21,Kus,KI,3) + u(22,Kus,KI,3) + u(23,Kus,KI,3) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Kos,EU,1)..  u(1,Kos,EU,1) + u(2,Kos,EU,1) + u(3,Kos,EU,1) + u(4,Kos,EU,1) + u(5,Kos,EU,1) + u(6,Kos,EU,1) + u(7,Kos,EU,1) + u(8,Kos,EU,1) + u(9,Kos,EU,1) + u(10,Kos,EU,1) + u(11,Kos,EU,1) + u(12,Kos,EU,1) + u(13,Kos,EU,1) + u(14,Kos,EU,1)
     
      + u(15,Kos,EU,1) + u(16,Kos,EU,1) + u(17,Kos,EU,1) + u(18,Kos,EU,1) + u(19,Kos,EU,1) + u(20,Kos,EU,1) + u(21,Kos,EU,1) + u(22,Kos,EU,1) + u(23,Kos,EU,1) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Kos,EU,2)..  u(1,Kos,EU,2) + u(2,Kos,EU,2) + u(3,Kos,EU,2) + u(4,Kos,EU,2) + u(5,Kos,EU,2) + u(6,Kos,EU,2) + u(7,Kos,EU,2) + u(8,Kos,EU,2) + u(9,Kos,EU,2) + u(10,Kos,EU,2) + u(11,Kos,EU,2) + u(12,Kos,EU,2) + u(13,Kos,EU,2) + u(14,Kos,EU,2)
     
      + u(15,Kos,EU,2) + u(16,Kos,EU,2) + u(17,Kos,EU,2) + u(18,Kos,EU,2) + u(19,Kos,EU,2) + u(20,Kos,EU,2) + u(21,Kos,EU,2) + u(22,Kos,EU,2) + u(23,Kos,EU,2) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Kos,EU,3)..  u(1,Kos,EU,3) + u(2,Kos,EU,3) + u(3,Kos,EU,3) + u(4,Kos,EU,3) + u(5,Kos,EU,3) + u(6,Kos,EU,3) + u(7,Kos,EU,3) + u(8,Kos,EU,3) + u(9,Kos,EU,3) + u(10,Kos,EU,3) + u(11,Kos,EU,3) + u(12,Kos,EU,3) + u(13,Kos,EU,3) + u(14,Kos,EU,3)
     
      + u(15,Kos,EU,3) + u(16,Kos,EU,3) + u(17,Kos,EU,3) + u(18,Kos,EU,3) + u(19,Kos,EU,3) + u(20,Kos,EU,3) + u(21,Kos,EU,3) + u(22,Kos,EU,3) + u(23,Kos,EU,3) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Kos,IE,1)..  u(1,Kos,IE,1) + u(2,Kos,IE,1) + u(3,Kos,IE,1) + u(4,Kos,IE,1) + u(5,Kos,IE,1) + u(6,Kos,IE,1) + u(7,Kos,IE,1) + u(8,Kos,IE,1) + u(9,Kos,IE,1) + u(10,Kos,IE,1) + u(11,Kos,IE,1) + u(12,Kos,IE,1) + u(13,Kos,IE,1) + u(14,Kos,IE,1)
     
      + u(15,Kos,IE,1) + u(16,Kos,IE,1) + u(17,Kos,IE,1) + u(18,Kos,IE,1) + u(19,Kos,IE,1) + u(20,Kos,IE,1) + u(21,Kos,IE,1) + u(22,Kos,IE,1) + u(23,Kos,IE,1) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Kos,IE,2)..  u(1,Kos,IE,2) + u(2,Kos,IE,2) + u(3,Kos,IE,2) + u(4,Kos,IE,2) + u(5,Kos,IE,2) + u(6,Kos,IE,2) + u(7,Kos,IE,2) + u(8,Kos,IE,2) + u(9,Kos,IE,2) + u(10,Kos,IE,2) + u(11,Kos,IE,2) + u(12,Kos,IE,2) + u(13,Kos,IE,2) + u(14,Kos,IE,2)
     
      + u(15,Kos,IE,2) + u(16,Kos,IE,2) + u(17,Kos,IE,2) + u(18,Kos,IE,2) + u(19,Kos,IE,2) + u(20,Kos,IE,2) + u(21,Kos,IE,2) + u(22,Kos,IE,2) + u(23,Kos,IE,2) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 22:25:36 Page 39
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 416


     Barges_sell  =E=  ensure we only pick one value  n for barges for each product to each city

Barges_sell(Kos,IE,3)..  u(1,Kos,IE,3) + u(2,Kos,IE,3) + u(3,Kos,IE,3) + u(4,Kos,IE,3) + u(5,Kos,IE,3) + u(6,Kos,IE,3) + u(7,Kos,IE,3) + u(8,Kos,IE,3) + u(9,Kos,IE,3) + u(10,Kos,IE,3) + u(11,Kos,IE,3) + u(12,Kos,IE,3) + u(13,Kos,IE,3) + u(14,Kos,IE,3)
     
      + u(15,Kos,IE,3) + u(16,Kos,IE,3) + u(17,Kos,IE,3) + u(18,Kos,IE,3) + u(19,Kos,IE,3) + u(20,Kos,IE,3) + u(21,Kos,IE,3) + u(22,Kos,IE,3) + u(23,Kos,IE,3) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Kos,PA,1)..  u(1,Kos,PA,1) + u(2,Kos,PA,1) + u(3,Kos,PA,1) + u(4,Kos,PA,1) + u(5,Kos,PA,1) + u(6,Kos,PA,1) + u(7,Kos,PA,1) + u(8,Kos,PA,1) + u(9,Kos,PA,1) + u(10,Kos,PA,1) + u(11,Kos,PA,1) + u(12,Kos,PA,1) + u(13,Kos,PA,1) + u(14,Kos,PA,1)
     
      + u(15,Kos,PA,1) + u(16,Kos,PA,1) + u(17,Kos,PA,1) + u(18,Kos,PA,1) + u(19,Kos,PA,1) + u(20,Kos,PA,1) + u(21,Kos,PA,1) + u(22,Kos,PA,1) + u(23,Kos,PA,1) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Kos,PA,2)..  u(1,Kos,PA,2) + u(2,Kos,PA,2) + u(3,Kos,PA,2) + u(4,Kos,PA,2) + u(5,Kos,PA,2) + u(6,Kos,PA,2) + u(7,Kos,PA,2) + u(8,Kos,PA,2) + u(9,Kos,PA,2) + u(10,Kos,PA,2) + u(11,Kos,PA,2) + u(12,Kos,PA,2) + u(13,Kos,PA,2) + u(14,Kos,PA,2)
     
      + u(15,Kos,PA,2) + u(16,Kos,PA,2) + u(17,Kos,PA,2) + u(18,Kos,PA,2) + u(19,Kos,PA,2) + u(20,Kos,PA,2) + u(21,Kos,PA,2) + u(22,Kos,PA,2) + u(23,Kos,PA,2) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Kos,PA,3)..  u(1,Kos,PA,3) + u(2,Kos,PA,3) + u(3,Kos,PA,3) + u(4,Kos,PA,3) + u(5,Kos,PA,3) + u(6,Kos,PA,3) + u(7,Kos,PA,3) + u(8,Kos,PA,3) + u(9,Kos,PA,3) + u(10,Kos,PA,3) + u(11,Kos,PA,3) + u(12,Kos,PA,3) + u(13,Kos,PA,3) + u(14,Kos,PA,3)
     
      + u(15,Kos,PA,3) + u(16,Kos,PA,3) + u(17,Kos,PA,3) + u(18,Kos,PA,3) + u(19,Kos,PA,3) + u(20,Kos,PA,3) + u(21,Kos,PA,3) + u(22,Kos,PA,3) + u(23,Kos,PA,3) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Kos,KI,1)..  u(1,Kos,KI,1) + u(2,Kos,KI,1) + u(3,Kos,KI,1) + u(4,Kos,KI,1) + u(5,Kos,KI,1) + u(6,Kos,KI,1) + u(7,Kos,KI,1) + u(8,Kos,KI,1) + u(9,Kos,KI,1) + u(10,Kos,KI,1) + u(11,Kos,KI,1) + u(12,Kos,KI,1) + u(13,Kos,KI,1) + u(14,Kos,KI,1)
     
      + u(15,Kos,KI,1) + u(16,Kos,KI,1) + u(17,Kos,KI,1) + u(18,Kos,KI,1) + u(19,Kos,KI,1) + u(20,Kos,KI,1) + u(21,Kos,KI,1) + u(22,Kos,KI,1) + u(23,Kos,KI,1) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Kos,KI,2)..  u(1,Kos,KI,2) + u(2,Kos,KI,2) + u(3,Kos,KI,2) + u(4,Kos,KI,2) + u(5,Kos,KI,2) + u(6,Kos,KI,2) + u(7,Kos,KI,2) + u(8,Kos,KI,2) + u(9,Kos,KI,2) + u(10,Kos,KI,2) + u(11,Kos,KI,2) + u(12,Kos,KI,2) + u(13,Kos,KI,2) + u(14,Kos,KI,2)
     
      + u(15,Kos,KI,2) + u(16,Kos,KI,2) + u(17,Kos,KI,2) + u(18,Kos,KI,2) + u(19,Kos,KI,2) + u(20,Kos,KI,2) + u(21,Kos,KI,2) + u(22,Kos,KI,2) + u(23,Kos,KI,2) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Kos,KI,3)..  u(1,Kos,KI,3) + u(2,Kos,KI,3) + u(3,Kos,KI,3) + u(4,Kos,KI,3) + u(5,Kos,KI,3) + u(6,Kos,KI,3) + u(7,Kos,KI,3) + u(8,Kos,KI,3) + u(9,Kos,KI,3) + u(10,Kos,KI,3) + u(11,Kos,KI,3) + u(12,Kos,KI,3) + u(13,Kos,KI,3) + u(14,Kos,KI,3)
     
      + u(15,Kos,KI,3) + u(16,Kos,KI,3) + u(17,Kos,KI,3) + u(18,Kos,KI,3) + u(19,Kos,KI,3) + u(20,Kos,KI,3) + u(21,Kos,KI,3) + u(22,Kos,KI,3) + u(23,Kos,KI,3) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Kuv,EU,1)..  u(1,Kuv,EU,1) + u(2,Kuv,EU,1) + u(3,Kuv,EU,1) + u(4,Kuv,EU,1) + u(5,Kuv,EU,1) + u(6,Kuv,EU,1) + u(7,Kuv,EU,1) + u(8,Kuv,EU,1) + u(9,Kuv,EU,1) + u(10,Kuv,EU,1) + u(11,Kuv,EU,1) + u(12,Kuv,EU,1) + u(13,Kuv,EU,1) + u(14,Kuv,EU,1)
     
      + u(15,Kuv,EU,1) + u(16,Kuv,EU,1) + u(17,Kuv,EU,1) + u(18,Kuv,EU,1) + u(19,Kuv,EU,1) + u(20,Kuv,EU,1) + u(21,Kuv,EU,1) + u(22,Kuv,EU,1) + u(23,Kuv,EU,1) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Kuv,EU,2)..  u(1,Kuv,EU,2) + u(2,Kuv,EU,2) + u(3,Kuv,EU,2) + u(4,Kuv,EU,2) + u(5,Kuv,EU,2) + u(6,Kuv,EU,2) + u(7,Kuv,EU,2) + u(8,Kuv,EU,2) + u(9,Kuv,EU,2) + u(10,Kuv,EU,2) + u(11,Kuv,EU,2) + u(12,Kuv,EU,2) + u(13,Kuv,EU,2) + u(14,Kuv,EU,2)
     
      + u(15,Kuv,EU,2) + u(16,Kuv,EU,2) + u(17,Kuv,EU,2) + u(18,Kuv,EU,2) + u(19,Kuv,EU,2) + u(20,Kuv,EU,2) + u(21,Kuv,EU,2) + u(22,Kuv,EU,2) + u(23,Kuv,EU,2) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Kuv,EU,3)..  u(1,Kuv,EU,3) + u(2,Kuv,EU,3) + u(3,Kuv,EU,3) + u(4,Kuv,EU,3) + u(5,Kuv,EU,3) + u(6,Kuv,EU,3) + u(7,Kuv,EU,3) + u(8,Kuv,EU,3) + u(9,Kuv,EU,3) + u(10,Kuv,EU,3) + u(11,Kuv,EU,3) + u(12,Kuv,EU,3) + u(13,Kuv,EU,3) + u(14,Kuv,EU,3)
     
      + u(15,Kuv,EU,3) + u(16,Kuv,EU,3) + u(17,Kuv,EU,3) + u(18,Kuv,EU,3) + u(19,Kuv,EU,3) + u(20,Kuv,EU,3) + u(21,Kuv,EU,3) + u(22,Kuv,EU,3) + u(23,Kuv,EU,3) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Kuv,IE,1)..  u(1,Kuv,IE,1) + u(2,Kuv,IE,1) + u(3,Kuv,IE,1) + u(4,Kuv,IE,1) + u(5,Kuv,IE,1) + u(6,Kuv,IE,1) + u(7,Kuv,IE,1) + u(8,Kuv,IE,1) + u(9,Kuv,IE,1) + u(10,Kuv,IE,1) + u(11,Kuv,IE,1) + u(12,Kuv,IE,1) + u(13,Kuv,IE,1) + u(14,Kuv,IE,1)
     
      + u(15,Kuv,IE,1) + u(16,Kuv,IE,1) + u(17,Kuv,IE,1) + u(18,Kuv,IE,1) + u(19,Kuv,IE,1) + u(20,Kuv,IE,1) + u(21,Kuv,IE,1) + u(22,Kuv,IE,1) + u(23,Kuv,IE,1) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Kuv,IE,2)..  u(1,Kuv,IE,2) + u(2,Kuv,IE,2) + u(3,Kuv,IE,2) + u(4,Kuv,IE,2) + u(5,Kuv,IE,2) + u(6,Kuv,IE,2) + u(7,Kuv,IE,2) + u(8,Kuv,IE,2) + u(9,Kuv,IE,2) + u(10,Kuv,IE,2) + u(11,Kuv,IE,2) + u(12,Kuv,IE,2) + u(13,Kuv,IE,2) + u(14,Kuv,IE,2)
     
      + u(15,Kuv,IE,2) + u(16,Kuv,IE,2) + u(17,Kuv,IE,2) + u(18,Kuv,IE,2) + u(19,Kuv,IE,2) + u(20,Kuv,IE,2) + u(21,Kuv,IE,2) + u(22,Kuv,IE,2) + u(23,Kuv,IE,2) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 22:25:36 Page 40
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 416


     Barges_sell  =E=  ensure we only pick one value  n for barges for each product to each city

Barges_sell(Kuv,IE,3)..  u(1,Kuv,IE,3) + u(2,Kuv,IE,3) + u(3,Kuv,IE,3) + u(4,Kuv,IE,3) + u(5,Kuv,IE,3) + u(6,Kuv,IE,3) + u(7,Kuv,IE,3) + u(8,Kuv,IE,3) + u(9,Kuv,IE,3) + u(10,Kuv,IE,3) + u(11,Kuv,IE,3) + u(12,Kuv,IE,3) + u(13,Kuv,IE,3) + u(14,Kuv,IE,3)
     
      + u(15,Kuv,IE,3) + u(16,Kuv,IE,3) + u(17,Kuv,IE,3) + u(18,Kuv,IE,3) + u(19,Kuv,IE,3) + u(20,Kuv,IE,3) + u(21,Kuv,IE,3) + u(22,Kuv,IE,3) + u(23,Kuv,IE,3) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Kuv,PA,1)..  u(1,Kuv,PA,1) + u(2,Kuv,PA,1) + u(3,Kuv,PA,1) + u(4,Kuv,PA,1) + u(5,Kuv,PA,1) + u(6,Kuv,PA,1) + u(7,Kuv,PA,1) + u(8,Kuv,PA,1) + u(9,Kuv,PA,1) + u(10,Kuv,PA,1) + u(11,Kuv,PA,1) + u(12,Kuv,PA,1) + u(13,Kuv,PA,1) + u(14,Kuv,PA,1)
     
      + u(15,Kuv,PA,1) + u(16,Kuv,PA,1) + u(17,Kuv,PA,1) + u(18,Kuv,PA,1) + u(19,Kuv,PA,1) + u(20,Kuv,PA,1) + u(21,Kuv,PA,1) + u(22,Kuv,PA,1) + u(23,Kuv,PA,1) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Kuv,PA,2)..  u(1,Kuv,PA,2) + u(2,Kuv,PA,2) + u(3,Kuv,PA,2) + u(4,Kuv,PA,2) + u(5,Kuv,PA,2) + u(6,Kuv,PA,2) + u(7,Kuv,PA,2) + u(8,Kuv,PA,2) + u(9,Kuv,PA,2) + u(10,Kuv,PA,2) + u(11,Kuv,PA,2) + u(12,Kuv,PA,2) + u(13,Kuv,PA,2) + u(14,Kuv,PA,2)
     
      + u(15,Kuv,PA,2) + u(16,Kuv,PA,2) + u(17,Kuv,PA,2) + u(18,Kuv,PA,2) + u(19,Kuv,PA,2) + u(20,Kuv,PA,2) + u(21,Kuv,PA,2) + u(22,Kuv,PA,2) + u(23,Kuv,PA,2) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Kuv,PA,3)..  u(1,Kuv,PA,3) + u(2,Kuv,PA,3) + u(3,Kuv,PA,3) + u(4,Kuv,PA,3) + u(5,Kuv,PA,3) + u(6,Kuv,PA,3) + u(7,Kuv,PA,3) + u(8,Kuv,PA,3) + u(9,Kuv,PA,3) + u(10,Kuv,PA,3) + u(11,Kuv,PA,3) + u(12,Kuv,PA,3) + u(13,Kuv,PA,3) + u(14,Kuv,PA,3)
     
      + u(15,Kuv,PA,3) + u(16,Kuv,PA,3) + u(17,Kuv,PA,3) + u(18,Kuv,PA,3) + u(19,Kuv,PA,3) + u(20,Kuv,PA,3) + u(21,Kuv,PA,3) + u(22,Kuv,PA,3) + u(23,Kuv,PA,3) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Kuv,KI,1)..  u(1,Kuv,KI,1) + u(2,Kuv,KI,1) + u(3,Kuv,KI,1) + u(4,Kuv,KI,1) + u(5,Kuv,KI,1) + u(6,Kuv,KI,1) + u(7,Kuv,KI,1) + u(8,Kuv,KI,1) + u(9,Kuv,KI,1) + u(10,Kuv,KI,1) + u(11,Kuv,KI,1) + u(12,Kuv,KI,1) + u(13,Kuv,KI,1) + u(14,Kuv,KI,1)
     
      + u(15,Kuv,KI,1) + u(16,Kuv,KI,1) + u(17,Kuv,KI,1) + u(18,Kuv,KI,1) + u(19,Kuv,KI,1) + u(20,Kuv,KI,1) + u(21,Kuv,KI,1) + u(22,Kuv,KI,1) + u(23,Kuv,KI,1) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Kuv,KI,2)..  u(1,Kuv,KI,2) + u(2,Kuv,KI,2) + u(3,Kuv,KI,2) + u(4,Kuv,KI,2) + u(5,Kuv,KI,2) + u(6,Kuv,KI,2) + u(7,Kuv,KI,2) + u(8,Kuv,KI,2) + u(9,Kuv,KI,2) + u(10,Kuv,KI,2) + u(11,Kuv,KI,2) + u(12,Kuv,KI,2) + u(13,Kuv,KI,2) + u(14,Kuv,KI,2)
     
      + u(15,Kuv,KI,2) + u(16,Kuv,KI,2) + u(17,Kuv,KI,2) + u(18,Kuv,KI,2) + u(19,Kuv,KI,2) + u(20,Kuv,KI,2) + u(21,Kuv,KI,2) + u(22,Kuv,KI,2) + u(23,Kuv,KI,2) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Kuv,KI,3)..  u(1,Kuv,KI,3) + u(2,Kuv,KI,3) + u(3,Kuv,KI,3) + u(4,Kuv,KI,3) + u(5,Kuv,KI,3) + u(6,Kuv,KI,3) + u(7,Kuv,KI,3) + u(8,Kuv,KI,3) + u(9,Kuv,KI,3) + u(10,Kuv,KI,3) + u(11,Kuv,KI,3) + u(12,Kuv,KI,3) + u(13,Kuv,KI,3) + u(14,Kuv,KI,3)
     
      + u(15,Kuv,KI,3) + u(16,Kuv,KI,3) + u(17,Kuv,KI,3) + u(18,Kuv,KI,3) + u(19,Kuv,KI,3) + u(20,Kuv,KI,3) + u(21,Kuv,KI,3) + u(22,Kuv,KI,3) + u(23,Kuv,KI,3) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Kov,EU,1)..  u(1,Kov,EU,1) + u(2,Kov,EU,1) + u(3,Kov,EU,1) + u(4,Kov,EU,1) + u(5,Kov,EU,1) + u(6,Kov,EU,1) + u(7,Kov,EU,1) + u(8,Kov,EU,1) + u(9,Kov,EU,1) + u(10,Kov,EU,1) + u(11,Kov,EU,1) + u(12,Kov,EU,1) + u(13,Kov,EU,1) + u(14,Kov,EU,1)
     
      + u(15,Kov,EU,1) + u(16,Kov,EU,1) + u(17,Kov,EU,1) + u(18,Kov,EU,1) + u(19,Kov,EU,1) + u(20,Kov,EU,1) + u(21,Kov,EU,1) + u(22,Kov,EU,1) + u(23,Kov,EU,1) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Kov,EU,2)..  u(1,Kov,EU,2) + u(2,Kov,EU,2) + u(3,Kov,EU,2) + u(4,Kov,EU,2) + u(5,Kov,EU,2) + u(6,Kov,EU,2) + u(7,Kov,EU,2) + u(8,Kov,EU,2) + u(9,Kov,EU,2) + u(10,Kov,EU,2) + u(11,Kov,EU,2) + u(12,Kov,EU,2) + u(13,Kov,EU,2) + u(14,Kov,EU,2)
     
      + u(15,Kov,EU,2) + u(16,Kov,EU,2) + u(17,Kov,EU,2) + u(18,Kov,EU,2) + u(19,Kov,EU,2) + u(20,Kov,EU,2) + u(21,Kov,EU,2) + u(22,Kov,EU,2) + u(23,Kov,EU,2) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Kov,EU,3)..  u(1,Kov,EU,3) + u(2,Kov,EU,3) + u(3,Kov,EU,3) + u(4,Kov,EU,3) + u(5,Kov,EU,3) + u(6,Kov,EU,3) + u(7,Kov,EU,3) + u(8,Kov,EU,3) + u(9,Kov,EU,3) + u(10,Kov,EU,3) + u(11,Kov,EU,3) + u(12,Kov,EU,3) + u(13,Kov,EU,3) + u(14,Kov,EU,3)
     
      + u(15,Kov,EU,3) + u(16,Kov,EU,3) + u(17,Kov,EU,3) + u(18,Kov,EU,3) + u(19,Kov,EU,3) + u(20,Kov,EU,3) + u(21,Kov,EU,3) + u(22,Kov,EU,3) + u(23,Kov,EU,3) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Kov,IE,1)..  u(1,Kov,IE,1) + u(2,Kov,IE,1) + u(3,Kov,IE,1) + u(4,Kov,IE,1) + u(5,Kov,IE,1) + u(6,Kov,IE,1) + u(7,Kov,IE,1) + u(8,Kov,IE,1) + u(9,Kov,IE,1) + u(10,Kov,IE,1) + u(11,Kov,IE,1) + u(12,Kov,IE,1) + u(13,Kov,IE,1) + u(14,Kov,IE,1)
     
      + u(15,Kov,IE,1) + u(16,Kov,IE,1) + u(17,Kov,IE,1) + u(18,Kov,IE,1) + u(19,Kov,IE,1) + u(20,Kov,IE,1) + u(21,Kov,IE,1) + u(22,Kov,IE,1) + u(23,Kov,IE,1) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Kov,IE,2)..  u(1,Kov,IE,2) + u(2,Kov,IE,2) + u(3,Kov,IE,2) + u(4,Kov,IE,2) + u(5,Kov,IE,2) + u(6,Kov,IE,2) + u(7,Kov,IE,2) + u(8,Kov,IE,2) + u(9,Kov,IE,2) + u(10,Kov,IE,2) + u(11,Kov,IE,2) + u(12,Kov,IE,2) + u(13,Kov,IE,2) + u(14,Kov,IE,2)
     
      + u(15,Kov,IE,2) + u(16,Kov,IE,2) + u(17,Kov,IE,2) + u(18,Kov,IE,2) + u(19,Kov,IE,2) + u(20,Kov,IE,2) + u(21,Kov,IE,2) + u(22,Kov,IE,2) + u(23,Kov,IE,2) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 22:25:36 Page 41
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 416


     Barges_sell  =E=  ensure we only pick one value  n for barges for each product to each city

Barges_sell(Kov,IE,3)..  u(1,Kov,IE,3) + u(2,Kov,IE,3) + u(3,Kov,IE,3) + u(4,Kov,IE,3) + u(5,Kov,IE,3) + u(6,Kov,IE,3) + u(7,Kov,IE,3) + u(8,Kov,IE,3) + u(9,Kov,IE,3) + u(10,Kov,IE,3) + u(11,Kov,IE,3) + u(12,Kov,IE,3) + u(13,Kov,IE,3) + u(14,Kov,IE,3)
     
      + u(15,Kov,IE,3) + u(16,Kov,IE,3) + u(17,Kov,IE,3) + u(18,Kov,IE,3) + u(19,Kov,IE,3) + u(20,Kov,IE,3) + u(21,Kov,IE,3) + u(22,Kov,IE,3) + u(23,Kov,IE,3) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Kov,PA,1)..  u(1,Kov,PA,1) + u(2,Kov,PA,1) + u(3,Kov,PA,1) + u(4,Kov,PA,1) + u(5,Kov,PA,1) + u(6,Kov,PA,1) + u(7,Kov,PA,1) + u(8,Kov,PA,1) + u(9,Kov,PA,1) + u(10,Kov,PA,1) + u(11,Kov,PA,1) + u(12,Kov,PA,1) + u(13,Kov,PA,1) + u(14,Kov,PA,1)
     
      + u(15,Kov,PA,1) + u(16,Kov,PA,1) + u(17,Kov,PA,1) + u(18,Kov,PA,1) + u(19,Kov,PA,1) + u(20,Kov,PA,1) + u(21,Kov,PA,1) + u(22,Kov,PA,1) + u(23,Kov,PA,1) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Kov,PA,2)..  u(1,Kov,PA,2) + u(2,Kov,PA,2) + u(3,Kov,PA,2) + u(4,Kov,PA,2) + u(5,Kov,PA,2) + u(6,Kov,PA,2) + u(7,Kov,PA,2) + u(8,Kov,PA,2) + u(9,Kov,PA,2) + u(10,Kov,PA,2) + u(11,Kov,PA,2) + u(12,Kov,PA,2) + u(13,Kov,PA,2) + u(14,Kov,PA,2)
     
      + u(15,Kov,PA,2) + u(16,Kov,PA,2) + u(17,Kov,PA,2) + u(18,Kov,PA,2) + u(19,Kov,PA,2) + u(20,Kov,PA,2) + u(21,Kov,PA,2) + u(22,Kov,PA,2) + u(23,Kov,PA,2) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Kov,PA,3)..  u(1,Kov,PA,3) + u(2,Kov,PA,3) + u(3,Kov,PA,3) + u(4,Kov,PA,3) + u(5,Kov,PA,3) + u(6,Kov,PA,3) + u(7,Kov,PA,3) + u(8,Kov,PA,3) + u(9,Kov,PA,3) + u(10,Kov,PA,3) + u(11,Kov,PA,3) + u(12,Kov,PA,3) + u(13,Kov,PA,3) + u(14,Kov,PA,3)
     
      + u(15,Kov,PA,3) + u(16,Kov,PA,3) + u(17,Kov,PA,3) + u(18,Kov,PA,3) + u(19,Kov,PA,3) + u(20,Kov,PA,3) + u(21,Kov,PA,3) + u(22,Kov,PA,3) + u(23,Kov,PA,3) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Kov,KI,1)..  u(1,Kov,KI,1) + u(2,Kov,KI,1) + u(3,Kov,KI,1) + u(4,Kov,KI,1) + u(5,Kov,KI,1) + u(6,Kov,KI,1) + u(7,Kov,KI,1) + u(8,Kov,KI,1) + u(9,Kov,KI,1) + u(10,Kov,KI,1) + u(11,Kov,KI,1) + u(12,Kov,KI,1) + u(13,Kov,KI,1) + u(14,Kov,KI,1)
     
      + u(15,Kov,KI,1) + u(16,Kov,KI,1) + u(17,Kov,KI,1) + u(18,Kov,KI,1) + u(19,Kov,KI,1) + u(20,Kov,KI,1) + u(21,Kov,KI,1) + u(22,Kov,KI,1) + u(23,Kov,KI,1) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Kov,KI,2)..  u(1,Kov,KI,2) + u(2,Kov,KI,2) + u(3,Kov,KI,2) + u(4,Kov,KI,2) + u(5,Kov,KI,2) + u(6,Kov,KI,2) + u(7,Kov,KI,2) + u(8,Kov,KI,2) + u(9,Kov,KI,2) + u(10,Kov,KI,2) + u(11,Kov,KI,2) + u(12,Kov,KI,2) + u(13,Kov,KI,2) + u(14,Kov,KI,2)
     
      + u(15,Kov,KI,2) + u(16,Kov,KI,2) + u(17,Kov,KI,2) + u(18,Kov,KI,2) + u(19,Kov,KI,2) + u(20,Kov,KI,2) + u(21,Kov,KI,2) + u(22,Kov,KI,2) + u(23,Kov,KI,2) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Kov,KI,3)..  u(1,Kov,KI,3) + u(2,Kov,KI,3) + u(3,Kov,KI,3) + u(4,Kov,KI,3) + u(5,Kov,KI,3) + u(6,Kov,KI,3) + u(7,Kov,KI,3) + u(8,Kov,KI,3) + u(9,Kov,KI,3) + u(10,Kov,KI,3) + u(11,Kov,KI,3) + u(12,Kov,KI,3) + u(13,Kov,KI,3) + u(14,Kov,KI,3)
     
      + u(15,Kov,KI,3) + u(16,Kov,KI,3) + u(17,Kov,KI,3) + u(18,Kov,KI,3) + u(19,Kov,KI,3) + u(20,Kov,KI,3) + u(21,Kov,KI,3) + u(22,Kov,KI,3) + u(23,Kov,KI,3) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Hsel,EU,1)..  u(1,Hsel,EU,1) + u(2,Hsel,EU,1) + u(3,Hsel,EU,1) + u(4,Hsel,EU,1) + u(5,Hsel,EU,1) + u(6,Hsel,EU,1) + u(7,Hsel,EU,1) + u(8,Hsel,EU,1) + u(9,Hsel,EU,1) + u(10,Hsel,EU,1) + u(11,Hsel,EU,1) + u(12,Hsel,EU,1) + u(13,Hsel,EU,1)
     
      + u(14,Hsel,EU,1) + u(15,Hsel,EU,1) + u(16,Hsel,EU,1) + u(17,Hsel,EU,1) + u(18,Hsel,EU,1) + u(19,Hsel,EU,1) + u(20,Hsel,EU,1) + u(21,Hsel,EU,1) + u(22,Hsel,EU,1) + u(23,Hsel,EU,1) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Hsel,EU,2)..  u(1,Hsel,EU,2) + u(2,Hsel,EU,2) + u(3,Hsel,EU,2) + u(4,Hsel,EU,2) + u(5,Hsel,EU,2) + u(6,Hsel,EU,2) + u(7,Hsel,EU,2) + u(8,Hsel,EU,2) + u(9,Hsel,EU,2) + u(10,Hsel,EU,2) + u(11,Hsel,EU,2) + u(12,Hsel,EU,2) + u(13,Hsel,EU,2)
     
      + u(14,Hsel,EU,2) + u(15,Hsel,EU,2) + u(16,Hsel,EU,2) + u(17,Hsel,EU,2) + u(18,Hsel,EU,2) + u(19,Hsel,EU,2) + u(20,Hsel,EU,2) + u(21,Hsel,EU,2) + u(22,Hsel,EU,2) + u(23,Hsel,EU,2) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Hsel,EU,3)..  u(1,Hsel,EU,3) + u(2,Hsel,EU,3) + u(3,Hsel,EU,3) + u(4,Hsel,EU,3) + u(5,Hsel,EU,3) + u(6,Hsel,EU,3) + u(7,Hsel,EU,3) + u(8,Hsel,EU,3) + u(9,Hsel,EU,3) + u(10,Hsel,EU,3) + u(11,Hsel,EU,3) + u(12,Hsel,EU,3) + u(13,Hsel,EU,3)
     
      + u(14,Hsel,EU,3) + u(15,Hsel,EU,3) + u(16,Hsel,EU,3) + u(17,Hsel,EU,3) + u(18,Hsel,EU,3) + u(19,Hsel,EU,3) + u(20,Hsel,EU,3) + u(21,Hsel,EU,3) + u(22,Hsel,EU,3) + u(23,Hsel,EU,3) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Hsel,IE,1)..  u(1,Hsel,IE,1) + u(2,Hsel,IE,1) + u(3,Hsel,IE,1) + u(4,Hsel,IE,1) + u(5,Hsel,IE,1) + u(6,Hsel,IE,1) + u(7,Hsel,IE,1) + u(8,Hsel,IE,1) + u(9,Hsel,IE,1) + u(10,Hsel,IE,1) + u(11,Hsel,IE,1) + u(12,Hsel,IE,1) + u(13,Hsel,IE,1)
     
      + u(14,Hsel,IE,1) + u(15,Hsel,IE,1) + u(16,Hsel,IE,1) + u(17,Hsel,IE,1) + u(18,Hsel,IE,1) + u(19,Hsel,IE,1) + u(20,Hsel,IE,1) + u(21,Hsel,IE,1) + u(22,Hsel,IE,1) + u(23,Hsel,IE,1) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Hsel,IE,2)..  u(1,Hsel,IE,2) + u(2,Hsel,IE,2) + u(3,Hsel,IE,2) + u(4,Hsel,IE,2) + u(5,Hsel,IE,2) + u(6,Hsel,IE,2) + u(7,Hsel,IE,2) + u(8,Hsel,IE,2) + u(9,Hsel,IE,2) + u(10,Hsel,IE,2) + u(11,Hsel,IE,2) + u(12,Hsel,IE,2) + u(13,Hsel,IE,2)
     
      + u(14,Hsel,IE,2) + u(15,Hsel,IE,2) + u(16,Hsel,IE,2) + u(17,Hsel,IE,2) + u(18,Hsel,IE,2) + u(19,Hsel,IE,2) + u(20,Hsel,IE,2) + u(21,Hsel,IE,2) + u(22,Hsel,IE,2) + u(23,Hsel,IE,2) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 22:25:36 Page 42
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 416


     Barges_sell  =E=  ensure we only pick one value  n for barges for each product to each city

Barges_sell(Hsel,IE,3)..  u(1,Hsel,IE,3) + u(2,Hsel,IE,3) + u(3,Hsel,IE,3) + u(4,Hsel,IE,3) + u(5,Hsel,IE,3) + u(6,Hsel,IE,3) + u(7,Hsel,IE,3) + u(8,Hsel,IE,3) + u(9,Hsel,IE,3) + u(10,Hsel,IE,3) + u(11,Hsel,IE,3) + u(12,Hsel,IE,3) + u(13,Hsel,IE,3)
     
      + u(14,Hsel,IE,3) + u(15,Hsel,IE,3) + u(16,Hsel,IE,3) + u(17,Hsel,IE,3) + u(18,Hsel,IE,3) + u(19,Hsel,IE,3) + u(20,Hsel,IE,3) + u(21,Hsel,IE,3) + u(22,Hsel,IE,3) + u(23,Hsel,IE,3) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Hsel,PA,1)..  u(1,Hsel,PA,1) + u(2,Hsel,PA,1) + u(3,Hsel,PA,1) + u(4,Hsel,PA,1) + u(5,Hsel,PA,1) + u(6,Hsel,PA,1) + u(7,Hsel,PA,1) + u(8,Hsel,PA,1) + u(9,Hsel,PA,1) + u(10,Hsel,PA,1) + u(11,Hsel,PA,1) + u(12,Hsel,PA,1) + u(13,Hsel,PA,1)
     
      + u(14,Hsel,PA,1) + u(15,Hsel,PA,1) + u(16,Hsel,PA,1) + u(17,Hsel,PA,1) + u(18,Hsel,PA,1) + u(19,Hsel,PA,1) + u(20,Hsel,PA,1) + u(21,Hsel,PA,1) + u(22,Hsel,PA,1) + u(23,Hsel,PA,1) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Hsel,PA,2)..  u(1,Hsel,PA,2) + u(2,Hsel,PA,2) + u(3,Hsel,PA,2) + u(4,Hsel,PA,2) + u(5,Hsel,PA,2) + u(6,Hsel,PA,2) + u(7,Hsel,PA,2) + u(8,Hsel,PA,2) + u(9,Hsel,PA,2) + u(10,Hsel,PA,2) + u(11,Hsel,PA,2) + u(12,Hsel,PA,2) + u(13,Hsel,PA,2)
     
      + u(14,Hsel,PA,2) + u(15,Hsel,PA,2) + u(16,Hsel,PA,2) + u(17,Hsel,PA,2) + u(18,Hsel,PA,2) + u(19,Hsel,PA,2) + u(20,Hsel,PA,2) + u(21,Hsel,PA,2) + u(22,Hsel,PA,2) + u(23,Hsel,PA,2) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Hsel,PA,3)..  u(1,Hsel,PA,3) + u(2,Hsel,PA,3) + u(3,Hsel,PA,3) + u(4,Hsel,PA,3) + u(5,Hsel,PA,3) + u(6,Hsel,PA,3) + u(7,Hsel,PA,3) + u(8,Hsel,PA,3) + u(9,Hsel,PA,3) + u(10,Hsel,PA,3) + u(11,Hsel,PA,3) + u(12,Hsel,PA,3) + u(13,Hsel,PA,3)
     
      + u(14,Hsel,PA,3) + u(15,Hsel,PA,3) + u(16,Hsel,PA,3) + u(17,Hsel,PA,3) + u(18,Hsel,PA,3) + u(19,Hsel,PA,3) + u(20,Hsel,PA,3) + u(21,Hsel,PA,3) + u(22,Hsel,PA,3) + u(23,Hsel,PA,3) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Hsel,KI,1)..  u(1,Hsel,KI,1) + u(2,Hsel,KI,1) + u(3,Hsel,KI,1) + u(4,Hsel,KI,1) + u(5,Hsel,KI,1) + u(6,Hsel,KI,1) + u(7,Hsel,KI,1) + u(8,Hsel,KI,1) + u(9,Hsel,KI,1) + u(10,Hsel,KI,1) + u(11,Hsel,KI,1) + u(12,Hsel,KI,1) + u(13,Hsel,KI,1)
     
      + u(14,Hsel,KI,1) + u(15,Hsel,KI,1) + u(16,Hsel,KI,1) + u(17,Hsel,KI,1) + u(18,Hsel,KI,1) + u(19,Hsel,KI,1) + u(20,Hsel,KI,1) + u(21,Hsel,KI,1) + u(22,Hsel,KI,1) + u(23,Hsel,KI,1) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Hsel,KI,2)..  u(1,Hsel,KI,2) + u(2,Hsel,KI,2) + u(3,Hsel,KI,2) + u(4,Hsel,KI,2) + u(5,Hsel,KI,2) + u(6,Hsel,KI,2) + u(7,Hsel,KI,2) + u(8,Hsel,KI,2) + u(9,Hsel,KI,2) + u(10,Hsel,KI,2) + u(11,Hsel,KI,2) + u(12,Hsel,KI,2) + u(13,Hsel,KI,2)
     
      + u(14,Hsel,KI,2) + u(15,Hsel,KI,2) + u(16,Hsel,KI,2) + u(17,Hsel,KI,2) + u(18,Hsel,KI,2) + u(19,Hsel,KI,2) + u(20,Hsel,KI,2) + u(21,Hsel,KI,2) + u(22,Hsel,KI,2) + u(23,Hsel,KI,2) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Hsel,KI,3)..  u(1,Hsel,KI,3) + u(2,Hsel,KI,3) + u(3,Hsel,KI,3) + u(4,Hsel,KI,3) + u(5,Hsel,KI,3) + u(6,Hsel,KI,3) + u(7,Hsel,KI,3) + u(8,Hsel,KI,3) + u(9,Hsel,KI,3) + u(10,Hsel,KI,3) + u(11,Hsel,KI,3) + u(12,Hsel,KI,3) + u(13,Hsel,KI,3)
     
      + u(14,Hsel,KI,3) + u(15,Hsel,KI,3) + u(16,Hsel,KI,3) + u(17,Hsel,KI,3) + u(18,Hsel,KI,3) + u(19,Hsel,KI,3) + u(20,Hsel,KI,3) + u(21,Hsel,KI,3) + u(22,Hsel,KI,3) + u(23,Hsel,KI,3) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Lsel,EU,1)..  u(1,Lsel,EU,1) + u(2,Lsel,EU,1) + u(3,Lsel,EU,1) + u(4,Lsel,EU,1) + u(5,Lsel,EU,1) + u(6,Lsel,EU,1) + u(7,Lsel,EU,1) + u(8,Lsel,EU,1) + u(9,Lsel,EU,1) + u(10,Lsel,EU,1) + u(11,Lsel,EU,1) + u(12,Lsel,EU,1) + u(13,Lsel,EU,1)
     
      + u(14,Lsel,EU,1) + u(15,Lsel,EU,1) + u(16,Lsel,EU,1) + u(17,Lsel,EU,1) + u(18,Lsel,EU,1) + u(19,Lsel,EU,1) + u(20,Lsel,EU,1) + u(21,Lsel,EU,1) + u(22,Lsel,EU,1) + u(23,Lsel,EU,1) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Lsel,EU,2)..  u(1,Lsel,EU,2) + u(2,Lsel,EU,2) + u(3,Lsel,EU,2) + u(4,Lsel,EU,2) + u(5,Lsel,EU,2) + u(6,Lsel,EU,2) + u(7,Lsel,EU,2) + u(8,Lsel,EU,2) + u(9,Lsel,EU,2) + u(10,Lsel,EU,2) + u(11,Lsel,EU,2) + u(12,Lsel,EU,2) + u(13,Lsel,EU,2)
     
      + u(14,Lsel,EU,2) + u(15,Lsel,EU,2) + u(16,Lsel,EU,2) + u(17,Lsel,EU,2) + u(18,Lsel,EU,2) + u(19,Lsel,EU,2) + u(20,Lsel,EU,2) + u(21,Lsel,EU,2) + u(22,Lsel,EU,2) + u(23,Lsel,EU,2) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Lsel,EU,3)..  u(1,Lsel,EU,3) + u(2,Lsel,EU,3) + u(3,Lsel,EU,3) + u(4,Lsel,EU,3) + u(5,Lsel,EU,3) + u(6,Lsel,EU,3) + u(7,Lsel,EU,3) + u(8,Lsel,EU,3) + u(9,Lsel,EU,3) + u(10,Lsel,EU,3) + u(11,Lsel,EU,3) + u(12,Lsel,EU,3) + u(13,Lsel,EU,3)
     
      + u(14,Lsel,EU,3) + u(15,Lsel,EU,3) + u(16,Lsel,EU,3) + u(17,Lsel,EU,3) + u(18,Lsel,EU,3) + u(19,Lsel,EU,3) + u(20,Lsel,EU,3) + u(21,Lsel,EU,3) + u(22,Lsel,EU,3) + u(23,Lsel,EU,3) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Lsel,IE,1)..  u(1,Lsel,IE,1) + u(2,Lsel,IE,1) + u(3,Lsel,IE,1) + u(4,Lsel,IE,1) + u(5,Lsel,IE,1) + u(6,Lsel,IE,1) + u(7,Lsel,IE,1) + u(8,Lsel,IE,1) + u(9,Lsel,IE,1) + u(10,Lsel,IE,1) + u(11,Lsel,IE,1) + u(12,Lsel,IE,1) + u(13,Lsel,IE,1)
     
      + u(14,Lsel,IE,1) + u(15,Lsel,IE,1) + u(16,Lsel,IE,1) + u(17,Lsel,IE,1) + u(18,Lsel,IE,1) + u(19,Lsel,IE,1) + u(20,Lsel,IE,1) + u(21,Lsel,IE,1) + u(22,Lsel,IE,1) + u(23,Lsel,IE,1) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Lsel,IE,2)..  u(1,Lsel,IE,2) + u(2,Lsel,IE,2) + u(3,Lsel,IE,2) + u(4,Lsel,IE,2) + u(5,Lsel,IE,2) + u(6,Lsel,IE,2) + u(7,Lsel,IE,2) + u(8,Lsel,IE,2) + u(9,Lsel,IE,2) + u(10,Lsel,IE,2) + u(11,Lsel,IE,2) + u(12,Lsel,IE,2) + u(13,Lsel,IE,2)
     
      + u(14,Lsel,IE,2) + u(15,Lsel,IE,2) + u(16,Lsel,IE,2) + u(17,Lsel,IE,2) + u(18,Lsel,IE,2) + u(19,Lsel,IE,2) + u(20,Lsel,IE,2) + u(21,Lsel,IE,2) + u(22,Lsel,IE,2) + u(23,Lsel,IE,2) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 22:25:36 Page 43
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 416


     Barges_sell  =E=  ensure we only pick one value  n for barges for each product to each city

Barges_sell(Lsel,IE,3)..  u(1,Lsel,IE,3) + u(2,Lsel,IE,3) + u(3,Lsel,IE,3) + u(4,Lsel,IE,3) + u(5,Lsel,IE,3) + u(6,Lsel,IE,3) + u(7,Lsel,IE,3) + u(8,Lsel,IE,3) + u(9,Lsel,IE,3) + u(10,Lsel,IE,3) + u(11,Lsel,IE,3) + u(12,Lsel,IE,3) + u(13,Lsel,IE,3)
     
      + u(14,Lsel,IE,3) + u(15,Lsel,IE,3) + u(16,Lsel,IE,3) + u(17,Lsel,IE,3) + u(18,Lsel,IE,3) + u(19,Lsel,IE,3) + u(20,Lsel,IE,3) + u(21,Lsel,IE,3) + u(22,Lsel,IE,3) + u(23,Lsel,IE,3) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Lsel,PA,1)..  u(1,Lsel,PA,1) + u(2,Lsel,PA,1) + u(3,Lsel,PA,1) + u(4,Lsel,PA,1) + u(5,Lsel,PA,1) + u(6,Lsel,PA,1) + u(7,Lsel,PA,1) + u(8,Lsel,PA,1) + u(9,Lsel,PA,1) + u(10,Lsel,PA,1) + u(11,Lsel,PA,1) + u(12,Lsel,PA,1) + u(13,Lsel,PA,1)
     
      + u(14,Lsel,PA,1) + u(15,Lsel,PA,1) + u(16,Lsel,PA,1) + u(17,Lsel,PA,1) + u(18,Lsel,PA,1) + u(19,Lsel,PA,1) + u(20,Lsel,PA,1) + u(21,Lsel,PA,1) + u(22,Lsel,PA,1) + u(23,Lsel,PA,1) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Lsel,PA,2)..  u(1,Lsel,PA,2) + u(2,Lsel,PA,2) + u(3,Lsel,PA,2) + u(4,Lsel,PA,2) + u(5,Lsel,PA,2) + u(6,Lsel,PA,2) + u(7,Lsel,PA,2) + u(8,Lsel,PA,2) + u(9,Lsel,PA,2) + u(10,Lsel,PA,2) + u(11,Lsel,PA,2) + u(12,Lsel,PA,2) + u(13,Lsel,PA,2)
     
      + u(14,Lsel,PA,2) + u(15,Lsel,PA,2) + u(16,Lsel,PA,2) + u(17,Lsel,PA,2) + u(18,Lsel,PA,2) + u(19,Lsel,PA,2) + u(20,Lsel,PA,2) + u(21,Lsel,PA,2) + u(22,Lsel,PA,2) + u(23,Lsel,PA,2) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Lsel,PA,3)..  u(1,Lsel,PA,3) + u(2,Lsel,PA,3) + u(3,Lsel,PA,3) + u(4,Lsel,PA,3) + u(5,Lsel,PA,3) + u(6,Lsel,PA,3) + u(7,Lsel,PA,3) + u(8,Lsel,PA,3) + u(9,Lsel,PA,3) + u(10,Lsel,PA,3) + u(11,Lsel,PA,3) + u(12,Lsel,PA,3) + u(13,Lsel,PA,3)
     
      + u(14,Lsel,PA,3) + u(15,Lsel,PA,3) + u(16,Lsel,PA,3) + u(17,Lsel,PA,3) + u(18,Lsel,PA,3) + u(19,Lsel,PA,3) + u(20,Lsel,PA,3) + u(21,Lsel,PA,3) + u(22,Lsel,PA,3) + u(23,Lsel,PA,3) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Lsel,KI,1)..  u(1,Lsel,KI,1) + u(2,Lsel,KI,1) + u(3,Lsel,KI,1) + u(4,Lsel,KI,1) + u(5,Lsel,KI,1) + u(6,Lsel,KI,1) + u(7,Lsel,KI,1) + u(8,Lsel,KI,1) + u(9,Lsel,KI,1) + u(10,Lsel,KI,1) + u(11,Lsel,KI,1) + u(12,Lsel,KI,1) + u(13,Lsel,KI,1)
     
      + u(14,Lsel,KI,1) + u(15,Lsel,KI,1) + u(16,Lsel,KI,1) + u(17,Lsel,KI,1) + u(18,Lsel,KI,1) + u(19,Lsel,KI,1) + u(20,Lsel,KI,1) + u(21,Lsel,KI,1) + u(22,Lsel,KI,1) + u(23,Lsel,KI,1) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Lsel,KI,2)..  u(1,Lsel,KI,2) + u(2,Lsel,KI,2) + u(3,Lsel,KI,2) + u(4,Lsel,KI,2) + u(5,Lsel,KI,2) + u(6,Lsel,KI,2) + u(7,Lsel,KI,2) + u(8,Lsel,KI,2) + u(9,Lsel,KI,2) + u(10,Lsel,KI,2) + u(11,Lsel,KI,2) + u(12,Lsel,KI,2) + u(13,Lsel,KI,2)
     
      + u(14,Lsel,KI,2) + u(15,Lsel,KI,2) + u(16,Lsel,KI,2) + u(17,Lsel,KI,2) + u(18,Lsel,KI,2) + u(19,Lsel,KI,2) + u(20,Lsel,KI,2) + u(21,Lsel,KI,2) + u(22,Lsel,KI,2) + u(23,Lsel,KI,2) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Lsel,KI,3)..  u(1,Lsel,KI,3) + u(2,Lsel,KI,3) + u(3,Lsel,KI,3) + u(4,Lsel,KI,3) + u(5,Lsel,KI,3) + u(6,Lsel,KI,3) + u(7,Lsel,KI,3) + u(8,Lsel,KI,3) + u(9,Lsel,KI,3) + u(10,Lsel,KI,3) + u(11,Lsel,KI,3) + u(12,Lsel,KI,3) + u(13,Lsel,KI,3)
     
      + u(14,Lsel,KI,3) + u(15,Lsel,KI,3) + u(16,Lsel,KI,3) + u(17,Lsel,KI,3) + u(18,Lsel,KI,3) + u(19,Lsel,KI,3) + u(20,Lsel,KI,3) + u(21,Lsel,KI,3) + u(22,Lsel,KI,3) + u(23,Lsel,KI,3) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Pap,EU,1)..  u(1,Pap,EU,1) + u(2,Pap,EU,1) + u(3,Pap,EU,1) + u(4,Pap,EU,1) + u(5,Pap,EU,1) + u(6,Pap,EU,1) + u(7,Pap,EU,1) + u(8,Pap,EU,1) + u(9,Pap,EU,1) + u(10,Pap,EU,1) + u(11,Pap,EU,1) + u(12,Pap,EU,1) + u(13,Pap,EU,1) + u(14,Pap,EU,1)
     
      + u(15,Pap,EU,1) + u(16,Pap,EU,1) + u(17,Pap,EU,1) + u(18,Pap,EU,1) + u(19,Pap,EU,1) + u(20,Pap,EU,1) + u(21,Pap,EU,1) + u(22,Pap,EU,1) + u(23,Pap,EU,1) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Pap,EU,2)..  u(1,Pap,EU,2) + u(2,Pap,EU,2) + u(3,Pap,EU,2) + u(4,Pap,EU,2) + u(5,Pap,EU,2) + u(6,Pap,EU,2) + u(7,Pap,EU,2) + u(8,Pap,EU,2) + u(9,Pap,EU,2) + u(10,Pap,EU,2) + u(11,Pap,EU,2) + u(12,Pap,EU,2) + u(13,Pap,EU,2) + u(14,Pap,EU,2)
     
      + u(15,Pap,EU,2) + u(16,Pap,EU,2) + u(17,Pap,EU,2) + u(18,Pap,EU,2) + u(19,Pap,EU,2) + u(20,Pap,EU,2) + u(21,Pap,EU,2) + u(22,Pap,EU,2) + u(23,Pap,EU,2) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Pap,EU,3)..  u(1,Pap,EU,3) + u(2,Pap,EU,3) + u(3,Pap,EU,3) + u(4,Pap,EU,3) + u(5,Pap,EU,3) + u(6,Pap,EU,3) + u(7,Pap,EU,3) + u(8,Pap,EU,3) + u(9,Pap,EU,3) + u(10,Pap,EU,3) + u(11,Pap,EU,3) + u(12,Pap,EU,3) + u(13,Pap,EU,3) + u(14,Pap,EU,3)
     
      + u(15,Pap,EU,3) + u(16,Pap,EU,3) + u(17,Pap,EU,3) + u(18,Pap,EU,3) + u(19,Pap,EU,3) + u(20,Pap,EU,3) + u(21,Pap,EU,3) + u(22,Pap,EU,3) + u(23,Pap,EU,3) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Pap,IE,1)..  u(1,Pap,IE,1) + u(2,Pap,IE,1) + u(3,Pap,IE,1) + u(4,Pap,IE,1) + u(5,Pap,IE,1) + u(6,Pap,IE,1) + u(7,Pap,IE,1) + u(8,Pap,IE,1) + u(9,Pap,IE,1) + u(10,Pap,IE,1) + u(11,Pap,IE,1) + u(12,Pap,IE,1) + u(13,Pap,IE,1) + u(14,Pap,IE,1)
     
      + u(15,Pap,IE,1) + u(16,Pap,IE,1) + u(17,Pap,IE,1) + u(18,Pap,IE,1) + u(19,Pap,IE,1) + u(20,Pap,IE,1) + u(21,Pap,IE,1) + u(22,Pap,IE,1) + u(23,Pap,IE,1) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Pap,IE,2)..  u(1,Pap,IE,2) + u(2,Pap,IE,2) + u(3,Pap,IE,2) + u(4,Pap,IE,2) + u(5,Pap,IE,2) + u(6,Pap,IE,2) + u(7,Pap,IE,2) + u(8,Pap,IE,2) + u(9,Pap,IE,2) + u(10,Pap,IE,2) + u(11,Pap,IE,2) + u(12,Pap,IE,2) + u(13,Pap,IE,2) + u(14,Pap,IE,2)
     
      + u(15,Pap,IE,2) + u(16,Pap,IE,2) + u(17,Pap,IE,2) + u(18,Pap,IE,2) + u(19,Pap,IE,2) + u(20,Pap,IE,2) + u(21,Pap,IE,2) + u(22,Pap,IE,2) + u(23,Pap,IE,2) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 22:25:36 Page 44
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 416


     Barges_sell  =E=  ensure we only pick one value  n for barges for each product to each city

Barges_sell(Pap,IE,3)..  u(1,Pap,IE,3) + u(2,Pap,IE,3) + u(3,Pap,IE,3) + u(4,Pap,IE,3) + u(5,Pap,IE,3) + u(6,Pap,IE,3) + u(7,Pap,IE,3) + u(8,Pap,IE,3) + u(9,Pap,IE,3) + u(10,Pap,IE,3) + u(11,Pap,IE,3) + u(12,Pap,IE,3) + u(13,Pap,IE,3) + u(14,Pap,IE,3)
     
      + u(15,Pap,IE,3) + u(16,Pap,IE,3) + u(17,Pap,IE,3) + u(18,Pap,IE,3) + u(19,Pap,IE,3) + u(20,Pap,IE,3) + u(21,Pap,IE,3) + u(22,Pap,IE,3) + u(23,Pap,IE,3) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Pap,PA,1)..  u(1,Pap,PA,1) + u(2,Pap,PA,1) + u(3,Pap,PA,1) + u(4,Pap,PA,1) + u(5,Pap,PA,1) + u(6,Pap,PA,1) + u(7,Pap,PA,1) + u(8,Pap,PA,1) + u(9,Pap,PA,1) + u(10,Pap,PA,1) + u(11,Pap,PA,1) + u(12,Pap,PA,1) + u(13,Pap,PA,1) + u(14,Pap,PA,1)
     
      + u(15,Pap,PA,1) + u(16,Pap,PA,1) + u(17,Pap,PA,1) + u(18,Pap,PA,1) + u(19,Pap,PA,1) + u(20,Pap,PA,1) + u(21,Pap,PA,1) + u(22,Pap,PA,1) + u(23,Pap,PA,1) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Pap,PA,2)..  u(1,Pap,PA,2) + u(2,Pap,PA,2) + u(3,Pap,PA,2) + u(4,Pap,PA,2) + u(5,Pap,PA,2) + u(6,Pap,PA,2) + u(7,Pap,PA,2) + u(8,Pap,PA,2) + u(9,Pap,PA,2) + u(10,Pap,PA,2) + u(11,Pap,PA,2) + u(12,Pap,PA,2) + u(13,Pap,PA,2) + u(14,Pap,PA,2)
     
      + u(15,Pap,PA,2) + u(16,Pap,PA,2) + u(17,Pap,PA,2) + u(18,Pap,PA,2) + u(19,Pap,PA,2) + u(20,Pap,PA,2) + u(21,Pap,PA,2) + u(22,Pap,PA,2) + u(23,Pap,PA,2) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Pap,PA,3)..  u(1,Pap,PA,3) + u(2,Pap,PA,3) + u(3,Pap,PA,3) + u(4,Pap,PA,3) + u(5,Pap,PA,3) + u(6,Pap,PA,3) + u(7,Pap,PA,3) + u(8,Pap,PA,3) + u(9,Pap,PA,3) + u(10,Pap,PA,3) + u(11,Pap,PA,3) + u(12,Pap,PA,3) + u(13,Pap,PA,3) + u(14,Pap,PA,3)
     
      + u(15,Pap,PA,3) + u(16,Pap,PA,3) + u(17,Pap,PA,3) + u(18,Pap,PA,3) + u(19,Pap,PA,3) + u(20,Pap,PA,3) + u(21,Pap,PA,3) + u(22,Pap,PA,3) + u(23,Pap,PA,3) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Pap,KI,1)..  u(1,Pap,KI,1) + u(2,Pap,KI,1) + u(3,Pap,KI,1) + u(4,Pap,KI,1) + u(5,Pap,KI,1) + u(6,Pap,KI,1) + u(7,Pap,KI,1) + u(8,Pap,KI,1) + u(9,Pap,KI,1) + u(10,Pap,KI,1) + u(11,Pap,KI,1) + u(12,Pap,KI,1) + u(13,Pap,KI,1) + u(14,Pap,KI,1)
     
      + u(15,Pap,KI,1) + u(16,Pap,KI,1) + u(17,Pap,KI,1) + u(18,Pap,KI,1) + u(19,Pap,KI,1) + u(20,Pap,KI,1) + u(21,Pap,KI,1) + u(22,Pap,KI,1) + u(23,Pap,KI,1) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Pap,KI,2)..  u(1,Pap,KI,2) + u(2,Pap,KI,2) + u(3,Pap,KI,2) + u(4,Pap,KI,2) + u(5,Pap,KI,2) + u(6,Pap,KI,2) + u(7,Pap,KI,2) + u(8,Pap,KI,2) + u(9,Pap,KI,2) + u(10,Pap,KI,2) + u(11,Pap,KI,2) + u(12,Pap,KI,2) + u(13,Pap,KI,2) + u(14,Pap,KI,2)
     
      + u(15,Pap,KI,2) + u(16,Pap,KI,2) + u(17,Pap,KI,2) + u(18,Pap,KI,2) + u(19,Pap,KI,2) + u(20,Pap,KI,2) + u(21,Pap,KI,2) + u(22,Pap,KI,2) + u(23,Pap,KI,2) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Pap,KI,3)..  u(1,Pap,KI,3) + u(2,Pap,KI,3) + u(3,Pap,KI,3) + u(4,Pap,KI,3) + u(5,Pap,KI,3) + u(6,Pap,KI,3) + u(7,Pap,KI,3) + u(8,Pap,KI,3) + u(9,Pap,KI,3) + u(10,Pap,KI,3) + u(11,Pap,KI,3) + u(12,Pap,KI,3) + u(13,Pap,KI,3) + u(14,Pap,KI,3)
     
      + u(15,Pap,KI,3) + u(16,Pap,KI,3) + u(17,Pap,KI,3) + u(18,Pap,KI,3) + u(19,Pap,KI,3) + u(20,Pap,KI,3) + u(21,Pap,KI,3) + u(22,Pap,KI,3) + u(23,Pap,KI,3) =E= 1 ; (LHS = 0, INFES = 1 ****)
     

---- Capacity1  =G=  Capacity goes up if we produce over the capacity

Capacity1(Pap,1)..  - y(Pap,1) + Cap(Pap,1) =G= 0 ; (LHS = 0)
     
Capacity1(Pap,2)..  - y(Pap,2) + Cap(Pap,2) =G= 0 ; (LHS = 0)
     
Capacity1(Pap,3)..  - y(Pap,3) + Cap(Pap,3) =G= 0 ; (LHS = 0)
     
Capacity1(SAW,1)..  - y(Mas,1) - y(Kus,1) - y(Kos,1) + Cap(SAW,1) =G= 0 ; (LHS = 0)
     
Capacity1(SAW,2)..  - y(Mas,2) - y(Kus,2) - y(Kos,2) + Cap(SAW,2) =G= 0 ; (LHS = 0)
     
Capacity1(SAW,3)..  - y(Mas,3) - y(Kus,3) - y(Kos,3) + Cap(SAW,3) =G= 0 ; (LHS = 0)
     
Capacity1(PLY,1)..  - y(Kuv,1) - y(Kov,1) + Cap(PLY,1) =G= 0 ; (LHS = 0)
     
Capacity1(PLY,2)..  - y(Kuv,2) - y(Kov,2) + Cap(PLY,2) =G= 0 ; (LHS = 0)
     
Capacity1(PLY,3)..  - y(Kuv,3) - y(Kov,3) + Cap(PLY,3) =G= 0 ; (LHS = 0)
     
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 22:25:36 Page 45
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 416


     Capacity1  =G=  Capacity goes up if we produce over the capacity

Capacity1(SPULP,1)..  - y(Hsel,1) + Cap(SPULP,1) =G= 0 ; (LHS = 0)
     
Capacity1(SPULP,2)..  - y(Hsel,2) + Cap(SPULP,2) =G= 0 ; (LHS = 0)
     
Capacity1(SPULP,3)..  - y(Hsel,3) + Cap(SPULP,3) =G= 0 ; (LHS = 0)
     
Capacity1(HPULP,1)..  - y(Lsel,1) + Cap(HPULP,1) =G= 0 ; (LHS = 0)
     
Capacity1(HPULP,2)..  - y(Lsel,2) + Cap(HPULP,2) =G= 0 ; (LHS = 0)
     
Capacity1(HPULP,3)..  - y(Lsel,3) + Cap(HPULP,3) =G= 0 ; (LHS = 0)
     

---- Capacity2  =G=  Make sure that the capacity does not go down

Capacity2(Pap,1)..  - y(Pap,1) + Cap(Pap,1) =G= 0 ; (LHS = 0)
     
Capacity2(Pap,2)..  - y(Pap,2) + Cap(Pap,2) =G= 0 ; (LHS = 0)
     
Capacity2(Pap,3)..  - y(Pap,3) + Cap(Pap,3) =G= 0 ; (LHS = 0)
     
Capacity2(SAW,1)..  - y(Mas,1) - y(Kus,1) - y(Kos,1) + Cap(SAW,1) =G= 0 ; (LHS = 0)
     
Capacity2(SAW,2)..  - y(Mas,2) - y(Kus,2) - y(Kos,2) + Cap(SAW,2) =G= 0 ; (LHS = 0)
     
Capacity2(SAW,3)..  - y(Mas,3) - y(Kus,3) - y(Kos,3) + Cap(SAW,3) =G= 0 ; (LHS = 0)
     
Capacity2(PLY,1)..  - y(Kuv,1) - y(Kov,1) + Cap(PLY,1) =G= 0 ; (LHS = 0)
     
Capacity2(PLY,2)..  - y(Kuv,2) - y(Kov,2) + Cap(PLY,2) =G= 0 ; (LHS = 0)
     
Capacity2(PLY,3)..  - y(Kuv,3) - y(Kov,3) + Cap(PLY,3) =G= 0 ; (LHS = 0)
     
Capacity2(SPULP,1)..  - y(Hsel,1) + Cap(SPULP,1) =G= 0 ; (LHS = 0)
     
Capacity2(SPULP,2)..  - y(Hsel,2) + Cap(SPULP,2) =G= 0 ; (LHS = 0)
     
Capacity2(SPULP,3)..  - y(Hsel,3) + Cap(SPULP,3) =G= 0 ; (LHS = 0)
     
Capacity2(HPULP,1)..  - y(Lsel,1) + Cap(HPULP,1) =G= 0 ; (LHS = 0)
     
Capacity2(HPULP,2)..  - y(Lsel,2) + Cap(HPULP,2) =G= 0 ; (LHS = 0)
     
Capacity2(HPULP,3)..  - y(Lsel,3) + Cap(HPULP,3) =G= 0 ; (LHS = 0)
     

---- MaxCapacity  =L=  Make sure we dont go over the maximum capacity

GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 22:25:36 Page 46
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 416


     MaxCapacity  =L=  Make sure we dont go over the maximum capacity

MaxCapacity(Pap,1)..  Cap(Pap,1) =L= 160000 ; (LHS = 0)
     
MaxCapacity(Pap,2)..  Cap(Pap,2) =L= 160000 ; (LHS = 0)
     
MaxCapacity(Pap,3)..  Cap(Pap,3) =L= 160000 ; (LHS = 0)
     
MaxCapacity(SAW,1)..  Cap(SAW,1) =L= 150000 ; (LHS = 0)
     
MaxCapacity(SAW,2)..  Cap(SAW,2) =L= 150000 ; (LHS = 0)
     
MaxCapacity(SAW,3)..  Cap(SAW,3) =L= 150000 ; (LHS = 0)
     
MaxCapacity(PLY,1)..  Cap(PLY,1) =L= 135000 ; (LHS = 0)
     
MaxCapacity(PLY,2)..  Cap(PLY,2) =L= 135000 ; (LHS = 0)
     
MaxCapacity(PLY,3)..  Cap(PLY,3) =L= 135000 ; (LHS = 0)
     
MaxCapacity(SPULP,1)..  Cap(SPULP,1) =L= 200000 ; (LHS = 0)
     
MaxCapacity(SPULP,2)..  Cap(SPULP,2) =L= 200000 ; (LHS = 0)
     
MaxCapacity(SPULP,3)..  Cap(SPULP,3) =L= 200000 ; (LHS = 0)
     
MaxCapacity(HPULP,1)..  Cap(HPULP,1) =L= 300000 ; (LHS = 0)
     
MaxCapacity(HPULP,2)..  Cap(HPULP,2) =L= 300000 ; (LHS = 0)
     
MaxCapacity(HPULP,3)..  Cap(HPULP,3) =L= 300000 ; (LHS = 0)
     

---- CapStart  =L=  Make sure the starting capacity is right

CapStart(Pap,1)..  Cap(Pap,1) =L= 80000 ; (LHS = 0)
     
CapStart(Pap,2)..  Cap(Pap,1) =L= 80000 ; (LHS = 0)
     
CapStart(Pap,3)..  Cap(Pap,1) =L= 80000 ; (LHS = 0)
     
CapStart(SAW,1)..  Cap(SAW,1) =L= 100000 ; (LHS = 0)
     
CapStart(SAW,2)..  Cap(SAW,1) =L= 100000 ; (LHS = 0)
     
CapStart(SAW,3)..  Cap(SAW,1) =L= 100000 ; (LHS = 0)
     
CapStart(PLY,1)..  Cap(PLY,1) =L= 90000 ; (LHS = 0)
     
CapStart(PLY,2)..  Cap(PLY,1) =L= 90000 ; (LHS = 0)
     
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 22:25:36 Page 47
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 416


     CapStart  =L=  Make sure the starting capacity is right

CapStart(PLY,3)..  Cap(PLY,1) =L= 90000 ; (LHS = 0)
     
CapStart(SPULP,1)..  Cap(SPULP,1) =L= 100000 ; (LHS = 0)
     
CapStart(SPULP,2)..  Cap(SPULP,1) =L= 100000 ; (LHS = 0)
     
CapStart(SPULP,3)..  Cap(SPULP,1) =L= 100000 ; (LHS = 0)
     
CapStart(HPULP,1)..  Cap(HPULP,1) =L= 150000 ; (LHS = 0)
     
CapStart(HPULP,2)..  Cap(HPULP,1) =L= 150000 ; (LHS = 0)
     
CapStart(HPULP,3)..  Cap(HPULP,1) =L= 150000 ; (LHS = 0)
     

---- PAP_HSEL  =L=  Proportion needed of HSEL for PAP

PAP_HSEL(1)..  - y(Hsel,1) + 0.2*y(Pap,1) =L= 0 ; (LHS = 0)
     
PAP_HSEL(2)..  - y(Hsel,2) + 0.2*y(Pap,2) =L= 0 ; (LHS = 0)
     
PAP_HSEL(3)..  - y(Hsel,3) + 0.2*y(Pap,3) =L= 0 ; (LHS = 0)
     

---- PAP_LSEL  =L=  Proportion needed of LSEL for PAP

PAP_LSEL(1)..  - y(Lsel,1) + 0.2*y(Pap,1) =L= 0 ; (LHS = 0)
     
PAP_LSEL(2)..  - y(Lsel,2) + 0.2*y(Pap,2) =L= 0 ; (LHS = 0)
     
PAP_LSEL(3)..  - y(Lsel,3) + 0.2*y(Pap,3) =L= 0 ; (LHS = 0)
     

---- PULP_Bal  =L=  Cant produce paper without pulp

PULP_Bal(Hsel,1)..  - y(Hsel,1) + 0.2*y(Pap,1) + 10000*u(2,Hsel,EU,1) + 10000*u(2,Hsel,IE,1) + 10000*u(2,Hsel,PA,1) + 10000*u(2,Hsel,KI,1) + 20000*u(3,Hsel,EU,1) + 20000*u(3,Hsel,IE,1) + 20000*u(3,Hsel,PA,1) + 20000*u(3,Hsel,KI,1) + 30000*u(4,Hsel,EU,1)
     
      + 30000*u(4,Hsel,IE,1) + 30000*u(4,Hsel,PA,1) + 30000*u(4,Hsel,KI,1) + 40000*u(5,Hsel,EU,1) + 40000*u(5,Hsel,IE,1) + 40000*u(5,Hsel,PA,1) + 40000*u(5,Hsel,KI,1) + 50000*u(6,Hsel,EU,1) + 50000*u(6,Hsel,IE,1) + 50000*u(6,Hsel,PA,1)
     
      + 50000*u(6,Hsel,KI,1) + 60000*u(7,Hsel,EU,1) + 60000*u(7,Hsel,IE,1) + 60000*u(7,Hsel,PA,1) + 60000*u(7,Hsel,KI,1) + 70000*u(8,Hsel,EU,1) + 70000*u(8,Hsel,IE,1) + 70000*u(8,Hsel,PA,1) + 70000*u(8,Hsel,KI,1) + 80000*u(9,Hsel,EU,1)
     
      + 80000*u(9,Hsel,IE,1) + 80000*u(9,Hsel,PA,1) + 80000*u(9,Hsel,KI,1) + 90000*u(10,Hsel,EU,1) + 90000*u(10,Hsel,IE,1) + 90000*u(10,Hsel,PA,1) + 90000*u(10,Hsel,KI,1) + 100000*u(11,Hsel,EU,1) + 100000*u(11,Hsel,IE,1) + 100000*u(11,Hsel,PA,1)
     
      + 100000*u(11,Hsel,KI,1) + 110000*u(12,Hsel,EU,1) + 110000*u(12,Hsel,IE,1) + 110000*u(12,Hsel,PA,1) + 110000*u(12,Hsel,KI,1) + 120000*u(13,Hsel,EU,1) + 120000*u(13,Hsel,IE,1) + 120000*u(13,Hsel,PA,1) + 120000*u(13,Hsel,KI,1) + 130000*u(14,Hsel,EU,1)
     
      + 130000*u(14,Hsel,IE,1) + 130000*u(14,Hsel,PA,1) + 130000*u(14,Hsel,KI,1) + 140000*u(15,Hsel,EU,1) + 140000*u(15,Hsel,IE,1) + 140000*u(15,Hsel,PA,1) + 140000*u(15,Hsel,KI,1) + 150000*u(16,Hsel,EU,1) + 150000*u(16,Hsel,IE,1) + 150000*u(16,Hsel,PA,1)
     
      + 150000*u(16,Hsel,KI,1) + 160000*u(17,Hsel,EU,1) + 160000*u(17,Hsel,IE,1) + 160000*u(17,Hsel,PA,1) + 160000*u(17,Hsel,KI,1) + 170000*u(18,Hsel,EU,1) + 170000*u(18,Hsel,IE,1) + 170000*u(18,Hsel,PA,1) + 170000*u(18,Hsel,KI,1) + 180000*u(19,Hsel,EU,1)
     
      + 180000*u(19,Hsel,IE,1) + 180000*u(19,Hsel,PA,1) + 180000*u(19,Hsel,KI,1) + 190000*u(20,Hsel,EU,1) + 190000*u(20,Hsel,IE,1) + 190000*u(20,Hsel,PA,1) + 190000*u(20,Hsel,KI,1) + 200000*u(21,Hsel,EU,1) + 200000*u(21,Hsel,IE,1) + 200000*u(21,Hsel,PA,1)
     
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 22:25:36 Page 48
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 416


     PULP_Bal  =L=  Cant produce paper without pulp     
     
      + 200000*u(21,Hsel,KI,1) + 210000*u(22,Hsel,EU,1) + 210000*u(22,Hsel,IE,1) + 210000*u(22,Hsel,PA,1) + 210000*u(22,Hsel,KI,1) + 220000*u(23,Hsel,EU,1) + 220000*u(23,Hsel,IE,1) + 220000*u(23,Hsel,PA,1) + 220000*u(23,Hsel,KI,1) =L= 0 ; (LHS = 0)
     
PULP_Bal(Hsel,2)..  - y(Hsel,2) + 0.2*y(Pap,2) + 10000*u(2,Hsel,EU,2) + 10000*u(2,Hsel,IE,2) + 10000*u(2,Hsel,PA,2) + 10000*u(2,Hsel,KI,2) + 20000*u(3,Hsel,EU,2) + 20000*u(3,Hsel,IE,2) + 20000*u(3,Hsel,PA,2) + 20000*u(3,Hsel,KI,2) + 30000*u(4,Hsel,EU,2)
     
      + 30000*u(4,Hsel,IE,2) + 30000*u(4,Hsel,PA,2) + 30000*u(4,Hsel,KI,2) + 40000*u(5,Hsel,EU,2) + 40000*u(5,Hsel,IE,2) + 40000*u(5,Hsel,PA,2) + 40000*u(5,Hsel,KI,2) + 50000*u(6,Hsel,EU,2) + 50000*u(6,Hsel,IE,2) + 50000*u(6,Hsel,PA,2)
     
      + 50000*u(6,Hsel,KI,2) + 60000*u(7,Hsel,EU,2) + 60000*u(7,Hsel,IE,2) + 60000*u(7,Hsel,PA,2) + 60000*u(7,Hsel,KI,2) + 70000*u(8,Hsel,EU,2) + 70000*u(8,Hsel,IE,2) + 70000*u(8,Hsel,PA,2) + 70000*u(8,Hsel,KI,2) + 80000*u(9,Hsel,EU,2)
     
      + 80000*u(9,Hsel,IE,2) + 80000*u(9,Hsel,PA,2) + 80000*u(9,Hsel,KI,2) + 90000*u(10,Hsel,EU,2) + 90000*u(10,Hsel,IE,2) + 90000*u(10,Hsel,PA,2) + 90000*u(10,Hsel,KI,2) + 100000*u(11,Hsel,EU,2) + 100000*u(11,Hsel,IE,2) + 100000*u(11,Hsel,PA,2)
     
      + 100000*u(11,Hsel,KI,2) + 110000*u(12,Hsel,EU,2) + 110000*u(12,Hsel,IE,2) + 110000*u(12,Hsel,PA,2) + 110000*u(12,Hsel,KI,2) + 120000*u(13,Hsel,EU,2) + 120000*u(13,Hsel,IE,2) + 120000*u(13,Hsel,PA,2) + 120000*u(13,Hsel,KI,2) + 130000*u(14,Hsel,EU,2)
     
      + 130000*u(14,Hsel,IE,2) + 130000*u(14,Hsel,PA,2) + 130000*u(14,Hsel,KI,2) + 140000*u(15,Hsel,EU,2) + 140000*u(15,Hsel,IE,2) + 140000*u(15,Hsel,PA,2) + 140000*u(15,Hsel,KI,2) + 150000*u(16,Hsel,EU,2) + 150000*u(16,Hsel,IE,2) + 150000*u(16,Hsel,PA,2)
     
      + 150000*u(16,Hsel,KI,2) + 160000*u(17,Hsel,EU,2) + 160000*u(17,Hsel,IE,2) + 160000*u(17,Hsel,PA,2) + 160000*u(17,Hsel,KI,2) + 170000*u(18,Hsel,EU,2) + 170000*u(18,Hsel,IE,2) + 170000*u(18,Hsel,PA,2) + 170000*u(18,Hsel,KI,2) + 180000*u(19,Hsel,EU,2)
     
      + 180000*u(19,Hsel,IE,2) + 180000*u(19,Hsel,PA,2) + 180000*u(19,Hsel,KI,2) + 190000*u(20,Hsel,EU,2) + 190000*u(20,Hsel,IE,2) + 190000*u(20,Hsel,PA,2) + 190000*u(20,Hsel,KI,2) + 200000*u(21,Hsel,EU,2) + 200000*u(21,Hsel,IE,2) + 200000*u(21,Hsel,PA,2)
     
      + 200000*u(21,Hsel,KI,2) + 210000*u(22,Hsel,EU,2) + 210000*u(22,Hsel,IE,2) + 210000*u(22,Hsel,PA,2) + 210000*u(22,Hsel,KI,2) + 220000*u(23,Hsel,EU,2) + 220000*u(23,Hsel,IE,2) + 220000*u(23,Hsel,PA,2) + 220000*u(23,Hsel,KI,2) =L= 0 ; (LHS = 0)
     
PULP_Bal(Hsel,3)..  - y(Hsel,3) + 0.2*y(Pap,3) + 10000*u(2,Hsel,EU,3) + 10000*u(2,Hsel,IE,3) + 10000*u(2,Hsel,PA,3) + 10000*u(2,Hsel,KI,3) + 20000*u(3,Hsel,EU,3) + 20000*u(3,Hsel,IE,3) + 20000*u(3,Hsel,PA,3) + 20000*u(3,Hsel,KI,3) + 30000*u(4,Hsel,EU,3)
     
      + 30000*u(4,Hsel,IE,3) + 30000*u(4,Hsel,PA,3) + 30000*u(4,Hsel,KI,3) + 40000*u(5,Hsel,EU,3) + 40000*u(5,Hsel,IE,3) + 40000*u(5,Hsel,PA,3) + 40000*u(5,Hsel,KI,3) + 50000*u(6,Hsel,EU,3) + 50000*u(6,Hsel,IE,3) + 50000*u(6,Hsel,PA,3)
     
      + 50000*u(6,Hsel,KI,3) + 60000*u(7,Hsel,EU,3) + 60000*u(7,Hsel,IE,3) + 60000*u(7,Hsel,PA,3) + 60000*u(7,Hsel,KI,3) + 70000*u(8,Hsel,EU,3) + 70000*u(8,Hsel,IE,3) + 70000*u(8,Hsel,PA,3) + 70000*u(8,Hsel,KI,3) + 80000*u(9,Hsel,EU,3)
     
      + 80000*u(9,Hsel,IE,3) + 80000*u(9,Hsel,PA,3) + 80000*u(9,Hsel,KI,3) + 90000*u(10,Hsel,EU,3) + 90000*u(10,Hsel,IE,3) + 90000*u(10,Hsel,PA,3) + 90000*u(10,Hsel,KI,3) + 100000*u(11,Hsel,EU,3) + 100000*u(11,Hsel,IE,3) + 100000*u(11,Hsel,PA,3)
     
      + 100000*u(11,Hsel,KI,3) + 110000*u(12,Hsel,EU,3) + 110000*u(12,Hsel,IE,3) + 110000*u(12,Hsel,PA,3) + 110000*u(12,Hsel,KI,3) + 120000*u(13,Hsel,EU,3) + 120000*u(13,Hsel,IE,3) + 120000*u(13,Hsel,PA,3) + 120000*u(13,Hsel,KI,3) + 130000*u(14,Hsel,EU,3)
     
      + 130000*u(14,Hsel,IE,3) + 130000*u(14,Hsel,PA,3) + 130000*u(14,Hsel,KI,3) + 140000*u(15,Hsel,EU,3) + 140000*u(15,Hsel,IE,3) + 140000*u(15,Hsel,PA,3) + 140000*u(15,Hsel,KI,3) + 150000*u(16,Hsel,EU,3) + 150000*u(16,Hsel,IE,3) + 150000*u(16,Hsel,PA,3)
     
      + 150000*u(16,Hsel,KI,3) + 160000*u(17,Hsel,EU,3) + 160000*u(17,Hsel,IE,3) + 160000*u(17,Hsel,PA,3) + 160000*u(17,Hsel,KI,3) + 170000*u(18,Hsel,EU,3) + 170000*u(18,Hsel,IE,3) + 170000*u(18,Hsel,PA,3) + 170000*u(18,Hsel,KI,3) + 180000*u(19,Hsel,EU,3)
     
      + 180000*u(19,Hsel,IE,3) + 180000*u(19,Hsel,PA,3) + 180000*u(19,Hsel,KI,3) + 190000*u(20,Hsel,EU,3) + 190000*u(20,Hsel,IE,3) + 190000*u(20,Hsel,PA,3) + 190000*u(20,Hsel,KI,3) + 200000*u(21,Hsel,EU,3) + 200000*u(21,Hsel,IE,3) + 200000*u(21,Hsel,PA,3)
     
      + 200000*u(21,Hsel,KI,3) + 210000*u(22,Hsel,EU,3) + 210000*u(22,Hsel,IE,3) + 210000*u(22,Hsel,PA,3) + 210000*u(22,Hsel,KI,3) + 220000*u(23,Hsel,EU,3) + 220000*u(23,Hsel,IE,3) + 220000*u(23,Hsel,PA,3) + 220000*u(23,Hsel,KI,3) =L= 0 ; (LHS = 0)
     
PULP_Bal(Lsel,1)..  - y(Lsel,1) + 0.2*y(Pap,1) + 10000*u(2,Lsel,EU,1) + 10000*u(2,Lsel,IE,1) + 10000*u(2,Lsel,PA,1) + 10000*u(2,Lsel,KI,1) + 20000*u(3,Lsel,EU,1) + 20000*u(3,Lsel,IE,1) + 20000*u(3,Lsel,PA,1) + 20000*u(3,Lsel,KI,1) + 30000*u(4,Lsel,EU,1)
     
      + 30000*u(4,Lsel,IE,1) + 30000*u(4,Lsel,PA,1) + 30000*u(4,Lsel,KI,1) + 40000*u(5,Lsel,EU,1) + 40000*u(5,Lsel,IE,1) + 40000*u(5,Lsel,PA,1) + 40000*u(5,Lsel,KI,1) + 50000*u(6,Lsel,EU,1) + 50000*u(6,Lsel,IE,1) + 50000*u(6,Lsel,PA,1)
     
      + 50000*u(6,Lsel,KI,1) + 60000*u(7,Lsel,EU,1) + 60000*u(7,Lsel,IE,1) + 60000*u(7,Lsel,PA,1) + 60000*u(7,Lsel,KI,1) + 70000*u(8,Lsel,EU,1) + 70000*u(8,Lsel,IE,1) + 70000*u(8,Lsel,PA,1) + 70000*u(8,Lsel,KI,1) + 80000*u(9,Lsel,EU,1)
     
      + 80000*u(9,Lsel,IE,1) + 80000*u(9,Lsel,PA,1) + 80000*u(9,Lsel,KI,1) + 90000*u(10,Lsel,EU,1) + 90000*u(10,Lsel,IE,1) + 90000*u(10,Lsel,PA,1) + 90000*u(10,Lsel,KI,1) + 100000*u(11,Lsel,EU,1) + 100000*u(11,Lsel,IE,1) + 100000*u(11,Lsel,PA,1)
     
      + 100000*u(11,Lsel,KI,1) + 110000*u(12,Lsel,EU,1) + 110000*u(12,Lsel,IE,1) + 110000*u(12,Lsel,PA,1) + 110000*u(12,Lsel,KI,1) + 120000*u(13,Lsel,EU,1) + 120000*u(13,Lsel,IE,1) + 120000*u(13,Lsel,PA,1) + 120000*u(13,Lsel,KI,1) + 130000*u(14,Lsel,EU,1)
     
      + 130000*u(14,Lsel,IE,1) + 130000*u(14,Lsel,PA,1) + 130000*u(14,Lsel,KI,1) + 140000*u(15,Lsel,EU,1) + 140000*u(15,Lsel,IE,1) + 140000*u(15,Lsel,PA,1) + 140000*u(15,Lsel,KI,1) + 150000*u(16,Lsel,EU,1) + 150000*u(16,Lsel,IE,1) + 150000*u(16,Lsel,PA,1)
     
      + 150000*u(16,Lsel,KI,1) + 160000*u(17,Lsel,EU,1) + 160000*u(17,Lsel,IE,1) + 160000*u(17,Lsel,PA,1) + 160000*u(17,Lsel,KI,1) + 170000*u(18,Lsel,EU,1) + 170000*u(18,Lsel,IE,1) + 170000*u(18,Lsel,PA,1) + 170000*u(18,Lsel,KI,1) + 180000*u(19,Lsel,EU,1)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 22:25:36 Page 49
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 416


     PULP_Bal  =L=  Cant produce paper without pulp     
     
      + 180000*u(19,Lsel,IE,1) + 180000*u(19,Lsel,PA,1) + 180000*u(19,Lsel,KI,1) + 190000*u(20,Lsel,EU,1) + 190000*u(20,Lsel,IE,1) + 190000*u(20,Lsel,PA,1) + 190000*u(20,Lsel,KI,1) + 200000*u(21,Lsel,EU,1) + 200000*u(21,Lsel,IE,1) + 200000*u(21,Lsel,PA,1)
     
      + 200000*u(21,Lsel,KI,1) + 210000*u(22,Lsel,EU,1) + 210000*u(22,Lsel,IE,1) + 210000*u(22,Lsel,PA,1) + 210000*u(22,Lsel,KI,1) + 220000*u(23,Lsel,EU,1) + 220000*u(23,Lsel,IE,1) + 220000*u(23,Lsel,PA,1) + 220000*u(23,Lsel,KI,1) =L= 0 ; (LHS = 0)
     
PULP_Bal(Lsel,2)..  - y(Lsel,2) + 0.2*y(Pap,2) + 10000*u(2,Lsel,EU,2) + 10000*u(2,Lsel,IE,2) + 10000*u(2,Lsel,PA,2) + 10000*u(2,Lsel,KI,2) + 20000*u(3,Lsel,EU,2) + 20000*u(3,Lsel,IE,2) + 20000*u(3,Lsel,PA,2) + 20000*u(3,Lsel,KI,2) + 30000*u(4,Lsel,EU,2)
     
      + 30000*u(4,Lsel,IE,2) + 30000*u(4,Lsel,PA,2) + 30000*u(4,Lsel,KI,2) + 40000*u(5,Lsel,EU,2) + 40000*u(5,Lsel,IE,2) + 40000*u(5,Lsel,PA,2) + 40000*u(5,Lsel,KI,2) + 50000*u(6,Lsel,EU,2) + 50000*u(6,Lsel,IE,2) + 50000*u(6,Lsel,PA,2)
     
      + 50000*u(6,Lsel,KI,2) + 60000*u(7,Lsel,EU,2) + 60000*u(7,Lsel,IE,2) + 60000*u(7,Lsel,PA,2) + 60000*u(7,Lsel,KI,2) + 70000*u(8,Lsel,EU,2) + 70000*u(8,Lsel,IE,2) + 70000*u(8,Lsel,PA,2) + 70000*u(8,Lsel,KI,2) + 80000*u(9,Lsel,EU,2)
     
      + 80000*u(9,Lsel,IE,2) + 80000*u(9,Lsel,PA,2) + 80000*u(9,Lsel,KI,2) + 90000*u(10,Lsel,EU,2) + 90000*u(10,Lsel,IE,2) + 90000*u(10,Lsel,PA,2) + 90000*u(10,Lsel,KI,2) + 100000*u(11,Lsel,EU,2) + 100000*u(11,Lsel,IE,2) + 100000*u(11,Lsel,PA,2)
     
      + 100000*u(11,Lsel,KI,2) + 110000*u(12,Lsel,EU,2) + 110000*u(12,Lsel,IE,2) + 110000*u(12,Lsel,PA,2) + 110000*u(12,Lsel,KI,2) + 120000*u(13,Lsel,EU,2) + 120000*u(13,Lsel,IE,2) + 120000*u(13,Lsel,PA,2) + 120000*u(13,Lsel,KI,2) + 130000*u(14,Lsel,EU,2)
     
      + 130000*u(14,Lsel,IE,2) + 130000*u(14,Lsel,PA,2) + 130000*u(14,Lsel,KI,2) + 140000*u(15,Lsel,EU,2) + 140000*u(15,Lsel,IE,2) + 140000*u(15,Lsel,PA,2) + 140000*u(15,Lsel,KI,2) + 150000*u(16,Lsel,EU,2) + 150000*u(16,Lsel,IE,2) + 150000*u(16,Lsel,PA,2)
     
      + 150000*u(16,Lsel,KI,2) + 160000*u(17,Lsel,EU,2) + 160000*u(17,Lsel,IE,2) + 160000*u(17,Lsel,PA,2) + 160000*u(17,Lsel,KI,2) + 170000*u(18,Lsel,EU,2) + 170000*u(18,Lsel,IE,2) + 170000*u(18,Lsel,PA,2) + 170000*u(18,Lsel,KI,2) + 180000*u(19,Lsel,EU,2)
     
      + 180000*u(19,Lsel,IE,2) + 180000*u(19,Lsel,PA,2) + 180000*u(19,Lsel,KI,2) + 190000*u(20,Lsel,EU,2) + 190000*u(20,Lsel,IE,2) + 190000*u(20,Lsel,PA,2) + 190000*u(20,Lsel,KI,2) + 200000*u(21,Lsel,EU,2) + 200000*u(21,Lsel,IE,2) + 200000*u(21,Lsel,PA,2)
     
      + 200000*u(21,Lsel,KI,2) + 210000*u(22,Lsel,EU,2) + 210000*u(22,Lsel,IE,2) + 210000*u(22,Lsel,PA,2) + 210000*u(22,Lsel,KI,2) + 220000*u(23,Lsel,EU,2) + 220000*u(23,Lsel,IE,2) + 220000*u(23,Lsel,PA,2) + 220000*u(23,Lsel,KI,2) =L= 0 ; (LHS = 0)
     
PULP_Bal(Lsel,3)..  - y(Lsel,3) + 0.2*y(Pap,3) + 10000*u(2,Lsel,EU,3) + 10000*u(2,Lsel,IE,3) + 10000*u(2,Lsel,PA,3) + 10000*u(2,Lsel,KI,3) + 20000*u(3,Lsel,EU,3) + 20000*u(3,Lsel,IE,3) + 20000*u(3,Lsel,PA,3) + 20000*u(3,Lsel,KI,3) + 30000*u(4,Lsel,EU,3)
     
      + 30000*u(4,Lsel,IE,3) + 30000*u(4,Lsel,PA,3) + 30000*u(4,Lsel,KI,3) + 40000*u(5,Lsel,EU,3) + 40000*u(5,Lsel,IE,3) + 40000*u(5,Lsel,PA,3) + 40000*u(5,Lsel,KI,3) + 50000*u(6,Lsel,EU,3) + 50000*u(6,Lsel,IE,3) + 50000*u(6,Lsel,PA,3)
     
      + 50000*u(6,Lsel,KI,3) + 60000*u(7,Lsel,EU,3) + 60000*u(7,Lsel,IE,3) + 60000*u(7,Lsel,PA,3) + 60000*u(7,Lsel,KI,3) + 70000*u(8,Lsel,EU,3) + 70000*u(8,Lsel,IE,3) + 70000*u(8,Lsel,PA,3) + 70000*u(8,Lsel,KI,3) + 80000*u(9,Lsel,EU,3)
     
      + 80000*u(9,Lsel,IE,3) + 80000*u(9,Lsel,PA,3) + 80000*u(9,Lsel,KI,3) + 90000*u(10,Lsel,EU,3) + 90000*u(10,Lsel,IE,3) + 90000*u(10,Lsel,PA,3) + 90000*u(10,Lsel,KI,3) + 100000*u(11,Lsel,EU,3) + 100000*u(11,Lsel,IE,3) + 100000*u(11,Lsel,PA,3)
     
      + 100000*u(11,Lsel,KI,3) + 110000*u(12,Lsel,EU,3) + 110000*u(12,Lsel,IE,3) + 110000*u(12,Lsel,PA,3) + 110000*u(12,Lsel,KI,3) + 120000*u(13,Lsel,EU,3) + 120000*u(13,Lsel,IE,3) + 120000*u(13,Lsel,PA,3) + 120000*u(13,Lsel,KI,3) + 130000*u(14,Lsel,EU,3)
     
      + 130000*u(14,Lsel,IE,3) + 130000*u(14,Lsel,PA,3) + 130000*u(14,Lsel,KI,3) + 140000*u(15,Lsel,EU,3) + 140000*u(15,Lsel,IE,3) + 140000*u(15,Lsel,PA,3) + 140000*u(15,Lsel,KI,3) + 150000*u(16,Lsel,EU,3) + 150000*u(16,Lsel,IE,3) + 150000*u(16,Lsel,PA,3)
     
      + 150000*u(16,Lsel,KI,3) + 160000*u(17,Lsel,EU,3) + 160000*u(17,Lsel,IE,3) + 160000*u(17,Lsel,PA,3) + 160000*u(17,Lsel,KI,3) + 170000*u(18,Lsel,EU,3) + 170000*u(18,Lsel,IE,3) + 170000*u(18,Lsel,PA,3) + 170000*u(18,Lsel,KI,3) + 180000*u(19,Lsel,EU,3)
     
      + 180000*u(19,Lsel,IE,3) + 180000*u(19,Lsel,PA,3) + 180000*u(19,Lsel,KI,3) + 190000*u(20,Lsel,EU,3) + 190000*u(20,Lsel,IE,3) + 190000*u(20,Lsel,PA,3) + 190000*u(20,Lsel,KI,3) + 200000*u(21,Lsel,EU,3) + 200000*u(21,Lsel,IE,3) + 200000*u(21,Lsel,PA,3)
     
      + 200000*u(21,Lsel,KI,3) + 210000*u(22,Lsel,EU,3) + 210000*u(22,Lsel,IE,3) + 210000*u(22,Lsel,PA,3) + 210000*u(22,Lsel,KI,3) + 220000*u(23,Lsel,EU,3) + 220000*u(23,Lsel,IE,3) + 220000*u(23,Lsel,PA,3) + 220000*u(23,Lsel,KI,3) =L= 0 ; (LHS = 0)
     

---- PROFIT  =E=  Profit is what we gain minus what we spend

PROFIT(1)..  0.542*y(Mas,1) + 0.492*y(Kus,1) + 0.442*y(Kos,1) + 2.492*y(Kuv,1) + 2.592*y(Kov,1) + 0.82*y(Hsel,1) + 0.8*y(Lsel,1) + 1.7*y(Pap,1) + 0.19*s(Mat,1) + 0.15*s(Kut,1) + 0.12*s(Kot,1) + 0.18*s(Mak,1) + 0.15*s(Kuk,1) + 0.15*s(Kok,1)
     
      + 2000*r(2,Mat,1) + 1550*r(2,Kut,1) + 1500*r(2,Kot,1) + 1820*r(2,Mak,1) + 1530*r(2,Kuk,1) + 1520*r(2,Kok,1) + 4200*r(3,Mat,1) + 3200*r(3,Kut,1) + 3600*r(3,Kot,1) + 3680*r(3,Mak,1) + 3120*r(3,Kuk,1) + 3080*r(3,Kok,1) + 6600*r(4,Mat,1)
     
      + 4950*r(4,Kut,1) + 6300*r(4,Kot,1) + 5580*r(4,Mak,1) + 4770*r(4,Kuk,1) + 4680*r(4,Kok,1) + 9200*r(5,Mat,1) + 6800*r(5,Kut,1) + 9600*r(5,Kot,1) + 7520*r(5,Mak,1) + 6480*r(5,Kuk,1) + 6320*r(5,Kok,1) + 12000*r(6,Mat,1) + 8750*r(6,Kut,1)
     
      + 13500*r(6,Kot,1) + 9500*r(6,Mak,1) + 8250*r(6,Kuk,1) + 8000*r(6,Kok,1) + 15000*r(7,Mat,1) + 10800*r(7,Kut,1) + 18000*r(7,Kot,1) + 11520*r(7,Mak,1) + 10080*r(7,Kuk,1) + 9720*r(7,Kok,1) + 18200*r(8,Mat,1) + 12950*r(8,Kut,1) + 23100*r(8,Kot,1)
     
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 22:25:36 Page 50
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 416


     PROFIT  =E=  Profit is what we gain minus what we spend     
     
      + 13580*r(8,Mak,1) + 11970*r(8,Kuk,1) + 11480*r(8,Kok,1) + 21600*r(9,Mat,1) + 15200*r(9,Kut,1) + 28800*r(9,Kot,1) + 15680*r(9,Mak,1) + 13920*r(9,Kuk,1) + 13280*r(9,Kok,1) + 25200*r(10,Mat,1) + 17550*r(10,Kut,1) + 35100*r(10,Kot,1)
     
      + 17820*r(10,Mak,1) + 15930*r(10,Kuk,1) + 15120*r(10,Kok,1) + 29000*r(11,Mat,1) + 20000*r(11,Kut,1) + 42000*r(11,Kot,1) + 20000*r(11,Mak,1) + 18000*r(11,Kuk,1) + 17000*r(11,Kok,1) + 33000*r(12,Mat,1) + 22550*r(12,Kut,1) + 49500*r(12,Kot,1)
     
      + 22220*r(12,Mak,1) + 20130*r(12,Kuk,1) + 18920*r(12,Kok,1) + 37200*r(13,Mat,1) + 25200*r(13,Kut,1) + 57600*r(13,Kot,1) + 24480*r(13,Mak,1) + 22320*r(13,Kuk,1) + 20880*r(13,Kok,1) + 41600*r(14,Mat,1) + 27950*r(14,Kut,1) + 66300*r(14,Kot,1)
     
      + 26780*r(14,Mak,1) + 24570*r(14,Kuk,1) + 22880*r(14,Kok,1) + 46200*r(15,Mat,1) + 30800*r(15,Kut,1) + 75600*r(15,Kot,1) + 29120*r(15,Mak,1) + 26880*r(15,Kuk,1) + 24920*r(15,Kok,1) + 51000*r(16,Mat,1) + 33750*r(16,Kut,1) + 85500*r(16,Kot,1)
     
      + 31500*r(16,Mak,1) + 29250*r(16,Kuk,1) + 27000*r(16,Kok,1) + 56000*r(17,Mat,1) + 36800*r(17,Kut,1) + 96000*r(17,Kot,1) + 33920*r(17,Mak,1) + 31680*r(17,Kuk,1) + 29120*r(17,Kok,1) + 61200*r(18,Mat,1) + 39950*r(18,Kut,1) + 107100*r(18,Kot,1)
     
      + 36380*r(18,Mak,1) + 34170*r(18,Kuk,1) + 31280*r(18,Kok,1) + 66600*r(19,Mat,1) + 43200*r(19,Kut,1) + 118800*r(19,Kot,1) + 38880*r(19,Mak,1) + 36720*r(19,Kuk,1) + 33480*r(19,Kok,1) + 72200*r(20,Mat,1) + 46550*r(20,Kut,1) + 131100*r(20,Kot,1)
     
      + 41420*r(20,Mak,1) + 39330*r(20,Kuk,1) + 35720*r(20,Kok,1) + 78000*r(21,Mat,1) + 50000*r(21,Kut,1) + 144000*r(21,Kot,1) + 44000*r(21,Mak,1) + 42000*r(21,Kuk,1) + 38000*r(21,Kok,1) + 84000*r(22,Mat,1) + 53550*r(22,Kut,1) + 157500*r(22,Kot,1)
     
      + 46620*r(22,Mak,1) + 44730*r(22,Kuk,1) + 40320*r(22,Kok,1) + 90200*r(23,Mat,1) + 57200*r(23,Kut,1) + 171600*r(23,Kot,1) + 49280*r(23,Mak,1) + 47520*r(23,Kuk,1) + 42680*r(23,Kok,1) + 96600*r(24,Mat,1) + 60950*r(24,Kut,1) + 186300*r(24,Kot,1)
     
      + 51980*r(24,Mak,1) + 50370*r(24,Kuk,1) + 45080*r(24,Kok,1) + 103200*r(25,Mat,1) + 64800*r(25,Kut,1) + 201600*r(25,Kot,1) + 54720*r(25,Mak,1) + 53280*r(25,Kuk,1) + 47520*r(25,Kok,1) + 110000*r(26,Mat,1) + 68750*r(26,Kut,1) + 217500*r(26,Kot,1)
     
      + 57500*r(26,Mak,1) + 56250*r(26,Kuk,1) + 50000*r(26,Kok,1) + 117000*r(27,Mat,1) + 72800*r(27,Kut,1) + 234000*r(27,Kot,1) + 60320*r(27,Mak,1) + 59280*r(27,Kuk,1) + 52520*r(27,Kok,1) + 124200*r(28,Mat,1) + 76950*r(28,Kut,1) + 251100*r(28,Kot,1)
     
      + 63180*r(28,Mak,1) + 62370*r(28,Kuk,1) + 55080*r(28,Kok,1) + 131600*r(29,Mat,1) + 81200*r(29,Kut,1) + 268800*r(29,Kot,1) + 66080*r(29,Mak,1) + 65520*r(29,Kuk,1) + 57680*r(29,Kok,1) + 139200*r(30,Mat,1) + 85550*r(30,Kut,1) + 287100*r(30,Kot,1)
     
      + 69020*r(30,Mak,1) + 68730*r(30,Kuk,1) + 60320*r(30,Kok,1) + 147000*r(31,Mat,1) + 90000*r(31,Kut,1) + 306000*r(31,Kot,1) + 72000*r(31,Mak,1) + 72000*r(31,Kuk,1) + 63000*r(31,Kok,1) + 155000*r(32,Mat,1) + 94550*r(32,Kut,1) + 325500*r(32,Kot,1)
     
      + 75020*r(32,Mak,1) + 75330*r(32,Kuk,1) + 65720*r(32,Kok,1) + 163200*r(33,Mat,1) + 99200*r(33,Kut,1) + 345600*r(33,Kot,1) + 78080*r(33,Mak,1) + 78720*r(33,Kuk,1) + 68480*r(33,Kok,1) + 171600*r(34,Mat,1) + 103950*r(34,Kut,1) + 366300*r(34,Kot,1)
     
      + 81180*r(34,Mak,1) + 82170*r(34,Kuk,1) + 71280*r(34,Kok,1) + 180200*r(35,Mat,1) + 108800*r(35,Kut,1) + 387600*r(35,Kot,1) + 84320*r(35,Mak,1) + 85680*r(35,Kuk,1) + 74120*r(35,Kok,1) + 189000*r(36,Mat,1) + 113750*r(36,Kut,1) + 409500*r(36,Kot,1)
     
      + 87500*r(36,Mak,1) + 89250*r(36,Kuk,1) + 77000*r(36,Kok,1) + 198000*r(37,Mat,1) + 118800*r(37,Kut,1) + 432000*r(37,Kot,1) + 90720*r(37,Mak,1) + 92880*r(37,Kuk,1) + 79920*r(37,Kok,1) + 207200*r(38,Mat,1) + 123950*r(38,Kut,1) + 455100*r(38,Kot,1)
     
      + 93980*r(38,Mak,1) + 96570*r(38,Kuk,1) + 82880*r(38,Kok,1) + 216600*r(39,Mat,1) + 129200*r(39,Kut,1) + 478800*r(39,Kot,1) + 97280*r(39,Mak,1) + 100320*r(39,Kuk,1) + 85880*r(39,Kok,1) + 226200*r(40,Mat,1) + 134550*r(40,Kut,1) + 503100*r(40,Kot,1)
     
      + 100620*r(40,Mak,1) + 104130*r(40,Kuk,1) + 88920*r(40,Kok,1) + 236000*r(41,Mat,1) + 140000*r(41,Kut,1) + 528000*r(41,Kot,1) + 104000*r(41,Mak,1) + 108000*r(41,Kuk,1) + 92000*r(41,Kok,1) + 246000*r(42,Mat,1) + 145550*r(42,Kut,1) + 553500*r(42,Kot,1)
     
      + 107420*r(42,Mak,1) + 111930*r(42,Kuk,1) + 95120*r(42,Kok,1) + 256200*r(43,Mat,1) + 151200*r(43,Kut,1) + 579600*r(43,Kot,1) + 110880*r(43,Mak,1) + 115920*r(43,Kuk,1) + 98280*r(43,Kok,1) + 266600*r(44,Mat,1) + 156950*r(44,Kut,1) + 606300*r(44,Kot,1)
     
      + 114380*r(44,Mak,1) + 119970*r(44,Kuk,1) + 101480*r(44,Kok,1) + 277200*r(45,Mat,1) + 162800*r(45,Kut,1) + 633600*r(45,Kot,1) + 117920*r(45,Mak,1) + 124080*r(45,Kuk,1) + 104720*r(45,Kok,1) + 288000*r(46,Mat,1) + 168750*r(46,Kut,1)
     
      + 661500*r(46,Kot,1) + 121500*r(46,Mak,1) + 128250*r(46,Kuk,1) + 108000*r(46,Kok,1) + 299000*r(47,Mat,1) + 174800*r(47,Kut,1) + 690000*r(47,Kot,1) + 125120*r(47,Mak,1) + 132480*r(47,Kuk,1) + 111320*r(47,Kok,1) + 310200*r(48,Mat,1)
     
      + 180950*r(48,Kut,1) + 719100*r(48,Kot,1) + 128780*r(48,Mak,1) + 136770*r(48,Kuk,1) + 114680*r(48,Kok,1) + 321600*r(49,Mat,1) + 187200*r(49,Kut,1) + 748800*r(49,Kot,1) + 132480*r(49,Mak,1) + 141120*r(49,Kuk,1) + 118080*r(49,Kok,1)
     
      + 333200*r(50,Mat,1) + 193550*r(50,Kut,1) + 779100*r(50,Kot,1) + 136220*r(50,Mak,1) + 145530*r(50,Kuk,1) + 121520*r(50,Kok,1) + 345000*r(51,Mat,1) + 200000*r(51,Kut,1) + 810000*r(51,Kot,1) + 140000*r(51,Mak,1) + 150000*r(51,Kuk,1)
     
      + 125000*r(51,Kok,1) + 357000*r(52,Mat,1) + 206550*r(52,Kut,1) + 841500*r(52,Kot,1) + 143820*r(52,Mak,1) + 154530*r(52,Kuk,1) + 128520*r(52,Kok,1) + 369200*r(53,Mat,1) + 213200*r(53,Kut,1) + 873600*r(53,Kot,1) + 147680*r(53,Mak,1)
     
      + 159120*r(53,Kuk,1) + 132080*r(53,Kok,1) + 381600*r(54,Mat,1) + 219950*r(54,Kut,1) + 906300*r(54,Kot,1) + 151580*r(54,Mak,1) + 163770*r(54,Kuk,1) + 135680*r(54,Kok,1) + 394200*r(55,Mat,1) + 226800*r(55,Kut,1) + 939600*r(55,Kot,1)
     
      + 155520*r(55,Mak,1) + 168480*r(55,Kuk,1) + 139320*r(55,Kok,1) + 407000*r(56,Mat,1) + 233750*r(56,Kut,1) + 973500*r(56,Kot,1) + 159500*r(56,Mak,1) + 173250*r(56,Kuk,1) + 143000*r(56,Kok,1) + 420000*r(57,Mat,1) + 240800*r(57,Kut,1)
     
      + 1008000*r(57,Kot,1) + 163520*r(57,Mak,1) + 178080*r(57,Kuk,1) + 146720*r(57,Kok,1) + 433200*r(58,Mat,1) + 247950*r(58,Kut,1) + 1043100*r(58,Kot,1) + 167580*r(58,Mak,1) + 182970*r(58,Kuk,1) + 150480*r(58,Kok,1) + 446600*r(59,Mat,1)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 22:25:36 Page 51
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 416


     PROFIT  =E=  Profit is what we gain minus what we spend     
     
      + 255200*r(59,Kut,1) + 1078800*r(59,Kot,1) + 171680*r(59,Mak,1) + 187920*r(59,Kuk,1) + 154280*r(59,Kok,1) + 460200*r(60,Mat,1) + 262550*r(60,Kut,1) + 1115100*r(60,Kot,1) + 175820*r(60,Mak,1) + 192930*r(60,Kuk,1) + 158120*r(60,Kok,1)
     
      + 474000*r(61,Mat,1) + 270000*r(61,Kut,1) + 1152000*r(61,Kot,1) + 180000*r(61,Mak,1) + 198000*r(61,Kuk,1) + 162000*r(61,Kok,1) + 488000*r(62,Mat,1) + 277550*r(62,Kut,1) + 1189500*r(62,Kot,1) + 184220*r(62,Mak,1) + 203130*r(62,Kuk,1)
     
      + 165920*r(62,Kok,1) + 502200*r(63,Mat,1) + 285200*r(63,Kut,1) + 1227600*r(63,Kot,1) + 188480*r(63,Mak,1) + 208320*r(63,Kuk,1) + 169880*r(63,Kok,1) + 516600*r(64,Mat,1) + 292950*r(64,Kut,1) + 1266300*r(64,Kot,1) + 192780*r(64,Mak,1)
     
      + 213570*r(64,Kuk,1) + 173880*r(64,Kok,1) + 531200*r(65,Mat,1) + 300800*r(65,Kut,1) + 1305600*r(65,Kot,1) + 197120*r(65,Mak,1) + 218880*r(65,Kuk,1) + 177920*r(65,Kok,1) + 546000*r(66,Mat,1) + 308750*r(66,Kut,1) + 1345500*r(66,Kot,1)
     
      + 201500*r(66,Mak,1) + 224250*r(66,Kuk,1) + 182000*r(66,Kok,1) + 561000*r(67,Mat,1) + 316800*r(67,Kut,1) + 1386000*r(67,Kot,1) + 205920*r(67,Mak,1) + 229680*r(67,Kuk,1) + 186120*r(67,Kok,1) + 576200*r(68,Mat,1) + 324950*r(68,Kut,1)
     
      + 1427100*r(68,Kot,1) + 210380*r(68,Mak,1) + 235170*r(68,Kuk,1) + 190280*r(68,Kok,1) + 591600*r(69,Mat,1) + 333200*r(69,Kut,1) + 1468800*r(69,Kot,1) + 214880*r(69,Mak,1) + 240720*r(69,Kuk,1) + 194480*r(69,Kok,1) + 607200*r(70,Mat,1)
     
      + 341550*r(70,Kut,1) + 1511100*r(70,Kot,1) + 219420*r(70,Mak,1) + 246330*r(70,Kuk,1) + 198720*r(70,Kok,1) + 623000*r(71,Mat,1) + 350000*r(71,Kut,1) + 1554000*r(71,Kot,1) + 224000*r(71,Mak,1) + 252000*r(71,Kuk,1) + 203000*r(71,Kok,1)
     
      + 639000*r(72,Mat,1) + 358550*r(72,Kut,1) + 1597500*r(72,Kot,1) + 228620*r(72,Mak,1) + 257730*r(72,Kuk,1) + 207320*r(72,Kok,1) + 655200*r(73,Mat,1) + 367200*r(73,Kut,1) + 1641600*r(73,Kot,1) + 233280*r(73,Mak,1) + 263520*r(73,Kuk,1)
     
      + 211680*r(73,Kok,1) + 671600*r(74,Mat,1) + 375950*r(74,Kut,1) + 1686300*r(74,Kot,1) + 237980*r(74,Mak,1) + 269370*r(74,Kuk,1) + 216080*r(74,Kok,1) + 688200*r(75,Mat,1) + 384800*r(75,Kut,1) + 1731600*r(75,Kot,1) + 242720*r(75,Mak,1)
     
      + 275280*r(75,Kuk,1) + 220520*r(75,Kok,1) + 705000*r(76,Mat,1) + 393750*r(76,Kut,1) + 1777500*r(76,Kot,1) + 247500*r(76,Mak,1) + 281250*r(76,Kuk,1) + 225000*r(76,Kok,1) + 722000*r(77,Mat,1) + 402800*r(77,Kut,1) + 1824000*r(77,Kot,1)
     
      + 252320*r(77,Mak,1) + 287280*r(77,Kuk,1) + 229520*r(77,Kok,1) + 739200*r(78,Mat,1) + 411950*r(78,Kut,1) + 1871100*r(78,Kot,1) + 257180*r(78,Mak,1) + 293370*r(78,Kuk,1) + 234080*r(78,Kok,1) + 756600*r(79,Mat,1) + 421200*r(79,Kut,1)
     
      + 1918800*r(79,Kot,1) + 262080*r(79,Mak,1) + 299520*r(79,Kuk,1) + 238680*r(79,Kok,1) + 774200*r(80,Mat,1) + 430550*r(80,Kut,1) + 1967100*r(80,Kot,1) + 267020*r(80,Mak,1) + 305730*r(80,Kuk,1) + 243320*r(80,Kok,1) + 792000*r(81,Mat,1)
     
      + 440000*r(81,Kut,1) + 2016000*r(81,Kot,1) + 272000*r(81,Mak,1) + 312000*r(81,Kuk,1) + 248000*r(81,Kok,1) + 810000*r(82,Mat,1) + 449550*r(82,Kut,1) + 2065500*r(82,Kot,1) + 277020*r(82,Mak,1) + 318330*r(82,Kuk,1) + 252720*r(82,Kok,1)
     
      + 828200*r(83,Mat,1) + 459200*r(83,Kut,1) + 2115600*r(83,Kot,1) + 282080*r(83,Mak,1) + 324720*r(83,Kuk,1) + 257480*r(83,Kok,1) + 846600*r(84,Mat,1) + 468950*r(84,Kut,1) + 2166300*r(84,Kot,1) + 287180*r(84,Mak,1) + 331170*r(84,Kuk,1)
     
      + 262280*r(84,Kok,1) + 865200*r(85,Mat,1) + 478800*r(85,Kut,1) + 2217600*r(85,Kot,1) + 292320*r(85,Mak,1) + 337680*r(85,Kuk,1) + 267120*r(85,Kok,1) + 884000*r(86,Mat,1) + 488750*r(86,Kut,1) + 2269500*r(86,Kot,1) + 297500*r(86,Mak,1)
     
      + 344250*r(86,Kuk,1) + 272000*r(86,Kok,1) + 903000*r(87,Mat,1) + 498800*r(87,Kut,1) + 2322000*r(87,Kot,1) + 302720*r(87,Mak,1) + 350880*r(87,Kuk,1) + 276920*r(87,Kok,1) + 922200*r(88,Mat,1) + 508950*r(88,Kut,1) + 2375100*r(88,Kot,1)
     
      + 307980*r(88,Mak,1) + 357570*r(88,Kuk,1) + 281880*r(88,Kok,1) + 941600*r(89,Mat,1) + 519200*r(89,Kut,1) + 2428800*r(89,Kot,1) + 313280*r(89,Mak,1) + 364320*r(89,Kuk,1) + 286880*r(89,Kok,1) + 961200*r(90,Mat,1) + 529550*r(90,Kut,1)
     
      + 2483100*r(90,Kot,1) + 318620*r(90,Mak,1) + 371130*r(90,Kuk,1) + 291920*r(90,Kok,1) + 981000*r(91,Mat,1) + 540000*r(91,Kut,1) + 2538000*r(91,Kot,1) + 324000*r(91,Mak,1) + 378000*r(91,Kuk,1) + 297000*r(91,Kok,1) + 1001000*r(92,Mat,1)
     
      + 550550*r(92,Kut,1) + 2593500*r(92,Kot,1) + 329420*r(92,Mak,1) + 384930*r(92,Kuk,1) + 302120*r(92,Kok,1) + 1021200*r(93,Mat,1) + 561200*r(93,Kut,1) + 2649600*r(93,Kot,1) + 334880*r(93,Mak,1) + 391920*r(93,Kuk,1) + 307280*r(93,Kok,1)
     
      + 1041600*r(94,Mat,1) + 571950*r(94,Kut,1) + 2706300*r(94,Kot,1) + 340380*r(94,Mak,1) + 398970*r(94,Kuk,1) + 312480*r(94,Kok,1) + 1062200*r(95,Mat,1) + 582800*r(95,Kut,1) + 2763600*r(95,Kot,1) + 345920*r(95,Mak,1) + 406080*r(95,Kuk,1)
     
      + 317720*r(95,Kok,1) + 1083000*r(96,Mat,1) + 593750*r(96,Kut,1) + 2821500*r(96,Kot,1) + 351500*r(96,Mak,1) + 413250*r(96,Kuk,1) + 323000*r(96,Kok,1) + 1104000*r(97,Mat,1) + 604800*r(97,Kut,1) + 2880000*r(97,Kot,1) + 357120*r(97,Mak,1)
     
      + 420480*r(97,Kuk,1) + 328320*r(97,Kok,1) + 1125200*r(98,Mat,1) + 615950*r(98,Kut,1) + 2939100*r(98,Kot,1) + 362780*r(98,Mak,1) + 427770*r(98,Kuk,1) + 333680*r(98,Kok,1) + 1146600*r(99,Mat,1) + 627200*r(99,Kut,1) + 2998800*r(99,Kot,1)
     
      + 368480*r(99,Mak,1) + 435120*r(99,Kuk,1) + 339080*r(99,Kok,1) + 1168200*r(100,Mat,1) + 638550*r(100,Kut,1) + 3059100*r(100,Kot,1) + 374220*r(100,Mak,1) + 442530*r(100,Kuk,1) + 344520*r(100,Kok,1) + 1190000*r(101,Mat,1) + 650000*r(101,Kut,1)
     
      + 3120000*r(101,Kot,1) + 380000*r(101,Mak,1) + 450000*r(101,Kuk,1) + 350000*r(101,Kok,1) + 1212000*r(102,Mat,1) + 661550*r(102,Kut,1) + 3181500*r(102,Kot,1) + 385820*r(102,Mak,1) + 457530*r(102,Kuk,1) + 355520*r(102,Kok,1) + 1234200*r(103,Mat,1)
     
      + 673200*r(103,Kut,1) + 3243600*r(103,Kot,1) + 391680*r(103,Mak,1) + 465120*r(103,Kuk,1) + 361080*r(103,Kok,1) + 1256600*r(104,Mat,1) + 684950*r(104,Kut,1) + 3306300*r(104,Kot,1) + 397580*r(104,Mak,1) + 472770*r(104,Kuk,1) + 366680*r(104,Kok,1)
     
      + 1279200*r(105,Mat,1) + 696800*r(105,Kut,1) + 3369600*r(105,Kot,1) + 403520*r(105,Mak,1) + 480480*r(105,Kuk,1) + 372320*r(105,Kok,1) + 1302000*r(106,Mat,1) + 708750*r(106,Kut,1) + 3433500*r(106,Kot,1) + 409500*r(106,Mak,1) + 488250*r(106,Kuk,1)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 22:25:36 Page 52
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 416


     PROFIT  =E=  Profit is what we gain minus what we spend     
     
      + 378000*r(106,Kok,1) + 1325000*r(107,Mat,1) + 720800*r(107,Kut,1) + 3498000*r(107,Kot,1) + 415520*r(107,Mak,1) + 496080*r(107,Kuk,1) + 383720*r(107,Kok,1) - 15600*u(2,Mas,EU,1) - 12000*u(2,Mas,IE,1) - 12800*u(2,Mas,PA,1) - 13500*u(2,Mas,KI,1)
     
      - 11600*u(2,Kos,EU,1) - 12000*u(2,Kos,IE,1) - 12800*u(2,Kos,PA,1) - 13500*u(2,Kos,KI,1) - 43600*u(2,Kuv,EU,1) - 37000*u(2,Kuv,IE,1) - 34800*u(2,Kuv,PA,1) - 33500*u(2,Kuv,KI,1) - 42600*u(2,Kov,EU,1) - 40000*u(2,Kov,IE,1) - 37800*u(2,Kov,PA,1)
     
      - 36500*u(2,Kov,KI,1) - 22800*u(2,Hsel,EU,1) - 24600*u(2,Hsel,IE,1) - 22500*u(2,Hsel,PA,1) - 25400*u(2,Hsel,KI,1) - 24700*u(2,Lsel,EU,1) - 27800*u(2,Lsel,IE,1) - 22500*u(2,Lsel,PA,1) - 24300*u(2,Lsel,KI,1) - 44600*u(2,Pap,EU,1) - 46000*u(2,Pap,IE,1)
     
      - 41800*u(2,Pap,PA,1) - 46500*u(2,Pap,KI,1) - 30400*u(3,Mas,EU,1) - 22000*u(3,Mas,IE,1) - 23200*u(3,Mas,PA,1) - 24000*u(3,Mas,KI,1) - 20400*u(3,Kos,EU,1) - 20000*u(3,Kos,IE,1) - 21200*u(3,Kos,PA,1) - 22000*u(3,Kos,KI,1) - 86400*u(3,Kuv,EU,1)
     
      - 72000*u(3,Kuv,IE,1) - 67200*u(3,Kuv,PA,1) - 64000*u(3,Kuv,KI,1) - 84400*u(3,Kov,EU,1) - 78000*u(3,Kov,IE,1) - 73200*u(3,Kov,PA,1) - 70000*u(3,Kov,KI,1) - 45200*u(3,Hsel,EU,1) - 48400*u(3,Hsel,IE,1) - 44000*u(3,Hsel,PA,1) - 49600*u(3,Hsel,KI,1)
     
      - 48800*u(3,Lsel,EU,1) - 55200*u(3,Lsel,IE,1) - 44000*u(3,Lsel,PA,1) - 47200*u(3,Lsel,KI,1) - 88400*u(3,Pap,EU,1) - 90000*u(3,Pap,IE,1) - 81200*u(3,Pap,PA,1) - 90000*u(3,Pap,KI,1) - 44400*u(4,Mas,EU,1) - 30000*u(4,Mas,IE,1) - 31200*u(4,Mas,PA,1)
     
      - 31500*u(4,Mas,KI,1) - 26400*u(4,Kos,EU,1) - 24000*u(4,Kos,IE,1) - 25200*u(4,Kos,PA,1) - 25500*u(4,Kos,KI,1) - 128400*u(4,Kuv,EU,1) - 105000*u(4,Kuv,IE,1) - 97200*u(4,Kuv,PA,1) - 91500*u(4,Kuv,KI,1) - 125400*u(4,Kov,EU,1) - 114000*u(4,Kov,IE,1)
     
      - 106200*u(4,Kov,PA,1) - 100500*u(4,Kov,KI,1) - 67200*u(4,Hsel,EU,1) - 71400*u(4,Hsel,IE,1) - 64500*u(4,Hsel,PA,1) - 72600*u(4,Hsel,KI,1) - 72300*u(4,Lsel,EU,1) - 82200*u(4,Lsel,IE,1) - 64500*u(4,Lsel,PA,1) - 68700*u(4,Lsel,KI,1)
     
      - 131400*u(4,Pap,EU,1) - 132000*u(4,Pap,IE,1) - 118200*u(4,Pap,PA,1) - 130500*u(4,Pap,KI,1) - 57600*u(5,Mas,EU,1) - 36000*u(5,Mas,IE,1) - 36800*u(5,Mas,PA,1) - 36000*u(5,Mas,KI,1) - 29600*u(5,Kos,EU,1) - 24000*u(5,Kos,IE,1) - 24800*u(5,Kos,PA,1)
     
      - 24000*u(5,Kos,KI,1) - 169600*u(5,Kuv,EU,1) - 136000*u(5,Kuv,IE,1) - 124800*u(5,Kuv,PA,1) - 116000*u(5,Kuv,KI,1) - 165600*u(5,Kov,EU,1) - 148000*u(5,Kov,IE,1) - 136800*u(5,Kov,PA,1) - 128000*u(5,Kov,KI,1) - 88800*u(5,Hsel,EU,1)
     
      - 93600*u(5,Hsel,IE,1) - 84000*u(5,Hsel,PA,1) - 94400*u(5,Hsel,KI,1) - 95200*u(5,Lsel,EU,1) - 108800*u(5,Lsel,IE,1) - 84000*u(5,Lsel,PA,1) - 88800*u(5,Lsel,KI,1) - 173600*u(5,Pap,EU,1) - 172000*u(5,Pap,IE,1) - 152800*u(5,Pap,PA,1)
     
      - 168000*u(5,Pap,KI,1) - 70000*u(6,Mas,EU,1) - 40000*u(6,Mas,IE,1) - 40000*u(6,Mas,PA,1) - 37500*u(6,Mas,KI,1) - 30000*u(6,Kos,EU,1) - 20000*u(6,Kos,IE,1) - 20000*u(6,Kos,PA,1) - 17500*u(6,Kos,KI,1) - 210000*u(6,Kuv,EU,1) - 165000*u(6,Kuv,IE,1)
     
      - 150000*u(6,Kuv,PA,1) - 137500*u(6,Kuv,KI,1) - 205000*u(6,Kov,EU,1) - 180000*u(6,Kov,IE,1) - 165000*u(6,Kov,PA,1) - 152500*u(6,Kov,KI,1) - 110000*u(6,Hsel,EU,1) - 115000*u(6,Hsel,IE,1) - 102500*u(6,Hsel,PA,1) - 115000*u(6,Hsel,KI,1)
     
      - 117500*u(6,Lsel,EU,1) - 135000*u(6,Lsel,IE,1) - 102500*u(6,Lsel,PA,1) - 107500*u(6,Lsel,KI,1) - 215000*u(6,Pap,EU,1) - 210000*u(6,Pap,IE,1) - 185000*u(6,Pap,PA,1) - 202500*u(6,Pap,KI,1) - 81600*u(7,Mas,EU,1) - 42000*u(7,Mas,IE,1)
     
      - 40800*u(7,Mas,PA,1) - 36000*u(7,Mas,KI,1) - 27600*u(7,Kos,EU,1) - 12000*u(7,Kos,IE,1) - 10800*u(7,Kos,PA,1) - 6000*u(7,Kos,KI,1) - 249600*u(7,Kuv,EU,1) - 192000*u(7,Kuv,IE,1) - 172800*u(7,Kuv,PA,1) - 156000*u(7,Kuv,KI,1) - 243600*u(7,Kov,EU,1)
     
      - 210000*u(7,Kov,IE,1) - 190800*u(7,Kov,PA,1) - 174000*u(7,Kov,KI,1) - 130800*u(7,Hsel,EU,1) - 135600*u(7,Hsel,IE,1) - 120000*u(7,Hsel,PA,1) - 134400*u(7,Hsel,KI,1) - 139200*u(7,Lsel,EU,1) - 160800*u(7,Lsel,IE,1) - 120000*u(7,Lsel,PA,1)
     
      - 124800*u(7,Lsel,KI,1) - 255600*u(7,Pap,EU,1) - 246000*u(7,Pap,IE,1) - 214800*u(7,Pap,PA,1) - 234000*u(7,Pap,KI,1) - 92400*u(8,Mas,EU,1) - 42000*u(8,Mas,IE,1) - 39200*u(8,Mas,PA,1) - 31500*u(8,Mas,KI,1) - 22400*u(8,Kos,EU,1) + 2800*u(8,Kos,PA,1)
     
      + 10500*u(8,Kos,KI,1) - 288400*u(8,Kuv,EU,1) - 217000*u(8,Kuv,IE,1) - 193200*u(8,Kuv,PA,1) - 171500*u(8,Kuv,KI,1) - 281400*u(8,Kov,EU,1) - 238000*u(8,Kov,IE,1) - 214200*u(8,Kov,PA,1) - 192500*u(8,Kov,KI,1) - 151200*u(8,Hsel,EU,1)
     
      - 155400*u(8,Hsel,IE,1) - 136500*u(8,Hsel,PA,1) - 152600*u(8,Hsel,KI,1) - 160300*u(8,Lsel,EU,1) - 186200*u(8,Lsel,IE,1) - 136500*u(8,Lsel,PA,1) - 140700*u(8,Lsel,KI,1) - 295400*u(8,Pap,EU,1) - 280000*u(8,Pap,IE,1) - 242200*u(8,Pap,PA,1)
     
      - 262500*u(8,Pap,KI,1) - 102400*u(9,Mas,EU,1) - 40000*u(9,Mas,IE,1) - 35200*u(9,Mas,PA,1) - 24000*u(9,Mas,KI,1) - 14400*u(9,Kos,EU,1) + 16000*u(9,Kos,IE,1) + 20800*u(9,Kos,PA,1) + 32000*u(9,Kos,KI,1) - 326400*u(9,Kuv,EU,1) - 240000*u(9,Kuv,IE,1)
     
      - 211200*u(9,Kuv,PA,1) - 184000*u(9,Kuv,KI,1) - 318400*u(9,Kov,EU,1) - 264000*u(9,Kov,IE,1) - 235200*u(9,Kov,PA,1) - 208000*u(9,Kov,KI,1) - 171200*u(9,Hsel,EU,1) - 174400*u(9,Hsel,IE,1) - 152000*u(9,Hsel,PA,1) - 169600*u(9,Hsel,KI,1)
     
      - 180800*u(9,Lsel,EU,1) - 211200*u(9,Lsel,IE,1) - 152000*u(9,Lsel,PA,1) - 155200*u(9,Lsel,KI,1) - 334400*u(9,Pap,EU,1) - 312000*u(9,Pap,IE,1) - 267200*u(9,Pap,PA,1) - 288000*u(9,Pap,KI,1) - 111600*u(10,Mas,EU,1) - 36000*u(10,Mas,IE,1)
     
      - 28800*u(10,Mas,PA,1) - 13500*u(10,Mas,KI,1) - 3600*u(10,Kos,EU,1) + 36000*u(10,Kos,IE,1) + 43200*u(10,Kos,PA,1) + 58500*u(10,Kos,KI,1) - 363600*u(10,Kuv,EU,1) - 261000*u(10,Kuv,IE,1) - 226800*u(10,Kuv,PA,1) - 193500*u(10,Kuv,KI,1)
     
      - 354600*u(10,Kov,EU,1) - 288000*u(10,Kov,IE,1) - 253800*u(10,Kov,PA,1) - 220500*u(10,Kov,KI,1) - 190800*u(10,Hsel,EU,1) - 192600*u(10,Hsel,IE,1) - 166500*u(10,Hsel,PA,1) - 185400*u(10,Hsel,KI,1) - 200700*u(10,Lsel,EU,1) - 235800*u(10,Lsel,IE,1)
     
      - 166500*u(10,Lsel,PA,1) - 168300*u(10,Lsel,KI,1) - 372600*u(10,Pap,EU,1) - 342000*u(10,Pap,IE,1) - 289800*u(10,Pap,PA,1) - 310500*u(10,Pap,KI,1) - 120000*u(11,Mas,EU,1) - 30000*u(11,Mas,IE,1) - 20000*u(11,Mas,PA,1) + 10000*u(11,Kos,EU,1)
     
      + 60000*u(11,Kos,IE,1) + 70000*u(11,Kos,PA,1) + 90000*u(11,Kos,KI,1) - 400000*u(11,Kuv,EU,1) - 280000*u(11,Kuv,IE,1) - 240000*u(11,Kuv,PA,1) - 200000*u(11,Kuv,KI,1) - 390000*u(11,Kov,EU,1) - 310000*u(11,Kov,IE,1) - 270000*u(11,Kov,PA,1)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 22:25:36 Page 53
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 416


     PROFIT  =E=  Profit is what we gain minus what we spend     
     
      - 230000*u(11,Kov,KI,1) - 210000*u(11,Hsel,EU,1) - 210000*u(11,Hsel,IE,1) - 180000*u(11,Hsel,PA,1) - 200000*u(11,Hsel,KI,1) - 220000*u(11,Lsel,EU,1) - 260000*u(11,Lsel,IE,1) - 180000*u(11,Lsel,PA,1) - 180000*u(11,Lsel,KI,1) - 410000*u(11,Pap,EU,1)
     
      - 370000*u(11,Pap,IE,1) - 310000*u(11,Pap,PA,1) - 330000*u(11,Pap,KI,1) - 127600*u(12,Mas,EU,1) - 22000*u(12,Mas,IE,1) - 8800.00000000003*u(12,Mas,PA,1) + 16500*u(12,Mas,KI,1) + 26400*u(12,Kos,EU,1) + 88000*u(12,Kos,IE,1) + 101200*u(12,Kos,PA,1)
     
      + 126500*u(12,Kos,KI,1) - 435600*u(12,Kuv,EU,1) - 297000*u(12,Kuv,IE,1) - 250800*u(12,Kuv,PA,1) - 203500*u(12,Kuv,KI,1) - 424600*u(12,Kov,EU,1) - 330000*u(12,Kov,IE,1) - 283800*u(12,Kov,PA,1) - 236500*u(12,Kov,KI,1) - 228800*u(12,Hsel,EU,1)
     
      - 226600*u(12,Hsel,IE,1) - 192500*u(12,Hsel,PA,1) - 213400*u(12,Hsel,KI,1) - 238700*u(12,Lsel,EU,1) - 283800*u(12,Lsel,IE,1) - 192500*u(12,Lsel,PA,1) - 190300*u(12,Lsel,KI,1) - 446600*u(12,Pap,EU,1) - 396000*u(12,Pap,IE,1) - 327800*u(12,Pap,PA,1)
     
      - 346500*u(12,Pap,KI,1) - 134400*u(13,Mas,EU,1) - 12000*u(13,Mas,IE,1) + 4799.99999999997*u(13,Mas,PA,1) + 36000*u(13,Mas,KI,1) + 45600*u(13,Kos,EU,1) + 120000*u(13,Kos,IE,1) + 136800*u(13,Kos,PA,1) + 168000*u(13,Kos,KI,1) - 470400*u(13,Kuv,EU,1)
     
      - 312000*u(13,Kuv,IE,1) - 259200*u(13,Kuv,PA,1) - 204000*u(13,Kuv,KI,1) - 458400*u(13,Kov,EU,1) - 348000*u(13,Kov,IE,1) - 295200*u(13,Kov,PA,1) - 240000*u(13,Kov,KI,1) - 247200*u(13,Hsel,EU,1) - 242400*u(13,Hsel,IE,1) - 204000*u(13,Hsel,PA,1)
     
      - 225600*u(13,Hsel,KI,1) - 256800*u(13,Lsel,EU,1) - 307200*u(13,Lsel,IE,1) - 204000*u(13,Lsel,PA,1) - 199200*u(13,Lsel,KI,1) - 482400*u(13,Pap,EU,1) - 420000*u(13,Pap,IE,1) - 343200*u(13,Pap,PA,1) - 360000*u(13,Pap,KI,1) - 140400*u(14,Mas,EU,1)
     
      + 20800*u(14,Mas,PA,1) + 58500*u(14,Mas,KI,1) + 67600*u(14,Kos,EU,1) + 156000*u(14,Kos,IE,1) + 176800*u(14,Kos,PA,1) + 214500*u(14,Kos,KI,1) - 504400*u(14,Kuv,EU,1) - 325000*u(14,Kuv,IE,1) - 265200*u(14,Kuv,PA,1) - 201500*u(14,Kuv,KI,1)
     
      - 491400*u(14,Kov,EU,1) - 364000*u(14,Kov,IE,1) - 304200*u(14,Kov,PA,1) - 240500*u(14,Kov,KI,1) - 265200*u(14,Hsel,EU,1) - 257400*u(14,Hsel,IE,1) - 214500*u(14,Hsel,PA,1) - 236600*u(14,Hsel,KI,1) - 274300*u(14,Lsel,EU,1) - 330200*u(14,Lsel,IE,1)
     
      - 214500*u(14,Lsel,PA,1) - 206700*u(14,Lsel,KI,1) - 517400*u(14,Pap,EU,1) - 442000*u(14,Pap,IE,1) - 356200*u(14,Pap,PA,1) - 370500*u(14,Pap,KI,1) - 145600*u(15,Mas,EU,1) + 14000*u(15,Mas,IE,1) + 39200*u(15,Mas,PA,1) + 84000*u(15,Mas,KI,1)
     
      + 92400*u(15,Kos,EU,1) + 196000*u(15,Kos,IE,1) + 221200*u(15,Kos,PA,1) + 266000*u(15,Kos,KI,1) - 537600*u(15,Kuv,EU,1) - 336000*u(15,Kuv,IE,1) - 268800*u(15,Kuv,PA,1) - 196000*u(15,Kuv,KI,1) - 523600*u(15,Kov,EU,1) - 378000*u(15,Kov,IE,1)
     
      - 310800*u(15,Kov,PA,1) - 238000*u(15,Kov,KI,1) - 282800*u(15,Hsel,EU,1) - 271600*u(15,Hsel,IE,1) - 224000*u(15,Hsel,PA,1) - 246400*u(15,Hsel,KI,1) - 291200*u(15,Lsel,EU,1) - 352800*u(15,Lsel,IE,1) - 224000*u(15,Lsel,PA,1) - 212800*u(15,Lsel,KI,1)
     
      - 551600*u(15,Pap,EU,1) - 462000*u(15,Pap,IE,1) - 366800*u(15,Pap,PA,1) - 378000*u(15,Pap,KI,1) - 150000*u(16,Mas,EU,1) + 30000*u(16,Mas,IE,1) + 60000*u(16,Mas,PA,1) + 112500*u(16,Mas,KI,1) + 120000*u(16,Kos,EU,1) + 240000*u(16,Kos,IE,1)
     
      + 270000*u(16,Kos,PA,1) + 322500*u(16,Kos,KI,1) - 570000*u(16,Kuv,EU,1) - 345000*u(16,Kuv,IE,1) - 270000*u(16,Kuv,PA,1) - 187500*u(16,Kuv,KI,1) - 555000*u(16,Kov,EU,1) - 390000*u(16,Kov,IE,1) - 315000*u(16,Kov,PA,1) - 232500*u(16,Kov,KI,1)
     
      - 300000*u(16,Hsel,EU,1) - 285000*u(16,Hsel,IE,1) - 232500*u(16,Hsel,PA,1) - 255000*u(16,Hsel,KI,1) - 307500*u(16,Lsel,EU,1) - 375000*u(16,Lsel,IE,1) - 232500*u(16,Lsel,PA,1) - 217500*u(16,Lsel,KI,1) - 585000*u(16,Pap,EU,1) - 480000*u(16,Pap,IE,1)
     
      - 375000*u(16,Pap,PA,1) - 382500*u(16,Pap,KI,1) - 153600*u(17,Mas,EU,1) + 48000*u(17,Mas,IE,1) + 83200*u(17,Mas,PA,1) + 144000*u(17,Mas,KI,1) + 150400*u(17,Kos,EU,1) + 288000*u(17,Kos,IE,1) + 323200*u(17,Kos,PA,1) + 384000*u(17,Kos,KI,1)
     
      - 601600*u(17,Kuv,EU,1) - 352000*u(17,Kuv,IE,1) - 268800*u(17,Kuv,PA,1) - 176000*u(17,Kuv,KI,1) - 585600*u(17,Kov,EU,1) - 400000*u(17,Kov,IE,1) - 316800*u(17,Kov,PA,1) - 224000*u(17,Kov,KI,1) - 316800*u(17,Hsel,EU,1) - 297600*u(17,Hsel,IE,1)
     
      - 240000*u(17,Hsel,PA,1) - 262400*u(17,Hsel,KI,1) - 323200*u(17,Lsel,EU,1) - 396800*u(17,Lsel,IE,1) - 240000*u(17,Lsel,PA,1) - 220800*u(17,Lsel,KI,1) - 617600*u(17,Pap,EU,1) - 496000*u(17,Pap,IE,1) - 380800*u(17,Pap,PA,1) - 384000*u(17,Pap,KI,1)
     
      - 156400*u(18,Mas,EU,1) + 68000*u(18,Mas,IE,1) + 108800*u(18,Mas,PA,1) + 178500*u(18,Mas,KI,1) + 183600*u(18,Kos,EU,1) + 340000*u(18,Kos,IE,1) + 380800*u(18,Kos,PA,1) + 450500*u(18,Kos,KI,1) - 632400*u(18,Kuv,EU,1) - 357000*u(18,Kuv,IE,1)
     
      - 265200*u(18,Kuv,PA,1) - 161500*u(18,Kuv,KI,1) - 615400*u(18,Kov,EU,1) - 408000*u(18,Kov,IE,1) - 316200*u(18,Kov,PA,1) - 212500*u(18,Kov,KI,1) - 333200*u(18,Hsel,EU,1) - 309400*u(18,Hsel,IE,1) - 246500*u(18,Hsel,PA,1) - 268600*u(18,Hsel,KI,1)
     
      - 338300*u(18,Lsel,EU,1) - 418200*u(18,Lsel,IE,1) - 246500*u(18,Lsel,PA,1) - 222700*u(18,Lsel,KI,1) - 649400*u(18,Pap,EU,1) - 510000*u(18,Pap,IE,1) - 384200*u(18,Pap,PA,1) - 382500*u(18,Pap,KI,1) - 158400*u(19,Mas,EU,1) + 90000*u(19,Mas,IE,1)
     
      + 136800*u(19,Mas,PA,1) + 216000*u(19,Mas,KI,1) + 219600*u(19,Kos,EU,1) + 396000*u(19,Kos,IE,1) + 442800*u(19,Kos,PA,1) + 522000*u(19,Kos,KI,1) - 662400*u(19,Kuv,EU,1) - 360000*u(19,Kuv,IE,1) - 259200*u(19,Kuv,PA,1) - 144000*u(19,Kuv,KI,1)
     
      - 644400*u(19,Kov,EU,1) - 414000*u(19,Kov,IE,1) - 313200*u(19,Kov,PA,1) - 198000*u(19,Kov,KI,1) - 349200*u(19,Hsel,EU,1) - 320400*u(19,Hsel,IE,1) - 252000*u(19,Hsel,PA,1) - 273600*u(19,Hsel,KI,1) - 352800*u(19,Lsel,EU,1) - 439200*u(19,Lsel,IE,1)
     
      - 252000*u(19,Lsel,PA,1) - 223200*u(19,Lsel,KI,1) - 680400*u(19,Pap,EU,1) - 522000*u(19,Pap,IE,1) - 385200*u(19,Pap,PA,1) - 378000*u(19,Pap,KI,1) - 159600*u(20,Mas,EU,1) + 114000*u(20,Mas,IE,1) + 167200*u(20,Mas,PA,1) + 256500*u(20,Mas,KI,1)
     
      + 258400*u(20,Kos,EU,1) + 456000*u(20,Kos,IE,1) + 509200*u(20,Kos,PA,1) + 598500*u(20,Kos,KI,1) - 691600*u(20,Kuv,EU,1) - 361000*u(20,Kuv,IE,1) - 250800*u(20,Kuv,PA,1) - 123500*u(20,Kuv,KI,1) - 672600*u(20,Kov,EU,1) - 418000*u(20,Kov,IE,1)
     
      - 307800*u(20,Kov,PA,1) - 180500*u(20,Kov,KI,1) - 364800*u(20,Hsel,EU,1) - 330600*u(20,Hsel,IE,1) - 256500*u(20,Hsel,PA,1) - 277400*u(20,Hsel,KI,1) - 366700*u(20,Lsel,EU,1) - 459800*u(20,Lsel,IE,1) - 256500*u(20,Lsel,PA,1) - 222300*u(20,Lsel,KI,1)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 22:25:36 Page 54
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 416


     PROFIT  =E=  Profit is what we gain minus what we spend     
     
      - 710600*u(20,Pap,EU,1) - 532000*u(20,Pap,IE,1) - 383800*u(20,Pap,PA,1) - 370500*u(20,Pap,KI,1) - 160000*u(21,Mas,EU,1) + 140000*u(21,Mas,IE,1) + 200000*u(21,Mas,PA,1) + 300000*u(21,Mas,KI,1) + 300000*u(21,Kos,EU,1) + 520000*u(21,Kos,IE,1)
     
      + 580000*u(21,Kos,PA,1) + 680000*u(21,Kos,KI,1) - 720000*u(21,Kuv,EU,1) - 360000*u(21,Kuv,IE,1) - 240000*u(21,Kuv,PA,1) - 100000*u(21,Kuv,KI,1) - 700000*u(21,Kov,EU,1) - 420000*u(21,Kov,IE,1) - 300000*u(21,Kov,PA,1) - 160000*u(21,Kov,KI,1)
     
      - 380000*u(21,Hsel,EU,1) - 340000*u(21,Hsel,IE,1) - 260000*u(21,Hsel,PA,1) - 280000*u(21,Hsel,KI,1) - 380000*u(21,Lsel,EU,1) - 480000*u(21,Lsel,IE,1) - 260000*u(21,Lsel,PA,1) - 220000*u(21,Lsel,KI,1) - 740000*u(21,Pap,EU,1) - 540000*u(21,Pap,IE,1)
     
      - 380000*u(21,Pap,PA,1) - 360000*u(21,Pap,KI,1) - 159600*u(22,Mas,EU,1) + 168000*u(22,Mas,IE,1) + 235200*u(22,Mas,PA,1) + 346500*u(22,Mas,KI,1) + 344400*u(22,Kos,EU,1) + 588000*u(22,Kos,IE,1) + 655200*u(22,Kos,PA,1) + 766500*u(22,Kos,KI,1)
     
      - 747600*u(22,Kuv,EU,1) - 357000*u(22,Kuv,IE,1) - 226800*u(22,Kuv,PA,1) - 73500*u(22,Kuv,KI,1) - 726600*u(22,Kov,EU,1) - 420000*u(22,Kov,IE,1) - 289800*u(22,Kov,PA,1) - 136500*u(22,Kov,KI,1) - 394800*u(22,Hsel,EU,1) - 348600*u(22,Hsel,IE,1)
     
      - 262500*u(22,Hsel,PA,1) - 281400*u(22,Hsel,KI,1) - 392700*u(22,Lsel,EU,1) - 499800*u(22,Lsel,IE,1) - 262500*u(22,Lsel,PA,1) - 216300*u(22,Lsel,KI,1) - 768600*u(22,Pap,EU,1) - 546000*u(22,Pap,IE,1) - 373800*u(22,Pap,PA,1) - 346500*u(22,Pap,KI,1)
     
      - 158400*u(23,Mas,EU,1) + 198000*u(23,Mas,IE,1) + 272800*u(23,Mas,PA,1) + 396000*u(23,Mas,KI,1) + 391600*u(23,Kos,EU,1) + 660000*u(23,Kos,IE,1) + 734800*u(23,Kos,PA,1) + 858000*u(23,Kos,KI,1) - 774400*u(23,Kuv,EU,1) - 352000*u(23,Kuv,IE,1)
     
      - 211200*u(23,Kuv,PA,1) - 44000*u(23,Kuv,KI,1) - 752400*u(23,Kov,EU,1) - 418000*u(23,Kov,IE,1) - 277200*u(23,Kov,PA,1) - 110000*u(23,Kov,KI,1) - 409200*u(23,Hsel,EU,1) - 356400*u(23,Hsel,IE,1) - 264000*u(23,Hsel,PA,1) - 281600*u(23,Hsel,KI,1)
     
      - 404800*u(23,Lsel,EU,1) - 519200*u(23,Lsel,IE,1) - 264000*u(23,Lsel,PA,1) - 211200*u(23,Lsel,KI,1) - 796400*u(23,Pap,EU,1) - 550000*u(23,Pap,IE,1) - 365200*u(23,Pap,PA,1) - 330000*u(23,Pap,KI,1) - 0.19*b(Mat,1) - 0.15*b(Kut,1) - 0.12*b(Kot,1)
     
      - 0.18*b(Mak,1) - 0.15*b(Kuk,1) - 0.15*b(Kok,1) + Pr(1) + 0.7*Cap(Pap,2) + 0.1*Cap(SAW,2) + 0.3*Cap(PLY,2) + 0.5*Cap(SPULP,2) + 0.5*Cap(HPULP,2) =E= 0 ; (LHS = 0)
     
PROFIT(2)..  0.542*y(Mas,2) + 0.492*y(Kus,2) + 0.442*y(Kos,2) + 2.492*y(Kuv,2) + 2.592*y(Kov,2) + 0.82*y(Hsel,2) + 0.8*y(Lsel,2) + 1.7*y(Pap,2) + 0.19*s(Mat,2) + 0.15*s(Kut,2) + 0.12*s(Kot,2) + 0.18*s(Mak,2) + 0.15*s(Kuk,2) + 0.15*s(Kok,2)
     
      + 2000*r(2,Mat,2) + 1550*r(2,Kut,2) + 1500*r(2,Kot,2) + 1820*r(2,Mak,2) + 1530*r(2,Kuk,2) + 1520*r(2,Kok,2) + 4200*r(3,Mat,2) + 3200*r(3,Kut,2) + 3600*r(3,Kot,2) + 3680*r(3,Mak,2) + 3120*r(3,Kuk,2) + 3080*r(3,Kok,2) + 6600*r(4,Mat,2)
     
      + 4950*r(4,Kut,2) + 6300*r(4,Kot,2) + 5580*r(4,Mak,2) + 4770*r(4,Kuk,2) + 4680*r(4,Kok,2) + 9200*r(5,Mat,2) + 6800*r(5,Kut,2) + 9600*r(5,Kot,2) + 7520*r(5,Mak,2) + 6480*r(5,Kuk,2) + 6320*r(5,Kok,2) + 12000*r(6,Mat,2) + 8750*r(6,Kut,2)
     
      + 13500*r(6,Kot,2) + 9500*r(6,Mak,2) + 8250*r(6,Kuk,2) + 8000*r(6,Kok,2) + 15000*r(7,Mat,2) + 10800*r(7,Kut,2) + 18000*r(7,Kot,2) + 11520*r(7,Mak,2) + 10080*r(7,Kuk,2) + 9720*r(7,Kok,2) + 18200*r(8,Mat,2) + 12950*r(8,Kut,2) + 23100*r(8,Kot,2)
     
      + 13580*r(8,Mak,2) + 11970*r(8,Kuk,2) + 11480*r(8,Kok,2) + 21600*r(9,Mat,2) + 15200*r(9,Kut,2) + 28800*r(9,Kot,2) + 15680*r(9,Mak,2) + 13920*r(9,Kuk,2) + 13280*r(9,Kok,2) + 25200*r(10,Mat,2) + 17550*r(10,Kut,2) + 35100*r(10,Kot,2)
     
      + 17820*r(10,Mak,2) + 15930*r(10,Kuk,2) + 15120*r(10,Kok,2) + 29000*r(11,Mat,2) + 20000*r(11,Kut,2) + 42000*r(11,Kot,2) + 20000*r(11,Mak,2) + 18000*r(11,Kuk,2) + 17000*r(11,Kok,2) + 33000*r(12,Mat,2) + 22550*r(12,Kut,2) + 49500*r(12,Kot,2)
     
      + 22220*r(12,Mak,2) + 20130*r(12,Kuk,2) + 18920*r(12,Kok,2) + 37200*r(13,Mat,2) + 25200*r(13,Kut,2) + 57600*r(13,Kot,2) + 24480*r(13,Mak,2) + 22320*r(13,Kuk,2) + 20880*r(13,Kok,2) + 41600*r(14,Mat,2) + 27950*r(14,Kut,2) + 66300*r(14,Kot,2)
     
      + 26780*r(14,Mak,2) + 24570*r(14,Kuk,2) + 22880*r(14,Kok,2) + 46200*r(15,Mat,2) + 30800*r(15,Kut,2) + 75600*r(15,Kot,2) + 29120*r(15,Mak,2) + 26880*r(15,Kuk,2) + 24920*r(15,Kok,2) + 51000*r(16,Mat,2) + 33750*r(16,Kut,2) + 85500*r(16,Kot,2)
     
      + 31500*r(16,Mak,2) + 29250*r(16,Kuk,2) + 27000*r(16,Kok,2) + 56000*r(17,Mat,2) + 36800*r(17,Kut,2) + 96000*r(17,Kot,2) + 33920*r(17,Mak,2) + 31680*r(17,Kuk,2) + 29120*r(17,Kok,2) + 61200*r(18,Mat,2) + 39950*r(18,Kut,2) + 107100*r(18,Kot,2)
     
      + 36380*r(18,Mak,2) + 34170*r(18,Kuk,2) + 31280*r(18,Kok,2) + 66600*r(19,Mat,2) + 43200*r(19,Kut,2) + 118800*r(19,Kot,2) + 38880*r(19,Mak,2) + 36720*r(19,Kuk,2) + 33480*r(19,Kok,2) + 72200*r(20,Mat,2) + 46550*r(20,Kut,2) + 131100*r(20,Kot,2)
     
      + 41420*r(20,Mak,2) + 39330*r(20,Kuk,2) + 35720*r(20,Kok,2) + 78000*r(21,Mat,2) + 50000*r(21,Kut,2) + 144000*r(21,Kot,2) + 44000*r(21,Mak,2) + 42000*r(21,Kuk,2) + 38000*r(21,Kok,2) + 84000*r(22,Mat,2) + 53550*r(22,Kut,2) + 157500*r(22,Kot,2)
     
      + 46620*r(22,Mak,2) + 44730*r(22,Kuk,2) + 40320*r(22,Kok,2) + 90200*r(23,Mat,2) + 57200*r(23,Kut,2) + 171600*r(23,Kot,2) + 49280*r(23,Mak,2) + 47520*r(23,Kuk,2) + 42680*r(23,Kok,2) + 96600*r(24,Mat,2) + 60950*r(24,Kut,2) + 186300*r(24,Kot,2)
     
      + 51980*r(24,Mak,2) + 50370*r(24,Kuk,2) + 45080*r(24,Kok,2) + 103200*r(25,Mat,2) + 64800*r(25,Kut,2) + 201600*r(25,Kot,2) + 54720*r(25,Mak,2) + 53280*r(25,Kuk,2) + 47520*r(25,Kok,2) + 110000*r(26,Mat,2) + 68750*r(26,Kut,2) + 217500*r(26,Kot,2)
     
      + 57500*r(26,Mak,2) + 56250*r(26,Kuk,2) + 50000*r(26,Kok,2) + 117000*r(27,Mat,2) + 72800*r(27,Kut,2) + 234000*r(27,Kot,2) + 60320*r(27,Mak,2) + 59280*r(27,Kuk,2) + 52520*r(27,Kok,2) + 124200*r(28,Mat,2) + 76950*r(28,Kut,2) + 251100*r(28,Kot,2)
     
      + 63180*r(28,Mak,2) + 62370*r(28,Kuk,2) + 55080*r(28,Kok,2) + 131600*r(29,Mat,2) + 81200*r(29,Kut,2) + 268800*r(29,Kot,2) + 66080*r(29,Mak,2) + 65520*r(29,Kuk,2) + 57680*r(29,Kok,2) + 139200*r(30,Mat,2) + 85550*r(30,Kut,2) + 287100*r(30,Kot,2)
     
      + 69020*r(30,Mak,2) + 68730*r(30,Kuk,2) + 60320*r(30,Kok,2) + 147000*r(31,Mat,2) + 90000*r(31,Kut,2) + 306000*r(31,Kot,2) + 72000*r(31,Mak,2) + 72000*r(31,Kuk,2) + 63000*r(31,Kok,2) + 155000*r(32,Mat,2) + 94550*r(32,Kut,2) + 325500*r(32,Kot,2)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 22:25:36 Page 55
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 416


     PROFIT  =E=  Profit is what we gain minus what we spend     
     
      + 75020*r(32,Mak,2) + 75330*r(32,Kuk,2) + 65720*r(32,Kok,2) + 163200*r(33,Mat,2) + 99200*r(33,Kut,2) + 345600*r(33,Kot,2) + 78080*r(33,Mak,2) + 78720*r(33,Kuk,2) + 68480*r(33,Kok,2) + 171600*r(34,Mat,2) + 103950*r(34,Kut,2) + 366300*r(34,Kot,2)
     
      + 81180*r(34,Mak,2) + 82170*r(34,Kuk,2) + 71280*r(34,Kok,2) + 180200*r(35,Mat,2) + 108800*r(35,Kut,2) + 387600*r(35,Kot,2) + 84320*r(35,Mak,2) + 85680*r(35,Kuk,2) + 74120*r(35,Kok,2) + 189000*r(36,Mat,2) + 113750*r(36,Kut,2) + 409500*r(36,Kot,2)
     
      + 87500*r(36,Mak,2) + 89250*r(36,Kuk,2) + 77000*r(36,Kok,2) + 198000*r(37,Mat,2) + 118800*r(37,Kut,2) + 432000*r(37,Kot,2) + 90720*r(37,Mak,2) + 92880*r(37,Kuk,2) + 79920*r(37,Kok,2) + 207200*r(38,Mat,2) + 123950*r(38,Kut,2) + 455100*r(38,Kot,2)
     
      + 93980*r(38,Mak,2) + 96570*r(38,Kuk,2) + 82880*r(38,Kok,2) + 216600*r(39,Mat,2) + 129200*r(39,Kut,2) + 478800*r(39,Kot,2) + 97280*r(39,Mak,2) + 100320*r(39,Kuk,2) + 85880*r(39,Kok,2) + 226200*r(40,Mat,2) + 134550*r(40,Kut,2) + 503100*r(40,Kot,2)
     
      + 100620*r(40,Mak,2) + 104130*r(40,Kuk,2) + 88920*r(40,Kok,2) + 236000*r(41,Mat,2) + 140000*r(41,Kut,2) + 528000*r(41,Kot,2) + 104000*r(41,Mak,2) + 108000*r(41,Kuk,2) + 92000*r(41,Kok,2) + 246000*r(42,Mat,2) + 145550*r(42,Kut,2) + 553500*r(42,Kot,2)
     
      + 107420*r(42,Mak,2) + 111930*r(42,Kuk,2) + 95120*r(42,Kok,2) + 256200*r(43,Mat,2) + 151200*r(43,Kut,2) + 579600*r(43,Kot,2) + 110880*r(43,Mak,2) + 115920*r(43,Kuk,2) + 98280*r(43,Kok,2) + 266600*r(44,Mat,2) + 156950*r(44,Kut,2) + 606300*r(44,Kot,2)
     
      + 114380*r(44,Mak,2) + 119970*r(44,Kuk,2) + 101480*r(44,Kok,2) + 277200*r(45,Mat,2) + 162800*r(45,Kut,2) + 633600*r(45,Kot,2) + 117920*r(45,Mak,2) + 124080*r(45,Kuk,2) + 104720*r(45,Kok,2) + 288000*r(46,Mat,2) + 168750*r(46,Kut,2)
     
      + 661500*r(46,Kot,2) + 121500*r(46,Mak,2) + 128250*r(46,Kuk,2) + 108000*r(46,Kok,2) + 299000*r(47,Mat,2) + 174800*r(47,Kut,2) + 690000*r(47,Kot,2) + 125120*r(47,Mak,2) + 132480*r(47,Kuk,2) + 111320*r(47,Kok,2) + 310200*r(48,Mat,2)
     
      + 180950*r(48,Kut,2) + 719100*r(48,Kot,2) + 128780*r(48,Mak,2) + 136770*r(48,Kuk,2) + 114680*r(48,Kok,2) + 321600*r(49,Mat,2) + 187200*r(49,Kut,2) + 748800*r(49,Kot,2) + 132480*r(49,Mak,2) + 141120*r(49,Kuk,2) + 118080*r(49,Kok,2)
     
      + 333200*r(50,Mat,2) + 193550*r(50,Kut,2) + 779100*r(50,Kot,2) + 136220*r(50,Mak,2) + 145530*r(50,Kuk,2) + 121520*r(50,Kok,2) + 345000*r(51,Mat,2) + 200000*r(51,Kut,2) + 810000*r(51,Kot,2) + 140000*r(51,Mak,2) + 150000*r(51,Kuk,2)
     
      + 125000*r(51,Kok,2) + 357000*r(52,Mat,2) + 206550*r(52,Kut,2) + 841500*r(52,Kot,2) + 143820*r(52,Mak,2) + 154530*r(52,Kuk,2) + 128520*r(52,Kok,2) + 369200*r(53,Mat,2) + 213200*r(53,Kut,2) + 873600*r(53,Kot,2) + 147680*r(53,Mak,2)
     
      + 159120*r(53,Kuk,2) + 132080*r(53,Kok,2) + 381600*r(54,Mat,2) + 219950*r(54,Kut,2) + 906300*r(54,Kot,2) + 151580*r(54,Mak,2) + 163770*r(54,Kuk,2) + 135680*r(54,Kok,2) + 394200*r(55,Mat,2) + 226800*r(55,Kut,2) + 939600*r(55,Kot,2)
     
      + 155520*r(55,Mak,2) + 168480*r(55,Kuk,2) + 139320*r(55,Kok,2) + 407000*r(56,Mat,2) + 233750*r(56,Kut,2) + 973500*r(56,Kot,2) + 159500*r(56,Mak,2) + 173250*r(56,Kuk,2) + 143000*r(56,Kok,2) + 420000*r(57,Mat,2) + 240800*r(57,Kut,2)
     
      + 1008000*r(57,Kot,2) + 163520*r(57,Mak,2) + 178080*r(57,Kuk,2) + 146720*r(57,Kok,2) + 433200*r(58,Mat,2) + 247950*r(58,Kut,2) + 1043100*r(58,Kot,2) + 167580*r(58,Mak,2) + 182970*r(58,Kuk,2) + 150480*r(58,Kok,2) + 446600*r(59,Mat,2)
     
      + 255200*r(59,Kut,2) + 1078800*r(59,Kot,2) + 171680*r(59,Mak,2) + 187920*r(59,Kuk,2) + 154280*r(59,Kok,2) + 460200*r(60,Mat,2) + 262550*r(60,Kut,2) + 1115100*r(60,Kot,2) + 175820*r(60,Mak,2) + 192930*r(60,Kuk,2) + 158120*r(60,Kok,2)
     
      + 474000*r(61,Mat,2) + 270000*r(61,Kut,2) + 1152000*r(61,Kot,2) + 180000*r(61,Mak,2) + 198000*r(61,Kuk,2) + 162000*r(61,Kok,2) + 488000*r(62,Mat,2) + 277550*r(62,Kut,2) + 1189500*r(62,Kot,2) + 184220*r(62,Mak,2) + 203130*r(62,Kuk,2)
     
      + 165920*r(62,Kok,2) + 502200*r(63,Mat,2) + 285200*r(63,Kut,2) + 1227600*r(63,Kot,2) + 188480*r(63,Mak,2) + 208320*r(63,Kuk,2) + 169880*r(63,Kok,2) + 516600*r(64,Mat,2) + 292950*r(64,Kut,2) + 1266300*r(64,Kot,2) + 192780*r(64,Mak,2)
     
      + 213570*r(64,Kuk,2) + 173880*r(64,Kok,2) + 531200*r(65,Mat,2) + 300800*r(65,Kut,2) + 1305600*r(65,Kot,2) + 197120*r(65,Mak,2) + 218880*r(65,Kuk,2) + 177920*r(65,Kok,2) + 546000*r(66,Mat,2) + 308750*r(66,Kut,2) + 1345500*r(66,Kot,2)
     
      + 201500*r(66,Mak,2) + 224250*r(66,Kuk,2) + 182000*r(66,Kok,2) + 561000*r(67,Mat,2) + 316800*r(67,Kut,2) + 1386000*r(67,Kot,2) + 205920*r(67,Mak,2) + 229680*r(67,Kuk,2) + 186120*r(67,Kok,2) + 576200*r(68,Mat,2) + 324950*r(68,Kut,2)
     
      + 1427100*r(68,Kot,2) + 210380*r(68,Mak,2) + 235170*r(68,Kuk,2) + 190280*r(68,Kok,2) + 591600*r(69,Mat,2) + 333200*r(69,Kut,2) + 1468800*r(69,Kot,2) + 214880*r(69,Mak,2) + 240720*r(69,Kuk,2) + 194480*r(69,Kok,2) + 607200*r(70,Mat,2)
     
      + 341550*r(70,Kut,2) + 1511100*r(70,Kot,2) + 219420*r(70,Mak,2) + 246330*r(70,Kuk,2) + 198720*r(70,Kok,2) + 623000*r(71,Mat,2) + 350000*r(71,Kut,2) + 1554000*r(71,Kot,2) + 224000*r(71,Mak,2) + 252000*r(71,Kuk,2) + 203000*r(71,Kok,2)
     
      + 639000*r(72,Mat,2) + 358550*r(72,Kut,2) + 1597500*r(72,Kot,2) + 228620*r(72,Mak,2) + 257730*r(72,Kuk,2) + 207320*r(72,Kok,2) + 655200*r(73,Mat,2) + 367200*r(73,Kut,2) + 1641600*r(73,Kot,2) + 233280*r(73,Mak,2) + 263520*r(73,Kuk,2)
     
      + 211680*r(73,Kok,2) + 671600*r(74,Mat,2) + 375950*r(74,Kut,2) + 1686300*r(74,Kot,2) + 237980*r(74,Mak,2) + 269370*r(74,Kuk,2) + 216080*r(74,Kok,2) + 688200*r(75,Mat,2) + 384800*r(75,Kut,2) + 1731600*r(75,Kot,2) + 242720*r(75,Mak,2)
     
      + 275280*r(75,Kuk,2) + 220520*r(75,Kok,2) + 705000*r(76,Mat,2) + 393750*r(76,Kut,2) + 1777500*r(76,Kot,2) + 247500*r(76,Mak,2) + 281250*r(76,Kuk,2) + 225000*r(76,Kok,2) + 722000*r(77,Mat,2) + 402800*r(77,Kut,2) + 1824000*r(77,Kot,2)
     
      + 252320*r(77,Mak,2) + 287280*r(77,Kuk,2) + 229520*r(77,Kok,2) + 739200*r(78,Mat,2) + 411950*r(78,Kut,2) + 1871100*r(78,Kot,2) + 257180*r(78,Mak,2) + 293370*r(78,Kuk,2) + 234080*r(78,Kok,2) + 756600*r(79,Mat,2) + 421200*r(79,Kut,2)
     
      + 1918800*r(79,Kot,2) + 262080*r(79,Mak,2) + 299520*r(79,Kuk,2) + 238680*r(79,Kok,2) + 774200*r(80,Mat,2) + 430550*r(80,Kut,2) + 1967100*r(80,Kot,2) + 267020*r(80,Mak,2) + 305730*r(80,Kuk,2) + 243320*r(80,Kok,2) + 792000*r(81,Mat,2)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 22:25:36 Page 56
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 416


     PROFIT  =E=  Profit is what we gain minus what we spend     
     
      + 440000*r(81,Kut,2) + 2016000*r(81,Kot,2) + 272000*r(81,Mak,2) + 312000*r(81,Kuk,2) + 248000*r(81,Kok,2) + 810000*r(82,Mat,2) + 449550*r(82,Kut,2) + 2065500*r(82,Kot,2) + 277020*r(82,Mak,2) + 318330*r(82,Kuk,2) + 252720*r(82,Kok,2)
     
      + 828200*r(83,Mat,2) + 459200*r(83,Kut,2) + 2115600*r(83,Kot,2) + 282080*r(83,Mak,2) + 324720*r(83,Kuk,2) + 257480*r(83,Kok,2) + 846600*r(84,Mat,2) + 468950*r(84,Kut,2) + 2166300*r(84,Kot,2) + 287180*r(84,Mak,2) + 331170*r(84,Kuk,2)
     
      + 262280*r(84,Kok,2) + 865200*r(85,Mat,2) + 478800*r(85,Kut,2) + 2217600*r(85,Kot,2) + 292320*r(85,Mak,2) + 337680*r(85,Kuk,2) + 267120*r(85,Kok,2) + 884000*r(86,Mat,2) + 488750*r(86,Kut,2) + 2269500*r(86,Kot,2) + 297500*r(86,Mak,2)
     
      + 344250*r(86,Kuk,2) + 272000*r(86,Kok,2) + 903000*r(87,Mat,2) + 498800*r(87,Kut,2) + 2322000*r(87,Kot,2) + 302720*r(87,Mak,2) + 350880*r(87,Kuk,2) + 276920*r(87,Kok,2) + 922200*r(88,Mat,2) + 508950*r(88,Kut,2) + 2375100*r(88,Kot,2)
     
      + 307980*r(88,Mak,2) + 357570*r(88,Kuk,2) + 281880*r(88,Kok,2) + 941600*r(89,Mat,2) + 519200*r(89,Kut,2) + 2428800*r(89,Kot,2) + 313280*r(89,Mak,2) + 364320*r(89,Kuk,2) + 286880*r(89,Kok,2) + 961200*r(90,Mat,2) + 529550*r(90,Kut,2)
     
      + 2483100*r(90,Kot,2) + 318620*r(90,Mak,2) + 371130*r(90,Kuk,2) + 291920*r(90,Kok,2) + 981000*r(91,Mat,2) + 540000*r(91,Kut,2) + 2538000*r(91,Kot,2) + 324000*r(91,Mak,2) + 378000*r(91,Kuk,2) + 297000*r(91,Kok,2) + 1001000*r(92,Mat,2)
     
      + 550550*r(92,Kut,2) + 2593500*r(92,Kot,2) + 329420*r(92,Mak,2) + 384930*r(92,Kuk,2) + 302120*r(92,Kok,2) + 1021200*r(93,Mat,2) + 561200*r(93,Kut,2) + 2649600*r(93,Kot,2) + 334880*r(93,Mak,2) + 391920*r(93,Kuk,2) + 307280*r(93,Kok,2)
     
      + 1041600*r(94,Mat,2) + 571950*r(94,Kut,2) + 2706300*r(94,Kot,2) + 340380*r(94,Mak,2) + 398970*r(94,Kuk,2) + 312480*r(94,Kok,2) + 1062200*r(95,Mat,2) + 582800*r(95,Kut,2) + 2763600*r(95,Kot,2) + 345920*r(95,Mak,2) + 406080*r(95,Kuk,2)
     
      + 317720*r(95,Kok,2) + 1083000*r(96,Mat,2) + 593750*r(96,Kut,2) + 2821500*r(96,Kot,2) + 351500*r(96,Mak,2) + 413250*r(96,Kuk,2) + 323000*r(96,Kok,2) + 1104000*r(97,Mat,2) + 604800*r(97,Kut,2) + 2880000*r(97,Kot,2) + 357120*r(97,Mak,2)
     
      + 420480*r(97,Kuk,2) + 328320*r(97,Kok,2) + 1125200*r(98,Mat,2) + 615950*r(98,Kut,2) + 2939100*r(98,Kot,2) + 362780*r(98,Mak,2) + 427770*r(98,Kuk,2) + 333680*r(98,Kok,2) + 1146600*r(99,Mat,2) + 627200*r(99,Kut,2) + 2998800*r(99,Kot,2)
     
      + 368480*r(99,Mak,2) + 435120*r(99,Kuk,2) + 339080*r(99,Kok,2) + 1168200*r(100,Mat,2) + 638550*r(100,Kut,2) + 3059100*r(100,Kot,2) + 374220*r(100,Mak,2) + 442530*r(100,Kuk,2) + 344520*r(100,Kok,2) + 1190000*r(101,Mat,2) + 650000*r(101,Kut,2)
     
      + 3120000*r(101,Kot,2) + 380000*r(101,Mak,2) + 450000*r(101,Kuk,2) + 350000*r(101,Kok,2) + 1212000*r(102,Mat,2) + 661550*r(102,Kut,2) + 3181500*r(102,Kot,2) + 385820*r(102,Mak,2) + 457530*r(102,Kuk,2) + 355520*r(102,Kok,2) + 1234200*r(103,Mat,2)
     
      + 673200*r(103,Kut,2) + 3243600*r(103,Kot,2) + 391680*r(103,Mak,2) + 465120*r(103,Kuk,2) + 361080*r(103,Kok,2) + 1256600*r(104,Mat,2) + 684950*r(104,Kut,2) + 3306300*r(104,Kot,2) + 397580*r(104,Mak,2) + 472770*r(104,Kuk,2) + 366680*r(104,Kok,2)
     
      + 1279200*r(105,Mat,2) + 696800*r(105,Kut,2) + 3369600*r(105,Kot,2) + 403520*r(105,Mak,2) + 480480*r(105,Kuk,2) + 372320*r(105,Kok,2) + 1302000*r(106,Mat,2) + 708750*r(106,Kut,2) + 3433500*r(106,Kot,2) + 409500*r(106,Mak,2) + 488250*r(106,Kuk,2)
     
      + 378000*r(106,Kok,2) + 1325000*r(107,Mat,2) + 720800*r(107,Kut,2) + 3498000*r(107,Kot,2) + 415520*r(107,Mak,2) + 496080*r(107,Kuk,2) + 383720*r(107,Kok,2) - 14820*u(2,Mas,EU,2) - 11400*u(2,Mas,IE,2) - 12160*u(2,Mas,PA,2) - 12825*u(2,Mas,KI,2)
     
      - 11020*u(2,Kos,EU,2) - 11400*u(2,Kos,IE,2) - 12160*u(2,Kos,PA,2) - 12825*u(2,Kos,KI,2) - 41420*u(2,Kuv,EU,2) - 35150*u(2,Kuv,IE,2) - 33060*u(2,Kuv,PA,2) - 31825*u(2,Kuv,KI,2) - 40470*u(2,Kov,EU,2) - 38000*u(2,Kov,IE,2) - 35910*u(2,Kov,PA,2)
     
      - 34675*u(2,Kov,KI,2) - 21660*u(2,Hsel,EU,2) - 23370*u(2,Hsel,IE,2) - 21375*u(2,Hsel,PA,2) - 24130*u(2,Hsel,KI,2) - 23465*u(2,Lsel,EU,2) - 26410*u(2,Lsel,IE,2) - 21375*u(2,Lsel,PA,2) - 23085*u(2,Lsel,KI,2) - 42370*u(2,Pap,EU,2) - 43700*u(2,Pap,IE,2)
     
      - 39710*u(2,Pap,PA,2) - 44175*u(2,Pap,KI,2) - 28880*u(3,Mas,EU,2) - 20900*u(3,Mas,IE,2) - 22040*u(3,Mas,PA,2) - 22800*u(3,Mas,KI,2) - 19380*u(3,Kos,EU,2) - 19000*u(3,Kos,IE,2) - 20140*u(3,Kos,PA,2) - 20900*u(3,Kos,KI,2) - 82080*u(3,Kuv,EU,2)
     
      - 68400*u(3,Kuv,IE,2) - 63840*u(3,Kuv,PA,2) - 60800*u(3,Kuv,KI,2) - 80180*u(3,Kov,EU,2) - 74100*u(3,Kov,IE,2) - 69540*u(3,Kov,PA,2) - 66500*u(3,Kov,KI,2) - 42940*u(3,Hsel,EU,2) - 45980*u(3,Hsel,IE,2) - 41800*u(3,Hsel,PA,2) - 47120*u(3,Hsel,KI,2)
     
      - 46360*u(3,Lsel,EU,2) - 52440*u(3,Lsel,IE,2) - 41800*u(3,Lsel,PA,2) - 44840*u(3,Lsel,KI,2) - 83980*u(3,Pap,EU,2) - 85500*u(3,Pap,IE,2) - 77140*u(3,Pap,PA,2) - 85500*u(3,Pap,KI,2) - 42180*u(4,Mas,EU,2) - 28500*u(4,Mas,IE,2) - 29640*u(4,Mas,PA,2)
     
      - 29925*u(4,Mas,KI,2) - 25080*u(4,Kos,EU,2) - 22800*u(4,Kos,IE,2) - 23940*u(4,Kos,PA,2) - 24225*u(4,Kos,KI,2) - 121980*u(4,Kuv,EU,2) - 99750*u(4,Kuv,IE,2) - 92340*u(4,Kuv,PA,2) - 86925*u(4,Kuv,KI,2) - 119130*u(4,Kov,EU,2) - 108300*u(4,Kov,IE,2)
     
      - 100890*u(4,Kov,PA,2) - 95475*u(4,Kov,KI,2) - 63840*u(4,Hsel,EU,2) - 67830*u(4,Hsel,IE,2) - 61275*u(4,Hsel,PA,2) - 68970*u(4,Hsel,KI,2) - 68685*u(4,Lsel,EU,2) - 78090*u(4,Lsel,IE,2) - 61275*u(4,Lsel,PA,2) - 65265*u(4,Lsel,KI,2)
     
      - 124830*u(4,Pap,EU,2) - 125400*u(4,Pap,IE,2) - 112290*u(4,Pap,PA,2) - 123975*u(4,Pap,KI,2) - 54720*u(5,Mas,EU,2) - 34200*u(5,Mas,IE,2) - 34960*u(5,Mas,PA,2) - 34200*u(5,Mas,KI,2) - 28120*u(5,Kos,EU,2) - 22800*u(5,Kos,IE,2) - 23560*u(5,Kos,PA,2)
     
      - 22800*u(5,Kos,KI,2) - 161120*u(5,Kuv,EU,2) - 129200*u(5,Kuv,IE,2) - 118560*u(5,Kuv,PA,2) - 110200*u(5,Kuv,KI,2) - 157320*u(5,Kov,EU,2) - 140600*u(5,Kov,IE,2) - 129960*u(5,Kov,PA,2) - 121600*u(5,Kov,KI,2) - 84360*u(5,Hsel,EU,2)
     
      - 88920*u(5,Hsel,IE,2) - 79800*u(5,Hsel,PA,2) - 89680*u(5,Hsel,KI,2) - 90440*u(5,Lsel,EU,2) - 103360*u(5,Lsel,IE,2) - 79800*u(5,Lsel,PA,2) - 84360*u(5,Lsel,KI,2) - 164920*u(5,Pap,EU,2) - 163400*u(5,Pap,IE,2) - 145160*u(5,Pap,PA,2)
     
      - 159600*u(5,Pap,KI,2) - 66500*u(6,Mas,EU,2) - 38000*u(6,Mas,IE,2) - 38000*u(6,Mas,PA,2) - 35625*u(6,Mas,KI,2) - 28500*u(6,Kos,EU,2) - 19000*u(6,Kos,IE,2) - 19000*u(6,Kos,PA,2) - 16625*u(6,Kos,KI,2) - 199500*u(6,Kuv,EU,2) - 156750*u(6,Kuv,IE,2)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 22:25:36 Page 57
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 416


     PROFIT  =E=  Profit is what we gain minus what we spend     
     
      - 142500*u(6,Kuv,PA,2) - 130625*u(6,Kuv,KI,2) - 194750*u(6,Kov,EU,2) - 171000*u(6,Kov,IE,2) - 156750*u(6,Kov,PA,2) - 144875*u(6,Kov,KI,2) - 104500*u(6,Hsel,EU,2) - 109250*u(6,Hsel,IE,2) - 97375*u(6,Hsel,PA,2) - 109250*u(6,Hsel,KI,2)
     
      - 111625*u(6,Lsel,EU,2) - 128250*u(6,Lsel,IE,2) - 97375*u(6,Lsel,PA,2) - 102125*u(6,Lsel,KI,2) - 204250*u(6,Pap,EU,2) - 199500*u(6,Pap,IE,2) - 175750*u(6,Pap,PA,2) - 192375*u(6,Pap,KI,2) - 77520*u(7,Mas,EU,2) - 39900*u(7,Mas,IE,2)
     
      - 38760*u(7,Mas,PA,2) - 34200*u(7,Mas,KI,2) - 26220*u(7,Kos,EU,2) - 11400*u(7,Kos,IE,2) - 10260*u(7,Kos,PA,2) - 5700*u(7,Kos,KI,2) - 237120*u(7,Kuv,EU,2) - 182400*u(7,Kuv,IE,2) - 164160*u(7,Kuv,PA,2) - 148200*u(7,Kuv,KI,2) - 231420*u(7,Kov,EU,2)
     
      - 199500*u(7,Kov,IE,2) - 181260*u(7,Kov,PA,2) - 165300*u(7,Kov,KI,2) - 124260*u(7,Hsel,EU,2) - 128820*u(7,Hsel,IE,2) - 114000*u(7,Hsel,PA,2) - 127680*u(7,Hsel,KI,2) - 132240*u(7,Lsel,EU,2) - 152760*u(7,Lsel,IE,2) - 114000*u(7,Lsel,PA,2)
     
      - 118560*u(7,Lsel,KI,2) - 242820*u(7,Pap,EU,2) - 233700*u(7,Pap,IE,2) - 204060*u(7,Pap,PA,2) - 222300*u(7,Pap,KI,2) - 87780*u(8,Mas,EU,2) - 39900*u(8,Mas,IE,2) - 37240*u(8,Mas,PA,2) - 29925*u(8,Mas,KI,2) - 21280*u(8,Kos,EU,2) + 2660*u(8,Kos,PA,2)
     
      + 9975*u(8,Kos,KI,2) - 273980*u(8,Kuv,EU,2) - 206150*u(8,Kuv,IE,2) - 183540*u(8,Kuv,PA,2) - 162925*u(8,Kuv,KI,2) - 267330*u(8,Kov,EU,2) - 226100*u(8,Kov,IE,2) - 203490*u(8,Kov,PA,2) - 182875*u(8,Kov,KI,2) - 143640*u(8,Hsel,EU,2)
     
      - 147630*u(8,Hsel,IE,2) - 129675*u(8,Hsel,PA,2) - 144970*u(8,Hsel,KI,2) - 152285*u(8,Lsel,EU,2) - 176890*u(8,Lsel,IE,2) - 129675*u(8,Lsel,PA,2) - 133665*u(8,Lsel,KI,2) - 280630*u(8,Pap,EU,2) - 266000*u(8,Pap,IE,2) - 230090*u(8,Pap,PA,2)
     
      - 249375*u(8,Pap,KI,2) - 97280*u(9,Mas,EU,2) - 38000*u(9,Mas,IE,2) - 33440*u(9,Mas,PA,2) - 22800*u(9,Mas,KI,2) - 13680*u(9,Kos,EU,2) + 15200*u(9,Kos,IE,2) + 19760*u(9,Kos,PA,2) + 30400*u(9,Kos,KI,2) - 310080*u(9,Kuv,EU,2) - 228000*u(9,Kuv,IE,2)
     
      - 200640*u(9,Kuv,PA,2) - 174800*u(9,Kuv,KI,2) - 302480*u(9,Kov,EU,2) - 250800*u(9,Kov,IE,2) - 223440*u(9,Kov,PA,2) - 197600*u(9,Kov,KI,2) - 162640*u(9,Hsel,EU,2) - 165680*u(9,Hsel,IE,2) - 144400*u(9,Hsel,PA,2) - 161120*u(9,Hsel,KI,2)
     
      - 171760*u(9,Lsel,EU,2) - 200640*u(9,Lsel,IE,2) - 144400*u(9,Lsel,PA,2) - 147440*u(9,Lsel,KI,2) - 317680*u(9,Pap,EU,2) - 296400*u(9,Pap,IE,2) - 253840*u(9,Pap,PA,2) - 273600*u(9,Pap,KI,2) - 106020*u(10,Mas,EU,2) - 34200*u(10,Mas,IE,2)
     
      - 27360*u(10,Mas,PA,2) - 12825*u(10,Mas,KI,2) - 3420*u(10,Kos,EU,2) + 34200*u(10,Kos,IE,2) + 41040*u(10,Kos,PA,2) + 55575*u(10,Kos,KI,2) - 345420*u(10,Kuv,EU,2) - 247950*u(10,Kuv,IE,2) - 215460*u(10,Kuv,PA,2) - 183825*u(10,Kuv,KI,2)
     
      - 336870*u(10,Kov,EU,2) - 273600*u(10,Kov,IE,2) - 241110*u(10,Kov,PA,2) - 209475*u(10,Kov,KI,2) - 181260*u(10,Hsel,EU,2) - 182970*u(10,Hsel,IE,2) - 158175*u(10,Hsel,PA,2) - 176130*u(10,Hsel,KI,2) - 190665*u(10,Lsel,EU,2) - 224010*u(10,Lsel,IE,2)
     
      - 158175*u(10,Lsel,PA,2) - 159885*u(10,Lsel,KI,2) - 353970*u(10,Pap,EU,2) - 324900*u(10,Pap,IE,2) - 275310*u(10,Pap,PA,2) - 294975*u(10,Pap,KI,2) - 114000*u(11,Mas,EU,2) - 28500*u(11,Mas,IE,2) - 19000*u(11,Mas,PA,2) + 9500*u(11,Kos,EU,2)
     
      + 57000*u(11,Kos,IE,2) + 66500*u(11,Kos,PA,2) + 85500*u(11,Kos,KI,2) - 380000*u(11,Kuv,EU,2) - 266000*u(11,Kuv,IE,2) - 228000*u(11,Kuv,PA,2) - 190000*u(11,Kuv,KI,2) - 370500*u(11,Kov,EU,2) - 294500*u(11,Kov,IE,2) - 256500*u(11,Kov,PA,2)
     
      - 218500*u(11,Kov,KI,2) - 199500*u(11,Hsel,EU,2) - 199500*u(11,Hsel,IE,2) - 171000*u(11,Hsel,PA,2) - 190000*u(11,Hsel,KI,2) - 209000*u(11,Lsel,EU,2) - 247000*u(11,Lsel,IE,2) - 171000*u(11,Lsel,PA,2) - 171000*u(11,Lsel,KI,2) - 389500*u(11,Pap,EU,2)
     
      - 351500*u(11,Pap,IE,2) - 294500*u(11,Pap,PA,2) - 313500*u(11,Pap,KI,2) - 121220*u(12,Mas,EU,2) - 20900*u(12,Mas,IE,2) - 8360.00000000003*u(12,Mas,PA,2) + 15675*u(12,Mas,KI,2) + 25080*u(12,Kos,EU,2) + 83600*u(12,Kos,IE,2) + 96140*u(12,Kos,PA,2)
     
      + 120175*u(12,Kos,KI,2) - 413820*u(12,Kuv,EU,2) - 282150*u(12,Kuv,IE,2) - 238260*u(12,Kuv,PA,2) - 193325*u(12,Kuv,KI,2) - 403370*u(12,Kov,EU,2) - 313500*u(12,Kov,IE,2) - 269610*u(12,Kov,PA,2) - 224675*u(12,Kov,KI,2) - 217360*u(12,Hsel,EU,2)
     
      - 215270*u(12,Hsel,IE,2) - 182875*u(12,Hsel,PA,2) - 202730*u(12,Hsel,KI,2) - 226765*u(12,Lsel,EU,2) - 269610*u(12,Lsel,IE,2) - 182875*u(12,Lsel,PA,2) - 180785*u(12,Lsel,KI,2) - 424270*u(12,Pap,EU,2) - 376200*u(12,Pap,IE,2) - 311410*u(12,Pap,PA,2)
     
      - 329175*u(12,Pap,KI,2) - 127680*u(13,Mas,EU,2) - 11400*u(13,Mas,IE,2) + 4559.99999999997*u(13,Mas,PA,2) + 34200*u(13,Mas,KI,2) + 43320*u(13,Kos,EU,2) + 114000*u(13,Kos,IE,2) + 129960*u(13,Kos,PA,2) + 159600*u(13,Kos,KI,2) - 446880*u(13,Kuv,EU,2)
     
      - 296400*u(13,Kuv,IE,2) - 246240*u(13,Kuv,PA,2) - 193800*u(13,Kuv,KI,2) - 435480*u(13,Kov,EU,2) - 330600*u(13,Kov,IE,2) - 280440*u(13,Kov,PA,2) - 228000*u(13,Kov,KI,2) - 234840*u(13,Hsel,EU,2) - 230280*u(13,Hsel,IE,2) - 193800*u(13,Hsel,PA,2)
     
      - 214320*u(13,Hsel,KI,2) - 243960*u(13,Lsel,EU,2) - 291840*u(13,Lsel,IE,2) - 193800*u(13,Lsel,PA,2) - 189240*u(13,Lsel,KI,2) - 458280*u(13,Pap,EU,2) - 399000*u(13,Pap,IE,2) - 326040*u(13,Pap,PA,2) - 342000*u(13,Pap,KI,2) - 133380*u(14,Mas,EU,2)
     
      + 19760*u(14,Mas,PA,2) + 55575*u(14,Mas,KI,2) + 64220*u(14,Kos,EU,2) + 148200*u(14,Kos,IE,2) + 167960*u(14,Kos,PA,2) + 203775*u(14,Kos,KI,2) - 479180*u(14,Kuv,EU,2) - 308750*u(14,Kuv,IE,2) - 251940*u(14,Kuv,PA,2) - 191425*u(14,Kuv,KI,2)
     
      - 466830*u(14,Kov,EU,2) - 345800*u(14,Kov,IE,2) - 288990*u(14,Kov,PA,2) - 228475*u(14,Kov,KI,2) - 251940*u(14,Hsel,EU,2) - 244530*u(14,Hsel,IE,2) - 203775*u(14,Hsel,PA,2) - 224770*u(14,Hsel,KI,2) - 260585*u(14,Lsel,EU,2) - 313690*u(14,Lsel,IE,2)
     
      - 203775*u(14,Lsel,PA,2) - 196365*u(14,Lsel,KI,2) - 491530*u(14,Pap,EU,2) - 419900*u(14,Pap,IE,2) - 338390*u(14,Pap,PA,2) - 351975*u(14,Pap,KI,2) - 138320*u(15,Mas,EU,2) + 13300*u(15,Mas,IE,2) + 37240*u(15,Mas,PA,2) + 79800*u(15,Mas,KI,2)
     
      + 87780*u(15,Kos,EU,2) + 186200*u(15,Kos,IE,2) + 210140*u(15,Kos,PA,2) + 252700*u(15,Kos,KI,2) - 510720*u(15,Kuv,EU,2) - 319200*u(15,Kuv,IE,2) - 255360*u(15,Kuv,PA,2) - 186200*u(15,Kuv,KI,2) - 497420*u(15,Kov,EU,2) - 359100*u(15,Kov,IE,2)
     
      - 295260*u(15,Kov,PA,2) - 226100*u(15,Kov,KI,2) - 268660*u(15,Hsel,EU,2) - 258020*u(15,Hsel,IE,2) - 212800*u(15,Hsel,PA,2) - 234080*u(15,Hsel,KI,2) - 276640*u(15,Lsel,EU,2) - 335160*u(15,Lsel,IE,2) - 212800*u(15,Lsel,PA,2) - 202160*u(15,Lsel,KI,2)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 22:25:36 Page 58
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 416


     PROFIT  =E=  Profit is what we gain minus what we spend     
     
      - 524020*u(15,Pap,EU,2) - 438900*u(15,Pap,IE,2) - 348460*u(15,Pap,PA,2) - 359100*u(15,Pap,KI,2) - 142500*u(16,Mas,EU,2) + 28500*u(16,Mas,IE,2) + 57000*u(16,Mas,PA,2) + 106875*u(16,Mas,KI,2) + 114000*u(16,Kos,EU,2) + 228000*u(16,Kos,IE,2)
     
      + 256500*u(16,Kos,PA,2) + 306375*u(16,Kos,KI,2) - 541500*u(16,Kuv,EU,2) - 327750*u(16,Kuv,IE,2) - 256500*u(16,Kuv,PA,2) - 178125*u(16,Kuv,KI,2) - 527250*u(16,Kov,EU,2) - 370500*u(16,Kov,IE,2) - 299250*u(16,Kov,PA,2) - 220875*u(16,Kov,KI,2)
     
      - 285000*u(16,Hsel,EU,2) - 270750*u(16,Hsel,IE,2) - 220875*u(16,Hsel,PA,2) - 242250*u(16,Hsel,KI,2) - 292125*u(16,Lsel,EU,2) - 356250*u(16,Lsel,IE,2) - 220875*u(16,Lsel,PA,2) - 206625*u(16,Lsel,KI,2) - 555750*u(16,Pap,EU,2) - 456000*u(16,Pap,IE,2)
     
      - 356250*u(16,Pap,PA,2) - 363375*u(16,Pap,KI,2) - 145920*u(17,Mas,EU,2) + 45600*u(17,Mas,IE,2) + 79040*u(17,Mas,PA,2) + 136800*u(17,Mas,KI,2) + 142880*u(17,Kos,EU,2) + 273600*u(17,Kos,IE,2) + 307040*u(17,Kos,PA,2) + 364800*u(17,Kos,KI,2)
     
      - 571520*u(17,Kuv,EU,2) - 334400*u(17,Kuv,IE,2) - 255360*u(17,Kuv,PA,2) - 167200*u(17,Kuv,KI,2) - 556320*u(17,Kov,EU,2) - 380000*u(17,Kov,IE,2) - 300960*u(17,Kov,PA,2) - 212800*u(17,Kov,KI,2) - 300960*u(17,Hsel,EU,2) - 282720*u(17,Hsel,IE,2)
     
      - 228000*u(17,Hsel,PA,2) - 249280*u(17,Hsel,KI,2) - 307040*u(17,Lsel,EU,2) - 376960*u(17,Lsel,IE,2) - 228000*u(17,Lsel,PA,2) - 209760*u(17,Lsel,KI,2) - 586720*u(17,Pap,EU,2) - 471200*u(17,Pap,IE,2) - 361760*u(17,Pap,PA,2) - 364800*u(17,Pap,KI,2)
     
      - 148580*u(18,Mas,EU,2) + 64600*u(18,Mas,IE,2) + 103360*u(18,Mas,PA,2) + 169575*u(18,Mas,KI,2) + 174420*u(18,Kos,EU,2) + 323000*u(18,Kos,IE,2) + 361760*u(18,Kos,PA,2) + 427975*u(18,Kos,KI,2) - 600780*u(18,Kuv,EU,2) - 339150*u(18,Kuv,IE,2)
     
      - 251940*u(18,Kuv,PA,2) - 153425*u(18,Kuv,KI,2) - 584630*u(18,Kov,EU,2) - 387600*u(18,Kov,IE,2) - 300390*u(18,Kov,PA,2) - 201875*u(18,Kov,KI,2) - 316540*u(18,Hsel,EU,2) - 293930*u(18,Hsel,IE,2) - 234175*u(18,Hsel,PA,2) - 255170*u(18,Hsel,KI,2)
     
      - 321385*u(18,Lsel,EU,2) - 397290*u(18,Lsel,IE,2) - 234175*u(18,Lsel,PA,2) - 211565*u(18,Lsel,KI,2) - 616930*u(18,Pap,EU,2) - 484500*u(18,Pap,IE,2) - 364990*u(18,Pap,PA,2) - 363375*u(18,Pap,KI,2) - 150480*u(19,Mas,EU,2) + 85500*u(19,Mas,IE,2)
     
      + 129960*u(19,Mas,PA,2) + 205200*u(19,Mas,KI,2) + 208620*u(19,Kos,EU,2) + 376200*u(19,Kos,IE,2) + 420660*u(19,Kos,PA,2) + 495900*u(19,Kos,KI,2) - 629280*u(19,Kuv,EU,2) - 342000*u(19,Kuv,IE,2) - 246240*u(19,Kuv,PA,2) - 136800*u(19,Kuv,KI,2)
     
      - 612180*u(19,Kov,EU,2) - 393300*u(19,Kov,IE,2) - 297540*u(19,Kov,PA,2) - 188100*u(19,Kov,KI,2) - 331740*u(19,Hsel,EU,2) - 304380*u(19,Hsel,IE,2) - 239400*u(19,Hsel,PA,2) - 259920*u(19,Hsel,KI,2) - 335160*u(19,Lsel,EU,2) - 417240*u(19,Lsel,IE,2)
     
      - 239400*u(19,Lsel,PA,2) - 212040*u(19,Lsel,KI,2) - 646380*u(19,Pap,EU,2) - 495900*u(19,Pap,IE,2) - 365940*u(19,Pap,PA,2) - 359100*u(19,Pap,KI,2) - 151620*u(20,Mas,EU,2) + 108300*u(20,Mas,IE,2) + 158840*u(20,Mas,PA,2) + 243675*u(20,Mas,KI,2)
     
      + 245480*u(20,Kos,EU,2) + 433200*u(20,Kos,IE,2) + 483740*u(20,Kos,PA,2) + 568575*u(20,Kos,KI,2) - 657020*u(20,Kuv,EU,2) - 342950*u(20,Kuv,IE,2) - 238260*u(20,Kuv,PA,2) - 117325*u(20,Kuv,KI,2) - 638970*u(20,Kov,EU,2) - 397100*u(20,Kov,IE,2)
     
      - 292410*u(20,Kov,PA,2) - 171475*u(20,Kov,KI,2) - 346560*u(20,Hsel,EU,2) - 314070*u(20,Hsel,IE,2) - 243675*u(20,Hsel,PA,2) - 263530*u(20,Hsel,KI,2) - 348365*u(20,Lsel,EU,2) - 436810*u(20,Lsel,IE,2) - 243675*u(20,Lsel,PA,2) - 211185*u(20,Lsel,KI,2)
     
      - 675070*u(20,Pap,EU,2) - 505400*u(20,Pap,IE,2) - 364610*u(20,Pap,PA,2) - 351975*u(20,Pap,KI,2) - 152000*u(21,Mas,EU,2) + 133000*u(21,Mas,IE,2) + 190000*u(21,Mas,PA,2) + 285000*u(21,Mas,KI,2) + 285000*u(21,Kos,EU,2) + 494000*u(21,Kos,IE,2)
     
      + 551000*u(21,Kos,PA,2) + 646000*u(21,Kos,KI,2) - 684000*u(21,Kuv,EU,2) - 342000*u(21,Kuv,IE,2) - 228000*u(21,Kuv,PA,2) - 95000*u(21,Kuv,KI,2) - 665000*u(21,Kov,EU,2) - 399000*u(21,Kov,IE,2) - 285000*u(21,Kov,PA,2) - 152000*u(21,Kov,KI,2)
     
      - 361000*u(21,Hsel,EU,2) - 323000*u(21,Hsel,IE,2) - 247000*u(21,Hsel,PA,2) - 266000*u(21,Hsel,KI,2) - 361000*u(21,Lsel,EU,2) - 456000*u(21,Lsel,IE,2) - 247000*u(21,Lsel,PA,2) - 209000*u(21,Lsel,KI,2) - 703000*u(21,Pap,EU,2) - 513000*u(21,Pap,IE,2)
     
      - 361000*u(21,Pap,PA,2) - 342000*u(21,Pap,KI,2) - 151620*u(22,Mas,EU,2) + 159600*u(22,Mas,IE,2) + 223440*u(22,Mas,PA,2) + 329175*u(22,Mas,KI,2) + 327180*u(22,Kos,EU,2) + 558600*u(22,Kos,IE,2) + 622440*u(22,Kos,PA,2) + 728175*u(22,Kos,KI,2)
     
      - 710220*u(22,Kuv,EU,2) - 339150*u(22,Kuv,IE,2) - 215460*u(22,Kuv,PA,2) - 69825*u(22,Kuv,KI,2) - 690270*u(22,Kov,EU,2) - 399000*u(22,Kov,IE,2) - 275310*u(22,Kov,PA,2) - 129675*u(22,Kov,KI,2) - 375060*u(22,Hsel,EU,2) - 331170*u(22,Hsel,IE,2)
     
      - 249375*u(22,Hsel,PA,2) - 267330*u(22,Hsel,KI,2) - 373065*u(22,Lsel,EU,2) - 474810*u(22,Lsel,IE,2) - 249375*u(22,Lsel,PA,2) - 205485*u(22,Lsel,KI,2) - 730170*u(22,Pap,EU,2) - 518700*u(22,Pap,IE,2) - 355110*u(22,Pap,PA,2) - 329175*u(22,Pap,KI,2)
     
      - 150480*u(23,Mas,EU,2) + 188100*u(23,Mas,IE,2) + 259160*u(23,Mas,PA,2) + 376200*u(23,Mas,KI,2) + 372020*u(23,Kos,EU,2) + 627000*u(23,Kos,IE,2) + 698060*u(23,Kos,PA,2) + 815100*u(23,Kos,KI,2) - 735680*u(23,Kuv,EU,2) - 334400*u(23,Kuv,IE,2)
     
      - 200640*u(23,Kuv,PA,2) - 41800*u(23,Kuv,KI,2) - 714780*u(23,Kov,EU,2) - 397100*u(23,Kov,IE,2) - 263340*u(23,Kov,PA,2) - 104500*u(23,Kov,KI,2) - 388740*u(23,Hsel,EU,2) - 338580*u(23,Hsel,IE,2) - 250800*u(23,Hsel,PA,2) - 267520*u(23,Hsel,KI,2)
     
      - 384560*u(23,Lsel,EU,2) - 493240*u(23,Lsel,IE,2) - 250800*u(23,Lsel,PA,2) - 200640*u(23,Lsel,KI,2) - 756580*u(23,Pap,EU,2) - 522500*u(23,Pap,IE,2) - 346940*u(23,Pap,PA,2) - 313500*u(23,Pap,KI,2) - 0.19*b(Mat,2) - 0.15*b(Kut,2) - 0.12*b(Kot,2)
     
      - 0.18*b(Mak,2) - 0.15*b(Kuk,2) - 0.15*b(Kok,2) + Pr(2) + 0.7*Cap(Pap,3) + 0.1*Cap(SAW,3) + 0.3*Cap(PLY,3) + 0.5*Cap(SPULP,3) + 0.5*Cap(HPULP,3) =E= 0 ; (LHS = 0)
     
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 22:25:36 Page 59
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 416


     PROFIT  =E=  Profit is what we gain minus what we spend

PROFIT(3)..  0.542*y(Mas,3) + 0.492*y(Kus,3) + 0.442*y(Kos,3) + 2.492*y(Kuv,3) + 2.592*y(Kov,3) + 0.82*y(Hsel,3) + 0.8*y(Lsel,3) + 1.7*y(Pap,3) + 0.19*s(Mat,3) + 0.15*s(Kut,3) + 0.12*s(Kot,3) + 0.18*s(Mak,3) + 0.15*s(Kuk,3) + 0.15*s(Kok,3)
     
      + 2000*r(2,Mat,3) + 1550*r(2,Kut,3) + 1500*r(2,Kot,3) + 1820*r(2,Mak,3) + 1530*r(2,Kuk,3) + 1520*r(2,Kok,3) + 4200*r(3,Mat,3) + 3200*r(3,Kut,3) + 3600*r(3,Kot,3) + 3680*r(3,Mak,3) + 3120*r(3,Kuk,3) + 3080*r(3,Kok,3) + 6600*r(4,Mat,3)
     
      + 4950*r(4,Kut,3) + 6300*r(4,Kot,3) + 5580*r(4,Mak,3) + 4770*r(4,Kuk,3) + 4680*r(4,Kok,3) + 9200*r(5,Mat,3) + 6800*r(5,Kut,3) + 9600*r(5,Kot,3) + 7520*r(5,Mak,3) + 6480*r(5,Kuk,3) + 6320*r(5,Kok,3) + 12000*r(6,Mat,3) + 8750*r(6,Kut,3)
     
      + 13500*r(6,Kot,3) + 9500*r(6,Mak,3) + 8250*r(6,Kuk,3) + 8000*r(6,Kok,3) + 15000*r(7,Mat,3) + 10800*r(7,Kut,3) + 18000*r(7,Kot,3) + 11520*r(7,Mak,3) + 10080*r(7,Kuk,3) + 9720*r(7,Kok,3) + 18200*r(8,Mat,3) + 12950*r(8,Kut,3) + 23100*r(8,Kot,3)
     
      + 13580*r(8,Mak,3) + 11970*r(8,Kuk,3) + 11480*r(8,Kok,3) + 21600*r(9,Mat,3) + 15200*r(9,Kut,3) + 28800*r(9,Kot,3) + 15680*r(9,Mak,3) + 13920*r(9,Kuk,3) + 13280*r(9,Kok,3) + 25200*r(10,Mat,3) + 17550*r(10,Kut,3) + 35100*r(10,Kot,3)
     
      + 17820*r(10,Mak,3) + 15930*r(10,Kuk,3) + 15120*r(10,Kok,3) + 29000*r(11,Mat,3) + 20000*r(11,Kut,3) + 42000*r(11,Kot,3) + 20000*r(11,Mak,3) + 18000*r(11,Kuk,3) + 17000*r(11,Kok,3) + 33000*r(12,Mat,3) + 22550*r(12,Kut,3) + 49500*r(12,Kot,3)
     
      + 22220*r(12,Mak,3) + 20130*r(12,Kuk,3) + 18920*r(12,Kok,3) + 37200*r(13,Mat,3) + 25200*r(13,Kut,3) + 57600*r(13,Kot,3) + 24480*r(13,Mak,3) + 22320*r(13,Kuk,3) + 20880*r(13,Kok,3) + 41600*r(14,Mat,3) + 27950*r(14,Kut,3) + 66300*r(14,Kot,3)
     
      + 26780*r(14,Mak,3) + 24570*r(14,Kuk,3) + 22880*r(14,Kok,3) + 46200*r(15,Mat,3) + 30800*r(15,Kut,3) + 75600*r(15,Kot,3) + 29120*r(15,Mak,3) + 26880*r(15,Kuk,3) + 24920*r(15,Kok,3) + 51000*r(16,Mat,3) + 33750*r(16,Kut,3) + 85500*r(16,Kot,3)
     
      + 31500*r(16,Mak,3) + 29250*r(16,Kuk,3) + 27000*r(16,Kok,3) + 56000*r(17,Mat,3) + 36800*r(17,Kut,3) + 96000*r(17,Kot,3) + 33920*r(17,Mak,3) + 31680*r(17,Kuk,3) + 29120*r(17,Kok,3) + 61200*r(18,Mat,3) + 39950*r(18,Kut,3) + 107100*r(18,Kot,3)
     
      + 36380*r(18,Mak,3) + 34170*r(18,Kuk,3) + 31280*r(18,Kok,3) + 66600*r(19,Mat,3) + 43200*r(19,Kut,3) + 118800*r(19,Kot,3) + 38880*r(19,Mak,3) + 36720*r(19,Kuk,3) + 33480*r(19,Kok,3) + 72200*r(20,Mat,3) + 46550*r(20,Kut,3) + 131100*r(20,Kot,3)
     
      + 41420*r(20,Mak,3) + 39330*r(20,Kuk,3) + 35720*r(20,Kok,3) + 78000*r(21,Mat,3) + 50000*r(21,Kut,3) + 144000*r(21,Kot,3) + 44000*r(21,Mak,3) + 42000*r(21,Kuk,3) + 38000*r(21,Kok,3) + 84000*r(22,Mat,3) + 53550*r(22,Kut,3) + 157500*r(22,Kot,3)
     
      + 46620*r(22,Mak,3) + 44730*r(22,Kuk,3) + 40320*r(22,Kok,3) + 90200*r(23,Mat,3) + 57200*r(23,Kut,3) + 171600*r(23,Kot,3) + 49280*r(23,Mak,3) + 47520*r(23,Kuk,3) + 42680*r(23,Kok,3) + 96600*r(24,Mat,3) + 60950*r(24,Kut,3) + 186300*r(24,Kot,3)
     
      + 51980*r(24,Mak,3) + 50370*r(24,Kuk,3) + 45080*r(24,Kok,3) + 103200*r(25,Mat,3) + 64800*r(25,Kut,3) + 201600*r(25,Kot,3) + 54720*r(25,Mak,3) + 53280*r(25,Kuk,3) + 47520*r(25,Kok,3) + 110000*r(26,Mat,3) + 68750*r(26,Kut,3) + 217500*r(26,Kot,3)
     
      + 57500*r(26,Mak,3) + 56250*r(26,Kuk,3) + 50000*r(26,Kok,3) + 117000*r(27,Mat,3) + 72800*r(27,Kut,3) + 234000*r(27,Kot,3) + 60320*r(27,Mak,3) + 59280*r(27,Kuk,3) + 52520*r(27,Kok,3) + 124200*r(28,Mat,3) + 76950*r(28,Kut,3) + 251100*r(28,Kot,3)
     
      + 63180*r(28,Mak,3) + 62370*r(28,Kuk,3) + 55080*r(28,Kok,3) + 131600*r(29,Mat,3) + 81200*r(29,Kut,3) + 268800*r(29,Kot,3) + 66080*r(29,Mak,3) + 65520*r(29,Kuk,3) + 57680*r(29,Kok,3) + 139200*r(30,Mat,3) + 85550*r(30,Kut,3) + 287100*r(30,Kot,3)
     
      + 69020*r(30,Mak,3) + 68730*r(30,Kuk,3) + 60320*r(30,Kok,3) + 147000*r(31,Mat,3) + 90000*r(31,Kut,3) + 306000*r(31,Kot,3) + 72000*r(31,Mak,3) + 72000*r(31,Kuk,3) + 63000*r(31,Kok,3) + 155000*r(32,Mat,3) + 94550*r(32,Kut,3) + 325500*r(32,Kot,3)
     
      + 75020*r(32,Mak,3) + 75330*r(32,Kuk,3) + 65720*r(32,Kok,3) + 163200*r(33,Mat,3) + 99200*r(33,Kut,3) + 345600*r(33,Kot,3) + 78080*r(33,Mak,3) + 78720*r(33,Kuk,3) + 68480*r(33,Kok,3) + 171600*r(34,Mat,3) + 103950*r(34,Kut,3) + 366300*r(34,Kot,3)
     
      + 81180*r(34,Mak,3) + 82170*r(34,Kuk,3) + 71280*r(34,Kok,3) + 180200*r(35,Mat,3) + 108800*r(35,Kut,3) + 387600*r(35,Kot,3) + 84320*r(35,Mak,3) + 85680*r(35,Kuk,3) + 74120*r(35,Kok,3) + 189000*r(36,Mat,3) + 113750*r(36,Kut,3) + 409500*r(36,Kot,3)
     
      + 87500*r(36,Mak,3) + 89250*r(36,Kuk,3) + 77000*r(36,Kok,3) + 198000*r(37,Mat,3) + 118800*r(37,Kut,3) + 432000*r(37,Kot,3) + 90720*r(37,Mak,3) + 92880*r(37,Kuk,3) + 79920*r(37,Kok,3) + 207200*r(38,Mat,3) + 123950*r(38,Kut,3) + 455100*r(38,Kot,3)
     
      + 93980*r(38,Mak,3) + 96570*r(38,Kuk,3) + 82880*r(38,Kok,3) + 216600*r(39,Mat,3) + 129200*r(39,Kut,3) + 478800*r(39,Kot,3) + 97280*r(39,Mak,3) + 100320*r(39,Kuk,3) + 85880*r(39,Kok,3) + 226200*r(40,Mat,3) + 134550*r(40,Kut,3) + 503100*r(40,Kot,3)
     
      + 100620*r(40,Mak,3) + 104130*r(40,Kuk,3) + 88920*r(40,Kok,3) + 236000*r(41,Mat,3) + 140000*r(41,Kut,3) + 528000*r(41,Kot,3) + 104000*r(41,Mak,3) + 108000*r(41,Kuk,3) + 92000*r(41,Kok,3) + 246000*r(42,Mat,3) + 145550*r(42,Kut,3) + 553500*r(42,Kot,3)
     
      + 107420*r(42,Mak,3) + 111930*r(42,Kuk,3) + 95120*r(42,Kok,3) + 256200*r(43,Mat,3) + 151200*r(43,Kut,3) + 579600*r(43,Kot,3) + 110880*r(43,Mak,3) + 115920*r(43,Kuk,3) + 98280*r(43,Kok,3) + 266600*r(44,Mat,3) + 156950*r(44,Kut,3) + 606300*r(44,Kot,3)
     
      + 114380*r(44,Mak,3) + 119970*r(44,Kuk,3) + 101480*r(44,Kok,3) + 277200*r(45,Mat,3) + 162800*r(45,Kut,3) + 633600*r(45,Kot,3) + 117920*r(45,Mak,3) + 124080*r(45,Kuk,3) + 104720*r(45,Kok,3) + 288000*r(46,Mat,3) + 168750*r(46,Kut,3)
     
      + 661500*r(46,Kot,3) + 121500*r(46,Mak,3) + 128250*r(46,Kuk,3) + 108000*r(46,Kok,3) + 299000*r(47,Mat,3) + 174800*r(47,Kut,3) + 690000*r(47,Kot,3) + 125120*r(47,Mak,3) + 132480*r(47,Kuk,3) + 111320*r(47,Kok,3) + 310200*r(48,Mat,3)
     
      + 180950*r(48,Kut,3) + 719100*r(48,Kot,3) + 128780*r(48,Mak,3) + 136770*r(48,Kuk,3) + 114680*r(48,Kok,3) + 321600*r(49,Mat,3) + 187200*r(49,Kut,3) + 748800*r(49,Kot,3) + 132480*r(49,Mak,3) + 141120*r(49,Kuk,3) + 118080*r(49,Kok,3)
     
      + 333200*r(50,Mat,3) + 193550*r(50,Kut,3) + 779100*r(50,Kot,3) + 136220*r(50,Mak,3) + 145530*r(50,Kuk,3) + 121520*r(50,Kok,3) + 345000*r(51,Mat,3) + 200000*r(51,Kut,3) + 810000*r(51,Kot,3) + 140000*r(51,Mak,3) + 150000*r(51,Kuk,3)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 22:25:36 Page 60
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 416


     PROFIT  =E=  Profit is what we gain minus what we spend     
     
      + 125000*r(51,Kok,3) + 357000*r(52,Mat,3) + 206550*r(52,Kut,3) + 841500*r(52,Kot,3) + 143820*r(52,Mak,3) + 154530*r(52,Kuk,3) + 128520*r(52,Kok,3) + 369200*r(53,Mat,3) + 213200*r(53,Kut,3) + 873600*r(53,Kot,3) + 147680*r(53,Mak,3)
     
      + 159120*r(53,Kuk,3) + 132080*r(53,Kok,3) + 381600*r(54,Mat,3) + 219950*r(54,Kut,3) + 906300*r(54,Kot,3) + 151580*r(54,Mak,3) + 163770*r(54,Kuk,3) + 135680*r(54,Kok,3) + 394200*r(55,Mat,3) + 226800*r(55,Kut,3) + 939600*r(55,Kot,3)
     
      + 155520*r(55,Mak,3) + 168480*r(55,Kuk,3) + 139320*r(55,Kok,3) + 407000*r(56,Mat,3) + 233750*r(56,Kut,3) + 973500*r(56,Kot,3) + 159500*r(56,Mak,3) + 173250*r(56,Kuk,3) + 143000*r(56,Kok,3) + 420000*r(57,Mat,3) + 240800*r(57,Kut,3)
     
      + 1008000*r(57,Kot,3) + 163520*r(57,Mak,3) + 178080*r(57,Kuk,3) + 146720*r(57,Kok,3) + 433200*r(58,Mat,3) + 247950*r(58,Kut,3) + 1043100*r(58,Kot,3) + 167580*r(58,Mak,3) + 182970*r(58,Kuk,3) + 150480*r(58,Kok,3) + 446600*r(59,Mat,3)
     
      + 255200*r(59,Kut,3) + 1078800*r(59,Kot,3) + 171680*r(59,Mak,3) + 187920*r(59,Kuk,3) + 154280*r(59,Kok,3) + 460200*r(60,Mat,3) + 262550*r(60,Kut,3) + 1115100*r(60,Kot,3) + 175820*r(60,Mak,3) + 192930*r(60,Kuk,3) + 158120*r(60,Kok,3)
     
      + 474000*r(61,Mat,3) + 270000*r(61,Kut,3) + 1152000*r(61,Kot,3) + 180000*r(61,Mak,3) + 198000*r(61,Kuk,3) + 162000*r(61,Kok,3) + 488000*r(62,Mat,3) + 277550*r(62,Kut,3) + 1189500*r(62,Kot,3) + 184220*r(62,Mak,3) + 203130*r(62,Kuk,3)
     
      + 165920*r(62,Kok,3) + 502200*r(63,Mat,3) + 285200*r(63,Kut,3) + 1227600*r(63,Kot,3) + 188480*r(63,Mak,3) + 208320*r(63,Kuk,3) + 169880*r(63,Kok,3) + 516600*r(64,Mat,3) + 292950*r(64,Kut,3) + 1266300*r(64,Kot,3) + 192780*r(64,Mak,3)
     
      + 213570*r(64,Kuk,3) + 173880*r(64,Kok,3) + 531200*r(65,Mat,3) + 300800*r(65,Kut,3) + 1305600*r(65,Kot,3) + 197120*r(65,Mak,3) + 218880*r(65,Kuk,3) + 177920*r(65,Kok,3) + 546000*r(66,Mat,3) + 308750*r(66,Kut,3) + 1345500*r(66,Kot,3)
     
      + 201500*r(66,Mak,3) + 224250*r(66,Kuk,3) + 182000*r(66,Kok,3) + 561000*r(67,Mat,3) + 316800*r(67,Kut,3) + 1386000*r(67,Kot,3) + 205920*r(67,Mak,3) + 229680*r(67,Kuk,3) + 186120*r(67,Kok,3) + 576200*r(68,Mat,3) + 324950*r(68,Kut,3)
     
      + 1427100*r(68,Kot,3) + 210380*r(68,Mak,3) + 235170*r(68,Kuk,3) + 190280*r(68,Kok,3) + 591600*r(69,Mat,3) + 333200*r(69,Kut,3) + 1468800*r(69,Kot,3) + 214880*r(69,Mak,3) + 240720*r(69,Kuk,3) + 194480*r(69,Kok,3) + 607200*r(70,Mat,3)
     
      + 341550*r(70,Kut,3) + 1511100*r(70,Kot,3) + 219420*r(70,Mak,3) + 246330*r(70,Kuk,3) + 198720*r(70,Kok,3) + 623000*r(71,Mat,3) + 350000*r(71,Kut,3) + 1554000*r(71,Kot,3) + 224000*r(71,Mak,3) + 252000*r(71,Kuk,3) + 203000*r(71,Kok,3)
     
      + 639000*r(72,Mat,3) + 358550*r(72,Kut,3) + 1597500*r(72,Kot,3) + 228620*r(72,Mak,3) + 257730*r(72,Kuk,3) + 207320*r(72,Kok,3) + 655200*r(73,Mat,3) + 367200*r(73,Kut,3) + 1641600*r(73,Kot,3) + 233280*r(73,Mak,3) + 263520*r(73,Kuk,3)
     
      + 211680*r(73,Kok,3) + 671600*r(74,Mat,3) + 375950*r(74,Kut,3) + 1686300*r(74,Kot,3) + 237980*r(74,Mak,3) + 269370*r(74,Kuk,3) + 216080*r(74,Kok,3) + 688200*r(75,Mat,3) + 384800*r(75,Kut,3) + 1731600*r(75,Kot,3) + 242720*r(75,Mak,3)
     
      + 275280*r(75,Kuk,3) + 220520*r(75,Kok,3) + 705000*r(76,Mat,3) + 393750*r(76,Kut,3) + 1777500*r(76,Kot,3) + 247500*r(76,Mak,3) + 281250*r(76,Kuk,3) + 225000*r(76,Kok,3) + 722000*r(77,Mat,3) + 402800*r(77,Kut,3) + 1824000*r(77,Kot,3)
     
      + 252320*r(77,Mak,3) + 287280*r(77,Kuk,3) + 229520*r(77,Kok,3) + 739200*r(78,Mat,3) + 411950*r(78,Kut,3) + 1871100*r(78,Kot,3) + 257180*r(78,Mak,3) + 293370*r(78,Kuk,3) + 234080*r(78,Kok,3) + 756600*r(79,Mat,3) + 421200*r(79,Kut,3)
     
      + 1918800*r(79,Kot,3) + 262080*r(79,Mak,3) + 299520*r(79,Kuk,3) + 238680*r(79,Kok,3) + 774200*r(80,Mat,3) + 430550*r(80,Kut,3) + 1967100*r(80,Kot,3) + 267020*r(80,Mak,3) + 305730*r(80,Kuk,3) + 243320*r(80,Kok,3) + 792000*r(81,Mat,3)
     
      + 440000*r(81,Kut,3) + 2016000*r(81,Kot,3) + 272000*r(81,Mak,3) + 312000*r(81,Kuk,3) + 248000*r(81,Kok,3) + 810000*r(82,Mat,3) + 449550*r(82,Kut,3) + 2065500*r(82,Kot,3) + 277020*r(82,Mak,3) + 318330*r(82,Kuk,3) + 252720*r(82,Kok,3)
     
      + 828200*r(83,Mat,3) + 459200*r(83,Kut,3) + 2115600*r(83,Kot,3) + 282080*r(83,Mak,3) + 324720*r(83,Kuk,3) + 257480*r(83,Kok,3) + 846600*r(84,Mat,3) + 468950*r(84,Kut,3) + 2166300*r(84,Kot,3) + 287180*r(84,Mak,3) + 331170*r(84,Kuk,3)
     
      + 262280*r(84,Kok,3) + 865200*r(85,Mat,3) + 478800*r(85,Kut,3) + 2217600*r(85,Kot,3) + 292320*r(85,Mak,3) + 337680*r(85,Kuk,3) + 267120*r(85,Kok,3) + 884000*r(86,Mat,3) + 488750*r(86,Kut,3) + 2269500*r(86,Kot,3) + 297500*r(86,Mak,3)
     
      + 344250*r(86,Kuk,3) + 272000*r(86,Kok,3) + 903000*r(87,Mat,3) + 498800*r(87,Kut,3) + 2322000*r(87,Kot,3) + 302720*r(87,Mak,3) + 350880*r(87,Kuk,3) + 276920*r(87,Kok,3) + 922200*r(88,Mat,3) + 508950*r(88,Kut,3) + 2375100*r(88,Kot,3)
     
      + 307980*r(88,Mak,3) + 357570*r(88,Kuk,3) + 281880*r(88,Kok,3) + 941600*r(89,Mat,3) + 519200*r(89,Kut,3) + 2428800*r(89,Kot,3) + 313280*r(89,Mak,3) + 364320*r(89,Kuk,3) + 286880*r(89,Kok,3) + 961200*r(90,Mat,3) + 529550*r(90,Kut,3)
     
      + 2483100*r(90,Kot,3) + 318620*r(90,Mak,3) + 371130*r(90,Kuk,3) + 291920*r(90,Kok,3) + 981000*r(91,Mat,3) + 540000*r(91,Kut,3) + 2538000*r(91,Kot,3) + 324000*r(91,Mak,3) + 378000*r(91,Kuk,3) + 297000*r(91,Kok,3) + 1001000*r(92,Mat,3)
     
      + 550550*r(92,Kut,3) + 2593500*r(92,Kot,3) + 329420*r(92,Mak,3) + 384930*r(92,Kuk,3) + 302120*r(92,Kok,3) + 1021200*r(93,Mat,3) + 561200*r(93,Kut,3) + 2649600*r(93,Kot,3) + 334880*r(93,Mak,3) + 391920*r(93,Kuk,3) + 307280*r(93,Kok,3)
     
      + 1041600*r(94,Mat,3) + 571950*r(94,Kut,3) + 2706300*r(94,Kot,3) + 340380*r(94,Mak,3) + 398970*r(94,Kuk,3) + 312480*r(94,Kok,3) + 1062200*r(95,Mat,3) + 582800*r(95,Kut,3) + 2763600*r(95,Kot,3) + 345920*r(95,Mak,3) + 406080*r(95,Kuk,3)
     
      + 317720*r(95,Kok,3) + 1083000*r(96,Mat,3) + 593750*r(96,Kut,3) + 2821500*r(96,Kot,3) + 351500*r(96,Mak,3) + 413250*r(96,Kuk,3) + 323000*r(96,Kok,3) + 1104000*r(97,Mat,3) + 604800*r(97,Kut,3) + 2880000*r(97,Kot,3) + 357120*r(97,Mak,3)
     
      + 420480*r(97,Kuk,3) + 328320*r(97,Kok,3) + 1125200*r(98,Mat,3) + 615950*r(98,Kut,3) + 2939100*r(98,Kot,3) + 362780*r(98,Mak,3) + 427770*r(98,Kuk,3) + 333680*r(98,Kok,3) + 1146600*r(99,Mat,3) + 627200*r(99,Kut,3) + 2998800*r(99,Kot,3)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 22:25:36 Page 61
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 416


     PROFIT  =E=  Profit is what we gain minus what we spend     
     
      + 368480*r(99,Mak,3) + 435120*r(99,Kuk,3) + 339080*r(99,Kok,3) + 1168200*r(100,Mat,3) + 638550*r(100,Kut,3) + 3059100*r(100,Kot,3) + 374220*r(100,Mak,3) + 442530*r(100,Kuk,3) + 344520*r(100,Kok,3) + 1190000*r(101,Mat,3) + 650000*r(101,Kut,3)
     
      + 3120000*r(101,Kot,3) + 380000*r(101,Mak,3) + 450000*r(101,Kuk,3) + 350000*r(101,Kok,3) + 1212000*r(102,Mat,3) + 661550*r(102,Kut,3) + 3181500*r(102,Kot,3) + 385820*r(102,Mak,3) + 457530*r(102,Kuk,3) + 355520*r(102,Kok,3) + 1234200*r(103,Mat,3)
     
      + 673200*r(103,Kut,3) + 3243600*r(103,Kot,3) + 391680*r(103,Mak,3) + 465120*r(103,Kuk,3) + 361080*r(103,Kok,3) + 1256600*r(104,Mat,3) + 684950*r(104,Kut,3) + 3306300*r(104,Kot,3) + 397580*r(104,Mak,3) + 472770*r(104,Kuk,3) + 366680*r(104,Kok,3)
     
      + 1279200*r(105,Mat,3) + 696800*r(105,Kut,3) + 3369600*r(105,Kot,3) + 403520*r(105,Mak,3) + 480480*r(105,Kuk,3) + 372320*r(105,Kok,3) + 1302000*r(106,Mat,3) + 708750*r(106,Kut,3) + 3433500*r(106,Kot,3) + 409500*r(106,Mak,3) + 488250*r(106,Kuk,3)
     
      + 378000*r(106,Kok,3) + 1325000*r(107,Mat,3) + 720800*r(107,Kut,3) + 3498000*r(107,Kot,3) + 415520*r(107,Mak,3) + 496080*r(107,Kuk,3) + 383720*r(107,Kok,3) - 14079*u(2,Mas,EU,3) - 10830*u(2,Mas,IE,3) - 11552*u(2,Mas,PA,3) - 12183.75*u(2,Mas,KI,3)
     
      - 10469*u(2,Kos,EU,3) - 10830*u(2,Kos,IE,3) - 11552*u(2,Kos,PA,3) - 12183.75*u(2,Kos,KI,3) - 39349*u(2,Kuv,EU,3) - 33392.5*u(2,Kuv,IE,3) - 31407*u(2,Kuv,PA,3) - 30233.75*u(2,Kuv,KI,3) - 38446.5*u(2,Kov,EU,3) - 36100*u(2,Kov,IE,3)
     
      - 34114.5*u(2,Kov,PA,3) - 32941.25*u(2,Kov,KI,3) - 20577*u(2,Hsel,EU,3) - 22201.5*u(2,Hsel,IE,3) - 20306.25*u(2,Hsel,PA,3) - 22923.5*u(2,Hsel,KI,3) - 22291.75*u(2,Lsel,EU,3) - 25089.5*u(2,Lsel,IE,3) - 20306.25*u(2,Lsel,PA,3)
     
      - 21930.75*u(2,Lsel,KI,3) - 40251.5*u(2,Pap,EU,3) - 41515*u(2,Pap,IE,3) - 37724.5*u(2,Pap,PA,3) - 41966.25*u(2,Pap,KI,3) - 27436*u(3,Mas,EU,3) - 19855*u(3,Mas,IE,3) - 20938*u(3,Mas,PA,3) - 21660*u(3,Mas,KI,3) - 18411*u(3,Kos,EU,3)
     
      - 18050*u(3,Kos,IE,3) - 19133*u(3,Kos,PA,3) - 19855*u(3,Kos,KI,3) - 77976*u(3,Kuv,EU,3) - 64980*u(3,Kuv,IE,3) - 60648*u(3,Kuv,PA,3) - 57760*u(3,Kuv,KI,3) - 76171*u(3,Kov,EU,3) - 70395*u(3,Kov,IE,3) - 66063*u(3,Kov,PA,3) - 63175*u(3,Kov,KI,3)
     
      - 40793*u(3,Hsel,EU,3) - 43681*u(3,Hsel,IE,3) - 39710*u(3,Hsel,PA,3) - 44764*u(3,Hsel,KI,3) - 44042*u(3,Lsel,EU,3) - 49818*u(3,Lsel,IE,3) - 39710*u(3,Lsel,PA,3) - 42598*u(3,Lsel,KI,3) - 79781*u(3,Pap,EU,3) - 81225*u(3,Pap,IE,3) - 73283*u(3,Pap,PA,3)
     
      - 81225*u(3,Pap,KI,3) - 40071*u(4,Mas,EU,3) - 27075*u(4,Mas,IE,3) - 28158*u(4,Mas,PA,3) - 28428.75*u(4,Mas,KI,3) - 23826*u(4,Kos,EU,3) - 21660*u(4,Kos,IE,3) - 22743*u(4,Kos,PA,3) - 23013.75*u(4,Kos,KI,3) - 115881*u(4,Kuv,EU,3)
     
      - 94762.5*u(4,Kuv,IE,3) - 87723*u(4,Kuv,PA,3) - 82578.75*u(4,Kuv,KI,3) - 113173.5*u(4,Kov,EU,3) - 102885*u(4,Kov,IE,3) - 95845.5*u(4,Kov,PA,3) - 90701.25*u(4,Kov,KI,3) - 60648*u(4,Hsel,EU,3) - 64438.5*u(4,Hsel,IE,3) - 58211.25*u(4,Hsel,PA,3)
     
      - 65521.5*u(4,Hsel,KI,3) - 65250.75*u(4,Lsel,EU,3) - 74185.5*u(4,Lsel,IE,3) - 58211.25*u(4,Lsel,PA,3) - 62001.75*u(4,Lsel,KI,3) - 118588.5*u(4,Pap,EU,3) - 119130*u(4,Pap,IE,3) - 106675.5*u(4,Pap,PA,3) - 117776.25*u(4,Pap,KI,3) - 51984*u(5,Mas,EU,3)
     
      - 32490*u(5,Mas,IE,3) - 33212*u(5,Mas,PA,3) - 32490*u(5,Mas,KI,3) - 26714*u(5,Kos,EU,3) - 21660*u(5,Kos,IE,3) - 22382*u(5,Kos,PA,3) - 21660*u(5,Kos,KI,3) - 153064*u(5,Kuv,EU,3) - 122740*u(5,Kuv,IE,3) - 112632*u(5,Kuv,PA,3) - 104690*u(5,Kuv,KI,3)
     
      - 149454*u(5,Kov,EU,3) - 133570*u(5,Kov,IE,3) - 123462*u(5,Kov,PA,3) - 115520*u(5,Kov,KI,3) - 80142*u(5,Hsel,EU,3) - 84474*u(5,Hsel,IE,3) - 75810*u(5,Hsel,PA,3) - 85196*u(5,Hsel,KI,3) - 85918*u(5,Lsel,EU,3) - 98192*u(5,Lsel,IE,3)
     
      - 75810*u(5,Lsel,PA,3) - 80142*u(5,Lsel,KI,3) - 156674*u(5,Pap,EU,3) - 155230*u(5,Pap,IE,3) - 137902*u(5,Pap,PA,3) - 151620*u(5,Pap,KI,3) - 63175*u(6,Mas,EU,3) - 36100*u(6,Mas,IE,3) - 36100*u(6,Mas,PA,3) - 33843.75*u(6,Mas,KI,3)
     
      - 27075*u(6,Kos,EU,3) - 18050*u(6,Kos,IE,3) - 18050*u(6,Kos,PA,3) - 15793.75*u(6,Kos,KI,3) - 189525*u(6,Kuv,EU,3) - 148912.5*u(6,Kuv,IE,3) - 135375*u(6,Kuv,PA,3) - 124093.75*u(6,Kuv,KI,3) - 185012.5*u(6,Kov,EU,3) - 162450*u(6,Kov,IE,3)
     
      - 148912.5*u(6,Kov,PA,3) - 137631.25*u(6,Kov,KI,3) - 99275*u(6,Hsel,EU,3) - 103787.5*u(6,Hsel,IE,3) - 92506.25*u(6,Hsel,PA,3) - 103787.5*u(6,Hsel,KI,3) - 106043.75*u(6,Lsel,EU,3) - 121837.5*u(6,Lsel,IE,3) - 92506.25*u(6,Lsel,PA,3)
     
      - 97018.75*u(6,Lsel,KI,3) - 194037.5*u(6,Pap,EU,3) - 189525*u(6,Pap,IE,3) - 166962.5*u(6,Pap,PA,3) - 182756.25*u(6,Pap,KI,3) - 73644*u(7,Mas,EU,3) - 37905*u(7,Mas,IE,3) - 36822*u(7,Mas,PA,3) - 32490*u(7,Mas,KI,3) - 24909*u(7,Kos,EU,3)
     
      - 10830*u(7,Kos,IE,3) - 9747*u(7,Kos,PA,3) - 5415*u(7,Kos,KI,3) - 225264*u(7,Kuv,EU,3) - 173280*u(7,Kuv,IE,3) - 155952*u(7,Kuv,PA,3) - 140790*u(7,Kuv,KI,3) - 219849*u(7,Kov,EU,3) - 189525*u(7,Kov,IE,3) - 172197*u(7,Kov,PA,3) - 157035*u(7,Kov,KI,3)
     
      - 118047*u(7,Hsel,EU,3) - 122379*u(7,Hsel,IE,3) - 108300*u(7,Hsel,PA,3) - 121296*u(7,Hsel,KI,3) - 125628*u(7,Lsel,EU,3) - 145122*u(7,Lsel,IE,3) - 108300*u(7,Lsel,PA,3) - 112632*u(7,Lsel,KI,3) - 230679*u(7,Pap,EU,3) - 222015*u(7,Pap,IE,3)
     
      - 193857*u(7,Pap,PA,3) - 211185*u(7,Pap,KI,3) - 83391*u(8,Mas,EU,3) - 37905*u(8,Mas,IE,3) - 35378*u(8,Mas,PA,3) - 28428.75*u(8,Mas,KI,3) - 20216*u(8,Kos,EU,3) + 2527*u(8,Kos,PA,3) + 9476.25*u(8,Kos,KI,3) - 260281*u(8,Kuv,EU,3)
     
      - 195842.5*u(8,Kuv,IE,3) - 174363*u(8,Kuv,PA,3) - 154778.75*u(8,Kuv,KI,3) - 253963.5*u(8,Kov,EU,3) - 214795*u(8,Kov,IE,3) - 193315.5*u(8,Kov,PA,3) - 173731.25*u(8,Kov,KI,3) - 136458*u(8,Hsel,EU,3) - 140248.5*u(8,Hsel,IE,3) - 123191.25*u(8,Hsel,PA,3)
     
      - 137721.5*u(8,Hsel,KI,3) - 144670.75*u(8,Lsel,EU,3) - 168045.5*u(8,Lsel,IE,3) - 123191.25*u(8,Lsel,PA,3) - 126981.75*u(8,Lsel,KI,3) - 266598.5*u(8,Pap,EU,3) - 252700*u(8,Pap,IE,3) - 218585.5*u(8,Pap,PA,3) - 236906.25*u(8,Pap,KI,3)
     
      - 92416*u(9,Mas,EU,3) - 36100*u(9,Mas,IE,3) - 31768*u(9,Mas,PA,3) - 21660*u(9,Mas,KI,3) - 12996*u(9,Kos,EU,3) + 14440*u(9,Kos,IE,3) + 18772*u(9,Kos,PA,3) + 28880*u(9,Kos,KI,3) - 294576*u(9,Kuv,EU,3) - 216600*u(9,Kuv,IE,3) - 190608*u(9,Kuv,PA,3)
     
      - 166060*u(9,Kuv,KI,3) - 287356*u(9,Kov,EU,3) - 238260*u(9,Kov,IE,3) - 212268*u(9,Kov,PA,3) - 187720*u(9,Kov,KI,3) - 154508*u(9,Hsel,EU,3) - 157396*u(9,Hsel,IE,3) - 137180*u(9,Hsel,PA,3) - 153064*u(9,Hsel,KI,3) - 163172*u(9,Lsel,EU,3)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 22:25:36 Page 62
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 416


     PROFIT  =E=  Profit is what we gain minus what we spend     
     
      - 190608*u(9,Lsel,IE,3) - 137180*u(9,Lsel,PA,3) - 140068*u(9,Lsel,KI,3) - 301796*u(9,Pap,EU,3) - 281580*u(9,Pap,IE,3) - 241148*u(9,Pap,PA,3) - 259920*u(9,Pap,KI,3) - 100719*u(10,Mas,EU,3) - 32490*u(10,Mas,IE,3) - 25992*u(10,Mas,PA,3)
     
      - 12183.75*u(10,Mas,KI,3) - 3249*u(10,Kos,EU,3) + 32490*u(10,Kos,IE,3) + 38988*u(10,Kos,PA,3) + 52796.25*u(10,Kos,KI,3) - 328149*u(10,Kuv,EU,3) - 235552.5*u(10,Kuv,IE,3) - 204687*u(10,Kuv,PA,3) - 174633.75*u(10,Kuv,KI,3) - 320026.5*u(10,Kov,EU,3)
     
      - 259920*u(10,Kov,IE,3) - 229054.5*u(10,Kov,PA,3) - 199001.25*u(10,Kov,KI,3) - 172197*u(10,Hsel,EU,3) - 173821.5*u(10,Hsel,IE,3) - 150266.25*u(10,Hsel,PA,3) - 167323.5*u(10,Hsel,KI,3) - 181131.75*u(10,Lsel,EU,3) - 212809.5*u(10,Lsel,IE,3)
     
      - 150266.25*u(10,Lsel,PA,3) - 151890.75*u(10,Lsel,KI,3) - 336271.5*u(10,Pap,EU,3) - 308655*u(10,Pap,IE,3) - 261544.5*u(10,Pap,PA,3) - 280226.25*u(10,Pap,KI,3) - 108300*u(11,Mas,EU,3) - 27075*u(11,Mas,IE,3) - 18050*u(11,Mas,PA,3)
     
      + 9025*u(11,Kos,EU,3) + 54150*u(11,Kos,IE,3) + 63175*u(11,Kos,PA,3) + 81225*u(11,Kos,KI,3) - 361000*u(11,Kuv,EU,3) - 252700*u(11,Kuv,IE,3) - 216600*u(11,Kuv,PA,3) - 180500*u(11,Kuv,KI,3) - 351975*u(11,Kov,EU,3) - 279775*u(11,Kov,IE,3)
     
      - 243675*u(11,Kov,PA,3) - 207575*u(11,Kov,KI,3) - 189525*u(11,Hsel,EU,3) - 189525*u(11,Hsel,IE,3) - 162450*u(11,Hsel,PA,3) - 180500*u(11,Hsel,KI,3) - 198550*u(11,Lsel,EU,3) - 234650*u(11,Lsel,IE,3) - 162450*u(11,Lsel,PA,3) - 162450*u(11,Lsel,KI,3)
     
      - 370025*u(11,Pap,EU,3) - 333925*u(11,Pap,IE,3) - 279775*u(11,Pap,PA,3) - 297825*u(11,Pap,KI,3) - 115159*u(12,Mas,EU,3) - 19855*u(12,Mas,IE,3) - 7942.00000000003*u(12,Mas,PA,3) + 14891.25*u(12,Mas,KI,3) + 23826*u(12,Kos,EU,3) + 79420*u(12,Kos,IE,3)
     
      + 91333*u(12,Kos,PA,3) + 114166.25*u(12,Kos,KI,3) - 393129*u(12,Kuv,EU,3) - 268042.5*u(12,Kuv,IE,3) - 226347*u(12,Kuv,PA,3) - 183658.75*u(12,Kuv,KI,3) - 383201.5*u(12,Kov,EU,3) - 297825*u(12,Kov,IE,3) - 256129.5*u(12,Kov,PA,3)
     
      - 213441.25*u(12,Kov,KI,3) - 206492*u(12,Hsel,EU,3) - 204506.5*u(12,Hsel,IE,3) - 173731.25*u(12,Hsel,PA,3) - 192593.5*u(12,Hsel,KI,3) - 215426.75*u(12,Lsel,EU,3) - 256129.5*u(12,Lsel,IE,3) - 173731.25*u(12,Lsel,PA,3) - 171745.75*u(12,Lsel,KI,3)
     
      - 403056.5*u(12,Pap,EU,3) - 357390*u(12,Pap,IE,3) - 295839.5*u(12,Pap,PA,3) - 312716.25*u(12,Pap,KI,3) - 121296*u(13,Mas,EU,3) - 10830*u(13,Mas,IE,3) + 4331.99999999997*u(13,Mas,PA,3) + 32490*u(13,Mas,KI,3) + 41154*u(13,Kos,EU,3)
     
      + 108300*u(13,Kos,IE,3) + 123462*u(13,Kos,PA,3) + 151620*u(13,Kos,KI,3) - 424536*u(13,Kuv,EU,3) - 281580*u(13,Kuv,IE,3) - 233928*u(13,Kuv,PA,3) - 184110*u(13,Kuv,KI,3) - 413706*u(13,Kov,EU,3) - 314070*u(13,Kov,IE,3) - 266418*u(13,Kov,PA,3)
     
      - 216600*u(13,Kov,KI,3) - 223098*u(13,Hsel,EU,3) - 218766*u(13,Hsel,IE,3) - 184110*u(13,Hsel,PA,3) - 203604*u(13,Hsel,KI,3) - 231762*u(13,Lsel,EU,3) - 277248*u(13,Lsel,IE,3) - 184110*u(13,Lsel,PA,3) - 179778*u(13,Lsel,KI,3) - 435366*u(13,Pap,EU,3)
     
      - 379050*u(13,Pap,IE,3) - 309738*u(13,Pap,PA,3) - 324900*u(13,Pap,KI,3) - 126711*u(14,Mas,EU,3) + 18772*u(14,Mas,PA,3) + 52796.25*u(14,Mas,KI,3) + 61009*u(14,Kos,EU,3) + 140790*u(14,Kos,IE,3) + 159562*u(14,Kos,PA,3) + 193586.25*u(14,Kos,KI,3)
     
      - 455221*u(14,Kuv,EU,3) - 293312.5*u(14,Kuv,IE,3) - 239343*u(14,Kuv,PA,3) - 181853.75*u(14,Kuv,KI,3) - 443488.5*u(14,Kov,EU,3) - 328510*u(14,Kov,IE,3) - 274540.5*u(14,Kov,PA,3) - 217051.25*u(14,Kov,KI,3) - 239343*u(14,Hsel,EU,3)
     
      - 232303.5*u(14,Hsel,IE,3) - 193586.25*u(14,Hsel,PA,3) - 213531.5*u(14,Hsel,KI,3) - 247555.75*u(14,Lsel,EU,3) - 298005.5*u(14,Lsel,IE,3) - 193586.25*u(14,Lsel,PA,3) - 186546.75*u(14,Lsel,KI,3) - 466953.5*u(14,Pap,EU,3) - 398905*u(14,Pap,IE,3)
     
      - 321470.5*u(14,Pap,PA,3) - 334376.25*u(14,Pap,KI,3) - 131404*u(15,Mas,EU,3) + 12635*u(15,Mas,IE,3) + 35378*u(15,Mas,PA,3) + 75810*u(15,Mas,KI,3) + 83391*u(15,Kos,EU,3) + 176890*u(15,Kos,IE,3) + 199633*u(15,Kos,PA,3) + 240065*u(15,Kos,KI,3)
     
      - 485184*u(15,Kuv,EU,3) - 303240*u(15,Kuv,IE,3) - 242592*u(15,Kuv,PA,3) - 176890*u(15,Kuv,KI,3) - 472549*u(15,Kov,EU,3) - 341145*u(15,Kov,IE,3) - 280497*u(15,Kov,PA,3) - 214795*u(15,Kov,KI,3) - 255227*u(15,Hsel,EU,3) - 245119*u(15,Hsel,IE,3)
     
      - 202160*u(15,Hsel,PA,3) - 222376*u(15,Hsel,KI,3) - 262808*u(15,Lsel,EU,3) - 318402*u(15,Lsel,IE,3) - 202160*u(15,Lsel,PA,3) - 192052*u(15,Lsel,KI,3) - 497819*u(15,Pap,EU,3) - 416955*u(15,Pap,IE,3) - 331037*u(15,Pap,PA,3) - 341145*u(15,Pap,KI,3)
     
      - 135375*u(16,Mas,EU,3) + 27075*u(16,Mas,IE,3) + 54150*u(16,Mas,PA,3) + 101531.25*u(16,Mas,KI,3) + 108300*u(16,Kos,EU,3) + 216600*u(16,Kos,IE,3) + 243675*u(16,Kos,PA,3) + 291056.25*u(16,Kos,KI,3) - 514425*u(16,Kuv,EU,3) - 311362.5*u(16,Kuv,IE,3)
     
      - 243675*u(16,Kuv,PA,3) - 169218.75*u(16,Kuv,KI,3) - 500887.5*u(16,Kov,EU,3) - 351975*u(16,Kov,IE,3) - 284287.5*u(16,Kov,PA,3) - 209831.25*u(16,Kov,KI,3) - 270750*u(16,Hsel,EU,3) - 257212.5*u(16,Hsel,IE,3) - 209831.25*u(16,Hsel,PA,3)
     
      - 230137.5*u(16,Hsel,KI,3) - 277518.75*u(16,Lsel,EU,3) - 338437.5*u(16,Lsel,IE,3) - 209831.25*u(16,Lsel,PA,3) - 196293.75*u(16,Lsel,KI,3) - 527962.5*u(16,Pap,EU,3) - 433200*u(16,Pap,IE,3) - 338437.5*u(16,Pap,PA,3) - 345206.25*u(16,Pap,KI,3)
     
      - 138624*u(17,Mas,EU,3) + 43320*u(17,Mas,IE,3) + 75088*u(17,Mas,PA,3) + 129960*u(17,Mas,KI,3) + 135736*u(17,Kos,EU,3) + 259920*u(17,Kos,IE,3) + 291688*u(17,Kos,PA,3) + 346560*u(17,Kos,KI,3) - 542944*u(17,Kuv,EU,3) - 317680*u(17,Kuv,IE,3)
     
      - 242592*u(17,Kuv,PA,3) - 158840*u(17,Kuv,KI,3) - 528504*u(17,Kov,EU,3) - 361000*u(17,Kov,IE,3) - 285912*u(17,Kov,PA,3) - 202160*u(17,Kov,KI,3) - 285912*u(17,Hsel,EU,3) - 268584*u(17,Hsel,IE,3) - 216600*u(17,Hsel,PA,3) - 236816*u(17,Hsel,KI,3)
     
      - 291688*u(17,Lsel,EU,3) - 358112*u(17,Lsel,IE,3) - 216600*u(17,Lsel,PA,3) - 199272*u(17,Lsel,KI,3) - 557384*u(17,Pap,EU,3) - 447640*u(17,Pap,IE,3) - 343672*u(17,Pap,PA,3) - 346560*u(17,Pap,KI,3) - 141151*u(18,Mas,EU,3) + 61370*u(18,Mas,IE,3)
     
      + 98192*u(18,Mas,PA,3) + 161096.25*u(18,Mas,KI,3) + 165699*u(18,Kos,EU,3) + 306850*u(18,Kos,IE,3) + 343672*u(18,Kos,PA,3) + 406576.25*u(18,Kos,KI,3) - 570741*u(18,Kuv,EU,3) - 322192.5*u(18,Kuv,IE,3) - 239343*u(18,Kuv,PA,3) - 145753.75*u(18,Kuv,KI,3)
     
      - 555398.5*u(18,Kov,EU,3) - 368220*u(18,Kov,IE,3) - 285370.5*u(18,Kov,PA,3) - 191781.25*u(18,Kov,KI,3) - 300713*u(18,Hsel,EU,3) - 279233.5*u(18,Hsel,IE,3) - 222466.25*u(18,Hsel,PA,3) - 242411.5*u(18,Hsel,KI,3) - 305315.75*u(18,Lsel,EU,3)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 22:25:36 Page 63
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 416


     PROFIT  =E=  Profit is what we gain minus what we spend     
     
      - 377425.5*u(18,Lsel,IE,3) - 222466.25*u(18,Lsel,PA,3) - 200986.75*u(18,Lsel,KI,3) - 586083.5*u(18,Pap,EU,3) - 460275*u(18,Pap,IE,3) - 346740.5*u(18,Pap,PA,3) - 345206.25*u(18,Pap,KI,3) - 142956*u(19,Mas,EU,3) + 81225*u(19,Mas,IE,3)
     
      + 123462*u(19,Mas,PA,3) + 194940*u(19,Mas,KI,3) + 198189*u(19,Kos,EU,3) + 357390*u(19,Kos,IE,3) + 399627*u(19,Kos,PA,3) + 471105*u(19,Kos,KI,3) - 597816*u(19,Kuv,EU,3) - 324900*u(19,Kuv,IE,3) - 233928*u(19,Kuv,PA,3) - 129960*u(19,Kuv,KI,3)
     
      - 581571*u(19,Kov,EU,3) - 373635*u(19,Kov,IE,3) - 282663*u(19,Kov,PA,3) - 178695*u(19,Kov,KI,3) - 315153*u(19,Hsel,EU,3) - 289161*u(19,Hsel,IE,3) - 227430*u(19,Hsel,PA,3) - 246924*u(19,Hsel,KI,3) - 318402*u(19,Lsel,EU,3) - 396378*u(19,Lsel,IE,3)
     
      - 227430*u(19,Lsel,PA,3) - 201438*u(19,Lsel,KI,3) - 614061*u(19,Pap,EU,3) - 471105*u(19,Pap,IE,3) - 347643*u(19,Pap,PA,3) - 341145*u(19,Pap,KI,3) - 144039*u(20,Mas,EU,3) + 102885*u(20,Mas,IE,3) + 150898*u(20,Mas,PA,3) + 231491.25*u(20,Mas,KI,3)
     
      + 233206*u(20,Kos,EU,3) + 411540*u(20,Kos,IE,3) + 459553*u(20,Kos,PA,3) + 540146.25*u(20,Kos,KI,3) - 624169*u(20,Kuv,EU,3) - 325802.5*u(20,Kuv,IE,3) - 226347*u(20,Kuv,PA,3) - 111458.75*u(20,Kuv,KI,3) - 607021.5*u(20,Kov,EU,3) - 377245*u(20,Kov,IE,3)
     
      - 277789.5*u(20,Kov,PA,3) - 162901.25*u(20,Kov,KI,3) - 329232*u(20,Hsel,EU,3) - 298366.5*u(20,Hsel,IE,3) - 231491.25*u(20,Hsel,PA,3) - 250353.5*u(20,Hsel,KI,3) - 330946.75*u(20,Lsel,EU,3) - 414969.5*u(20,Lsel,IE,3) - 231491.25*u(20,Lsel,PA,3)
     
      - 200625.75*u(20,Lsel,KI,3) - 641316.5*u(20,Pap,EU,3) - 480130*u(20,Pap,IE,3) - 346379.5*u(20,Pap,PA,3) - 334376.25*u(20,Pap,KI,3) - 144400*u(21,Mas,EU,3) + 126350*u(21,Mas,IE,3) + 180500*u(21,Mas,PA,3) + 270750*u(21,Mas,KI,3)
     
      + 270750*u(21,Kos,EU,3) + 469300*u(21,Kos,IE,3) + 523450*u(21,Kos,PA,3) + 613700*u(21,Kos,KI,3) - 649800*u(21,Kuv,EU,3) - 324900*u(21,Kuv,IE,3) - 216600*u(21,Kuv,PA,3) - 90250*u(21,Kuv,KI,3) - 631750*u(21,Kov,EU,3) - 379050*u(21,Kov,IE,3)
     
      - 270750*u(21,Kov,PA,3) - 144400*u(21,Kov,KI,3) - 342950*u(21,Hsel,EU,3) - 306850*u(21,Hsel,IE,3) - 234650*u(21,Hsel,PA,3) - 252700*u(21,Hsel,KI,3) - 342950*u(21,Lsel,EU,3) - 433200*u(21,Lsel,IE,3) - 234650*u(21,Lsel,PA,3) - 198550*u(21,Lsel,KI,3)
     
      - 667850*u(21,Pap,EU,3) - 487350*u(21,Pap,IE,3) - 342950*u(21,Pap,PA,3) - 324900*u(21,Pap,KI,3) - 144039*u(22,Mas,EU,3) + 151620*u(22,Mas,IE,3) + 212268*u(22,Mas,PA,3) + 312716.25*u(22,Mas,KI,3) + 310821*u(22,Kos,EU,3) + 530670*u(22,Kos,IE,3)
     
      + 591318*u(22,Kos,PA,3) + 691766.25*u(22,Kos,KI,3) - 674709*u(22,Kuv,EU,3) - 322192.5*u(22,Kuv,IE,3) - 204687*u(22,Kuv,PA,3) - 66333.75*u(22,Kuv,KI,3) - 655756.5*u(22,Kov,EU,3) - 379050*u(22,Kov,IE,3) - 261544.5*u(22,Kov,PA,3)
     
      - 123191.25*u(22,Kov,KI,3) - 356307*u(22,Hsel,EU,3) - 314611.5*u(22,Hsel,IE,3) - 236906.25*u(22,Hsel,PA,3) - 253963.5*u(22,Hsel,KI,3) - 354411.75*u(22,Lsel,EU,3) - 451069.5*u(22,Lsel,IE,3) - 236906.25*u(22,Lsel,PA,3) - 195210.75*u(22,Lsel,KI,3)
     
      - 693661.5*u(22,Pap,EU,3) - 492765*u(22,Pap,IE,3) - 337354.5*u(22,Pap,PA,3) - 312716.25*u(22,Pap,KI,3) - 142956*u(23,Mas,EU,3) + 178695*u(23,Mas,IE,3) + 246202*u(23,Mas,PA,3) + 357390*u(23,Mas,KI,3) + 353419*u(23,Kos,EU,3) + 595650*u(23,Kos,IE,3)
     
      + 663157*u(23,Kos,PA,3) + 774345*u(23,Kos,KI,3) - 698896*u(23,Kuv,EU,3) - 317680*u(23,Kuv,IE,3) - 190608*u(23,Kuv,PA,3) - 39710*u(23,Kuv,KI,3) - 679041*u(23,Kov,EU,3) - 377245*u(23,Kov,IE,3) - 250173*u(23,Kov,PA,3) - 99275.0000000001*u(23,Kov,KI,3)
     
      - 369303*u(23,Hsel,EU,3) - 321651*u(23,Hsel,IE,3) - 238260*u(23,Hsel,PA,3) - 254144*u(23,Hsel,KI,3) - 365332*u(23,Lsel,EU,3) - 468578*u(23,Lsel,IE,3) - 238260*u(23,Lsel,PA,3) - 190608*u(23,Lsel,KI,3) - 718751*u(23,Pap,EU,3) - 496375*u(23,Pap,IE,3)
     
      - 329593*u(23,Pap,PA,3) - 297825*u(23,Pap,KI,3) - 0.19*b(Mat,3) - 0.15*b(Kut,3) - 0.12*b(Kot,3) - 0.18*b(Mak,3) - 0.15*b(Kuk,3) - 0.15*b(Kok,3) + Pr(3) =E= 0 ; (LHS = 0)
     
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 22:25:36 Page 64
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE final Using MIP From line 416


---- z  the objective

z
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       obj


---- y  Cubic meters produced of product j

y(Mas,1)
                (.LO, .L, .UP, .M = 0, 0, 1060000, 0)
        2       timber_used(Mat,1)
       -0.8     timber_used(Mak,1)
       -1       Sold_Prod(Mas,1)
       -1       Capacity1(SAW,1)
       -1       Capacity2(SAW,1)
        0.542   PROFIT(1)

y(Mas,2)
                (.LO, .L, .UP, .M = 0, 0, 1060000, 0)
        2       timber_used(Mat,2)
       -0.8     timber_used(Mak,2)
       -1       Sold_Prod(Mas,2)
       -1       Capacity1(SAW,2)
       -1       Capacity2(SAW,2)
        0.542   PROFIT(2)

y(Mas,3)
                (.LO, .L, .UP, .M = 0, 0, 1060000, 0)
        2       timber_used(Mat,3)
       -0.8     timber_used(Mak,3)
       -1       Sold_Prod(Mas,3)
       -1       Capacity1(SAW,3)
       -1       Capacity2(SAW,3)
        0.542   PROFIT(3)

y(Kus,1)
                (.LO, .L, .UP, .M = 0, 0, 1060000, 0)
        2       timber_used(Kut,1)
       -0.8     timber_used(Kuk,1)
       -1       Sold_Prod(Kus,1)
       -1       Capacity1(SAW,1)
       -1       Capacity2(SAW,1)
        0.492   PROFIT(1)

y(Kus,2)
                (.LO, .L, .UP, .M = 0, 0, 1060000, 0)
        2       timber_used(Kut,2)
       -0.8     timber_used(Kuk,2)
       -1       Sold_Prod(Kus,2)
       -1       Capacity1(SAW,2)
       -1       Capacity2(SAW,2)
        0.492   PROFIT(2)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 22:25:36 Page 65
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE final Using MIP From line 416


     y  Cubic meters produced of product j


y(Kus,3)
                (.LO, .L, .UP, .M = 0, 0, 1060000, 0)
        2       timber_used(Kut,3)
       -0.8     timber_used(Kuk,3)
       -1       Sold_Prod(Kus,3)
       -1       Capacity1(SAW,3)
       -1       Capacity2(SAW,3)
        0.492   PROFIT(3)

y(Kos,1)
                (.LO, .L, .UP, .M = 0, 0, 1060000, 0)
        2       timber_used(Kot,1)
       -0.8     timber_used(Kok,1)
       -1       Sold_Prod(Kos,1)
       -1       Capacity1(SAW,1)
       -1       Capacity2(SAW,1)
        0.442   PROFIT(1)

y(Kos,2)
                (.LO, .L, .UP, .M = 0, 0, 1060000, 0)
        2       timber_used(Kot,2)
       -0.8     timber_used(Kok,2)
       -1       Sold_Prod(Kos,2)
       -1       Capacity1(SAW,2)
       -1       Capacity2(SAW,2)
        0.442   PROFIT(2)

y(Kos,3)
                (.LO, .L, .UP, .M = 0, 0, 1060000, 0)
        2       timber_used(Kot,3)
       -0.8     timber_used(Kok,3)
       -1       Sold_Prod(Kos,3)
       -1       Capacity1(SAW,3)
       -1       Capacity2(SAW,3)
        0.442   PROFIT(3)

y(Kuv,1)
                (.LO, .L, .UP, .M = 0, 0, 1060000, 0)
        2.8     timber_used(Kut,1)
       -1.6     timber_used(Kuk,1)
       -1       Sold_Prod(Kuv,1)
       -1       Capacity1(PLY,1)
       -1       Capacity2(PLY,1)
        2.492   PROFIT(1)

y(Kuv,2)
                (.LO, .L, .UP, .M = 0, 0, 1060000, 0)
        2.8     timber_used(Kut,2)
       -1.6     timber_used(Kuk,2)
       -1       Sold_Prod(Kuv,2)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 22:25:36 Page 66
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE final Using MIP From line 416


     y  Cubic meters produced of product j

       -1       Capacity1(PLY,2)
       -1       Capacity2(PLY,2)
        2.492   PROFIT(2)

y(Kuv,3)
                (.LO, .L, .UP, .M = 0, 0, 1060000, 0)
        2.8     timber_used(Kut,3)
       -1.6     timber_used(Kuk,3)
       -1       Sold_Prod(Kuv,3)
       -1       Capacity1(PLY,3)
       -1       Capacity2(PLY,3)
        2.492   PROFIT(3)

y(Kov,1)
                (.LO, .L, .UP, .M = 0, 0, 1060000, 0)
        2.8     timber_used(Kot,1)
       -1.6     timber_used(Kok,1)
       -1       Sold_Prod(Kov,1)
       -1       Capacity1(PLY,1)
       -1       Capacity2(PLY,1)
        2.592   PROFIT(1)

y(Kov,2)
                (.LO, .L, .UP, .M = 0, 0, 1060000, 0)
        2.8     timber_used(Kot,2)
       -1.6     timber_used(Kok,2)
       -1       Sold_Prod(Kov,2)
       -1       Capacity1(PLY,2)
       -1       Capacity2(PLY,2)
        2.592   PROFIT(2)

y(Kov,3)
                (.LO, .L, .UP, .M = 0, 0, 1060000, 0)
        2.8     timber_used(Kot,3)
       -1.6     timber_used(Kok,3)
       -1       Sold_Prod(Kov,3)
       -1       Capacity1(PLY,3)
       -1       Capacity2(PLY,3)
        2.592   PROFIT(3)

y(Hsel,1)
                (.LO, .L, .UP, .M = 0, 0, 1060000, 0)
        4.8     timber_used(Mak,1)
       -1       Sold_Prod(Hsel,1)
       -1       Capacity1(SPULP,1)
       -1       Capacity2(SPULP,1)
       -1       PAP_HSEL(1)
       -1       PULP_Bal(Hsel,1)
        0.82    PROFIT(1)

y(Hsel,2)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 22:25:36 Page 67
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE final Using MIP From line 416


     y  Cubic meters produced of product j

                (.LO, .L, .UP, .M = 0, 0, 1060000, 0)
        4.8     timber_used(Mak,2)
       -1       Sold_Prod(Hsel,2)
       -1       Capacity1(SPULP,2)
       -1       Capacity2(SPULP,2)
       -1       PAP_HSEL(2)
       -1       PULP_Bal(Hsel,2)
        0.82    PROFIT(2)

y(Hsel,3)
                (.LO, .L, .UP, .M = 0, 0, 1060000, 0)
        4.8     timber_used(Mak,3)
       -1       Sold_Prod(Hsel,3)
       -1       Capacity1(SPULP,3)
       -1       Capacity2(SPULP,3)
       -1       PAP_HSEL(3)
       -1       PULP_Bal(Hsel,3)
        0.82    PROFIT(3)

y(Lsel,1)
                (.LO, .L, .UP, .M = 0, 0, 1060000, 0)
        4.2     timber_used(Kok,1)
       -1       Sold_Prod(Lsel,1)
       -1       Capacity1(HPULP,1)
       -1       Capacity2(HPULP,1)
       -1       PAP_LSEL(1)
       -1       PULP_Bal(Lsel,1)
        0.8     PROFIT(1)

y(Lsel,2)
                (.LO, .L, .UP, .M = 0, 0, 1060000, 0)
        4.2     timber_used(Kok,2)
       -1       Sold_Prod(Lsel,2)
       -1       Capacity1(HPULP,2)
       -1       Capacity2(HPULP,2)
       -1       PAP_LSEL(2)
       -1       PULP_Bal(Lsel,2)
        0.8     PROFIT(2)

y(Lsel,3)
                (.LO, .L, .UP, .M = 0, 0, 1060000, 0)
        4.2     timber_used(Kok,3)
       -1       Sold_Prod(Lsel,3)
       -1       Capacity1(HPULP,3)
       -1       Capacity2(HPULP,3)
       -1       PAP_LSEL(3)
       -1       PULP_Bal(Lsel,3)
        0.8     PROFIT(3)

y(Pap,1)
                (.LO, .L, .UP, .M = 0, 0, 1060000, 0)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 22:25:36 Page 68
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE final Using MIP From line 416


     y  Cubic meters produced of product j

        1       timber_used(Kuk,1)
       -1       Sold_Prod(Pap,1)
       -1       Capacity1(Pap,1)
       -1       Capacity2(Pap,1)
        0.2     PAP_HSEL(1)
        0.2     PAP_LSEL(1)
        0.2     PULP_Bal(Hsel,1)
        0.2     PULP_Bal(Lsel,1)
        1.7     PROFIT(1)

y(Pap,2)
                (.LO, .L, .UP, .M = 0, 0, 1060000, 0)
        1       timber_used(Kuk,2)
       -1       Sold_Prod(Pap,2)
       -1       Capacity1(Pap,2)
       -1       Capacity2(Pap,2)
        0.2     PAP_HSEL(2)
        0.2     PAP_LSEL(2)
        0.2     PULP_Bal(Hsel,2)
        0.2     PULP_Bal(Lsel,2)
        1.7     PROFIT(2)

y(Pap,3)
                (.LO, .L, .UP, .M = 0, 0, 1060000, 0)
        1       timber_used(Kuk,3)
       -1       Sold_Prod(Pap,3)
       -1       Capacity1(Pap,3)
       -1       Capacity2(Pap,3)
        0.2     PAP_HSEL(3)
        0.2     PAP_LSEL(3)
        0.2     PULP_Bal(Hsel,3)
        0.2     PULP_Bal(Lsel,3)
        1.7     PROFIT(3)


---- s  amount of timber i used to make products

s(Mat,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -1       timber_used(Mat,1)
       -1       prod_starved(Mat,1)
        0.19    PROFIT(1)

s(Mat,2)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -1       timber_used(Mat,2)
       -1       prod_starved(Mat,2)
        0.19    PROFIT(2)

s(Mat,3)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 22:25:36 Page 69
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE final Using MIP From line 416


     s  amount of timber i used to make products

       -1       timber_used(Mat,3)
       -1       prod_starved(Mat,3)
        0.19    PROFIT(3)

s(Kut,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -1       timber_used(Kut,1)
       -1       prod_starved(Kut,1)
        0.15    PROFIT(1)

s(Kut,2)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -1       timber_used(Kut,2)
       -1       prod_starved(Kut,2)
        0.15    PROFIT(2)

s(Kut,3)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -1       timber_used(Kut,3)
       -1       prod_starved(Kut,3)
        0.15    PROFIT(3)

s(Kot,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -1       timber_used(Kot,1)
       -1       prod_starved(Kot,1)
        0.12    PROFIT(1)

s(Kot,2)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -1       timber_used(Kot,2)
       -1       prod_starved(Kot,2)
        0.12    PROFIT(2)

s(Kot,3)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -1       timber_used(Kot,3)
       -1       prod_starved(Kot,3)
        0.12    PROFIT(3)

s(Mak,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -1       timber_used(Mak,1)
       -1       prod_starved(Mak,1)
        0.18    PROFIT(1)

s(Mak,2)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -1       timber_used(Mak,2)
       -1       prod_starved(Mak,2)
        0.18    PROFIT(2)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 22:25:36 Page 70
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE final Using MIP From line 416


     s  amount of timber i used to make products


s(Mak,3)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -1       timber_used(Mak,3)
       -1       prod_starved(Mak,3)
        0.18    PROFIT(3)

s(Kuk,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -1       timber_used(Kuk,1)
       -1       prod_starved(Kuk,1)
        0.15    PROFIT(1)

s(Kuk,2)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -1       timber_used(Kuk,2)
       -1       prod_starved(Kuk,2)
        0.15    PROFIT(2)

s(Kuk,3)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -1       timber_used(Kuk,3)
       -1       prod_starved(Kuk,3)
        0.15    PROFIT(3)

s(Kok,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -1       timber_used(Kok,1)
       -1       prod_starved(Kok,1)
        0.15    PROFIT(1)

s(Kok,2)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -1       timber_used(Kok,2)
       -1       prod_starved(Kok,2)
        0.15    PROFIT(2)

s(Kok,3)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -1       timber_used(Kok,3)
       -1       prod_starved(Kok,3)
        0.15    PROFIT(3)


---- r  1 if we buy n boats of timber i, 0 otherwise

r(1,Mat,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_buy(Mat,1)

r(1,Mat,2)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 22:25:36 Page 71
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE final Using MIP From line 416


     r  1 if we buy n boats of timber i, 0 otherwise

                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_buy(Mat,2)

r(1,Mat,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_buy(Mat,3)

r(1,Kut,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_buy(Kut,1)

r(1,Kut,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_buy(Kut,2)

r(1,Kut,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_buy(Kut,3)

r(1,Kot,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_buy(Kot,1)

r(1,Kot,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_buy(Kot,2)

r(1,Kot,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_buy(Kot,3)

r(1,Mak,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_buy(Mak,1)

r(1,Mak,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_buy(Mak,2)

r(1,Mak,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_buy(Mak,3)

r(1,Kuk,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_buy(Kuk,1)

r(1,Kuk,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_buy(Kuk,2)

GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 22:25:36 Page 72
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE final Using MIP From line 416


     r  1 if we buy n boats of timber i, 0 otherwise

r(1,Kuk,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_buy(Kuk,3)

r(1,Kok,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_buy(Kok,1)

r(1,Kok,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_buy(Kok,2)

r(1,Kok,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_buy(Kok,3)

r(2,Mat,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    10000       prod_starved(Mat,1)
   -10000       timber_bought(Mat,1)
        1       Barges_buy(Mat,1)
     2000       PROFIT(1)

r(2,Mat,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    10000       prod_starved(Mat,2)
   -10000       timber_bought(Mat,2)
        1       Barges_buy(Mat,2)
     2000       PROFIT(2)

r(2,Mat,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    10000       prod_starved(Mat,3)
   -10000       timber_bought(Mat,3)
        1       Barges_buy(Mat,3)
     2000       PROFIT(3)

r(2,Kut,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    10000       prod_starved(Kut,1)
   -10000       timber_bought(Kut,1)
        1       Barges_buy(Kut,1)
     1550       PROFIT(1)

r(2,Kut,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    10000       prod_starved(Kut,2)
   -10000       timber_bought(Kut,2)
        1       Barges_buy(Kut,2)
     1550       PROFIT(2)

GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 22:25:36 Page 73
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE final Using MIP From line 416


     r  1 if we buy n boats of timber i, 0 otherwise

r(2,Kut,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    10000       prod_starved(Kut,3)
   -10000       timber_bought(Kut,3)
        1       Barges_buy(Kut,3)
     1550       PROFIT(3)

r(2,Kot,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    10000       prod_starved(Kot,1)
   -10000       timber_bought(Kot,1)
        1       Barges_buy(Kot,1)
     1500       PROFIT(1)

r(2,Kot,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    10000       prod_starved(Kot,2)
   -10000       timber_bought(Kot,2)
        1       Barges_buy(Kot,2)
     1500       PROFIT(2)

r(2,Kot,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    10000       prod_starved(Kot,3)
   -10000       timber_bought(Kot,3)
        1       Barges_buy(Kot,3)
     1500       PROFIT(3)

r(2,Mak,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    10000       prod_starved(Mak,1)
   -10000       timber_bought(Mak,1)
        1       Barges_buy(Mak,1)
     1820       PROFIT(1)

r(2,Mak,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    10000       prod_starved(Mak,2)
   -10000       timber_bought(Mak,2)
        1       Barges_buy(Mak,2)
     1820       PROFIT(2)

r(2,Mak,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    10000       prod_starved(Mak,3)
   -10000       timber_bought(Mak,3)
        1       Barges_buy(Mak,3)
     1820       PROFIT(3)

r(2,Kuk,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 22:25:36 Page 74
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE final Using MIP From line 416


     r  1 if we buy n boats of timber i, 0 otherwise

    10000       prod_starved(Kuk,1)
   -10000       timber_bought(Kuk,1)
        1       Barges_buy(Kuk,1)
     1530       PROFIT(1)

r(2,Kuk,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    10000       prod_starved(Kuk,2)
   -10000       timber_bought(Kuk,2)
        1       Barges_buy(Kuk,2)
     1530       PROFIT(2)

r(2,Kuk,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    10000       prod_starved(Kuk,3)
   -10000       timber_bought(Kuk,3)
        1       Barges_buy(Kuk,3)
     1530       PROFIT(3)

r(2,Kok,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    10000       prod_starved(Kok,1)
   -10000       timber_bought(Kok,1)
        1       Barges_buy(Kok,1)
     1520       PROFIT(1)

r(2,Kok,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    10000       prod_starved(Kok,2)
   -10000       timber_bought(Kok,2)
        1       Barges_buy(Kok,2)
     1520       PROFIT(2)

r(2,Kok,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    10000       prod_starved(Kok,3)
   -10000       timber_bought(Kok,3)
        1       Barges_buy(Kok,3)
     1520       PROFIT(3)

r(3,Mat,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    20000       prod_starved(Mat,1)
   -20000       timber_bought(Mat,1)
        1       Barges_buy(Mat,1)
     4200       PROFIT(1)

r(3,Mat,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    20000       prod_starved(Mat,2)
   -20000       timber_bought(Mat,2)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 22:25:36 Page 75
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE final Using MIP From line 416


     r  1 if we buy n boats of timber i, 0 otherwise

        1       Barges_buy(Mat,2)
     4200       PROFIT(2)

r(3,Mat,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    20000       prod_starved(Mat,3)
   -20000       timber_bought(Mat,3)
        1       Barges_buy(Mat,3)
     4200       PROFIT(3)

r(3,Kut,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    20000       prod_starved(Kut,1)
   -20000       timber_bought(Kut,1)
        1       Barges_buy(Kut,1)
     3200       PROFIT(1)

r(3,Kut,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    20000       prod_starved(Kut,2)
   -20000       timber_bought(Kut,2)
        1       Barges_buy(Kut,2)
     3200       PROFIT(2)

r(3,Kut,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    20000       prod_starved(Kut,3)
   -20000       timber_bought(Kut,3)
        1       Barges_buy(Kut,3)
     3200       PROFIT(3)

r(3,Kot,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    20000       prod_starved(Kot,1)
   -20000       timber_bought(Kot,1)
        1       Barges_buy(Kot,1)
     3600       PROFIT(1)

r(3,Kot,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    20000       prod_starved(Kot,2)
   -20000       timber_bought(Kot,2)
        1       Barges_buy(Kot,2)
     3600       PROFIT(2)

r(3,Kot,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    20000       prod_starved(Kot,3)
   -20000       timber_bought(Kot,3)
        1       Barges_buy(Kot,3)
     3600       PROFIT(3)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 22:25:36 Page 76
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE final Using MIP From line 416


     r  1 if we buy n boats of timber i, 0 otherwise


r(3,Mak,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    20000       prod_starved(Mak,1)
   -20000       timber_bought(Mak,1)
        1       Barges_buy(Mak,1)
     3680       PROFIT(1)

r(3,Mak,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    20000       prod_starved(Mak,2)
   -20000       timber_bought(Mak,2)
        1       Barges_buy(Mak,2)
     3680       PROFIT(2)

r(3,Mak,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    20000       prod_starved(Mak,3)
   -20000       timber_bought(Mak,3)
        1       Barges_buy(Mak,3)
     3680       PROFIT(3)

r(3,Kuk,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    20000       prod_starved(Kuk,1)
   -20000       timber_bought(Kuk,1)
        1       Barges_buy(Kuk,1)
     3120       PROFIT(1)

r(3,Kuk,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    20000       prod_starved(Kuk,2)
   -20000       timber_bought(Kuk,2)
        1       Barges_buy(Kuk,2)
     3120       PROFIT(2)

r(3,Kuk,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    20000       prod_starved(Kuk,3)
   -20000       timber_bought(Kuk,3)
        1       Barges_buy(Kuk,3)
     3120       PROFIT(3)

r(3,Kok,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    20000       prod_starved(Kok,1)
   -20000       timber_bought(Kok,1)
        1       Barges_buy(Kok,1)
     3080       PROFIT(1)

r(3,Kok,2)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 22:25:36 Page 77
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE final Using MIP From line 416


     r  1 if we buy n boats of timber i, 0 otherwise

                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    20000       prod_starved(Kok,2)
   -20000       timber_bought(Kok,2)
        1       Barges_buy(Kok,2)
     3080       PROFIT(2)

r(3,Kok,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    20000       prod_starved(Kok,3)
   -20000       timber_bought(Kok,3)
        1       Barges_buy(Kok,3)
     3080       PROFIT(3)

r(4,Mat,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    30000       prod_starved(Mat,1)
   -30000       timber_bought(Mat,1)
        1       Barges_buy(Mat,1)
     6600       PROFIT(1)

r(4,Mat,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    30000       prod_starved(Mat,2)
   -30000       timber_bought(Mat,2)
        1       Barges_buy(Mat,2)
     6600       PROFIT(2)

r(4,Mat,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    30000       prod_starved(Mat,3)
   -30000       timber_bought(Mat,3)
        1       Barges_buy(Mat,3)
     6600       PROFIT(3)

r(4,Kut,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    30000       prod_starved(Kut,1)
   -30000       timber_bought(Kut,1)
        1       Barges_buy(Kut,1)
     4950       PROFIT(1)

r(4,Kut,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    30000       prod_starved(Kut,2)
   -30000       timber_bought(Kut,2)
        1       Barges_buy(Kut,2)
     4950       PROFIT(2)

r(4,Kut,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    30000       prod_starved(Kut,3)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 22:25:36 Page 78
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE final Using MIP From line 416


     r  1 if we buy n boats of timber i, 0 otherwise

   -30000       timber_bought(Kut,3)
        1       Barges_buy(Kut,3)
     4950       PROFIT(3)

r(4,Kot,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    30000       prod_starved(Kot,1)
   -30000       timber_bought(Kot,1)
        1       Barges_buy(Kot,1)
     6300       PROFIT(1)

r(4,Kot,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    30000       prod_starved(Kot,2)
   -30000       timber_bought(Kot,2)
        1       Barges_buy(Kot,2)
     6300       PROFIT(2)

r(4,Kot,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    30000       prod_starved(Kot,3)
   -30000       timber_bought(Kot,3)
        1       Barges_buy(Kot,3)
     6300       PROFIT(3)

r(4,Mak,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    30000       prod_starved(Mak,1)
   -30000       timber_bought(Mak,1)
        1       Barges_buy(Mak,1)
     5580       PROFIT(1)

r(4,Mak,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    30000       prod_starved(Mak,2)
   -30000       timber_bought(Mak,2)
        1       Barges_buy(Mak,2)
     5580       PROFIT(2)

r(4,Mak,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    30000       prod_starved(Mak,3)
   -30000       timber_bought(Mak,3)
        1       Barges_buy(Mak,3)
     5580       PROFIT(3)

r(4,Kuk,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    30000       prod_starved(Kuk,1)
   -30000       timber_bought(Kuk,1)
        1       Barges_buy(Kuk,1)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 22:25:36 Page 79
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE final Using MIP From line 416


     r  1 if we buy n boats of timber i, 0 otherwise

     4770       PROFIT(1)

r(4,Kuk,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    30000       prod_starved(Kuk,2)
   -30000       timber_bought(Kuk,2)
        1       Barges_buy(Kuk,2)
     4770       PROFIT(2)

r(4,Kuk,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    30000       prod_starved(Kuk,3)
   -30000       timber_bought(Kuk,3)
        1       Barges_buy(Kuk,3)
     4770       PROFIT(3)

r(4,Kok,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    30000       prod_starved(Kok,1)
   -30000       timber_bought(Kok,1)
        1       Barges_buy(Kok,1)
     4680       PROFIT(1)

r(4,Kok,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    30000       prod_starved(Kok,2)
   -30000       timber_bought(Kok,2)
        1       Barges_buy(Kok,2)
     4680       PROFIT(2)

r(4,Kok,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    30000       prod_starved(Kok,3)
   -30000       timber_bought(Kok,3)
        1       Barges_buy(Kok,3)
     4680       PROFIT(3)

r(5,Mat,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    40000       prod_starved(Mat,1)
   -40000       timber_bought(Mat,1)
        1       Barges_buy(Mat,1)
     9200       PROFIT(1)

r(5,Mat,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    40000       prod_starved(Mat,2)
   -40000       timber_bought(Mat,2)
        1       Barges_buy(Mat,2)
     9200       PROFIT(2)

GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 22:25:36 Page 80
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE final Using MIP From line 416


     r  1 if we buy n boats of timber i, 0 otherwise

r(5,Mat,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    40000       prod_starved(Mat,3)
   -40000       timber_bought(Mat,3)
        1       Barges_buy(Mat,3)
     9200       PROFIT(3)

r(5,Kut,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    40000       prod_starved(Kut,1)
   -40000       timber_bought(Kut,1)
        1       Barges_buy(Kut,1)
     6800       PROFIT(1)

r(5,Kut,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    40000       prod_starved(Kut,2)
   -40000       timber_bought(Kut,2)
        1       Barges_buy(Kut,2)
     6800       PROFIT(2)

r(5,Kut,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    40000       prod_starved(Kut,3)
   -40000       timber_bought(Kut,3)
        1       Barges_buy(Kut,3)
     6800       PROFIT(3)

r(5,Kot,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    40000       prod_starved(Kot,1)
   -40000       timber_bought(Kot,1)
        1       Barges_buy(Kot,1)
     9600       PROFIT(1)

r(5,Kot,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    40000       prod_starved(Kot,2)
   -40000       timber_bought(Kot,2)
        1       Barges_buy(Kot,2)
     9600       PROFIT(2)

r(5,Kot,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    40000       prod_starved(Kot,3)
   -40000       timber_bought(Kot,3)
        1       Barges_buy(Kot,3)
     9600       PROFIT(3)

r(5,Mak,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 22:25:36 Page 81
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE final Using MIP From line 416


     r  1 if we buy n boats of timber i, 0 otherwise

    40000       prod_starved(Mak,1)
   -40000       timber_bought(Mak,1)
        1       Barges_buy(Mak,1)
     7520       PROFIT(1)

r(5,Mak,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    40000       prod_starved(Mak,2)
   -40000       timber_bought(Mak,2)
        1       Barges_buy(Mak,2)
     7520       PROFIT(2)

r(5,Mak,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    40000       prod_starved(Mak,3)
   -40000       timber_bought(Mak,3)
        1       Barges_buy(Mak,3)
     7520       PROFIT(3)

r(5,Kuk,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    40000       prod_starved(Kuk,1)
   -40000       timber_bought(Kuk,1)
        1       Barges_buy(Kuk,1)
     6480       PROFIT(1)

r(5,Kuk,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    40000       prod_starved(Kuk,2)
   -40000       timber_bought(Kuk,2)
        1       Barges_buy(Kuk,2)
     6480       PROFIT(2)

r(5,Kuk,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    40000       prod_starved(Kuk,3)
   -40000       timber_bought(Kuk,3)
        1       Barges_buy(Kuk,3)
     6480       PROFIT(3)

r(5,Kok,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    40000       prod_starved(Kok,1)
   -40000       timber_bought(Kok,1)
        1       Barges_buy(Kok,1)
     6320       PROFIT(1)

r(5,Kok,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    40000       prod_starved(Kok,2)
   -40000       timber_bought(Kok,2)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 22:25:36 Page 82
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE final Using MIP From line 416


     r  1 if we buy n boats of timber i, 0 otherwise

        1       Barges_buy(Kok,2)
     6320       PROFIT(2)

r(5,Kok,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    40000       prod_starved(Kok,3)
   -40000       timber_bought(Kok,3)
        1       Barges_buy(Kok,3)
     6320       PROFIT(3)

r(6,Mat,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    50000       prod_starved(Mat,1)
   -50000       timber_bought(Mat,1)
        1       Barges_buy(Mat,1)
    12000       PROFIT(1)

r(6,Mat,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    50000       prod_starved(Mat,2)
   -50000       timber_bought(Mat,2)
        1       Barges_buy(Mat,2)
    12000       PROFIT(2)

r(6,Mat,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    50000       prod_starved(Mat,3)
   -50000       timber_bought(Mat,3)
        1       Barges_buy(Mat,3)
    12000       PROFIT(3)

r(6,Kut,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    50000       prod_starved(Kut,1)
   -50000       timber_bought(Kut,1)
        1       Barges_buy(Kut,1)
     8750       PROFIT(1)

r(6,Kut,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    50000       prod_starved(Kut,2)
   -50000       timber_bought(Kut,2)
        1       Barges_buy(Kut,2)
     8750       PROFIT(2)

r(6,Kut,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    50000       prod_starved(Kut,3)
   -50000       timber_bought(Kut,3)
        1       Barges_buy(Kut,3)
     8750       PROFIT(3)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 22:25:36 Page 83
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE final Using MIP From line 416


     r  1 if we buy n boats of timber i, 0 otherwise


r(6,Kot,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    50000       prod_starved(Kot,1)
   -50000       timber_bought(Kot,1)
        1       Barges_buy(Kot,1)
    13500       PROFIT(1)

r(6,Kot,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    50000       prod_starved(Kot,2)
   -50000       timber_bought(Kot,2)
        1       Barges_buy(Kot,2)
    13500       PROFIT(2)

r(6,Kot,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    50000       prod_starved(Kot,3)
   -50000       timber_bought(Kot,3)
        1       Barges_buy(Kot,3)
    13500       PROFIT(3)

r(6,Mak,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    50000       prod_starved(Mak,1)
   -50000       timber_bought(Mak,1)
        1       Barges_buy(Mak,1)
     9500       PROFIT(1)

REMAINING 1826 ENTRIES SKIPPED

---- u  1 if we use n boats for product j shiping to region k, 0 otherwise

u(1,Mas,EU,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Mas,EU,1)

u(1,Mas,EU,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Mas,EU,2)

u(1,Mas,EU,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Mas,EU,3)

u(1,Mas,IE,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Mas,IE,1)

u(1,Mas,IE,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 22:25:36 Page 84
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE final Using MIP From line 416


     u  1 if we use n boats for product j shiping to region k, 0 otherwise

        1       Barges_sell(Mas,IE,2)

u(1,Mas,IE,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Mas,IE,3)

u(1,Mas,PA,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Mas,PA,1)

u(1,Mas,PA,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Mas,PA,2)

u(1,Mas,PA,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Mas,PA,3)

u(1,Mas,KI,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Mas,KI,1)

u(1,Mas,KI,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Mas,KI,2)

u(1,Mas,KI,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Mas,KI,3)

u(1,Kus,EU,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Kus,EU,1)

u(1,Kus,EU,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Kus,EU,2)

u(1,Kus,EU,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Kus,EU,3)

u(1,Kus,IE,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Kus,IE,1)

u(1,Kus,IE,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Kus,IE,2)

u(1,Kus,IE,3)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 22:25:36 Page 85
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE final Using MIP From line 416


     u  1 if we use n boats for product j shiping to region k, 0 otherwise

                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Kus,IE,3)

u(1,Kus,PA,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Kus,PA,1)

u(1,Kus,PA,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Kus,PA,2)

u(1,Kus,PA,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Kus,PA,3)

u(1,Kus,KI,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Kus,KI,1)

u(1,Kus,KI,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Kus,KI,2)

u(1,Kus,KI,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Kus,KI,3)

u(1,Kos,EU,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Kos,EU,1)

u(1,Kos,EU,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Kos,EU,2)

u(1,Kos,EU,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Kos,EU,3)

u(1,Kos,IE,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Kos,IE,1)

u(1,Kos,IE,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Kos,IE,2)

u(1,Kos,IE,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Kos,IE,3)

GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 22:25:36 Page 86
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE final Using MIP From line 416


     u  1 if we use n boats for product j shiping to region k, 0 otherwise

u(1,Kos,PA,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Kos,PA,1)

u(1,Kos,PA,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Kos,PA,2)

u(1,Kos,PA,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Kos,PA,3)

u(1,Kos,KI,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Kos,KI,1)

u(1,Kos,KI,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Kos,KI,2)

u(1,Kos,KI,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Kos,KI,3)

u(1,Kuv,EU,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Kuv,EU,1)

u(1,Kuv,EU,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Kuv,EU,2)

u(1,Kuv,EU,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Kuv,EU,3)

u(1,Kuv,IE,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Kuv,IE,1)

u(1,Kuv,IE,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Kuv,IE,2)

u(1,Kuv,IE,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Kuv,IE,3)

u(1,Kuv,PA,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Kuv,PA,1)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 22:25:36 Page 87
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE final Using MIP From line 416


     u  1 if we use n boats for product j shiping to region k, 0 otherwise


u(1,Kuv,PA,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Kuv,PA,2)

u(1,Kuv,PA,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Kuv,PA,3)

u(1,Kuv,KI,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Kuv,KI,1)

u(1,Kuv,KI,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Kuv,KI,2)

u(1,Kuv,KI,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Kuv,KI,3)

u(1,Kov,EU,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Kov,EU,1)

u(1,Kov,EU,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Kov,EU,2)

u(1,Kov,EU,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Kov,EU,3)

u(1,Kov,IE,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Kov,IE,1)

u(1,Kov,IE,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Kov,IE,2)

u(1,Kov,IE,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Kov,IE,3)

u(1,Kov,PA,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Kov,PA,1)

u(1,Kov,PA,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 22:25:36 Page 88
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE final Using MIP From line 416


     u  1 if we use n boats for product j shiping to region k, 0 otherwise

        1       Barges_sell(Kov,PA,2)

u(1,Kov,PA,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Kov,PA,3)

u(1,Kov,KI,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Kov,KI,1)

u(1,Kov,KI,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Kov,KI,2)

u(1,Kov,KI,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Kov,KI,3)

u(1,Hsel,EU,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Hsel,EU,1)

u(1,Hsel,EU,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Hsel,EU,2)

u(1,Hsel,EU,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Hsel,EU,3)

u(1,Hsel,IE,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Hsel,IE,1)

u(1,Hsel,IE,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Hsel,IE,2)

u(1,Hsel,IE,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Hsel,IE,3)

u(1,Hsel,PA,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Hsel,PA,1)

u(1,Hsel,PA,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Hsel,PA,2)

u(1,Hsel,PA,3)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 22:25:36 Page 89
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE final Using MIP From line 416


     u  1 if we use n boats for product j shiping to region k, 0 otherwise

                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Hsel,PA,3)

u(1,Hsel,KI,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Hsel,KI,1)

u(1,Hsel,KI,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Hsel,KI,2)

u(1,Hsel,KI,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Hsel,KI,3)

u(1,Lsel,EU,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Lsel,EU,1)

u(1,Lsel,EU,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Lsel,EU,2)

u(1,Lsel,EU,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Lsel,EU,3)

u(1,Lsel,IE,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Lsel,IE,1)

u(1,Lsel,IE,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Lsel,IE,2)

u(1,Lsel,IE,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Lsel,IE,3)

u(1,Lsel,PA,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Lsel,PA,1)

u(1,Lsel,PA,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Lsel,PA,2)

u(1,Lsel,PA,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Lsel,PA,3)

GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 22:25:36 Page 90
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE final Using MIP From line 416


     u  1 if we use n boats for product j shiping to region k, 0 otherwise

u(1,Lsel,KI,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Lsel,KI,1)

u(1,Lsel,KI,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Lsel,KI,2)

u(1,Lsel,KI,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Lsel,KI,3)

u(1,Pap,EU,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Pap,EU,1)

u(1,Pap,EU,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Pap,EU,2)

u(1,Pap,EU,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Pap,EU,3)

u(1,Pap,IE,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Pap,IE,1)

u(1,Pap,IE,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Pap,IE,2)

u(1,Pap,IE,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Pap,IE,3)

u(1,Pap,PA,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Pap,PA,1)

u(1,Pap,PA,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Pap,PA,2)

u(1,Pap,PA,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Pap,PA,3)

u(1,Pap,KI,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Pap,KI,1)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 22:25:36 Page 91
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE final Using MIP From line 416


     u  1 if we use n boats for product j shiping to region k, 0 otherwise


u(1,Pap,KI,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Pap,KI,2)

u(1,Pap,KI,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Pap,KI,3)

u(2,Mas,EU,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    10000       Sold_Prod(Mas,1)
        1       Barges_sell(Mas,EU,1)
   -15600       PROFIT(1)

u(2,Mas,EU,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    10000       Sold_Prod(Mas,2)
        1       Barges_sell(Mas,EU,2)
   -14820       PROFIT(2)

u(2,Mas,EU,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    10000       Sold_Prod(Mas,3)
        1       Barges_sell(Mas,EU,3)
   -14079       PROFIT(3)

u(2,Mas,IE,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    10000       Sold_Prod(Mas,1)
        1       Barges_sell(Mas,IE,1)
   -12000       PROFIT(1)

REMAINING 2108 ENTRIES SKIPPED

---- b  amount of timber i bought

b(Mat,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       timber_bought(Mat,1)
       -0.19    PROFIT(1)

b(Mat,2)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       timber_bought(Mat,2)
       -0.19    PROFIT(2)

b(Mat,3)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       timber_bought(Mat,3)
       -0.19    PROFIT(3)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 22:25:36 Page 92
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE final Using MIP From line 416


     b  amount of timber i bought


b(Kut,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       timber_bought(Kut,1)
       -0.15    PROFIT(1)

b(Kut,2)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       timber_bought(Kut,2)
       -0.15    PROFIT(2)

b(Kut,3)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       timber_bought(Kut,3)
       -0.15    PROFIT(3)

b(Kot,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       timber_bought(Kot,1)
       -0.12    PROFIT(1)

b(Kot,2)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       timber_bought(Kot,2)
       -0.12    PROFIT(2)

b(Kot,3)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       timber_bought(Kot,3)
       -0.12    PROFIT(3)

b(Mak,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       timber_bought(Mak,1)
       -0.18    PROFIT(1)

b(Mak,2)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       timber_bought(Mak,2)
       -0.18    PROFIT(2)

b(Mak,3)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       timber_bought(Mak,3)
       -0.18    PROFIT(3)

b(Kuk,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       timber_bought(Kuk,1)
       -0.15    PROFIT(1)

GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 22:25:36 Page 93
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE final Using MIP From line 416


     b  amount of timber i bought

b(Kuk,2)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       timber_bought(Kuk,2)
       -0.15    PROFIT(2)

b(Kuk,3)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       timber_bought(Kuk,3)
       -0.15    PROFIT(3)

b(Kok,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       timber_bought(Kok,1)
       -0.15    PROFIT(1)

b(Kok,2)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       timber_bought(Kok,2)
       -0.15    PROFIT(2)

b(Kok,3)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       timber_bought(Kok,3)
       -0.15    PROFIT(3)


---- Pr  Net profit in each year t

Pr(1)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
       -1       obj
        1       PROFIT(1)

Pr(2)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
       -1       obj
        1       PROFIT(2)

Pr(3)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
       -1       obj
        1       PROFIT(3)


---- Cap  Capacity of machine m in year t

Cap(Pap,1)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       Capacity1(Pap,1)
        1       Capacity2(Pap,1)
        1       MaxCapacity(Pap,1)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 22:25:36 Page 94
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE final Using MIP From line 416


     Cap  Capacity of machine m in year t

        1       CapStart(Pap,1)
        1       CapStart(Pap,2)
        1       CapStart(Pap,3)

Cap(Pap,2)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       Capacity1(Pap,2)
        1       Capacity2(Pap,2)
        1       MaxCapacity(Pap,2)
        0.7     PROFIT(1)

Cap(Pap,3)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       Capacity1(Pap,3)
        1       Capacity2(Pap,3)
        1       MaxCapacity(Pap,3)
        0.7     PROFIT(2)

Cap(SAW,1)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       Capacity1(SAW,1)
        1       Capacity2(SAW,1)
        1       MaxCapacity(SAW,1)
        1       CapStart(SAW,1)
        1       CapStart(SAW,2)
        1       CapStart(SAW,3)

Cap(SAW,2)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       Capacity1(SAW,2)
        1       Capacity2(SAW,2)
        1       MaxCapacity(SAW,2)
        0.1     PROFIT(1)

Cap(SAW,3)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       Capacity1(SAW,3)
        1       Capacity2(SAW,3)
        1       MaxCapacity(SAW,3)
        0.1     PROFIT(2)

Cap(PLY,1)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       Capacity1(PLY,1)
        1       Capacity2(PLY,1)
        1       MaxCapacity(PLY,1)
        1       CapStart(PLY,1)
        1       CapStart(PLY,2)
        1       CapStart(PLY,3)

Cap(PLY,2)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 22:25:36 Page 95
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE final Using MIP From line 416


     Cap  Capacity of machine m in year t

                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       Capacity1(PLY,2)
        1       Capacity2(PLY,2)
        1       MaxCapacity(PLY,2)
        0.3     PROFIT(1)

Cap(PLY,3)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       Capacity1(PLY,3)
        1       Capacity2(PLY,3)
        1       MaxCapacity(PLY,3)
        0.3     PROFIT(2)

Cap(SPULP,1)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       Capacity1(SPULP,1)
        1       Capacity2(SPULP,1)
        1       MaxCapacity(SPULP,1)
        1       CapStart(SPULP,1)
        1       CapStart(SPULP,2)
        1       CapStart(SPULP,3)

Cap(SPULP,2)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       Capacity1(SPULP,2)
        1       Capacity2(SPULP,2)
        1       MaxCapacity(SPULP,2)
        0.5     PROFIT(1)

Cap(SPULP,3)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       Capacity1(SPULP,3)
        1       Capacity2(SPULP,3)
        1       MaxCapacity(SPULP,3)
        0.5     PROFIT(2)

Cap(HPULP,1)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       Capacity1(HPULP,1)
        1       Capacity2(HPULP,1)
        1       MaxCapacity(HPULP,1)
        1       CapStart(HPULP,1)
        1       CapStart(HPULP,2)
        1       CapStart(HPULP,3)

Cap(HPULP,2)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       Capacity1(HPULP,2)
        1       Capacity2(HPULP,2)
        1       MaxCapacity(HPULP,2)
        0.5     PROFIT(1)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 22:25:36 Page 96
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE final Using MIP From line 416


     Cap  Capacity of machine m in year t


Cap(HPULP,3)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       Capacity1(HPULP,3)
        1       Capacity2(HPULP,3)
        1       MaxCapacity(HPULP,3)
        0.5     PROFIT(2)

GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 22:25:36 Page 97
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Model Statistics    SOLVE final Using MIP From line 416


MODEL STATISTICS

BLOCKS OF EQUATIONS          15     SINGLE EQUATIONS          268
BLOCKS OF VARIABLES           8     SINGLE VARIABLES        4,213
NON ZERO ELEMENTS        14,399     DISCRETE VARIABLES      4,158


GENERATION TIME      =        0.061 SECONDS      5 MB  24.8.1 r59919 DEX-DEG


EXECUTION TIME       =        0.062 SECONDS      5 MB  24.8.1 r59919 DEX-DEG
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 22:25:36 Page 98
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 416


               S O L V E      S U M M A R Y

     MODEL   final               OBJECTIVE  z
     TYPE    MIP                 DIRECTION  MAXIMIZE
     SOLVER  CPLEX               FROM LINE  416

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      1 Optimal                   
**** OBJECTIVE VALUE           677645.2500

 RESOURCE USAGE, LIMIT          0.330       300.000
 ITERATION COUNT, LIMIT       761     999999999

IBM ILOG CPLEX   24.8.1 r59919 Released Dec 22, 2016 DEG x86 64bit/Mac OS X   
--- GAMS/Cplex licensed for continuous and discrete problems.
Cplex 12.7.0.0

Space for names approximately 0.09 Mb
Use option 'names no' to turn use of names off
MIP status(101): integer optimal solution
Cplex Time: 0.31sec (det. 148.19 ticks)
Fixing integer variables, and solving final LP...
Fixed MIP status(1): optimal
Cplex Time: 0.00sec (det. 1.76 ticks)
Proven optimal solution.

MIP Solution:       677645.250000    (761 iterations, 149 nodes)
Final Solve:        677645.250002    (0 iterations)

Best possible:      677645.250000
Absolute gap:            0.000000
Relative gap:            0.000000


                           LOWER          LEVEL          UPPER         MARGINAL

---- EQU obj                 .              .              .             1.0000      

  obj  Maximum gross profit

---- EQU timber_used   amount of  timber i used to make  product j in year t

             LOWER          LEVEL          UPPER         MARGINAL

Mat.1          .              .              .             0.1900      
Mat.2          .              .              .             0.1900      
Mat.3          .              .              .             0.1900      
Kut.1          .              .              .             0.1500      
Kut.2          .              .              .             0.1500      
Kut.3          .              .              .             0.1500      
Kot.1          .              .              .             0.1200      
Kot.2          .              .              .             0.1200      
Kot.3          .              .              .             0.1200      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 22:25:36 Page 99
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 416


     EQU timber_used   amount of  timber i used to make  product j in year t

             LOWER          LEVEL          UPPER         MARGINAL

Mak.1          .              .              .             0.1800      
Mak.2          .              .              .             0.1800      
Mak.3          .              .              .             0.1800      
Kuk.1          .              .              .              .          
Kuk.2          .              .              .             0.1500      
Kuk.3          .              .              .             0.1500      
Kok.1          .              .              .             0.1500      
Kok.2          .              .              .             0.1500      
Kok.3          .              .              .             0.1500      

---- EQU prod_starved  ensure that production can not be starved in each year

             LOWER          LEVEL          UPPER         MARGINAL

Mat.1          .              .            +INF             .          
Mat.2          .              .            +INF             .          
Mat.3          .              .            +INF             .          
Kut.1          .              .            +INF             .          
Kut.2          .          6000.0000        +INF             .          
Kut.3          .          4000.0000        +INF             .          
Kot.1          .          6000.0000        +INF             .          
Kot.2          .          4000.0000        +INF             .          
Kot.3          .          2000.0000        +INF             .          
Mak.1          .          1200.0000        +INF             .          
Mak.2          .          6400.0000        +INF             .          
Mak.3          .          8000.0000        +INF             .          
Kuk.1          .              .            +INF             .          
Kuk.2          .          8000.0000        +INF             .          
Kuk.3          .          2000.0000        +INF             .          
Kok.1          .          4800.0000        +INF             .          
Kok.2          .          7600.0000        +INF             .          
Kok.3          .              .            +INF             .          

---- EQU Sold_Prod  we cant sell more than we produce in each year

              LOWER          LEVEL          UPPER         MARGINAL

Mas .1        -INF             .              .              .          
Mas .2        -INF             .              .              .          
Mas .3        -INF             .              .              .          
Kus .1        -INF             .              .              .          
Kus .2        -INF             .              .              .          
Kus .3        -INF             .              .              .          
Kos .1        -INF             .              .              .          
Kos .2        -INF             .              .              .          
Kos .3        -INF             .              .              .          
Kuv .1        -INF             .              .              .          
Kuv .2        -INF             .              .              .          
Kuv .3        -INF      4.6628702E-7          .              .          
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 22:25:36 Page 100
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 416


     EQU Sold_Prod  we cant sell more than we produce in each year

              LOWER          LEVEL          UPPER         MARGINAL

Kov .1        -INF             .              .              .          
Kov .2        -INF             .              .              .          
Kov .3        -INF             .              .              .          
Hsel.1        -INF       -16000.0000          .              .          
Hsel.2        -INF       -32000.0000          .              .          
Hsel.3        -INF       -30000.0000          .              .          
Lsel.1        -INF       -16000.0000          .              .          
Lsel.2        -INF       -32000.0000          .              .          
Lsel.3        -INF       -30000.0000          .              .          
Pap .1        -INF             .              .              .          
Pap .2        -INF             .              .              .          
Pap .3        -INF             .              .              .          

---- EQU timber_bought  amount of timber i bought in each year

             LOWER          LEVEL          UPPER         MARGINAL

Mat.1          .              .              .             0.1900      
Mat.2          .              .              .             0.1900      
Mat.3          .              .              .             0.1900      
Kut.1          .              .              .             0.1500      
Kut.2          .              .              .             0.1500      
Kut.3          .              .              .             0.1500      
Kot.1          .              .              .             0.1200      
Kot.2          .              .              .             0.1200      
Kot.3          .              .              .             0.1200      
Mak.1          .              .              .             0.1800      
Mak.2          .              .              .             0.1800      
Mak.3          .              .              .             0.1800      
Kuk.1          .              .              .             0.1500      
Kuk.2          .              .              .             0.1500      
Kuk.3          .              .              .             0.1500      
Kok.1          .              .              .             0.1500      
Kok.2          .              .              .             0.1500      
Kok.3          .              .              .             0.1500      

---- EQU Barges_buy  ensure we only pick one value n for barges for each timber i

             LOWER          LEVEL          UPPER         MARGINAL

Mat.1         1.0000         1.0000         1.0000          .          
Mat.2         1.0000         1.0000         1.0000          .          
Mat.3         1.0000         1.0000         1.0000          .          
Kut.1         1.0000         1.0000         1.0000          .          
Kut.2         1.0000         1.0000         1.0000          .          
Kut.3         1.0000         1.0000         1.0000          .          
Kot.1         1.0000         1.0000         1.0000          .          
Kot.2         1.0000         1.0000         1.0000          .          
Kot.3         1.0000         1.0000         1.0000          .          
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 22:25:36 Page 101
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 416


     EQU Barges_buy  ensure we only pick one value n for barges for each timber i

             LOWER          LEVEL          UPPER         MARGINAL

Mak.1         1.0000         1.0000         1.0000          .          
Mak.2         1.0000         1.0000         1.0000          .          
Mak.3         1.0000         1.0000         1.0000          .          
Kuk.1         1.0000         1.0000         1.0000          .          
Kuk.2         1.0000         1.0000         1.0000          .          
Kuk.3         1.0000         1.0000         1.0000          .          
Kok.1         1.0000         1.0000         1.0000          .          
Kok.2         1.0000         1.0000         1.0000          .          
Kok.3         1.0000         1.0000         1.0000          .          

---- EQU Barges_sell  ensure we only pick one value  n for barges for each product to each city

                 LOWER          LEVEL          UPPER         MARGINAL

Mas .EU.1         1.0000         1.0000         1.0000          .          
Mas .EU.2         1.0000         1.0000         1.0000          .          
Mas .EU.3         1.0000         1.0000         1.0000          .          
Mas .IE.1         1.0000         1.0000         1.0000          .          
Mas .IE.2         1.0000         1.0000         1.0000          .          
Mas .IE.3         1.0000         1.0000         1.0000          .          
Mas .PA.1         1.0000         1.0000         1.0000          .          
Mas .PA.2         1.0000         1.0000         1.0000          .          
Mas .PA.3         1.0000         1.0000         1.0000          .          
Mas .KI.1         1.0000         1.0000         1.0000          .          
Mas .KI.2         1.0000         1.0000         1.0000          .          
Mas .KI.3         1.0000         1.0000         1.0000          .          
Kus .EU.1         1.0000         1.0000         1.0000          .          
Kus .EU.2         1.0000         1.0000         1.0000          .          
Kus .EU.3         1.0000         1.0000         1.0000          .          
Kus .IE.1         1.0000         1.0000         1.0000          .          
Kus .IE.2         1.0000         1.0000         1.0000          .          
Kus .IE.3         1.0000         1.0000         1.0000          .          
Kus .PA.1         1.0000         1.0000         1.0000          .          
Kus .PA.2         1.0000         1.0000         1.0000          .          
Kus .PA.3         1.0000         1.0000         1.0000          .          
Kus .KI.1         1.0000         1.0000         1.0000          .          
Kus .KI.2         1.0000         1.0000         1.0000          .          
Kus .KI.3         1.0000         1.0000         1.0000          .          
Kos .EU.1         1.0000         1.0000         1.0000          .          
Kos .EU.2         1.0000         1.0000         1.0000          .          
Kos .EU.3         1.0000         1.0000         1.0000          .          
Kos .IE.1         1.0000         1.0000         1.0000          .          
Kos .IE.2         1.0000         1.0000         1.0000          .          
Kos .IE.3         1.0000         1.0000         1.0000          .          
Kos .PA.1         1.0000         1.0000         1.0000          .          
Kos .PA.2         1.0000         1.0000         1.0000          .          
Kos .PA.3         1.0000         1.0000         1.0000          .          
Kos .KI.1         1.0000         1.0000         1.0000          .          
Kos .KI.2         1.0000         1.0000         1.0000          .          
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 22:25:36 Page 102
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 416


     EQU Barges_sell  ensure we only pick one value  n for barges for each product to each city

                 LOWER          LEVEL          UPPER         MARGINAL

Kos .KI.3         1.0000         1.0000         1.0000          .          
Kuv .EU.1         1.0000         1.0000         1.0000          .          
Kuv .EU.2         1.0000         1.0000         1.0000          .          
Kuv .EU.3         1.0000         1.0000         1.0000          .          
Kuv .IE.1         1.0000         1.0000         1.0000          .          
Kuv .IE.2         1.0000         1.0000         1.0000          .          
Kuv .IE.3         1.0000         1.0000         1.0000          .          
Kuv .PA.1         1.0000         1.0000         1.0000          .          
Kuv .PA.2         1.0000         1.0000         1.0000          .          
Kuv .PA.3         1.0000         1.0000         1.0000          .          
Kuv .KI.1         1.0000         1.0000         1.0000          .          
Kuv .KI.2         1.0000         1.0000         1.0000          .          
Kuv .KI.3         1.0000         1.0000         1.0000          .          
Kov .EU.1         1.0000         1.0000         1.0000          .          
Kov .EU.2         1.0000         1.0000         1.0000          .          
Kov .EU.3         1.0000         1.0000         1.0000          .          
Kov .IE.1         1.0000         1.0000         1.0000          .          
Kov .IE.2         1.0000         1.0000         1.0000          .          
Kov .IE.3         1.0000         1.0000         1.0000          .          
Kov .PA.1         1.0000         1.0000         1.0000          .          
Kov .PA.2         1.0000         1.0000         1.0000          .          
Kov .PA.3         1.0000         1.0000         1.0000          .          
Kov .KI.1         1.0000         1.0000         1.0000          .          
Kov .KI.2         1.0000         1.0000         1.0000          .          
Kov .KI.3         1.0000         1.0000         1.0000          .          
Hsel.EU.1         1.0000         1.0000         1.0000          .          
Hsel.EU.2         1.0000         1.0000         1.0000          .          
Hsel.EU.3         1.0000         1.0000         1.0000          .          
Hsel.IE.1         1.0000         1.0000         1.0000          .          
Hsel.IE.2         1.0000         1.0000         1.0000          .          
Hsel.IE.3         1.0000         1.0000         1.0000          .          
Hsel.PA.1         1.0000         1.0000         1.0000          .          
Hsel.PA.2         1.0000         1.0000         1.0000          .          
Hsel.PA.3         1.0000         1.0000         1.0000          .          
Hsel.KI.1         1.0000         1.0000         1.0000          .          
Hsel.KI.2         1.0000         1.0000         1.0000          .          
Hsel.KI.3         1.0000         1.0000         1.0000          .          
Lsel.EU.1         1.0000         1.0000         1.0000          .          
Lsel.EU.2         1.0000         1.0000         1.0000          .          
Lsel.EU.3         1.0000         1.0000         1.0000          .          
Lsel.IE.1         1.0000         1.0000         1.0000          .          
Lsel.IE.2         1.0000         1.0000         1.0000          .          
Lsel.IE.3         1.0000         1.0000         1.0000          .          
Lsel.PA.1         1.0000         1.0000         1.0000          .          
Lsel.PA.2         1.0000         1.0000         1.0000          .          
Lsel.PA.3         1.0000         1.0000         1.0000          .          
Lsel.KI.1         1.0000         1.0000         1.0000          .          
Lsel.KI.2         1.0000         1.0000         1.0000          .          
Lsel.KI.3         1.0000         1.0000         1.0000          .          
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 22:25:36 Page 103
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 416


     EQU Barges_sell  ensure we only pick one value  n for barges for each product to each city

                 LOWER          LEVEL          UPPER         MARGINAL

Pap .EU.1         1.0000         1.0000         1.0000          .          
Pap .EU.2         1.0000         1.0000         1.0000          .          
Pap .EU.3         1.0000         1.0000         1.0000          .          
Pap .IE.1         1.0000         1.0000         1.0000          .          
Pap .IE.2         1.0000         1.0000         1.0000          .          
Pap .IE.3         1.0000         1.0000         1.0000          .          
Pap .PA.1         1.0000         1.0000         1.0000          .          
Pap .PA.2         1.0000         1.0000         1.0000          .          
Pap .PA.3         1.0000         1.0000         1.0000          .          
Pap .KI.1         1.0000         1.0000         1.0000          .          
Pap .KI.2         1.0000         1.0000         1.0000          .          
Pap .KI.3         1.0000         1.0000         1.0000          .          

---- EQU Capacity1  Capacity goes up if we produce over the capacity

               LOWER          LEVEL          UPPER         MARGINAL

Pap  .1          .              .            +INF            EPS         
Pap  .2          .              .            +INF           -0.7000      
Pap  .3          .              .            +INF           -0.7000      
SAW  .1          .              .            +INF            EPS         
SAW  .2          .              .            +INF           -0.1000      
SAW  .3          .              .            +INF           -0.1000      
PLY  .1          .              .            +INF            EPS         
PLY  .2          .              .            +INF           -0.3000      
PLY  .3          .              .            +INF           -0.3000      
SPULP.1          .              .            +INF            EPS         
SPULP.2          .              .            +INF           -0.5000      
SPULP.3          .              .            +INF           -0.5000      
HPULP.1          .              .            +INF            EPS         
HPULP.2          .              .            +INF           -0.5000      
HPULP.3          .              .            +INF           -0.5000      

---- EQU Capacity2  Make sure that the capacity does not go down

               LOWER          LEVEL          UPPER         MARGINAL

Pap  .1          .              .            +INF             .          
Pap  .2          .              .            +INF             .          
Pap  .3          .              .            +INF             .          
SAW  .1          .              .            +INF             .          
SAW  .2          .              .            +INF             .          
SAW  .3          .              .            +INF             .          
PLY  .1          .              .            +INF             .          
PLY  .2          .              .            +INF             .          
PLY  .3          .              .            +INF             .          
SPULP.1          .              .            +INF             .          
SPULP.2          .              .            +INF             .          
SPULP.3          .              .            +INF             .          
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 22:25:36 Page 104
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 416


     EQU Capacity2  Make sure that the capacity does not go down

               LOWER          LEVEL          UPPER         MARGINAL

HPULP.1          .              .            +INF             .          
HPULP.2          .              .            +INF             .          
HPULP.3          .              .            +INF             .          

---- EQU MaxCapacity  Make sure we dont go over the maximum capacity

               LOWER          LEVEL          UPPER         MARGINAL

Pap  .1        -INF        80000.0000    160000.0000          .          
Pap  .2        -INF       160000.0000    160000.0000          .          
Pap  .3        -INF       150000.0000    160000.0000          .          
SAW  .1        -INF        70000.0000    150000.0000          .          
SAW  .2        -INF        50000.0000    150000.0000          .          
SAW  .3        -INF        50000.0000    150000.0000          .          
PLY  .1        -INF        80000.0000    135000.0000          .          
PLY  .2        -INF       100000.0000    135000.0000          .          
PLY  .3        -INF        80000.0000    135000.0000          .          
SPULP.1        -INF        76000.0000    200000.0000          .          
SPULP.2        -INF        32000.0000    200000.0000          .          
SPULP.3        -INF        30000.0000    200000.0000          .          
HPULP.1        -INF       146000.0000    300000.0000          .          
HPULP.2        -INF        82000.0000    300000.0000          .          
HPULP.3        -INF        70000.0000    300000.0000          .          

---- EQU CapStart  Make sure the starting capacity is right

               LOWER          LEVEL          UPPER         MARGINAL

Pap  .1        -INF        80000.0000     80000.0000          .          
Pap  .2        -INF        80000.0000     80000.0000          .          
Pap  .3        -INF        80000.0000     80000.0000          .          
SAW  .1        -INF        70000.0000    100000.0000          .          
SAW  .2        -INF        70000.0000    100000.0000          .          
SAW  .3        -INF        70000.0000    100000.0000          .          
PLY  .1        -INF        80000.0000     90000.0000          .          
PLY  .2        -INF        80000.0000     90000.0000          .          
PLY  .3        -INF        80000.0000     90000.0000          .          
SPULP.1        -INF        76000.0000    100000.0000          .          
SPULP.2        -INF        76000.0000    100000.0000          .          
SPULP.3        -INF        76000.0000    100000.0000          .          
HPULP.1        -INF       146000.0000    150000.0000          .          
HPULP.2        -INF       146000.0000    150000.0000          .          
HPULP.3        -INF       146000.0000    150000.0000          .          
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 22:25:36 Page 105
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 416


---- EQU PAP_HSEL  Proportion needed of HSEL for PAP

         LOWER          LEVEL          UPPER         MARGINAL

1        -INF       -60000.0000          .              .          
2        -INF             .              .              .          
3        -INF             .              .              .          

---- EQU PAP_LSEL  Proportion needed of LSEL for PAP

         LOWER          LEVEL          UPPER         MARGINAL

1        -INF      -130000.0000          .              .          
2        -INF       -50000.0000          .              .          
3        -INF       -40000.0000          .              .          

---- EQU PULP_Bal  Cant produce paper without pulp

              LOWER          LEVEL          UPPER         MARGINAL

Hsel.1        -INF             .              .              .          
Hsel.2        -INF             .              .              .          
Hsel.3        -INF             .              .              .          
Lsel.1        -INF             .              .              .          
Lsel.2        -INF             .              .              .          
Lsel.3        -INF             .              .              .          

---- EQU PROFIT  Profit is what we gain minus what we spend

         LOWER          LEVEL          UPPER         MARGINAL

1          .              .              .             1.0000      
2          .              .              .             1.0000      
3          .              .              .             1.0000      

                           LOWER          LEVEL          UPPER         MARGINAL

---- VAR z                 -INF       677645.2500        +INF             .          

  z  the objective

---- VAR y  Cubic meters produced of product j

              LOWER          LEVEL          UPPER         MARGINAL

Mas .1          .         70000.0000   1060000.0000        -0.7780      
Mas .2          .         50000.0000   1060000.0000        -0.8780      
Mas .3          .         40000.0000   1060000.0000        -0.8780      
Kus .1          .              .       1060000.0000        -0.7920      
Kus .2          .              .       1060000.0000        -0.7720      
Kus .3          .              .       1060000.0000        -0.7720      
Kos .1          .              .       1060000.0000        -0.5620      
Kos .2          .              .       1060000.0000        -0.6620      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 22:25:36 Page 106
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 416


     VAR y  Cubic meters produced of product j

              LOWER          LEVEL          UPPER         MARGINAL

Kos .3          .         10000.0000   1060000.0000        -0.6620      
Kuv .1          .         50000.0000   1060000.0000        -2.9120      
Kuv .2          .         80000.0000   1060000.0000        -2.9720      
Kuv .3          .         70000.0000   1060000.0000        -2.9720      
Kov .1          .         30000.0000   1060000.0000        -2.6880      
Kov .2          .         20000.0000   1060000.0000        -2.9880      
Kov .3          .         10000.0000   1060000.0000        -2.9880      
Hsel.1          .         76000.0000   1060000.0000        -1.6840      
Hsel.2          .         32000.0000   1060000.0000        -2.1840      
Hsel.3          .         30000.0000   1060000.0000        -2.1840      
Lsel.1          .        146000.0000   1060000.0000        -1.4300      
Lsel.2          .         82000.0000   1060000.0000        -1.9300      
Lsel.3          .         70000.0000   1060000.0000        -1.9300      
Pap .1          .         80000.0000   1060000.0000        -1.7000      
Pap .2          .        160000.0000   1060000.0000        -2.5500      
Pap .3          .        150000.0000   1060000.0000        -2.5500      

---- VAR s  amount of timber i used to make products

             LOWER          LEVEL          UPPER         MARGINAL

Mat.1          .        140000.0000        +INF             .          
Mat.2          .        100000.0000        +INF             .          
Mat.3          .         80000.0000        +INF             .          
Kut.1          .        140000.0000        +INF             .          
Kut.2          .        224000.0000        +INF             .          
Kut.3          .        196000.0000        +INF             .          
Kot.1          .         84000.0000        +INF             .          
Kot.2          .         56000.0000        +INF             .          
Kot.3          .         48000.0000        +INF             .          
Mak.1          .        308800.0000        +INF             .          
Mak.2          .        113600.0000        +INF             .          
Mak.3          .        112000.0000        +INF             .          
Kuk.1          .              .            +INF           -0.1500      
Kuk.2          .         32000.0000        +INF             .          
Kuk.3          .         38000.0000        +INF             .          
Kok.1          .        565200.0000        +INF             .          
Kok.2          .        312400.0000        +INF             .          
Kok.3          .        270000.0000        +INF             .          

---- VAR r  1 if we buy n boats of timber i, 0 otherwise

                 LOWER          LEVEL          UPPER         MARGINAL

1  .Mat.1          .              .             1.0000         EPS         
1  .Mat.2          .              .             1.0000         EPS         
1  .Mat.3          .              .             1.0000         EPS         
1  .Kut.1          .              .             1.0000         EPS         
1  .Kut.2          .              .             1.0000         EPS         
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 22:25:36 Page 107
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 416


     VAR r  1 if we buy n boats of timber i, 0 otherwise

                 LOWER          LEVEL          UPPER         MARGINAL

1  .Kut.3          .              .             1.0000         EPS         
1  .Kot.1          .              .             1.0000         EPS         
1  .Kot.2          .              .             1.0000         EPS         
1  .Kot.3          .              .             1.0000         EPS         
1  .Mak.1          .              .             1.0000         EPS         
1  .Mak.2          .              .             1.0000         EPS         
1  .Mak.3          .              .             1.0000         EPS         
1  .Kuk.1          .             1.0000         1.0000         EPS         
1  .Kuk.2          .              .             1.0000         EPS         
1  .Kuk.3          .              .             1.0000         EPS         
1  .Kok.1          .              .             1.0000         EPS         
1  .Kok.2          .              .             1.0000         EPS         
1  .Kok.3          .              .             1.0000         EPS         
2  .Mat.1          .              .             1.0000      -100.0000      
2  .Mat.2          .              .             1.0000      -100.0000      
2  .Mat.3          .              .             1.0000      -100.0000      
2  .Kut.1          .              .             1.0000       -50.0000      
2  .Kut.2          .              .             1.0000       -50.0000      
2  .Kut.3          .              .             1.0000       -50.0000      
2  .Kot.1          .              .             1.0000      -300.0000      
2  .Kot.2          .              .             1.0000      -300.0000      
2  .Kot.3          .              .             1.0000      -300.0000      
2  .Mak.1          .              .             1.0000       -20.0000      
2  .Mak.2          .              .             1.0000       -20.0000      
2  .Mak.3          .              .             1.0000       -20.0000      
2  .Kuk.1          .              .             1.0000       -30.0000      
2  .Kuk.2          .              .             1.0000       -30.0000      
2  .Kuk.3          .              .             1.0000       -30.0000      
2  .Kok.1          .              .             1.0000       -20.0000      
2  .Kok.2          .              .             1.0000       -20.0000      
2  .Kok.3          .              .             1.0000       -20.0000      
3  .Mat.1          .              .             1.0000      -400.0000      
3  .Mat.2          .              .             1.0000      -400.0000      
3  .Mat.3          .              .             1.0000      -400.0000      
3  .Kut.1          .              .             1.0000      -200.0000      
3  .Kut.2          .              .             1.0000      -200.0000      
3  .Kut.3          .              .             1.0000      -200.0000      
3  .Kot.1          .              .             1.0000     -1200.0000      
3  .Kot.2          .              .             1.0000     -1200.0000      
3  .Kot.3          .              .             1.0000     -1200.0000      
3  .Mak.1          .              .             1.0000       -80.0000      
3  .Mak.2          .              .             1.0000       -80.0000      
3  .Mak.3          .              .             1.0000       -80.0000      
3  .Kuk.1          .              .             1.0000      -120.0000      
3  .Kuk.2          .              .             1.0000      -120.0000      
3  .Kuk.3          .              .             1.0000      -120.0000      
3  .Kok.1          .              .             1.0000       -80.0000      
3  .Kok.2          .              .             1.0000       -80.0000      
3  .Kok.3          .              .             1.0000       -80.0000      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 22:25:36 Page 108
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 416


     VAR r  1 if we buy n boats of timber i, 0 otherwise

                 LOWER          LEVEL          UPPER         MARGINAL

4  .Mat.1          .              .             1.0000      -900.0000      
4  .Mat.2          .              .             1.0000      -900.0000      
4  .Mat.3          .              .             1.0000      -900.0000      
4  .Kut.1          .              .             1.0000      -450.0000      
4  .Kut.2          .              .             1.0000      -450.0000      
4  .Kut.3          .              .             1.0000      -450.0000      
4  .Kot.1          .              .             1.0000     -2700.0000      
4  .Kot.2          .              .             1.0000     -2700.0000      
4  .Kot.3          .              .             1.0000     -2700.0000      
4  .Mak.1          .              .             1.0000      -180.0000      
4  .Mak.2          .              .             1.0000      -180.0000      
4  .Mak.3          .              .             1.0000      -180.0000      
4  .Kuk.1          .              .             1.0000      -270.0000      
4  .Kuk.2          .              .             1.0000      -270.0000      
4  .Kuk.3          .              .             1.0000      -270.0000      
4  .Kok.1          .              .             1.0000      -180.0000      
4  .Kok.2          .              .             1.0000      -180.0000      
4  .Kok.3          .              .             1.0000      -180.0000      
5  .Mat.1          .              .             1.0000     -1600.0000      
5  .Mat.2          .              .             1.0000     -1600.0000      
5  .Mat.3          .              .             1.0000     -1600.0000      
5  .Kut.1          .              .             1.0000      -800.0000      
5  .Kut.2          .              .             1.0000      -800.0000      
5  .Kut.3          .              .             1.0000      -800.0000      
5  .Kot.1          .              .             1.0000     -4800.0000      
5  .Kot.2          .              .             1.0000     -4800.0000      
5  .Kot.3          .              .             1.0000     -4800.0000      
5  .Mak.1          .              .             1.0000      -320.0000      
5  .Mak.2          .              .             1.0000      -320.0000      
5  .Mak.3          .              .             1.0000      -320.0000      
5  .Kuk.1          .              .             1.0000      -480.0000      
5  .Kuk.2          .             1.0000         1.0000      -480.0000      
5  .Kuk.3          .             1.0000         1.0000      -480.0000      
5  .Kok.1          .              .             1.0000      -320.0000      
5  .Kok.2          .              .             1.0000      -320.0000      
5  .Kok.3          .              .             1.0000      -320.0000      
6  .Mat.1          .              .             1.0000     -2500.0000      
6  .Mat.2          .              .             1.0000     -2500.0000      
6  .Mat.3          .              .             1.0000     -2500.0000      
6  .Kut.1          .              .             1.0000     -1250.0000      
6  .Kut.2          .              .             1.0000     -1250.0000      
6  .Kut.3          .              .             1.0000     -1250.0000      
6  .Kot.1          .              .             1.0000     -7500.0000      
6  .Kot.2          .              .             1.0000     -7500.0000      
6  .Kot.3          .             1.0000         1.0000     -7500.0000      
6  .Mak.1          .              .             1.0000      -500.0000      
6  .Mak.2          .              .             1.0000      -500.0000      
6  .Mak.3          .              .             1.0000      -500.0000      
6  .Kuk.1          .              .             1.0000      -750.0000      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 22:25:36 Page 109
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 416


     VAR r  1 if we buy n boats of timber i, 0 otherwise

                 LOWER          LEVEL          UPPER         MARGINAL

6  .Kuk.2          .              .             1.0000      -750.0000      
6  .Kuk.3          .              .             1.0000      -750.0000      
6  .Kok.1          .              .             1.0000      -500.0000      
6  .Kok.2          .              .             1.0000      -500.0000      
6  .Kok.3          .              .             1.0000      -500.0000      
7  .Mat.1          .              .             1.0000     -3600.0000      
7  .Mat.2          .              .             1.0000     -3600.0000      
7  .Mat.3          .              .             1.0000     -3600.0000      
7  .Kut.1          .              .             1.0000     -1800.0000      
7  .Kut.2          .              .             1.0000     -1800.0000      
7  .Kut.3          .              .             1.0000     -1800.0000      
7  .Kot.1          .              .             1.0000    -10800.0000      
7  .Kot.2          .             1.0000         1.0000    -10800.0000      
7  .Kot.3          .              .             1.0000    -10800.0000      
7  .Mak.1          .              .             1.0000      -720.0000      
7  .Mak.2          .              .             1.0000      -720.0000      
7  .Mak.3          .              .             1.0000      -720.0000      
7  .Kuk.1          .              .             1.0000     -1080.0000      
7  .Kuk.2          .              .             1.0000     -1080.0000      
7  .Kuk.3          .              .             1.0000     -1080.0000      
7  .Kok.1          .              .             1.0000      -720.0000      
7  .Kok.2          .              .             1.0000      -720.0000      
7  .Kok.3          .              .             1.0000      -720.0000      
8  .Mat.1          .              .             1.0000     -4900.0000      
8  .Mat.2          .              .             1.0000     -4900.0000      
8  .Mat.3          .              .             1.0000     -4900.0000      
8  .Kut.1          .              .             1.0000     -2450.0000      
8  .Kut.2          .              .             1.0000     -2450.0000      
8  .Kut.3          .              .             1.0000     -2450.0000      
8  .Kot.1          .              .             1.0000    -14700.0000      
8  .Kot.2          .              .             1.0000    -14700.0000      
8  .Kot.3          .              .             1.0000    -14700.0000      
8  .Mak.1          .              .             1.0000      -980.0000      
8  .Mak.2          .              .             1.0000      -980.0000      
8  .Mak.3          .              .             1.0000      -980.0000      
8  .Kuk.1          .              .             1.0000     -1470.0000      
8  .Kuk.2          .              .             1.0000     -1470.0000      
8  .Kuk.3          .              .             1.0000     -1470.0000      
8  .Kok.1          .              .             1.0000      -980.0000      
8  .Kok.2          .              .             1.0000      -980.0000      
8  .Kok.3          .              .             1.0000      -980.0000      
9  .Mat.1          .              .             1.0000     -6400.0000      
9  .Mat.2          .              .             1.0000     -6400.0000      
9  .Mat.3          .             1.0000         1.0000     -6400.0000      
9  .Kut.1          .              .             1.0000     -3200.0000      
9  .Kut.2          .              .             1.0000     -3200.0000      
9  .Kut.3          .              .             1.0000     -3200.0000      
9  .Kot.1          .              .             1.0000    -19200.0000      
9  .Kot.2          .              .             1.0000    -19200.0000      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 22:25:36 Page 110
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 416


     VAR r  1 if we buy n boats of timber i, 0 otherwise

                 LOWER          LEVEL          UPPER         MARGINAL

9  .Kot.3          .              .             1.0000    -19200.0000      
9  .Mak.1          .              .             1.0000     -1280.0000      
9  .Mak.2          .              .             1.0000     -1280.0000      
9  .Mak.3          .              .             1.0000     -1280.0000      
9  .Kuk.1          .              .             1.0000     -1920.0000      
9  .Kuk.2          .              .             1.0000     -1920.0000      
9  .Kuk.3          .              .             1.0000     -1920.0000      
9  .Kok.1          .              .             1.0000     -1280.0000      
9  .Kok.2          .              .             1.0000     -1280.0000      
9  .Kok.3          .              .             1.0000     -1280.0000      
10 .Mat.1          .              .             1.0000     -8100.0000      
10 .Mat.2          .              .             1.0000     -8100.0000      
10 .Mat.3          .              .             1.0000     -8100.0000      
10 .Kut.1          .              .             1.0000     -4050.0000      
10 .Kut.2          .              .             1.0000     -4050.0000      
10 .Kut.3          .              .             1.0000     -4050.0000      
10 .Kot.1          .             1.0000         1.0000    -24300.0000      
10 .Kot.2          .              .             1.0000    -24300.0000      
10 .Kot.3          .              .             1.0000    -24300.0000      
10 .Mak.1          .              .             1.0000     -1620.0000      
10 .Mak.2          .              .             1.0000     -1620.0000      
10 .Mak.3          .              .             1.0000     -1620.0000      
10 .Kuk.1          .              .             1.0000     -2430.0000      
10 .Kuk.2          .              .             1.0000     -2430.0000      
10 .Kuk.3          .              .             1.0000     -2430.0000      
10 .Kok.1          .              .             1.0000     -1620.0000      
10 .Kok.2          .              .             1.0000     -1620.0000      
10 .Kok.3          .              .             1.0000     -1620.0000      
11 .Mat.1          .              .             1.0000    -10000.0000      
11 .Mat.2          .             1.0000         1.0000    -10000.0000      
11 .Mat.3          .              .             1.0000    -10000.0000      
11 .Kut.1          .              .             1.0000     -5000.0000      
11 .Kut.2          .              .             1.0000     -5000.0000      
11 .Kut.3          .              .             1.0000     -5000.0000      
11 .Kot.1          .              .             1.0000    -30000.0000      
11 .Kot.2          .              .             1.0000    -30000.0000      
11 .Kot.3          .              .             1.0000    -30000.0000      
11 .Mak.1          .              .             1.0000     -2000.0000      
11 .Mak.2          .              .             1.0000     -2000.0000      
11 .Mak.3          .              .             1.0000     -2000.0000      
11 .Kuk.1          .              .             1.0000     -3000.0000      
11 .Kuk.2          .              .             1.0000     -3000.0000      
11 .Kuk.3          .              .             1.0000     -3000.0000      
11 .Kok.1          .              .             1.0000     -2000.0000      
11 .Kok.2          .              .             1.0000     -2000.0000      
11 .Kok.3          .              .             1.0000     -2000.0000      
12 .Mat.1          .              .             1.0000    -12100.0000      
12 .Mat.2          .              .             1.0000    -12100.0000      
12 .Mat.3          .              .             1.0000    -12100.0000      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 22:25:36 Page 111
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 416


     VAR r  1 if we buy n boats of timber i, 0 otherwise

                 LOWER          LEVEL          UPPER         MARGINAL

12 .Kut.1          .              .             1.0000     -6050.0000      
12 .Kut.2          .              .             1.0000     -6050.0000      
12 .Kut.3          .              .             1.0000     -6050.0000      
12 .Kot.1          .              .             1.0000    -36300.0000      
12 .Kot.2          .              .             1.0000    -36300.0000      
12 .Kot.3          .              .             1.0000    -36300.0000      
12 .Mak.1          .              .             1.0000     -2420.0000      
12 .Mak.2          .              .             1.0000     -2420.0000      
12 .Mak.3          .              .             1.0000     -2420.0000      
12 .Kuk.1          .              .             1.0000     -3630.0000      
12 .Kuk.2          .              .             1.0000     -3630.0000      
12 .Kuk.3          .              .             1.0000     -3630.0000      
12 .Kok.1          .              .             1.0000     -2420.0000      
12 .Kok.2          .              .             1.0000     -2420.0000      
12 .Kok.3          .              .             1.0000     -2420.0000      
13 .Mat.1          .              .             1.0000    -14400.0000      
13 .Mat.2          .              .             1.0000    -14400.0000      
13 .Mat.3          .              .             1.0000    -14400.0000      
13 .Kut.1          .              .             1.0000     -7200.0000      
13 .Kut.2          .              .             1.0000     -7200.0000      
13 .Kut.3          .              .             1.0000     -7200.0000      
13 .Kot.1          .              .             1.0000    -43200.0000      
13 .Kot.2          .              .             1.0000    -43200.0000      
13 .Kot.3          .              .             1.0000    -43200.0000      
13 .Mak.1          .              .             1.0000     -2880.0000      
13 .Mak.2          .             1.0000         1.0000     -2880.0000      
13 .Mak.3          .             1.0000         1.0000     -2880.0000      
13 .Kuk.1          .              .             1.0000     -4320.0000      
13 .Kuk.2          .              .             1.0000     -4320.0000      
13 .Kuk.3          .              .             1.0000     -4320.0000      
13 .Kok.1          .              .             1.0000     -2880.0000      
13 .Kok.2          .              .             1.0000     -2880.0000      
13 .Kok.3          .              .             1.0000     -2880.0000      
14 .Mat.1          .              .             1.0000    -16900.0000      
14 .Mat.2          .              .             1.0000    -16900.0000      
14 .Mat.3          .              .             1.0000    -16900.0000      
14 .Kut.1          .              .             1.0000     -8450.0000      
14 .Kut.2          .              .             1.0000     -8450.0000      
14 .Kut.3          .              .             1.0000     -8450.0000      
14 .Kot.1          .              .             1.0000    -50700.0000      
14 .Kot.2          .              .             1.0000    -50700.0000      
14 .Kot.3          .              .             1.0000    -50700.0000      
14 .Mak.1          .              .             1.0000     -3380.0000      
14 .Mak.2          .              .             1.0000     -3380.0000      
14 .Mak.3          .              .             1.0000     -3380.0000      
14 .Kuk.1          .              .             1.0000     -5070.0000      
14 .Kuk.2          .              .             1.0000     -5070.0000      
14 .Kuk.3          .              .             1.0000     -5070.0000      
14 .Kok.1          .              .             1.0000     -3380.0000      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 22:25:36 Page 112
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 416


     VAR r  1 if we buy n boats of timber i, 0 otherwise

                 LOWER          LEVEL          UPPER         MARGINAL

14 .Kok.2          .              .             1.0000     -3380.0000      
14 .Kok.3          .              .             1.0000     -3380.0000      
15 .Mat.1          .             1.0000         1.0000    -19600.0000      
15 .Mat.2          .              .             1.0000    -19600.0000      
15 .Mat.3          .              .             1.0000    -19600.0000      
15 .Kut.1          .             1.0000         1.0000     -9800.0000      
15 .Kut.2          .              .             1.0000     -9800.0000      
15 .Kut.3          .              .             1.0000     -9800.0000      
15 .Kot.1          .              .             1.0000    -58800.0000      
15 .Kot.2          .              .             1.0000    -58800.0000      
15 .Kot.3          .              .             1.0000    -58800.0000      
15 .Mak.1          .              .             1.0000     -3920.0000      
15 .Mak.2          .              .             1.0000     -3920.0000      
15 .Mak.3          .              .             1.0000     -3920.0000      
15 .Kuk.1          .              .             1.0000     -5880.0000      
15 .Kuk.2          .              .             1.0000     -5880.0000      
15 .Kuk.3          .              .             1.0000     -5880.0000      
15 .Kok.1          .              .             1.0000     -3920.0000      
15 .Kok.2          .              .             1.0000     -3920.0000      
15 .Kok.3          .              .             1.0000     -3920.0000      
16 .Mat.1          .              .             1.0000    -22500.0000      
16 .Mat.2          .              .             1.0000    -22500.0000      
16 .Mat.3          .              .             1.0000    -22500.0000      
16 .Kut.1          .              .             1.0000    -11250.0000      
16 .Kut.2          .              .             1.0000    -11250.0000      
16 .Kut.3          .              .             1.0000    -11250.0000      
16 .Kot.1          .              .             1.0000    -67500.0000      
16 .Kot.2          .              .             1.0000    -67500.0000      
16 .Kot.3          .              .             1.0000    -67500.0000      
16 .Mak.1          .              .             1.0000     -4500.0000      
16 .Mak.2          .              .             1.0000     -4500.0000      
16 .Mak.3          .              .             1.0000     -4500.0000      
16 .Kuk.1          .              .             1.0000     -6750.0000      
16 .Kuk.2          .              .             1.0000     -6750.0000      
16 .Kuk.3          .              .             1.0000     -6750.0000      
16 .Kok.1          .              .             1.0000     -4500.0000      
16 .Kok.2          .              .             1.0000     -4500.0000      
16 .Kok.3          .              .             1.0000     -4500.0000      
17 .Mat.1          .              .             1.0000    -25600.0000      
17 .Mat.2          .              .             1.0000    -25600.0000      
17 .Mat.3          .              .             1.0000    -25600.0000      
17 .Kut.1          .              .             1.0000    -12800.0000      
17 .Kut.2          .              .             1.0000    -12800.0000      
17 .Kut.3          .              .             1.0000    -12800.0000      
17 .Kot.1          .              .             1.0000    -76800.0000      
17 .Kot.2          .              .             1.0000    -76800.0000      
17 .Kot.3          .              .             1.0000    -76800.0000      
17 .Mak.1          .              .             1.0000     -5120.0000      
17 .Mak.2          .              .             1.0000     -5120.0000      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 22:25:36 Page 113
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 416


     VAR r  1 if we buy n boats of timber i, 0 otherwise

                 LOWER          LEVEL          UPPER         MARGINAL

17 .Mak.3          .              .             1.0000     -5120.0000      
17 .Kuk.1          .              .             1.0000     -7680.0000      
17 .Kuk.2          .              .             1.0000     -7680.0000      
17 .Kuk.3          .              .             1.0000     -7680.0000      
17 .Kok.1          .              .             1.0000     -5120.0000      
17 .Kok.2          .              .             1.0000     -5120.0000      
17 .Kok.3          .              .             1.0000     -5120.0000      
18 .Mat.1          .              .             1.0000    -28900.0000      
18 .Mat.2          .              .             1.0000    -28900.0000      
18 .Mat.3          .              .             1.0000    -28900.0000      
18 .Kut.1          .              .             1.0000    -14450.0000      
18 .Kut.2          .              .             1.0000    -14450.0000      
18 .Kut.3          .              .             1.0000    -14450.0000      
18 .Kot.1          .              .             1.0000    -86700.0000      
18 .Kot.2          .              .             1.0000    -86700.0000      
18 .Kot.3          .              .             1.0000    -86700.0000      
18 .Mak.1          .              .             1.0000     -5780.0000      
18 .Mak.2          .              .             1.0000     -5780.0000      
18 .Mak.3          .              .             1.0000     -5780.0000      
18 .Kuk.1          .              .             1.0000     -8670.0000      
18 .Kuk.2          .              .             1.0000     -8670.0000      
18 .Kuk.3          .              .             1.0000     -8670.0000      
18 .Kok.1          .              .             1.0000     -5780.0000      
18 .Kok.2          .              .             1.0000     -5780.0000      
18 .Kok.3          .              .             1.0000     -5780.0000      
19 .Mat.1          .              .             1.0000    -32400.0000      
19 .Mat.2          .              .             1.0000    -32400.0000      
19 .Mat.3          .              .             1.0000    -32400.0000      
19 .Kut.1          .              .             1.0000    -16200.0000      
19 .Kut.2          .              .             1.0000    -16200.0000      
19 .Kut.3          .              .             1.0000    -16200.0000      
19 .Kot.1          .              .             1.0000    -97200.0000      
19 .Kot.2          .              .             1.0000    -97200.0000      
19 .Kot.3          .              .             1.0000    -97200.0000      
19 .Mak.1          .              .             1.0000     -6480.0000      
19 .Mak.2          .              .             1.0000     -6480.0000      
19 .Mak.3          .              .             1.0000     -6480.0000      
19 .Kuk.1          .              .             1.0000     -9720.0000      
19 .Kuk.2          .              .             1.0000     -9720.0000      
19 .Kuk.3          .              .             1.0000     -9720.0000      
19 .Kok.1          .              .             1.0000     -6480.0000      
19 .Kok.2          .              .             1.0000     -6480.0000      
19 .Kok.3          .              .             1.0000     -6480.0000      
20 .Mat.1          .              .             1.0000    -36100.0000      
20 .Mat.2          .              .             1.0000    -36100.0000      
20 .Mat.3          .              .             1.0000    -36100.0000      
20 .Kut.1          .              .             1.0000    -18050.0000      
20 .Kut.2          .              .             1.0000    -18050.0000      
20 .Kut.3          .              .             1.0000    -18050.0000      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 22:25:36 Page 114
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 416


     VAR r  1 if we buy n boats of timber i, 0 otherwise

                 LOWER          LEVEL          UPPER         MARGINAL

20 .Kot.1          .              .             1.0000   -108300.0000      
20 .Kot.2          .              .             1.0000   -108300.0000      
20 .Kot.3          .              .             1.0000   -108300.0000      
20 .Mak.1          .              .             1.0000     -7220.0000      
20 .Mak.2          .              .             1.0000     -7220.0000      
20 .Mak.3          .              .             1.0000     -7220.0000      
20 .Kuk.1          .              .             1.0000    -10830.0000      
20 .Kuk.2          .              .             1.0000    -10830.0000      
20 .Kuk.3          .              .             1.0000    -10830.0000      
20 .Kok.1          .              .             1.0000     -7220.0000      
20 .Kok.2          .              .             1.0000     -7220.0000      
20 .Kok.3          .              .             1.0000     -7220.0000      
21 .Mat.1          .              .             1.0000    -40000.0000      
21 .Mat.2          .              .             1.0000    -40000.0000      
21 .Mat.3          .              .             1.0000    -40000.0000      
21 .Kut.1          .              .             1.0000    -20000.0000      
21 .Kut.2          .              .             1.0000    -20000.0000      
21 .Kut.3          .             1.0000         1.0000    -20000.0000      
21 .Kot.1          .              .             1.0000   -120000.0000      
21 .Kot.2          .              .             1.0000   -120000.0000      
21 .Kot.3          .              .             1.0000   -120000.0000      
21 .Mak.1          .              .             1.0000     -8000.0000      
21 .Mak.2          .              .             1.0000     -8000.0000      
21 .Mak.3          .              .             1.0000     -8000.0000      
21 .Kuk.1          .              .             1.0000    -12000.0000      
21 .Kuk.2          .              .             1.0000    -12000.0000      
21 .Kuk.3          .              .             1.0000    -12000.0000      
21 .Kok.1          .              .             1.0000     -8000.0000      
21 .Kok.2          .              .             1.0000     -8000.0000      
21 .Kok.3          .              .             1.0000     -8000.0000      
22 .Mat.1          .              .             1.0000    -44100.0000      
22 .Mat.2          .              .             1.0000    -44100.0000      
22 .Mat.3          .              .             1.0000    -44100.0000      
22 .Kut.1          .              .             1.0000    -22050.0000      
22 .Kut.2          .              .             1.0000    -22050.0000      
22 .Kut.3          .              .             1.0000    -22050.0000      
22 .Kot.1          .              .             1.0000   -132300.0000      
22 .Kot.2          .              .             1.0000   -132300.0000      
22 .Kot.3          .              .             1.0000   -132300.0000      
22 .Mak.1          .              .             1.0000     -8820.0000      
22 .Mak.2          .              .             1.0000     -8820.0000      
22 .Mak.3          .              .             1.0000     -8820.0000      
22 .Kuk.1          .              .             1.0000    -13230.0000      
22 .Kuk.2          .              .             1.0000    -13230.0000      
22 .Kuk.3          .              .             1.0000    -13230.0000      
22 .Kok.1          .              .             1.0000     -8820.0000      
22 .Kok.2          .              .             1.0000     -8820.0000      
22 .Kok.3          .              .             1.0000     -8820.0000      
23 .Mat.1          .              .             1.0000    -48400.0000      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 22:25:36 Page 115
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 416


     VAR r  1 if we buy n boats of timber i, 0 otherwise

                 LOWER          LEVEL          UPPER         MARGINAL

23 .Mat.2          .              .             1.0000    -48400.0000      
23 .Mat.3          .              .             1.0000    -48400.0000      
23 .Kut.1          .              .             1.0000    -24200.0000      
23 .Kut.2          .              .             1.0000    -24200.0000      
23 .Kut.3          .              .             1.0000    -24200.0000      
23 .Kot.1          .              .             1.0000   -145200.0000      
23 .Kot.2          .              .             1.0000   -145200.0000      
23 .Kot.3          .              .             1.0000   -145200.0000      
23 .Mak.1          .              .             1.0000     -9680.0000      
23 .Mak.2          .              .             1.0000     -9680.0000      
23 .Mak.3          .              .             1.0000     -9680.0000      
23 .Kuk.1          .              .             1.0000    -14520.0000      
23 .Kuk.2          .              .             1.0000    -14520.0000      
23 .Kuk.3          .              .             1.0000    -14520.0000      
23 .Kok.1          .              .             1.0000     -9680.0000      
23 .Kok.2          .              .             1.0000     -9680.0000      
23 .Kok.3          .              .             1.0000     -9680.0000      
24 .Mat.1          .              .             1.0000    -52900.0000      
24 .Mat.2          .              .             1.0000    -52900.0000      
24 .Mat.3          .              .             1.0000    -52900.0000      
24 .Kut.1          .              .             1.0000    -26450.0000      
24 .Kut.2          .             1.0000         1.0000    -26450.0000      
24 .Kut.3          .              .             1.0000    -26450.0000      
24 .Kot.1          .              .             1.0000   -158700.0000      
24 .Kot.2          .              .             1.0000   -158700.0000      
24 .Kot.3          .              .             1.0000   -158700.0000      
24 .Mak.1          .              .             1.0000    -10580.0000      
24 .Mak.2          .              .             1.0000    -10580.0000      
24 .Mak.3          .              .             1.0000    -10580.0000      
24 .Kuk.1          .              .             1.0000    -15870.0000      
24 .Kuk.2          .              .             1.0000    -15870.0000      
24 .Kuk.3          .              .             1.0000    -15870.0000      
24 .Kok.1          .              .             1.0000    -10580.0000      
24 .Kok.2          .              .             1.0000    -10580.0000      
24 .Kok.3          .              .             1.0000    -10580.0000      
25 .Mat.1          .              .             1.0000    -57600.0000      
25 .Mat.2          .              .             1.0000    -57600.0000      
25 .Mat.3          .              .             1.0000    -57600.0000      
25 .Kut.1          .              .             1.0000    -28800.0000      
25 .Kut.2          .              .             1.0000    -28800.0000      
25 .Kut.3          .              .             1.0000    -28800.0000      
25 .Kot.1          .              .             1.0000   -172800.0000      
25 .Kot.2          .              .             1.0000   -172800.0000      
25 .Kot.3          .              .             1.0000   -172800.0000      
25 .Mak.1          .              .             1.0000    -11520.0000      
25 .Mak.2          .              .             1.0000    -11520.0000      
25 .Mak.3          .              .             1.0000    -11520.0000      
25 .Kuk.1          .              .             1.0000    -17280.0000      
25 .Kuk.2          .              .             1.0000    -17280.0000      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 22:25:36 Page 116
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 416


     VAR r  1 if we buy n boats of timber i, 0 otherwise

                 LOWER          LEVEL          UPPER         MARGINAL

25 .Kuk.3          .              .             1.0000    -17280.0000      
25 .Kok.1          .              .             1.0000    -11520.0000      
25 .Kok.2          .              .             1.0000    -11520.0000      
25 .Kok.3          .              .             1.0000    -11520.0000      
26 .Mat.1          .              .             1.0000    -62500.0000      
26 .Mat.2          .              .             1.0000    -62500.0000      
26 .Mat.3          .              .             1.0000    -62500.0000      
26 .Kut.1          .              .             1.0000    -31250.0000      
26 .Kut.2          .              .             1.0000    -31250.0000      
26 .Kut.3          .              .             1.0000    -31250.0000      
26 .Kot.1          .              .             1.0000   -187500.0000      
26 .Kot.2          .              .             1.0000   -187500.0000      
26 .Kot.3          .              .             1.0000   -187500.0000      
26 .Mak.1          .              .             1.0000    -12500.0000      
26 .Mak.2          .              .             1.0000    -12500.0000      
26 .Mak.3          .              .             1.0000    -12500.0000      
26 .Kuk.1          .              .             1.0000    -18750.0000      
26 .Kuk.2          .              .             1.0000    -18750.0000      
26 .Kuk.3          .              .             1.0000    -18750.0000      
26 .Kok.1          .              .             1.0000    -12500.0000      
26 .Kok.2          .              .             1.0000    -12500.0000      
26 .Kok.3          .              .             1.0000    -12500.0000      
27 .Mat.1          .              .             1.0000    -67600.0000      
27 .Mat.2          .              .             1.0000    -67600.0000      
27 .Mat.3          .              .             1.0000    -67600.0000      
27 .Kut.1          .              .             1.0000    -33800.0000      
27 .Kut.2          .              .             1.0000    -33800.0000      
27 .Kut.3          .              .             1.0000    -33800.0000      
27 .Kot.1          .              .             1.0000   -202800.0000      
27 .Kot.2          .              .             1.0000   -202800.0000      
27 .Kot.3          .              .             1.0000   -202800.0000      
27 .Mak.1          .              .             1.0000    -13520.0000      
27 .Mak.2          .              .             1.0000    -13520.0000      
27 .Mak.3          .              .             1.0000    -13520.0000      
27 .Kuk.1          .              .             1.0000    -20280.0000      
27 .Kuk.2          .              .             1.0000    -20280.0000      
27 .Kuk.3          .              .             1.0000    -20280.0000      
27 .Kok.1          .              .             1.0000    -13520.0000      
27 .Kok.2          .              .             1.0000    -13520.0000      
27 .Kok.3          .              .             1.0000    -13520.0000      
28 .Mat.1          .              .             1.0000    -72900.0000      
28 .Mat.2          .              .             1.0000    -72900.0000      
28 .Mat.3          .              .             1.0000    -72900.0000      
28 .Kut.1          .              .             1.0000    -36450.0000      
28 .Kut.2          .              .             1.0000    -36450.0000      
28 .Kut.3          .              .             1.0000    -36450.0000      
28 .Kot.1          .              .             1.0000   -218700.0000      
28 .Kot.2          .              .             1.0000   -218700.0000      
28 .Kot.3          .              .             1.0000   -218700.0000      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 22:25:36 Page 117
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 416


     VAR r  1 if we buy n boats of timber i, 0 otherwise

                 LOWER          LEVEL          UPPER         MARGINAL

28 .Mak.1          .              .             1.0000    -14580.0000      
28 .Mak.2          .              .             1.0000    -14580.0000      
28 .Mak.3          .              .             1.0000    -14580.0000      
28 .Kuk.1          .              .             1.0000    -21870.0000      
28 .Kuk.2          .              .             1.0000    -21870.0000      
28 .Kuk.3          .              .             1.0000    -21870.0000      
28 .Kok.1          .              .             1.0000    -14580.0000      
28 .Kok.2          .              .             1.0000    -14580.0000      
28 .Kok.3          .             1.0000         1.0000    -14580.0000      
29 .Mat.1          .              .             1.0000    -78400.0000      
29 .Mat.2          .              .             1.0000    -78400.0000      
29 .Mat.3          .              .             1.0000    -78400.0000      
29 .Kut.1          .              .             1.0000    -39200.0000      
29 .Kut.2          .              .             1.0000    -39200.0000      
29 .Kut.3          .              .             1.0000    -39200.0000      
29 .Kot.1          .              .             1.0000   -235200.0000      
29 .Kot.2          .              .             1.0000   -235200.0000      
29 .Kot.3          .              .             1.0000   -235200.0000      
29 .Mak.1          .              .             1.0000    -15680.0000      
29 .Mak.2          .              .             1.0000    -15680.0000      
29 .Mak.3          .              .             1.0000    -15680.0000      
29 .Kuk.1          .              .             1.0000    -23520.0000      
29 .Kuk.2          .              .             1.0000    -23520.0000      
29 .Kuk.3          .              .             1.0000    -23520.0000      
29 .Kok.1          .              .             1.0000    -15680.0000      
29 .Kok.2          .              .             1.0000    -15680.0000      
29 .Kok.3          .              .             1.0000    -15680.0000      
30 .Mat.1          .              .             1.0000    -84100.0000      
30 .Mat.2          .              .             1.0000    -84100.0000      
30 .Mat.3          .              .             1.0000    -84100.0000      
30 .Kut.1          .              .             1.0000    -42050.0000      
30 .Kut.2          .              .             1.0000    -42050.0000      
30 .Kut.3          .              .             1.0000    -42050.0000      
30 .Kot.1          .              .             1.0000   -252300.0000      
30 .Kot.2          .              .             1.0000   -252300.0000      
30 .Kot.3          .              .             1.0000   -252300.0000      
30 .Mak.1          .              .             1.0000    -16820.0000      
30 .Mak.2          .              .             1.0000    -16820.0000      
30 .Mak.3          .              .             1.0000    -16820.0000      
30 .Kuk.1          .              .             1.0000    -25230.0000      
30 .Kuk.2          .              .             1.0000    -25230.0000      
30 .Kuk.3          .              .             1.0000    -25230.0000      
30 .Kok.1          .              .             1.0000    -16820.0000      
30 .Kok.2          .              .             1.0000    -16820.0000      
30 .Kok.3          .              .             1.0000    -16820.0000      
31 .Mat.1          .              .             1.0000    -90000.0000      
31 .Mat.2          .              .             1.0000    -90000.0000      
31 .Mat.3          .              .             1.0000    -90000.0000      
31 .Kut.1          .              .             1.0000    -45000.0000      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 22:25:36 Page 118
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 416


     VAR r  1 if we buy n boats of timber i, 0 otherwise

                 LOWER          LEVEL          UPPER         MARGINAL

31 .Kut.2          .              .             1.0000    -45000.0000      
31 .Kut.3          .              .             1.0000    -45000.0000      
31 .Kot.1          .              .             1.0000   -270000.0000      
31 .Kot.2          .              .             1.0000   -270000.0000      
31 .Kot.3          .              .             1.0000   -270000.0000      
31 .Mak.1          .              .             1.0000    -18000.0000      
31 .Mak.2          .              .             1.0000    -18000.0000      
31 .Mak.3          .              .             1.0000    -18000.0000      
31 .Kuk.1          .              .             1.0000    -27000.0000      
31 .Kuk.2          .              .             1.0000    -27000.0000      
31 .Kuk.3          .              .             1.0000    -27000.0000      
31 .Kok.1          .              .             1.0000    -18000.0000      
31 .Kok.2          .              .             1.0000    -18000.0000      
31 .Kok.3          .              .             1.0000    -18000.0000      
32 .Mat.1          .              .             1.0000    -96100.0000      
32 .Mat.2          .              .             1.0000    -96100.0000      
32 .Mat.3          .              .             1.0000    -96100.0000      
32 .Kut.1          .              .             1.0000    -48050.0000      
32 .Kut.2          .              .             1.0000    -48050.0000      
32 .Kut.3          .              .             1.0000    -48050.0000      
32 .Kot.1          .              .             1.0000   -288300.0000      
32 .Kot.2          .              .             1.0000   -288300.0000      
32 .Kot.3          .              .             1.0000   -288300.0000      
32 .Mak.1          .             1.0000         1.0000    -19220.0000      
32 .Mak.2          .              .             1.0000    -19220.0000      
32 .Mak.3          .              .             1.0000    -19220.0000      
32 .Kuk.1          .              .             1.0000    -28830.0000      
32 .Kuk.2          .              .             1.0000    -28830.0000      
32 .Kuk.3          .              .             1.0000    -28830.0000      
32 .Kok.1          .              .             1.0000    -19220.0000      
32 .Kok.2          .              .             1.0000    -19220.0000      
32 .Kok.3          .              .             1.0000    -19220.0000      
33 .Mat.1          .              .             1.0000   -102400.0000      
33 .Mat.2          .              .             1.0000   -102400.0000      
33 .Mat.3          .              .             1.0000   -102400.0000      
33 .Kut.1          .              .             1.0000    -51200.0000      
33 .Kut.2          .              .             1.0000    -51200.0000      
33 .Kut.3          .              .             1.0000    -51200.0000      
33 .Kot.1          .              .             1.0000   -307200.0000      
33 .Kot.2          .              .             1.0000   -307200.0000      
33 .Kot.3          .              .             1.0000   -307200.0000      
33 .Mak.1          .              .             1.0000    -20480.0000      
33 .Mak.2          .              .             1.0000    -20480.0000      
33 .Mak.3          .              .             1.0000    -20480.0000      
33 .Kuk.1          .              .             1.0000    -30720.0000      
33 .Kuk.2          .              .             1.0000    -30720.0000      
33 .Kuk.3          .              .             1.0000    -30720.0000      
33 .Kok.1          .              .             1.0000    -20480.0000      
33 .Kok.2          .             1.0000         1.0000    -20480.0000      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 22:25:36 Page 119
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 416


     VAR r  1 if we buy n boats of timber i, 0 otherwise

                 LOWER          LEVEL          UPPER         MARGINAL

33 .Kok.3          .              .             1.0000    -20480.0000      
34 .Mat.1          .              .             1.0000   -108900.0000      
34 .Mat.2          .              .             1.0000   -108900.0000      
34 .Mat.3          .              .             1.0000   -108900.0000      
34 .Kut.1          .              .             1.0000    -54450.0000      
34 .Kut.2          .              .             1.0000    -54450.0000      
34 .Kut.3          .              .             1.0000    -54450.0000      
34 .Kot.1          .              .             1.0000   -326700.0000      
34 .Kot.2          .              .             1.0000   -326700.0000      
34 .Kot.3          .              .             1.0000   -326700.0000      
34 .Mak.1          .              .             1.0000    -21780.0000      
34 .Mak.2          .              .             1.0000    -21780.0000      
34 .Mak.3          .              .             1.0000    -21780.0000      
34 .Kuk.1          .              .             1.0000    -32670.0000      
34 .Kuk.2          .              .             1.0000    -32670.0000      
34 .Kuk.3          .              .             1.0000    -32670.0000      
34 .Kok.1          .              .             1.0000    -21780.0000      
34 .Kok.2          .              .             1.0000    -21780.0000      
34 .Kok.3          .              .             1.0000    -21780.0000      
35 .Mat.1          .              .             1.0000   -115600.0000      
35 .Mat.2          .              .             1.0000   -115600.0000      
35 .Mat.3          .              .             1.0000   -115600.0000      
35 .Kut.1          .              .             1.0000    -57800.0000      
35 .Kut.2          .              .             1.0000    -57800.0000      
35 .Kut.3          .              .             1.0000    -57800.0000      
35 .Kot.1          .              .             1.0000   -346800.0000      
35 .Kot.2          .              .             1.0000   -346800.0000      
35 .Kot.3          .              .             1.0000   -346800.0000      
35 .Mak.1          .              .             1.0000    -23120.0000      
35 .Mak.2          .              .             1.0000    -23120.0000      
35 .Mak.3          .              .             1.0000    -23120.0000      
35 .Kuk.1          .              .             1.0000    -34680.0000      
35 .Kuk.2          .              .             1.0000    -34680.0000      
35 .Kuk.3          .              .             1.0000    -34680.0000      
35 .Kok.1          .              .             1.0000    -23120.0000      
35 .Kok.2          .              .             1.0000    -23120.0000      
35 .Kok.3          .              .             1.0000    -23120.0000      
36 .Mat.1          .              .             1.0000   -122500.0000      
36 .Mat.2          .              .             1.0000   -122500.0000      
36 .Mat.3          .              .             1.0000   -122500.0000      
36 .Kut.1          .              .             1.0000    -61250.0000      
36 .Kut.2          .              .             1.0000    -61250.0000      
36 .Kut.3          .              .             1.0000    -61250.0000      
36 .Kot.1          .              .             1.0000   -367500.0000      
36 .Kot.2          .              .             1.0000   -367500.0000      
36 .Kot.3          .              .             1.0000   -367500.0000      
36 .Mak.1          .              .             1.0000    -24500.0000      
36 .Mak.2          .              .             1.0000    -24500.0000      
36 .Mak.3          .              .             1.0000    -24500.0000      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 22:25:36 Page 120
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 416


     VAR r  1 if we buy n boats of timber i, 0 otherwise

                 LOWER          LEVEL          UPPER         MARGINAL

36 .Kuk.1          .              .             1.0000    -36750.0000      
36 .Kuk.2          .              .             1.0000    -36750.0000      
36 .Kuk.3          .              .             1.0000    -36750.0000      
36 .Kok.1          .              .             1.0000    -24500.0000      
36 .Kok.2          .              .             1.0000    -24500.0000      
36 .Kok.3          .              .             1.0000    -24500.0000      
37 .Mat.1          .              .             1.0000   -129600.0000      
37 .Mat.2          .              .             1.0000   -129600.0000      
37 .Mat.3          .              .             1.0000   -129600.0000      
37 .Kut.1          .              .             1.0000    -64800.0000      
37 .Kut.2          .              .             1.0000    -64800.0000      
37 .Kut.3          .              .             1.0000    -64800.0000      
37 .Kot.1          .              .             1.0000   -388800.0000      
37 .Kot.2          .              .             1.0000   -388800.0000      
37 .Kot.3          .              .             1.0000   -388800.0000      
37 .Mak.1          .              .             1.0000    -25920.0000      
37 .Mak.2          .              .             1.0000    -25920.0000      
37 .Mak.3          .              .             1.0000    -25920.0000      
37 .Kuk.1          .              .             1.0000    -38880.0000      
37 .Kuk.2          .              .             1.0000    -38880.0000      
37 .Kuk.3          .              .             1.0000    -38880.0000      
37 .Kok.1          .              .             1.0000    -25920.0000      
37 .Kok.2          .              .             1.0000    -25920.0000      
37 .Kok.3          .              .             1.0000    -25920.0000      
38 .Mat.1          .              .             1.0000   -136900.0000      
38 .Mat.2          .              .             1.0000   -136900.0000      
38 .Mat.3          .              .             1.0000   -136900.0000      
38 .Kut.1          .              .             1.0000    -68450.0000      
38 .Kut.2          .              .             1.0000    -68450.0000      
38 .Kut.3          .              .             1.0000    -68450.0000      
38 .Kot.1          .              .             1.0000   -410700.0000      
38 .Kot.2          .              .             1.0000   -410700.0000      
38 .Kot.3          .              .             1.0000   -410700.0000      
38 .Mak.1          .              .             1.0000    -27380.0000      
38 .Mak.2          .              .             1.0000    -27380.0000      
38 .Mak.3          .              .             1.0000    -27380.0000      
38 .Kuk.1          .              .             1.0000    -41070.0000      
38 .Kuk.2          .              .             1.0000    -41070.0000      
38 .Kuk.3          .              .             1.0000    -41070.0000      
38 .Kok.1          .              .             1.0000    -27380.0000      
38 .Kok.2          .              .             1.0000    -27380.0000      
38 .Kok.3          .              .             1.0000    -27380.0000      
39 .Mat.1          .              .             1.0000   -144400.0000      
39 .Mat.2          .              .             1.0000   -144400.0000      
39 .Mat.3          .              .             1.0000   -144400.0000      
39 .Kut.1          .              .             1.0000    -72200.0000      
39 .Kut.2          .              .             1.0000    -72200.0000      
39 .Kut.3          .              .             1.0000    -72200.0000      
39 .Kot.1          .              .             1.0000   -433200.0000      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 22:25:36 Page 121
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 416


     VAR r  1 if we buy n boats of timber i, 0 otherwise

                 LOWER          LEVEL          UPPER         MARGINAL

39 .Kot.2          .              .             1.0000   -433200.0000      
39 .Kot.3          .              .             1.0000   -433200.0000      
39 .Mak.1          .              .             1.0000    -28880.0000      
39 .Mak.2          .              .             1.0000    -28880.0000      
39 .Mak.3          .              .             1.0000    -28880.0000      
39 .Kuk.1          .              .             1.0000    -43320.0000      
39 .Kuk.2          .              .             1.0000    -43320.0000      
39 .Kuk.3          .              .             1.0000    -43320.0000      
39 .Kok.1          .              .             1.0000    -28880.0000      
39 .Kok.2          .              .             1.0000    -28880.0000      
39 .Kok.3          .              .             1.0000    -28880.0000      
40 .Mat.1          .              .             1.0000   -152100.0000      
40 .Mat.2          .              .             1.0000   -152100.0000      
40 .Mat.3          .              .             1.0000   -152100.0000      
40 .Kut.1          .              .             1.0000    -76050.0000      
40 .Kut.2          .              .             1.0000    -76050.0000      
40 .Kut.3          .              .             1.0000    -76050.0000      
40 .Kot.1          .              .             1.0000   -456300.0000      
40 .Kot.2          .              .             1.0000   -456300.0000      
40 .Kot.3          .              .             1.0000   -456300.0000      
40 .Mak.1          .              .             1.0000    -30420.0000      
40 .Mak.2          .              .             1.0000    -30420.0000      
40 .Mak.3          .              .             1.0000    -30420.0000      
40 .Kuk.1          .              .             1.0000    -45630.0000      
40 .Kuk.2          .              .             1.0000    -45630.0000      
40 .Kuk.3          .              .             1.0000    -45630.0000      
40 .Kok.1          .              .             1.0000    -30420.0000      
40 .Kok.2          .              .             1.0000    -30420.0000      
40 .Kok.3          .              .             1.0000    -30420.0000      
41 .Mat.1          .              .             1.0000   -160000.0000      
41 .Mat.2          .              .             1.0000   -160000.0000      
41 .Mat.3          .              .             1.0000   -160000.0000      
41 .Kut.1          .              .             1.0000    -80000.0000      
41 .Kut.2          .              .             1.0000    -80000.0000      
41 .Kut.3          .              .             1.0000    -80000.0000      
41 .Kot.1          .              .             1.0000   -480000.0000      
41 .Kot.2          .              .             1.0000   -480000.0000      
41 .Kot.3          .              .             1.0000   -480000.0000      
41 .Mak.1          .              .             1.0000    -32000.0000      
41 .Mak.2          .              .             1.0000    -32000.0000      
41 .Mak.3          .              .             1.0000    -32000.0000      
41 .Kuk.1          .              .             1.0000    -48000.0000      
41 .Kuk.2          .              .             1.0000    -48000.0000      
41 .Kuk.3          .              .             1.0000    -48000.0000      
41 .Kok.1          .              .             1.0000    -32000.0000      
41 .Kok.2          .              .             1.0000    -32000.0000      
41 .Kok.3          .              .             1.0000    -32000.0000      
42 .Mat.1          .              .             1.0000   -168100.0000      
42 .Mat.2          .              .             1.0000   -168100.0000      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 22:25:36 Page 122
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 416


     VAR r  1 if we buy n boats of timber i, 0 otherwise

                 LOWER          LEVEL          UPPER         MARGINAL

42 .Mat.3          .              .             1.0000   -168100.0000      
42 .Kut.1          .              .             1.0000    -84050.0000      
42 .Kut.2          .              .             1.0000    -84050.0000      
42 .Kut.3          .              .             1.0000    -84050.0000      
42 .Kot.1          .              .             1.0000   -504300.0000      
42 .Kot.2          .              .             1.0000   -504300.0000      
42 .Kot.3          .              .             1.0000   -504300.0000      
42 .Mak.1          .              .             1.0000    -33620.0000      
42 .Mak.2          .              .             1.0000    -33620.0000      
42 .Mak.3          .              .             1.0000    -33620.0000      
42 .Kuk.1          .              .             1.0000    -50430.0000      
42 .Kuk.2          .              .             1.0000    -50430.0000      
42 .Kuk.3          .              .             1.0000    -50430.0000      
42 .Kok.1          .              .             1.0000    -33620.0000      
42 .Kok.2          .              .             1.0000    -33620.0000      
42 .Kok.3          .              .             1.0000    -33620.0000      
43 .Mat.1          .              .             1.0000   -176400.0000      
43 .Mat.2          .              .             1.0000   -176400.0000      
43 .Mat.3          .              .             1.0000   -176400.0000      
43 .Kut.1          .              .             1.0000    -88200.0000      
43 .Kut.2          .              .             1.0000    -88200.0000      
43 .Kut.3          .              .             1.0000    -88200.0000      
43 .Kot.1          .              .             1.0000   -529200.0000      
43 .Kot.2          .              .             1.0000   -529200.0000      
43 .Kot.3          .              .             1.0000   -529200.0000      
43 .Mak.1          .              .             1.0000    -35280.0000      
43 .Mak.2          .              .             1.0000    -35280.0000      
43 .Mak.3          .              .             1.0000    -35280.0000      
43 .Kuk.1          .              .             1.0000    -52920.0000      
43 .Kuk.2          .              .             1.0000    -52920.0000      
43 .Kuk.3          .              .             1.0000    -52920.0000      
43 .Kok.1          .              .             1.0000    -35280.0000      
43 .Kok.2          .              .             1.0000    -35280.0000      
43 .Kok.3          .              .             1.0000    -35280.0000      
44 .Mat.1          .              .             1.0000   -184900.0000      
44 .Mat.2          .              .             1.0000   -184900.0000      
44 .Mat.3          .              .             1.0000   -184900.0000      
44 .Kut.1          .              .             1.0000    -92450.0000      
44 .Kut.2          .              .             1.0000    -92450.0000      
44 .Kut.3          .              .             1.0000    -92450.0000      
44 .Kot.1          .              .             1.0000   -554700.0000      
44 .Kot.2          .              .             1.0000   -554700.0000      
44 .Kot.3          .              .             1.0000   -554700.0000      
44 .Mak.1          .              .             1.0000    -36980.0000      
44 .Mak.2          .              .             1.0000    -36980.0000      
44 .Mak.3          .              .             1.0000    -36980.0000      
44 .Kuk.1          .              .             1.0000    -55470.0000      
44 .Kuk.2          .              .             1.0000    -55470.0000      
44 .Kuk.3          .              .             1.0000    -55470.0000      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 22:25:36 Page 123
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 416


     VAR r  1 if we buy n boats of timber i, 0 otherwise

                 LOWER          LEVEL          UPPER         MARGINAL

44 .Kok.1          .              .             1.0000    -36980.0000      
44 .Kok.2          .              .             1.0000    -36980.0000      
44 .Kok.3          .              .             1.0000    -36980.0000      
45 .Mat.1          .              .             1.0000   -193600.0000      
45 .Mat.2          .              .             1.0000   -193600.0000      
45 .Mat.3          .              .             1.0000   -193600.0000      
45 .Kut.1          .              .             1.0000    -96800.0000      
45 .Kut.2          .              .             1.0000    -96800.0000      
45 .Kut.3          .              .             1.0000    -96800.0000      
45 .Kot.1          .              .             1.0000   -580800.0000      
45 .Kot.2          .              .             1.0000   -580800.0000      
45 .Kot.3          .              .             1.0000   -580800.0000      
45 .Mak.1          .              .             1.0000    -38720.0000      
45 .Mak.2          .              .             1.0000    -38720.0000      
45 .Mak.3          .              .             1.0000    -38720.0000      
45 .Kuk.1          .              .             1.0000    -58080.0000      
45 .Kuk.2          .              .             1.0000    -58080.0000      
45 .Kuk.3          .              .             1.0000    -58080.0000      
45 .Kok.1          .              .             1.0000    -38720.0000      
45 .Kok.2          .              .             1.0000    -38720.0000      
45 .Kok.3          .              .             1.0000    -38720.0000      
46 .Mat.1          .              .             1.0000   -202500.0000      
46 .Mat.2          .              .             1.0000   -202500.0000      
46 .Mat.3          .              .             1.0000   -202500.0000      
46 .Kut.1          .              .             1.0000   -101250.0000      
46 .Kut.2          .              .             1.0000   -101250.0000      
46 .Kut.3          .              .             1.0000   -101250.0000      
46 .Kot.1          .              .             1.0000   -607500.0000      
46 .Kot.2          .              .             1.0000   -607500.0000      
46 .Kot.3          .              .             1.0000   -607500.0000      
46 .Mak.1          .              .             1.0000    -40500.0000      
46 .Mak.2          .              .             1.0000    -40500.0000      
46 .Mak.3          .              .             1.0000    -40500.0000      
46 .Kuk.1          .              .             1.0000    -60750.0000      
46 .Kuk.2          .              .             1.0000    -60750.0000      
46 .Kuk.3          .              .             1.0000    -60750.0000      
46 .Kok.1          .              .             1.0000    -40500.0000      
46 .Kok.2          .              .             1.0000    -40500.0000      
46 .Kok.3          .              .             1.0000    -40500.0000      
47 .Mat.1          .              .             1.0000   -211600.0000      
47 .Mat.2          .              .             1.0000   -211600.0000      
47 .Mat.3          .              .             1.0000   -211600.0000      
47 .Kut.1          .              .             1.0000   -105800.0000      
47 .Kut.2          .              .             1.0000   -105800.0000      
47 .Kut.3          .              .             1.0000   -105800.0000      
47 .Kot.1          .              .             1.0000   -634800.0000      
47 .Kot.2          .              .             1.0000   -634800.0000      
47 .Kot.3          .              .             1.0000   -634800.0000      
47 .Mak.1          .              .             1.0000    -42320.0000      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 22:25:36 Page 124
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 416


     VAR r  1 if we buy n boats of timber i, 0 otherwise

                 LOWER          LEVEL          UPPER         MARGINAL

47 .Mak.2          .              .             1.0000    -42320.0000      
47 .Mak.3          .              .             1.0000    -42320.0000      
47 .Kuk.1          .              .             1.0000    -63480.0000      
47 .Kuk.2          .              .             1.0000    -63480.0000      
47 .Kuk.3          .              .             1.0000    -63480.0000      
47 .Kok.1          .              .             1.0000    -42320.0000      
47 .Kok.2          .              .             1.0000    -42320.0000      
47 .Kok.3          .              .             1.0000    -42320.0000      
48 .Mat.1          .              .             1.0000   -220900.0000      
48 .Mat.2          .              .             1.0000   -220900.0000      
48 .Mat.3          .              .             1.0000   -220900.0000      
48 .Kut.1          .              .             1.0000   -110450.0000      
48 .Kut.2          .              .             1.0000   -110450.0000      
48 .Kut.3          .              .             1.0000   -110450.0000      
48 .Kot.1          .              .             1.0000   -662700.0000      
48 .Kot.2          .              .             1.0000   -662700.0000      
48 .Kot.3          .              .             1.0000   -662700.0000      
48 .Mak.1          .              .             1.0000    -44180.0000      
48 .Mak.2          .              .             1.0000    -44180.0000      
48 .Mak.3          .              .             1.0000    -44180.0000      
48 .Kuk.1          .              .             1.0000    -66270.0000      
48 .Kuk.2          .              .             1.0000    -66270.0000      
48 .Kuk.3          .              .             1.0000    -66270.0000      
48 .Kok.1          .              .             1.0000    -44180.0000      
48 .Kok.2          .              .             1.0000    -44180.0000      
48 .Kok.3          .              .             1.0000    -44180.0000      
49 .Mat.1          .              .             1.0000   -230400.0000      
49 .Mat.2          .              .             1.0000   -230400.0000      
49 .Mat.3          .              .             1.0000   -230400.0000      
49 .Kut.1          .              .             1.0000   -115200.0000      
49 .Kut.2          .              .             1.0000   -115200.0000      
49 .Kut.3          .              .             1.0000   -115200.0000      
49 .Kot.1          .              .             1.0000   -691200.0000      
49 .Kot.2          .              .             1.0000   -691200.0000      
49 .Kot.3          .              .             1.0000   -691200.0000      
49 .Mak.1          .              .             1.0000    -46080.0000      
49 .Mak.2          .              .             1.0000    -46080.0000      
49 .Mak.3          .              .             1.0000    -46080.0000      
49 .Kuk.1          .              .             1.0000    -69120.0000      
49 .Kuk.2          .              .             1.0000    -69120.0000      
49 .Kuk.3          .              .             1.0000    -69120.0000      
49 .Kok.1          .              .             1.0000    -46080.0000      
49 .Kok.2          .              .             1.0000    -46080.0000      
49 .Kok.3          .              .             1.0000    -46080.0000      
50 .Mat.1          .              .             1.0000   -240100.0000      
50 .Mat.2          .              .             1.0000   -240100.0000      
50 .Mat.3          .              .             1.0000   -240100.0000      
50 .Kut.1          .              .             1.0000   -120050.0000      
50 .Kut.2          .              .             1.0000   -120050.0000      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 22:25:36 Page 125
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 416


     VAR r  1 if we buy n boats of timber i, 0 otherwise

                 LOWER          LEVEL          UPPER         MARGINAL

50 .Kut.3          .              .             1.0000   -120050.0000      
50 .Kot.1          .              .             1.0000   -720300.0000      
50 .Kot.2          .              .             1.0000   -720300.0000      
50 .Kot.3          .              .             1.0000   -720300.0000      
50 .Mak.1          .              .             1.0000    -48020.0000      
50 .Mak.2          .              .             1.0000    -48020.0000      
50 .Mak.3          .              .             1.0000    -48020.0000      
50 .Kuk.1          .              .             1.0000    -72030.0000      
50 .Kuk.2          .              .             1.0000    -72030.0000      
50 .Kuk.3          .              .             1.0000    -72030.0000      
50 .Kok.1          .              .             1.0000    -48020.0000      
50 .Kok.2          .              .             1.0000    -48020.0000      
50 .Kok.3          .              .             1.0000    -48020.0000      
51 .Mat.1          .              .             1.0000   -250000.0000      
51 .Mat.2          .              .             1.0000   -250000.0000      
51 .Mat.3          .              .             1.0000   -250000.0000      
51 .Kut.1          .              .             1.0000   -125000.0000      
51 .Kut.2          .              .             1.0000   -125000.0000      
51 .Kut.3          .              .             1.0000   -125000.0000      
51 .Kot.1          .              .             1.0000   -750000.0000      
51 .Kot.2          .              .             1.0000   -750000.0000      
51 .Kot.3          .              .             1.0000   -750000.0000      
51 .Mak.1          .              .             1.0000    -50000.0000      
51 .Mak.2          .              .             1.0000    -50000.0000      
51 .Mak.3          .              .             1.0000    -50000.0000      
51 .Kuk.1          .              .             1.0000    -75000.0000      
51 .Kuk.2          .              .             1.0000    -75000.0000      
51 .Kuk.3          .              .             1.0000    -75000.0000      
51 .Kok.1          .              .             1.0000    -50000.0000      
51 .Kok.2          .              .             1.0000    -50000.0000      
51 .Kok.3          .              .             1.0000    -50000.0000      
52 .Mat.1          .              .             1.0000   -260100.0000      
52 .Mat.2          .              .             1.0000   -260100.0000      
52 .Mat.3          .              .             1.0000   -260100.0000      
52 .Kut.1          .              .             1.0000   -130050.0000      
52 .Kut.2          .              .             1.0000   -130050.0000      
52 .Kut.3          .              .             1.0000   -130050.0000      
52 .Kot.1          .              .             1.0000   -780300.0000      
52 .Kot.2          .              .             1.0000   -780300.0000      
52 .Kot.3          .              .             1.0000   -780300.0000      
52 .Mak.1          .              .             1.0000    -52020.0000      
52 .Mak.2          .              .             1.0000    -52020.0000      
52 .Mak.3          .              .             1.0000    -52020.0000      
52 .Kuk.1          .              .             1.0000    -78030.0000      
52 .Kuk.2          .              .             1.0000    -78030.0000      
52 .Kuk.3          .              .             1.0000    -78030.0000      
52 .Kok.1          .              .             1.0000    -52020.0000      
52 .Kok.2          .              .             1.0000    -52020.0000      
52 .Kok.3          .              .             1.0000    -52020.0000      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 22:25:36 Page 126
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 416


     VAR r  1 if we buy n boats of timber i, 0 otherwise

                 LOWER          LEVEL          UPPER         MARGINAL

53 .Mat.1          .              .             1.0000   -270400.0000      
53 .Mat.2          .              .             1.0000   -270400.0000      
53 .Mat.3          .              .             1.0000   -270400.0000      
53 .Kut.1          .              .             1.0000   -135200.0000      
53 .Kut.2          .              .             1.0000   -135200.0000      
53 .Kut.3          .              .             1.0000   -135200.0000      
53 .Kot.1          .              .             1.0000   -811200.0000      
53 .Kot.2          .              .             1.0000   -811200.0000      
53 .Kot.3          .              .             1.0000   -811200.0000      
53 .Mak.1          .              .             1.0000    -54080.0000      
53 .Mak.2          .              .             1.0000    -54080.0000      
53 .Mak.3          .              .             1.0000    -54080.0000      
53 .Kuk.1          .              .             1.0000    -81120.0000      
53 .Kuk.2          .              .             1.0000    -81120.0000      
53 .Kuk.3          .              .             1.0000    -81120.0000      
53 .Kok.1          .              .             1.0000    -54080.0000      
53 .Kok.2          .              .             1.0000    -54080.0000      
53 .Kok.3          .              .             1.0000    -54080.0000      
54 .Mat.1          .              .             1.0000   -280900.0000      
54 .Mat.2          .              .             1.0000   -280900.0000      
54 .Mat.3          .              .             1.0000   -280900.0000      
54 .Kut.1          .              .             1.0000   -140450.0000      
54 .Kut.2          .              .             1.0000   -140450.0000      
54 .Kut.3          .              .             1.0000   -140450.0000      
54 .Kot.1          .              .             1.0000   -842700.0000      
54 .Kot.2          .              .             1.0000   -842700.0000      
54 .Kot.3          .              .             1.0000   -842700.0000      
54 .Mak.1          .              .             1.0000    -56180.0000      
54 .Mak.2          .              .             1.0000    -56180.0000      
54 .Mak.3          .              .             1.0000    -56180.0000      
54 .Kuk.1          .              .             1.0000    -84270.0000      
54 .Kuk.2          .              .             1.0000    -84270.0000      
54 .Kuk.3          .              .             1.0000    -84270.0000      
54 .Kok.1          .              .             1.0000    -56180.0000      
54 .Kok.2          .              .             1.0000    -56180.0000      
54 .Kok.3          .              .             1.0000    -56180.0000      
55 .Mat.1          .              .             1.0000   -291600.0000      
55 .Mat.2          .              .             1.0000   -291600.0000      
55 .Mat.3          .              .             1.0000   -291600.0000      
55 .Kut.1          .              .             1.0000   -145800.0000      
55 .Kut.2          .              .             1.0000   -145800.0000      
55 .Kut.3          .              .             1.0000   -145800.0000      
55 .Kot.1          .              .             1.0000   -874800.0000      
55 .Kot.2          .              .             1.0000   -874800.0000      
55 .Kot.3          .              .             1.0000   -874800.0000      
55 .Mak.1          .              .             1.0000    -58320.0000      
55 .Mak.2          .              .             1.0000    -58320.0000      
55 .Mak.3          .              .             1.0000    -58320.0000      
55 .Kuk.1          .              .             1.0000    -87480.0000      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 22:25:36 Page 127
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 416


     VAR r  1 if we buy n boats of timber i, 0 otherwise

                 LOWER          LEVEL          UPPER         MARGINAL

55 .Kuk.2          .              .             1.0000    -87480.0000      
55 .Kuk.3          .              .             1.0000    -87480.0000      
55 .Kok.1          .              .             1.0000    -58320.0000      
55 .Kok.2          .              .             1.0000    -58320.0000      
55 .Kok.3          .              .             1.0000    -58320.0000      
56 .Mat.1          .              .             1.0000   -302500.0000      
56 .Mat.2          .              .             1.0000   -302500.0000      
56 .Mat.3          .              .             1.0000   -302500.0000      
56 .Kut.1          .              .             1.0000   -151250.0000      
56 .Kut.2          .              .             1.0000   -151250.0000      
56 .Kut.3          .              .             1.0000   -151250.0000      
56 .Kot.1          .              .             1.0000   -907500.0000      
56 .Kot.2          .              .             1.0000   -907500.0000      
56 .Kot.3          .              .             1.0000   -907500.0000      
56 .Mak.1          .              .             1.0000    -60500.0000      
56 .Mak.2          .              .             1.0000    -60500.0000      
56 .Mak.3          .              .             1.0000    -60500.0000      
56 .Kuk.1          .              .             1.0000    -90750.0000      
56 .Kuk.2          .              .             1.0000    -90750.0000      
56 .Kuk.3          .              .             1.0000    -90750.0000      
56 .Kok.1          .              .             1.0000    -60500.0000      
56 .Kok.2          .              .             1.0000    -60500.0000      
56 .Kok.3          .              .             1.0000    -60500.0000      
57 .Mat.1          .              .             1.0000   -313600.0000      
57 .Mat.2          .              .             1.0000   -313600.0000      
57 .Mat.3          .              .             1.0000   -313600.0000      
57 .Kut.1          .              .             1.0000   -156800.0000      
57 .Kut.2          .              .             1.0000   -156800.0000      
57 .Kut.3          .              .             1.0000   -156800.0000      
57 .Kot.1          .              .             1.0000   -940800.0000      
57 .Kot.2          .              .             1.0000   -940800.0000      
57 .Kot.3          .              .             1.0000   -940800.0000      
57 .Mak.1          .              .             1.0000    -62720.0000      
57 .Mak.2          .              .             1.0000    -62720.0000      
57 .Mak.3          .              .             1.0000    -62720.0000      
57 .Kuk.1          .              .             1.0000    -94080.0000      
57 .Kuk.2          .              .             1.0000    -94080.0000      
57 .Kuk.3          .              .             1.0000    -94080.0000      
57 .Kok.1          .              .             1.0000    -62720.0000      
57 .Kok.2          .              .             1.0000    -62720.0000      
57 .Kok.3          .              .             1.0000    -62720.0000      
58 .Mat.1          .              .             1.0000   -324900.0000      
58 .Mat.2          .              .             1.0000   -324900.0000      
58 .Mat.3          .              .             1.0000   -324900.0000      
58 .Kut.1          .              .             1.0000   -162450.0000      
58 .Kut.2          .              .             1.0000   -162450.0000      
58 .Kut.3          .              .             1.0000   -162450.0000      
58 .Kot.1          .              .             1.0000   -974700.0000      
58 .Kot.2          .              .             1.0000   -974700.0000      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 22:25:36 Page 128
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 416


     VAR r  1 if we buy n boats of timber i, 0 otherwise

                 LOWER          LEVEL          UPPER         MARGINAL

58 .Kot.3          .              .             1.0000   -974700.0000      
58 .Mak.1          .              .             1.0000    -64980.0000      
58 .Mak.2          .              .             1.0000    -64980.0000      
58 .Mak.3          .              .             1.0000    -64980.0000      
58 .Kuk.1          .              .             1.0000    -97470.0000      
58 .Kuk.2          .              .             1.0000    -97470.0000      
58 .Kuk.3          .              .             1.0000    -97470.0000      
58 .Kok.1          .             1.0000         1.0000    -64980.0000      
58 .Kok.2          .              .             1.0000    -64980.0000      
58 .Kok.3          .              .             1.0000    -64980.0000      
59 .Mat.1          .              .             1.0000   -336400.0000      
59 .Mat.2          .              .             1.0000   -336400.0000      
59 .Mat.3          .              .             1.0000   -336400.0000      
59 .Kut.1          .              .             1.0000   -168200.0000      
59 .Kut.2          .              .             1.0000   -168200.0000      
59 .Kut.3          .              .             1.0000   -168200.0000      
59 .Kot.1          .              .             1.0000   -1.009200E+6      
59 .Kot.2          .              .             1.0000   -1.009200E+6      
59 .Kot.3          .              .             1.0000   -1.009200E+6      
59 .Mak.1          .              .             1.0000    -67280.0000      
59 .Mak.2          .              .             1.0000    -67280.0000      
59 .Mak.3          .              .             1.0000    -67280.0000      
59 .Kuk.1          .              .             1.0000   -100920.0000      
59 .Kuk.2          .              .             1.0000   -100920.0000      
59 .Kuk.3          .              .             1.0000   -100920.0000      
59 .Kok.1          .              .             1.0000    -67280.0000      
59 .Kok.2          .              .             1.0000    -67280.0000      
59 .Kok.3          .              .             1.0000    -67280.0000      
60 .Mat.1          .              .             1.0000   -348100.0000      
60 .Mat.2          .              .             1.0000   -348100.0000      
60 .Mat.3          .              .             1.0000   -348100.0000      
60 .Kut.1          .              .             1.0000   -174050.0000      
60 .Kut.2          .              .             1.0000   -174050.0000      
60 .Kut.3          .              .             1.0000   -174050.0000      
60 .Kot.1          .              .             1.0000   -1.044300E+6      
60 .Kot.2          .              .             1.0000   -1.044300E+6      
60 .Kot.3          .              .             1.0000   -1.044300E+6      
60 .Mak.1          .              .             1.0000    -69620.0000      
60 .Mak.2          .              .             1.0000    -69620.0000      
60 .Mak.3          .              .             1.0000    -69620.0000      
60 .Kuk.1          .              .             1.0000   -104430.0000      
60 .Kuk.2          .              .             1.0000   -104430.0000      
60 .Kuk.3          .              .             1.0000   -104430.0000      
60 .Kok.1          .              .             1.0000    -69620.0000      
60 .Kok.2          .              .             1.0000    -69620.0000      
60 .Kok.3          .              .             1.0000    -69620.0000      
61 .Mat.1          .              .             1.0000   -360000.0000      
61 .Mat.2          .              .             1.0000   -360000.0000      
61 .Mat.3          .              .             1.0000   -360000.0000      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 22:25:36 Page 129
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 416


     VAR r  1 if we buy n boats of timber i, 0 otherwise

                 LOWER          LEVEL          UPPER         MARGINAL

61 .Kut.1          .              .             1.0000   -180000.0000      
61 .Kut.2          .              .             1.0000   -180000.0000      
61 .Kut.3          .              .             1.0000   -180000.0000      
61 .Kot.1          .              .             1.0000   -1.080000E+6      
61 .Kot.2          .              .             1.0000   -1.080000E+6      
61 .Kot.3          .              .             1.0000   -1.080000E+6      
61 .Mak.1          .              .             1.0000    -72000.0000      
61 .Mak.2          .              .             1.0000    -72000.0000      
61 .Mak.3          .              .             1.0000    -72000.0000      
61 .Kuk.1          .              .             1.0000   -108000.0000      
61 .Kuk.2          .              .             1.0000   -108000.0000      
61 .Kuk.3          .              .             1.0000   -108000.0000      
61 .Kok.1          .              .             1.0000    -72000.0000      
61 .Kok.2          .              .             1.0000    -72000.0000      
61 .Kok.3          .              .             1.0000    -72000.0000      
62 .Mat.1          .              .             1.0000   -372100.0000      
62 .Mat.2          .              .             1.0000   -372100.0000      
62 .Mat.3          .              .             1.0000   -372100.0000      
62 .Kut.1          .              .             1.0000   -186050.0000      
62 .Kut.2          .              .             1.0000   -186050.0000      
62 .Kut.3          .              .             1.0000   -186050.0000      
62 .Kot.1          .              .             1.0000   -1.116300E+6      
62 .Kot.2          .              .             1.0000   -1.116300E+6      
62 .Kot.3          .              .             1.0000   -1.116300E+6      
62 .Mak.1          .              .             1.0000    -74420.0000      
62 .Mak.2          .              .             1.0000    -74420.0000      
62 .Mak.3          .              .             1.0000    -74420.0000      
62 .Kuk.1          .              .             1.0000   -111630.0000      
62 .Kuk.2          .              .             1.0000   -111630.0000      
62 .Kuk.3          .              .             1.0000   -111630.0000      
62 .Kok.1          .              .             1.0000    -74420.0000      
62 .Kok.2          .              .             1.0000    -74420.0000      
62 .Kok.3          .              .             1.0000    -74420.0000      
63 .Mat.1          .              .             1.0000   -384400.0000      
63 .Mat.2          .              .             1.0000   -384400.0000      
63 .Mat.3          .              .             1.0000   -384400.0000      
63 .Kut.1          .              .             1.0000   -192200.0000      
63 .Kut.2          .              .             1.0000   -192200.0000      
63 .Kut.3          .              .             1.0000   -192200.0000      
63 .Kot.1          .              .             1.0000   -1.153200E+6      
63 .Kot.2          .              .             1.0000   -1.153200E+6      
63 .Kot.3          .              .             1.0000   -1.153200E+6      
63 .Mak.1          .              .             1.0000    -76880.0000      
63 .Mak.2          .              .             1.0000    -76880.0000      
63 .Mak.3          .              .             1.0000    -76880.0000      
63 .Kuk.1          .              .             1.0000   -115320.0000      
63 .Kuk.2          .              .             1.0000   -115320.0000      
63 .Kuk.3          .              .             1.0000   -115320.0000      
63 .Kok.1          .              .             1.0000    -76880.0000      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 22:25:36 Page 130
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 416


     VAR r  1 if we buy n boats of timber i, 0 otherwise

                 LOWER          LEVEL          UPPER         MARGINAL

63 .Kok.2          .              .             1.0000    -76880.0000      
63 .Kok.3          .              .             1.0000    -76880.0000      
64 .Mat.1          .              .             1.0000   -396900.0000      
64 .Mat.2          .              .             1.0000   -396900.0000      
64 .Mat.3          .              .             1.0000   -396900.0000      
64 .Kut.1          .              .             1.0000   -198450.0000      
64 .Kut.2          .              .             1.0000   -198450.0000      
64 .Kut.3          .              .             1.0000   -198450.0000      
64 .Kot.1          .              .             1.0000   -1.190700E+6      
64 .Kot.2          .              .             1.0000   -1.190700E+6      
64 .Kot.3          .              .             1.0000   -1.190700E+6      
64 .Mak.1          .              .             1.0000    -79380.0000      
64 .Mak.2          .              .             1.0000    -79380.0000      
64 .Mak.3          .              .             1.0000    -79380.0000      
64 .Kuk.1          .              .             1.0000   -119070.0000      
64 .Kuk.2          .              .             1.0000   -119070.0000      
64 .Kuk.3          .              .             1.0000   -119070.0000      
64 .Kok.1          .              .             1.0000    -79380.0000      
64 .Kok.2          .              .             1.0000    -79380.0000      
64 .Kok.3          .              .             1.0000    -79380.0000      
65 .Mat.1          .              .             1.0000   -409600.0000      
65 .Mat.2          .              .             1.0000   -409600.0000      
65 .Mat.3          .              .             1.0000   -409600.0000      
65 .Kut.1          .              .             1.0000   -204800.0000      
65 .Kut.2          .              .             1.0000   -204800.0000      
65 .Kut.3          .              .             1.0000   -204800.0000      
65 .Kot.1          .              .             1.0000   -1.228800E+6      
65 .Kot.2          .              .             1.0000   -1.228800E+6      
65 .Kot.3          .              .             1.0000   -1.228800E+6      
65 .Mak.1          .              .             1.0000    -81920.0000      
65 .Mak.2          .              .             1.0000    -81920.0000      
65 .Mak.3          .              .             1.0000    -81920.0000      
65 .Kuk.1          .              .             1.0000   -122880.0000      
65 .Kuk.2          .              .             1.0000   -122880.0000      
65 .Kuk.3          .              .             1.0000   -122880.0000      
65 .Kok.1          .              .             1.0000    -81920.0000      
65 .Kok.2          .              .             1.0000    -81920.0000      
65 .Kok.3          .              .             1.0000    -81920.0000      
66 .Mat.1          .              .             1.0000   -422500.0000      
66 .Mat.2          .              .             1.0000   -422500.0000      
66 .Mat.3          .              .             1.0000   -422500.0000      
66 .Kut.1          .              .             1.0000   -211250.0000      
66 .Kut.2          .              .             1.0000   -211250.0000      
66 .Kut.3          .              .             1.0000   -211250.0000      
66 .Kot.1          .              .             1.0000   -1.267500E+6      
66 .Kot.2          .              .             1.0000   -1.267500E+6      
66 .Kot.3          .              .             1.0000   -1.267500E+6      
66 .Mak.1          .              .             1.0000    -84500.0000      
66 .Mak.2          .              .             1.0000    -84500.0000      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 22:25:36 Page 131
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 416


     VAR r  1 if we buy n boats of timber i, 0 otherwise

                 LOWER          LEVEL          UPPER         MARGINAL

66 .Mak.3          .              .             1.0000    -84500.0000      
66 .Kuk.1          .              .             1.0000   -126750.0000      
66 .Kuk.2          .              .             1.0000   -126750.0000      
66 .Kuk.3          .              .             1.0000   -126750.0000      
66 .Kok.1          .              .             1.0000    -84500.0000      
66 .Kok.2          .              .             1.0000    -84500.0000      
66 .Kok.3          .              .             1.0000    -84500.0000      
67 .Mat.1          .              .             1.0000   -435600.0000      
67 .Mat.2          .              .             1.0000   -435600.0000      
67 .Mat.3          .              .             1.0000   -435600.0000      
67 .Kut.1          .              .             1.0000   -217800.0000      
67 .Kut.2          .              .             1.0000   -217800.0000      
67 .Kut.3          .              .             1.0000   -217800.0000      
67 .Kot.1          .              .             1.0000   -1.306800E+6      
67 .Kot.2          .              .             1.0000   -1.306800E+6      
67 .Kot.3          .              .             1.0000   -1.306800E+6      
67 .Mak.1          .              .             1.0000    -87120.0000      
67 .Mak.2          .              .             1.0000    -87120.0000      
67 .Mak.3          .              .             1.0000    -87120.0000      
67 .Kuk.1          .              .             1.0000   -130680.0000      
67 .Kuk.2          .              .             1.0000   -130680.0000      
67 .Kuk.3          .              .             1.0000   -130680.0000      
67 .Kok.1          .              .             1.0000    -87120.0000      
67 .Kok.2          .              .             1.0000    -87120.0000      
67 .Kok.3          .              .             1.0000    -87120.0000      
68 .Mat.1          .              .             1.0000   -448900.0000      
68 .Mat.2          .              .             1.0000   -448900.0000      
68 .Mat.3          .              .             1.0000   -448900.0000      
68 .Kut.1          .              .             1.0000   -224450.0000      
68 .Kut.2          .              .             1.0000   -224450.0000      
68 .Kut.3          .              .             1.0000   -224450.0000      
68 .Kot.1          .              .             1.0000   -1.346700E+6      
68 .Kot.2          .              .             1.0000   -1.346700E+6      
68 .Kot.3          .              .             1.0000   -1.346700E+6      
68 .Mak.1          .              .             1.0000    -89780.0000      
68 .Mak.2          .              .             1.0000    -89780.0000      
68 .Mak.3          .              .             1.0000    -89780.0000      
68 .Kuk.1          .              .             1.0000   -134670.0000      
68 .Kuk.2          .              .             1.0000   -134670.0000      
68 .Kuk.3          .              .             1.0000   -134670.0000      
68 .Kok.1          .              .             1.0000    -89780.0000      
68 .Kok.2          .              .             1.0000    -89780.0000      
68 .Kok.3          .              .             1.0000    -89780.0000      
69 .Mat.1          .              .             1.0000   -462400.0000      
69 .Mat.2          .              .             1.0000   -462400.0000      
69 .Mat.3          .              .             1.0000   -462400.0000      
69 .Kut.1          .              .             1.0000   -231200.0000      
69 .Kut.2          .              .             1.0000   -231200.0000      
69 .Kut.3          .              .             1.0000   -231200.0000      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 22:25:36 Page 132
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 416


     VAR r  1 if we buy n boats of timber i, 0 otherwise

                 LOWER          LEVEL          UPPER         MARGINAL

69 .Kot.1          .              .             1.0000   -1.387200E+6      
69 .Kot.2          .              .             1.0000   -1.387200E+6      
69 .Kot.3          .              .             1.0000   -1.387200E+6      
69 .Mak.1          .              .             1.0000    -92480.0000      
69 .Mak.2          .              .             1.0000    -92480.0000      
69 .Mak.3          .              .             1.0000    -92480.0000      
69 .Kuk.1          .              .             1.0000   -138720.0000      
69 .Kuk.2          .              .             1.0000   -138720.0000      
69 .Kuk.3          .              .             1.0000   -138720.0000      
69 .Kok.1          .              .             1.0000    -92480.0000      
69 .Kok.2          .              .             1.0000    -92480.0000      
69 .Kok.3          .              .             1.0000    -92480.0000      
70 .Mat.1          .              .             1.0000   -476100.0000      
70 .Mat.2          .              .             1.0000   -476100.0000      
70 .Mat.3          .              .             1.0000   -476100.0000      
70 .Kut.1          .              .             1.0000   -238050.0000      
70 .Kut.2          .              .             1.0000   -238050.0000      
70 .Kut.3          .              .             1.0000   -238050.0000      
70 .Kot.1          .              .             1.0000   -1.428300E+6      
70 .Kot.2          .              .             1.0000   -1.428300E+6      
70 .Kot.3          .              .             1.0000   -1.428300E+6      
70 .Mak.1          .              .             1.0000    -95220.0000      
70 .Mak.2          .              .             1.0000    -95220.0000      
70 .Mak.3          .              .             1.0000    -95220.0000      
70 .Kuk.1          .              .             1.0000   -142830.0000      
70 .Kuk.2          .              .             1.0000   -142830.0000      
70 .Kuk.3          .              .             1.0000   -142830.0000      
70 .Kok.1          .              .             1.0000    -95220.0000      
70 .Kok.2          .              .             1.0000    -95220.0000      
70 .Kok.3          .              .             1.0000    -95220.0000      
71 .Mat.1          .              .             1.0000   -490000.0000      
71 .Mat.2          .              .             1.0000   -490000.0000      
71 .Mat.3          .              .             1.0000   -490000.0000      
71 .Kut.1          .              .             1.0000   -245000.0000      
71 .Kut.2          .              .             1.0000   -245000.0000      
71 .Kut.3          .              .             1.0000   -245000.0000      
71 .Kot.1          .              .             1.0000   -1.470000E+6      
71 .Kot.2          .              .             1.0000   -1.470000E+6      
71 .Kot.3          .              .             1.0000   -1.470000E+6      
71 .Mak.1          .              .             1.0000    -98000.0000      
71 .Mak.2          .              .             1.0000    -98000.0000      
71 .Mak.3          .              .             1.0000    -98000.0000      
71 .Kuk.1          .              .             1.0000   -147000.0000      
71 .Kuk.2          .              .             1.0000   -147000.0000      
71 .Kuk.3          .              .             1.0000   -147000.0000      
71 .Kok.1          .              .             1.0000    -98000.0000      
71 .Kok.2          .              .             1.0000    -98000.0000      
71 .Kok.3          .              .             1.0000    -98000.0000      
72 .Mat.1          .              .             1.0000   -504100.0000      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 22:25:36 Page 133
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 416


     VAR r  1 if we buy n boats of timber i, 0 otherwise

                 LOWER          LEVEL          UPPER         MARGINAL

72 .Mat.2          .              .             1.0000   -504100.0000      
72 .Mat.3          .              .             1.0000   -504100.0000      
72 .Kut.1          .              .             1.0000   -252050.0000      
72 .Kut.2          .              .             1.0000   -252050.0000      
72 .Kut.3          .              .             1.0000   -252050.0000      
72 .Kot.1          .              .             1.0000   -1.512300E+6      
72 .Kot.2          .              .             1.0000   -1.512300E+6      
72 .Kot.3          .              .             1.0000   -1.512300E+6      
72 .Mak.1          .              .             1.0000   -100820.0000      
72 .Mak.2          .              .             1.0000   -100820.0000      
72 .Mak.3          .              .             1.0000   -100820.0000      
72 .Kuk.1          .              .             1.0000   -151230.0000      
72 .Kuk.2          .              .             1.0000   -151230.0000      
72 .Kuk.3          .              .             1.0000   -151230.0000      
72 .Kok.1          .              .             1.0000   -100820.0000      
72 .Kok.2          .              .             1.0000   -100820.0000      
72 .Kok.3          .              .             1.0000   -100820.0000      
73 .Mat.1          .              .             1.0000   -518400.0000      
73 .Mat.2          .              .             1.0000   -518400.0000      
73 .Mat.3          .              .             1.0000   -518400.0000      
73 .Kut.1          .              .             1.0000   -259200.0000      
73 .Kut.2          .              .             1.0000   -259200.0000      
73 .Kut.3          .              .             1.0000   -259200.0000      
73 .Kot.1          .              .             1.0000   -1.555200E+6      
73 .Kot.2          .              .             1.0000   -1.555200E+6      
73 .Kot.3          .              .             1.0000   -1.555200E+6      
73 .Mak.1          .              .             1.0000   -103680.0000      
73 .Mak.2          .              .             1.0000   -103680.0000      
73 .Mak.3          .              .             1.0000   -103680.0000      
73 .Kuk.1          .              .             1.0000   -155520.0000      
73 .Kuk.2          .              .             1.0000   -155520.0000      
73 .Kuk.3          .              .             1.0000   -155520.0000      
73 .Kok.1          .              .             1.0000   -103680.0000      
73 .Kok.2          .              .             1.0000   -103680.0000      
73 .Kok.3          .              .             1.0000   -103680.0000      
74 .Mat.1          .              .             1.0000   -532900.0000      
74 .Mat.2          .              .             1.0000   -532900.0000      
74 .Mat.3          .              .             1.0000   -532900.0000      
74 .Kut.1          .              .             1.0000   -266450.0000      
74 .Kut.2          .              .             1.0000   -266450.0000      
74 .Kut.3          .              .             1.0000   -266450.0000      
74 .Kot.1          .              .             1.0000   -1.598700E+6      
74 .Kot.2          .              .             1.0000   -1.598700E+6      
74 .Kot.3          .              .             1.0000   -1.598700E+6      
74 .Mak.1          .              .             1.0000   -106580.0000      
74 .Mak.2          .              .             1.0000   -106580.0000      
74 .Mak.3          .              .             1.0000   -106580.0000      
74 .Kuk.1          .              .             1.0000   -159870.0000      
74 .Kuk.2          .              .             1.0000   -159870.0000      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 22:25:36 Page 134
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 416


     VAR r  1 if we buy n boats of timber i, 0 otherwise

                 LOWER          LEVEL          UPPER         MARGINAL

74 .Kuk.3          .              .             1.0000   -159870.0000      
74 .Kok.1          .              .             1.0000   -106580.0000      
74 .Kok.2          .              .             1.0000   -106580.0000      
74 .Kok.3          .              .             1.0000   -106580.0000      
75 .Mat.1          .              .             1.0000   -547600.0000      
75 .Mat.2          .              .             1.0000   -547600.0000      
75 .Mat.3          .              .             1.0000   -547600.0000      
75 .Kut.1          .              .             1.0000   -273800.0000      
75 .Kut.2          .              .             1.0000   -273800.0000      
75 .Kut.3          .              .             1.0000   -273800.0000      
75 .Kot.1          .              .             1.0000   -1.642800E+6      
75 .Kot.2          .              .             1.0000   -1.642800E+6      
75 .Kot.3          .              .             1.0000   -1.642800E+6      
75 .Mak.1          .              .             1.0000   -109520.0000      
75 .Mak.2          .              .             1.0000   -109520.0000      
75 .Mak.3          .              .             1.0000   -109520.0000      
75 .Kuk.1          .              .             1.0000   -164280.0000      
75 .Kuk.2          .              .             1.0000   -164280.0000      
75 .Kuk.3          .              .             1.0000   -164280.0000      
75 .Kok.1          .              .             1.0000   -109520.0000      
75 .Kok.2          .              .             1.0000   -109520.0000      
75 .Kok.3          .              .             1.0000   -109520.0000      
76 .Mat.1          .              .             1.0000   -562500.0000      
76 .Mat.2          .              .             1.0000   -562500.0000      
76 .Mat.3          .              .             1.0000   -562500.0000      
76 .Kut.1          .              .             1.0000   -281250.0000      
76 .Kut.2          .              .             1.0000   -281250.0000      
76 .Kut.3          .              .             1.0000   -281250.0000      
76 .Kot.1          .              .             1.0000   -1.687500E+6      
76 .Kot.2          .              .             1.0000   -1.687500E+6      
76 .Kot.3          .              .             1.0000   -1.687500E+6      
76 .Mak.1          .              .             1.0000   -112500.0000      
76 .Mak.2          .              .             1.0000   -112500.0000      
76 .Mak.3          .              .             1.0000   -112500.0000      
76 .Kuk.1          .              .             1.0000   -168750.0000      
76 .Kuk.2          .              .             1.0000   -168750.0000      
76 .Kuk.3          .              .             1.0000   -168750.0000      
76 .Kok.1          .              .             1.0000   -112500.0000      
76 .Kok.2          .              .             1.0000   -112500.0000      
76 .Kok.3          .              .             1.0000   -112500.0000      
77 .Mat.1          .              .             1.0000   -577600.0000      
77 .Mat.2          .              .             1.0000   -577600.0000      
77 .Mat.3          .              .             1.0000   -577600.0000      
77 .Kut.1          .              .             1.0000   -288800.0000      
77 .Kut.2          .              .             1.0000   -288800.0000      
77 .Kut.3          .              .             1.0000   -288800.0000      
77 .Kot.1          .              .             1.0000   -1.732800E+6      
77 .Kot.2          .              .             1.0000   -1.732800E+6      
77 .Kot.3          .              .             1.0000   -1.732800E+6      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 22:25:36 Page 135
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 416


     VAR r  1 if we buy n boats of timber i, 0 otherwise

                 LOWER          LEVEL          UPPER         MARGINAL

77 .Mak.1          .              .             1.0000   -115520.0000      
77 .Mak.2          .              .             1.0000   -115520.0000      
77 .Mak.3          .              .             1.0000   -115520.0000      
77 .Kuk.1          .              .             1.0000   -173280.0000      
77 .Kuk.2          .              .             1.0000   -173280.0000      
77 .Kuk.3          .              .             1.0000   -173280.0000      
77 .Kok.1          .              .             1.0000   -115520.0000      
77 .Kok.2          .              .             1.0000   -115520.0000      
77 .Kok.3          .              .             1.0000   -115520.0000      
78 .Mat.1          .              .             1.0000   -592900.0000      
78 .Mat.2          .              .             1.0000   -592900.0000      
78 .Mat.3          .              .             1.0000   -592900.0000      
78 .Kut.1          .              .             1.0000   -296450.0000      
78 .Kut.2          .              .             1.0000   -296450.0000      
78 .Kut.3          .              .             1.0000   -296450.0000      
78 .Kot.1          .              .             1.0000   -1.778700E+6      
78 .Kot.2          .              .             1.0000   -1.778700E+6      
78 .Kot.3          .              .             1.0000   -1.778700E+6      
78 .Mak.1          .              .             1.0000   -118580.0000      
78 .Mak.2          .              .             1.0000   -118580.0000      
78 .Mak.3          .              .             1.0000   -118580.0000      
78 .Kuk.1          .              .             1.0000   -177870.0000      
78 .Kuk.2          .              .             1.0000   -177870.0000      
78 .Kuk.3          .              .             1.0000   -177870.0000      
78 .Kok.1          .              .             1.0000   -118580.0000      
78 .Kok.2          .              .             1.0000   -118580.0000      
78 .Kok.3          .              .             1.0000   -118580.0000      
79 .Mat.1          .              .             1.0000   -608400.0000      
79 .Mat.2          .              .             1.0000   -608400.0000      
79 .Mat.3          .              .             1.0000   -608400.0000      
79 .Kut.1          .              .             1.0000   -304200.0000      
79 .Kut.2          .              .             1.0000   -304200.0000      
79 .Kut.3          .              .             1.0000   -304200.0000      
79 .Kot.1          .              .             1.0000   -1.825200E+6      
79 .Kot.2          .              .             1.0000   -1.825200E+6      
79 .Kot.3          .              .             1.0000   -1.825200E+6      
79 .Mak.1          .              .             1.0000   -121680.0000      
79 .Mak.2          .              .             1.0000   -121680.0000      
79 .Mak.3          .              .             1.0000   -121680.0000      
79 .Kuk.1          .              .             1.0000   -182520.0000      
79 .Kuk.2          .              .             1.0000   -182520.0000      
79 .Kuk.3          .              .             1.0000   -182520.0000      
79 .Kok.1          .              .             1.0000   -121680.0000      
79 .Kok.2          .              .             1.0000   -121680.0000      
79 .Kok.3          .              .             1.0000   -121680.0000      
80 .Mat.1          .              .             1.0000   -624100.0000      
80 .Mat.2          .              .             1.0000   -624100.0000      
80 .Mat.3          .              .             1.0000   -624100.0000      
80 .Kut.1          .              .             1.0000   -312050.0000      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 22:25:36 Page 136
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 416


     VAR r  1 if we buy n boats of timber i, 0 otherwise

                 LOWER          LEVEL          UPPER         MARGINAL

80 .Kut.2          .              .             1.0000   -312050.0000      
80 .Kut.3          .              .             1.0000   -312050.0000      
80 .Kot.1          .              .             1.0000   -1.872300E+6      
80 .Kot.2          .              .             1.0000   -1.872300E+6      
80 .Kot.3          .              .             1.0000   -1.872300E+6      
80 .Mak.1          .              .             1.0000   -124820.0000      
80 .Mak.2          .              .             1.0000   -124820.0000      
80 .Mak.3          .              .             1.0000   -124820.0000      
80 .Kuk.1          .              .             1.0000   -187230.0000      
80 .Kuk.2          .              .             1.0000   -187230.0000      
80 .Kuk.3          .              .             1.0000   -187230.0000      
80 .Kok.1          .              .             1.0000   -124820.0000      
80 .Kok.2          .              .             1.0000   -124820.0000      
80 .Kok.3          .              .             1.0000   -124820.0000      
81 .Mat.1          .              .             1.0000   -640000.0000      
81 .Mat.2          .              .             1.0000   -640000.0000      
81 .Mat.3          .              .             1.0000   -640000.0000      
81 .Kut.1          .              .             1.0000   -320000.0000      
81 .Kut.2          .              .             1.0000   -320000.0000      
81 .Kut.3          .              .             1.0000   -320000.0000      
81 .Kot.1          .              .             1.0000   -1.920000E+6      
81 .Kot.2          .              .             1.0000   -1.920000E+6      
81 .Kot.3          .              .             1.0000   -1.920000E+6      
81 .Mak.1          .              .             1.0000   -128000.0000      
81 .Mak.2          .              .             1.0000   -128000.0000      
81 .Mak.3          .              .             1.0000   -128000.0000      
81 .Kuk.1          .              .             1.0000   -192000.0000      
81 .Kuk.2          .              .             1.0000   -192000.0000      
81 .Kuk.3          .              .             1.0000   -192000.0000      
81 .Kok.1          .              .             1.0000   -128000.0000      
81 .Kok.2          .              .             1.0000   -128000.0000      
81 .Kok.3          .              .             1.0000   -128000.0000      
82 .Mat.1          .              .             1.0000   -656100.0000      
82 .Mat.2          .              .             1.0000   -656100.0000      
82 .Mat.3          .              .             1.0000   -656100.0000      
82 .Kut.1          .              .             1.0000   -328050.0000      
82 .Kut.2          .              .             1.0000   -328050.0000      
82 .Kut.3          .              .             1.0000   -328050.0000      
82 .Kot.1          .              .             1.0000   -1.968300E+6      
82 .Kot.2          .              .             1.0000   -1.968300E+6      
82 .Kot.3          .              .             1.0000   -1.968300E+6      
82 .Mak.1          .              .             1.0000   -131220.0000      
82 .Mak.2          .              .             1.0000   -131220.0000      
82 .Mak.3          .              .             1.0000   -131220.0000      
82 .Kuk.1          .              .             1.0000   -196830.0000      
82 .Kuk.2          .              .             1.0000   -196830.0000      
82 .Kuk.3          .              .             1.0000   -196830.0000      
82 .Kok.1          .              .             1.0000   -131220.0000      
82 .Kok.2          .              .             1.0000   -131220.0000      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 22:25:36 Page 137
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 416


     VAR r  1 if we buy n boats of timber i, 0 otherwise

                 LOWER          LEVEL          UPPER         MARGINAL

82 .Kok.3          .              .             1.0000   -131220.0000      
83 .Mat.1          .              .             1.0000   -672400.0000      
83 .Mat.2          .              .             1.0000   -672400.0000      
83 .Mat.3          .              .             1.0000   -672400.0000      
83 .Kut.1          .              .             1.0000   -336200.0000      
83 .Kut.2          .              .             1.0000   -336200.0000      
83 .Kut.3          .              .             1.0000   -336200.0000      
83 .Kot.1          .              .             1.0000   -2.017200E+6      
83 .Kot.2          .              .             1.0000   -2.017200E+6      
83 .Kot.3          .              .             1.0000   -2.017200E+6      
83 .Mak.1          .              .             1.0000   -134480.0000      
83 .Mak.2          .              .             1.0000   -134480.0000      
83 .Mak.3          .              .             1.0000   -134480.0000      
83 .Kuk.1          .              .             1.0000   -201720.0000      
83 .Kuk.2          .              .             1.0000   -201720.0000      
83 .Kuk.3          .              .             1.0000   -201720.0000      
83 .Kok.1          .              .             1.0000   -134480.0000      
83 .Kok.2          .              .             1.0000   -134480.0000      
83 .Kok.3          .              .             1.0000   -134480.0000      
84 .Mat.1          .              .             1.0000   -688900.0000      
84 .Mat.2          .              .             1.0000   -688900.0000      
84 .Mat.3          .              .             1.0000   -688900.0000      
84 .Kut.1          .              .             1.0000   -344450.0000      
84 .Kut.2          .              .             1.0000   -344450.0000      
84 .Kut.3          .              .             1.0000   -344450.0000      
84 .Kot.1          .              .             1.0000   -2.066700E+6      
84 .Kot.2          .              .             1.0000   -2.066700E+6      
84 .Kot.3          .              .             1.0000   -2.066700E+6      
84 .Mak.1          .              .             1.0000   -137780.0000      
84 .Mak.2          .              .             1.0000   -137780.0000      
84 .Mak.3          .              .             1.0000   -137780.0000      
84 .Kuk.1          .              .             1.0000   -206670.0000      
84 .Kuk.2          .              .             1.0000   -206670.0000      
84 .Kuk.3          .              .             1.0000   -206670.0000      
84 .Kok.1          .              .             1.0000   -137780.0000      
84 .Kok.2          .              .             1.0000   -137780.0000      
84 .Kok.3          .              .             1.0000   -137780.0000      
85 .Mat.1          .              .             1.0000   -705600.0000      
85 .Mat.2          .              .             1.0000   -705600.0000      
85 .Mat.3          .              .             1.0000   -705600.0000      
85 .Kut.1          .              .             1.0000   -352800.0000      
85 .Kut.2          .              .             1.0000   -352800.0000      
85 .Kut.3          .              .             1.0000   -352800.0000      
85 .Kot.1          .              .             1.0000   -2.116800E+6      
85 .Kot.2          .              .             1.0000   -2.116800E+6      
85 .Kot.3          .              .             1.0000   -2.116800E+6      
85 .Mak.1          .              .             1.0000   -141120.0000      
85 .Mak.2          .              .             1.0000   -141120.0000      
85 .Mak.3          .              .             1.0000   -141120.0000      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 22:25:36 Page 138
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 416


     VAR r  1 if we buy n boats of timber i, 0 otherwise

                 LOWER          LEVEL          UPPER         MARGINAL

85 .Kuk.1          .              .             1.0000   -211680.0000      
85 .Kuk.2          .              .             1.0000   -211680.0000      
85 .Kuk.3          .              .             1.0000   -211680.0000      
85 .Kok.1          .              .             1.0000   -141120.0000      
85 .Kok.2          .              .             1.0000   -141120.0000      
85 .Kok.3          .              .             1.0000   -141120.0000      
86 .Mat.1          .              .             1.0000   -722500.0000      
86 .Mat.2          .              .             1.0000   -722500.0000      
86 .Mat.3          .              .             1.0000   -722500.0000      
86 .Kut.1          .              .             1.0000   -361250.0000      
86 .Kut.2          .              .             1.0000   -361250.0000      
86 .Kut.3          .              .             1.0000   -361250.0000      
86 .Kot.1          .              .             1.0000   -2.167500E+6      
86 .Kot.2          .              .             1.0000   -2.167500E+6      
86 .Kot.3          .              .             1.0000   -2.167500E+6      
86 .Mak.1          .              .             1.0000   -144500.0000      
86 .Mak.2          .              .             1.0000   -144500.0000      
86 .Mak.3          .              .             1.0000   -144500.0000      
86 .Kuk.1          .              .             1.0000   -216750.0000      
86 .Kuk.2          .              .             1.0000   -216750.0000      
86 .Kuk.3          .              .             1.0000   -216750.0000      
86 .Kok.1          .              .             1.0000   -144500.0000      
86 .Kok.2          .              .             1.0000   -144500.0000      
86 .Kok.3          .              .             1.0000   -144500.0000      
87 .Mat.1          .              .             1.0000   -739600.0000      
87 .Mat.2          .              .             1.0000   -739600.0000      
87 .Mat.3          .              .             1.0000   -739600.0000      
87 .Kut.1          .              .             1.0000   -369800.0000      
87 .Kut.2          .              .             1.0000   -369800.0000      
87 .Kut.3          .              .             1.0000   -369800.0000      
87 .Kot.1          .              .             1.0000   -2.218800E+6      
87 .Kot.2          .              .             1.0000   -2.218800E+6      
87 .Kot.3          .              .             1.0000   -2.218800E+6      
87 .Mak.1          .              .             1.0000   -147920.0000      
87 .Mak.2          .              .             1.0000   -147920.0000      
87 .Mak.3          .              .             1.0000   -147920.0000      
87 .Kuk.1          .              .             1.0000   -221880.0000      
87 .Kuk.2          .              .             1.0000   -221880.0000      
87 .Kuk.3          .              .             1.0000   -221880.0000      
87 .Kok.1          .              .             1.0000   -147920.0000      
87 .Kok.2          .              .             1.0000   -147920.0000      
87 .Kok.3          .              .             1.0000   -147920.0000      
88 .Mat.1          .              .             1.0000   -756900.0000      
88 .Mat.2          .              .             1.0000   -756900.0000      
88 .Mat.3          .              .             1.0000   -756900.0000      
88 .Kut.1          .              .             1.0000   -378450.0000      
88 .Kut.2          .              .             1.0000   -378450.0000      
88 .Kut.3          .              .             1.0000   -378450.0000      
88 .Kot.1          .              .             1.0000   -2.270700E+6      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 22:25:36 Page 139
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 416


     VAR r  1 if we buy n boats of timber i, 0 otherwise

                 LOWER          LEVEL          UPPER         MARGINAL

88 .Kot.2          .              .             1.0000   -2.270700E+6      
88 .Kot.3          .              .             1.0000   -2.270700E+6      
88 .Mak.1          .              .             1.0000   -151380.0000      
88 .Mak.2          .              .             1.0000   -151380.0000      
88 .Mak.3          .              .             1.0000   -151380.0000      
88 .Kuk.1          .              .             1.0000   -227070.0000      
88 .Kuk.2          .              .             1.0000   -227070.0000      
88 .Kuk.3          .              .             1.0000   -227070.0000      
88 .Kok.1          .              .             1.0000   -151380.0000      
88 .Kok.2          .              .             1.0000   -151380.0000      
88 .Kok.3          .              .             1.0000   -151380.0000      
89 .Mat.1          .              .             1.0000   -774400.0000      
89 .Mat.2          .              .             1.0000   -774400.0000      
89 .Mat.3          .              .             1.0000   -774400.0000      
89 .Kut.1          .              .             1.0000   -387200.0000      
89 .Kut.2          .              .             1.0000   -387200.0000      
89 .Kut.3          .              .             1.0000   -387200.0000      
89 .Kot.1          .              .             1.0000   -2.323200E+6      
89 .Kot.2          .              .             1.0000   -2.323200E+6      
89 .Kot.3          .              .             1.0000   -2.323200E+6      
89 .Mak.1          .              .             1.0000   -154880.0000      
89 .Mak.2          .              .             1.0000   -154880.0000      
89 .Mak.3          .              .             1.0000   -154880.0000      
89 .Kuk.1          .              .             1.0000   -232320.0000      
89 .Kuk.2          .              .             1.0000   -232320.0000      
89 .Kuk.3          .              .             1.0000   -232320.0000      
89 .Kok.1          .              .             1.0000   -154880.0000      
89 .Kok.2          .              .             1.0000   -154880.0000      
89 .Kok.3          .              .             1.0000   -154880.0000      
90 .Mat.1          .              .             1.0000   -792100.0000      
90 .Mat.2          .              .             1.0000   -792100.0000      
90 .Mat.3          .              .             1.0000   -792100.0000      
90 .Kut.1          .              .             1.0000   -396050.0000      
90 .Kut.2          .              .             1.0000   -396050.0000      
90 .Kut.3          .              .             1.0000   -396050.0000      
90 .Kot.1          .              .             1.0000   -2.376300E+6      
90 .Kot.2          .              .             1.0000   -2.376300E+6      
90 .Kot.3          .              .             1.0000   -2.376300E+6      
90 .Mak.1          .              .             1.0000   -158420.0000      
90 .Mak.2          .              .             1.0000   -158420.0000      
90 .Mak.3          .              .             1.0000   -158420.0000      
90 .Kuk.1          .              .             1.0000   -237630.0000      
90 .Kuk.2          .              .             1.0000   -237630.0000      
90 .Kuk.3          .              .             1.0000   -237630.0000      
90 .Kok.1          .              .             1.0000   -158420.0000      
90 .Kok.2          .              .             1.0000   -158420.0000      
90 .Kok.3          .              .             1.0000   -158420.0000      
91 .Mat.1          .              .             1.0000   -810000.0000      
91 .Mat.2          .              .             1.0000   -810000.0000      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 22:25:36 Page 140
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 416


     VAR r  1 if we buy n boats of timber i, 0 otherwise

                 LOWER          LEVEL          UPPER         MARGINAL

91 .Mat.3          .              .             1.0000   -810000.0000      
91 .Kut.1          .              .             1.0000   -405000.0000      
91 .Kut.2          .              .             1.0000   -405000.0000      
91 .Kut.3          .              .             1.0000   -405000.0000      
91 .Kot.1          .              .             1.0000   -2.430000E+6      
91 .Kot.2          .              .             1.0000   -2.430000E+6      
91 .Kot.3          .              .             1.0000   -2.430000E+6      
91 .Mak.1          .              .             1.0000   -162000.0000      
91 .Mak.2          .              .             1.0000   -162000.0000      
91 .Mak.3          .              .             1.0000   -162000.0000      
91 .Kuk.1          .              .             1.0000   -243000.0000      
91 .Kuk.2          .              .             1.0000   -243000.0000      
91 .Kuk.3          .              .             1.0000   -243000.0000      
91 .Kok.1          .              .             1.0000   -162000.0000      
91 .Kok.2          .              .             1.0000   -162000.0000      
91 .Kok.3          .              .             1.0000   -162000.0000      
92 .Mat.1          .              .             1.0000   -828100.0000      
92 .Mat.2          .              .             1.0000   -828100.0000      
92 .Mat.3          .              .             1.0000   -828100.0000      
92 .Kut.1          .              .             1.0000   -414050.0000      
92 .Kut.2          .              .             1.0000   -414050.0000      
92 .Kut.3          .              .             1.0000   -414050.0000      
92 .Kot.1          .              .             1.0000   -2.484300E+6      
92 .Kot.2          .              .             1.0000   -2.484300E+6      
92 .Kot.3          .              .             1.0000   -2.484300E+6      
92 .Mak.1          .              .             1.0000   -165620.0000      
92 .Mak.2          .              .             1.0000   -165620.0000      
92 .Mak.3          .              .             1.0000   -165620.0000      
92 .Kuk.1          .              .             1.0000   -248430.0000      
92 .Kuk.2          .              .             1.0000   -248430.0000      
92 .Kuk.3          .              .             1.0000   -248430.0000      
92 .Kok.1          .              .             1.0000   -165620.0000      
92 .Kok.2          .              .             1.0000   -165620.0000      
92 .Kok.3          .              .             1.0000   -165620.0000      
93 .Mat.1          .              .             1.0000   -846400.0000      
93 .Mat.2          .              .             1.0000   -846400.0000      
93 .Mat.3          .              .             1.0000   -846400.0000      
93 .Kut.1          .              .             1.0000   -423200.0000      
93 .Kut.2          .              .             1.0000   -423200.0000      
93 .Kut.3          .              .             1.0000   -423200.0000      
93 .Kot.1          .              .             1.0000   -2.539200E+6      
93 .Kot.2          .              .             1.0000   -2.539200E+6      
93 .Kot.3          .              .             1.0000   -2.539200E+6      
93 .Mak.1          .              .             1.0000   -169280.0000      
93 .Mak.2          .              .             1.0000   -169280.0000      
93 .Mak.3          .              .             1.0000   -169280.0000      
93 .Kuk.1          .              .             1.0000   -253920.0000      
93 .Kuk.2          .              .             1.0000   -253920.0000      
93 .Kuk.3          .              .             1.0000   -253920.0000      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 22:25:36 Page 141
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 416


     VAR r  1 if we buy n boats of timber i, 0 otherwise

                 LOWER          LEVEL          UPPER         MARGINAL

93 .Kok.1          .              .             1.0000   -169280.0000      
93 .Kok.2          .              .             1.0000   -169280.0000      
93 .Kok.3          .              .             1.0000   -169280.0000      
94 .Mat.1          .              .             1.0000   -864900.0000      
94 .Mat.2          .              .             1.0000   -864900.0000      
94 .Mat.3          .              .             1.0000   -864900.0000      
94 .Kut.1          .              .             1.0000   -432450.0000      
94 .Kut.2          .              .             1.0000   -432450.0000      
94 .Kut.3          .              .             1.0000   -432450.0000      
94 .Kot.1          .              .             1.0000   -2.594700E+6      
94 .Kot.2          .              .             1.0000   -2.594700E+6      
94 .Kot.3          .              .             1.0000   -2.594700E+6      
94 .Mak.1          .              .             1.0000   -172980.0000      
94 .Mak.2          .              .             1.0000   -172980.0000      
94 .Mak.3          .              .             1.0000   -172980.0000      
94 .Kuk.1          .              .             1.0000   -259470.0000      
94 .Kuk.2          .              .             1.0000   -259470.0000      
94 .Kuk.3          .              .             1.0000   -259470.0000      
94 .Kok.1          .              .             1.0000   -172980.0000      
94 .Kok.2          .              .             1.0000   -172980.0000      
94 .Kok.3          .              .             1.0000   -172980.0000      
95 .Mat.1          .              .             1.0000   -883600.0000      
95 .Mat.2          .              .             1.0000   -883600.0000      
95 .Mat.3          .              .             1.0000   -883600.0000      
95 .Kut.1          .              .             1.0000   -441800.0000      
95 .Kut.2          .              .             1.0000   -441800.0000      
95 .Kut.3          .              .             1.0000   -441800.0000      
95 .Kot.1          .              .             1.0000   -2.650800E+6      
95 .Kot.2          .              .             1.0000   -2.650800E+6      
95 .Kot.3          .              .             1.0000   -2.650800E+6      
95 .Mak.1          .              .             1.0000   -176720.0000      
95 .Mak.2          .              .             1.0000   -176720.0000      
95 .Mak.3          .              .             1.0000   -176720.0000      
95 .Kuk.1          .              .             1.0000   -265080.0000      
95 .Kuk.2          .              .             1.0000   -265080.0000      
95 .Kuk.3          .              .             1.0000   -265080.0000      
95 .Kok.1          .              .             1.0000   -176720.0000      
95 .Kok.2          .              .             1.0000   -176720.0000      
95 .Kok.3          .              .             1.0000   -176720.0000      
96 .Mat.1          .              .             1.0000   -902500.0000      
96 .Mat.2          .              .             1.0000   -902500.0000      
96 .Mat.3          .              .             1.0000   -902500.0000      
96 .Kut.1          .              .             1.0000   -451250.0000      
96 .Kut.2          .              .             1.0000   -451250.0000      
96 .Kut.3          .              .             1.0000   -451250.0000      
96 .Kot.1          .              .             1.0000   -2.707500E+6      
96 .Kot.2          .              .             1.0000   -2.707500E+6      
96 .Kot.3          .              .             1.0000   -2.707500E+6      
96 .Mak.1          .              .             1.0000   -180500.0000      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 22:25:36 Page 142
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 416


     VAR r  1 if we buy n boats of timber i, 0 otherwise

                 LOWER          LEVEL          UPPER         MARGINAL

96 .Mak.2          .              .             1.0000   -180500.0000      
96 .Mak.3          .              .             1.0000   -180500.0000      
96 .Kuk.1          .              .             1.0000   -270750.0000      
96 .Kuk.2          .              .             1.0000   -270750.0000      
96 .Kuk.3          .              .             1.0000   -270750.0000      
96 .Kok.1          .              .             1.0000   -180500.0000      
96 .Kok.2          .              .             1.0000   -180500.0000      
96 .Kok.3          .              .             1.0000   -180500.0000      
97 .Mat.1          .              .             1.0000   -921600.0000      
97 .Mat.2          .              .             1.0000   -921600.0000      
97 .Mat.3          .              .             1.0000   -921600.0000      
97 .Kut.1          .              .             1.0000   -460800.0000      
97 .Kut.2          .              .             1.0000   -460800.0000      
97 .Kut.3          .              .             1.0000   -460800.0000      
97 .Kot.1          .              .             1.0000   -2.764800E+6      
97 .Kot.2          .              .             1.0000   -2.764800E+6      
97 .Kot.3          .              .             1.0000   -2.764800E+6      
97 .Mak.1          .              .             1.0000   -184320.0000      
97 .Mak.2          .              .             1.0000   -184320.0000      
97 .Mak.3          .              .             1.0000   -184320.0000      
97 .Kuk.1          .              .             1.0000   -276480.0000      
97 .Kuk.2          .              .             1.0000   -276480.0000      
97 .Kuk.3          .              .             1.0000   -276480.0000      
97 .Kok.1          .              .             1.0000   -184320.0000      
97 .Kok.2          .              .             1.0000   -184320.0000      
97 .Kok.3          .              .             1.0000   -184320.0000      
98 .Mat.1          .              .             1.0000   -940900.0000      
98 .Mat.2          .              .             1.0000   -940900.0000      
98 .Mat.3          .              .             1.0000   -940900.0000      
98 .Kut.1          .              .             1.0000   -470450.0000      
98 .Kut.2          .              .             1.0000   -470450.0000      
98 .Kut.3          .              .             1.0000   -470450.0000      
98 .Kot.1          .              .             1.0000   -2.822700E+6      
98 .Kot.2          .              .             1.0000   -2.822700E+6      
98 .Kot.3          .              .             1.0000   -2.822700E+6      
98 .Mak.1          .              .             1.0000   -188180.0000      
98 .Mak.2          .              .             1.0000   -188180.0000      
98 .Mak.3          .              .             1.0000   -188180.0000      
98 .Kuk.1          .              .             1.0000   -282270.0000      
98 .Kuk.2          .              .             1.0000   -282270.0000      
98 .Kuk.3          .              .             1.0000   -282270.0000      
98 .Kok.1          .              .             1.0000   -188180.0000      
98 .Kok.2          .              .             1.0000   -188180.0000      
98 .Kok.3          .              .             1.0000   -188180.0000      
99 .Mat.1          .              .             1.0000   -960400.0000      
99 .Mat.2          .              .             1.0000   -960400.0000      
99 .Mat.3          .              .             1.0000   -960400.0000      
99 .Kut.1          .              .             1.0000   -480200.0000      
99 .Kut.2          .              .             1.0000   -480200.0000      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 22:25:36 Page 143
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 416


     VAR r  1 if we buy n boats of timber i, 0 otherwise

                 LOWER          LEVEL          UPPER         MARGINAL

99 .Kut.3          .              .             1.0000   -480200.0000      
99 .Kot.1          .              .             1.0000   -2.881200E+6      
99 .Kot.2          .              .             1.0000   -2.881200E+6      
99 .Kot.3          .              .             1.0000   -2.881200E+6      
99 .Mak.1          .              .             1.0000   -192080.0000      
99 .Mak.2          .              .             1.0000   -192080.0000      
99 .Mak.3          .              .             1.0000   -192080.0000      
99 .Kuk.1          .              .             1.0000   -288120.0000      
99 .Kuk.2          .              .             1.0000   -288120.0000      
99 .Kuk.3          .              .             1.0000   -288120.0000      
99 .Kok.1          .              .             1.0000   -192080.0000      
99 .Kok.2          .              .             1.0000   -192080.0000      
99 .Kok.3          .              .             1.0000   -192080.0000      
100.Mat.1          .              .             1.0000   -980100.0000      
100.Mat.2          .              .             1.0000   -980100.0000      
100.Mat.3          .              .             1.0000   -980100.0000      
100.Kut.1          .              .             1.0000   -490050.0000      
100.Kut.2          .              .             1.0000   -490050.0000      
100.Kut.3          .              .             1.0000   -490050.0000      
100.Kot.1          .              .             1.0000   -2.940300E+6      
100.Kot.2          .              .             1.0000   -2.940300E+6      
100.Kot.3          .              .             1.0000   -2.940300E+6      
100.Mak.1          .              .             1.0000   -196020.0000      
100.Mak.2          .              .             1.0000   -196020.0000      
100.Mak.3          .              .             1.0000   -196020.0000      
100.Kuk.1          .              .             1.0000   -294030.0000      
100.Kuk.2          .              .             1.0000   -294030.0000      
100.Kuk.3          .              .             1.0000   -294030.0000      
100.Kok.1          .              .             1.0000   -196020.0000      
100.Kok.2          .              .             1.0000   -196020.0000      
100.Kok.3          .              .             1.0000   -196020.0000      
101.Mat.1          .              .             1.0000   -1.000000E+6      
101.Mat.2          .              .             1.0000   -1.000000E+6      
101.Mat.3          .              .             1.0000   -1.000000E+6      
101.Kut.1          .              .             1.0000   -500000.0000      
101.Kut.2          .              .             1.0000   -500000.0000      
101.Kut.3          .              .             1.0000   -500000.0000      
101.Kot.1          .              .             1.0000   -3.000000E+6      
101.Kot.2          .              .             1.0000   -3.000000E+6      
101.Kot.3          .              .             1.0000   -3.000000E+6      
101.Mak.1          .              .             1.0000   -200000.0000      
101.Mak.2          .              .             1.0000   -200000.0000      
101.Mak.3          .              .             1.0000   -200000.0000      
101.Kuk.1          .              .             1.0000   -300000.0000      
101.Kuk.2          .              .             1.0000   -300000.0000      
101.Kuk.3          .              .             1.0000   -300000.0000      
101.Kok.1          .              .             1.0000   -200000.0000      
101.Kok.2          .              .             1.0000   -200000.0000      
101.Kok.3          .              .             1.0000   -200000.0000      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 22:25:36 Page 144
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 416


     VAR r  1 if we buy n boats of timber i, 0 otherwise

                 LOWER          LEVEL          UPPER         MARGINAL

102.Mat.1          .              .             1.0000   -1.020100E+6      
102.Mat.2          .              .             1.0000   -1.020100E+6      
102.Mat.3          .              .             1.0000   -1.020100E+6      
102.Kut.1          .              .             1.0000   -510050.0000      
102.Kut.2          .              .             1.0000   -510050.0000      
102.Kut.3          .              .             1.0000   -510050.0000      
102.Kot.1          .              .             1.0000   -3.060300E+6      
102.Kot.2          .              .             1.0000   -3.060300E+6      
102.Kot.3          .              .             1.0000   -3.060300E+6      
102.Mak.1          .              .             1.0000   -204020.0000      
102.Mak.2          .              .             1.0000   -204020.0000      
102.Mak.3          .              .             1.0000   -204020.0000      
102.Kuk.1          .              .             1.0000   -306030.0000      
102.Kuk.2          .              .             1.0000   -306030.0000      
102.Kuk.3          .              .             1.0000   -306030.0000      
102.Kok.1          .              .             1.0000   -204020.0000      
102.Kok.2          .              .             1.0000   -204020.0000      
102.Kok.3          .              .             1.0000   -204020.0000      
103.Mat.1          .              .             1.0000   -1.040400E+6      
103.Mat.2          .              .             1.0000   -1.040400E+6      
103.Mat.3          .              .             1.0000   -1.040400E+6      
103.Kut.1          .              .             1.0000   -520200.0000      
103.Kut.2          .              .             1.0000   -520200.0000      
103.Kut.3          .              .             1.0000   -520200.0000      
103.Kot.1          .              .             1.0000   -3.121200E+6      
103.Kot.2          .              .             1.0000   -3.121200E+6      
103.Kot.3          .              .             1.0000   -3.121200E+6      
103.Mak.1          .              .             1.0000   -208080.0000      
103.Mak.2          .              .             1.0000   -208080.0000      
103.Mak.3          .              .             1.0000   -208080.0000      
103.Kuk.1          .              .             1.0000   -312120.0000      
103.Kuk.2          .              .             1.0000   -312120.0000      
103.Kuk.3          .              .             1.0000   -312120.0000      
103.Kok.1          .              .             1.0000   -208080.0000      
103.Kok.2          .              .             1.0000   -208080.0000      
103.Kok.3          .              .             1.0000   -208080.0000      
104.Mat.1          .              .             1.0000   -1.060900E+6      
104.Mat.2          .              .             1.0000   -1.060900E+6      
104.Mat.3          .              .             1.0000   -1.060900E+6      
104.Kut.1          .              .             1.0000   -530450.0000      
104.Kut.2          .              .             1.0000   -530450.0000      
104.Kut.3          .              .             1.0000   -530450.0000      
104.Kot.1          .              .             1.0000   -3.182700E+6      
104.Kot.2          .              .             1.0000   -3.182700E+6      
104.Kot.3          .              .             1.0000   -3.182700E+6      
104.Mak.1          .              .             1.0000   -212180.0000      
104.Mak.2          .              .             1.0000   -212180.0000      
104.Mak.3          .              .             1.0000   -212180.0000      
104.Kuk.1          .              .             1.0000   -318270.0000      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 22:25:36 Page 145
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 416


     VAR r  1 if we buy n boats of timber i, 0 otherwise

                 LOWER          LEVEL          UPPER         MARGINAL

104.Kuk.2          .              .             1.0000   -318270.0000      
104.Kuk.3          .              .             1.0000   -318270.0000      
104.Kok.1          .              .             1.0000   -212180.0000      
104.Kok.2          .              .             1.0000   -212180.0000      
104.Kok.3          .              .             1.0000   -212180.0000      
105.Mat.1          .              .             1.0000   -1.081600E+6      
105.Mat.2          .              .             1.0000   -1.081600E+6      
105.Mat.3          .              .             1.0000   -1.081600E+6      
105.Kut.1          .              .             1.0000   -540800.0000      
105.Kut.2          .              .             1.0000   -540800.0000      
105.Kut.3          .              .             1.0000   -540800.0000      
105.Kot.1          .              .             1.0000   -3.244800E+6      
105.Kot.2          .              .             1.0000   -3.244800E+6      
105.Kot.3          .              .             1.0000   -3.244800E+6      
105.Mak.1          .              .             1.0000   -216320.0000      
105.Mak.2          .              .             1.0000   -216320.0000      
105.Mak.3          .              .             1.0000   -216320.0000      
105.Kuk.1          .              .             1.0000   -324480.0000      
105.Kuk.2          .              .             1.0000   -324480.0000      
105.Kuk.3          .              .             1.0000   -324480.0000      
105.Kok.1          .              .             1.0000   -216320.0000      
105.Kok.2          .              .             1.0000   -216320.0000      
105.Kok.3          .              .             1.0000   -216320.0000      
106.Mat.1          .              .             1.0000   -1.102500E+6      
106.Mat.2          .              .             1.0000   -1.102500E+6      
106.Mat.3          .              .             1.0000   -1.102500E+6      
106.Kut.1          .              .             1.0000   -551250.0000      
106.Kut.2          .              .             1.0000   -551250.0000      
106.Kut.3          .              .             1.0000   -551250.0000      
106.Kot.1          .              .             1.0000   -3.307500E+6      
106.Kot.2          .              .             1.0000   -3.307500E+6      
106.Kot.3          .              .             1.0000   -3.307500E+6      
106.Mak.1          .              .             1.0000   -220500.0000      
106.Mak.2          .              .             1.0000   -220500.0000      
106.Mak.3          .              .             1.0000   -220500.0000      
106.Kuk.1          .              .             1.0000   -330750.0000      
106.Kuk.2          .              .             1.0000   -330750.0000      
106.Kuk.3          .              .             1.0000   -330750.0000      
106.Kok.1          .              .             1.0000   -220500.0000      
106.Kok.2          .              .             1.0000   -220500.0000      
106.Kok.3          .              .             1.0000   -220500.0000      
107.Mat.1          .              .             1.0000   -1.123600E+6      
107.Mat.2          .              .             1.0000   -1.123600E+6      
107.Mat.3          .              .             1.0000   -1.123600E+6      
107.Kut.1          .              .             1.0000   -561800.0000      
107.Kut.2          .              .             1.0000   -561800.0000      
107.Kut.3          .              .             1.0000   -561800.0000      
107.Kot.1          .              .             1.0000   -3.370800E+6      
107.Kot.2          .              .             1.0000   -3.370800E+6      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 22:25:36 Page 146
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 416


     VAR r  1 if we buy n boats of timber i, 0 otherwise

                 LOWER          LEVEL          UPPER         MARGINAL

107.Kot.3          .              .             1.0000   -3.370800E+6      
107.Mak.1          .              .             1.0000   -224720.0000      
107.Mak.2          .              .             1.0000   -224720.0000      
107.Mak.3          .              .             1.0000   -224720.0000      
107.Kuk.1          .              .             1.0000   -337080.0000      
107.Kuk.2          .              .             1.0000   -337080.0000      
107.Kuk.3          .              .             1.0000   -337080.0000      
107.Kok.1          .              .             1.0000   -224720.0000      
107.Kok.2          .              .             1.0000   -224720.0000      
107.Kok.3          .              .             1.0000   -224720.0000      

---- VAR u  1 if we use n boats for product j shiping to region k, 0 otherwise

                    LOWER          LEVEL          UPPER         MARGINAL

1 .Mas .EU.1          .              .             1.0000         EPS         
1 .Mas .EU.2          .              .             1.0000         EPS         
1 .Mas .EU.3          .              .             1.0000         EPS         
1 .Mas .IE.1          .             1.0000         1.0000         EPS         
1 .Mas .IE.2          .             1.0000         1.0000         EPS         
1 .Mas .IE.3          .             1.0000         1.0000         EPS         
1 .Mas .PA.1          .              .             1.0000         EPS         
1 .Mas .PA.2          .             1.0000         1.0000         EPS         
1 .Mas .PA.3          .             1.0000         1.0000         EPS         
1 .Mas .KI.1          .              .             1.0000         EPS         
1 .Mas .KI.2          .              .             1.0000         EPS         
1 .Mas .KI.3          .              .             1.0000         EPS         
1 .Kus .EU.1          .             1.0000         1.0000         EPS         
1 .Kus .EU.2          .             1.0000         1.0000         EPS         
1 .Kus .EU.3          .             1.0000         1.0000         EPS         
1 .Kus .IE.1          .             1.0000         1.0000         EPS         
1 .Kus .IE.2          .             1.0000         1.0000         EPS         
1 .Kus .IE.3          .             1.0000         1.0000         EPS         
1 .Kus .PA.1          .             1.0000         1.0000         EPS         
1 .Kus .PA.2          .             1.0000         1.0000         EPS         
1 .Kus .PA.3          .             1.0000         1.0000         EPS         
1 .Kus .KI.1          .             1.0000         1.0000         EPS         
1 .Kus .KI.2          .             1.0000         1.0000         EPS         
1 .Kus .KI.3          .             1.0000         1.0000         EPS         
1 .Kos .EU.1          .             1.0000         1.0000         EPS         
1 .Kos .EU.2          .             1.0000         1.0000         EPS         
1 .Kos .EU.3          .             1.0000         1.0000         EPS         
1 .Kos .IE.1          .             1.0000         1.0000         EPS         
1 .Kos .IE.2          .             1.0000         1.0000         EPS         
1 .Kos .IE.3          .             1.0000         1.0000         EPS         
1 .Kos .PA.1          .             1.0000         1.0000         EPS         
1 .Kos .PA.2          .             1.0000         1.0000         EPS         
1 .Kos .PA.3          .             1.0000         1.0000         EPS         
1 .Kos .KI.1          .             1.0000         1.0000         EPS         
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 22:25:36 Page 147
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 416


     VAR u  1 if we use n boats for product j shiping to region k, 0 otherwise

                    LOWER          LEVEL          UPPER         MARGINAL

1 .Kos .KI.2          .             1.0000         1.0000         EPS         
1 .Kos .KI.3          .              .             1.0000         EPS         
1 .Kuv .EU.1          .              .             1.0000         EPS         
1 .Kuv .EU.2          .              .             1.0000         EPS         
1 .Kuv .EU.3          .              .             1.0000         EPS         
1 .Kuv .IE.1          .             1.0000         1.0000         EPS         
1 .Kuv .IE.2          .             1.0000         1.0000         EPS         
1 .Kuv .IE.3          .             1.0000         1.0000         EPS         
1 .Kuv .PA.1          .             1.0000         1.0000         EPS         
1 .Kuv .PA.2          .             1.0000         1.0000         EPS         
1 .Kuv .PA.3          .             1.0000         1.0000         EPS         
1 .Kuv .KI.1          .             1.0000         1.0000         EPS         
1 .Kuv .KI.2          .             1.0000         1.0000         EPS         
1 .Kuv .KI.3          .             1.0000         1.0000         EPS         
1 .Kov .EU.1          .              .             1.0000         EPS         
1 .Kov .EU.2          .              .             1.0000         EPS         
1 .Kov .EU.3          .              .             1.0000         EPS         
1 .Kov .IE.1          .             1.0000         1.0000         EPS         
1 .Kov .IE.2          .             1.0000         1.0000         EPS         
1 .Kov .IE.3          .             1.0000         1.0000         EPS         
1 .Kov .PA.1          .             1.0000         1.0000         EPS         
1 .Kov .PA.2          .             1.0000         1.0000         EPS         
1 .Kov .PA.3          .             1.0000         1.0000         EPS         
1 .Kov .KI.1          .             1.0000         1.0000         EPS         
1 .Kov .KI.2          .             1.0000         1.0000         EPS         
1 .Kov .KI.3          .             1.0000         1.0000         EPS         
1 .Hsel.EU.1          .             1.0000         1.0000         EPS         
1 .Hsel.EU.2          .             1.0000         1.0000         EPS         
1 .Hsel.EU.3          .             1.0000         1.0000         EPS         
1 .Hsel.IE.1          .              .             1.0000         EPS         
1 .Hsel.IE.2          .             1.0000         1.0000         EPS         
1 .Hsel.IE.3          .             1.0000         1.0000         EPS         
1 .Hsel.PA.1          .             1.0000         1.0000         EPS         
1 .Hsel.PA.2          .             1.0000         1.0000         EPS         
1 .Hsel.PA.3          .             1.0000         1.0000         EPS         
1 .Hsel.KI.1          .              .             1.0000         EPS         
1 .Hsel.KI.2          .             1.0000         1.0000         EPS         
1 .Hsel.KI.3          .             1.0000         1.0000         EPS         
1 .Lsel.EU.1          .              .             1.0000         EPS         
1 .Lsel.EU.2          .             1.0000         1.0000         EPS         
1 .Lsel.EU.3          .             1.0000         1.0000         EPS         
1 .Lsel.IE.1          .              .             1.0000         EPS         
1 .Lsel.IE.2          .              .             1.0000         EPS         
1 .Lsel.IE.3          .              .             1.0000         EPS         
1 .Lsel.PA.1          .             1.0000         1.0000         EPS         
1 .Lsel.PA.2          .             1.0000         1.0000         EPS         
1 .Lsel.PA.3          .             1.0000         1.0000         EPS         
1 .Lsel.KI.1          .              .             1.0000         EPS         
1 .Lsel.KI.2          .             1.0000         1.0000         EPS         
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 22:25:36 Page 148
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 416


     VAR u  1 if we use n boats for product j shiping to region k, 0 otherwise

                    LOWER          LEVEL          UPPER         MARGINAL

1 .Lsel.KI.3          .             1.0000         1.0000         EPS         
1 .Pap .EU.1          .              .             1.0000         EPS         
1 .Pap .EU.2          .              .             1.0000         EPS         
1 .Pap .EU.3          .              .             1.0000         EPS         
1 .Pap .IE.1          .              .             1.0000         EPS         
1 .Pap .IE.2          .              .             1.0000         EPS         
1 .Pap .IE.3          .              .             1.0000         EPS         
1 .Pap .PA.1          .             1.0000         1.0000         EPS         
1 .Pap .PA.2          .              .             1.0000         EPS         
1 .Pap .PA.3          .              .             1.0000         EPS         
1 .Pap .KI.1          .              .             1.0000         EPS         
1 .Pap .KI.2          .              .             1.0000         EPS         
1 .Pap .KI.3          .              .             1.0000         EPS         
2 .Mas .EU.1          .              .             1.0000     15600.0000      
2 .Mas .EU.2          .              .             1.0000     14820.0000      
2 .Mas .EU.3          .              .             1.0000     14079.0000      
2 .Mas .IE.1          .              .             1.0000     12000.0000      
2 .Mas .IE.2          .              .             1.0000     11400.0000      
2 .Mas .IE.3          .              .             1.0000     10830.0000      
2 .Mas .PA.1          .             1.0000         1.0000     12800.0000      
2 .Mas .PA.2          .              .             1.0000     12160.0000      
2 .Mas .PA.3          .              .             1.0000     11552.0000      
2 .Mas .KI.1          .             1.0000         1.0000     13500.0000      
2 .Mas .KI.2          .             1.0000         1.0000     12825.0000      
2 .Mas .KI.3          .             1.0000         1.0000     12183.7500      
2 .Kus .EU.1          .              .             1.0000         EPS         
2 .Kus .EU.2          .              .             1.0000         EPS         
2 .Kus .EU.3          .              .             1.0000         EPS         
2 .Kus .IE.1          .              .             1.0000         EPS         
2 .Kus .IE.2          .              .             1.0000         EPS         
2 .Kus .IE.3          .              .             1.0000         EPS         
2 .Kus .PA.1          .              .             1.0000         EPS         
2 .Kus .PA.2          .              .             1.0000         EPS         
2 .Kus .PA.3          .              .             1.0000         EPS         
2 .Kus .KI.1          .              .             1.0000         EPS         
2 .Kus .KI.2          .              .             1.0000         EPS         
2 .Kus .KI.3          .              .             1.0000         EPS         
2 .Kos .EU.1          .              .             1.0000     11600.0000      
2 .Kos .EU.2          .              .             1.0000     11020.0000      
2 .Kos .EU.3          .              .             1.0000     10469.0000      
2 .Kos .IE.1          .              .             1.0000     12000.0000      
2 .Kos .IE.2          .              .             1.0000     11400.0000      
2 .Kos .IE.3          .              .             1.0000     10830.0000      
2 .Kos .PA.1          .              .             1.0000     12800.0000      
2 .Kos .PA.2          .              .             1.0000     12160.0000      
2 .Kos .PA.3          .              .             1.0000     11552.0000      
2 .Kos .KI.1          .              .             1.0000     13500.0000      
2 .Kos .KI.2          .              .             1.0000     12825.0000      
2 .Kos .KI.3          .             1.0000         1.0000     12183.7500      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 22:25:36 Page 149
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 416


     VAR u  1 if we use n boats for product j shiping to region k, 0 otherwise

                    LOWER          LEVEL          UPPER         MARGINAL

2 .Kuv .EU.1          .              .             1.0000     43600.0000      
2 .Kuv .EU.2          .              .             1.0000     41420.0000      
2 .Kuv .EU.3          .              .             1.0000     39349.0000      
2 .Kuv .IE.1          .              .             1.0000     37000.0000      
2 .Kuv .IE.2          .              .             1.0000     35150.0000      
2 .Kuv .IE.3          .              .             1.0000     33392.5000      
2 .Kuv .PA.1          .              .             1.0000     34800.0000      
2 .Kuv .PA.2          .              .             1.0000     33060.0000      
2 .Kuv .PA.3          .              .             1.0000     31407.0000      
2 .Kuv .KI.1          .              .             1.0000     33500.0000      
2 .Kuv .KI.2          .              .             1.0000     31825.0000      
2 .Kuv .KI.3          .              .             1.0000     30233.7500      
2 .Kov .EU.1          .              .             1.0000     42600.0000      
2 .Kov .EU.2          .              .             1.0000     40470.0000      
2 .Kov .EU.3          .             1.0000         1.0000     38446.5000      
2 .Kov .IE.1          .              .             1.0000     40000.0000      
2 .Kov .IE.2          .              .             1.0000     38000.0000      
2 .Kov .IE.3          .              .             1.0000     36100.0000      
2 .Kov .PA.1          .              .             1.0000     37800.0000      
2 .Kov .PA.2          .              .             1.0000     35910.0000      
2 .Kov .PA.3          .              .             1.0000     34114.5000      
2 .Kov .KI.1          .              .             1.0000     36500.0000      
2 .Kov .KI.2          .              .             1.0000     34675.0000      
2 .Kov .KI.3          .              .             1.0000     32941.2500      
2 .Hsel.EU.1          .              .             1.0000     22800.0000      
2 .Hsel.EU.2          .              .             1.0000     21660.0000      
2 .Hsel.EU.3          .              .             1.0000     20577.0000      
2 .Hsel.IE.1          .              .             1.0000     24600.0000      
2 .Hsel.IE.2          .              .             1.0000     23370.0000      
2 .Hsel.IE.3          .              .             1.0000     22201.5000      
2 .Hsel.PA.1          .              .             1.0000     22500.0000      
2 .Hsel.PA.2          .              .             1.0000     21375.0000      
2 .Hsel.PA.3          .              .             1.0000     20306.2500      
2 .Hsel.KI.1          .              .             1.0000     25400.0000      
2 .Hsel.KI.2          .              .             1.0000     24130.0000      
2 .Hsel.KI.3          .              .             1.0000     22923.5000      
2 .Lsel.EU.1          .              .             1.0000     24700.0000      
2 .Lsel.EU.2          .              .             1.0000     23465.0000      
2 .Lsel.EU.3          .              .             1.0000     22291.7500      
2 .Lsel.IE.1          .              .             1.0000     27800.0000      
2 .Lsel.IE.2          .              .             1.0000     26410.0000      
2 .Lsel.IE.3          .              .             1.0000     25089.5000      
2 .Lsel.PA.1          .              .             1.0000     22500.0000      
2 .Lsel.PA.2          .              .             1.0000     21375.0000      
2 .Lsel.PA.3          .              .             1.0000     20306.2500      
2 .Lsel.KI.1          .             1.0000         1.0000     24300.0000      
2 .Lsel.KI.2          .              .             1.0000     23085.0000      
2 .Lsel.KI.3          .              .             1.0000     21930.7500      
2 .Pap .EU.1          .              .             1.0000     44600.0000      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 22:25:36 Page 150
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 416


     VAR u  1 if we use n boats for product j shiping to region k, 0 otherwise

                    LOWER          LEVEL          UPPER         MARGINAL

2 .Pap .EU.2          .              .             1.0000     42370.0000      
2 .Pap .EU.3          .              .             1.0000     40251.5000      
2 .Pap .IE.1          .              .             1.0000     46000.0000      
2 .Pap .IE.2          .              .             1.0000     43700.0000      
2 .Pap .IE.3          .              .             1.0000     41515.0000      
2 .Pap .PA.1          .              .             1.0000     41800.0000      
2 .Pap .PA.2          .              .             1.0000     39710.0000      
2 .Pap .PA.3          .             1.0000         1.0000     37724.5000      
2 .Pap .KI.1          .              .             1.0000     46500.0000      
2 .Pap .KI.2          .              .             1.0000     44175.0000      
2 .Pap .KI.3          .              .             1.0000     41966.2500      
3 .Mas .EU.1          .              .             1.0000     30400.0000      
3 .Mas .EU.2          .              .             1.0000     28880.0000      
3 .Mas .EU.3          .              .             1.0000     27436.0000      
3 .Mas .IE.1          .              .             1.0000     22000.0000      
3 .Mas .IE.2          .              .             1.0000     20900.0000      
3 .Mas .IE.3          .              .             1.0000     19855.0000      
3 .Mas .PA.1          .              .             1.0000     23200.0000      
3 .Mas .PA.2          .              .             1.0000     22040.0000      
3 .Mas .PA.3          .              .             1.0000     20938.0000      
3 .Mas .KI.1          .              .             1.0000     24000.0000      
3 .Mas .KI.2          .              .             1.0000     22800.0000      
3 .Mas .KI.3          .              .             1.0000     21660.0000      
3 .Kus .EU.1          .              .             1.0000         EPS         
3 .Kus .EU.2          .              .             1.0000         EPS         
3 .Kus .EU.3          .              .             1.0000         EPS         
3 .Kus .IE.1          .              .             1.0000         EPS         
3 .Kus .IE.2          .              .             1.0000         EPS         
3 .Kus .IE.3          .              .             1.0000         EPS         
3 .Kus .PA.1          .              .             1.0000         EPS         
3 .Kus .PA.2          .              .             1.0000         EPS         
3 .Kus .PA.3          .              .             1.0000         EPS         
3 .Kus .KI.1          .              .             1.0000         EPS         
3 .Kus .KI.2          .              .             1.0000         EPS         
3 .Kus .KI.3          .              .             1.0000         EPS         
3 .Kos .EU.1          .              .             1.0000     20400.0000      
3 .Kos .EU.2          .              .             1.0000     19380.0000      
3 .Kos .EU.3          .              .             1.0000     18411.0000      
3 .Kos .IE.1          .              .             1.0000     20000.0000      
3 .Kos .IE.2          .              .             1.0000     19000.0000      
3 .Kos .IE.3          .              .             1.0000     18050.0000      
3 .Kos .PA.1          .              .             1.0000     21200.0000      
3 .Kos .PA.2          .              .             1.0000     20140.0000      
3 .Kos .PA.3          .              .             1.0000     19133.0000      
3 .Kos .KI.1          .              .             1.0000     22000.0000      
3 .Kos .KI.2          .              .             1.0000     20900.0000      
3 .Kos .KI.3          .              .             1.0000     19855.0000      
3 .Kuv .EU.1          .              .             1.0000     86400.0000      
3 .Kuv .EU.2          .              .             1.0000     82080.0000      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 22:25:36 Page 151
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 416


     VAR u  1 if we use n boats for product j shiping to region k, 0 otherwise

                    LOWER          LEVEL          UPPER         MARGINAL

3 .Kuv .EU.3          .              .             1.0000     77976.0000      
3 .Kuv .IE.1          .              .             1.0000     72000.0000      
3 .Kuv .IE.2          .              .             1.0000     68400.0000      
3 .Kuv .IE.3          .              .             1.0000     64980.0000      
3 .Kuv .PA.1          .              .             1.0000     67200.0000      
3 .Kuv .PA.2          .              .             1.0000     63840.0000      
3 .Kuv .PA.3          .              .             1.0000     60648.0000      
3 .Kuv .KI.1          .              .             1.0000     64000.0000      
3 .Kuv .KI.2          .              .             1.0000     60800.0000      
3 .Kuv .KI.3          .              .             1.0000     57760.0000      
3 .Kov .EU.1          .              .             1.0000     84400.0000      
3 .Kov .EU.2          .             1.0000         1.0000     80180.0000      
3 .Kov .EU.3          .              .             1.0000     76171.0000      
3 .Kov .IE.1          .              .             1.0000     78000.0000      
3 .Kov .IE.2          .              .             1.0000     74100.0000      
3 .Kov .IE.3          .              .             1.0000     70395.0000      
3 .Kov .PA.1          .              .             1.0000     73200.0000      
3 .Kov .PA.2          .              .             1.0000     69540.0000      
3 .Kov .PA.3          .              .             1.0000     66063.0000      
3 .Kov .KI.1          .              .             1.0000     70000.0000      
3 .Kov .KI.2          .              .             1.0000     66500.0000      
3 .Kov .KI.3          .              .             1.0000     63175.0000      
3 .Hsel.EU.1          .              .             1.0000     45200.0000      
3 .Hsel.EU.2          .              .             1.0000     42940.0000      
3 .Hsel.EU.3          .              .             1.0000     40793.0000      
3 .Hsel.IE.1          .              .             1.0000     48400.0000      
3 .Hsel.IE.2          .              .             1.0000     45980.0000      
3 .Hsel.IE.3          .              .             1.0000     43681.0000      
3 .Hsel.PA.1          .              .             1.0000     44000.0000      
3 .Hsel.PA.2          .              .             1.0000     41800.0000      
3 .Hsel.PA.3          .              .             1.0000     39710.0000      
3 .Hsel.KI.1          .              .             1.0000     49600.0000      
3 .Hsel.KI.2          .              .             1.0000     47120.0000      
3 .Hsel.KI.3          .              .             1.0000     44764.0000      
3 .Lsel.EU.1          .             1.0000         1.0000     48800.0000      
3 .Lsel.EU.2          .              .             1.0000     46360.0000      
3 .Lsel.EU.3          .              .             1.0000     44042.0000      
3 .Lsel.IE.1          .              .             1.0000     55200.0000      
3 .Lsel.IE.2          .              .             1.0000     52440.0000      
3 .Lsel.IE.3          .              .             1.0000     49818.0000      
3 .Lsel.PA.1          .              .             1.0000     44000.0000      
3 .Lsel.PA.2          .              .             1.0000     41800.0000      
3 .Lsel.PA.3          .              .             1.0000     39710.0000      
3 .Lsel.KI.1          .              .             1.0000     47200.0000      
3 .Lsel.KI.2          .              .             1.0000     44840.0000      
3 .Lsel.KI.3          .              .             1.0000     42598.0000      
3 .Pap .EU.1          .              .             1.0000     88400.0000      
3 .Pap .EU.2          .              .             1.0000     83980.0000      
3 .Pap .EU.3          .              .             1.0000     79781.0000      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 22:25:36 Page 152
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 416


     VAR u  1 if we use n boats for product j shiping to region k, 0 otherwise

                    LOWER          LEVEL          UPPER         MARGINAL

3 .Pap .IE.1          .             1.0000         1.0000     90000.0000      
3 .Pap .IE.2          .              .             1.0000     85500.0000      
3 .Pap .IE.3          .              .             1.0000     81225.0000      
3 .Pap .PA.1          .              .             1.0000     81200.0000      
3 .Pap .PA.2          .             1.0000         1.0000     77140.0000      
3 .Pap .PA.3          .              .             1.0000     73283.0000      
3 .Pap .KI.1          .             1.0000         1.0000     90000.0000      
3 .Pap .KI.2          .              .             1.0000     85500.0000      
3 .Pap .KI.3          .              .             1.0000     81225.0000      
4 .Mas .EU.1          .              .             1.0000     44400.0000      
4 .Mas .EU.2          .              .             1.0000     42180.0000      
4 .Mas .EU.3          .             1.0000         1.0000     40071.0000      
4 .Mas .IE.1          .              .             1.0000     30000.0000      
4 .Mas .IE.2          .              .             1.0000     28500.0000      
4 .Mas .IE.3          .              .             1.0000     27075.0000      
4 .Mas .PA.1          .              .             1.0000     31200.0000      
4 .Mas .PA.2          .              .             1.0000     29640.0000      
4 .Mas .PA.3          .              .             1.0000     28158.0000      
4 .Mas .KI.1          .              .             1.0000     31500.0000      
4 .Mas .KI.2          .              .             1.0000     29925.0000      
4 .Mas .KI.3          .              .             1.0000     28428.7500      
4 .Kus .EU.1          .              .             1.0000         EPS         
4 .Kus .EU.2          .              .             1.0000         EPS         
4 .Kus .EU.3          .              .             1.0000         EPS         
4 .Kus .IE.1          .              .             1.0000         EPS         
4 .Kus .IE.2          .              .             1.0000         EPS         
4 .Kus .IE.3          .              .             1.0000         EPS         
4 .Kus .PA.1          .              .             1.0000         EPS         
4 .Kus .PA.2          .              .             1.0000         EPS         
4 .Kus .PA.3          .              .             1.0000         EPS         
4 .Kus .KI.1          .              .             1.0000         EPS         
4 .Kus .KI.2          .              .             1.0000         EPS         
4 .Kus .KI.3          .              .             1.0000         EPS         
4 .Kos .EU.1          .              .             1.0000     26400.0000      
4 .Kos .EU.2          .              .             1.0000     25080.0000      
4 .Kos .EU.3          .              .             1.0000     23826.0000      
4 .Kos .IE.1          .              .             1.0000     24000.0000      
4 .Kos .IE.2          .              .             1.0000     22800.0000      
4 .Kos .IE.3          .              .             1.0000     21660.0000      
4 .Kos .PA.1          .              .             1.0000     25200.0000      
4 .Kos .PA.2          .              .             1.0000     23940.0000      
4 .Kos .PA.3          .              .             1.0000     22743.0000      
4 .Kos .KI.1          .              .             1.0000     25500.0000      
4 .Kos .KI.2          .              .             1.0000     24225.0000      
4 .Kos .KI.3          .              .             1.0000     23013.7500      
4 .Kuv .EU.1          .              .             1.0000    128400.0000      
4 .Kuv .EU.2          .              .             1.0000    121980.0000      
4 .Kuv .EU.3          .              .             1.0000    115881.0000      
4 .Kuv .IE.1          .              .             1.0000    105000.0000      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 22:25:36 Page 153
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 416


     VAR u  1 if we use n boats for product j shiping to region k, 0 otherwise

                    LOWER          LEVEL          UPPER         MARGINAL

4 .Kuv .IE.2          .              .             1.0000     99750.0000      
4 .Kuv .IE.3          .              .             1.0000     94762.5000      
4 .Kuv .PA.1          .              .             1.0000     97200.0000      
4 .Kuv .PA.2          .              .             1.0000     92340.0000      
4 .Kuv .PA.3          .              .             1.0000     87723.0000      
4 .Kuv .KI.1          .              .             1.0000     91500.0000      
4 .Kuv .KI.2          .              .             1.0000     86925.0000      
4 .Kuv .KI.3          .              .             1.0000     82578.7500      
4 .Kov .EU.1          .             1.0000         1.0000    125400.0000      
4 .Kov .EU.2          .              .             1.0000    119130.0000      
4 .Kov .EU.3          .              .             1.0000    113173.5000      
4 .Kov .IE.1          .              .             1.0000    114000.0000      
4 .Kov .IE.2          .              .             1.0000    108300.0000      
4 .Kov .IE.3          .              .             1.0000    102885.0000      
4 .Kov .PA.1          .              .             1.0000    106200.0000      
4 .Kov .PA.2          .              .             1.0000    100890.0000      
4 .Kov .PA.3          .              .             1.0000     95845.5000      
4 .Kov .KI.1          .              .             1.0000    100500.0000      
4 .Kov .KI.2          .              .             1.0000     95475.0000      
4 .Kov .KI.3          .              .             1.0000     90701.2500      
4 .Hsel.EU.1          .              .             1.0000     67200.0000      
4 .Hsel.EU.2          .              .             1.0000     63840.0000      
4 .Hsel.EU.3          .              .             1.0000     60648.0000      
4 .Hsel.IE.1          .             1.0000         1.0000     71400.0000      
4 .Hsel.IE.2          .              .             1.0000     67830.0000      
4 .Hsel.IE.3          .              .             1.0000     64438.5000      
4 .Hsel.PA.1          .              .             1.0000     64500.0000      
4 .Hsel.PA.2          .              .             1.0000     61275.0000      
4 .Hsel.PA.3          .              .             1.0000     58211.2500      
4 .Hsel.KI.1          .             1.0000         1.0000     72600.0000      
4 .Hsel.KI.2          .              .             1.0000     68970.0000      
4 .Hsel.KI.3          .              .             1.0000     65521.5000      
4 .Lsel.EU.1          .              .             1.0000     72300.0000      
4 .Lsel.EU.2          .              .             1.0000     68685.0000      
4 .Lsel.EU.3          .              .             1.0000     65250.7500      
4 .Lsel.IE.1          .              .             1.0000     82200.0000      
4 .Lsel.IE.2          .              .             1.0000     78090.0000      
4 .Lsel.IE.3          .              .             1.0000     74185.5000      
4 .Lsel.PA.1          .              .             1.0000     64500.0000      
4 .Lsel.PA.2          .              .             1.0000     61275.0000      
4 .Lsel.PA.3          .              .             1.0000     58211.2500      
4 .Lsel.KI.1          .              .             1.0000     68700.0000      
4 .Lsel.KI.2          .              .             1.0000     65265.0000      
4 .Lsel.KI.3          .              .             1.0000     62001.7500      
4 .Pap .EU.1          .              .             1.0000    131400.0000      
4 .Pap .EU.2          .              .             1.0000    124830.0000      
4 .Pap .EU.3          .              .             1.0000    118588.5000      
4 .Pap .IE.1          .              .             1.0000    132000.0000      
4 .Pap .IE.2          .              .             1.0000    125400.0000      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 22:25:36 Page 154
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 416


     VAR u  1 if we use n boats for product j shiping to region k, 0 otherwise

                    LOWER          LEVEL          UPPER         MARGINAL

4 .Pap .IE.3          .              .             1.0000    119130.0000      
4 .Pap .PA.1          .              .             1.0000    118200.0000      
4 .Pap .PA.2          .              .             1.0000    112290.0000      
4 .Pap .PA.3          .              .             1.0000    106675.5000      
4 .Pap .KI.1          .              .             1.0000    130500.0000      
4 .Pap .KI.2          .             1.0000         1.0000    123975.0000      
4 .Pap .KI.3          .             1.0000         1.0000    117776.2500      
5 .Mas .EU.1          .              .             1.0000     57600.0000      
5 .Mas .EU.2          .             1.0000         1.0000     54720.0000      
5 .Mas .EU.3          .              .             1.0000     51984.0000      
5 .Mas .IE.1          .              .             1.0000     36000.0000      
5 .Mas .IE.2          .              .             1.0000     34200.0000      
5 .Mas .IE.3          .              .             1.0000     32490.0000      
5 .Mas .PA.1          .              .             1.0000     36800.0000      
5 .Mas .PA.2          .              .             1.0000     34960.0000      
5 .Mas .PA.3          .              .             1.0000     33212.0000      
5 .Mas .KI.1          .              .             1.0000     36000.0000      
5 .Mas .KI.2          .              .             1.0000     34200.0000      
5 .Mas .KI.3          .              .             1.0000     32490.0000      
5 .Kus .EU.1          .              .             1.0000         EPS         
5 .Kus .EU.2          .              .             1.0000         EPS         
5 .Kus .EU.3          .              .             1.0000         EPS         
5 .Kus .IE.1          .              .             1.0000         EPS         
5 .Kus .IE.2          .              .             1.0000         EPS         
5 .Kus .IE.3          .              .             1.0000         EPS         
5 .Kus .PA.1          .              .             1.0000         EPS         
5 .Kus .PA.2          .              .             1.0000         EPS         
5 .Kus .PA.3          .              .             1.0000         EPS         
5 .Kus .KI.1          .              .             1.0000         EPS         
5 .Kus .KI.2          .              .             1.0000         EPS         
5 .Kus .KI.3          .              .             1.0000         EPS         
5 .Kos .EU.1          .              .             1.0000     29600.0000      
5 .Kos .EU.2          .              .             1.0000     28120.0000      
5 .Kos .EU.3          .              .             1.0000     26714.0000      
5 .Kos .IE.1          .              .             1.0000     24000.0000      
5 .Kos .IE.2          .              .             1.0000     22800.0000      
5 .Kos .IE.3          .              .             1.0000     21660.0000      
5 .Kos .PA.1          .              .             1.0000     24800.0000      
5 .Kos .PA.2          .              .             1.0000     23560.0000      
5 .Kos .PA.3          .              .             1.0000     22382.0000      
5 .Kos .KI.1          .              .             1.0000     24000.0000      
5 .Kos .KI.2          .              .             1.0000     22800.0000      
5 .Kos .KI.3          .              .             1.0000     21660.0000      
5 .Kuv .EU.1          .              .             1.0000    169600.0000      
5 .Kuv .EU.2          .              .             1.0000    161120.0000      
5 .Kuv .EU.3          .              .             1.0000    153064.0000      
5 .Kuv .IE.1          .              .             1.0000    136000.0000      
5 .Kuv .IE.2          .              .             1.0000    129200.0000      
5 .Kuv .IE.3          .              .             1.0000    122740.0000      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 22:25:36 Page 155
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 416


     VAR u  1 if we use n boats for product j shiping to region k, 0 otherwise

                    LOWER          LEVEL          UPPER         MARGINAL

5 .Kuv .PA.1          .              .             1.0000    124800.0000      
5 .Kuv .PA.2          .              .             1.0000    118560.0000      
5 .Kuv .PA.3          .              .             1.0000    112632.0000      
5 .Kuv .KI.1          .              .             1.0000    116000.0000      
5 .Kuv .KI.2          .              .             1.0000    110200.0000      
5 .Kuv .KI.3          .              .             1.0000    104690.0000      
5 .Kov .EU.1          .              .             1.0000    165600.0000      
5 .Kov .EU.2          .              .             1.0000    157320.0000      
5 .Kov .EU.3          .              .             1.0000    149454.0000      
5 .Kov .IE.1          .              .             1.0000    148000.0000      
5 .Kov .IE.2          .              .             1.0000    140600.0000      
5 .Kov .IE.3          .              .             1.0000    133570.0000      
5 .Kov .PA.1          .              .             1.0000    136800.0000      
5 .Kov .PA.2          .              .             1.0000    129960.0000      
5 .Kov .PA.3          .              .             1.0000    123462.0000      
5 .Kov .KI.1          .              .             1.0000    128000.0000      
5 .Kov .KI.2          .              .             1.0000    121600.0000      
5 .Kov .KI.3          .              .             1.0000    115520.0000      
5 .Hsel.EU.1          .              .             1.0000     88800.0000      
5 .Hsel.EU.2          .              .             1.0000     84360.0000      
5 .Hsel.EU.3          .              .             1.0000     80142.0000      
5 .Hsel.IE.1          .              .             1.0000     93600.0000      
5 .Hsel.IE.2          .              .             1.0000     88920.0000      
5 .Hsel.IE.3          .              .             1.0000     84474.0000      
5 .Hsel.PA.1          .              .             1.0000     84000.0000      
5 .Hsel.PA.2          .              .             1.0000     79800.0000      
5 .Hsel.PA.3          .              .             1.0000     75810.0000      
5 .Hsel.KI.1          .              .             1.0000     94400.0000      
5 .Hsel.KI.2          .              .             1.0000     89680.0000      
5 .Hsel.KI.3          .              .             1.0000     85196.0000      
5 .Lsel.EU.1          .              .             1.0000     95200.0000      
5 .Lsel.EU.2          .              .             1.0000     90440.0000      
5 .Lsel.EU.3          .              .             1.0000     85918.0000      
5 .Lsel.IE.1          .              .             1.0000    108800.0000      
5 .Lsel.IE.2          .              .             1.0000    103360.0000      
5 .Lsel.IE.3          .             1.0000         1.0000     98192.0000      
5 .Lsel.PA.1          .              .             1.0000     84000.0000      
5 .Lsel.PA.2          .              .             1.0000     79800.0000      
5 .Lsel.PA.3          .              .             1.0000     75810.0000      
5 .Lsel.KI.1          .              .             1.0000     88800.0000      
5 .Lsel.KI.2          .              .             1.0000     84360.0000      
5 .Lsel.KI.3          .              .             1.0000     80142.0000      
5 .Pap .EU.1          .             1.0000         1.0000    173600.0000      
5 .Pap .EU.2          .              .             1.0000    164920.0000      
5 .Pap .EU.3          .              .             1.0000    156674.0000      
5 .Pap .IE.1          .              .             1.0000    172000.0000      
5 .Pap .IE.2          .             1.0000         1.0000    163400.0000      
5 .Pap .IE.3          .             1.0000         1.0000    155230.0000      
5 .Pap .PA.1          .              .             1.0000    152800.0000      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 22:25:36 Page 156
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 416


     VAR u  1 if we use n boats for product j shiping to region k, 0 otherwise

                    LOWER          LEVEL          UPPER         MARGINAL

5 .Pap .PA.2          .              .             1.0000    145160.0000      
5 .Pap .PA.3          .              .             1.0000    137902.0000      
5 .Pap .KI.1          .              .             1.0000    168000.0000      
5 .Pap .KI.2          .              .             1.0000    159600.0000      
5 .Pap .KI.3          .              .             1.0000    151620.0000      
6 .Mas .EU.1          .             1.0000         1.0000     70000.0000      
6 .Mas .EU.2          .              .             1.0000     66500.0000      
6 .Mas .EU.3          .              .             1.0000     63175.0000      
6 .Mas .IE.1          .              .             1.0000     40000.0000      
6 .Mas .IE.2          .              .             1.0000     38000.0000      
6 .Mas .IE.3          .              .             1.0000     36100.0000      
6 .Mas .PA.1          .              .             1.0000     40000.0000      
6 .Mas .PA.2          .              .             1.0000     38000.0000      
6 .Mas .PA.3          .              .             1.0000     36100.0000      
6 .Mas .KI.1          .              .             1.0000     37500.0000      
6 .Mas .KI.2          .              .             1.0000     35625.0000      
6 .Mas .KI.3          .              .             1.0000     33843.7500      
6 .Kus .EU.1          .              .             1.0000         EPS         
6 .Kus .EU.2          .              .             1.0000         EPS         
6 .Kus .EU.3          .              .             1.0000         EPS         
6 .Kus .IE.1          .              .             1.0000         EPS         
6 .Kus .IE.2          .              .             1.0000         EPS         
6 .Kus .IE.3          .              .             1.0000         EPS         
6 .Kus .PA.1          .              .             1.0000         EPS         
6 .Kus .PA.2          .              .             1.0000         EPS         
6 .Kus .PA.3          .              .             1.0000         EPS         
6 .Kus .KI.1          .              .             1.0000         EPS         
6 .Kus .KI.2          .              .             1.0000         EPS         
6 .Kus .KI.3          .              .             1.0000         EPS         
6 .Kos .EU.1          .              .             1.0000     30000.0000      
6 .Kos .EU.2          .              .             1.0000     28500.0000      
6 .Kos .EU.3          .              .             1.0000     27075.0000      
6 .Kos .IE.1          .              .             1.0000     20000.0000      
6 .Kos .IE.2          .              .             1.0000     19000.0000      
6 .Kos .IE.3          .              .             1.0000     18050.0000      
6 .Kos .PA.1          .              .             1.0000     20000.0000      
6 .Kos .PA.2          .              .             1.0000     19000.0000      
6 .Kos .PA.3          .              .             1.0000     18050.0000      
6 .Kos .KI.1          .              .             1.0000     17500.0000      
6 .Kos .KI.2          .              .             1.0000     16625.0000      
6 .Kos .KI.3          .              .             1.0000     15793.7500      
6 .Kuv .EU.1          .             1.0000         1.0000    210000.0000      
6 .Kuv .EU.2          .              .             1.0000    199500.0000      
6 .Kuv .EU.3          .              .             1.0000    189525.0000      
6 .Kuv .IE.1          .              .             1.0000    165000.0000      
6 .Kuv .IE.2          .              .             1.0000    156750.0000      
6 .Kuv .IE.3          .              .             1.0000    148912.5000      
6 .Kuv .PA.1          .              .             1.0000    150000.0000      
6 .Kuv .PA.2          .              .             1.0000    142500.0000      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 22:25:36 Page 157
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 416


     VAR u  1 if we use n boats for product j shiping to region k, 0 otherwise

                    LOWER          LEVEL          UPPER         MARGINAL

6 .Kuv .PA.3          .              .             1.0000    135375.0000      
6 .Kuv .KI.1          .              .             1.0000    137500.0000      
6 .Kuv .KI.2          .              .             1.0000    130625.0000      
6 .Kuv .KI.3          .              .             1.0000    124093.7500      
6 .Kov .EU.1          .              .             1.0000    205000.0000      
6 .Kov .EU.2          .              .             1.0000    194750.0000      
6 .Kov .EU.3          .              .             1.0000    185012.5000      
6 .Kov .IE.1          .              .             1.0000    180000.0000      
6 .Kov .IE.2          .              .             1.0000    171000.0000      
6 .Kov .IE.3          .              .             1.0000    162450.0000      
6 .Kov .PA.1          .              .             1.0000    165000.0000      
6 .Kov .PA.2          .              .             1.0000    156750.0000      
6 .Kov .PA.3          .              .             1.0000    148912.5000      
6 .Kov .KI.1          .              .             1.0000    152500.0000      
6 .Kov .KI.2          .              .             1.0000    144875.0000      
6 .Kov .KI.3          .              .             1.0000    137631.2500      
6 .Hsel.EU.1          .              .             1.0000    110000.0000      
6 .Hsel.EU.2          .              .             1.0000    104500.0000      
6 .Hsel.EU.3          .              .             1.0000     99275.0000      
6 .Hsel.IE.1          .              .             1.0000    115000.0000      
6 .Hsel.IE.2          .              .             1.0000    109250.0000      
6 .Hsel.IE.3          .              .             1.0000    103787.5000      
6 .Hsel.PA.1          .              .             1.0000    102500.0000      
6 .Hsel.PA.2          .              .             1.0000     97375.0000      
6 .Hsel.PA.3          .              .             1.0000     92506.2500      
6 .Hsel.KI.1          .              .             1.0000    115000.0000      
6 .Hsel.KI.2          .              .             1.0000    109250.0000      
6 .Hsel.KI.3          .              .             1.0000    103787.5000      
6 .Lsel.EU.1          .              .             1.0000    117500.0000      
6 .Lsel.EU.2          .              .             1.0000    111625.0000      
6 .Lsel.EU.3          .              .             1.0000    106043.7500      
6 .Lsel.IE.1          .              .             1.0000    135000.0000      
6 .Lsel.IE.2          .             1.0000         1.0000    128250.0000      
6 .Lsel.IE.3          .              .             1.0000    121837.5000      
6 .Lsel.PA.1          .              .             1.0000    102500.0000      
6 .Lsel.PA.2          .              .             1.0000     97375.0000      
6 .Lsel.PA.3          .              .             1.0000     92506.2500      
6 .Lsel.KI.1          .              .             1.0000    107500.0000      
6 .Lsel.KI.2          .              .             1.0000    102125.0000      
6 .Lsel.KI.3          .              .             1.0000     97018.7500      
6 .Pap .EU.1          .              .             1.0000    215000.0000      
6 .Pap .EU.2          .              .             1.0000    204250.0000      
6 .Pap .EU.3          .              .             1.0000    194037.5000      
6 .Pap .IE.1          .              .             1.0000    210000.0000      
6 .Pap .IE.2          .              .             1.0000    199500.0000      
6 .Pap .IE.3          .              .             1.0000    189525.0000      
6 .Pap .PA.1          .              .             1.0000    185000.0000      
6 .Pap .PA.2          .              .             1.0000    175750.0000      
6 .Pap .PA.3          .              .             1.0000    166962.5000      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 22:25:36 Page 158
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 416


     VAR u  1 if we use n boats for product j shiping to region k, 0 otherwise

                    LOWER          LEVEL          UPPER         MARGINAL

6 .Pap .KI.1          .              .             1.0000    202500.0000      
6 .Pap .KI.2          .              .             1.0000    192375.0000      
6 .Pap .KI.3          .              .             1.0000    182756.2500      
7 .Mas .EU.1          .              .             1.0000     81600.0000      
7 .Mas .EU.2          .              .             1.0000     77520.0000      
7 .Mas .EU.3          .              .             1.0000     73644.0000      
7 .Mas .IE.1          .              .             1.0000     42000.0000      
7 .Mas .IE.2          .              .             1.0000     39900.0000      
7 .Mas .IE.3          .              .             1.0000     37905.0000      
7 .Mas .PA.1          .              .             1.0000     40800.0000      
7 .Mas .PA.2          .              .             1.0000     38760.0000      
7 .Mas .PA.3          .              .             1.0000     36822.0000      
7 .Mas .KI.1          .              .             1.0000     36000.0000      
7 .Mas .KI.2          .              .             1.0000     34200.0000      
7 .Mas .KI.3          .              .             1.0000     32490.0000      
7 .Kus .EU.1          .              .             1.0000         EPS         
7 .Kus .EU.2          .              .             1.0000         EPS         
7 .Kus .EU.3          .              .             1.0000         EPS         
7 .Kus .IE.1          .              .             1.0000         EPS         
7 .Kus .IE.2          .              .             1.0000         EPS         
7 .Kus .IE.3          .              .             1.0000         EPS         
7 .Kus .PA.1          .              .             1.0000         EPS         
7 .Kus .PA.2          .              .             1.0000         EPS         
7 .Kus .PA.3          .              .             1.0000         EPS         
7 .Kus .KI.1          .              .             1.0000         EPS         
7 .Kus .KI.2          .              .             1.0000         EPS         
7 .Kus .KI.3          .              .             1.0000         EPS         
7 .Kos .EU.1          .              .             1.0000     27600.0000      
7 .Kos .EU.2          .              .             1.0000     26220.0000      
7 .Kos .EU.3          .              .             1.0000     24909.0000      
7 .Kos .IE.1          .              .             1.0000     12000.0000      
7 .Kos .IE.2          .              .             1.0000     11400.0000      
7 .Kos .IE.3          .              .             1.0000     10830.0000      
7 .Kos .PA.1          .              .             1.0000     10800.0000      
7 .Kos .PA.2          .              .             1.0000     10260.0000      
7 .Kos .PA.3          .              .             1.0000      9747.0000      
7 .Kos .KI.1          .              .             1.0000      6000.0000      
7 .Kos .KI.2          .              .             1.0000      5700.0000      
7 .Kos .KI.3          .              .             1.0000      5415.0000      
7 .Kuv .EU.1          .              .             1.0000    249600.0000      
7 .Kuv .EU.2          .              .             1.0000    237120.0000      
7 .Kuv .EU.3          .              .             1.0000    225264.0000      
7 .Kuv .IE.1          .              .             1.0000    192000.0000      
7 .Kuv .IE.2          .              .             1.0000    182400.0000      
7 .Kuv .IE.3          .              .             1.0000    173280.0000      
7 .Kuv .PA.1          .              .             1.0000    172800.0000      
7 .Kuv .PA.2          .              .             1.0000    164160.0000      
7 .Kuv .PA.3          .              .             1.0000    155952.0000      
7 .Kuv .KI.1          .              .             1.0000    156000.0000      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 22:25:36 Page 159
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 416


     VAR u  1 if we use n boats for product j shiping to region k, 0 otherwise

                    LOWER          LEVEL          UPPER         MARGINAL

7 .Kuv .KI.2          .              .             1.0000    148200.0000      
7 .Kuv .KI.3          .              .             1.0000    140790.0000      
7 .Kov .EU.1          .              .             1.0000    243600.0000      
7 .Kov .EU.2          .              .             1.0000    231420.0000      
7 .Kov .EU.3          .              .             1.0000    219849.0000      
7 .Kov .IE.1          .              .             1.0000    210000.0000      
7 .Kov .IE.2          .              .             1.0000    199500.0000      
7 .Kov .IE.3          .              .             1.0000    189525.0000      
7 .Kov .PA.1          .              .             1.0000    190800.0000      
7 .Kov .PA.2          .              .             1.0000    181260.0000      
7 .Kov .PA.3          .              .             1.0000    172197.0000      
7 .Kov .KI.1          .              .             1.0000    174000.0000      
7 .Kov .KI.2          .              .             1.0000    165300.0000      
7 .Kov .KI.3          .              .             1.0000    157035.0000      
7 .Hsel.EU.1          .              .             1.0000    130800.0000      
7 .Hsel.EU.2          .              .             1.0000    124260.0000      
7 .Hsel.EU.3          .              .             1.0000    118047.0000      
7 .Hsel.IE.1          .              .             1.0000    135600.0000      
7 .Hsel.IE.2          .              .             1.0000    128820.0000      
7 .Hsel.IE.3          .              .             1.0000    122379.0000      
7 .Hsel.PA.1          .              .             1.0000    120000.0000      
7 .Hsel.PA.2          .              .             1.0000    114000.0000      
7 .Hsel.PA.3          .              .             1.0000    108300.0000      
7 .Hsel.KI.1          .              .             1.0000    134400.0000      
7 .Hsel.KI.2          .              .             1.0000    127680.0000      
7 .Hsel.KI.3          .              .             1.0000    121296.0000      
7 .Lsel.EU.1          .              .             1.0000    139200.0000      
7 .Lsel.EU.2          .              .             1.0000    132240.0000      
7 .Lsel.EU.3          .              .             1.0000    125628.0000      
7 .Lsel.IE.1          .              .             1.0000    160800.0000      
7 .Lsel.IE.2          .              .             1.0000    152760.0000      
7 .Lsel.IE.3          .              .             1.0000    145122.0000      
7 .Lsel.PA.1          .              .             1.0000    120000.0000      
7 .Lsel.PA.2          .              .             1.0000    114000.0000      
7 .Lsel.PA.3          .              .             1.0000    108300.0000      
7 .Lsel.KI.1          .              .             1.0000    124800.0000      
7 .Lsel.KI.2          .              .             1.0000    118560.0000      
7 .Lsel.KI.3          .              .             1.0000    112632.0000      
7 .Pap .EU.1          .              .             1.0000    255600.0000      
7 .Pap .EU.2          .              .             1.0000    242820.0000      
7 .Pap .EU.3          .              .             1.0000    230679.0000      
7 .Pap .IE.1          .              .             1.0000    246000.0000      
7 .Pap .IE.2          .              .             1.0000    233700.0000      
7 .Pap .IE.3          .              .             1.0000    222015.0000      
7 .Pap .PA.1          .              .             1.0000    214800.0000      
7 .Pap .PA.2          .              .             1.0000    204060.0000      
7 .Pap .PA.3          .              .             1.0000    193857.0000      
7 .Pap .KI.1          .              .             1.0000    234000.0000      
7 .Pap .KI.2          .              .             1.0000    222300.0000      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 22:25:36 Page 160
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 416


     VAR u  1 if we use n boats for product j shiping to region k, 0 otherwise

                    LOWER          LEVEL          UPPER         MARGINAL

7 .Pap .KI.3          .              .             1.0000    211185.0000      
8 .Mas .EU.1          .              .             1.0000     92400.0000      
8 .Mas .EU.2          .              .             1.0000     87780.0000      
8 .Mas .EU.3          .              .             1.0000     83391.0000      
8 .Mas .IE.1          .              .             1.0000     42000.0000      
8 .Mas .IE.2          .              .             1.0000     39900.0000      
8 .Mas .IE.3          .              .             1.0000     37905.0000      
8 .Mas .PA.1          .              .             1.0000     39200.0000      
8 .Mas .PA.2          .              .             1.0000     37240.0000      
8 .Mas .PA.3          .              .             1.0000     35378.0000      
8 .Mas .KI.1          .              .             1.0000     31500.0000      
8 .Mas .KI.2          .              .             1.0000     29925.0000      
8 .Mas .KI.3          .              .             1.0000     28428.7500      
8 .Kus .EU.1          .              .             1.0000         EPS         
8 .Kus .EU.2          .              .             1.0000         EPS         
8 .Kus .EU.3          .              .             1.0000         EPS         
8 .Kus .IE.1          .              .             1.0000         EPS         
8 .Kus .IE.2          .              .             1.0000         EPS         
8 .Kus .IE.3          .              .             1.0000         EPS         
8 .Kus .PA.1          .              .             1.0000         EPS         
8 .Kus .PA.2          .              .             1.0000         EPS         
8 .Kus .PA.3          .              .             1.0000         EPS         
8 .Kus .KI.1          .              .             1.0000         EPS         
8 .Kus .KI.2          .              .             1.0000         EPS         
8 .Kus .KI.3          .              .             1.0000         EPS         
8 .Kos .EU.1          .              .             1.0000     22400.0000      
8 .Kos .EU.2          .              .             1.0000     21280.0000      
8 .Kos .EU.3          .              .             1.0000     20216.0000      
8 .Kos .IE.1          .              .             1.0000         EPS         
8 .Kos .IE.2          .              .             1.0000         EPS         
8 .Kos .IE.3          .              .             1.0000         EPS         
8 .Kos .PA.1          .              .             1.0000     -2800.0000      
8 .Kos .PA.2          .              .             1.0000     -2660.0000      
8 .Kos .PA.3          .              .             1.0000     -2527.0000      
8 .Kos .KI.1          .              .             1.0000    -10500.0000      
8 .Kos .KI.2          .              .             1.0000     -9975.0000      
8 .Kos .KI.3          .              .             1.0000     -9476.2500      
8 .Kuv .EU.1          .              .             1.0000    288400.0000      
8 .Kuv .EU.2          .              .             1.0000    273980.0000      
8 .Kuv .EU.3          .             1.0000         1.0000    260281.0000      
8 .Kuv .IE.1          .              .             1.0000    217000.0000      
8 .Kuv .IE.2          .              .             1.0000    206150.0000      
8 .Kuv .IE.3          .              .             1.0000    195842.5000      
8 .Kuv .PA.1          .              .             1.0000    193200.0000      
8 .Kuv .PA.2          .              .             1.0000    183540.0000      
8 .Kuv .PA.3          .              .             1.0000    174363.0000      
8 .Kuv .KI.1          .              .             1.0000    171500.0000      
8 .Kuv .KI.2          .              .             1.0000    162925.0000      
8 .Kuv .KI.3          .              .             1.0000    154778.7500      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 22:25:36 Page 161
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 416


     VAR u  1 if we use n boats for product j shiping to region k, 0 otherwise

                    LOWER          LEVEL          UPPER         MARGINAL

8 .Kov .EU.1          .              .             1.0000    281400.0000      
8 .Kov .EU.2          .              .             1.0000    267330.0000      
8 .Kov .EU.3          .              .             1.0000    253963.5000      
8 .Kov .IE.1          .              .             1.0000    238000.0000      
8 .Kov .IE.2          .              .             1.0000    226100.0000      
8 .Kov .IE.3          .              .             1.0000    214795.0000      
8 .Kov .PA.1          .              .             1.0000    214200.0000      
8 .Kov .PA.2          .              .             1.0000    203490.0000      
8 .Kov .PA.3          .              .             1.0000    193315.5000      
8 .Kov .KI.1          .              .             1.0000    192500.0000      
8 .Kov .KI.2          .              .             1.0000    182875.0000      
8 .Kov .KI.3          .              .             1.0000    173731.2500      
8 .Hsel.EU.1          .              .             1.0000    151200.0000      
8 .Hsel.EU.2          .              .             1.0000    143640.0000      
8 .Hsel.EU.3          .              .             1.0000    136458.0000      
8 .Hsel.IE.1          .              .             1.0000    155400.0000      
8 .Hsel.IE.2          .              .             1.0000    147630.0000      
8 .Hsel.IE.3          .              .             1.0000    140248.5000      
8 .Hsel.PA.1          .              .             1.0000    136500.0000      
8 .Hsel.PA.2          .              .             1.0000    129675.0000      
8 .Hsel.PA.3          .              .             1.0000    123191.2500      
8 .Hsel.KI.1          .              .             1.0000    152600.0000      
8 .Hsel.KI.2          .              .             1.0000    144970.0000      
8 .Hsel.KI.3          .              .             1.0000    137721.5000      
8 .Lsel.EU.1          .              .             1.0000    160300.0000      
8 .Lsel.EU.2          .              .             1.0000    152285.0000      
8 .Lsel.EU.3          .              .             1.0000    144670.7500      
8 .Lsel.IE.1          .              .             1.0000    186200.0000      
8 .Lsel.IE.2          .              .             1.0000    176890.0000      
8 .Lsel.IE.3          .              .             1.0000    168045.5000      
8 .Lsel.PA.1          .              .             1.0000    136500.0000      
8 .Lsel.PA.2          .              .             1.0000    129675.0000      
8 .Lsel.PA.3          .              .             1.0000    123191.2500      
8 .Lsel.KI.1          .              .             1.0000    140700.0000      
8 .Lsel.KI.2          .              .             1.0000    133665.0000      
8 .Lsel.KI.3          .              .             1.0000    126981.7500      
8 .Pap .EU.1          .              .             1.0000    295400.0000      
8 .Pap .EU.2          .             1.0000         1.0000    280630.0000      
8 .Pap .EU.3          .             1.0000         1.0000    266598.5000      
8 .Pap .IE.1          .              .             1.0000    280000.0000      
8 .Pap .IE.2          .              .             1.0000    266000.0000      
8 .Pap .IE.3          .              .             1.0000    252700.0000      
8 .Pap .PA.1          .              .             1.0000    242200.0000      
8 .Pap .PA.2          .              .             1.0000    230090.0000      
8 .Pap .PA.3          .              .             1.0000    218585.5000      
8 .Pap .KI.1          .              .             1.0000    262500.0000      
8 .Pap .KI.2          .              .             1.0000    249375.0000      
8 .Pap .KI.3          .              .             1.0000    236906.2500      
9 .Mas .EU.1          .              .             1.0000    102400.0000      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 22:25:36 Page 162
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 416


     VAR u  1 if we use n boats for product j shiping to region k, 0 otherwise

                    LOWER          LEVEL          UPPER         MARGINAL

9 .Mas .EU.2          .              .             1.0000     97280.0000      
9 .Mas .EU.3          .              .             1.0000     92416.0000      
9 .Mas .IE.1          .              .             1.0000     40000.0000      
9 .Mas .IE.2          .              .             1.0000     38000.0000      
9 .Mas .IE.3          .              .             1.0000     36100.0000      
9 .Mas .PA.1          .              .             1.0000     35200.0000      
9 .Mas .PA.2          .              .             1.0000     33440.0000      
9 .Mas .PA.3          .              .             1.0000     31768.0000      
9 .Mas .KI.1          .              .             1.0000     24000.0000      
9 .Mas .KI.2          .              .             1.0000     22800.0000      
9 .Mas .KI.3          .              .             1.0000     21660.0000      
9 .Kus .EU.1          .              .             1.0000         EPS         
9 .Kus .EU.2          .              .             1.0000         EPS         
9 .Kus .EU.3          .              .             1.0000         EPS         
9 .Kus .IE.1          .              .             1.0000         EPS         
9 .Kus .IE.2          .              .             1.0000         EPS         
9 .Kus .IE.3          .              .             1.0000         EPS         
9 .Kus .PA.1          .              .             1.0000         EPS         
9 .Kus .PA.2          .              .             1.0000         EPS         
9 .Kus .PA.3          .              .             1.0000         EPS         
9 .Kus .KI.1          .              .             1.0000         EPS         
9 .Kus .KI.2          .              .             1.0000         EPS         
9 .Kus .KI.3          .              .             1.0000         EPS         
9 .Kos .EU.1          .              .             1.0000     14400.0000      
9 .Kos .EU.2          .              .             1.0000     13680.0000      
9 .Kos .EU.3          .              .             1.0000     12996.0000      
9 .Kos .IE.1          .              .             1.0000    -16000.0000      
9 .Kos .IE.2          .              .             1.0000    -15200.0000      
9 .Kos .IE.3          .              .             1.0000    -14440.0000      
9 .Kos .PA.1          .              .             1.0000    -20800.0000      
9 .Kos .PA.2          .              .             1.0000    -19760.0000      
9 .Kos .PA.3          .              .             1.0000    -18772.0000      
9 .Kos .KI.1          .              .             1.0000    -32000.0000      
9 .Kos .KI.2          .              .             1.0000    -30400.0000      
9 .Kos .KI.3          .              .             1.0000    -28880.0000      
9 .Kuv .EU.1          .              .             1.0000    326400.0000      
9 .Kuv .EU.2          .             1.0000         1.0000    310080.0000      
9 .Kuv .EU.3          .              .             1.0000    294576.0000      
9 .Kuv .IE.1          .              .             1.0000    240000.0000      
9 .Kuv .IE.2          .              .             1.0000    228000.0000      
9 .Kuv .IE.3          .              .             1.0000    216600.0000      
9 .Kuv .PA.1          .              .             1.0000    211200.0000      
9 .Kuv .PA.2          .              .             1.0000    200640.0000      
9 .Kuv .PA.3          .              .             1.0000    190608.0000      
9 .Kuv .KI.1          .              .             1.0000    184000.0000      
9 .Kuv .KI.2          .              .             1.0000    174800.0000      
9 .Kuv .KI.3          .              .             1.0000    166060.0000      
9 .Kov .EU.1          .              .             1.0000    318400.0000      
9 .Kov .EU.2          .              .             1.0000    302480.0000      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 22:25:36 Page 163
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 416


     VAR u  1 if we use n boats for product j shiping to region k, 0 otherwise

                    LOWER          LEVEL          UPPER         MARGINAL

9 .Kov .EU.3          .              .             1.0000    287356.0000      
9 .Kov .IE.1          .              .             1.0000    264000.0000      
9 .Kov .IE.2          .              .             1.0000    250800.0000      
9 .Kov .IE.3          .              .             1.0000    238260.0000      
9 .Kov .PA.1          .              .             1.0000    235200.0000      
9 .Kov .PA.2          .              .             1.0000    223440.0000      
9 .Kov .PA.3          .              .             1.0000    212268.0000      
9 .Kov .KI.1          .              .             1.0000    208000.0000      
9 .Kov .KI.2          .              .             1.0000    197600.0000      
9 .Kov .KI.3          .              .             1.0000    187720.0000      
9 .Hsel.EU.1          .              .             1.0000    171200.0000      
9 .Hsel.EU.2          .              .             1.0000    162640.0000      
9 .Hsel.EU.3          .              .             1.0000    154508.0000      
9 .Hsel.IE.1          .              .             1.0000    174400.0000      
9 .Hsel.IE.2          .              .             1.0000    165680.0000      
9 .Hsel.IE.3          .              .             1.0000    157396.0000      
9 .Hsel.PA.1          .              .             1.0000    152000.0000      
9 .Hsel.PA.2          .              .             1.0000    144400.0000      
9 .Hsel.PA.3          .              .             1.0000    137180.0000      
9 .Hsel.KI.1          .              .             1.0000    169600.0000      
9 .Hsel.KI.2          .              .             1.0000    161120.0000      
9 .Hsel.KI.3          .              .             1.0000    153064.0000      
9 .Lsel.EU.1          .              .             1.0000    180800.0000      
9 .Lsel.EU.2          .              .             1.0000    171760.0000      
9 .Lsel.EU.3          .              .             1.0000    163172.0000      
9 .Lsel.IE.1          .              .             1.0000    211200.0000      
9 .Lsel.IE.2          .              .             1.0000    200640.0000      
9 .Lsel.IE.3          .              .             1.0000    190608.0000      
9 .Lsel.PA.1          .              .             1.0000    152000.0000      
9 .Lsel.PA.2          .              .             1.0000    144400.0000      
9 .Lsel.PA.3          .              .             1.0000    137180.0000      
9 .Lsel.KI.1          .              .             1.0000    155200.0000      
9 .Lsel.KI.2          .              .             1.0000    147440.0000      
9 .Lsel.KI.3          .              .             1.0000    140068.0000      
9 .Pap .EU.1          .              .             1.0000    334400.0000      
9 .Pap .EU.2          .              .             1.0000    317680.0000      
9 .Pap .EU.3          .              .             1.0000    301796.0000      
9 .Pap .IE.1          .              .             1.0000    312000.0000      
9 .Pap .IE.2          .              .             1.0000    296400.0000      
9 .Pap .IE.3          .              .             1.0000    281580.0000      
9 .Pap .PA.1          .              .             1.0000    267200.0000      
9 .Pap .PA.2          .              .             1.0000    253840.0000      
9 .Pap .PA.3          .              .             1.0000    241148.0000      
9 .Pap .KI.1          .              .             1.0000    288000.0000      
9 .Pap .KI.2          .              .             1.0000    273600.0000      
9 .Pap .KI.3          .              .             1.0000    259920.0000      
10.Mas .EU.1          .              .             1.0000    111600.0000      
10.Mas .EU.2          .              .             1.0000    106020.0000      
10.Mas .EU.3          .              .             1.0000    100719.0000      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 22:25:36 Page 164
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 416


     VAR u  1 if we use n boats for product j shiping to region k, 0 otherwise

                    LOWER          LEVEL          UPPER         MARGINAL

10.Mas .IE.1          .              .             1.0000     36000.0000      
10.Mas .IE.2          .              .             1.0000     34200.0000      
10.Mas .IE.3          .              .             1.0000     32490.0000      
10.Mas .PA.1          .              .             1.0000     28800.0000      
10.Mas .PA.2          .              .             1.0000     27360.0000      
10.Mas .PA.3          .              .             1.0000     25992.0000      
10.Mas .KI.1          .              .             1.0000     13500.0000      
10.Mas .KI.2          .              .             1.0000     12825.0000      
10.Mas .KI.3          .              .             1.0000     12183.7500      
10.Kus .EU.1          .              .             1.0000         EPS         
10.Kus .EU.2          .              .             1.0000         EPS         
10.Kus .EU.3          .              .             1.0000         EPS         
10.Kus .IE.1          .              .             1.0000         EPS         
10.Kus .IE.2          .              .             1.0000         EPS         
10.Kus .IE.3          .              .             1.0000         EPS         
10.Kus .PA.1          .              .             1.0000         EPS         
10.Kus .PA.2          .              .             1.0000         EPS         
10.Kus .PA.3          .              .             1.0000         EPS         
10.Kus .KI.1          .              .             1.0000         EPS         
10.Kus .KI.2          .              .             1.0000         EPS         
10.Kus .KI.3          .              .             1.0000         EPS         
10.Kos .EU.1          .              .             1.0000      3600.0000      
10.Kos .EU.2          .              .             1.0000      3420.0000      
10.Kos .EU.3          .              .             1.0000      3249.0000      
10.Kos .IE.1          .              .             1.0000    -36000.0000      
10.Kos .IE.2          .              .             1.0000    -34200.0000      
10.Kos .IE.3          .              .             1.0000    -32490.0000      
10.Kos .PA.1          .              .             1.0000    -43200.0000      
10.Kos .PA.2          .              .             1.0000    -41040.0000      
10.Kos .PA.3          .              .             1.0000    -38988.0000      
10.Kos .KI.1          .              .             1.0000    -58500.0000      
10.Kos .KI.2          .              .             1.0000    -55575.0000      
10.Kos .KI.3          .              .             1.0000    -52796.2500      
10.Kuv .EU.1          .              .             1.0000    363600.0000      
10.Kuv .EU.2          .              .             1.0000    345420.0000      
10.Kuv .EU.3          .              .             1.0000    328149.0000      
10.Kuv .IE.1          .              .             1.0000    261000.0000      
10.Kuv .IE.2          .              .             1.0000    247950.0000      
10.Kuv .IE.3          .              .             1.0000    235552.5000      
10.Kuv .PA.1          .              .             1.0000    226800.0000      
10.Kuv .PA.2          .              .             1.0000    215460.0000      
10.Kuv .PA.3          .              .             1.0000    204687.0000      
10.Kuv .KI.1          .              .             1.0000    193500.0000      
10.Kuv .KI.2          .              .             1.0000    183825.0000      
10.Kuv .KI.3          .              .             1.0000    174633.7500      
10.Kov .EU.1          .              .             1.0000    354600.0000      
10.Kov .EU.2          .              .             1.0000    336870.0000      
10.Kov .EU.3          .              .             1.0000    320026.5000      
10.Kov .IE.1          .              .             1.0000    288000.0000      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 22:25:36 Page 165
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 416


     VAR u  1 if we use n boats for product j shiping to region k, 0 otherwise

                    LOWER          LEVEL          UPPER         MARGINAL

10.Kov .IE.2          .              .             1.0000    273600.0000      
10.Kov .IE.3          .              .             1.0000    259920.0000      
10.Kov .PA.1          .              .             1.0000    253800.0000      
10.Kov .PA.2          .              .             1.0000    241110.0000      
10.Kov .PA.3          .              .             1.0000    229054.5000      
10.Kov .KI.1          .              .             1.0000    220500.0000      
10.Kov .KI.2          .              .             1.0000    209475.0000      
10.Kov .KI.3          .              .             1.0000    199001.2500      
10.Hsel.EU.1          .              .             1.0000    190800.0000      
10.Hsel.EU.2          .              .             1.0000    181260.0000      
10.Hsel.EU.3          .              .             1.0000    172197.0000      
10.Hsel.IE.1          .              .             1.0000    192600.0000      
10.Hsel.IE.2          .              .             1.0000    182970.0000      
10.Hsel.IE.3          .              .             1.0000    173821.5000      
10.Hsel.PA.1          .              .             1.0000    166500.0000      
10.Hsel.PA.2          .              .             1.0000    158175.0000      
10.Hsel.PA.3          .              .             1.0000    150266.2500      
10.Hsel.KI.1          .              .             1.0000    185400.0000      
10.Hsel.KI.2          .              .             1.0000    176130.0000      
10.Hsel.KI.3          .              .             1.0000    167323.5000      
10.Lsel.EU.1          .              .             1.0000    200700.0000      
10.Lsel.EU.2          .              .             1.0000    190665.0000      
10.Lsel.EU.3          .              .             1.0000    181131.7500      
10.Lsel.IE.1          .              .             1.0000    235800.0000      
10.Lsel.IE.2          .              .             1.0000    224010.0000      
10.Lsel.IE.3          .              .             1.0000    212809.5000      
10.Lsel.PA.1          .              .             1.0000    166500.0000      
10.Lsel.PA.2          .              .             1.0000    158175.0000      
10.Lsel.PA.3          .              .             1.0000    150266.2500      
10.Lsel.KI.1          .              .             1.0000    168300.0000      
10.Lsel.KI.2          .              .             1.0000    159885.0000      
10.Lsel.KI.3          .              .             1.0000    151890.7500      
10.Pap .EU.1          .              .             1.0000    372600.0000      
10.Pap .EU.2          .              .             1.0000    353970.0000      
10.Pap .EU.3          .              .             1.0000    336271.5000      
10.Pap .IE.1          .              .             1.0000    342000.0000      
10.Pap .IE.2          .              .             1.0000    324900.0000      
10.Pap .IE.3          .              .             1.0000    308655.0000      
10.Pap .PA.1          .              .             1.0000    289800.0000      
10.Pap .PA.2          .              .             1.0000    275310.0000      
10.Pap .PA.3          .              .             1.0000    261544.5000      
10.Pap .KI.1          .              .             1.0000    310500.0000      
10.Pap .KI.2          .              .             1.0000    294975.0000      
10.Pap .KI.3          .              .             1.0000    280226.2500      
11.Mas .EU.1          .              .             1.0000    120000.0000      
11.Mas .EU.2          .              .             1.0000    114000.0000      
11.Mas .EU.3          .              .             1.0000    108300.0000      
11.Mas .IE.1          .              .             1.0000     30000.0000      
11.Mas .IE.2          .              .             1.0000     28500.0000      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 22:25:36 Page 166
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 416


     VAR u  1 if we use n boats for product j shiping to region k, 0 otherwise

                    LOWER          LEVEL          UPPER         MARGINAL

11.Mas .IE.3          .              .             1.0000     27075.0000      
11.Mas .PA.1          .              .             1.0000     20000.0000      
11.Mas .PA.2          .              .             1.0000     19000.0000      
11.Mas .PA.3          .              .             1.0000     18050.0000      
11.Mas .KI.1          .              .             1.0000         EPS         
11.Mas .KI.2          .              .             1.0000         EPS         
11.Mas .KI.3          .              .             1.0000         EPS         
11.Kus .EU.1          .              .             1.0000         EPS         
11.Kus .EU.2          .              .             1.0000         EPS         
11.Kus .EU.3          .              .             1.0000         EPS         
11.Kus .IE.1          .              .             1.0000         EPS         
11.Kus .IE.2          .              .             1.0000         EPS         
11.Kus .IE.3          .              .             1.0000         EPS         
11.Kus .PA.1          .              .             1.0000         EPS         
11.Kus .PA.2          .              .             1.0000         EPS         
11.Kus .PA.3          .              .             1.0000         EPS         
11.Kus .KI.1          .              .             1.0000         EPS         
11.Kus .KI.2          .              .             1.0000         EPS         
11.Kus .KI.3          .              .             1.0000         EPS         
11.Kos .EU.1          .              .             1.0000    -10000.0000      
11.Kos .EU.2          .              .             1.0000     -9500.0000      
11.Kos .EU.3          .              .             1.0000     -9025.0000      
11.Kos .IE.1          .              .             1.0000    -60000.0000      
11.Kos .IE.2          .              .             1.0000    -57000.0000      
11.Kos .IE.3          .              .             1.0000    -54150.0000      
11.Kos .PA.1          .              .             1.0000    -70000.0000      
11.Kos .PA.2          .              .             1.0000    -66500.0000      
11.Kos .PA.3          .              .             1.0000    -63175.0000      
11.Kos .KI.1          .              .             1.0000    -90000.0000      
11.Kos .KI.2          .              .             1.0000    -85500.0000      
11.Kos .KI.3          .              .             1.0000    -81225.0000      
11.Kuv .EU.1          .              .             1.0000    400000.0000      
11.Kuv .EU.2          .              .             1.0000    380000.0000      
11.Kuv .EU.3          .              .             1.0000    361000.0000      
11.Kuv .IE.1          .              .             1.0000    280000.0000      
11.Kuv .IE.2          .              .             1.0000    266000.0000      
11.Kuv .IE.3          .              .             1.0000    252700.0000      
11.Kuv .PA.1          .              .             1.0000    240000.0000      
11.Kuv .PA.2          .              .             1.0000    228000.0000      
11.Kuv .PA.3          .              .             1.0000    216600.0000      
11.Kuv .KI.1          .              .             1.0000    200000.0000      
11.Kuv .KI.2          .              .             1.0000    190000.0000      
11.Kuv .KI.3          .              .             1.0000    180500.0000      
11.Kov .EU.1          .              .             1.0000    390000.0000      
11.Kov .EU.2          .              .             1.0000    370500.0000      
11.Kov .EU.3          .              .             1.0000    351975.0000      
11.Kov .IE.1          .              .             1.0000    310000.0000      
11.Kov .IE.2          .              .             1.0000    294500.0000      
11.Kov .IE.3          .              .             1.0000    279775.0000      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 22:25:36 Page 167
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 416


     VAR u  1 if we use n boats for product j shiping to region k, 0 otherwise

                    LOWER          LEVEL          UPPER         MARGINAL

11.Kov .PA.1          .              .             1.0000    270000.0000      
11.Kov .PA.2          .              .             1.0000    256500.0000      
11.Kov .PA.3          .              .             1.0000    243675.0000      
11.Kov .KI.1          .              .             1.0000    230000.0000      
11.Kov .KI.2          .              .             1.0000    218500.0000      
11.Kov .KI.3          .              .             1.0000    207575.0000      
11.Hsel.EU.1          .              .             1.0000    210000.0000      
11.Hsel.EU.2          .              .             1.0000    199500.0000      
11.Hsel.EU.3          .              .             1.0000    189525.0000      
11.Hsel.IE.1          .              .             1.0000    210000.0000      
11.Hsel.IE.2          .              .             1.0000    199500.0000      
11.Hsel.IE.3          .              .             1.0000    189525.0000      
11.Hsel.PA.1          .              .             1.0000    180000.0000      
11.Hsel.PA.2          .              .             1.0000    171000.0000      
11.Hsel.PA.3          .              .             1.0000    162450.0000      
11.Hsel.KI.1          .              .             1.0000    200000.0000      
11.Hsel.KI.2          .              .             1.0000    190000.0000      
11.Hsel.KI.3          .              .             1.0000    180500.0000      
11.Lsel.EU.1          .              .             1.0000    220000.0000      
11.Lsel.EU.2          .              .             1.0000    209000.0000      
11.Lsel.EU.3          .              .             1.0000    198550.0000      
11.Lsel.IE.1          .             1.0000         1.0000    260000.0000      
11.Lsel.IE.2          .              .             1.0000    247000.0000      
11.Lsel.IE.3          .              .             1.0000    234650.0000      
11.Lsel.PA.1          .              .             1.0000    180000.0000      
11.Lsel.PA.2          .              .             1.0000    171000.0000      
11.Lsel.PA.3          .              .             1.0000    162450.0000      
11.Lsel.KI.1          .              .             1.0000    180000.0000      
11.Lsel.KI.2          .              .             1.0000    171000.0000      
11.Lsel.KI.3          .              .             1.0000    162450.0000      
11.Pap .EU.1          .              .             1.0000    410000.0000      
11.Pap .EU.2          .              .             1.0000    389500.0000      
11.Pap .EU.3          .              .             1.0000    370025.0000      
11.Pap .IE.1          .              .             1.0000    370000.0000      
11.Pap .IE.2          .              .             1.0000    351500.0000      
11.Pap .IE.3          .              .             1.0000    333925.0000      
11.Pap .PA.1          .              .             1.0000    310000.0000      
11.Pap .PA.2          .              .             1.0000    294500.0000      
11.Pap .PA.3          .              .             1.0000    279775.0000      
11.Pap .KI.1          .              .             1.0000    330000.0000      
11.Pap .KI.2          .              .             1.0000    313500.0000      
11.Pap .KI.3          .              .             1.0000    297825.0000      
12.Mas .EU.1          .              .             1.0000    127600.0000      
12.Mas .EU.2          .              .             1.0000    121220.0000      
12.Mas .EU.3          .              .             1.0000    115159.0000      
12.Mas .IE.1          .              .             1.0000     22000.0000      
12.Mas .IE.2          .              .             1.0000     20900.0000      
12.Mas .IE.3          .              .             1.0000     19855.0000      
12.Mas .PA.1          .              .             1.0000      8800.0000      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 22:25:36 Page 168
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 416


     VAR u  1 if we use n boats for product j shiping to region k, 0 otherwise

                    LOWER          LEVEL          UPPER         MARGINAL

12.Mas .PA.2          .              .             1.0000      8360.0000      
12.Mas .PA.3          .              .             1.0000      7942.0000      
12.Mas .KI.1          .              .             1.0000    -16500.0000      
12.Mas .KI.2          .              .             1.0000    -15675.0000      
12.Mas .KI.3          .              .             1.0000    -14891.2500      
12.Kus .EU.1          .              .             1.0000         EPS         
12.Kus .EU.2          .              .             1.0000         EPS         
12.Kus .EU.3          .              .             1.0000         EPS         
12.Kus .IE.1          .              .             1.0000         EPS         
12.Kus .IE.2          .              .             1.0000         EPS         
12.Kus .IE.3          .              .             1.0000         EPS         
12.Kus .PA.1          .              .             1.0000         EPS         
12.Kus .PA.2          .              .             1.0000         EPS         
12.Kus .PA.3          .              .             1.0000         EPS         
12.Kus .KI.1          .              .             1.0000         EPS         
12.Kus .KI.2          .              .             1.0000         EPS         
12.Kus .KI.3          .              .             1.0000         EPS         
12.Kos .EU.1          .              .             1.0000    -26400.0000      
12.Kos .EU.2          .              .             1.0000    -25080.0000      
12.Kos .EU.3          .              .             1.0000    -23826.0000      
12.Kos .IE.1          .              .             1.0000    -88000.0000      
12.Kos .IE.2          .              .             1.0000    -83600.0000      
12.Kos .IE.3          .              .             1.0000    -79420.0000      
12.Kos .PA.1          .              .             1.0000   -101200.0000      
12.Kos .PA.2          .              .             1.0000    -96140.0000      
12.Kos .PA.3          .              .             1.0000    -91333.0000      
12.Kos .KI.1          .              .             1.0000   -126500.0000      
12.Kos .KI.2          .              .             1.0000   -120175.0000      
12.Kos .KI.3          .              .             1.0000   -114166.2500      
12.Kuv .EU.1          .              .             1.0000    435600.0000      
12.Kuv .EU.2          .              .             1.0000    413820.0000      
12.Kuv .EU.3          .              .             1.0000    393129.0000      
12.Kuv .IE.1          .              .             1.0000    297000.0000      
12.Kuv .IE.2          .              .             1.0000    282150.0000      
12.Kuv .IE.3          .              .             1.0000    268042.5000      
12.Kuv .PA.1          .              .             1.0000    250800.0000      
12.Kuv .PA.2          .              .             1.0000    238260.0000      
12.Kuv .PA.3          .              .             1.0000    226347.0000      
12.Kuv .KI.1          .              .             1.0000    203500.0000      
12.Kuv .KI.2          .              .             1.0000    193325.0000      
12.Kuv .KI.3          .              .             1.0000    183658.7500      
12.Kov .EU.1          .              .             1.0000    424600.0000      
12.Kov .EU.2          .              .             1.0000    403370.0000      
12.Kov .EU.3          .              .             1.0000    383201.5000      
12.Kov .IE.1          .              .             1.0000    330000.0000      
12.Kov .IE.2          .              .             1.0000    313500.0000      
12.Kov .IE.3          .              .             1.0000    297825.0000      
12.Kov .PA.1          .              .             1.0000    283800.0000      
12.Kov .PA.2          .              .             1.0000    269610.0000      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 22:25:36 Page 169
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 416


     VAR u  1 if we use n boats for product j shiping to region k, 0 otherwise

                    LOWER          LEVEL          UPPER         MARGINAL

12.Kov .PA.3          .              .             1.0000    256129.5000      
12.Kov .KI.1          .              .             1.0000    236500.0000      
12.Kov .KI.2          .              .             1.0000    224675.0000      
12.Kov .KI.3          .              .             1.0000    213441.2500      
12.Hsel.EU.1          .              .             1.0000    228800.0000      
12.Hsel.EU.2          .              .             1.0000    217360.0000      
12.Hsel.EU.3          .              .             1.0000    206492.0000      
12.Hsel.IE.1          .              .             1.0000    226600.0000      
12.Hsel.IE.2          .              .             1.0000    215270.0000      
12.Hsel.IE.3          .              .             1.0000    204506.5000      
12.Hsel.PA.1          .              .             1.0000    192500.0000      
12.Hsel.PA.2          .              .             1.0000    182875.0000      
12.Hsel.PA.3          .              .             1.0000    173731.2500      
12.Hsel.KI.1          .              .             1.0000    213400.0000      
12.Hsel.KI.2          .              .             1.0000    202730.0000      
12.Hsel.KI.3          .              .             1.0000    192593.5000      
12.Lsel.EU.1          .              .             1.0000    238700.0000      
12.Lsel.EU.2          .              .             1.0000    226765.0000      
12.Lsel.EU.3          .              .             1.0000    215426.7500      
12.Lsel.IE.1          .              .             1.0000    283800.0000      
12.Lsel.IE.2          .              .             1.0000    269610.0000      
12.Lsel.IE.3          .              .             1.0000    256129.5000      
12.Lsel.PA.1          .              .             1.0000    192500.0000      
12.Lsel.PA.2          .              .             1.0000    182875.0000      
12.Lsel.PA.3          .              .             1.0000    173731.2500      
12.Lsel.KI.1          .              .             1.0000    190300.0000      
12.Lsel.KI.2          .              .             1.0000    180785.0000      
12.Lsel.KI.3          .              .             1.0000    171745.7500      
12.Pap .EU.1          .              .             1.0000    446600.0000      
12.Pap .EU.2          .              .             1.0000    424270.0000      
12.Pap .EU.3          .              .             1.0000    403056.5000      
12.Pap .IE.1          .              .             1.0000    396000.0000      
12.Pap .IE.2          .              .             1.0000    376200.0000      
12.Pap .IE.3          .              .             1.0000    357390.0000      
12.Pap .PA.1          .              .             1.0000    327800.0000      
12.Pap .PA.2          .              .             1.0000    311410.0000      
12.Pap .PA.3          .              .             1.0000    295839.5000      
12.Pap .KI.1          .              .             1.0000    346500.0000      
12.Pap .KI.2          .              .             1.0000    329175.0000      
12.Pap .KI.3          .              .             1.0000    312716.2500      
13.Mas .EU.1          .              .             1.0000    134400.0000      
13.Mas .EU.2          .              .             1.0000    127680.0000      
13.Mas .EU.3          .              .             1.0000    121296.0000      
13.Mas .IE.1          .              .             1.0000     12000.0000      
13.Mas .IE.2          .              .             1.0000     11400.0000      
13.Mas .IE.3          .              .             1.0000     10830.0000      
13.Mas .PA.1          .              .             1.0000     -4800.0000      
13.Mas .PA.2          .              .             1.0000     -4560.0000      
13.Mas .PA.3          .              .             1.0000     -4332.0000      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 22:25:36 Page 170
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 416


     VAR u  1 if we use n boats for product j shiping to region k, 0 otherwise

                    LOWER          LEVEL          UPPER         MARGINAL

13.Mas .KI.1          .              .             1.0000    -36000.0000      
13.Mas .KI.2          .              .             1.0000    -34200.0000      
13.Mas .KI.3          .              .             1.0000    -32490.0000      
13.Kus .EU.1          .              .             1.0000         EPS         
13.Kus .EU.2          .              .             1.0000         EPS         
13.Kus .EU.3          .              .             1.0000         EPS         
13.Kus .IE.1          .              .             1.0000         EPS         
13.Kus .IE.2          .              .             1.0000         EPS         
13.Kus .IE.3          .              .             1.0000         EPS         
13.Kus .PA.1          .              .             1.0000         EPS         
13.Kus .PA.2          .              .             1.0000         EPS         
13.Kus .PA.3          .              .             1.0000         EPS         
13.Kus .KI.1          .              .             1.0000         EPS         
13.Kus .KI.2          .              .             1.0000         EPS         
13.Kus .KI.3          .              .             1.0000         EPS         
13.Kos .EU.1          .              .             1.0000    -45600.0000      
13.Kos .EU.2          .              .             1.0000    -43320.0000      
13.Kos .EU.3          .              .             1.0000    -41154.0000      
13.Kos .IE.1          .              .             1.0000   -120000.0000      
13.Kos .IE.2          .              .             1.0000   -114000.0000      
13.Kos .IE.3          .              .             1.0000   -108300.0000      
13.Kos .PA.1          .              .             1.0000   -136800.0000      
13.Kos .PA.2          .              .             1.0000   -129960.0000      
13.Kos .PA.3          .              .             1.0000   -123462.0000      
13.Kos .KI.1          .              .             1.0000   -168000.0000      
13.Kos .KI.2          .              .             1.0000   -159600.0000      
13.Kos .KI.3          .              .             1.0000   -151620.0000      
13.Kuv .EU.1          .              .             1.0000    470400.0000      
13.Kuv .EU.2          .              .             1.0000    446880.0000      
13.Kuv .EU.3          .              .             1.0000    424536.0000      
13.Kuv .IE.1          .              .             1.0000    312000.0000      
13.Kuv .IE.2          .              .             1.0000    296400.0000      
13.Kuv .IE.3          .              .             1.0000    281580.0000      
13.Kuv .PA.1          .              .             1.0000    259200.0000      
13.Kuv .PA.2          .              .             1.0000    246240.0000      
13.Kuv .PA.3          .              .             1.0000    233928.0000      
13.Kuv .KI.1          .              .             1.0000    204000.0000      
13.Kuv .KI.2          .              .             1.0000    193800.0000      
13.Kuv .KI.3          .              .             1.0000    184110.0000      
13.Kov .EU.1          .              .             1.0000    458400.0000      
13.Kov .EU.2          .              .             1.0000    435480.0000      
13.Kov .EU.3          .              .             1.0000    413706.0000      
13.Kov .IE.1          .              .             1.0000    348000.0000      
13.Kov .IE.2          .              .             1.0000    330600.0000      
13.Kov .IE.3          .              .             1.0000    314070.0000      
13.Kov .PA.1          .              .             1.0000    295200.0000      
13.Kov .PA.2          .              .             1.0000    280440.0000      
13.Kov .PA.3          .              .             1.0000    266418.0000      
13.Kov .KI.1          .              .             1.0000    240000.0000      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 22:25:36 Page 171
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 416


     VAR u  1 if we use n boats for product j shiping to region k, 0 otherwise

                    LOWER          LEVEL          UPPER         MARGINAL

13.Kov .KI.2          .              .             1.0000    228000.0000      
13.Kov .KI.3          .              .             1.0000    216600.0000      
13.Hsel.EU.1          .              .             1.0000    247200.0000      
13.Hsel.EU.2          .              .             1.0000    234840.0000      
13.Hsel.EU.3          .              .             1.0000    223098.0000      
13.Hsel.IE.1          .              .             1.0000    242400.0000      
13.Hsel.IE.2          .              .             1.0000    230280.0000      
13.Hsel.IE.3          .              .             1.0000    218766.0000      
13.Hsel.PA.1          .              .             1.0000    204000.0000      
13.Hsel.PA.2          .              .             1.0000    193800.0000      
13.Hsel.PA.3          .              .             1.0000    184110.0000      
13.Hsel.KI.1          .              .             1.0000    225600.0000      
13.Hsel.KI.2          .              .             1.0000    214320.0000      
13.Hsel.KI.3          .              .             1.0000    203604.0000      
13.Lsel.EU.1          .              .             1.0000    256800.0000      
13.Lsel.EU.2          .              .             1.0000    243960.0000      
13.Lsel.EU.3          .              .             1.0000    231762.0000      
13.Lsel.IE.1          .              .             1.0000    307200.0000      
13.Lsel.IE.2          .              .             1.0000    291840.0000      
13.Lsel.IE.3          .              .             1.0000    277248.0000      
13.Lsel.PA.1          .              .             1.0000    204000.0000      
13.Lsel.PA.2          .              .             1.0000    193800.0000      
13.Lsel.PA.3          .              .             1.0000    184110.0000      
13.Lsel.KI.1          .              .             1.0000    199200.0000      
13.Lsel.KI.2          .              .             1.0000    189240.0000      
13.Lsel.KI.3          .              .             1.0000    179778.0000      
13.Pap .EU.1          .              .             1.0000    482400.0000      
13.Pap .EU.2          .              .             1.0000    458280.0000      
13.Pap .EU.3          .              .             1.0000    435366.0000      
13.Pap .IE.1          .              .             1.0000    420000.0000      
13.Pap .IE.2          .              .             1.0000    399000.0000      
13.Pap .IE.3          .              .             1.0000    379050.0000      
13.Pap .PA.1          .              .             1.0000    343200.0000      
13.Pap .PA.2          .              .             1.0000    326040.0000      
13.Pap .PA.3          .              .             1.0000    309738.0000      
13.Pap .KI.1          .              .             1.0000    360000.0000      
13.Pap .KI.2          .              .             1.0000    342000.0000      
13.Pap .KI.3          .              .             1.0000    324900.0000      
14.Mas .EU.1          .              .             1.0000    140400.0000      
14.Mas .EU.2          .              .             1.0000    133380.0000      
14.Mas .EU.3          .              .             1.0000    126711.0000      
14.Mas .IE.1          .              .             1.0000         EPS         
14.Mas .IE.2          .              .             1.0000         EPS         
14.Mas .IE.3          .              .             1.0000         EPS         
14.Mas .PA.1          .              .             1.0000    -20800.0000      
14.Mas .PA.2          .              .             1.0000    -19760.0000      
14.Mas .PA.3          .              .             1.0000    -18772.0000      
14.Mas .KI.1          .              .             1.0000    -58500.0000      
14.Mas .KI.2          .              .             1.0000    -55575.0000      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 22:25:36 Page 172
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 416


     VAR u  1 if we use n boats for product j shiping to region k, 0 otherwise

                    LOWER          LEVEL          UPPER         MARGINAL

14.Mas .KI.3          .              .             1.0000    -52796.2500      
14.Kus .EU.1          .              .             1.0000         EPS         
14.Kus .EU.2          .              .             1.0000         EPS         
14.Kus .EU.3          .              .             1.0000         EPS         
14.Kus .IE.1          .              .             1.0000         EPS         
14.Kus .IE.2          .              .             1.0000         EPS         
14.Kus .IE.3          .              .             1.0000         EPS         
14.Kus .PA.1          .              .             1.0000         EPS         
14.Kus .PA.2          .              .             1.0000         EPS         
14.Kus .PA.3          .              .             1.0000         EPS         
14.Kus .KI.1          .              .             1.0000         EPS         
14.Kus .KI.2          .              .             1.0000         EPS         
14.Kus .KI.3          .              .             1.0000         EPS         
14.Kos .EU.1          .              .             1.0000    -67600.0000      
14.Kos .EU.2          .              .             1.0000    -64220.0000      
14.Kos .EU.3          .              .             1.0000    -61009.0000      
14.Kos .IE.1          .              .             1.0000   -156000.0000      
14.Kos .IE.2          .              .             1.0000   -148200.0000      
14.Kos .IE.3          .              .             1.0000   -140790.0000      
14.Kos .PA.1          .              .             1.0000   -176800.0000      
14.Kos .PA.2          .              .             1.0000   -167960.0000      
14.Kos .PA.3          .              .             1.0000   -159562.0000      
14.Kos .KI.1          .              .             1.0000   -214500.0000      
14.Kos .KI.2          .              .             1.0000   -203775.0000      
14.Kos .KI.3          .              .             1.0000   -193586.2500      
14.Kuv .EU.1          .              .             1.0000    504400.0000      
14.Kuv .EU.2          .              .             1.0000    479180.0000      
14.Kuv .EU.3          .              .             1.0000    455221.0000      
14.Kuv .IE.1          .              .             1.0000    325000.0000      
14.Kuv .IE.2          .              .             1.0000    308750.0000      
14.Kuv .IE.3          .              .             1.0000    293312.5000      
14.Kuv .PA.1          .              .             1.0000    265200.0000      
14.Kuv .PA.2          .              .             1.0000    251940.0000      
14.Kuv .PA.3          .              .             1.0000    239343.0000      
14.Kuv .KI.1          .              .             1.0000    201500.0000      
14.Kuv .KI.2          .              .             1.0000    191425.0000      
14.Kuv .KI.3          .              .             1.0000    181853.7500      
14.Kov .EU.1          .              .             1.0000    491400.0000      
14.Kov .EU.2          .              .             1.0000    466830.0000      
14.Kov .EU.3          .              .             1.0000    443488.5000      
14.Kov .IE.1          .              .             1.0000    364000.0000      
14.Kov .IE.2          .              .             1.0000    345800.0000      
14.Kov .IE.3          .              .             1.0000    328510.0000      
14.Kov .PA.1          .              .             1.0000    304200.0000      
14.Kov .PA.2          .              .             1.0000    288990.0000      
14.Kov .PA.3          .              .             1.0000    274540.5000      
14.Kov .KI.1          .              .             1.0000    240500.0000      
14.Kov .KI.2          .              .             1.0000    228475.0000      
14.Kov .KI.3          .              .             1.0000    217051.2500      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 22:25:36 Page 173
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 416


     VAR u  1 if we use n boats for product j shiping to region k, 0 otherwise

                    LOWER          LEVEL          UPPER         MARGINAL

14.Hsel.EU.1          .              .             1.0000    265200.0000      
14.Hsel.EU.2          .              .             1.0000    251940.0000      
14.Hsel.EU.3          .              .             1.0000    239343.0000      
14.Hsel.IE.1          .              .             1.0000    257400.0000      
14.Hsel.IE.2          .              .             1.0000    244530.0000      
14.Hsel.IE.3          .              .             1.0000    232303.5000      
14.Hsel.PA.1          .              .             1.0000    214500.0000      
14.Hsel.PA.2          .              .             1.0000    203775.0000      
14.Hsel.PA.3          .              .             1.0000    193586.2500      
14.Hsel.KI.1          .              .             1.0000    236600.0000      
14.Hsel.KI.2          .              .             1.0000    224770.0000      
14.Hsel.KI.3          .              .             1.0000    213531.5000      
14.Lsel.EU.1          .              .             1.0000    274300.0000      
14.Lsel.EU.2          .              .             1.0000    260585.0000      
14.Lsel.EU.3          .              .             1.0000    247555.7500      
14.Lsel.IE.1          .              .             1.0000    330200.0000      
14.Lsel.IE.2          .              .             1.0000    313690.0000      
14.Lsel.IE.3          .              .             1.0000    298005.5000      
14.Lsel.PA.1          .              .             1.0000    214500.0000      
14.Lsel.PA.2          .              .             1.0000    203775.0000      
14.Lsel.PA.3          .              .             1.0000    193586.2500      
14.Lsel.KI.1          .              .             1.0000    206700.0000      
14.Lsel.KI.2          .              .             1.0000    196365.0000      
14.Lsel.KI.3          .              .             1.0000    186546.7500      
14.Pap .EU.1          .              .             1.0000    517400.0000      
14.Pap .EU.2          .              .             1.0000    491530.0000      
14.Pap .EU.3          .              .             1.0000    466953.5000      
14.Pap .IE.1          .              .             1.0000    442000.0000      
14.Pap .IE.2          .              .             1.0000    419900.0000      
14.Pap .IE.3          .              .             1.0000    398905.0000      
14.Pap .PA.1          .              .             1.0000    356200.0000      
14.Pap .PA.2          .              .             1.0000    338390.0000      
14.Pap .PA.3          .              .             1.0000    321470.5000      
14.Pap .KI.1          .              .             1.0000    370500.0000      
14.Pap .KI.2          .              .             1.0000    351975.0000      
14.Pap .KI.3          .              .             1.0000    334376.2500      
15.Mas .EU.1          .              .             1.0000    145600.0000      
15.Mas .EU.2          .              .             1.0000    138320.0000      
15.Mas .EU.3          .              .             1.0000    131404.0000      
15.Mas .IE.1          .              .             1.0000    -14000.0000      
15.Mas .IE.2          .              .             1.0000    -13300.0000      
15.Mas .IE.3          .              .             1.0000    -12635.0000      
15.Mas .PA.1          .              .             1.0000    -39200.0000      
15.Mas .PA.2          .              .             1.0000    -37240.0000      
15.Mas .PA.3          .              .             1.0000    -35378.0000      
15.Mas .KI.1          .              .             1.0000    -84000.0000      
15.Mas .KI.2          .              .             1.0000    -79800.0000      
15.Mas .KI.3          .              .             1.0000    -75810.0000      
15.Kus .EU.1          .              .             1.0000         EPS         
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 22:25:36 Page 174
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 416


     VAR u  1 if we use n boats for product j shiping to region k, 0 otherwise

                    LOWER          LEVEL          UPPER         MARGINAL

15.Kus .EU.2          .              .             1.0000         EPS         
15.Kus .EU.3          .              .             1.0000         EPS         
15.Kus .IE.1          .              .             1.0000         EPS         
15.Kus .IE.2          .              .             1.0000         EPS         
15.Kus .IE.3          .              .             1.0000         EPS         
15.Kus .PA.1          .              .             1.0000         EPS         
15.Kus .PA.2          .              .             1.0000         EPS         
15.Kus .PA.3          .              .             1.0000         EPS         
15.Kus .KI.1          .              .             1.0000         EPS         
15.Kus .KI.2          .              .             1.0000         EPS         
15.Kus .KI.3          .              .             1.0000         EPS         
15.Kos .EU.1          .              .             1.0000    -92400.0000      
15.Kos .EU.2          .              .             1.0000    -87780.0000      
15.Kos .EU.3          .              .             1.0000    -83391.0000      
15.Kos .IE.1          .              .             1.0000   -196000.0000      
15.Kos .IE.2          .              .             1.0000   -186200.0000      
15.Kos .IE.3          .              .             1.0000   -176890.0000      
15.Kos .PA.1          .              .             1.0000   -221200.0000      
15.Kos .PA.2          .              .             1.0000   -210140.0000      
15.Kos .PA.3          .              .             1.0000   -199633.0000      
15.Kos .KI.1          .              .             1.0000   -266000.0000      
15.Kos .KI.2          .              .             1.0000   -252700.0000      
15.Kos .KI.3          .              .             1.0000   -240065.0000      
15.Kuv .EU.1          .              .             1.0000    537600.0000      
15.Kuv .EU.2          .              .             1.0000    510720.0000      
15.Kuv .EU.3          .              .             1.0000    485184.0000      
15.Kuv .IE.1          .              .             1.0000    336000.0000      
15.Kuv .IE.2          .              .             1.0000    319200.0000      
15.Kuv .IE.3          .              .             1.0000    303240.0000      
15.Kuv .PA.1          .              .             1.0000    268800.0000      
15.Kuv .PA.2          .              .             1.0000    255360.0000      
15.Kuv .PA.3          .              .             1.0000    242592.0000      
15.Kuv .KI.1          .              .             1.0000    196000.0000      
15.Kuv .KI.2          .              .             1.0000    186200.0000      
15.Kuv .KI.3          .              .             1.0000    176890.0000      
15.Kov .EU.1          .              .             1.0000    523600.0000      
15.Kov .EU.2          .              .             1.0000    497420.0000      
15.Kov .EU.3          .              .             1.0000    472549.0000      
15.Kov .IE.1          .              .             1.0000    378000.0000      
15.Kov .IE.2          .              .             1.0000    359100.0000      
15.Kov .IE.3          .              .             1.0000    341145.0000      
15.Kov .PA.1          .              .             1.0000    310800.0000      
15.Kov .PA.2          .              .             1.0000    295260.0000      
15.Kov .PA.3          .              .             1.0000    280497.0000      
15.Kov .KI.1          .              .             1.0000    238000.0000      
15.Kov .KI.2          .              .             1.0000    226100.0000      
15.Kov .KI.3          .              .             1.0000    214795.0000      
15.Hsel.EU.1          .              .             1.0000    282800.0000      
15.Hsel.EU.2          .              .             1.0000    268660.0000      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 22:25:36 Page 175
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 416


     VAR u  1 if we use n boats for product j shiping to region k, 0 otherwise

                    LOWER          LEVEL          UPPER         MARGINAL

15.Hsel.EU.3          .              .             1.0000    255227.0000      
15.Hsel.IE.1          .              .             1.0000    271600.0000      
15.Hsel.IE.2          .              .             1.0000    258020.0000      
15.Hsel.IE.3          .              .             1.0000    245119.0000      
15.Hsel.PA.1          .              .             1.0000    224000.0000      
15.Hsel.PA.2          .              .             1.0000    212800.0000      
15.Hsel.PA.3          .              .             1.0000    202160.0000      
15.Hsel.KI.1          .              .             1.0000    246400.0000      
15.Hsel.KI.2          .              .             1.0000    234080.0000      
15.Hsel.KI.3          .              .             1.0000    222376.0000      
15.Lsel.EU.1          .              .             1.0000    291200.0000      
15.Lsel.EU.2          .              .             1.0000    276640.0000      
15.Lsel.EU.3          .              .             1.0000    262808.0000      
15.Lsel.IE.1          .              .             1.0000    352800.0000      
15.Lsel.IE.2          .              .             1.0000    335160.0000      
15.Lsel.IE.3          .              .             1.0000    318402.0000      
15.Lsel.PA.1          .              .             1.0000    224000.0000      
15.Lsel.PA.2          .              .             1.0000    212800.0000      
15.Lsel.PA.3          .              .             1.0000    202160.0000      
15.Lsel.KI.1          .              .             1.0000    212800.0000      
15.Lsel.KI.2          .              .             1.0000    202160.0000      
15.Lsel.KI.3          .              .             1.0000    192052.0000      
15.Pap .EU.1          .              .             1.0000    551600.0000      
15.Pap .EU.2          .              .             1.0000    524020.0000      
15.Pap .EU.3          .              .             1.0000    497819.0000      
15.Pap .IE.1          .              .             1.0000    462000.0000      
15.Pap .IE.2          .              .             1.0000    438900.0000      
15.Pap .IE.3          .              .             1.0000    416955.0000      
15.Pap .PA.1          .              .             1.0000    366800.0000      
15.Pap .PA.2          .              .             1.0000    348460.0000      
15.Pap .PA.3          .              .             1.0000    331037.0000      
15.Pap .KI.1          .              .             1.0000    378000.0000      
15.Pap .KI.2          .              .             1.0000    359100.0000      
15.Pap .KI.3          .              .             1.0000    341145.0000      
16.Mas .EU.1          .              .             1.0000    150000.0000      
16.Mas .EU.2          .              .             1.0000    142500.0000      
16.Mas .EU.3          .              .             1.0000    135375.0000      
16.Mas .IE.1          .              .             1.0000    -30000.0000      
16.Mas .IE.2          .              .             1.0000    -28500.0000      
16.Mas .IE.3          .              .             1.0000    -27075.0000      
16.Mas .PA.1          .              .             1.0000    -60000.0000      
16.Mas .PA.2          .              .             1.0000    -57000.0000      
16.Mas .PA.3          .              .             1.0000    -54150.0000      
16.Mas .KI.1          .              .             1.0000   -112500.0000      
16.Mas .KI.2          .              .             1.0000   -106875.0000      
16.Mas .KI.3          .              .             1.0000   -101531.2500      
16.Kus .EU.1          .              .             1.0000         EPS         
16.Kus .EU.2          .              .             1.0000         EPS         
16.Kus .EU.3          .              .             1.0000         EPS         
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 22:25:36 Page 176
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 416


     VAR u  1 if we use n boats for product j shiping to region k, 0 otherwise

                    LOWER          LEVEL          UPPER         MARGINAL

16.Kus .IE.1          .              .             1.0000         EPS         
16.Kus .IE.2          .              .             1.0000         EPS         
16.Kus .IE.3          .              .             1.0000         EPS         
16.Kus .PA.1          .              .             1.0000         EPS         
16.Kus .PA.2          .              .             1.0000         EPS         
16.Kus .PA.3          .              .             1.0000         EPS         
16.Kus .KI.1          .              .             1.0000         EPS         
16.Kus .KI.2          .              .             1.0000         EPS         
16.Kus .KI.3          .              .             1.0000         EPS         
16.Kos .EU.1          .              .             1.0000   -120000.0000      
16.Kos .EU.2          .              .             1.0000   -114000.0000      
16.Kos .EU.3          .              .             1.0000   -108300.0000      
16.Kos .IE.1          .              .             1.0000   -240000.0000      
16.Kos .IE.2          .              .             1.0000   -228000.0000      
16.Kos .IE.3          .              .             1.0000   -216600.0000      
16.Kos .PA.1          .              .             1.0000   -270000.0000      
16.Kos .PA.2          .              .             1.0000   -256500.0000      
16.Kos .PA.3          .              .             1.0000   -243675.0000      
16.Kos .KI.1          .              .             1.0000   -322500.0000      
16.Kos .KI.2          .              .             1.0000   -306375.0000      
16.Kos .KI.3          .              .             1.0000   -291056.2500      
16.Kuv .EU.1          .              .             1.0000    570000.0000      
16.Kuv .EU.2          .              .             1.0000    541500.0000      
16.Kuv .EU.3          .              .             1.0000    514425.0000      
16.Kuv .IE.1          .              .             1.0000    345000.0000      
16.Kuv .IE.2          .              .             1.0000    327750.0000      
16.Kuv .IE.3          .              .             1.0000    311362.5000      
16.Kuv .PA.1          .              .             1.0000    270000.0000      
16.Kuv .PA.2          .              .             1.0000    256500.0000      
16.Kuv .PA.3          .              .             1.0000    243675.0000      
16.Kuv .KI.1          .              .             1.0000    187500.0000      
16.Kuv .KI.2          .              .             1.0000    178125.0000      
16.Kuv .KI.3          .              .             1.0000    169218.7500      
16.Kov .EU.1          .              .             1.0000    555000.0000      
16.Kov .EU.2          .              .             1.0000    527250.0000      
16.Kov .EU.3          .              .             1.0000    500887.5000      
16.Kov .IE.1          .              .             1.0000    390000.0000      
16.Kov .IE.2          .              .             1.0000    370500.0000      
16.Kov .IE.3          .              .             1.0000    351975.0000      
16.Kov .PA.1          .              .             1.0000    315000.0000      
16.Kov .PA.2          .              .             1.0000    299250.0000      
16.Kov .PA.3          .              .             1.0000    284287.5000      
16.Kov .KI.1          .              .             1.0000    232500.0000      
16.Kov .KI.2          .              .             1.0000    220875.0000      
16.Kov .KI.3          .              .             1.0000    209831.2500      
16.Hsel.EU.1          .              .             1.0000    300000.0000      
16.Hsel.EU.2          .              .             1.0000    285000.0000      
16.Hsel.EU.3          .              .             1.0000    270750.0000      
16.Hsel.IE.1          .              .             1.0000    285000.0000      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 22:25:36 Page 177
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 416


     VAR u  1 if we use n boats for product j shiping to region k, 0 otherwise

                    LOWER          LEVEL          UPPER         MARGINAL

16.Hsel.IE.2          .              .             1.0000    270750.0000      
16.Hsel.IE.3          .              .             1.0000    257212.5000      
16.Hsel.PA.1          .              .             1.0000    232500.0000      
16.Hsel.PA.2          .              .             1.0000    220875.0000      
16.Hsel.PA.3          .              .             1.0000    209831.2500      
16.Hsel.KI.1          .              .             1.0000    255000.0000      
16.Hsel.KI.2          .              .             1.0000    242250.0000      
16.Hsel.KI.3          .              .             1.0000    230137.5000      
16.Lsel.EU.1          .              .             1.0000    307500.0000      
16.Lsel.EU.2          .              .             1.0000    292125.0000      
16.Lsel.EU.3          .              .             1.0000    277518.7500      
16.Lsel.IE.1          .              .             1.0000    375000.0000      
16.Lsel.IE.2          .              .             1.0000    356250.0000      
16.Lsel.IE.3          .              .             1.0000    338437.5000      
16.Lsel.PA.1          .              .             1.0000    232500.0000      
16.Lsel.PA.2          .              .             1.0000    220875.0000      
16.Lsel.PA.3          .              .             1.0000    209831.2500      
16.Lsel.KI.1          .              .             1.0000    217500.0000      
16.Lsel.KI.2          .              .             1.0000    206625.0000      
16.Lsel.KI.3          .              .             1.0000    196293.7500      
16.Pap .EU.1          .              .             1.0000    585000.0000      
16.Pap .EU.2          .              .             1.0000    555750.0000      
16.Pap .EU.3          .              .             1.0000    527962.5000      
16.Pap .IE.1          .              .             1.0000    480000.0000      
16.Pap .IE.2          .              .             1.0000    456000.0000      
16.Pap .IE.3          .              .             1.0000    433200.0000      
16.Pap .PA.1          .              .             1.0000    375000.0000      
16.Pap .PA.2          .              .             1.0000    356250.0000      
16.Pap .PA.3          .              .             1.0000    338437.5000      
16.Pap .KI.1          .              .             1.0000    382500.0000      
16.Pap .KI.2          .              .             1.0000    363375.0000      
16.Pap .KI.3          .              .             1.0000    345206.2500      
17.Mas .EU.1          .              .             1.0000    153600.0000      
17.Mas .EU.2          .              .             1.0000    145920.0000      
17.Mas .EU.3          .              .             1.0000    138624.0000      
17.Mas .IE.1          .              .             1.0000    -48000.0000      
17.Mas .IE.2          .              .             1.0000    -45600.0000      
17.Mas .IE.3          .              .             1.0000    -43320.0000      
17.Mas .PA.1          .              .             1.0000    -83200.0000      
17.Mas .PA.2          .              .             1.0000    -79040.0000      
17.Mas .PA.3          .              .             1.0000    -75088.0000      
17.Mas .KI.1          .              .             1.0000   -144000.0000      
17.Mas .KI.2          .              .             1.0000   -136800.0000      
17.Mas .KI.3          .              .             1.0000   -129960.0000      
17.Kus .EU.1          .              .             1.0000         EPS         
17.Kus .EU.2          .              .             1.0000         EPS         
17.Kus .EU.3          .              .             1.0000         EPS         
17.Kus .IE.1          .              .             1.0000         EPS         
17.Kus .IE.2          .              .             1.0000         EPS         
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 22:25:36 Page 178
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 416


     VAR u  1 if we use n boats for product j shiping to region k, 0 otherwise

                    LOWER          LEVEL          UPPER         MARGINAL

17.Kus .IE.3          .              .             1.0000         EPS         
17.Kus .PA.1          .              .             1.0000         EPS         
17.Kus .PA.2          .              .             1.0000         EPS         
17.Kus .PA.3          .              .             1.0000         EPS         
17.Kus .KI.1          .              .             1.0000         EPS         
17.Kus .KI.2          .              .             1.0000         EPS         
17.Kus .KI.3          .              .             1.0000         EPS         
17.Kos .EU.1          .              .             1.0000   -150400.0000      
17.Kos .EU.2          .              .             1.0000   -142880.0000      
17.Kos .EU.3          .              .             1.0000   -135736.0000      
17.Kos .IE.1          .              .             1.0000   -288000.0000      
17.Kos .IE.2          .              .             1.0000   -273600.0000      
17.Kos .IE.3          .              .             1.0000   -259920.0000      
17.Kos .PA.1          .              .             1.0000   -323200.0000      
17.Kos .PA.2          .              .             1.0000   -307040.0000      
17.Kos .PA.3          .              .             1.0000   -291688.0000      
17.Kos .KI.1          .              .             1.0000   -384000.0000      
17.Kos .KI.2          .              .             1.0000   -364800.0000      
17.Kos .KI.3          .              .             1.0000   -346560.0000      
17.Kuv .EU.1          .              .             1.0000    601600.0000      
17.Kuv .EU.2          .              .             1.0000    571520.0000      
17.Kuv .EU.3          .              .             1.0000    542944.0000      
17.Kuv .IE.1          .              .             1.0000    352000.0000      
17.Kuv .IE.2          .              .             1.0000    334400.0000      
17.Kuv .IE.3          .              .             1.0000    317680.0000      
17.Kuv .PA.1          .              .             1.0000    268800.0000      
17.Kuv .PA.2          .              .             1.0000    255360.0000      
17.Kuv .PA.3          .              .             1.0000    242592.0000      
17.Kuv .KI.1          .              .             1.0000    176000.0000      
17.Kuv .KI.2          .              .             1.0000    167200.0000      
17.Kuv .KI.3          .              .             1.0000    158840.0000      
17.Kov .EU.1          .              .             1.0000    585600.0000      
17.Kov .EU.2          .              .             1.0000    556320.0000      
17.Kov .EU.3          .              .             1.0000    528504.0000      
17.Kov .IE.1          .              .             1.0000    400000.0000      
17.Kov .IE.2          .              .             1.0000    380000.0000      
17.Kov .IE.3          .              .             1.0000    361000.0000      
17.Kov .PA.1          .              .             1.0000    316800.0000      
17.Kov .PA.2          .              .             1.0000    300960.0000      
17.Kov .PA.3          .              .             1.0000    285912.0000      
17.Kov .KI.1          .              .             1.0000    224000.0000      
17.Kov .KI.2          .              .             1.0000    212800.0000      
17.Kov .KI.3          .              .             1.0000    202160.0000      
17.Hsel.EU.1          .              .             1.0000    316800.0000      
17.Hsel.EU.2          .              .             1.0000    300960.0000      
17.Hsel.EU.3          .              .             1.0000    285912.0000      
17.Hsel.IE.1          .              .             1.0000    297600.0000      
17.Hsel.IE.2          .              .             1.0000    282720.0000      
17.Hsel.IE.3          .              .             1.0000    268584.0000      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 22:25:36 Page 179
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 416


     VAR u  1 if we use n boats for product j shiping to region k, 0 otherwise

                    LOWER          LEVEL          UPPER         MARGINAL

17.Hsel.PA.1          .              .             1.0000    240000.0000      
17.Hsel.PA.2          .              .             1.0000    228000.0000      
17.Hsel.PA.3          .              .             1.0000    216600.0000      
17.Hsel.KI.1          .              .             1.0000    262400.0000      
17.Hsel.KI.2          .              .             1.0000    249280.0000      
17.Hsel.KI.3          .              .             1.0000    236816.0000      
17.Lsel.EU.1          .              .             1.0000    323200.0000      
17.Lsel.EU.2          .              .             1.0000    307040.0000      
17.Lsel.EU.3          .              .             1.0000    291688.0000      
17.Lsel.IE.1          .              .             1.0000    396800.0000      
17.Lsel.IE.2          .              .             1.0000    376960.0000      
17.Lsel.IE.3          .              .             1.0000    358112.0000      
17.Lsel.PA.1          .              .             1.0000    240000.0000      
17.Lsel.PA.2          .              .             1.0000    228000.0000      
17.Lsel.PA.3          .              .             1.0000    216600.0000      
17.Lsel.KI.1          .              .             1.0000    220800.0000      
17.Lsel.KI.2          .              .             1.0000    209760.0000      
17.Lsel.KI.3          .              .             1.0000    199272.0000      
17.Pap .EU.1          .              .             1.0000    617600.0000      
17.Pap .EU.2          .              .             1.0000    586720.0000      
17.Pap .EU.3          .              .             1.0000    557384.0000      
17.Pap .IE.1          .              .             1.0000    496000.0000      
17.Pap .IE.2          .              .             1.0000    471200.0000      
17.Pap .IE.3          .              .             1.0000    447640.0000      
17.Pap .PA.1          .              .             1.0000    380800.0000      
17.Pap .PA.2          .              .             1.0000    361760.0000      
17.Pap .PA.3          .              .             1.0000    343672.0000      
17.Pap .KI.1          .              .             1.0000    384000.0000      
17.Pap .KI.2          .              .             1.0000    364800.0000      
17.Pap .KI.3          .              .             1.0000    346560.0000      
18.Mas .EU.1          .              .             1.0000    156400.0000      
18.Mas .EU.2          .              .             1.0000    148580.0000      
18.Mas .EU.3          .              .             1.0000    141151.0000      
18.Mas .IE.1          .              .             1.0000    -68000.0000      
18.Mas .IE.2          .              .             1.0000    -64600.0000      
18.Mas .IE.3          .              .             1.0000    -61370.0000      
18.Mas .PA.1          .              .             1.0000   -108800.0000      
18.Mas .PA.2          .              .             1.0000   -103360.0000      
18.Mas .PA.3          .              .             1.0000    -98192.0000      
18.Mas .KI.1          .              .             1.0000   -178500.0000      
18.Mas .KI.2          .              .             1.0000   -169575.0000      
18.Mas .KI.3          .              .             1.0000   -161096.2500      
18.Kus .EU.1          .              .             1.0000         EPS         
18.Kus .EU.2          .              .             1.0000         EPS         
18.Kus .EU.3          .              .             1.0000         EPS         
18.Kus .IE.1          .              .             1.0000         EPS         
18.Kus .IE.2          .              .             1.0000         EPS         
18.Kus .IE.3          .              .             1.0000         EPS         
18.Kus .PA.1          .              .             1.0000         EPS         
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 22:25:36 Page 180
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 416


     VAR u  1 if we use n boats for product j shiping to region k, 0 otherwise

                    LOWER          LEVEL          UPPER         MARGINAL

18.Kus .PA.2          .              .             1.0000         EPS         
18.Kus .PA.3          .              .             1.0000         EPS         
18.Kus .KI.1          .              .             1.0000         EPS         
18.Kus .KI.2          .              .             1.0000         EPS         
18.Kus .KI.3          .              .             1.0000         EPS         
18.Kos .EU.1          .              .             1.0000   -183600.0000      
18.Kos .EU.2          .              .             1.0000   -174420.0000      
18.Kos .EU.3          .              .             1.0000   -165699.0000      
18.Kos .IE.1          .              .             1.0000   -340000.0000      
18.Kos .IE.2          .              .             1.0000   -323000.0000      
18.Kos .IE.3          .              .             1.0000   -306850.0000      
18.Kos .PA.1          .              .             1.0000   -380800.0000      
18.Kos .PA.2          .              .             1.0000   -361760.0000      
18.Kos .PA.3          .              .             1.0000   -343672.0000      
18.Kos .KI.1          .              .             1.0000   -450500.0000      
18.Kos .KI.2          .              .             1.0000   -427975.0000      
18.Kos .KI.3          .              .             1.0000   -406576.2500      
18.Kuv .EU.1          .              .             1.0000    632400.0000      
18.Kuv .EU.2          .              .             1.0000    600780.0000      
18.Kuv .EU.3          .              .             1.0000    570741.0000      
18.Kuv .IE.1          .              .             1.0000    357000.0000      
18.Kuv .IE.2          .              .             1.0000    339150.0000      
18.Kuv .IE.3          .              .             1.0000    322192.5000      
18.Kuv .PA.1          .              .             1.0000    265200.0000      
18.Kuv .PA.2          .              .             1.0000    251940.0000      
18.Kuv .PA.3          .              .             1.0000    239343.0000      
18.Kuv .KI.1          .              .             1.0000    161500.0000      
18.Kuv .KI.2          .              .             1.0000    153425.0000      
18.Kuv .KI.3          .              .             1.0000    145753.7500      
18.Kov .EU.1          .              .             1.0000    615400.0000      
18.Kov .EU.2          .              .             1.0000    584630.0000      
18.Kov .EU.3          .              .             1.0000    555398.5000      
18.Kov .IE.1          .              .             1.0000    408000.0000      
18.Kov .IE.2          .              .             1.0000    387600.0000      
18.Kov .IE.3          .              .             1.0000    368220.0000      
18.Kov .PA.1          .              .             1.0000    316200.0000      
18.Kov .PA.2          .              .             1.0000    300390.0000      
18.Kov .PA.3          .              .             1.0000    285370.5000      
18.Kov .KI.1          .              .             1.0000    212500.0000      
18.Kov .KI.2          .              .             1.0000    201875.0000      
18.Kov .KI.3          .              .             1.0000    191781.2500      
18.Hsel.EU.1          .              .             1.0000    333200.0000      
18.Hsel.EU.2          .              .             1.0000    316540.0000      
18.Hsel.EU.3          .              .             1.0000    300713.0000      
18.Hsel.IE.1          .              .             1.0000    309400.0000      
18.Hsel.IE.2          .              .             1.0000    293930.0000      
18.Hsel.IE.3          .              .             1.0000    279233.5000      
18.Hsel.PA.1          .              .             1.0000    246500.0000      
18.Hsel.PA.2          .              .             1.0000    234175.0000      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 22:25:36 Page 181
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 416


     VAR u  1 if we use n boats for product j shiping to region k, 0 otherwise

                    LOWER          LEVEL          UPPER         MARGINAL

18.Hsel.PA.3          .              .             1.0000    222466.2500      
18.Hsel.KI.1          .              .             1.0000    268600.0000      
18.Hsel.KI.2          .              .             1.0000    255170.0000      
18.Hsel.KI.3          .              .             1.0000    242411.5000      
18.Lsel.EU.1          .              .             1.0000    338300.0000      
18.Lsel.EU.2          .              .             1.0000    321385.0000      
18.Lsel.EU.3          .              .             1.0000    305315.7500      
18.Lsel.IE.1          .              .             1.0000    418200.0000      
18.Lsel.IE.2          .              .             1.0000    397290.0000      
18.Lsel.IE.3          .              .             1.0000    377425.5000      
18.Lsel.PA.1          .              .             1.0000    246500.0000      
18.Lsel.PA.2          .              .             1.0000    234175.0000      
18.Lsel.PA.3          .              .             1.0000    222466.2500      
18.Lsel.KI.1          .              .             1.0000    222700.0000      
18.Lsel.KI.2          .              .             1.0000    211565.0000      
18.Lsel.KI.3          .              .             1.0000    200986.7500      
18.Pap .EU.1          .              .             1.0000    649400.0000      
18.Pap .EU.2          .              .             1.0000    616930.0000      
18.Pap .EU.3          .              .             1.0000    586083.5000      
18.Pap .IE.1          .              .             1.0000    510000.0000      
18.Pap .IE.2          .              .             1.0000    484500.0000      
18.Pap .IE.3          .              .             1.0000    460275.0000      
18.Pap .PA.1          .              .             1.0000    384200.0000      
18.Pap .PA.2          .              .             1.0000    364990.0000      
18.Pap .PA.3          .              .             1.0000    346740.5000      
18.Pap .KI.1          .              .             1.0000    382500.0000      
18.Pap .KI.2          .              .             1.0000    363375.0000      
18.Pap .KI.3          .              .             1.0000    345206.2500      
19.Mas .EU.1          .              .             1.0000    158400.0000      
19.Mas .EU.2          .              .             1.0000    150480.0000      
19.Mas .EU.3          .              .             1.0000    142956.0000      
19.Mas .IE.1          .              .             1.0000    -90000.0000      
19.Mas .IE.2          .              .             1.0000    -85500.0000      
19.Mas .IE.3          .              .             1.0000    -81225.0000      
19.Mas .PA.1          .              .             1.0000   -136800.0000      
19.Mas .PA.2          .              .             1.0000   -129960.0000      
19.Mas .PA.3          .              .             1.0000   -123462.0000      
19.Mas .KI.1          .              .             1.0000   -216000.0000      
19.Mas .KI.2          .              .             1.0000   -205200.0000      
19.Mas .KI.3          .              .             1.0000   -194940.0000      
19.Kus .EU.1          .              .             1.0000         EPS         
19.Kus .EU.2          .              .             1.0000         EPS         
19.Kus .EU.3          .              .             1.0000         EPS         
19.Kus .IE.1          .              .             1.0000         EPS         
19.Kus .IE.2          .              .             1.0000         EPS         
19.Kus .IE.3          .              .             1.0000         EPS         
19.Kus .PA.1          .              .             1.0000         EPS         
19.Kus .PA.2          .              .             1.0000         EPS         
19.Kus .PA.3          .              .             1.0000         EPS         
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 22:25:36 Page 182
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 416


     VAR u  1 if we use n boats for product j shiping to region k, 0 otherwise

                    LOWER          LEVEL          UPPER         MARGINAL

19.Kus .KI.1          .              .             1.0000         EPS         
19.Kus .KI.2          .              .             1.0000         EPS         
19.Kus .KI.3          .              .             1.0000         EPS         
19.Kos .EU.1          .              .             1.0000   -219600.0000      
19.Kos .EU.2          .              .             1.0000   -208620.0000      
19.Kos .EU.3          .              .             1.0000   -198189.0000      
19.Kos .IE.1          .              .             1.0000   -396000.0000      
19.Kos .IE.2          .              .             1.0000   -376200.0000      
19.Kos .IE.3          .              .             1.0000   -357390.0000      
19.Kos .PA.1          .              .             1.0000   -442800.0000      
19.Kos .PA.2          .              .             1.0000   -420660.0000      
19.Kos .PA.3          .              .             1.0000   -399627.0000      
19.Kos .KI.1          .              .             1.0000   -522000.0000      
19.Kos .KI.2          .              .             1.0000   -495900.0000      
19.Kos .KI.3          .              .             1.0000   -471105.0000      
19.Kuv .EU.1          .              .             1.0000    662400.0000      
19.Kuv .EU.2          .              .             1.0000    629280.0000      
19.Kuv .EU.3          .              .             1.0000    597816.0000      
19.Kuv .IE.1          .              .             1.0000    360000.0000      
19.Kuv .IE.2          .              .             1.0000    342000.0000      
19.Kuv .IE.3          .              .             1.0000    324900.0000      
19.Kuv .PA.1          .              .             1.0000    259200.0000      
19.Kuv .PA.2          .              .             1.0000    246240.0000      
19.Kuv .PA.3          .              .             1.0000    233928.0000      
19.Kuv .KI.1          .              .             1.0000    144000.0000      
19.Kuv .KI.2          .              .             1.0000    136800.0000      
19.Kuv .KI.3          .              .             1.0000    129960.0000      
19.Kov .EU.1          .              .             1.0000    644400.0000      
19.Kov .EU.2          .              .             1.0000    612180.0000      
19.Kov .EU.3          .              .             1.0000    581571.0000      
19.Kov .IE.1          .              .             1.0000    414000.0000      
19.Kov .IE.2          .              .             1.0000    393300.0000      
19.Kov .IE.3          .              .             1.0000    373635.0000      
19.Kov .PA.1          .              .             1.0000    313200.0000      
19.Kov .PA.2          .              .             1.0000    297540.0000      
19.Kov .PA.3          .              .             1.0000    282663.0000      
19.Kov .KI.1          .              .             1.0000    198000.0000      
19.Kov .KI.2          .              .             1.0000    188100.0000      
19.Kov .KI.3          .              .             1.0000    178695.0000      
19.Hsel.EU.1          .              .             1.0000    349200.0000      
19.Hsel.EU.2          .              .             1.0000    331740.0000      
19.Hsel.EU.3          .              .             1.0000    315153.0000      
19.Hsel.IE.1          .              .             1.0000    320400.0000      
19.Hsel.IE.2          .              .             1.0000    304380.0000      
19.Hsel.IE.3          .              .             1.0000    289161.0000      
19.Hsel.PA.1          .              .             1.0000    252000.0000      
19.Hsel.PA.2          .              .             1.0000    239400.0000      
19.Hsel.PA.3          .              .             1.0000    227430.0000      
19.Hsel.KI.1          .              .             1.0000    273600.0000      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 22:25:36 Page 183
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 416


     VAR u  1 if we use n boats for product j shiping to region k, 0 otherwise

                    LOWER          LEVEL          UPPER         MARGINAL

19.Hsel.KI.2          .              .             1.0000    259920.0000      
19.Hsel.KI.3          .              .             1.0000    246924.0000      
19.Lsel.EU.1          .              .             1.0000    352800.0000      
19.Lsel.EU.2          .              .             1.0000    335160.0000      
19.Lsel.EU.3          .              .             1.0000    318402.0000      
19.Lsel.IE.1          .              .             1.0000    439200.0000      
19.Lsel.IE.2          .              .             1.0000    417240.0000      
19.Lsel.IE.3          .              .             1.0000    396378.0000      
19.Lsel.PA.1          .              .             1.0000    252000.0000      
19.Lsel.PA.2          .              .             1.0000    239400.0000      
19.Lsel.PA.3          .              .             1.0000    227430.0000      
19.Lsel.KI.1          .              .             1.0000    223200.0000      
19.Lsel.KI.2          .              .             1.0000    212040.0000      
19.Lsel.KI.3          .              .             1.0000    201438.0000      
19.Pap .EU.1          .              .             1.0000    680400.0000      
19.Pap .EU.2          .              .             1.0000    646380.0000      
19.Pap .EU.3          .              .             1.0000    614061.0000      
19.Pap .IE.1          .              .             1.0000    522000.0000      
19.Pap .IE.2          .              .             1.0000    495900.0000      
19.Pap .IE.3          .              .             1.0000    471105.0000      
19.Pap .PA.1          .              .             1.0000    385200.0000      
19.Pap .PA.2          .              .             1.0000    365940.0000      
19.Pap .PA.3          .              .             1.0000    347643.0000      
19.Pap .KI.1          .              .             1.0000    378000.0000      
19.Pap .KI.2          .              .             1.0000    359100.0000      
19.Pap .KI.3          .              .             1.0000    341145.0000      
20.Mas .EU.1          .              .             1.0000    159600.0000      
20.Mas .EU.2          .              .             1.0000    151620.0000      
20.Mas .EU.3          .              .             1.0000    144039.0000      
20.Mas .IE.1          .              .             1.0000   -114000.0000      
20.Mas .IE.2          .              .             1.0000   -108300.0000      
20.Mas .IE.3          .              .             1.0000   -102885.0000      
20.Mas .PA.1          .              .             1.0000   -167200.0000      
20.Mas .PA.2          .              .             1.0000   -158840.0000      
20.Mas .PA.3          .              .             1.0000   -150898.0000      
20.Mas .KI.1          .              .             1.0000   -256500.0000      
20.Mas .KI.2          .              .             1.0000   -243675.0000      
20.Mas .KI.3          .              .             1.0000   -231491.2500      
20.Kus .EU.1          .              .             1.0000         EPS         
20.Kus .EU.2          .              .             1.0000         EPS         
20.Kus .EU.3          .              .             1.0000         EPS         
20.Kus .IE.1          .              .             1.0000         EPS         
20.Kus .IE.2          .              .             1.0000         EPS         
20.Kus .IE.3          .              .             1.0000         EPS         
20.Kus .PA.1          .              .             1.0000         EPS         
20.Kus .PA.2          .              .             1.0000         EPS         
20.Kus .PA.3          .              .             1.0000         EPS         
20.Kus .KI.1          .              .             1.0000         EPS         
20.Kus .KI.2          .              .             1.0000         EPS         
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 22:25:36 Page 184
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 416


     VAR u  1 if we use n boats for product j shiping to region k, 0 otherwise

                    LOWER          LEVEL          UPPER         MARGINAL

20.Kus .KI.3          .              .             1.0000         EPS         
20.Kos .EU.1          .              .             1.0000   -258400.0000      
20.Kos .EU.2          .              .             1.0000   -245480.0000      
20.Kos .EU.3          .              .             1.0000   -233206.0000      
20.Kos .IE.1          .              .             1.0000   -456000.0000      
20.Kos .IE.2          .              .             1.0000   -433200.0000      
20.Kos .IE.3          .              .             1.0000   -411540.0000      
20.Kos .PA.1          .              .             1.0000   -509200.0000      
20.Kos .PA.2          .              .             1.0000   -483740.0000      
20.Kos .PA.3          .              .             1.0000   -459553.0000      
20.Kos .KI.1          .              .             1.0000   -598500.0000      
20.Kos .KI.2          .              .             1.0000   -568575.0000      
20.Kos .KI.3          .              .             1.0000   -540146.2500      
20.Kuv .EU.1          .              .             1.0000    691600.0000      
20.Kuv .EU.2          .              .             1.0000    657020.0000      
20.Kuv .EU.3          .              .             1.0000    624169.0000      
20.Kuv .IE.1          .              .             1.0000    361000.0000      
20.Kuv .IE.2          .              .             1.0000    342950.0000      
20.Kuv .IE.3          .              .             1.0000    325802.5000      
20.Kuv .PA.1          .              .             1.0000    250800.0000      
20.Kuv .PA.2          .              .             1.0000    238260.0000      
20.Kuv .PA.3          .              .             1.0000    226347.0000      
20.Kuv .KI.1          .              .             1.0000    123500.0000      
20.Kuv .KI.2          .              .             1.0000    117325.0000      
20.Kuv .KI.3          .              .             1.0000    111458.7500      
20.Kov .EU.1          .              .             1.0000    672600.0000      
20.Kov .EU.2          .              .             1.0000    638970.0000      
20.Kov .EU.3          .              .             1.0000    607021.5000      
20.Kov .IE.1          .              .             1.0000    418000.0000      
20.Kov .IE.2          .              .             1.0000    397100.0000      
20.Kov .IE.3          .              .             1.0000    377245.0000      
20.Kov .PA.1          .              .             1.0000    307800.0000      
20.Kov .PA.2          .              .             1.0000    292410.0000      
20.Kov .PA.3          .              .             1.0000    277789.5000      
20.Kov .KI.1          .              .             1.0000    180500.0000      
20.Kov .KI.2          .              .             1.0000    171475.0000      
20.Kov .KI.3          .              .             1.0000    162901.2500      
20.Hsel.EU.1          .              .             1.0000    364800.0000      
20.Hsel.EU.2          .              .             1.0000    346560.0000      
20.Hsel.EU.3          .              .             1.0000    329232.0000      
20.Hsel.IE.1          .              .             1.0000    330600.0000      
20.Hsel.IE.2          .              .             1.0000    314070.0000      
20.Hsel.IE.3          .              .             1.0000    298366.5000      
20.Hsel.PA.1          .              .             1.0000    256500.0000      
20.Hsel.PA.2          .              .             1.0000    243675.0000      
20.Hsel.PA.3          .              .             1.0000    231491.2500      
20.Hsel.KI.1          .              .             1.0000    277400.0000      
20.Hsel.KI.2          .              .             1.0000    263530.0000      
20.Hsel.KI.3          .              .             1.0000    250353.5000      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 22:25:36 Page 185
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 416


     VAR u  1 if we use n boats for product j shiping to region k, 0 otherwise

                    LOWER          LEVEL          UPPER         MARGINAL

20.Lsel.EU.1          .              .             1.0000    366700.0000      
20.Lsel.EU.2          .              .             1.0000    348365.0000      
20.Lsel.EU.3          .              .             1.0000    330946.7500      
20.Lsel.IE.1          .              .             1.0000    459800.0000      
20.Lsel.IE.2          .              .             1.0000    436810.0000      
20.Lsel.IE.3          .              .             1.0000    414969.5000      
20.Lsel.PA.1          .              .             1.0000    256500.0000      
20.Lsel.PA.2          .              .             1.0000    243675.0000      
20.Lsel.PA.3          .              .             1.0000    231491.2500      
20.Lsel.KI.1          .              .             1.0000    222300.0000      
20.Lsel.KI.2          .              .             1.0000    211185.0000      
20.Lsel.KI.3          .              .             1.0000    200625.7500      
20.Pap .EU.1          .              .             1.0000    710600.0000      
20.Pap .EU.2          .              .             1.0000    675070.0000      
20.Pap .EU.3          .              .             1.0000    641316.5000      
20.Pap .IE.1          .              .             1.0000    532000.0000      
20.Pap .IE.2          .              .             1.0000    505400.0000      
20.Pap .IE.3          .              .             1.0000    480130.0000      
20.Pap .PA.1          .              .             1.0000    383800.0000      
20.Pap .PA.2          .              .             1.0000    364610.0000      
20.Pap .PA.3          .              .             1.0000    346379.5000      
20.Pap .KI.1          .              .             1.0000    370500.0000      
20.Pap .KI.2          .              .             1.0000    351975.0000      
20.Pap .KI.3          .              .             1.0000    334376.2500      
21.Mas .EU.1          .              .             1.0000    160000.0000      
21.Mas .EU.2          .              .             1.0000    152000.0000      
21.Mas .EU.3          .              .             1.0000    144400.0000      
21.Mas .IE.1          .              .             1.0000   -140000.0000      
21.Mas .IE.2          .              .             1.0000   -133000.0000      
21.Mas .IE.3          .              .             1.0000   -126350.0000      
21.Mas .PA.1          .              .             1.0000   -200000.0000      
21.Mas .PA.2          .              .             1.0000   -190000.0000      
21.Mas .PA.3          .              .             1.0000   -180500.0000      
21.Mas .KI.1          .              .             1.0000   -300000.0000      
21.Mas .KI.2          .              .             1.0000   -285000.0000      
21.Mas .KI.3          .              .             1.0000   -270750.0000      
21.Kus .EU.1          .              .             1.0000         EPS         
21.Kus .EU.2          .              .             1.0000         EPS         
21.Kus .EU.3          .              .             1.0000         EPS         
21.Kus .IE.1          .              .             1.0000         EPS         
21.Kus .IE.2          .              .             1.0000         EPS         
21.Kus .IE.3          .              .             1.0000         EPS         
21.Kus .PA.1          .              .             1.0000         EPS         
21.Kus .PA.2          .              .             1.0000         EPS         
21.Kus .PA.3          .              .             1.0000         EPS         
21.Kus .KI.1          .              .             1.0000         EPS         
21.Kus .KI.2          .              .             1.0000         EPS         
21.Kus .KI.3          .              .             1.0000         EPS         
21.Kos .EU.1          .              .             1.0000   -300000.0000      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 22:25:36 Page 186
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 416


     VAR u  1 if we use n boats for product j shiping to region k, 0 otherwise

                    LOWER          LEVEL          UPPER         MARGINAL

21.Kos .EU.2          .              .             1.0000   -285000.0000      
21.Kos .EU.3          .              .             1.0000   -270750.0000      
21.Kos .IE.1          .              .             1.0000   -520000.0000      
21.Kos .IE.2          .              .             1.0000   -494000.0000      
21.Kos .IE.3          .              .             1.0000   -469300.0000      
21.Kos .PA.1          .              .             1.0000   -580000.0000      
21.Kos .PA.2          .              .             1.0000   -551000.0000      
21.Kos .PA.3          .              .             1.0000   -523450.0000      
21.Kos .KI.1          .              .             1.0000   -680000.0000      
21.Kos .KI.2          .              .             1.0000   -646000.0000      
21.Kos .KI.3          .              .             1.0000   -613700.0000      
21.Kuv .EU.1          .              .             1.0000    720000.0000      
21.Kuv .EU.2          .              .             1.0000    684000.0000      
21.Kuv .EU.3          .              .             1.0000    649800.0000      
21.Kuv .IE.1          .              .             1.0000    360000.0000      
21.Kuv .IE.2          .              .             1.0000    342000.0000      
21.Kuv .IE.3          .              .             1.0000    324900.0000      
21.Kuv .PA.1          .              .             1.0000    240000.0000      
21.Kuv .PA.2          .              .             1.0000    228000.0000      
21.Kuv .PA.3          .              .             1.0000    216600.0000      
21.Kuv .KI.1          .              .             1.0000    100000.0000      
21.Kuv .KI.2          .              .             1.0000     95000.0000      
21.Kuv .KI.3          .              .             1.0000     90250.0000      
21.Kov .EU.1          .              .             1.0000    700000.0000      
21.Kov .EU.2          .              .             1.0000    665000.0000      
21.Kov .EU.3          .              .             1.0000    631750.0000      
21.Kov .IE.1          .              .             1.0000    420000.0000      
21.Kov .IE.2          .              .             1.0000    399000.0000      
21.Kov .IE.3          .              .             1.0000    379050.0000      
21.Kov .PA.1          .              .             1.0000    300000.0000      
21.Kov .PA.2          .              .             1.0000    285000.0000      
21.Kov .PA.3          .              .             1.0000    270750.0000      
21.Kov .KI.1          .              .             1.0000    160000.0000      
21.Kov .KI.2          .              .             1.0000    152000.0000      
21.Kov .KI.3          .              .             1.0000    144400.0000      
21.Hsel.EU.1          .              .             1.0000    380000.0000      
21.Hsel.EU.2          .              .             1.0000    361000.0000      
21.Hsel.EU.3          .              .             1.0000    342950.0000      
21.Hsel.IE.1          .              .             1.0000    340000.0000      
21.Hsel.IE.2          .              .             1.0000    323000.0000      
21.Hsel.IE.3          .              .             1.0000    306850.0000      
21.Hsel.PA.1          .              .             1.0000    260000.0000      
21.Hsel.PA.2          .              .             1.0000    247000.0000      
21.Hsel.PA.3          .              .             1.0000    234650.0000      
21.Hsel.KI.1          .              .             1.0000    280000.0000      
21.Hsel.KI.2          .              .             1.0000    266000.0000      
21.Hsel.KI.3          .              .             1.0000    252700.0000      
21.Lsel.EU.1          .              .             1.0000    380000.0000      
21.Lsel.EU.2          .              .             1.0000    361000.0000      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 22:25:36 Page 187
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 416


     VAR u  1 if we use n boats for product j shiping to region k, 0 otherwise

                    LOWER          LEVEL          UPPER         MARGINAL

21.Lsel.EU.3          .              .             1.0000    342950.0000      
21.Lsel.IE.1          .              .             1.0000    480000.0000      
21.Lsel.IE.2          .              .             1.0000    456000.0000      
21.Lsel.IE.3          .              .             1.0000    433200.0000      
21.Lsel.PA.1          .              .             1.0000    260000.0000      
21.Lsel.PA.2          .              .             1.0000    247000.0000      
21.Lsel.PA.3          .              .             1.0000    234650.0000      
21.Lsel.KI.1          .              .             1.0000    220000.0000      
21.Lsel.KI.2          .              .             1.0000    209000.0000      
21.Lsel.KI.3          .              .             1.0000    198550.0000      
21.Pap .EU.1          .              .             1.0000    740000.0000      
21.Pap .EU.2          .              .             1.0000    703000.0000      
21.Pap .EU.3          .              .             1.0000    667850.0000      
21.Pap .IE.1          .              .             1.0000    540000.0000      
21.Pap .IE.2          .              .             1.0000    513000.0000      
21.Pap .IE.3          .              .             1.0000    487350.0000      
21.Pap .PA.1          .              .             1.0000    380000.0000      
21.Pap .PA.2          .              .             1.0000    361000.0000      
21.Pap .PA.3          .              .             1.0000    342950.0000      
21.Pap .KI.1          .              .             1.0000    360000.0000      
21.Pap .KI.2          .              .             1.0000    342000.0000      
21.Pap .KI.3          .              .             1.0000    324900.0000      
22.Mas .EU.1          .              .             1.0000    159600.0000      
22.Mas .EU.2          .              .             1.0000    151620.0000      
22.Mas .EU.3          .              .             1.0000    144039.0000      
22.Mas .IE.1          .              .             1.0000   -168000.0000      
22.Mas .IE.2          .              .             1.0000   -159600.0000      
22.Mas .IE.3          .              .             1.0000   -151620.0000      
22.Mas .PA.1          .              .             1.0000   -235200.0000      
22.Mas .PA.2          .              .             1.0000   -223440.0000      
22.Mas .PA.3          .              .             1.0000   -212268.0000      
22.Mas .KI.1          .              .             1.0000   -346500.0000      
22.Mas .KI.2          .              .             1.0000   -329175.0000      
22.Mas .KI.3          .              .             1.0000   -312716.2500      
22.Kus .EU.1          .              .             1.0000         EPS         
22.Kus .EU.2          .              .             1.0000         EPS         
22.Kus .EU.3          .              .             1.0000         EPS         
22.Kus .IE.1          .              .             1.0000         EPS         
22.Kus .IE.2          .              .             1.0000         EPS         
22.Kus .IE.3          .              .             1.0000         EPS         
22.Kus .PA.1          .              .             1.0000         EPS         
22.Kus .PA.2          .              .             1.0000         EPS         
22.Kus .PA.3          .              .             1.0000         EPS         
22.Kus .KI.1          .              .             1.0000         EPS         
22.Kus .KI.2          .              .             1.0000         EPS         
22.Kus .KI.3          .              .             1.0000         EPS         
22.Kos .EU.1          .              .             1.0000   -344400.0000      
22.Kos .EU.2          .              .             1.0000   -327180.0000      
22.Kos .EU.3          .              .             1.0000   -310821.0000      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 22:25:36 Page 188
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 416


     VAR u  1 if we use n boats for product j shiping to region k, 0 otherwise

                    LOWER          LEVEL          UPPER         MARGINAL

22.Kos .IE.1          .              .             1.0000   -588000.0000      
22.Kos .IE.2          .              .             1.0000   -558600.0000      
22.Kos .IE.3          .              .             1.0000   -530670.0000      
22.Kos .PA.1          .              .             1.0000   -655200.0000      
22.Kos .PA.2          .              .             1.0000   -622440.0000      
22.Kos .PA.3          .              .             1.0000   -591318.0000      
22.Kos .KI.1          .              .             1.0000   -766500.0000      
22.Kos .KI.2          .              .             1.0000   -728175.0000      
22.Kos .KI.3          .              .             1.0000   -691766.2500      
22.Kuv .EU.1          .              .             1.0000    747600.0000      
22.Kuv .EU.2          .              .             1.0000    710220.0000      
22.Kuv .EU.3          .              .             1.0000    674709.0000      
22.Kuv .IE.1          .              .             1.0000    357000.0000      
22.Kuv .IE.2          .              .             1.0000    339150.0000      
22.Kuv .IE.3          .              .             1.0000    322192.5000      
22.Kuv .PA.1          .              .             1.0000    226800.0000      
22.Kuv .PA.2          .              .             1.0000    215460.0000      
22.Kuv .PA.3          .              .             1.0000    204687.0000      
22.Kuv .KI.1          .              .             1.0000     73500.0000      
22.Kuv .KI.2          .              .             1.0000     69825.0000      
22.Kuv .KI.3          .              .             1.0000     66333.7500      
22.Kov .EU.1          .              .             1.0000    726600.0000      
22.Kov .EU.2          .              .             1.0000    690270.0000      
22.Kov .EU.3          .              .             1.0000    655756.5000      
22.Kov .IE.1          .              .             1.0000    420000.0000      
22.Kov .IE.2          .              .             1.0000    399000.0000      
22.Kov .IE.3          .              .             1.0000    379050.0000      
22.Kov .PA.1          .              .             1.0000    289800.0000      
22.Kov .PA.2          .              .             1.0000    275310.0000      
22.Kov .PA.3          .              .             1.0000    261544.5000      
22.Kov .KI.1          .              .             1.0000    136500.0000      
22.Kov .KI.2          .              .             1.0000    129675.0000      
22.Kov .KI.3          .              .             1.0000    123191.2500      
22.Hsel.EU.1          .              .             1.0000    394800.0000      
22.Hsel.EU.2          .              .             1.0000    375060.0000      
22.Hsel.EU.3          .              .             1.0000    356307.0000      
22.Hsel.IE.1          .              .             1.0000    348600.0000      
22.Hsel.IE.2          .              .             1.0000    331170.0000      
22.Hsel.IE.3          .              .             1.0000    314611.5000      
22.Hsel.PA.1          .              .             1.0000    262500.0000      
22.Hsel.PA.2          .              .             1.0000    249375.0000      
22.Hsel.PA.3          .              .             1.0000    236906.2500      
22.Hsel.KI.1          .              .             1.0000    281400.0000      
22.Hsel.KI.2          .              .             1.0000    267330.0000      
22.Hsel.KI.3          .              .             1.0000    253963.5000      
22.Lsel.EU.1          .              .             1.0000    392700.0000      
22.Lsel.EU.2          .              .             1.0000    373065.0000      
22.Lsel.EU.3          .              .             1.0000    354411.7500      
22.Lsel.IE.1          .              .             1.0000    499800.0000      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 22:25:36 Page 189
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 416


     VAR u  1 if we use n boats for product j shiping to region k, 0 otherwise

                    LOWER          LEVEL          UPPER         MARGINAL

22.Lsel.IE.2          .              .             1.0000    474810.0000      
22.Lsel.IE.3          .              .             1.0000    451069.5000      
22.Lsel.PA.1          .              .             1.0000    262500.0000      
22.Lsel.PA.2          .              .             1.0000    249375.0000      
22.Lsel.PA.3          .              .             1.0000    236906.2500      
22.Lsel.KI.1          .              .             1.0000    216300.0000      
22.Lsel.KI.2          .              .             1.0000    205485.0000      
22.Lsel.KI.3          .              .             1.0000    195210.7500      
22.Pap .EU.1          .              .             1.0000    768600.0000      
22.Pap .EU.2          .              .             1.0000    730170.0000      
22.Pap .EU.3          .              .             1.0000    693661.5000      
22.Pap .IE.1          .              .             1.0000    546000.0000      
22.Pap .IE.2          .              .             1.0000    518700.0000      
22.Pap .IE.3          .              .             1.0000    492765.0000      
22.Pap .PA.1          .              .             1.0000    373800.0000      
22.Pap .PA.2          .              .             1.0000    355110.0000      
22.Pap .PA.3          .              .             1.0000    337354.5000      
22.Pap .KI.1          .              .             1.0000    346500.0000      
22.Pap .KI.2          .              .             1.0000    329175.0000      
22.Pap .KI.3          .              .             1.0000    312716.2500      
23.Mas .EU.1          .              .             1.0000    158400.0000      
23.Mas .EU.2          .              .             1.0000    150480.0000      
23.Mas .EU.3          .              .             1.0000    142956.0000      
23.Mas .IE.1          .              .             1.0000   -198000.0000      
23.Mas .IE.2          .              .             1.0000   -188100.0000      
23.Mas .IE.3          .              .             1.0000   -178695.0000      
23.Mas .PA.1          .              .             1.0000   -272800.0000      
23.Mas .PA.2          .              .             1.0000   -259160.0000      
23.Mas .PA.3          .              .             1.0000   -246202.0000      
23.Mas .KI.1          .              .             1.0000   -396000.0000      
23.Mas .KI.2          .              .             1.0000   -376200.0000      
23.Mas .KI.3          .              .             1.0000   -357390.0000      
23.Kus .EU.1          .              .             1.0000         EPS         
23.Kus .EU.2          .              .             1.0000         EPS         
23.Kus .EU.3          .              .             1.0000         EPS         
23.Kus .IE.1          .              .             1.0000         EPS         
23.Kus .IE.2          .              .             1.0000         EPS         
23.Kus .IE.3          .              .             1.0000         EPS         
23.Kus .PA.1          .              .             1.0000         EPS         
23.Kus .PA.2          .              .             1.0000         EPS         
23.Kus .PA.3          .              .             1.0000         EPS         
23.Kus .KI.1          .              .             1.0000         EPS         
23.Kus .KI.2          .              .             1.0000         EPS         
23.Kus .KI.3          .              .             1.0000         EPS         
23.Kos .EU.1          .              .             1.0000   -391600.0000      
23.Kos .EU.2          .              .             1.0000   -372020.0000      
23.Kos .EU.3          .              .             1.0000   -353419.0000      
23.Kos .IE.1          .              .             1.0000   -660000.0000      
23.Kos .IE.2          .              .             1.0000   -627000.0000      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 22:25:36 Page 190
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 416


     VAR u  1 if we use n boats for product j shiping to region k, 0 otherwise

                    LOWER          LEVEL          UPPER         MARGINAL

23.Kos .IE.3          .              .             1.0000   -595650.0000      
23.Kos .PA.1          .              .             1.0000   -734800.0000      
23.Kos .PA.2          .              .             1.0000   -698060.0000      
23.Kos .PA.3          .              .             1.0000   -663157.0000      
23.Kos .KI.1          .              .             1.0000   -858000.0000      
23.Kos .KI.2          .              .             1.0000   -815100.0000      
23.Kos .KI.3          .              .             1.0000   -774345.0000      
23.Kuv .EU.1          .              .             1.0000    774400.0000      
23.Kuv .EU.2          .              .             1.0000    735680.0000      
23.Kuv .EU.3          .              .             1.0000    698896.0000      
23.Kuv .IE.1          .              .             1.0000    352000.0000      
23.Kuv .IE.2          .              .             1.0000    334400.0000      
23.Kuv .IE.3          .              .             1.0000    317680.0000      
23.Kuv .PA.1          .              .             1.0000    211200.0000      
23.Kuv .PA.2          .              .             1.0000    200640.0000      
23.Kuv .PA.3          .              .             1.0000    190608.0000      
23.Kuv .KI.1          .              .             1.0000     44000.0000      
23.Kuv .KI.2          .              .             1.0000     41800.0000      
23.Kuv .KI.3          .              .             1.0000     39710.0000      
23.Kov .EU.1          .              .             1.0000    752400.0000      
23.Kov .EU.2          .              .             1.0000    714780.0000      
23.Kov .EU.3          .              .             1.0000    679041.0000      
23.Kov .IE.1          .              .             1.0000    418000.0000      
23.Kov .IE.2          .              .             1.0000    397100.0000      
23.Kov .IE.3          .              .             1.0000    377245.0000      
23.Kov .PA.1          .              .             1.0000    277200.0000      
23.Kov .PA.2          .              .             1.0000    263340.0000      
23.Kov .PA.3          .              .             1.0000    250173.0000      
23.Kov .KI.1          .              .             1.0000    110000.0000      
23.Kov .KI.2          .              .             1.0000    104500.0000      
23.Kov .KI.3          .              .             1.0000     99275.0000      
23.Hsel.EU.1          .              .             1.0000    409200.0000      
23.Hsel.EU.2          .              .             1.0000    388740.0000      
23.Hsel.EU.3          .              .             1.0000    369303.0000      
23.Hsel.IE.1          .              .             1.0000    356400.0000      
23.Hsel.IE.2          .              .             1.0000    338580.0000      
23.Hsel.IE.3          .              .             1.0000    321651.0000      
23.Hsel.PA.1          .              .             1.0000    264000.0000      
23.Hsel.PA.2          .              .             1.0000    250800.0000      
23.Hsel.PA.3          .              .             1.0000    238260.0000      
23.Hsel.KI.1          .              .             1.0000    281600.0000      
23.Hsel.KI.2          .              .             1.0000    267520.0000      
23.Hsel.KI.3          .              .             1.0000    254144.0000      
23.Lsel.EU.1          .              .             1.0000    404800.0000      
23.Lsel.EU.2          .              .             1.0000    384560.0000      
23.Lsel.EU.3          .              .             1.0000    365332.0000      
23.Lsel.IE.1          .              .             1.0000    519200.0000      
23.Lsel.IE.2          .              .             1.0000    493240.0000      
23.Lsel.IE.3          .              .             1.0000    468578.0000      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 22:25:36 Page 191
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 416


     VAR u  1 if we use n boats for product j shiping to region k, 0 otherwise

                    LOWER          LEVEL          UPPER         MARGINAL

23.Lsel.PA.1          .              .             1.0000    264000.0000      
23.Lsel.PA.2          .              .             1.0000    250800.0000      
23.Lsel.PA.3          .              .             1.0000    238260.0000      
23.Lsel.KI.1          .              .             1.0000    211200.0000      
23.Lsel.KI.2          .              .             1.0000    200640.0000      
23.Lsel.KI.3          .              .             1.0000    190608.0000      
23.Pap .EU.1          .              .             1.0000    796400.0000      
23.Pap .EU.2          .              .             1.0000    756580.0000      
23.Pap .EU.3          .              .             1.0000    718751.0000      
23.Pap .IE.1          .              .             1.0000    550000.0000      
23.Pap .IE.2          .              .             1.0000    522500.0000      
23.Pap .IE.3          .              .             1.0000    496375.0000      
23.Pap .PA.1          .              .             1.0000    365200.0000      
23.Pap .PA.2          .              .             1.0000    346940.0000      
23.Pap .PA.3          .              .             1.0000    329593.0000      
23.Pap .KI.1          .              .             1.0000    330000.0000      
23.Pap .KI.2          .              .             1.0000    313500.0000      
23.Pap .KI.3          .              .             1.0000    297825.0000      

---- VAR b  amount of timber i bought

             LOWER          LEVEL          UPPER         MARGINAL

Mat.1          .        140000.0000        +INF             .          
Mat.2          .        100000.0000        +INF             .          
Mat.3          .         80000.0000        +INF             .          
Kut.1          .        140000.0000        +INF             .          
Kut.2          .        230000.0000        +INF             .          
Kut.3          .        200000.0000        +INF             .          
Kot.1          .         90000.0000        +INF             .          
Kot.2          .         60000.0000        +INF             .          
Kot.3          .         50000.0000        +INF             .          
Mak.1          .        310000.0000        +INF             .          
Mak.2          .        120000.0000        +INF             .          
Mak.3          .        120000.0000        +INF             .          
Kuk.1          .              .            +INF             .          
Kuk.2          .         40000.0000        +INF             .          
Kuk.3          .         40000.0000        +INF             .          
Kok.1          .        570000.0000        +INF             .          
Kok.2          .        320000.0000        +INF             .          
Kok.3          .        270000.0000        +INF             .          

---- VAR Pr  Net profit in each year t

         LOWER          LEVEL          UPPER         MARGINAL

1        -INF       167036.0000        +INF             .          
2        -INF       202542.0000        +INF             .          
3        -INF       308067.2500        +INF             .          
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 22:25:36 Page 192
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 416


---- VAR Cap  Capacity of machine m in year t

               LOWER          LEVEL          UPPER         MARGINAL

Pap  .1        -INF        80000.0000        +INF             .          
Pap  .2        -INF       160000.0000        +INF             .          
Pap  .3        -INF       150000.0000        +INF             .          
SAW  .1        -INF        70000.0000        +INF             .          
SAW  .2        -INF        50000.0000        +INF             .          
SAW  .3        -INF        50000.0000        +INF             .          
PLY  .1        -INF        80000.0000        +INF             .          
PLY  .2        -INF       100000.0000        +INF             .          
PLY  .3        -INF        80000.0000        +INF             .          
SPULP.1        -INF        76000.0000        +INF             .          
SPULP.2        -INF        32000.0000        +INF             .          
SPULP.3        -INF        30000.0000        +INF             .          
HPULP.1        -INF       146000.0000        +INF             .          
HPULP.2        -INF        82000.0000        +INF             .          
HPULP.3        -INF        70000.0000        +INF             .          


**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
                             6  PROJECTED
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 22:25:36 Page 193
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
E x e c u t i o n


----    417 VARIABLE z.L                   =   677645.250  the objective

----    417 VARIABLE u.L  1 if we use n boats for product j shiping to region k, 0 otherwise

INDEX 1 = 1

                  1           2           3

Mas .IE       1.000       1.000       1.000
Mas .PA                   1.000       1.000
Kus .EU       1.000       1.000       1.000
Kus .IE       1.000       1.000       1.000
Kus .PA       1.000       1.000       1.000
Kus .KI       1.000       1.000       1.000
Kos .EU       1.000       1.000       1.000
Kos .IE       1.000       1.000       1.000
Kos .PA       1.000       1.000       1.000
Kos .KI       1.000       1.000
Kuv .IE       1.000       1.000       1.000
Kuv .PA       1.000       1.000       1.000
Kuv .KI       1.000       1.000       1.000
Kov .IE       1.000       1.000       1.000
Kov .PA       1.000       1.000       1.000
Kov .KI       1.000       1.000       1.000
Hsel.EU       1.000       1.000       1.000
Hsel.IE                   1.000       1.000
Hsel.PA       1.000       1.000       1.000
Hsel.KI                   1.000       1.000
Lsel.EU                   1.000       1.000
Lsel.PA       1.000       1.000       1.000
Lsel.KI                   1.000       1.000
Pap .PA       1.000

INDEX 1 = 2

                  1           2           3

Mas .PA       1.000
Mas .KI       1.000       1.000       1.000
Kos .KI                               1.000
Kov .EU                               1.000
Lsel.KI       1.000
Pap .PA                               1.000

INDEX 1 = 3

                  1           2

Kov .EU                   1.000
Lsel.EU       1.000
Pap .IE       1.000
Pap .PA                   1.000
Pap .KI       1.000
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 22:25:36 Page 194
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
E x e c u t i o n


        417 VARIABLE u.L  1 if we use n boats for product j shiping to region k, 0 otherwise

INDEX 1 = 4

                  1           2           3

Mas .EU                               1.000
Kov .EU       1.000
Hsel.IE       1.000
Hsel.KI       1.000
Pap .KI                   1.000       1.000

INDEX 1 = 5

                  1           2           3

Mas .EU                   1.000
Lsel.IE                               1.000
Pap .EU       1.000
Pap .IE                   1.000       1.000

INDEX 1 = 6

                  1           2

Mas .EU       1.000
Kuv .EU       1.000
Lsel.IE                   1.000

INDEX 1 = 8

                  2           3

Kuv .EU                   1.000
Pap .EU       1.000       1.000

INDEX 1 = 9

                  2

Kuv .EU       1.000

INDEX 1 = 11

                  1

Lsel.IE       1.000

GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 22:25:36 Page 195
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
E x e c u t i o n


----    417 VARIABLE r.L  1 if we buy n boats of timber i, 0 otherwise

                  1           2           3

1  .Kuk       1.000
5  .Kuk                   1.000       1.000
6  .Kot                               1.000
7  .Kot                   1.000
9  .Mat                               1.000
10 .Kot       1.000
11 .Mat                   1.000
13 .Mak                   1.000       1.000
15 .Mat       1.000
15 .Kut       1.000
21 .Kut                               1.000
24 .Kut                   1.000
28 .Kok                               1.000
32 .Mak       1.000
33 .Kok                   1.000
58 .Kok       1.000


----    417 VARIABLE y.L  Cubic meters produced of product j

               1           2           3

Mas    70000.000   50000.000   40000.000
Kos                            10000.000
Kuv    50000.000   80000.000   70000.000
Kov    30000.000   20000.000   10000.000
Hsel   76000.000   32000.000   30000.000
Lsel  146000.000   82000.000   70000.000
Pap    80000.000  160000.000  150000.000


----    417 VARIABLE s.L  amount of timber i used to make products

              1           2           3

Mat  140000.000  100000.000   80000.000
Kut  140000.000  224000.000  196000.000
Kot   84000.000   56000.000   48000.000
Mak  308800.000  113600.000  112000.000
Kuk               32000.000   38000.000
Kok  565200.000  312400.000  270000.000

GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 22:25:36 Page 196
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
E x e c u t i o n


----    417 VARIABLE b.L  amount of timber i bought

              1           2           3

Mat  140000.000  100000.000   80000.000
Kut  140000.000  230000.000  200000.000
Kot   90000.000   60000.000   50000.000
Mak  310000.000  120000.000  120000.000
Kuk               40000.000   40000.000
Kok  570000.000  320000.000  270000.000


----    417 VARIABLE Cap.L  Capacity of machine m in year t

                1           2           3

Pap     80000.000  160000.000  150000.000
SAW     70000.000   50000.000   50000.000
PLY     80000.000  100000.000   80000.000
SPULP   76000.000   32000.000   30000.000
HPULP  146000.000   82000.000   70000.000



EXECUTION TIME       =        0.047 SECONDS      3 MB  24.8.1 r59919 DEX-DEG


USER: Course License Spring 2017                     A161219:0249AN-GEN
      Management Engineering, Technical University of Denmark    DC8756
      License for teaching and research at degree granting institutions


**** FILE SUMMARY

Input      /Users/AtliPall/AHI/finalB.gms
Output     /Users/AtliPall/AHI/finalB.lst
