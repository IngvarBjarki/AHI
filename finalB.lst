GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                   01/18/17 13:10:31 Page 1
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


   1  * FinalA.gms
   2  *
   4  option iterlim=999999999;     // avoid limit on iterations
   5  option reslim=300;            // timelimit for solver in sec.
   6  option optcr=0.0;             // gap tolerance
   7  option solprint=ON;           // include solution print in .lst file
   8  option limrow=100;            // limit number of rows in .lst file
   9  option limcol=100;            // limit number of columns in .lst file
  10  //--------------------------------------------------------------------
  11   
  12  SET timber 'raw material bought by Metsa Oy'
  13  /   Mat, Kut, Kot, Mak, Kuk, Kok   /;
  14  SET products 'Products made by Metsa Oy'
  15  /   Mas, Kus, Kos, Kuv, Kov, Hsel, Lsel, Pap    /;
  16  SET destinations 'places where Metsa sells products'
  17  /   EU, IE, PA, KI  /;
  18  SET p1(products) 'normal products'
  19  / Mas, Kus, Kos, Kuv, Kov  /;
  20  SET p2(products) 'products possible to make from leftovers'
  21  /   Hsel, Lsel, Pap     /;
  22  SET p3(products) 'Pulp products which can make paper'
  23  /   HSEL, LSEL /;
  24  SET n 'number of barges'
  25  /   1*107  /;
  26  SET l 'number of barges'
  27  / 1*23 /;
  28  SET v 'Set for profit calculations'
  29  /   ATO, DPC, SP, FC, PROFIT /;
  30  SET t 'years'
  31  / 0 1 2 /;
  32  SET m 'machines'
  33  / SAW, PLY, SPULP, HPULP, PAP /;
  34   
  35  ALIAS(timber, i);
  36  ALIAS(products, j);
  37  ALIAS(destinations, k);
  38   
  39  PARAMETERS
  40   
  41   
  42  c(products) 'the cost of producing each product, mesured in erous/1000m^3'
  43      /   Mas   550
  44          Kus   500
  45          Kos   450
  46          Kuv   2500
  47          Kov   2600
  48          Hsel  820
  49          Lsel  800
  50          Pap   1700  /
  51   
  52   
  53  alpha(timber) 'alpha cost parameters by timber assortments'
  54      /   MAT     190
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                   01/18/17 13:10:31 Page 2
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


  55          KUT     150
  56          KOT     120
  57          MAK     180
  58          KUK     150
  59          KOK     150 /
  60   
  61  beta(timber) 'Beta cost parameter by timber assortments'
  62      /   MAT     1.0
  63          KUT     0.5
  64          KOT     3.0
  65          MAK     0.2
  66          KUK     0.3
  67          KOK     0.2 /
  68   
  69  CAP0(m) 'Starting capacity'
  70      /   SAW     100000
  71          PLY     90000
  72          SPULP   100000
  73          HPULP   150000
  74          PAP     80000  /   ;
  75   
  76   
  77   
  78   
  79  TABLE table2(j,i)'Cubic-meters of material i used in cubic-meter of product j'
  80                  MAT     KUT     KOT     MAK     KUK     KOK
  81          MAS     2.0     0.0     0.0     -0.8    0.0     0.0
  82          KUS     0.0     2.0     0.0     0.0     -0.8    0.0
  83          KOS     0.0     0.0     2.0     0.0     0.0     -0.8
  84          KUV     0.0     2.8     0.0     0.0     -1.6    0.0
  85          KOV     0.0     0.0     2.8     0.0     0.0     -1.6
  86          HSEL    0.0     0.0     0.0     4.8     0.0     0.0
  87          LSEL    0.0     0.0     0.0     0.0     0.0     4.2
  88          PAP     0.0     0.0     0.0     0.0     1.0     0.0      ;
  89   
  90  *TABLE table3(p2, p3) 'timber p3 needed for production of product p2'
  91  *                     Mak    Kuk     Kok   Hsel    Lsel
  92  *        Hsel      4.8      0.0      0.0      0.0      0.0
  93  *        Lsel       0.0      0.0      4.2      0.0      0.0
  94  *        Pap       0.0      1.0       0.0     0.2      0.2;
  95   
  96   
  97   
  98  TABLE GAMMA(j,k) 'Gamma coefficent for selling product j in region k'
  99                    EU      IE      PA      KI
 100           MAS     1600    1300    1400    1500
 101           KUS     1400    1200    1300    1400
 102           KOS     1300    1400    1500    1600
 103           KUV     4400    3800    3600    3500
 104           KOV     4300    4100    3900    3800
 105           HSEL    2300    2500    2300    2600
 106           LSEL    2500    2800    2300    2500
 107           PAP     4500    4700    4300    4800 ;
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                   01/18/17 13:10:31 Page 3
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


 108   
 109   
 110  TABLE DELTA(j,k) 'Delta coefficient for selling product j in region k'
 111                   EU      IE      PA      KI
 112           MAS     4       10      12      15
 113           KUS     4       10      12      15
 114           KOS     14      20      22      25
 115           KUV     4       10      12      15
 116           KOV     4       10      12      15
 117           HSEL    2       4       5       6
 118           LSEL    3       2       5       7
 119           PAP     4       10      12      15 ;
 120   
 121   
 122   
 123   
 124   
 125  TABLE q(l,j) 'Options of amount l to be sold of product j'
 126     MAS     KOS     KUV     KOV    HSEL   LSEL   PAP
 127  1  0       0       0       0      0      0      0
 128  2  10000   10000   10000   10000  10000  10000  10000
 129  3  20000   20000   20000   20000  20000  20000  20000
 130  4  30000   30000   30000   30000  30000  30000  30000
 131  5  40000   40000   40000   40000  40000  40000  40000
 132  6  50000   50000   50000   50000  50000  50000  50000
 133  7  60000   60000   60000   60000  60000  60000  60000
 134  8  70000   70000   70000   70000  70000  70000  70000
 135  9  80000   80000   80000   80000  80000  80000  80000
 136  10 90000   90000   90000   90000  90000  90000  90000
 137  11 100000  100000  100000  100000 100000 100000 100000
 138  12 110000  110000  110000  110000 110000 110000 110000
 139  13 120000  120000  120000  120000 120000 120000 120000
 140  14 130000  130000  130000  130000 130000 130000 130000
 141  15 140000  140000  140000  140000 140000 140000 140000
 142  16 150000  150000  150000  150000 150000 150000 150000
 143  17 160000  160000  160000  160000 160000 160000 160000
 144  18 170000  170000  170000  170000 170000 170000 170000
 145  19 180000  180000  180000  180000 180000 180000 180000
 146  20 190000  190000  190000  190000 190000 190000 190000
 147  21 200000  200000  200000  200000 200000 200000 200000
 148  22 210000  210000  210000  210000 210000 210000 210000
 149  23 220000  220000  220000  220000 220000 220000 220000 ;
 150   
 151   
 152   
 153  TABLE h(n,i) 'Options of amount n to be bought of material i'
 154      Mat     KUT     KOT     MAK     KUK     KOK
 155  1   0       0       0       0       0       0
 156  2   10000   10000   10000   10000   10000   10000
 157  3   20000   20000   20000   20000   20000   20000
 158  4   30000   30000   30000   30000   30000   30000
 159  5   40000   40000   40000   40000   40000   40000
 160  6   50000   50000   50000   50000   50000   50000
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                   01/18/17 13:10:31 Page 4
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


 161  7   60000   60000   60000   60000   60000   60000
 162  8   70000   70000   70000   70000   70000   70000
 163  9   80000   80000   80000   80000   80000   80000
 164  10  90000   90000   90000   90000   90000   90000
 165  11  100000  100000  100000  100000  100000  100000
 166  12  110000  110000  110000  110000  110000  110000
 167  13  120000  120000  120000  120000  120000  120000
 168  14  130000  130000  130000  130000  130000  130000
 169  15  140000  140000  140000  140000  140000  140000
 170  16  150000  150000  150000  150000  150000  150000
 171  17  160000  160000  160000  160000  160000  160000
 172  18  170000  170000  170000  170000  170000  170000
 173  19  180000  180000  180000  180000  180000  180000
 174  20  190000  190000  190000  190000  190000  190000
 175  21  200000  200000  200000  200000  200000  200000
 176  22  210000  210000  210000  210000  210000  210000
 177  23  220000  220000  220000  220000  220000  220000
 178  24  230000  230000  230000  230000  230000  230000
 179  25  240000  240000  240000  240000  240000  240000
 180  26  250000  250000  250000  250000  250000  250000
 181  27  260000  260000  260000  260000  260000  260000
 182  28  270000  270000  270000  270000  270000  270000
 183  29  280000  280000  280000  280000  280000  280000
 184  30  290000  290000  290000  290000  290000  290000
 185  31  300000  300000  300000  300000  300000  300000
 186  32  310000  310000  310000  310000  310000  310000
 187  33  320000  320000  320000  320000  320000  320000
 188  34  330000  330000  330000  330000  330000  330000
 189  35  340000  340000  340000  340000  340000  340000
 190  36  350000  350000  350000  350000  350000  350000
 191  37  360000  360000  360000  360000  360000  360000
 192  38  370000  370000  370000  370000  370000  370000
 193  39  380000  380000  380000  380000  380000  380000
 194  40  390000  390000  390000  390000  390000  390000
 195  41  400000  400000  400000  400000  400000  400000
 196  42  410000  410000  410000  410000  410000  410000
 197  43  420000  420000  420000  420000  420000  420000
 198  44  430000  430000  430000  430000  430000  430000
 199  45  440000  440000  440000  440000  440000  440000
 200  46  450000  450000  450000  450000  450000  450000
 201  47  460000  460000  460000  460000  460000  460000
 202  48  470000  470000  470000  470000  470000  470000
 203  49  480000  480000  480000  480000  480000  480000
 204  50  490000  490000  490000  490000  490000  490000
 205  51  500000  500000  500000  500000  500000  500000
 206  52  510000  510000  510000  510000  510000  510000
 207  53  520000  520000  520000  520000  520000  520000
 208  54  530000  530000  530000  530000  530000  530000
 209  55  540000  540000  540000  540000  540000  540000
 210  56  550000  550000  550000  550000  550000  550000
 211  57  560000  560000  560000  560000  560000  560000
 212  58  570000  570000  570000  570000  570000  570000
 213  59  580000  580000  580000  580000  580000  580000
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                   01/18/17 13:10:31 Page 5
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


 214  60  590000  590000  590000  590000  590000  590000
 215  61  600000  600000  600000  600000  600000  600000
 216  62  610000  610000  610000  610000  610000  610000
 217  63  620000  620000  620000  620000  620000  620000
 218  64  630000  630000  630000  630000  630000  630000
 219  65  640000  640000  640000  640000  640000  640000
 220  66  650000  650000  650000  650000  650000  650000
 221  67  660000  660000  660000  660000  660000  660000
 222  68  670000  670000  670000  670000  670000  670000
 223  69  680000  680000  680000  680000  680000  680000
 224  70  690000  690000  690000  690000  690000  690000
 225  71  700000  700000  700000  700000  700000  700000
 226  72  710000  710000  710000  710000  710000  710000
 227  73  720000  720000  720000  720000  720000  720000
 228  74  730000  730000  730000  730000  730000  730000
 229  75  740000  740000  740000  740000  740000  740000
 230  76  750000  750000  750000  750000  750000  750000
 231  77  760000  760000  760000  760000  760000  760000
 232  78  770000  770000  770000  770000  770000  770000
 233  79  780000  780000  780000  780000  780000  780000
 234  80  790000  790000  790000  790000  790000  790000
 235  81  800000  800000  800000  800000  800000  800000
 236  82  810000  810000  810000  810000  810000  810000
 237  83  820000  820000  820000  820000  820000  820000
 238  84  830000  830000  830000  830000  830000  830000
 239  85  840000  840000  840000  840000  840000  840000
 240  86  850000  850000  850000  850000  850000  850000
 241  87  860000  860000  860000  860000  860000  860000
 242  88  870000  870000  870000  870000  870000  870000
 243  89  880000  880000  880000  880000  880000  880000
 244  90  890000  890000  890000  890000  890000  890000
 245  91  900000  900000  900000  900000  900000  900000
 246  92  910000  910000  910000  910000  910000  910000
 247  93  920000  920000  920000  920000  920000  920000
 248  94  930000  930000  930000  930000  930000  930000
 249  95  940000  940000  940000  940000  940000  940000
 250  96  950000  950000  950000  950000  950000  950000
 251  97  960000  960000  960000  960000  960000  960000
 252  98  970000  970000  970000  970000  970000  970000
 253  99  980000  980000  980000  980000  980000  980000
 254  100 990000  990000  990000  990000  990000  990000
 255  101 1000000 1000000 1000000 1000000 1000000 1000000
 256  102 1010000 1010000 1010000 1010000 1010000 1010000
 257  103 1020000 1020000 1020000 1020000 1020000 1020000
 258  104 1030000 1030000 1030000 1030000 1030000 1030000
 259  105 1040000 1040000 1040000 1040000 1040000 1040000
 260  106 1050000 1050000 1050000 1050000 1050000 1050000
 261  107 1060000 1060000 1060000 1060000 1060000 1060000 ;
 262   
 263   
 264   
 265  SCALAR CAPsawMax 'the maximum capacity of the saw mill, m^3/year'
 266           /150000/;
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                   01/18/17 13:10:31 Page 6
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


 267  SCALAR CAPplyMax 'the capacity of the playwood mill, m^3/year'
 268           /135000/;
 269  SCALAR CAPHselMax 'the capacity of the first line, production hsel ton/year'
 270           /200000/;
 271  SCALAR CAPLselMax 'the capacity of the second line, producinng lsel ton/year'
 272           /300000/;
 273  SCALAR CAPPapMax 'the capcity of the paper mill, ton/year'
 274           /160000/;
 275  SCALAR fuel_price 'fuel wood suitable for producing energy at value of 40'
 276           /40/;
 277  SCALAR PAP_Pro  'Proportion of HSEL and LSEL needed for PAP'
 278           /0.2/;
 279  SCALAR fuel_amount 'the amount of fuel we gain by production timbers in p1'
 280           /-0.2/
 281   
 282   
 283  VARIABLES
 284  z 'the objective'
 285  *h(i) 'Cubic meters of timber i' // getum breytt í parameter og margfaldað með r(i,n) fyrir balance
 286  y(j,t) 'Cubic meters produced of product j'//total timber i for used in product j -- make constraint to find outu how many products..
 287  *q(j, k) 'Cubic meters of product j sold to destination k' // getum breytt í parameter og margfaldað með u
 288  //s(i)'Cubic meters of timber i in stock' // should be integer since all member of the constraint are integer
 289  s(i,t) 'amount of timber i used to make products'
 290  r(n, i,t) '1 if we buy n boats of timber i, 0 otherwise'
 291  u(l,j,k,t) '1 if we use n boats for product j shiping to region k, 0 otherwise'
 292  b(i,t) 'amount of timber i bought'
 293  ;
 294   
 295  // y/table --> product made
 296  INTEGER VARIABLES y;
 297  BINARY VARIABLES u, r;
 298  POSITIVE VARIABLES s, b;
 299   
 300  y.up(j,t) = 1060000;
 301   
 302  EQUATIONS
 303   
 304  obj  'Maximum gross profit'
 305   
 306   
 307   
 308  //=============================================ENOUGH TIMBER
 309  timber_used(i,t) ' amount of  timber i used to make  product j in year t'
 310  prod_starved(i,t)  'ensure that production can not be starved in each year'
 311  //USAGE(i)     'We have to buy material (or produce as byproducts) to be able to produce products'
 312  Sold_Prod(j,t)   'we cant sell more than we produce in each year'
 313  timber_bought(i,t) 'amount of timber i bought in each year'
 314   
 315  //============================== ONLY BUY ONE NUMBER OF BARGERS FOR EACH TIMBER i
 316  Barges_buy(i,t)  'ensure we only pick one value n for barges for each timber i'
 317  Barges_sell(j, k,t)  'ensure we only pick one value  n for barges for each product to each city'
 318   
 319  //=====================================CAPACITYS FOR PRODUCTION
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                   01/18/17 13:10:31 Page 7
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


 320  SawmillCap(t) 'Maximum capacity of the saw mill'
 321  PlywoodCap(t) 'Maximum capacity of plywood mill'
 322  HSELCap(t)    'Maximum capacity of HSEL production'
 323  LSELCap(t)    'Maximum capacity of LSEL production'
 324  PAPCap(t)     'Maximum capacity of PAP production'
 325   
 326  // =====================  PROPORTION OF HSEL AND LSEL NEEDED FOR PAP
 327  PAP_HSEL(t)     'Proportion needed of HSEL for PAP'
 328  PAP_LSEL(t)     'Proportion needed of LSEL for PAP'
 329  PULP_Bal(p3,t)     'Cant produce paper without pulp'
 330  ;
 331   
 332   
 333   
 334  obj ..
 335   
 336          Z =e= sum(t, (sum((k,j), (GAMMA(j,k)/1000) * sum(l, q(l,j)*u(l,j,k,t)))- sum((k,j), (DELTA(j,k)/(1000*1000)) * sum(l, q(l,j)*q(l,j) * u(l,j,k,t))))   //Amount sold times sellingprice
 337   
 338          - sum(i, ALPHA(i)/1000 * sum(n, h(n,i)*r(n,i,t))) - sum(i, BETA(i)/(1000*1000) * sum(n, h(n,i)*h(n,i) * r(n,i,t)))                    //Amount bought times buying price
 339          + sum(p1, y(p1,t)*fuel_amount*(-fuel_price/1000))                                                               //Amount of fuel produced times selling price of fuel
 340          + sum(i, (b(i,t)-s(i,t))*ALPHA(i)/1000)                                                                                        //Amount of extra material times its selling price
 341   
 342          - sum(j, y(j,t)*c(j,t)/1000) )                                                                                         //Amount of produced products times the production cost
****                               $148
 343          ;
 344   
 345   
 346   
 347  //==========================ENSURE WE HAVE ENOUGH TIMBER==================================
 348  timber_used(i,t) ..  sum(j, y(j,t)*table2(j, i)) =e= s(i,t);
 349  prod_starved(i,t) .. sum(n, r(n, i,t)*h(n, i)) =g= s(i,t);
 350  Sold_Prod(j,t) .. sum((l,k), q(l,j)*u(l,j,k,t)) =l= y(j,t);
 351  //USAGE(i) .. sum(j, y(j) * table2(j,i)) =l= sum(n, h(n,i) * r(n,i));
 352  timber_bought(i,t) .. b(i,t) =e= sum(n, r(n, i,t)*h(n, i,t));
****                                                            $148
 353   
 354  //=================== ONLY BUY ONE NUMBER OF BARGERS FOR EACH TIMBER i ========================
 355  Barges_buy(i,t) ..  sum( n,r(n,i,t)) =E= 1;
 356  Barges_sell(j, k,t) .. sum(l, u(l, j, k,t)) =E= 1;
 357   
 358   
 359  //===============================Maximum CAPACITYS FOR PRODUCTION =============================
 360  SawmillCap(t) ..  y("Mas",t) + y("Kus",t) + y("Kos",t)  =l= CAPsawMax;
 361  PlywoodCap(t) ..    y("Kuv",t) + y("Kov",t)  =l= CAPplyMax;
 362  HSELCap(t) ..   y("Hsel",t) =l= CAPHselMax;
 363  LSELCap(t) ..  y("Lsel",t) =l= CAPLselMax;
 364  PAPCap(t) ..   y("Pap",t) =l= CAPPapMax;
 365   
 366  // =====================  PROPORTION OF HSEL AND LSEL NEEDED FOR PAP ===========
 367  PAP_HSEL(t)..  PAP_Pro*y("PAP",t) =l= y("HSEL",t);
 368  PAP_LSEL(t)..  PAP_Pro*y("PAP",t) =l= y("LSEL",t);
 369  PULP_Bal(p3,t) .. sum((l,k), u(l,p3,k,t)*q(l,p3)) + PAP_Pro*y("PAP",t) =l= y(P3,t);
 370   
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                   01/18/17 13:10:31 Page 8
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


 371  MODEL final /all/;
 372  Solve final using mip maxmizing Z;
****                                   $257
 373  DISPLAY z.l, u.l, r.l, y.l, s.l, b.l;
****            $141 $141 $141      $141 $141
 374   
 375   
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                   01/18/17 13:10:31 Page 9
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Error Messages


141  Symbol declared but no values have been assigned. Check for missing
        data definition, assignment, data loading or implicit assignment
        via a solve statement.
        A wild shot: You may have spurious commas in the explanatory
        text of a declaration. Check symbol reference list.
148  Dimension different - The symbol is referenced with more/less
        indices as declared
257  Solve statement not checked because of previous errors

**** 8 ERROR(S)   0 WARNING(S)


COMPILATION TIME     =        0.006 SECONDS      3 MB  24.8.1 r59919 DEX-DEG


USER: Course License Spring 2017                     A161219:0249AN-GEN
      Management Engineering, Technical University of Denmark    DC8756
      License for teaching and research at degree granting institutions


**** FILE SUMMARY

Input      /Users/AtliPall/AHI/finalB.gms
Output     /Users/AtliPall/AHI/finalB.lst

**** USER ERROR(S) ENCOUNTERED
