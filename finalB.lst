GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                   01/18/17 22:30:41 Page 1
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


   1  * FinalA.gms
   2  *
   4  option iterlim=999999999;     // avoid limit on iterations
   5  option reslim=300;            // timelimit for solver in sec.
   6  option optcr=0.0;             // gap tolerance
   7  option solprint=ON;           // include solution print in .lst file
   8  option limrow=100;            // limit number of rows in .lst file
   9  option limcol=100;            // limit number of columns in .lst file
  10  //--------------------------------------------------------------------
  11   
  12  SET timber 'raw material timber bought by Metsa Oy'
  13  /   Mat, Kut, Kot, Mak, Kuk, Kok   /;
  14  SET products 'Products made by Metsa Oy'
  15  /   Mas, Kus, Kos, Kuv, Kov, Hsel, Lsel, Pap    /;
  16  SET destinations 'destinations where Metsa sells products'
  17  /   EU, IE, PA, KI  /;
  18  SET p1(products) 'normal products p1 produced'
  19  / Mas, Kus, Kos, Kuv, Kov  /;
  20  SET p2(products) 'products p2 possible to make from leftovers'
  21  /   Hsel, Lsel, Pap     /;
  22  SET p3(products) 'Pulp products p3 which can make paper'
  23  /   HSEL, LSEL /;
  24  SET n 'number of barges n bought'
  25  /   1*107  /;
  26  SET l 'number of barges l sold'
  27  / 1*23 /;
  28  SET v 'Set for profit calculations'
  29  /   ATO, DPC, SP, FC, PROFIT /;
  30  SET t 'years'
  31  / 1, 2, 3 /;
  32   
  33   
  34      SET SAWm(products)
  35          / MAS, KUS, KOS /;
  36      SET PLYm(products)
  37          / KUV, KOV /;
  38      SET SPULPm(products)
  39          /HSEL/;
  40      SET HPULPm(products)
  41          /LSEL/;
  42      SET PAPm(Products)
  43          /PAP/;
  44   
  45  SET m 'production lines'
  46  /   SAW, PLY, SPULP, HPULP, PAP /;
  47   
  48  ALIAS(timber, i);
  49  ALIAS(products, j);
  50  ALIAS(destinations, k);
  51   
  52  PARAMETERS
  53   
  54   
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                   01/18/17 22:30:41 Page 2
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


  55  c(products) 'the cost of producing each product, mesured in erous/1000m^3'
  56      /   Mas   550
  57          Kus   500
  58          Kos   450
  59          Kuv   2500
  60          Kov   2600
  61          Hsel  820
  62          Lsel  800
  63          Pap   1700  /
  64   
  65   
  66  alpha(timber) 'alpha cost parameters by timber assortments'
  67      /   MAT     190
  68          KUT     150
  69          KOT     120
  70          MAK     180
  71          KUK     150
  72          KOK     150 /
  73   
  74  beta(timber) 'Beta cost parameter by timber assortments'
  75      /   MAT     1.0
  76          KUT     0.5
  77          KOT     3.0
  78          MAK     0.2
  79          KUK     0.3
  80          KOK     0.2 /
  81   
  82  CAP0(m) 'Starting capacity'
  83      /   SAW     100000
  84          PLY     90000
  85          SPULP   100000
  86          HPULP   150000
  87          PAP     80000  /
  88   
  89  demand_growth(j) 'demand growth for product j'
  90  /   MAS    1.010
  91       KUS    1.008
  92       KOS    1.015
  93       KUV    1.015
  94       KOV    1.020
  95       HSEL  1.025
  96       LSEL   1.030
  97       PAP     1.035  /
  98   
  99   
 100  FCOST(m) 'Fixed cost'
 101      /   SAW     100
 102          PLY     300
 103          SPULP   500
 104          HPULP   500
 105          PAP     700 /
 106   
 107  MaxCap(m)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                   01/18/17 22:30:41 Page 3
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


 108     /SAW     150000
 109      PLY     135000
 110      SPULP   200000
 111      HPULP   300000
 112      PAP     160000 /;
 113   
 114   
 115   
 116   
 117   
 118   
 119  TABLE table2(j,i)'Cubic-meters of material i used in cubic-meter of product j'
 120                  MAT     KUT     KOT     MAK     KUK     KOK
 121          MAS     2.0     0.0     0.0     -0.8    0.0     0.0
 122          KUS     0.0     2.0     0.0     0.0     -0.8    0.0
 123          KOS     0.0     0.0     2.0     0.0     0.0     -0.8
 124          KUV     0.0     2.8     0.0     0.0     -1.6    0.0
 125          KOV     0.0     0.0     2.8     0.0     0.0     -1.6
 126          HSEL    0.0     0.0     0.0     4.8     0.0     0.0
 127          LSEL    0.0     0.0     0.0     0.0     0.0     4.2
 128          PAP     0.0     0.0     0.0     0.0     1.0     0.0      ;
 129   
 130   
 131  *TABLE table3(p2, p3) 'timber p3 needed for production of product p2'
 132  *                     Mak    Kuk     Kok   Hsel    Lsel
 133  *        Hsel      4.8      0.0      0.0      0.0      0.0
 134  *        Lsel       0.0      0.0      4.2      0.0      0.0
 135  *        Pap       0.0      1.0       0.0     0.2      0.2;
 136   
 137  TABLE Prodinm(m,j) 'What products j are in what machines m'
 138          MAS     KUS     KOS     KUV     KOV     HSEL    LSEL    PAP
 139  SAW       1       1       1       0       0        0       0      0
 140  PLY       0       0       0       1       1        0       0      0
 141  SPULP     0       0       0       0       0        1       0      0
 142  HPULP     0       0       0       0       0        0       1      0
 143  PAP       0       0       0       0       0        0       0      1;
 144   
 145   
 146   
 147   
 148  TABLE GAMMA(j,k) 'Gamma coefficent for selling product j in region k'
 149                    EU      IE      PA      KI
 150           MAS     1600    1300    1400    1500
 151           KUS     1400    1200    1300    1400
 152           KOS     1300    1400    1500    1600
 153           KUV     4400    3800    3600    3500
 154           KOV     4300    4100    3900    3800
 155           HSEL    2300    2500    2300    2600
 156           LSEL    2500    2800    2300    2500
 157           PAP     4500    4700    4300    4800 ;
 158   
 159   
 160  TABLE DELTA(j,k) 'Delta coefficient for selling product j in region k'
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                   01/18/17 22:30:41 Page 4
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


 161                   EU      IE      PA      KI
 162           MAS     4       10      12      15
 163           KUS     4       10      12      15
 164           KOS     14      20      22      25
 165           KUV     4       10      12      15
 166           KOV     4       10      12      15
 167           HSEL    2       4       5       6
 168           LSEL    3       2       5       7
 169           PAP     4       10      12      15 ;
 170   
 171   
 172   
 173   
 174   
 175  TABLE q(l,j) 'Options of amount l to be sold of product j'
 176     MAS     KOS     KUV     KOV    HSEL   LSEL   PAP
 177  1  0       0       0       0      0      0      0
 178  2  10000   10000   10000   10000  10000  10000  10000
 179  3  20000   20000   20000   20000  20000  20000  20000
 180  4  30000   30000   30000   30000  30000  30000  30000
 181  5  40000   40000   40000   40000  40000  40000  40000
 182  6  50000   50000   50000   50000  50000  50000  50000
 183  7  60000   60000   60000   60000  60000  60000  60000
 184  8  70000   70000   70000   70000  70000  70000  70000
 185  9  80000   80000   80000   80000  80000  80000  80000
 186  10 90000   90000   90000   90000  90000  90000  90000
 187  11 100000  100000  100000  100000 100000 100000 100000
 188  12 110000  110000  110000  110000 110000 110000 110000
 189  13 120000  120000  120000  120000 120000 120000 120000
 190  14 130000  130000  130000  130000 130000 130000 130000
 191  15 140000  140000  140000  140000 140000 140000 140000
 192  16 150000  150000  150000  150000 150000 150000 150000
 193  17 160000  160000  160000  160000 160000 160000 160000
 194  18 170000  170000  170000  170000 170000 170000 170000
 195  19 180000  180000  180000  180000 180000 180000 180000
 196  20 190000  190000  190000  190000 190000 190000 190000
 197  21 200000  200000  200000  200000 200000 200000 200000
 198  22 210000  210000  210000  210000 210000 210000 210000
 199  23 220000  220000  220000  220000 220000 220000 220000 ;
 200   
 201   
 202   
 203  TABLE h(n,i) 'Options of amount n to be bought of material i'
 204      Mat     KUT     KOT     MAK     KUK     KOK
 205  1   0       0       0       0       0       0
 206  2   10000   10000   10000   10000   10000   10000
 207  3   20000   20000   20000   20000   20000   20000
 208  4   30000   30000   30000   30000   30000   30000
 209  5   40000   40000   40000   40000   40000   40000
 210  6   50000   50000   50000   50000   50000   50000
 211  7   60000   60000   60000   60000   60000   60000
 212  8   70000   70000   70000   70000   70000   70000
 213  9   80000   80000   80000   80000   80000   80000
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                   01/18/17 22:30:41 Page 5
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


 214  10  90000   90000   90000   90000   90000   90000
 215  11  100000  100000  100000  100000  100000  100000
 216  12  110000  110000  110000  110000  110000  110000
 217  13  120000  120000  120000  120000  120000  120000
 218  14  130000  130000  130000  130000  130000  130000
 219  15  140000  140000  140000  140000  140000  140000
 220  16  150000  150000  150000  150000  150000  150000
 221  17  160000  160000  160000  160000  160000  160000
 222  18  170000  170000  170000  170000  170000  170000
 223  19  180000  180000  180000  180000  180000  180000
 224  20  190000  190000  190000  190000  190000  190000
 225  21  200000  200000  200000  200000  200000  200000
 226  22  210000  210000  210000  210000  210000  210000
 227  23  220000  220000  220000  220000  220000  220000
 228  24  230000  230000  230000  230000  230000  230000
 229  25  240000  240000  240000  240000  240000  240000
 230  26  250000  250000  250000  250000  250000  250000
 231  27  260000  260000  260000  260000  260000  260000
 232  28  270000  270000  270000  270000  270000  270000
 233  29  280000  280000  280000  280000  280000  280000
 234  30  290000  290000  290000  290000  290000  290000
 235  31  300000  300000  300000  300000  300000  300000
 236  32  310000  310000  310000  310000  310000  310000
 237  33  320000  320000  320000  320000  320000  320000
 238  34  330000  330000  330000  330000  330000  330000
 239  35  340000  340000  340000  340000  340000  340000
 240  36  350000  350000  350000  350000  350000  350000
 241  37  360000  360000  360000  360000  360000  360000
 242  38  370000  370000  370000  370000  370000  370000
 243  39  380000  380000  380000  380000  380000  380000
 244  40  390000  390000  390000  390000  390000  390000
 245  41  400000  400000  400000  400000  400000  400000
 246  42  410000  410000  410000  410000  410000  410000
 247  43  420000  420000  420000  420000  420000  420000
 248  44  430000  430000  430000  430000  430000  430000
 249  45  440000  440000  440000  440000  440000  440000
 250  46  450000  450000  450000  450000  450000  450000
 251  47  460000  460000  460000  460000  460000  460000
 252  48  470000  470000  470000  470000  470000  470000
 253  49  480000  480000  480000  480000  480000  480000
 254  50  490000  490000  490000  490000  490000  490000
 255  51  500000  500000  500000  500000  500000  500000
 256  52  510000  510000  510000  510000  510000  510000
 257  53  520000  520000  520000  520000  520000  520000
 258  54  530000  530000  530000  530000  530000  530000
 259  55  540000  540000  540000  540000  540000  540000
 260  56  550000  550000  550000  550000  550000  550000
 261  57  560000  560000  560000  560000  560000  560000
 262  58  570000  570000  570000  570000  570000  570000
 263  59  580000  580000  580000  580000  580000  580000
 264  60  590000  590000  590000  590000  590000  590000
 265  61  600000  600000  600000  600000  600000  600000
 266  62  610000  610000  610000  610000  610000  610000
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                   01/18/17 22:30:41 Page 6
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


 267  63  620000  620000  620000  620000  620000  620000
 268  64  630000  630000  630000  630000  630000  630000
 269  65  640000  640000  640000  640000  640000  640000
 270  66  650000  650000  650000  650000  650000  650000
 271  67  660000  660000  660000  660000  660000  660000
 272  68  670000  670000  670000  670000  670000  670000
 273  69  680000  680000  680000  680000  680000  680000
 274  70  690000  690000  690000  690000  690000  690000
 275  71  700000  700000  700000  700000  700000  700000
 276  72  710000  710000  710000  710000  710000  710000
 277  73  720000  720000  720000  720000  720000  720000
 278  74  730000  730000  730000  730000  730000  730000
 279  75  740000  740000  740000  740000  740000  740000
 280  76  750000  750000  750000  750000  750000  750000
 281  77  760000  760000  760000  760000  760000  760000
 282  78  770000  770000  770000  770000  770000  770000
 283  79  780000  780000  780000  780000  780000  780000
 284  80  790000  790000  790000  790000  790000  790000
 285  81  800000  800000  800000  800000  800000  800000
 286  82  810000  810000  810000  810000  810000  810000
 287  83  820000  820000  820000  820000  820000  820000
 288  84  830000  830000  830000  830000  830000  830000
 289  85  840000  840000  840000  840000  840000  840000
 290  86  850000  850000  850000  850000  850000  850000
 291  87  860000  860000  860000  860000  860000  860000
 292  88  870000  870000  870000  870000  870000  870000
 293  89  880000  880000  880000  880000  880000  880000
 294  90  890000  890000  890000  890000  890000  890000
 295  91  900000  900000  900000  900000  900000  900000
 296  92  910000  910000  910000  910000  910000  910000
 297  93  920000  920000  920000  920000  920000  920000
 298  94  930000  930000  930000  930000  930000  930000
 299  95  940000  940000  940000  940000  940000  940000
 300  96  950000  950000  950000  950000  950000  950000
 301  97  960000  960000  960000  960000  960000  960000
 302  98  970000  970000  970000  970000  970000  970000
 303  99  980000  980000  980000  980000  980000  980000
 304  100 990000  990000  990000  990000  990000  990000
 305  101 1000000 1000000 1000000 1000000 1000000 1000000
 306  102 1010000 1010000 1010000 1010000 1010000 1010000
 307  103 1020000 1020000 1020000 1020000 1020000 1020000
 308  104 1030000 1030000 1030000 1030000 1030000 1030000
 309  105 1040000 1040000 1040000 1040000 1040000 1040000
 310  106 1050000 1050000 1050000 1050000 1050000 1050000
 311  107 1060000 1060000 1060000 1060000 1060000 1060000 ;
 312   
 313   
 314   
 315  SCALAR fuel_price 'fuel wood suitable for producing energy at value of 40'
 316           /40/;
 317  SCALAR PAP_Pro  'Proportion of HSEL and LSEL needed for PAP'
 318           /0.2/;
 319  SCALAR fuel_amount 'the amount of fuel we gain by production timbers in p1'
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                   01/18/17 22:30:41 Page 7
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


 320           /-0.2/
 321   
 322   
 323  VARIABLES
 324  z 'the objective'
 325  *h(i) 'Cubic meters of timber i' // getum breytt í parameter og margfaldað með r(i,n) fyrir balance
 326  y(j,t) 'Cubic meters produced of product j'//total timber i for used in product j -- make constraint to find outu how many products..
 327  *q(j, k) 'Cubic meters of product j sold to destination k' // getum breytt í parameter og margfaldað með u
 328  //s(i)'Cubic meters of timber i in stock' // should be integer since all member of the constraint are integer
 329  s(i,t) 'amount of timber i used to make products'
 330  r(n, i,t) '1 if we buy n boats of timber i, 0 otherwise'
 331  u(l,j,k,t) '1 if we use n boats for product j shiping to region k, 0 otherwise'
 332  b(i,t) 'amount of timber i bought'
 333  fxC(t) 'Fixed cost of machine m in year t'
 334  Pr(t) 'Net profit in each year t'
 335  Cap(m,t) 'Capacity of machine m in year t'
 336  ;
 337   
 338  // y/table --> product made
 339  INTEGER VARIABLES y;
 340  BINARY VARIABLES u, r;
 341  POSITIVE VARIABLES s, b;
 342   
 343  y.up(j,t) = 1060000;
 344   
 345   
 346  EQUATIONS
 347   
 348  obj  'Maximum gross profit'
 349   
 350   
 351   
 352  //=============================================ENOUGH TIMBER
 353  timber_used(i,t) ' amount of  timber i used to make  product j in year t'
 354  prod_starved(i,t)  'ensure that production can not be starved in each year'
 355  //USAGE(i)     'We have to buy material (or produce as byproducts) to be able to produce products'
 356  Sold_Prod(j,t)   'we cant sell more than we produce in each year'
 357  timber_bought(i,t) 'amount of timber i bought in each year'
 358   
 359  //============================== ONLY BUY ONE NUMBER OF BARGERS FOR EACH TIMBER i
 360  Barges_buy(i,t)  'ensure we only pick one value n for barges for each timber i'
 361  Barges_sell(j, k,t)  'ensure we only pick one value  n for barges for each product to each city'
 362   
 363  //=====================================CAPACITYS FOR PRODUCTION
 364  Capacity1(m,t) 'Capacity goes up if we produce over the capacity'
 365  Capacity2(m,t) 'Make sure that the capacity does not go down'
 366  MaxCapacity(m,t) 'Make sure we dont go over the maximum capacity'
 367  CapStart(m,t)   'Make sure the starting capacity is right'
 368   
 369  // =====================  PROPORTION OF HSEL AND LSEL NEEDED FOR PAP
 370  PAP_HSEL(t)     'Proportion needed of HSEL for PAP'
 371  PAP_LSEL(t)     'Proportion needed of LSEL for PAP'
 372  PULP_Bal(p3,t)     'Cant produce paper without pulp'
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                   01/18/17 22:30:41 Page 8
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


 373   
 374  // =========ADD FIXED COST FOR INCREASED CAPACITY========== //
 375  *FixedCost(t) 'Fixed cost of machine m in year t'
 376   
 377  // =====PROFIT(OLD OBJECTIVE FUNCTION)=======//
 378  PROFIT(t) 'Profit is what we gain minus what we spend'
 379   
 380   
 381   
 382  ;
 383   
 384   
 385   
 386  obj ..
 387   
 388          Z =e= sum(t, Pr(t));
 389   
 390  //==========================ENSURE WE HAVE ENOUGH TIMBER==================================
 391  timber_used(i,t) ..  sum(j, y(j,t)*table2(j, i)) =e= s(i,t);
 392  prod_starved(i,t) .. sum(n, r(n, i,t)*h(n, i)) =g= s(i,t);
 393  //Sold_Prod(j,t) .. sum((l,k), q(l,j)*u(l,j,k,t)) =l= y(j,t);
 394  Sold_Prod(j,t) .. sum((l,k), q(l,j)*u(l,j,k,t)*power(demand_growth(j), ord(t)-1) =l= y(j,t);
****                                                                                     $8
 395  //USAGE(i) .. sum(j, y(j) * table2(j,i)) =l= sum(n, h(n,i) * r(n,i));
 396  timber_bought(i,t) .. b(i,t) =e= sum(n, r(n, i,t)*h(n, i));
 397   
 398  //=================== ONLY BUY ONE NUMBER OF BARGERS FOR EACH TIMBER i ========================
 399  Barges_buy(i,t) ..  sum( n,r(n,i,t)) =E= 1;
 400  Barges_sell(j, k,t) .. sum(l, u(l, j, k,t)) =E= 1;
 401   
 402   
 403  //=============================== CAPACITYS FOR PRODUCTION =============================
 404  Capacity1(m,t).. Cap(m,t) =g= Cap(m,t-1)+(sum(j, y(j,t)*Prodinm(m,j))-Cap(m,t-1));
 405  Capacity2(m,t).. Cap(m,t) =g= sum(j, y(j,t)*Prodinm(m,j));
 406  MaxCapacity(m,t).. Cap(m,t) =l= MaxCap(m);
 407  CapStart(m,t).. Cap(m,"1") =l= Cap0(m);
 408   
 409   
 410  // =====================  PROPORTION OF HSEL AND LSEL NEEDED FOR PAP ===========
 411  PAP_HSEL(t)..  PAP_Pro*y("PAP",t) =l= y("HSEL",t);
 412  PAP_LSEL(t)..  PAP_Pro*y("PAP",t) =l= y("LSEL",t);
 413  PULP_Bal(p3,t) .. sum((l,k), u(l,p3,k,t)*q(l,p3)) + PAP_Pro*y("PAP",t) =l= y(P3,t);
 414   
 415  // =========ADD FIXED COST FOR INCREASED CAPACITY========== //
 416   
 417   
 418   
 419  // =====PROFIT(OLD OBJECTIVE FUNCTION)=======//
 420  PROFIT(t).. Pr(t) =e= power(0.95, ord(t)-1)* (sum((k,j), (GAMMA(j,k)/1000) * sum(l, q(l,j)*u(l,j,k,t)))- sum((k,j), (DELTA(j,k)/(1000*1000)) * sum(l, q(l,j)*q(l,j) * u(l,j,k,t))))   //Amount sold times sellingprice
 421   
 422                      - sum(i, ALPHA(i)/1000 * sum(n, h(n,i)*r(n,i,t))) - sum(i, BETA(i)/(1000*1000) * sum(n, h(n,i)*h(n,i) * r(n,i,t)))                    //Amount bought times buying price
 423                      + sum(p1, y(p1,t)*fuel_amount*(-fuel_price/1000))                                                               //Amount of fuel produced times selling price of fuel
 424                      + sum(i, (b(i,t)-s(i,t))*ALPHA(i)/1000)                                                                                        //Amount of extra material times its selling price
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                   01/18/17 22:30:41 Page 9
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


 425   
 426                      - sum(j, y(j,t)*c(j)/1000)
 427                      - sum(m, Cap(m,t+1)*FCost(m)/1000)                                                                                      //Amount of produced products times the production cost
 428                      ;
 429   
 430   
 431   
 432  MODEL final /all/;
 433  Solve final using mip maxmizing Z;
****                                   $257
 434  DISPLAY z.l, u.l, r.l, y.l, s.l, b.l, Cap.l;
****            $141 $141 $141      $141 $141   $141
 435   
 436   
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 22:30:41 Page 10
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Error Messages


  8  ')' expected
141  Symbol declared but no values have been assigned. Check for missing
        data definition, assignment, data loading or implicit assignment
        via a solve statement.
        A wild shot: You may have spurious commas in the explanatory
        text of a declaration. Check symbol reference list.
257  Solve statement not checked because of previous errors

**** 8 ERROR(S)   0 WARNING(S)


COMPILATION TIME     =        0.007 SECONDS      3 MB  24.8.1 r59919 DEX-DEG


USER: Course License Spring 2017                     A161219:0249AN-GEN
      Management Engineering, Technical University of Denmark    DC8756
      License for teaching and research at degree granting institutions


**** FILE SUMMARY

Input      /Users/AtliPall/AHI/finalB.gms
Output     /Users/AtliPall/AHI/finalB.lst

**** USER ERROR(S) ENCOUNTERED
