GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                   01/18/17 23:25:38 Page 1
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


   1  * FinalA.gms
   2  *
   4  option iterlim=999999999;     // avoid limit on iterations
   5  option reslim=300;            // timelimit for solver in sec.
   6  option optcr=0.0;             // gap tolerance
   7  option solprint=ON;           // include solution print in .lst file
   8  option limrow=100;            // limit number of rows in .lst file
   9  option limcol=100;            // limit number of columns in .lst file
  10  //--------------------------------------------------------------------
  11   
  12  SET timber 'raw material timber bought by Metsa Oy'
  13  /   Mat, Kut, Kot, Mak, Kuk, Kok   /;
  14  SET products 'Products made by Metsa Oy'
  15  /   Mas, Kus, Kos, Kuv, Kov, Hsel, Lsel, Pap    /;
  16  SET destinations 'destinations where Metsa sells products'
  17  /   EU, IE, PA, KI  /;
  18  SET p1(products) 'normal products p1 produced'
  19  / Mas, Kus, Kos, Kuv, Kov  /;
  20  SET p2(products) 'products p2 possible to make from leftovers'
  21  /   Hsel, Lsel, Pap     /;
  22  SET p3(products) 'Pulp products p3 which can make paper'
  23  /   HSEL, LSEL /;
  24  SET n 'number of barges n bought'
  25  /   1*107  /;
  26  SET l 'number of barges l sold'
  27  / 1*23 /;
  28  SET v 'Set for profit calculations'
  29  /   ATO, DPC, SP, FC, PROFIT /;
  30  SET t 'years'
  31  / 1, 2, 3 /;
  32   
  33   
  34      SET SAWm(products)
  35          / MAS, KUS, KOS /;
  36      SET PLYm(products)
  37          / KUV, KOV /;
  38      SET SPULPm(products)
  39          /HSEL/;
  40      SET HPULPm(products)
  41          /LSEL/;
  42      SET PAPm(Products)
  43          /PAP/;
  44   
  45  SET m 'production lines'
  46  /   SAW, PLY, SPULP, HPULP, PAP /;
  47   
  48  ALIAS(timber, i);
  49  ALIAS(products, j);
  50  ALIAS(destinations, k);
  51   
  52  PARAMETERS
  53   
  54   
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                   01/18/17 23:25:38 Page 2
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


  55  c(products) 'the cost of producing each product, mesured in erous/1000m^3'
  56      /   Mas   550
  57          Kus   500
  58          Kos   450
  59          Kuv   2500
  60          Kov   2600
  61          Hsel  820
  62          Lsel  800
  63          Pap   1700  /
  64   
  65   
  66  alpha(timber) 'alpha cost parameters by timber assortments'
  67      /   MAT     190
  68          KUT     150
  69          KOT     120
  70          MAK     180
  71          KUK     150
  72          KOK     150 /
  73   
  74  beta(timber) 'Beta cost parameter by timber assortments'
  75      /   MAT     1.0
  76          KUT     0.5
  77          KOT     3.0
  78          MAK     0.2
  79          KUK     0.3
  80          KOK     0.2 /
  81   
  82  CAP0(m) 'Starting capacity'
  83      /   SAW     100000
  84          PLY     90000
  85          SPULP   100000
  86          HPULP   150000
  87          PAP     80000  /
  88   
  89  demand_growth(j) 'demand growth for product j'
  90  /   MAS    1.010
  91       KUS    1.008
  92       KOS    1.015
  93       KUV    1.015
  94       KOV    1.020
  95       HSEL  1.025
  96       LSEL   1.030
  97       PAP     1.035  /
  98   
  99   
 100  FCOST(m) 'Fixed cost'
 101      /   SAW     100
 102          PLY     300
 103          SPULP   500
 104          HPULP   500
 105          PAP     700 /
 106   
 107  MaxCap(m)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                   01/18/17 23:25:38 Page 3
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


 108     /SAW     150000
 109      PLY     135000
 110      SPULP   200000
 111      HPULP   300000
 112      PAP     160000 /;
 113   
 114   
 115   
 116   
 117   
 118   
 119  TABLE table2(j,i)'Cubic-meters of material i used in cubic-meter of product j'
 120                  MAT     KUT     KOT     MAK     KUK     KOK
 121          MAS     2.0     0.0     0.0     -0.8    0.0     0.0
 122          KUS     0.0     2.0     0.0     0.0     -0.8    0.0
 123          KOS     0.0     0.0     2.0     0.0     0.0     -0.8
 124          KUV     0.0     2.8     0.0     0.0     -1.6    0.0
 125          KOV     0.0     0.0     2.8     0.0     0.0     -1.6
 126          HSEL    0.0     0.0     0.0     4.8     0.0     0.0
 127          LSEL    0.0     0.0     0.0     0.0     0.0     4.2
 128          PAP     0.0     0.0     0.0     0.0     1.0     0.0      ;
 129   
 130   
 131  *TABLE table3(p2, p3) 'timber p3 needed for production of product p2'
 132  *                     Mak    Kuk     Kok   Hsel    Lsel
 133  *        Hsel      4.8      0.0      0.0      0.0      0.0
 134  *        Lsel       0.0      0.0      4.2      0.0      0.0
 135  *        Pap       0.0      1.0       0.0     0.2      0.2;
 136   
 137  TABLE Prodinm(m,j) 'What products j are in what machines m'
 138          MAS     KUS     KOS     KUV     KOV     HSEL    LSEL    PAP
 139  SAW       1       1       1       0       0        0       0      0
 140  PLY       0       0       0       1       1        0       0      0
 141  SPULP     0       0       0       0       0        1       0      0
 142  HPULP     0       0       0       0       0        0       1      0
 143  PAP       0       0       0       0       0        0       0      1;
 144   
 145   
 146   
 147   
 148  TABLE GAMMA(j,k) 'Gamma coefficent for selling product j in region k'
 149                    EU      IE      PA      KI
 150           MAS     1600    1300    1400    1500
 151           KUS     1400    1200    1300    1400
 152           KOS     1300    1400    1500    1600
 153           KUV     4400    3800    3600    3500
 154           KOV     4300    4100    3900    3800
 155           HSEL    2300    2500    2300    2600
 156           LSEL    2500    2800    2300    2500
 157           PAP     4500    4700    4300    4800 ;
 158   
 159   
 160  TABLE DELTA(j,k) 'Delta coefficient for selling product j in region k'
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                   01/18/17 23:25:38 Page 4
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


 161                   EU      IE      PA      KI
 162           MAS     4       10      12      15
 163           KUS     4       10      12      15
 164           KOS     14      20      22      25
 165           KUV     4       10      12      15
 166           KOV     4       10      12      15
 167           HSEL    2       4       5       6
 168           LSEL    3       2       5       7
 169           PAP     4       10      12      15 ;
 170   
 171   
 172   
 173   
 174   
 175  TABLE q(l,j) 'Options of amount l to be sold of product j'
 176     MAS     KOS     KUV     KOV    HSEL   LSEL   PAP
 177  1  0       0       0       0      0      0      0
 178  2  10000   10000   10000   10000  10000  10000  10000
 179  3  20000   20000   20000   20000  20000  20000  20000
 180  4  30000   30000   30000   30000  30000  30000  30000
 181  5  40000   40000   40000   40000  40000  40000  40000
 182  6  50000   50000   50000   50000  50000  50000  50000
 183  7  60000   60000   60000   60000  60000  60000  60000
 184  8  70000   70000   70000   70000  70000  70000  70000
 185  9  80000   80000   80000   80000  80000  80000  80000
 186  10 90000   90000   90000   90000  90000  90000  90000
 187  11 100000  100000  100000  100000 100000 100000 100000
 188  12 110000  110000  110000  110000 110000 110000 110000
 189  13 120000  120000  120000  120000 120000 120000 120000
 190  14 130000  130000  130000  130000 130000 130000 130000
 191  15 140000  140000  140000  140000 140000 140000 140000
 192  16 150000  150000  150000  150000 150000 150000 150000
 193  17 160000  160000  160000  160000 160000 160000 160000
 194  18 170000  170000  170000  170000 170000 170000 170000
 195  19 180000  180000  180000  180000 180000 180000 180000
 196  20 190000  190000  190000  190000 190000 190000 190000
 197  21 200000  200000  200000  200000 200000 200000 200000
 198  22 210000  210000  210000  210000 210000 210000 210000
 199  23 220000  220000  220000  220000 220000 220000 220000 ;
 200   
 201   
 202   
 203  TABLE h(n,i) 'Options of amount n to be bought of material i'
 204      Mat     KUT     KOT     MAK     KUK     KOK
 205  1   0       0       0       0       0       0
 206  2   10000   10000   10000   10000   10000   10000
 207  3   20000   20000   20000   20000   20000   20000
 208  4   30000   30000   30000   30000   30000   30000
 209  5   40000   40000   40000   40000   40000   40000
 210  6   50000   50000   50000   50000   50000   50000
 211  7   60000   60000   60000   60000   60000   60000
 212  8   70000   70000   70000   70000   70000   70000
 213  9   80000   80000   80000   80000   80000   80000
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                   01/18/17 23:25:38 Page 5
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


 214  10  90000   90000   90000   90000   90000   90000
 215  11  100000  100000  100000  100000  100000  100000
 216  12  110000  110000  110000  110000  110000  110000
 217  13  120000  120000  120000  120000  120000  120000
 218  14  130000  130000  130000  130000  130000  130000
 219  15  140000  140000  140000  140000  140000  140000
 220  16  150000  150000  150000  150000  150000  150000
 221  17  160000  160000  160000  160000  160000  160000
 222  18  170000  170000  170000  170000  170000  170000
 223  19  180000  180000  180000  180000  180000  180000
 224  20  190000  190000  190000  190000  190000  190000
 225  21  200000  200000  200000  200000  200000  200000
 226  22  210000  210000  210000  210000  210000  210000
 227  23  220000  220000  220000  220000  220000  220000
 228  24  230000  230000  230000  230000  230000  230000
 229  25  240000  240000  240000  240000  240000  240000
 230  26  250000  250000  250000  250000  250000  250000
 231  27  260000  260000  260000  260000  260000  260000
 232  28  270000  270000  270000  270000  270000  270000
 233  29  280000  280000  280000  280000  280000  280000
 234  30  290000  290000  290000  290000  290000  290000
 235  31  300000  300000  300000  300000  300000  300000
 236  32  310000  310000  310000  310000  310000  310000
 237  33  320000  320000  320000  320000  320000  320000
 238  34  330000  330000  330000  330000  330000  330000
 239  35  340000  340000  340000  340000  340000  340000
 240  36  350000  350000  350000  350000  350000  350000
 241  37  360000  360000  360000  360000  360000  360000
 242  38  370000  370000  370000  370000  370000  370000
 243  39  380000  380000  380000  380000  380000  380000
 244  40  390000  390000  390000  390000  390000  390000
 245  41  400000  400000  400000  400000  400000  400000
 246  42  410000  410000  410000  410000  410000  410000
 247  43  420000  420000  420000  420000  420000  420000
 248  44  430000  430000  430000  430000  430000  430000
 249  45  440000  440000  440000  440000  440000  440000
 250  46  450000  450000  450000  450000  450000  450000
 251  47  460000  460000  460000  460000  460000  460000
 252  48  470000  470000  470000  470000  470000  470000
 253  49  480000  480000  480000  480000  480000  480000
 254  50  490000  490000  490000  490000  490000  490000
 255  51  500000  500000  500000  500000  500000  500000
 256  52  510000  510000  510000  510000  510000  510000
 257  53  520000  520000  520000  520000  520000  520000
 258  54  530000  530000  530000  530000  530000  530000
 259  55  540000  540000  540000  540000  540000  540000
 260  56  550000  550000  550000  550000  550000  550000
 261  57  560000  560000  560000  560000  560000  560000
 262  58  570000  570000  570000  570000  570000  570000
 263  59  580000  580000  580000  580000  580000  580000
 264  60  590000  590000  590000  590000  590000  590000
 265  61  600000  600000  600000  600000  600000  600000
 266  62  610000  610000  610000  610000  610000  610000
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                   01/18/17 23:25:38 Page 6
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


 267  63  620000  620000  620000  620000  620000  620000
 268  64  630000  630000  630000  630000  630000  630000
 269  65  640000  640000  640000  640000  640000  640000
 270  66  650000  650000  650000  650000  650000  650000
 271  67  660000  660000  660000  660000  660000  660000
 272  68  670000  670000  670000  670000  670000  670000
 273  69  680000  680000  680000  680000  680000  680000
 274  70  690000  690000  690000  690000  690000  690000
 275  71  700000  700000  700000  700000  700000  700000
 276  72  710000  710000  710000  710000  710000  710000
 277  73  720000  720000  720000  720000  720000  720000
 278  74  730000  730000  730000  730000  730000  730000
 279  75  740000  740000  740000  740000  740000  740000
 280  76  750000  750000  750000  750000  750000  750000
 281  77  760000  760000  760000  760000  760000  760000
 282  78  770000  770000  770000  770000  770000  770000
 283  79  780000  780000  780000  780000  780000  780000
 284  80  790000  790000  790000  790000  790000  790000
 285  81  800000  800000  800000  800000  800000  800000
 286  82  810000  810000  810000  810000  810000  810000
 287  83  820000  820000  820000  820000  820000  820000
 288  84  830000  830000  830000  830000  830000  830000
 289  85  840000  840000  840000  840000  840000  840000
 290  86  850000  850000  850000  850000  850000  850000
 291  87  860000  860000  860000  860000  860000  860000
 292  88  870000  870000  870000  870000  870000  870000
 293  89  880000  880000  880000  880000  880000  880000
 294  90  890000  890000  890000  890000  890000  890000
 295  91  900000  900000  900000  900000  900000  900000
 296  92  910000  910000  910000  910000  910000  910000
 297  93  920000  920000  920000  920000  920000  920000
 298  94  930000  930000  930000  930000  930000  930000
 299  95  940000  940000  940000  940000  940000  940000
 300  96  950000  950000  950000  950000  950000  950000
 301  97  960000  960000  960000  960000  960000  960000
 302  98  970000  970000  970000  970000  970000  970000
 303  99  980000  980000  980000  980000  980000  980000
 304  100 990000  990000  990000  990000  990000  990000
 305  101 1000000 1000000 1000000 1000000 1000000 1000000
 306  102 1010000 1010000 1010000 1010000 1010000 1010000
 307  103 1020000 1020000 1020000 1020000 1020000 1020000
 308  104 1030000 1030000 1030000 1030000 1030000 1030000
 309  105 1040000 1040000 1040000 1040000 1040000 1040000
 310  106 1050000 1050000 1050000 1050000 1050000 1050000
 311  107 1060000 1060000 1060000 1060000 1060000 1060000 ;
 312   
 313   
 314   
 315  SCALAR fuel_price 'fuel wood suitable for producing energy at value of 40'
 316           /40/;
 317  SCALAR PAP_Pro  'Proportion of HSEL and LSEL needed for PAP'
 318           /0.2/;
 319  SCALAR fuel_amount 'the amount of fuel we gain by production timbers in p1'
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                   01/18/17 23:25:38 Page 7
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


 320           /-0.2/
 321   
 322   
 323  VARIABLES
 324  z 'the objective'
 325  *h(i) 'Cubic meters of timber i' // getum breytt í parameter og margfaldað með r(i,n) fyrir balance
 326  y(j,t) 'Cubic meters produced of product j'//total timber i for used in product j -- make constraint to find outu how many products..
 327  *q(j, k) 'Cubic meters of product j sold to destination k' // getum breytt í parameter og margfaldað með u
 328  //s(i)'Cubic meters of timber i in stock' // should be integer since all member of the constraint are integer
 329  s(i,t) 'amount of timber i used to make products'
 330  r(n, i,t) '1 if we buy n boats of timber i, 0 otherwise'
 331  u(l,j,k,t) '1 if we use n boats for product j shiping to region k, 0 otherwise'
 332  b(i,t) 'amount of timber i bought'
 333  fxC(t) 'Fixed cost of machine m in year t'
 334  Pr(t) 'Net profit in each year t'
 335  Cap(m,t) 'Capacity of machine m in year t'
 336  ;
 337   
 338  // y/table --> product made
 339  INTEGER VARIABLES y;
 340  BINARY VARIABLES u, r;
 341  POSITIVE VARIABLES s, b;
 342   
 343  y.up(j,t) = 1060000;
 344   
 345   
 346  EQUATIONS
 347   
 348  obj  'Maximum gross profit'
 349   
 350   
 351   
 352  //=============================================ENOUGH TIMBER
 353  timber_used(i,t) ' amount of  timber i used to make  product j in year t'
 354  prod_starved(i,t)  'ensure that production can not be starved in each year'
 355  //USAGE(i)     'We have to buy material (or produce as byproducts) to be able to produce products'
 356  Sold_Prod(j,t)   'we cant sell more than we produce in each year'
 357  timber_bought(i,t) 'amount of timber i bought in each year'
 358   
 359  //============================== ONLY BUY ONE NUMBER OF BARGERS FOR EACH TIMBER i
 360  Barges_buy(i,t)  'ensure we only pick one value n for barges for each timber i'
 361  Barges_sell(j, k,t)  'ensure we only pick one value  n for barges for each product to each city'
 362   
 363  //=====================================CAPACITYS FOR PRODUCTION
 364  Capacity1(m,t) 'Capacity goes up if we produce over the capacity'
 365  *Capacity2(m,t) 'Make sure that the capacity does not go down'
 366  MaxCapacity(m,t) 'Make sure we dont go over the maximum capacity'
 367  CapStart(m,t)   'Make sure the starting capacity is right'
 368   
 369  // =====================  PROPORTION OF HSEL AND LSEL NEEDED FOR PAP
 370  PAP_HSEL(t)     'Proportion needed of HSEL for PAP'
 371  PAP_LSEL(t)     'Proportion needed of LSEL for PAP'
 372  PULP_Bal(p3,t)     'Cant produce paper without pulp'
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                   01/18/17 23:25:38 Page 8
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


 373   
 374  // =========ADD FIXED COST FOR INCREASED CAPACITY========== //
 375  *FixedCost(t) 'Fixed cost of machine m in year t'
 376   
 377  // =====PROFIT(OLD OBJECTIVE FUNCTION)=======//
 378  PROFIT(t) 'Profit is what we gain minus what we spend'
 379   
 380   
 381   
 382  ;
 383   
 384   
 385   
 386  obj ..
 387   
 388          Z =e= sum(t, Pr(t));
 389   
 390  //==========================ENSURE WE HAVE ENOUGH TIMBER==================================
 391  timber_used(i,t) ..  sum(j, y(j,t)*table2(j, i)) =e= s(i,t);
 392  prod_starved(i,t) .. sum(n, r(n, i,t)*h(n, i)) =g= s(i,t);
 393  //Sold_Prod(j,t) .. sum((l,k), q(l,j)*u(l,j,k,t)) =l= y(j,t);
 394  Sold_Prod(j,t) .. sum((l,k), q(l,j)*u(l,j,k,t)*power(demand_growth(j), ord(t)-1)) =l= y(j,t);
 395  //USAGE(i) .. sum(j, y(j) * table2(j,i)) =l= sum(n, h(n,i) * r(n,i));
 396  timber_bought(i,t) .. b(i,t) =e= sum(n, r(n, i,t)*h(n, i));
 397   
 398  //=================== ONLY BUY ONE NUMBER OF BARGERS FOR EACH TIMBER i ========================
 399  Barges_buy(i,t) ..  sum( n,r(n,i,t)) =E= 1;
 400  Barges_sell(j, k,t) .. sum(l, u(l, j, k,t)) =E= 1;
 401   
 402   
 403  //=============================== CAPACITYS FOR PRODUCTION =============================
 404  Capacity1(m,t).. Cap(m,t) =g= Cap(m,t-1)+(sum(j, y(j,t)*Prodinm(m,j))-Cap(m,t-1));
 405  *Capacity2(m,t).. Cap(m,t) =g= sum(j, y(j,t)*Prodinm(m,j));
 406  MaxCapacity(m,t).. Cap(m,t) =l= MaxCap(m);
 407  CapStart(m,t).. Cap(m,"1") =l= Cap0(m);
 408   
 409   
 410  // =====================  PROPORTION OF HSEL AND LSEL NEEDED FOR PAP ===========
 411  PAP_HSEL(t)..  PAP_Pro*y("PAP",t) =l= y("HSEL",t);
 412  PAP_LSEL(t)..  PAP_Pro*y("PAP",t) =l= y("LSEL",t);
 413  PULP_Bal(p3,t) .. sum((l,k), u(l,p3,k,t)*q(l,p3)) + PAP_Pro*y("PAP",t) =l= y(P3,t);
 414   
 415  // =========ADD FIXED COST FOR INCREASED CAPACITY========== //
 416   
 417   
 418   
 419  // =====PROFIT(OLD OBJECTIVE FUNCTION)=======//
 420  PROFIT(t).. Pr(t) =e= power(0.95, ord(t)-1)* (sum((k,j), (GAMMA(j,k)/1000) * sum(l, q(l,j)*u(l,j,k,t))/power(demand_growth(j), ord(t)-1))- sum((k,j), (DELTA(j,k)/(1000*1000)) * sum(l, q(l,j)*q(l,j) * u(l,j,k,t))/power(demand_growth(j), 2*(ord(t)-1))
      ))   //Amount sold times sellingprice
 421   
 422                      - sum(i, ALPHA(i)/1000 * sum(n, h(n,i)*r(n,i,t))) - sum(i, BETA(i)/(1000*1000) * sum(n, h(n,i)*h(n,i) * r(n,i,t)))                    //Amount bought times buying price
 423                      + sum(p1, y(p1,t)*fuel_amount*(-fuel_price/1000))                                                               //Amount of fuel produced times selling price of fuel
 424                      + sum(i, (b(i,t)-s(i,t))*ALPHA(i)/1000)                                                                                        //Amount of extra material times its selling price
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                   01/18/17 23:25:38 Page 9
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


 425   
 426                      - sum(j, y(j,t)*c(j)/1000)
 427                      - sum(m, Cap(m,t+1)*FCost(m)/1000)                                                                                      //Amount of produced products times the production cost
 428                      ;
 429   
 430   
 431   
 432  MODEL final /all/;
 433  Solve final using mip maxmizing Z;
 434  DISPLAY z.l, u.l, r.l, y.l, s.l, b.l, Cap.l;
 435   
 436   


COMPILATION TIME     =        0.002 SECONDS      3 MB  24.8.1 r59919 DEX-DEG
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 23:25:38 Page 10
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 433


---- obj  =E=  Maximum gross profit

obj..  z - Pr(1) - Pr(2) - Pr(3) =E= 0 ; (LHS = 0)
     

---- timber_used  =E=   amount of  timber i used to make  product j in year t

timber_used(Mat,1)..  2*y(Mas,1) - s(Mat,1) =E= 0 ; (LHS = 0)
     
timber_used(Mat,2)..  2*y(Mas,2) - s(Mat,2) =E= 0 ; (LHS = 0)
     
timber_used(Mat,3)..  2*y(Mas,3) - s(Mat,3) =E= 0 ; (LHS = 0)
     
timber_used(Kut,1)..  2*y(Kus,1) + 2.8*y(Kuv,1) - s(Kut,1) =E= 0 ; (LHS = 0)
     
timber_used(Kut,2)..  2*y(Kus,2) + 2.8*y(Kuv,2) - s(Kut,2) =E= 0 ; (LHS = 0)
     
timber_used(Kut,3)..  2*y(Kus,3) + 2.8*y(Kuv,3) - s(Kut,3) =E= 0 ; (LHS = 0)
     
timber_used(Kot,1)..  2*y(Kos,1) + 2.8*y(Kov,1) - s(Kot,1) =E= 0 ; (LHS = 0)
     
timber_used(Kot,2)..  2*y(Kos,2) + 2.8*y(Kov,2) - s(Kot,2) =E= 0 ; (LHS = 0)
     
timber_used(Kot,3)..  2*y(Kos,3) + 2.8*y(Kov,3) - s(Kot,3) =E= 0 ; (LHS = 0)
     
timber_used(Mak,1)..  - 0.8*y(Mas,1) + 4.8*y(Hsel,1) - s(Mak,1) =E= 0 ; (LHS = 0)
     
timber_used(Mak,2)..  - 0.8*y(Mas,2) + 4.8*y(Hsel,2) - s(Mak,2) =E= 0 ; (LHS = 0)
     
timber_used(Mak,3)..  - 0.8*y(Mas,3) + 4.8*y(Hsel,3) - s(Mak,3) =E= 0 ; (LHS = 0)
     
timber_used(Kuk,1)..  - 0.8*y(Kus,1) - 1.6*y(Kuv,1) + y(Pap,1) - s(Kuk,1) =E= 0 ; (LHS = 0)
     
timber_used(Kuk,2)..  - 0.8*y(Kus,2) - 1.6*y(Kuv,2) + y(Pap,2) - s(Kuk,2) =E= 0 ; (LHS = 0)
     
timber_used(Kuk,3)..  - 0.8*y(Kus,3) - 1.6*y(Kuv,3) + y(Pap,3) - s(Kuk,3) =E= 0 ; (LHS = 0)
     
timber_used(Kok,1)..  - 0.8*y(Kos,1) - 1.6*y(Kov,1) + 4.2*y(Lsel,1) - s(Kok,1) =E= 0 ; (LHS = 0)
     
timber_used(Kok,2)..  - 0.8*y(Kos,2) - 1.6*y(Kov,2) + 4.2*y(Lsel,2) - s(Kok,2) =E= 0 ; (LHS = 0)
     
timber_used(Kok,3)..  - 0.8*y(Kos,3) - 1.6*y(Kov,3) + 4.2*y(Lsel,3) - s(Kok,3) =E= 0 ; (LHS = 0)
     

---- prod_starved  =G=  ensure that production can not be starved in each year

prod_starved(Mat,1)..  - s(Mat,1) + 10000*r(2,Mat,1) + 20000*r(3,Mat,1) + 30000*r(4,Mat,1) + 40000*r(5,Mat,1) + 50000*r(6,Mat,1) + 60000*r(7,Mat,1) + 70000*r(8,Mat,1) + 80000*r(9,Mat,1) + 90000*r(10,Mat,1) + 100000*r(11,Mat,1) + 110000*r(12,Mat,1)
     
      + 120000*r(13,Mat,1) + 130000*r(14,Mat,1) + 140000*r(15,Mat,1) + 150000*r(16,Mat,1) + 160000*r(17,Mat,1) + 170000*r(18,Mat,1) + 180000*r(19,Mat,1) + 190000*r(20,Mat,1) + 200000*r(21,Mat,1) + 210000*r(22,Mat,1) + 220000*r(23,Mat,1)
     
      + 230000*r(24,Mat,1) + 240000*r(25,Mat,1) + 250000*r(26,Mat,1) + 260000*r(27,Mat,1) + 270000*r(28,Mat,1) + 280000*r(29,Mat,1) + 290000*r(30,Mat,1) + 300000*r(31,Mat,1) + 310000*r(32,Mat,1) + 320000*r(33,Mat,1) + 330000*r(34,Mat,1)
     
      + 340000*r(35,Mat,1) + 350000*r(36,Mat,1) + 360000*r(37,Mat,1) + 370000*r(38,Mat,1) + 380000*r(39,Mat,1) + 390000*r(40,Mat,1) + 400000*r(41,Mat,1) + 410000*r(42,Mat,1) + 420000*r(43,Mat,1) + 430000*r(44,Mat,1) + 440000*r(45,Mat,1)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 23:25:38 Page 11
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 433


     prod_starved  =G=  ensure that production can not be starved in each year     
     
      + 450000*r(46,Mat,1) + 460000*r(47,Mat,1) + 470000*r(48,Mat,1) + 480000*r(49,Mat,1) + 490000*r(50,Mat,1) + 500000*r(51,Mat,1) + 510000*r(52,Mat,1) + 520000*r(53,Mat,1) + 530000*r(54,Mat,1) + 540000*r(55,Mat,1) + 550000*r(56,Mat,1)
     
      + 560000*r(57,Mat,1) + 570000*r(58,Mat,1) + 580000*r(59,Mat,1) + 590000*r(60,Mat,1) + 600000*r(61,Mat,1) + 610000*r(62,Mat,1) + 620000*r(63,Mat,1) + 630000*r(64,Mat,1) + 640000*r(65,Mat,1) + 650000*r(66,Mat,1) + 660000*r(67,Mat,1)
     
      + 670000*r(68,Mat,1) + 680000*r(69,Mat,1) + 690000*r(70,Mat,1) + 700000*r(71,Mat,1) + 710000*r(72,Mat,1) + 720000*r(73,Mat,1) + 730000*r(74,Mat,1) + 740000*r(75,Mat,1) + 750000*r(76,Mat,1) + 760000*r(77,Mat,1) + 770000*r(78,Mat,1)
     
      + 780000*r(79,Mat,1) + 790000*r(80,Mat,1) + 800000*r(81,Mat,1) + 810000*r(82,Mat,1) + 820000*r(83,Mat,1) + 830000*r(84,Mat,1) + 840000*r(85,Mat,1) + 850000*r(86,Mat,1) + 860000*r(87,Mat,1) + 870000*r(88,Mat,1) + 880000*r(89,Mat,1)
     
      + 890000*r(90,Mat,1) + 900000*r(91,Mat,1) + 910000*r(92,Mat,1) + 920000*r(93,Mat,1) + 930000*r(94,Mat,1) + 940000*r(95,Mat,1) + 950000*r(96,Mat,1) + 960000*r(97,Mat,1) + 970000*r(98,Mat,1) + 980000*r(99,Mat,1) + 990000*r(100,Mat,1)
     
      + 1000000*r(101,Mat,1) + 1010000*r(102,Mat,1) + 1020000*r(103,Mat,1) + 1030000*r(104,Mat,1) + 1040000*r(105,Mat,1) + 1050000*r(106,Mat,1) + 1060000*r(107,Mat,1) =G= 0 ; (LHS = 0)
     
prod_starved(Mat,2)..  - s(Mat,2) + 10000*r(2,Mat,2) + 20000*r(3,Mat,2) + 30000*r(4,Mat,2) + 40000*r(5,Mat,2) + 50000*r(6,Mat,2) + 60000*r(7,Mat,2) + 70000*r(8,Mat,2) + 80000*r(9,Mat,2) + 90000*r(10,Mat,2) + 100000*r(11,Mat,2) + 110000*r(12,Mat,2)
     
      + 120000*r(13,Mat,2) + 130000*r(14,Mat,2) + 140000*r(15,Mat,2) + 150000*r(16,Mat,2) + 160000*r(17,Mat,2) + 170000*r(18,Mat,2) + 180000*r(19,Mat,2) + 190000*r(20,Mat,2) + 200000*r(21,Mat,2) + 210000*r(22,Mat,2) + 220000*r(23,Mat,2)
     
      + 230000*r(24,Mat,2) + 240000*r(25,Mat,2) + 250000*r(26,Mat,2) + 260000*r(27,Mat,2) + 270000*r(28,Mat,2) + 280000*r(29,Mat,2) + 290000*r(30,Mat,2) + 300000*r(31,Mat,2) + 310000*r(32,Mat,2) + 320000*r(33,Mat,2) + 330000*r(34,Mat,2)
     
      + 340000*r(35,Mat,2) + 350000*r(36,Mat,2) + 360000*r(37,Mat,2) + 370000*r(38,Mat,2) + 380000*r(39,Mat,2) + 390000*r(40,Mat,2) + 400000*r(41,Mat,2) + 410000*r(42,Mat,2) + 420000*r(43,Mat,2) + 430000*r(44,Mat,2) + 440000*r(45,Mat,2)
     
      + 450000*r(46,Mat,2) + 460000*r(47,Mat,2) + 470000*r(48,Mat,2) + 480000*r(49,Mat,2) + 490000*r(50,Mat,2) + 500000*r(51,Mat,2) + 510000*r(52,Mat,2) + 520000*r(53,Mat,2) + 530000*r(54,Mat,2) + 540000*r(55,Mat,2) + 550000*r(56,Mat,2)
     
      + 560000*r(57,Mat,2) + 570000*r(58,Mat,2) + 580000*r(59,Mat,2) + 590000*r(60,Mat,2) + 600000*r(61,Mat,2) + 610000*r(62,Mat,2) + 620000*r(63,Mat,2) + 630000*r(64,Mat,2) + 640000*r(65,Mat,2) + 650000*r(66,Mat,2) + 660000*r(67,Mat,2)
     
      + 670000*r(68,Mat,2) + 680000*r(69,Mat,2) + 690000*r(70,Mat,2) + 700000*r(71,Mat,2) + 710000*r(72,Mat,2) + 720000*r(73,Mat,2) + 730000*r(74,Mat,2) + 740000*r(75,Mat,2) + 750000*r(76,Mat,2) + 760000*r(77,Mat,2) + 770000*r(78,Mat,2)
     
      + 780000*r(79,Mat,2) + 790000*r(80,Mat,2) + 800000*r(81,Mat,2) + 810000*r(82,Mat,2) + 820000*r(83,Mat,2) + 830000*r(84,Mat,2) + 840000*r(85,Mat,2) + 850000*r(86,Mat,2) + 860000*r(87,Mat,2) + 870000*r(88,Mat,2) + 880000*r(89,Mat,2)
     
      + 890000*r(90,Mat,2) + 900000*r(91,Mat,2) + 910000*r(92,Mat,2) + 920000*r(93,Mat,2) + 930000*r(94,Mat,2) + 940000*r(95,Mat,2) + 950000*r(96,Mat,2) + 960000*r(97,Mat,2) + 970000*r(98,Mat,2) + 980000*r(99,Mat,2) + 990000*r(100,Mat,2)
     
      + 1000000*r(101,Mat,2) + 1010000*r(102,Mat,2) + 1020000*r(103,Mat,2) + 1030000*r(104,Mat,2) + 1040000*r(105,Mat,2) + 1050000*r(106,Mat,2) + 1060000*r(107,Mat,2) =G= 0 ; (LHS = 0)
     
prod_starved(Mat,3)..  - s(Mat,3) + 10000*r(2,Mat,3) + 20000*r(3,Mat,3) + 30000*r(4,Mat,3) + 40000*r(5,Mat,3) + 50000*r(6,Mat,3) + 60000*r(7,Mat,3) + 70000*r(8,Mat,3) + 80000*r(9,Mat,3) + 90000*r(10,Mat,3) + 100000*r(11,Mat,3) + 110000*r(12,Mat,3)
     
      + 120000*r(13,Mat,3) + 130000*r(14,Mat,3) + 140000*r(15,Mat,3) + 150000*r(16,Mat,3) + 160000*r(17,Mat,3) + 170000*r(18,Mat,3) + 180000*r(19,Mat,3) + 190000*r(20,Mat,3) + 200000*r(21,Mat,3) + 210000*r(22,Mat,3) + 220000*r(23,Mat,3)
     
      + 230000*r(24,Mat,3) + 240000*r(25,Mat,3) + 250000*r(26,Mat,3) + 260000*r(27,Mat,3) + 270000*r(28,Mat,3) + 280000*r(29,Mat,3) + 290000*r(30,Mat,3) + 300000*r(31,Mat,3) + 310000*r(32,Mat,3) + 320000*r(33,Mat,3) + 330000*r(34,Mat,3)
     
      + 340000*r(35,Mat,3) + 350000*r(36,Mat,3) + 360000*r(37,Mat,3) + 370000*r(38,Mat,3) + 380000*r(39,Mat,3) + 390000*r(40,Mat,3) + 400000*r(41,Mat,3) + 410000*r(42,Mat,3) + 420000*r(43,Mat,3) + 430000*r(44,Mat,3) + 440000*r(45,Mat,3)
     
      + 450000*r(46,Mat,3) + 460000*r(47,Mat,3) + 470000*r(48,Mat,3) + 480000*r(49,Mat,3) + 490000*r(50,Mat,3) + 500000*r(51,Mat,3) + 510000*r(52,Mat,3) + 520000*r(53,Mat,3) + 530000*r(54,Mat,3) + 540000*r(55,Mat,3) + 550000*r(56,Mat,3)
     
      + 560000*r(57,Mat,3) + 570000*r(58,Mat,3) + 580000*r(59,Mat,3) + 590000*r(60,Mat,3) + 600000*r(61,Mat,3) + 610000*r(62,Mat,3) + 620000*r(63,Mat,3) + 630000*r(64,Mat,3) + 640000*r(65,Mat,3) + 650000*r(66,Mat,3) + 660000*r(67,Mat,3)
     
      + 670000*r(68,Mat,3) + 680000*r(69,Mat,3) + 690000*r(70,Mat,3) + 700000*r(71,Mat,3) + 710000*r(72,Mat,3) + 720000*r(73,Mat,3) + 730000*r(74,Mat,3) + 740000*r(75,Mat,3) + 750000*r(76,Mat,3) + 760000*r(77,Mat,3) + 770000*r(78,Mat,3)
     
      + 780000*r(79,Mat,3) + 790000*r(80,Mat,3) + 800000*r(81,Mat,3) + 810000*r(82,Mat,3) + 820000*r(83,Mat,3) + 830000*r(84,Mat,3) + 840000*r(85,Mat,3) + 850000*r(86,Mat,3) + 860000*r(87,Mat,3) + 870000*r(88,Mat,3) + 880000*r(89,Mat,3)
     
      + 890000*r(90,Mat,3) + 900000*r(91,Mat,3) + 910000*r(92,Mat,3) + 920000*r(93,Mat,3) + 930000*r(94,Mat,3) + 940000*r(95,Mat,3) + 950000*r(96,Mat,3) + 960000*r(97,Mat,3) + 970000*r(98,Mat,3) + 980000*r(99,Mat,3) + 990000*r(100,Mat,3)
     
      + 1000000*r(101,Mat,3) + 1010000*r(102,Mat,3) + 1020000*r(103,Mat,3) + 1030000*r(104,Mat,3) + 1040000*r(105,Mat,3) + 1050000*r(106,Mat,3) + 1060000*r(107,Mat,3) =G= 0 ; (LHS = 0)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 23:25:38 Page 12
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 433


     prod_starved  =G=  ensure that production can not be starved in each year

prod_starved(Kut,1)..  - s(Kut,1) + 10000*r(2,Kut,1) + 20000*r(3,Kut,1) + 30000*r(4,Kut,1) + 40000*r(5,Kut,1) + 50000*r(6,Kut,1) + 60000*r(7,Kut,1) + 70000*r(8,Kut,1) + 80000*r(9,Kut,1) + 90000*r(10,Kut,1) + 100000*r(11,Kut,1) + 110000*r(12,Kut,1)
     
      + 120000*r(13,Kut,1) + 130000*r(14,Kut,1) + 140000*r(15,Kut,1) + 150000*r(16,Kut,1) + 160000*r(17,Kut,1) + 170000*r(18,Kut,1) + 180000*r(19,Kut,1) + 190000*r(20,Kut,1) + 200000*r(21,Kut,1) + 210000*r(22,Kut,1) + 220000*r(23,Kut,1)
     
      + 230000*r(24,Kut,1) + 240000*r(25,Kut,1) + 250000*r(26,Kut,1) + 260000*r(27,Kut,1) + 270000*r(28,Kut,1) + 280000*r(29,Kut,1) + 290000*r(30,Kut,1) + 300000*r(31,Kut,1) + 310000*r(32,Kut,1) + 320000*r(33,Kut,1) + 330000*r(34,Kut,1)
     
      + 340000*r(35,Kut,1) + 350000*r(36,Kut,1) + 360000*r(37,Kut,1) + 370000*r(38,Kut,1) + 380000*r(39,Kut,1) + 390000*r(40,Kut,1) + 400000*r(41,Kut,1) + 410000*r(42,Kut,1) + 420000*r(43,Kut,1) + 430000*r(44,Kut,1) + 440000*r(45,Kut,1)
     
      + 450000*r(46,Kut,1) + 460000*r(47,Kut,1) + 470000*r(48,Kut,1) + 480000*r(49,Kut,1) + 490000*r(50,Kut,1) + 500000*r(51,Kut,1) + 510000*r(52,Kut,1) + 520000*r(53,Kut,1) + 530000*r(54,Kut,1) + 540000*r(55,Kut,1) + 550000*r(56,Kut,1)
     
      + 560000*r(57,Kut,1) + 570000*r(58,Kut,1) + 580000*r(59,Kut,1) + 590000*r(60,Kut,1) + 600000*r(61,Kut,1) + 610000*r(62,Kut,1) + 620000*r(63,Kut,1) + 630000*r(64,Kut,1) + 640000*r(65,Kut,1) + 650000*r(66,Kut,1) + 660000*r(67,Kut,1)
     
      + 670000*r(68,Kut,1) + 680000*r(69,Kut,1) + 690000*r(70,Kut,1) + 700000*r(71,Kut,1) + 710000*r(72,Kut,1) + 720000*r(73,Kut,1) + 730000*r(74,Kut,1) + 740000*r(75,Kut,1) + 750000*r(76,Kut,1) + 760000*r(77,Kut,1) + 770000*r(78,Kut,1)
     
      + 780000*r(79,Kut,1) + 790000*r(80,Kut,1) + 800000*r(81,Kut,1) + 810000*r(82,Kut,1) + 820000*r(83,Kut,1) + 830000*r(84,Kut,1) + 840000*r(85,Kut,1) + 850000*r(86,Kut,1) + 860000*r(87,Kut,1) + 870000*r(88,Kut,1) + 880000*r(89,Kut,1)
     
      + 890000*r(90,Kut,1) + 900000*r(91,Kut,1) + 910000*r(92,Kut,1) + 920000*r(93,Kut,1) + 930000*r(94,Kut,1) + 940000*r(95,Kut,1) + 950000*r(96,Kut,1) + 960000*r(97,Kut,1) + 970000*r(98,Kut,1) + 980000*r(99,Kut,1) + 990000*r(100,Kut,1)
     
      + 1000000*r(101,Kut,1) + 1010000*r(102,Kut,1) + 1020000*r(103,Kut,1) + 1030000*r(104,Kut,1) + 1040000*r(105,Kut,1) + 1050000*r(106,Kut,1) + 1060000*r(107,Kut,1) =G= 0 ; (LHS = 0)
     
prod_starved(Kut,2)..  - s(Kut,2) + 10000*r(2,Kut,2) + 20000*r(3,Kut,2) + 30000*r(4,Kut,2) + 40000*r(5,Kut,2) + 50000*r(6,Kut,2) + 60000*r(7,Kut,2) + 70000*r(8,Kut,2) + 80000*r(9,Kut,2) + 90000*r(10,Kut,2) + 100000*r(11,Kut,2) + 110000*r(12,Kut,2)
     
      + 120000*r(13,Kut,2) + 130000*r(14,Kut,2) + 140000*r(15,Kut,2) + 150000*r(16,Kut,2) + 160000*r(17,Kut,2) + 170000*r(18,Kut,2) + 180000*r(19,Kut,2) + 190000*r(20,Kut,2) + 200000*r(21,Kut,2) + 210000*r(22,Kut,2) + 220000*r(23,Kut,2)
     
      + 230000*r(24,Kut,2) + 240000*r(25,Kut,2) + 250000*r(26,Kut,2) + 260000*r(27,Kut,2) + 270000*r(28,Kut,2) + 280000*r(29,Kut,2) + 290000*r(30,Kut,2) + 300000*r(31,Kut,2) + 310000*r(32,Kut,2) + 320000*r(33,Kut,2) + 330000*r(34,Kut,2)
     
      + 340000*r(35,Kut,2) + 350000*r(36,Kut,2) + 360000*r(37,Kut,2) + 370000*r(38,Kut,2) + 380000*r(39,Kut,2) + 390000*r(40,Kut,2) + 400000*r(41,Kut,2) + 410000*r(42,Kut,2) + 420000*r(43,Kut,2) + 430000*r(44,Kut,2) + 440000*r(45,Kut,2)
     
      + 450000*r(46,Kut,2) + 460000*r(47,Kut,2) + 470000*r(48,Kut,2) + 480000*r(49,Kut,2) + 490000*r(50,Kut,2) + 500000*r(51,Kut,2) + 510000*r(52,Kut,2) + 520000*r(53,Kut,2) + 530000*r(54,Kut,2) + 540000*r(55,Kut,2) + 550000*r(56,Kut,2)
     
      + 560000*r(57,Kut,2) + 570000*r(58,Kut,2) + 580000*r(59,Kut,2) + 590000*r(60,Kut,2) + 600000*r(61,Kut,2) + 610000*r(62,Kut,2) + 620000*r(63,Kut,2) + 630000*r(64,Kut,2) + 640000*r(65,Kut,2) + 650000*r(66,Kut,2) + 660000*r(67,Kut,2)
     
      + 670000*r(68,Kut,2) + 680000*r(69,Kut,2) + 690000*r(70,Kut,2) + 700000*r(71,Kut,2) + 710000*r(72,Kut,2) + 720000*r(73,Kut,2) + 730000*r(74,Kut,2) + 740000*r(75,Kut,2) + 750000*r(76,Kut,2) + 760000*r(77,Kut,2) + 770000*r(78,Kut,2)
     
      + 780000*r(79,Kut,2) + 790000*r(80,Kut,2) + 800000*r(81,Kut,2) + 810000*r(82,Kut,2) + 820000*r(83,Kut,2) + 830000*r(84,Kut,2) + 840000*r(85,Kut,2) + 850000*r(86,Kut,2) + 860000*r(87,Kut,2) + 870000*r(88,Kut,2) + 880000*r(89,Kut,2)
     
      + 890000*r(90,Kut,2) + 900000*r(91,Kut,2) + 910000*r(92,Kut,2) + 920000*r(93,Kut,2) + 930000*r(94,Kut,2) + 940000*r(95,Kut,2) + 950000*r(96,Kut,2) + 960000*r(97,Kut,2) + 970000*r(98,Kut,2) + 980000*r(99,Kut,2) + 990000*r(100,Kut,2)
     
      + 1000000*r(101,Kut,2) + 1010000*r(102,Kut,2) + 1020000*r(103,Kut,2) + 1030000*r(104,Kut,2) + 1040000*r(105,Kut,2) + 1050000*r(106,Kut,2) + 1060000*r(107,Kut,2) =G= 0 ; (LHS = 0)
     
prod_starved(Kut,3)..  - s(Kut,3) + 10000*r(2,Kut,3) + 20000*r(3,Kut,3) + 30000*r(4,Kut,3) + 40000*r(5,Kut,3) + 50000*r(6,Kut,3) + 60000*r(7,Kut,3) + 70000*r(8,Kut,3) + 80000*r(9,Kut,3) + 90000*r(10,Kut,3) + 100000*r(11,Kut,3) + 110000*r(12,Kut,3)
     
      + 120000*r(13,Kut,3) + 130000*r(14,Kut,3) + 140000*r(15,Kut,3) + 150000*r(16,Kut,3) + 160000*r(17,Kut,3) + 170000*r(18,Kut,3) + 180000*r(19,Kut,3) + 190000*r(20,Kut,3) + 200000*r(21,Kut,3) + 210000*r(22,Kut,3) + 220000*r(23,Kut,3)
     
      + 230000*r(24,Kut,3) + 240000*r(25,Kut,3) + 250000*r(26,Kut,3) + 260000*r(27,Kut,3) + 270000*r(28,Kut,3) + 280000*r(29,Kut,3) + 290000*r(30,Kut,3) + 300000*r(31,Kut,3) + 310000*r(32,Kut,3) + 320000*r(33,Kut,3) + 330000*r(34,Kut,3)
     
      + 340000*r(35,Kut,3) + 350000*r(36,Kut,3) + 360000*r(37,Kut,3) + 370000*r(38,Kut,3) + 380000*r(39,Kut,3) + 390000*r(40,Kut,3) + 400000*r(41,Kut,3) + 410000*r(42,Kut,3) + 420000*r(43,Kut,3) + 430000*r(44,Kut,3) + 440000*r(45,Kut,3)
     
      + 450000*r(46,Kut,3) + 460000*r(47,Kut,3) + 470000*r(48,Kut,3) + 480000*r(49,Kut,3) + 490000*r(50,Kut,3) + 500000*r(51,Kut,3) + 510000*r(52,Kut,3) + 520000*r(53,Kut,3) + 530000*r(54,Kut,3) + 540000*r(55,Kut,3) + 550000*r(56,Kut,3)
     
      + 560000*r(57,Kut,3) + 570000*r(58,Kut,3) + 580000*r(59,Kut,3) + 590000*r(60,Kut,3) + 600000*r(61,Kut,3) + 610000*r(62,Kut,3) + 620000*r(63,Kut,3) + 630000*r(64,Kut,3) + 640000*r(65,Kut,3) + 650000*r(66,Kut,3) + 660000*r(67,Kut,3)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 23:25:38 Page 13
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 433


     prod_starved  =G=  ensure that production can not be starved in each year     
     
      + 670000*r(68,Kut,3) + 680000*r(69,Kut,3) + 690000*r(70,Kut,3) + 700000*r(71,Kut,3) + 710000*r(72,Kut,3) + 720000*r(73,Kut,3) + 730000*r(74,Kut,3) + 740000*r(75,Kut,3) + 750000*r(76,Kut,3) + 760000*r(77,Kut,3) + 770000*r(78,Kut,3)
     
      + 780000*r(79,Kut,3) + 790000*r(80,Kut,3) + 800000*r(81,Kut,3) + 810000*r(82,Kut,3) + 820000*r(83,Kut,3) + 830000*r(84,Kut,3) + 840000*r(85,Kut,3) + 850000*r(86,Kut,3) + 860000*r(87,Kut,3) + 870000*r(88,Kut,3) + 880000*r(89,Kut,3)
     
      + 890000*r(90,Kut,3) + 900000*r(91,Kut,3) + 910000*r(92,Kut,3) + 920000*r(93,Kut,3) + 930000*r(94,Kut,3) + 940000*r(95,Kut,3) + 950000*r(96,Kut,3) + 960000*r(97,Kut,3) + 970000*r(98,Kut,3) + 980000*r(99,Kut,3) + 990000*r(100,Kut,3)
     
      + 1000000*r(101,Kut,3) + 1010000*r(102,Kut,3) + 1020000*r(103,Kut,3) + 1030000*r(104,Kut,3) + 1040000*r(105,Kut,3) + 1050000*r(106,Kut,3) + 1060000*r(107,Kut,3) =G= 0 ; (LHS = 0)
     
prod_starved(Kot,1)..  - s(Kot,1) + 10000*r(2,Kot,1) + 20000*r(3,Kot,1) + 30000*r(4,Kot,1) + 40000*r(5,Kot,1) + 50000*r(6,Kot,1) + 60000*r(7,Kot,1) + 70000*r(8,Kot,1) + 80000*r(9,Kot,1) + 90000*r(10,Kot,1) + 100000*r(11,Kot,1) + 110000*r(12,Kot,1)
     
      + 120000*r(13,Kot,1) + 130000*r(14,Kot,1) + 140000*r(15,Kot,1) + 150000*r(16,Kot,1) + 160000*r(17,Kot,1) + 170000*r(18,Kot,1) + 180000*r(19,Kot,1) + 190000*r(20,Kot,1) + 200000*r(21,Kot,1) + 210000*r(22,Kot,1) + 220000*r(23,Kot,1)
     
      + 230000*r(24,Kot,1) + 240000*r(25,Kot,1) + 250000*r(26,Kot,1) + 260000*r(27,Kot,1) + 270000*r(28,Kot,1) + 280000*r(29,Kot,1) + 290000*r(30,Kot,1) + 300000*r(31,Kot,1) + 310000*r(32,Kot,1) + 320000*r(33,Kot,1) + 330000*r(34,Kot,1)
     
      + 340000*r(35,Kot,1) + 350000*r(36,Kot,1) + 360000*r(37,Kot,1) + 370000*r(38,Kot,1) + 380000*r(39,Kot,1) + 390000*r(40,Kot,1) + 400000*r(41,Kot,1) + 410000*r(42,Kot,1) + 420000*r(43,Kot,1) + 430000*r(44,Kot,1) + 440000*r(45,Kot,1)
     
      + 450000*r(46,Kot,1) + 460000*r(47,Kot,1) + 470000*r(48,Kot,1) + 480000*r(49,Kot,1) + 490000*r(50,Kot,1) + 500000*r(51,Kot,1) + 510000*r(52,Kot,1) + 520000*r(53,Kot,1) + 530000*r(54,Kot,1) + 540000*r(55,Kot,1) + 550000*r(56,Kot,1)
     
      + 560000*r(57,Kot,1) + 570000*r(58,Kot,1) + 580000*r(59,Kot,1) + 590000*r(60,Kot,1) + 600000*r(61,Kot,1) + 610000*r(62,Kot,1) + 620000*r(63,Kot,1) + 630000*r(64,Kot,1) + 640000*r(65,Kot,1) + 650000*r(66,Kot,1) + 660000*r(67,Kot,1)
     
      + 670000*r(68,Kot,1) + 680000*r(69,Kot,1) + 690000*r(70,Kot,1) + 700000*r(71,Kot,1) + 710000*r(72,Kot,1) + 720000*r(73,Kot,1) + 730000*r(74,Kot,1) + 740000*r(75,Kot,1) + 750000*r(76,Kot,1) + 760000*r(77,Kot,1) + 770000*r(78,Kot,1)
     
      + 780000*r(79,Kot,1) + 790000*r(80,Kot,1) + 800000*r(81,Kot,1) + 810000*r(82,Kot,1) + 820000*r(83,Kot,1) + 830000*r(84,Kot,1) + 840000*r(85,Kot,1) + 850000*r(86,Kot,1) + 860000*r(87,Kot,1) + 870000*r(88,Kot,1) + 880000*r(89,Kot,1)
     
      + 890000*r(90,Kot,1) + 900000*r(91,Kot,1) + 910000*r(92,Kot,1) + 920000*r(93,Kot,1) + 930000*r(94,Kot,1) + 940000*r(95,Kot,1) + 950000*r(96,Kot,1) + 960000*r(97,Kot,1) + 970000*r(98,Kot,1) + 980000*r(99,Kot,1) + 990000*r(100,Kot,1)
     
      + 1000000*r(101,Kot,1) + 1010000*r(102,Kot,1) + 1020000*r(103,Kot,1) + 1030000*r(104,Kot,1) + 1040000*r(105,Kot,1) + 1050000*r(106,Kot,1) + 1060000*r(107,Kot,1) =G= 0 ; (LHS = 0)
     
prod_starved(Kot,2)..  - s(Kot,2) + 10000*r(2,Kot,2) + 20000*r(3,Kot,2) + 30000*r(4,Kot,2) + 40000*r(5,Kot,2) + 50000*r(6,Kot,2) + 60000*r(7,Kot,2) + 70000*r(8,Kot,2) + 80000*r(9,Kot,2) + 90000*r(10,Kot,2) + 100000*r(11,Kot,2) + 110000*r(12,Kot,2)
     
      + 120000*r(13,Kot,2) + 130000*r(14,Kot,2) + 140000*r(15,Kot,2) + 150000*r(16,Kot,2) + 160000*r(17,Kot,2) + 170000*r(18,Kot,2) + 180000*r(19,Kot,2) + 190000*r(20,Kot,2) + 200000*r(21,Kot,2) + 210000*r(22,Kot,2) + 220000*r(23,Kot,2)
     
      + 230000*r(24,Kot,2) + 240000*r(25,Kot,2) + 250000*r(26,Kot,2) + 260000*r(27,Kot,2) + 270000*r(28,Kot,2) + 280000*r(29,Kot,2) + 290000*r(30,Kot,2) + 300000*r(31,Kot,2) + 310000*r(32,Kot,2) + 320000*r(33,Kot,2) + 330000*r(34,Kot,2)
     
      + 340000*r(35,Kot,2) + 350000*r(36,Kot,2) + 360000*r(37,Kot,2) + 370000*r(38,Kot,2) + 380000*r(39,Kot,2) + 390000*r(40,Kot,2) + 400000*r(41,Kot,2) + 410000*r(42,Kot,2) + 420000*r(43,Kot,2) + 430000*r(44,Kot,2) + 440000*r(45,Kot,2)
     
      + 450000*r(46,Kot,2) + 460000*r(47,Kot,2) + 470000*r(48,Kot,2) + 480000*r(49,Kot,2) + 490000*r(50,Kot,2) + 500000*r(51,Kot,2) + 510000*r(52,Kot,2) + 520000*r(53,Kot,2) + 530000*r(54,Kot,2) + 540000*r(55,Kot,2) + 550000*r(56,Kot,2)
     
      + 560000*r(57,Kot,2) + 570000*r(58,Kot,2) + 580000*r(59,Kot,2) + 590000*r(60,Kot,2) + 600000*r(61,Kot,2) + 610000*r(62,Kot,2) + 620000*r(63,Kot,2) + 630000*r(64,Kot,2) + 640000*r(65,Kot,2) + 650000*r(66,Kot,2) + 660000*r(67,Kot,2)
     
      + 670000*r(68,Kot,2) + 680000*r(69,Kot,2) + 690000*r(70,Kot,2) + 700000*r(71,Kot,2) + 710000*r(72,Kot,2) + 720000*r(73,Kot,2) + 730000*r(74,Kot,2) + 740000*r(75,Kot,2) + 750000*r(76,Kot,2) + 760000*r(77,Kot,2) + 770000*r(78,Kot,2)
     
      + 780000*r(79,Kot,2) + 790000*r(80,Kot,2) + 800000*r(81,Kot,2) + 810000*r(82,Kot,2) + 820000*r(83,Kot,2) + 830000*r(84,Kot,2) + 840000*r(85,Kot,2) + 850000*r(86,Kot,2) + 860000*r(87,Kot,2) + 870000*r(88,Kot,2) + 880000*r(89,Kot,2)
     
      + 890000*r(90,Kot,2) + 900000*r(91,Kot,2) + 910000*r(92,Kot,2) + 920000*r(93,Kot,2) + 930000*r(94,Kot,2) + 940000*r(95,Kot,2) + 950000*r(96,Kot,2) + 960000*r(97,Kot,2) + 970000*r(98,Kot,2) + 980000*r(99,Kot,2) + 990000*r(100,Kot,2)
     
      + 1000000*r(101,Kot,2) + 1010000*r(102,Kot,2) + 1020000*r(103,Kot,2) + 1030000*r(104,Kot,2) + 1040000*r(105,Kot,2) + 1050000*r(106,Kot,2) + 1060000*r(107,Kot,2) =G= 0 ; (LHS = 0)
     
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 23:25:38 Page 14
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 433


     prod_starved  =G=  ensure that production can not be starved in each year

prod_starved(Kot,3)..  - s(Kot,3) + 10000*r(2,Kot,3) + 20000*r(3,Kot,3) + 30000*r(4,Kot,3) + 40000*r(5,Kot,3) + 50000*r(6,Kot,3) + 60000*r(7,Kot,3) + 70000*r(8,Kot,3) + 80000*r(9,Kot,3) + 90000*r(10,Kot,3) + 100000*r(11,Kot,3) + 110000*r(12,Kot,3)
     
      + 120000*r(13,Kot,3) + 130000*r(14,Kot,3) + 140000*r(15,Kot,3) + 150000*r(16,Kot,3) + 160000*r(17,Kot,3) + 170000*r(18,Kot,3) + 180000*r(19,Kot,3) + 190000*r(20,Kot,3) + 200000*r(21,Kot,3) + 210000*r(22,Kot,3) + 220000*r(23,Kot,3)
     
      + 230000*r(24,Kot,3) + 240000*r(25,Kot,3) + 250000*r(26,Kot,3) + 260000*r(27,Kot,3) + 270000*r(28,Kot,3) + 280000*r(29,Kot,3) + 290000*r(30,Kot,3) + 300000*r(31,Kot,3) + 310000*r(32,Kot,3) + 320000*r(33,Kot,3) + 330000*r(34,Kot,3)
     
      + 340000*r(35,Kot,3) + 350000*r(36,Kot,3) + 360000*r(37,Kot,3) + 370000*r(38,Kot,3) + 380000*r(39,Kot,3) + 390000*r(40,Kot,3) + 400000*r(41,Kot,3) + 410000*r(42,Kot,3) + 420000*r(43,Kot,3) + 430000*r(44,Kot,3) + 440000*r(45,Kot,3)
     
      + 450000*r(46,Kot,3) + 460000*r(47,Kot,3) + 470000*r(48,Kot,3) + 480000*r(49,Kot,3) + 490000*r(50,Kot,3) + 500000*r(51,Kot,3) + 510000*r(52,Kot,3) + 520000*r(53,Kot,3) + 530000*r(54,Kot,3) + 540000*r(55,Kot,3) + 550000*r(56,Kot,3)
     
      + 560000*r(57,Kot,3) + 570000*r(58,Kot,3) + 580000*r(59,Kot,3) + 590000*r(60,Kot,3) + 600000*r(61,Kot,3) + 610000*r(62,Kot,3) + 620000*r(63,Kot,3) + 630000*r(64,Kot,3) + 640000*r(65,Kot,3) + 650000*r(66,Kot,3) + 660000*r(67,Kot,3)
     
      + 670000*r(68,Kot,3) + 680000*r(69,Kot,3) + 690000*r(70,Kot,3) + 700000*r(71,Kot,3) + 710000*r(72,Kot,3) + 720000*r(73,Kot,3) + 730000*r(74,Kot,3) + 740000*r(75,Kot,3) + 750000*r(76,Kot,3) + 760000*r(77,Kot,3) + 770000*r(78,Kot,3)
     
      + 780000*r(79,Kot,3) + 790000*r(80,Kot,3) + 800000*r(81,Kot,3) + 810000*r(82,Kot,3) + 820000*r(83,Kot,3) + 830000*r(84,Kot,3) + 840000*r(85,Kot,3) + 850000*r(86,Kot,3) + 860000*r(87,Kot,3) + 870000*r(88,Kot,3) + 880000*r(89,Kot,3)
     
      + 890000*r(90,Kot,3) + 900000*r(91,Kot,3) + 910000*r(92,Kot,3) + 920000*r(93,Kot,3) + 930000*r(94,Kot,3) + 940000*r(95,Kot,3) + 950000*r(96,Kot,3) + 960000*r(97,Kot,3) + 970000*r(98,Kot,3) + 980000*r(99,Kot,3) + 990000*r(100,Kot,3)
     
      + 1000000*r(101,Kot,3) + 1010000*r(102,Kot,3) + 1020000*r(103,Kot,3) + 1030000*r(104,Kot,3) + 1040000*r(105,Kot,3) + 1050000*r(106,Kot,3) + 1060000*r(107,Kot,3) =G= 0 ; (LHS = 0)
     
prod_starved(Mak,1)..  - s(Mak,1) + 10000*r(2,Mak,1) + 20000*r(3,Mak,1) + 30000*r(4,Mak,1) + 40000*r(5,Mak,1) + 50000*r(6,Mak,1) + 60000*r(7,Mak,1) + 70000*r(8,Mak,1) + 80000*r(9,Mak,1) + 90000*r(10,Mak,1) + 100000*r(11,Mak,1) + 110000*r(12,Mak,1)
     
      + 120000*r(13,Mak,1) + 130000*r(14,Mak,1) + 140000*r(15,Mak,1) + 150000*r(16,Mak,1) + 160000*r(17,Mak,1) + 170000*r(18,Mak,1) + 180000*r(19,Mak,1) + 190000*r(20,Mak,1) + 200000*r(21,Mak,1) + 210000*r(22,Mak,1) + 220000*r(23,Mak,1)
     
      + 230000*r(24,Mak,1) + 240000*r(25,Mak,1) + 250000*r(26,Mak,1) + 260000*r(27,Mak,1) + 270000*r(28,Mak,1) + 280000*r(29,Mak,1) + 290000*r(30,Mak,1) + 300000*r(31,Mak,1) + 310000*r(32,Mak,1) + 320000*r(33,Mak,1) + 330000*r(34,Mak,1)
     
      + 340000*r(35,Mak,1) + 350000*r(36,Mak,1) + 360000*r(37,Mak,1) + 370000*r(38,Mak,1) + 380000*r(39,Mak,1) + 390000*r(40,Mak,1) + 400000*r(41,Mak,1) + 410000*r(42,Mak,1) + 420000*r(43,Mak,1) + 430000*r(44,Mak,1) + 440000*r(45,Mak,1)
     
      + 450000*r(46,Mak,1) + 460000*r(47,Mak,1) + 470000*r(48,Mak,1) + 480000*r(49,Mak,1) + 490000*r(50,Mak,1) + 500000*r(51,Mak,1) + 510000*r(52,Mak,1) + 520000*r(53,Mak,1) + 530000*r(54,Mak,1) + 540000*r(55,Mak,1) + 550000*r(56,Mak,1)
     
      + 560000*r(57,Mak,1) + 570000*r(58,Mak,1) + 580000*r(59,Mak,1) + 590000*r(60,Mak,1) + 600000*r(61,Mak,1) + 610000*r(62,Mak,1) + 620000*r(63,Mak,1) + 630000*r(64,Mak,1) + 640000*r(65,Mak,1) + 650000*r(66,Mak,1) + 660000*r(67,Mak,1)
     
      + 670000*r(68,Mak,1) + 680000*r(69,Mak,1) + 690000*r(70,Mak,1) + 700000*r(71,Mak,1) + 710000*r(72,Mak,1) + 720000*r(73,Mak,1) + 730000*r(74,Mak,1) + 740000*r(75,Mak,1) + 750000*r(76,Mak,1) + 760000*r(77,Mak,1) + 770000*r(78,Mak,1)
     
      + 780000*r(79,Mak,1) + 790000*r(80,Mak,1) + 800000*r(81,Mak,1) + 810000*r(82,Mak,1) + 820000*r(83,Mak,1) + 830000*r(84,Mak,1) + 840000*r(85,Mak,1) + 850000*r(86,Mak,1) + 860000*r(87,Mak,1) + 870000*r(88,Mak,1) + 880000*r(89,Mak,1)
     
      + 890000*r(90,Mak,1) + 900000*r(91,Mak,1) + 910000*r(92,Mak,1) + 920000*r(93,Mak,1) + 930000*r(94,Mak,1) + 940000*r(95,Mak,1) + 950000*r(96,Mak,1) + 960000*r(97,Mak,1) + 970000*r(98,Mak,1) + 980000*r(99,Mak,1) + 990000*r(100,Mak,1)
     
      + 1000000*r(101,Mak,1) + 1010000*r(102,Mak,1) + 1020000*r(103,Mak,1) + 1030000*r(104,Mak,1) + 1040000*r(105,Mak,1) + 1050000*r(106,Mak,1) + 1060000*r(107,Mak,1) =G= 0 ; (LHS = 0)
     
prod_starved(Mak,2)..  - s(Mak,2) + 10000*r(2,Mak,2) + 20000*r(3,Mak,2) + 30000*r(4,Mak,2) + 40000*r(5,Mak,2) + 50000*r(6,Mak,2) + 60000*r(7,Mak,2) + 70000*r(8,Mak,2) + 80000*r(9,Mak,2) + 90000*r(10,Mak,2) + 100000*r(11,Mak,2) + 110000*r(12,Mak,2)
     
      + 120000*r(13,Mak,2) + 130000*r(14,Mak,2) + 140000*r(15,Mak,2) + 150000*r(16,Mak,2) + 160000*r(17,Mak,2) + 170000*r(18,Mak,2) + 180000*r(19,Mak,2) + 190000*r(20,Mak,2) + 200000*r(21,Mak,2) + 210000*r(22,Mak,2) + 220000*r(23,Mak,2)
     
      + 230000*r(24,Mak,2) + 240000*r(25,Mak,2) + 250000*r(26,Mak,2) + 260000*r(27,Mak,2) + 270000*r(28,Mak,2) + 280000*r(29,Mak,2) + 290000*r(30,Mak,2) + 300000*r(31,Mak,2) + 310000*r(32,Mak,2) + 320000*r(33,Mak,2) + 330000*r(34,Mak,2)
     
      + 340000*r(35,Mak,2) + 350000*r(36,Mak,2) + 360000*r(37,Mak,2) + 370000*r(38,Mak,2) + 380000*r(39,Mak,2) + 390000*r(40,Mak,2) + 400000*r(41,Mak,2) + 410000*r(42,Mak,2) + 420000*r(43,Mak,2) + 430000*r(44,Mak,2) + 440000*r(45,Mak,2)
     
      + 450000*r(46,Mak,2) + 460000*r(47,Mak,2) + 470000*r(48,Mak,2) + 480000*r(49,Mak,2) + 490000*r(50,Mak,2) + 500000*r(51,Mak,2) + 510000*r(52,Mak,2) + 520000*r(53,Mak,2) + 530000*r(54,Mak,2) + 540000*r(55,Mak,2) + 550000*r(56,Mak,2)
     
      + 560000*r(57,Mak,2) + 570000*r(58,Mak,2) + 580000*r(59,Mak,2) + 590000*r(60,Mak,2) + 600000*r(61,Mak,2) + 610000*r(62,Mak,2) + 620000*r(63,Mak,2) + 630000*r(64,Mak,2) + 640000*r(65,Mak,2) + 650000*r(66,Mak,2) + 660000*r(67,Mak,2)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 23:25:38 Page 15
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 433


     prod_starved  =G=  ensure that production can not be starved in each year     
     
      + 670000*r(68,Mak,2) + 680000*r(69,Mak,2) + 690000*r(70,Mak,2) + 700000*r(71,Mak,2) + 710000*r(72,Mak,2) + 720000*r(73,Mak,2) + 730000*r(74,Mak,2) + 740000*r(75,Mak,2) + 750000*r(76,Mak,2) + 760000*r(77,Mak,2) + 770000*r(78,Mak,2)
     
      + 780000*r(79,Mak,2) + 790000*r(80,Mak,2) + 800000*r(81,Mak,2) + 810000*r(82,Mak,2) + 820000*r(83,Mak,2) + 830000*r(84,Mak,2) + 840000*r(85,Mak,2) + 850000*r(86,Mak,2) + 860000*r(87,Mak,2) + 870000*r(88,Mak,2) + 880000*r(89,Mak,2)
     
      + 890000*r(90,Mak,2) + 900000*r(91,Mak,2) + 910000*r(92,Mak,2) + 920000*r(93,Mak,2) + 930000*r(94,Mak,2) + 940000*r(95,Mak,2) + 950000*r(96,Mak,2) + 960000*r(97,Mak,2) + 970000*r(98,Mak,2) + 980000*r(99,Mak,2) + 990000*r(100,Mak,2)
     
      + 1000000*r(101,Mak,2) + 1010000*r(102,Mak,2) + 1020000*r(103,Mak,2) + 1030000*r(104,Mak,2) + 1040000*r(105,Mak,2) + 1050000*r(106,Mak,2) + 1060000*r(107,Mak,2) =G= 0 ; (LHS = 0)
     
prod_starved(Mak,3)..  - s(Mak,3) + 10000*r(2,Mak,3) + 20000*r(3,Mak,3) + 30000*r(4,Mak,3) + 40000*r(5,Mak,3) + 50000*r(6,Mak,3) + 60000*r(7,Mak,3) + 70000*r(8,Mak,3) + 80000*r(9,Mak,3) + 90000*r(10,Mak,3) + 100000*r(11,Mak,3) + 110000*r(12,Mak,3)
     
      + 120000*r(13,Mak,3) + 130000*r(14,Mak,3) + 140000*r(15,Mak,3) + 150000*r(16,Mak,3) + 160000*r(17,Mak,3) + 170000*r(18,Mak,3) + 180000*r(19,Mak,3) + 190000*r(20,Mak,3) + 200000*r(21,Mak,3) + 210000*r(22,Mak,3) + 220000*r(23,Mak,3)
     
      + 230000*r(24,Mak,3) + 240000*r(25,Mak,3) + 250000*r(26,Mak,3) + 260000*r(27,Mak,3) + 270000*r(28,Mak,3) + 280000*r(29,Mak,3) + 290000*r(30,Mak,3) + 300000*r(31,Mak,3) + 310000*r(32,Mak,3) + 320000*r(33,Mak,3) + 330000*r(34,Mak,3)
     
      + 340000*r(35,Mak,3) + 350000*r(36,Mak,3) + 360000*r(37,Mak,3) + 370000*r(38,Mak,3) + 380000*r(39,Mak,3) + 390000*r(40,Mak,3) + 400000*r(41,Mak,3) + 410000*r(42,Mak,3) + 420000*r(43,Mak,3) + 430000*r(44,Mak,3) + 440000*r(45,Mak,3)
     
      + 450000*r(46,Mak,3) + 460000*r(47,Mak,3) + 470000*r(48,Mak,3) + 480000*r(49,Mak,3) + 490000*r(50,Mak,3) + 500000*r(51,Mak,3) + 510000*r(52,Mak,3) + 520000*r(53,Mak,3) + 530000*r(54,Mak,3) + 540000*r(55,Mak,3) + 550000*r(56,Mak,3)
     
      + 560000*r(57,Mak,3) + 570000*r(58,Mak,3) + 580000*r(59,Mak,3) + 590000*r(60,Mak,3) + 600000*r(61,Mak,3) + 610000*r(62,Mak,3) + 620000*r(63,Mak,3) + 630000*r(64,Mak,3) + 640000*r(65,Mak,3) + 650000*r(66,Mak,3) + 660000*r(67,Mak,3)
     
      + 670000*r(68,Mak,3) + 680000*r(69,Mak,3) + 690000*r(70,Mak,3) + 700000*r(71,Mak,3) + 710000*r(72,Mak,3) + 720000*r(73,Mak,3) + 730000*r(74,Mak,3) + 740000*r(75,Mak,3) + 750000*r(76,Mak,3) + 760000*r(77,Mak,3) + 770000*r(78,Mak,3)
     
      + 780000*r(79,Mak,3) + 790000*r(80,Mak,3) + 800000*r(81,Mak,3) + 810000*r(82,Mak,3) + 820000*r(83,Mak,3) + 830000*r(84,Mak,3) + 840000*r(85,Mak,3) + 850000*r(86,Mak,3) + 860000*r(87,Mak,3) + 870000*r(88,Mak,3) + 880000*r(89,Mak,3)
     
      + 890000*r(90,Mak,3) + 900000*r(91,Mak,3) + 910000*r(92,Mak,3) + 920000*r(93,Mak,3) + 930000*r(94,Mak,3) + 940000*r(95,Mak,3) + 950000*r(96,Mak,3) + 960000*r(97,Mak,3) + 970000*r(98,Mak,3) + 980000*r(99,Mak,3) + 990000*r(100,Mak,3)
     
      + 1000000*r(101,Mak,3) + 1010000*r(102,Mak,3) + 1020000*r(103,Mak,3) + 1030000*r(104,Mak,3) + 1040000*r(105,Mak,3) + 1050000*r(106,Mak,3) + 1060000*r(107,Mak,3) =G= 0 ; (LHS = 0)
     
prod_starved(Kuk,1)..  - s(Kuk,1) + 10000*r(2,Kuk,1) + 20000*r(3,Kuk,1) + 30000*r(4,Kuk,1) + 40000*r(5,Kuk,1) + 50000*r(6,Kuk,1) + 60000*r(7,Kuk,1) + 70000*r(8,Kuk,1) + 80000*r(9,Kuk,1) + 90000*r(10,Kuk,1) + 100000*r(11,Kuk,1) + 110000*r(12,Kuk,1)
     
      + 120000*r(13,Kuk,1) + 130000*r(14,Kuk,1) + 140000*r(15,Kuk,1) + 150000*r(16,Kuk,1) + 160000*r(17,Kuk,1) + 170000*r(18,Kuk,1) + 180000*r(19,Kuk,1) + 190000*r(20,Kuk,1) + 200000*r(21,Kuk,1) + 210000*r(22,Kuk,1) + 220000*r(23,Kuk,1)
     
      + 230000*r(24,Kuk,1) + 240000*r(25,Kuk,1) + 250000*r(26,Kuk,1) + 260000*r(27,Kuk,1) + 270000*r(28,Kuk,1) + 280000*r(29,Kuk,1) + 290000*r(30,Kuk,1) + 300000*r(31,Kuk,1) + 310000*r(32,Kuk,1) + 320000*r(33,Kuk,1) + 330000*r(34,Kuk,1)
     
      + 340000*r(35,Kuk,1) + 350000*r(36,Kuk,1) + 360000*r(37,Kuk,1) + 370000*r(38,Kuk,1) + 380000*r(39,Kuk,1) + 390000*r(40,Kuk,1) + 400000*r(41,Kuk,1) + 410000*r(42,Kuk,1) + 420000*r(43,Kuk,1) + 430000*r(44,Kuk,1) + 440000*r(45,Kuk,1)
     
      + 450000*r(46,Kuk,1) + 460000*r(47,Kuk,1) + 470000*r(48,Kuk,1) + 480000*r(49,Kuk,1) + 490000*r(50,Kuk,1) + 500000*r(51,Kuk,1) + 510000*r(52,Kuk,1) + 520000*r(53,Kuk,1) + 530000*r(54,Kuk,1) + 540000*r(55,Kuk,1) + 550000*r(56,Kuk,1)
     
      + 560000*r(57,Kuk,1) + 570000*r(58,Kuk,1) + 580000*r(59,Kuk,1) + 590000*r(60,Kuk,1) + 600000*r(61,Kuk,1) + 610000*r(62,Kuk,1) + 620000*r(63,Kuk,1) + 630000*r(64,Kuk,1) + 640000*r(65,Kuk,1) + 650000*r(66,Kuk,1) + 660000*r(67,Kuk,1)
     
      + 670000*r(68,Kuk,1) + 680000*r(69,Kuk,1) + 690000*r(70,Kuk,1) + 700000*r(71,Kuk,1) + 710000*r(72,Kuk,1) + 720000*r(73,Kuk,1) + 730000*r(74,Kuk,1) + 740000*r(75,Kuk,1) + 750000*r(76,Kuk,1) + 760000*r(77,Kuk,1) + 770000*r(78,Kuk,1)
     
      + 780000*r(79,Kuk,1) + 790000*r(80,Kuk,1) + 800000*r(81,Kuk,1) + 810000*r(82,Kuk,1) + 820000*r(83,Kuk,1) + 830000*r(84,Kuk,1) + 840000*r(85,Kuk,1) + 850000*r(86,Kuk,1) + 860000*r(87,Kuk,1) + 870000*r(88,Kuk,1) + 880000*r(89,Kuk,1)
     
      + 890000*r(90,Kuk,1) + 900000*r(91,Kuk,1) + 910000*r(92,Kuk,1) + 920000*r(93,Kuk,1) + 930000*r(94,Kuk,1) + 940000*r(95,Kuk,1) + 950000*r(96,Kuk,1) + 960000*r(97,Kuk,1) + 970000*r(98,Kuk,1) + 980000*r(99,Kuk,1) + 990000*r(100,Kuk,1)
     
      + 1000000*r(101,Kuk,1) + 1010000*r(102,Kuk,1) + 1020000*r(103,Kuk,1) + 1030000*r(104,Kuk,1) + 1040000*r(105,Kuk,1) + 1050000*r(106,Kuk,1) + 1060000*r(107,Kuk,1) =G= 0 ; (LHS = 0)
     
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 23:25:38 Page 16
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 433


     prod_starved  =G=  ensure that production can not be starved in each year

prod_starved(Kuk,2)..  - s(Kuk,2) + 10000*r(2,Kuk,2) + 20000*r(3,Kuk,2) + 30000*r(4,Kuk,2) + 40000*r(5,Kuk,2) + 50000*r(6,Kuk,2) + 60000*r(7,Kuk,2) + 70000*r(8,Kuk,2) + 80000*r(9,Kuk,2) + 90000*r(10,Kuk,2) + 100000*r(11,Kuk,2) + 110000*r(12,Kuk,2)
     
      + 120000*r(13,Kuk,2) + 130000*r(14,Kuk,2) + 140000*r(15,Kuk,2) + 150000*r(16,Kuk,2) + 160000*r(17,Kuk,2) + 170000*r(18,Kuk,2) + 180000*r(19,Kuk,2) + 190000*r(20,Kuk,2) + 200000*r(21,Kuk,2) + 210000*r(22,Kuk,2) + 220000*r(23,Kuk,2)
     
      + 230000*r(24,Kuk,2) + 240000*r(25,Kuk,2) + 250000*r(26,Kuk,2) + 260000*r(27,Kuk,2) + 270000*r(28,Kuk,2) + 280000*r(29,Kuk,2) + 290000*r(30,Kuk,2) + 300000*r(31,Kuk,2) + 310000*r(32,Kuk,2) + 320000*r(33,Kuk,2) + 330000*r(34,Kuk,2)
     
      + 340000*r(35,Kuk,2) + 350000*r(36,Kuk,2) + 360000*r(37,Kuk,2) + 370000*r(38,Kuk,2) + 380000*r(39,Kuk,2) + 390000*r(40,Kuk,2) + 400000*r(41,Kuk,2) + 410000*r(42,Kuk,2) + 420000*r(43,Kuk,2) + 430000*r(44,Kuk,2) + 440000*r(45,Kuk,2)
     
      + 450000*r(46,Kuk,2) + 460000*r(47,Kuk,2) + 470000*r(48,Kuk,2) + 480000*r(49,Kuk,2) + 490000*r(50,Kuk,2) + 500000*r(51,Kuk,2) + 510000*r(52,Kuk,2) + 520000*r(53,Kuk,2) + 530000*r(54,Kuk,2) + 540000*r(55,Kuk,2) + 550000*r(56,Kuk,2)
     
      + 560000*r(57,Kuk,2) + 570000*r(58,Kuk,2) + 580000*r(59,Kuk,2) + 590000*r(60,Kuk,2) + 600000*r(61,Kuk,2) + 610000*r(62,Kuk,2) + 620000*r(63,Kuk,2) + 630000*r(64,Kuk,2) + 640000*r(65,Kuk,2) + 650000*r(66,Kuk,2) + 660000*r(67,Kuk,2)
     
      + 670000*r(68,Kuk,2) + 680000*r(69,Kuk,2) + 690000*r(70,Kuk,2) + 700000*r(71,Kuk,2) + 710000*r(72,Kuk,2) + 720000*r(73,Kuk,2) + 730000*r(74,Kuk,2) + 740000*r(75,Kuk,2) + 750000*r(76,Kuk,2) + 760000*r(77,Kuk,2) + 770000*r(78,Kuk,2)
     
      + 780000*r(79,Kuk,2) + 790000*r(80,Kuk,2) + 800000*r(81,Kuk,2) + 810000*r(82,Kuk,2) + 820000*r(83,Kuk,2) + 830000*r(84,Kuk,2) + 840000*r(85,Kuk,2) + 850000*r(86,Kuk,2) + 860000*r(87,Kuk,2) + 870000*r(88,Kuk,2) + 880000*r(89,Kuk,2)
     
      + 890000*r(90,Kuk,2) + 900000*r(91,Kuk,2) + 910000*r(92,Kuk,2) + 920000*r(93,Kuk,2) + 930000*r(94,Kuk,2) + 940000*r(95,Kuk,2) + 950000*r(96,Kuk,2) + 960000*r(97,Kuk,2) + 970000*r(98,Kuk,2) + 980000*r(99,Kuk,2) + 990000*r(100,Kuk,2)
     
      + 1000000*r(101,Kuk,2) + 1010000*r(102,Kuk,2) + 1020000*r(103,Kuk,2) + 1030000*r(104,Kuk,2) + 1040000*r(105,Kuk,2) + 1050000*r(106,Kuk,2) + 1060000*r(107,Kuk,2) =G= 0 ; (LHS = 0)
     
prod_starved(Kuk,3)..  - s(Kuk,3) + 10000*r(2,Kuk,3) + 20000*r(3,Kuk,3) + 30000*r(4,Kuk,3) + 40000*r(5,Kuk,3) + 50000*r(6,Kuk,3) + 60000*r(7,Kuk,3) + 70000*r(8,Kuk,3) + 80000*r(9,Kuk,3) + 90000*r(10,Kuk,3) + 100000*r(11,Kuk,3) + 110000*r(12,Kuk,3)
     
      + 120000*r(13,Kuk,3) + 130000*r(14,Kuk,3) + 140000*r(15,Kuk,3) + 150000*r(16,Kuk,3) + 160000*r(17,Kuk,3) + 170000*r(18,Kuk,3) + 180000*r(19,Kuk,3) + 190000*r(20,Kuk,3) + 200000*r(21,Kuk,3) + 210000*r(22,Kuk,3) + 220000*r(23,Kuk,3)
     
      + 230000*r(24,Kuk,3) + 240000*r(25,Kuk,3) + 250000*r(26,Kuk,3) + 260000*r(27,Kuk,3) + 270000*r(28,Kuk,3) + 280000*r(29,Kuk,3) + 290000*r(30,Kuk,3) + 300000*r(31,Kuk,3) + 310000*r(32,Kuk,3) + 320000*r(33,Kuk,3) + 330000*r(34,Kuk,3)
     
      + 340000*r(35,Kuk,3) + 350000*r(36,Kuk,3) + 360000*r(37,Kuk,3) + 370000*r(38,Kuk,3) + 380000*r(39,Kuk,3) + 390000*r(40,Kuk,3) + 400000*r(41,Kuk,3) + 410000*r(42,Kuk,3) + 420000*r(43,Kuk,3) + 430000*r(44,Kuk,3) + 440000*r(45,Kuk,3)
     
      + 450000*r(46,Kuk,3) + 460000*r(47,Kuk,3) + 470000*r(48,Kuk,3) + 480000*r(49,Kuk,3) + 490000*r(50,Kuk,3) + 500000*r(51,Kuk,3) + 510000*r(52,Kuk,3) + 520000*r(53,Kuk,3) + 530000*r(54,Kuk,3) + 540000*r(55,Kuk,3) + 550000*r(56,Kuk,3)
     
      + 560000*r(57,Kuk,3) + 570000*r(58,Kuk,3) + 580000*r(59,Kuk,3) + 590000*r(60,Kuk,3) + 600000*r(61,Kuk,3) + 610000*r(62,Kuk,3) + 620000*r(63,Kuk,3) + 630000*r(64,Kuk,3) + 640000*r(65,Kuk,3) + 650000*r(66,Kuk,3) + 660000*r(67,Kuk,3)
     
      + 670000*r(68,Kuk,3) + 680000*r(69,Kuk,3) + 690000*r(70,Kuk,3) + 700000*r(71,Kuk,3) + 710000*r(72,Kuk,3) + 720000*r(73,Kuk,3) + 730000*r(74,Kuk,3) + 740000*r(75,Kuk,3) + 750000*r(76,Kuk,3) + 760000*r(77,Kuk,3) + 770000*r(78,Kuk,3)
     
      + 780000*r(79,Kuk,3) + 790000*r(80,Kuk,3) + 800000*r(81,Kuk,3) + 810000*r(82,Kuk,3) + 820000*r(83,Kuk,3) + 830000*r(84,Kuk,3) + 840000*r(85,Kuk,3) + 850000*r(86,Kuk,3) + 860000*r(87,Kuk,3) + 870000*r(88,Kuk,3) + 880000*r(89,Kuk,3)
     
      + 890000*r(90,Kuk,3) + 900000*r(91,Kuk,3) + 910000*r(92,Kuk,3) + 920000*r(93,Kuk,3) + 930000*r(94,Kuk,3) + 940000*r(95,Kuk,3) + 950000*r(96,Kuk,3) + 960000*r(97,Kuk,3) + 970000*r(98,Kuk,3) + 980000*r(99,Kuk,3) + 990000*r(100,Kuk,3)
     
      + 1000000*r(101,Kuk,3) + 1010000*r(102,Kuk,3) + 1020000*r(103,Kuk,3) + 1030000*r(104,Kuk,3) + 1040000*r(105,Kuk,3) + 1050000*r(106,Kuk,3) + 1060000*r(107,Kuk,3) =G= 0 ; (LHS = 0)
     
prod_starved(Kok,1)..  - s(Kok,1) + 10000*r(2,Kok,1) + 20000*r(3,Kok,1) + 30000*r(4,Kok,1) + 40000*r(5,Kok,1) + 50000*r(6,Kok,1) + 60000*r(7,Kok,1) + 70000*r(8,Kok,1) + 80000*r(9,Kok,1) + 90000*r(10,Kok,1) + 100000*r(11,Kok,1) + 110000*r(12,Kok,1)
     
      + 120000*r(13,Kok,1) + 130000*r(14,Kok,1) + 140000*r(15,Kok,1) + 150000*r(16,Kok,1) + 160000*r(17,Kok,1) + 170000*r(18,Kok,1) + 180000*r(19,Kok,1) + 190000*r(20,Kok,1) + 200000*r(21,Kok,1) + 210000*r(22,Kok,1) + 220000*r(23,Kok,1)
     
      + 230000*r(24,Kok,1) + 240000*r(25,Kok,1) + 250000*r(26,Kok,1) + 260000*r(27,Kok,1) + 270000*r(28,Kok,1) + 280000*r(29,Kok,1) + 290000*r(30,Kok,1) + 300000*r(31,Kok,1) + 310000*r(32,Kok,1) + 320000*r(33,Kok,1) + 330000*r(34,Kok,1)
     
      + 340000*r(35,Kok,1) + 350000*r(36,Kok,1) + 360000*r(37,Kok,1) + 370000*r(38,Kok,1) + 380000*r(39,Kok,1) + 390000*r(40,Kok,1) + 400000*r(41,Kok,1) + 410000*r(42,Kok,1) + 420000*r(43,Kok,1) + 430000*r(44,Kok,1) + 440000*r(45,Kok,1)
     
      + 450000*r(46,Kok,1) + 460000*r(47,Kok,1) + 470000*r(48,Kok,1) + 480000*r(49,Kok,1) + 490000*r(50,Kok,1) + 500000*r(51,Kok,1) + 510000*r(52,Kok,1) + 520000*r(53,Kok,1) + 530000*r(54,Kok,1) + 540000*r(55,Kok,1) + 550000*r(56,Kok,1)
     
      + 560000*r(57,Kok,1) + 570000*r(58,Kok,1) + 580000*r(59,Kok,1) + 590000*r(60,Kok,1) + 600000*r(61,Kok,1) + 610000*r(62,Kok,1) + 620000*r(63,Kok,1) + 630000*r(64,Kok,1) + 640000*r(65,Kok,1) + 650000*r(66,Kok,1) + 660000*r(67,Kok,1)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 23:25:38 Page 17
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 433


     prod_starved  =G=  ensure that production can not be starved in each year     
     
      + 670000*r(68,Kok,1) + 680000*r(69,Kok,1) + 690000*r(70,Kok,1) + 700000*r(71,Kok,1) + 710000*r(72,Kok,1) + 720000*r(73,Kok,1) + 730000*r(74,Kok,1) + 740000*r(75,Kok,1) + 750000*r(76,Kok,1) + 760000*r(77,Kok,1) + 770000*r(78,Kok,1)
     
      + 780000*r(79,Kok,1) + 790000*r(80,Kok,1) + 800000*r(81,Kok,1) + 810000*r(82,Kok,1) + 820000*r(83,Kok,1) + 830000*r(84,Kok,1) + 840000*r(85,Kok,1) + 850000*r(86,Kok,1) + 860000*r(87,Kok,1) + 870000*r(88,Kok,1) + 880000*r(89,Kok,1)
     
      + 890000*r(90,Kok,1) + 900000*r(91,Kok,1) + 910000*r(92,Kok,1) + 920000*r(93,Kok,1) + 930000*r(94,Kok,1) + 940000*r(95,Kok,1) + 950000*r(96,Kok,1) + 960000*r(97,Kok,1) + 970000*r(98,Kok,1) + 980000*r(99,Kok,1) + 990000*r(100,Kok,1)
     
      + 1000000*r(101,Kok,1) + 1010000*r(102,Kok,1) + 1020000*r(103,Kok,1) + 1030000*r(104,Kok,1) + 1040000*r(105,Kok,1) + 1050000*r(106,Kok,1) + 1060000*r(107,Kok,1) =G= 0 ; (LHS = 0)
     
prod_starved(Kok,2)..  - s(Kok,2) + 10000*r(2,Kok,2) + 20000*r(3,Kok,2) + 30000*r(4,Kok,2) + 40000*r(5,Kok,2) + 50000*r(6,Kok,2) + 60000*r(7,Kok,2) + 70000*r(8,Kok,2) + 80000*r(9,Kok,2) + 90000*r(10,Kok,2) + 100000*r(11,Kok,2) + 110000*r(12,Kok,2)
     
      + 120000*r(13,Kok,2) + 130000*r(14,Kok,2) + 140000*r(15,Kok,2) + 150000*r(16,Kok,2) + 160000*r(17,Kok,2) + 170000*r(18,Kok,2) + 180000*r(19,Kok,2) + 190000*r(20,Kok,2) + 200000*r(21,Kok,2) + 210000*r(22,Kok,2) + 220000*r(23,Kok,2)
     
      + 230000*r(24,Kok,2) + 240000*r(25,Kok,2) + 250000*r(26,Kok,2) + 260000*r(27,Kok,2) + 270000*r(28,Kok,2) + 280000*r(29,Kok,2) + 290000*r(30,Kok,2) + 300000*r(31,Kok,2) + 310000*r(32,Kok,2) + 320000*r(33,Kok,2) + 330000*r(34,Kok,2)
     
      + 340000*r(35,Kok,2) + 350000*r(36,Kok,2) + 360000*r(37,Kok,2) + 370000*r(38,Kok,2) + 380000*r(39,Kok,2) + 390000*r(40,Kok,2) + 400000*r(41,Kok,2) + 410000*r(42,Kok,2) + 420000*r(43,Kok,2) + 430000*r(44,Kok,2) + 440000*r(45,Kok,2)
     
      + 450000*r(46,Kok,2) + 460000*r(47,Kok,2) + 470000*r(48,Kok,2) + 480000*r(49,Kok,2) + 490000*r(50,Kok,2) + 500000*r(51,Kok,2) + 510000*r(52,Kok,2) + 520000*r(53,Kok,2) + 530000*r(54,Kok,2) + 540000*r(55,Kok,2) + 550000*r(56,Kok,2)
     
      + 560000*r(57,Kok,2) + 570000*r(58,Kok,2) + 580000*r(59,Kok,2) + 590000*r(60,Kok,2) + 600000*r(61,Kok,2) + 610000*r(62,Kok,2) + 620000*r(63,Kok,2) + 630000*r(64,Kok,2) + 640000*r(65,Kok,2) + 650000*r(66,Kok,2) + 660000*r(67,Kok,2)
     
      + 670000*r(68,Kok,2) + 680000*r(69,Kok,2) + 690000*r(70,Kok,2) + 700000*r(71,Kok,2) + 710000*r(72,Kok,2) + 720000*r(73,Kok,2) + 730000*r(74,Kok,2) + 740000*r(75,Kok,2) + 750000*r(76,Kok,2) + 760000*r(77,Kok,2) + 770000*r(78,Kok,2)
     
      + 780000*r(79,Kok,2) + 790000*r(80,Kok,2) + 800000*r(81,Kok,2) + 810000*r(82,Kok,2) + 820000*r(83,Kok,2) + 830000*r(84,Kok,2) + 840000*r(85,Kok,2) + 850000*r(86,Kok,2) + 860000*r(87,Kok,2) + 870000*r(88,Kok,2) + 880000*r(89,Kok,2)
     
      + 890000*r(90,Kok,2) + 900000*r(91,Kok,2) + 910000*r(92,Kok,2) + 920000*r(93,Kok,2) + 930000*r(94,Kok,2) + 940000*r(95,Kok,2) + 950000*r(96,Kok,2) + 960000*r(97,Kok,2) + 970000*r(98,Kok,2) + 980000*r(99,Kok,2) + 990000*r(100,Kok,2)
     
      + 1000000*r(101,Kok,2) + 1010000*r(102,Kok,2) + 1020000*r(103,Kok,2) + 1030000*r(104,Kok,2) + 1040000*r(105,Kok,2) + 1050000*r(106,Kok,2) + 1060000*r(107,Kok,2) =G= 0 ; (LHS = 0)
     
prod_starved(Kok,3)..  - s(Kok,3) + 10000*r(2,Kok,3) + 20000*r(3,Kok,3) + 30000*r(4,Kok,3) + 40000*r(5,Kok,3) + 50000*r(6,Kok,3) + 60000*r(7,Kok,3) + 70000*r(8,Kok,3) + 80000*r(9,Kok,3) + 90000*r(10,Kok,3) + 100000*r(11,Kok,3) + 110000*r(12,Kok,3)
     
      + 120000*r(13,Kok,3) + 130000*r(14,Kok,3) + 140000*r(15,Kok,3) + 150000*r(16,Kok,3) + 160000*r(17,Kok,3) + 170000*r(18,Kok,3) + 180000*r(19,Kok,3) + 190000*r(20,Kok,3) + 200000*r(21,Kok,3) + 210000*r(22,Kok,3) + 220000*r(23,Kok,3)
     
      + 230000*r(24,Kok,3) + 240000*r(25,Kok,3) + 250000*r(26,Kok,3) + 260000*r(27,Kok,3) + 270000*r(28,Kok,3) + 280000*r(29,Kok,3) + 290000*r(30,Kok,3) + 300000*r(31,Kok,3) + 310000*r(32,Kok,3) + 320000*r(33,Kok,3) + 330000*r(34,Kok,3)
     
      + 340000*r(35,Kok,3) + 350000*r(36,Kok,3) + 360000*r(37,Kok,3) + 370000*r(38,Kok,3) + 380000*r(39,Kok,3) + 390000*r(40,Kok,3) + 400000*r(41,Kok,3) + 410000*r(42,Kok,3) + 420000*r(43,Kok,3) + 430000*r(44,Kok,3) + 440000*r(45,Kok,3)
     
      + 450000*r(46,Kok,3) + 460000*r(47,Kok,3) + 470000*r(48,Kok,3) + 480000*r(49,Kok,3) + 490000*r(50,Kok,3) + 500000*r(51,Kok,3) + 510000*r(52,Kok,3) + 520000*r(53,Kok,3) + 530000*r(54,Kok,3) + 540000*r(55,Kok,3) + 550000*r(56,Kok,3)
     
      + 560000*r(57,Kok,3) + 570000*r(58,Kok,3) + 580000*r(59,Kok,3) + 590000*r(60,Kok,3) + 600000*r(61,Kok,3) + 610000*r(62,Kok,3) + 620000*r(63,Kok,3) + 630000*r(64,Kok,3) + 640000*r(65,Kok,3) + 650000*r(66,Kok,3) + 660000*r(67,Kok,3)
     
      + 670000*r(68,Kok,3) + 680000*r(69,Kok,3) + 690000*r(70,Kok,3) + 700000*r(71,Kok,3) + 710000*r(72,Kok,3) + 720000*r(73,Kok,3) + 730000*r(74,Kok,3) + 740000*r(75,Kok,3) + 750000*r(76,Kok,3) + 760000*r(77,Kok,3) + 770000*r(78,Kok,3)
     
      + 780000*r(79,Kok,3) + 790000*r(80,Kok,3) + 800000*r(81,Kok,3) + 810000*r(82,Kok,3) + 820000*r(83,Kok,3) + 830000*r(84,Kok,3) + 840000*r(85,Kok,3) + 850000*r(86,Kok,3) + 860000*r(87,Kok,3) + 870000*r(88,Kok,3) + 880000*r(89,Kok,3)
     
      + 890000*r(90,Kok,3) + 900000*r(91,Kok,3) + 910000*r(92,Kok,3) + 920000*r(93,Kok,3) + 930000*r(94,Kok,3) + 940000*r(95,Kok,3) + 950000*r(96,Kok,3) + 960000*r(97,Kok,3) + 970000*r(98,Kok,3) + 980000*r(99,Kok,3) + 990000*r(100,Kok,3)
     
      + 1000000*r(101,Kok,3) + 1010000*r(102,Kok,3) + 1020000*r(103,Kok,3) + 1030000*r(104,Kok,3) + 1040000*r(105,Kok,3) + 1050000*r(106,Kok,3) + 1060000*r(107,Kok,3) =G= 0 ; (LHS = 0)
     
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 23:25:38 Page 18
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 433


---- Sold_Prod  =L=  we cant sell more than we produce in each year

Sold_Prod(Mas,1)..  - y(Mas,1) + 10000*u(2,Mas,EU,1) + 10000*u(2,Mas,IE,1) + 10000*u(2,Mas,PA,1) + 10000*u(2,Mas,KI,1) + 20000*u(3,Mas,EU,1) + 20000*u(3,Mas,IE,1) + 20000*u(3,Mas,PA,1) + 20000*u(3,Mas,KI,1) + 30000*u(4,Mas,EU,1) + 30000*u(4,Mas,IE,1)
     
      + 30000*u(4,Mas,PA,1) + 30000*u(4,Mas,KI,1) + 40000*u(5,Mas,EU,1) + 40000*u(5,Mas,IE,1) + 40000*u(5,Mas,PA,1) + 40000*u(5,Mas,KI,1) + 50000*u(6,Mas,EU,1) + 50000*u(6,Mas,IE,1) + 50000*u(6,Mas,PA,1) + 50000*u(6,Mas,KI,1) + 60000*u(7,Mas,EU,1)
     
      + 60000*u(7,Mas,IE,1) + 60000*u(7,Mas,PA,1) + 60000*u(7,Mas,KI,1) + 70000*u(8,Mas,EU,1) + 70000*u(8,Mas,IE,1) + 70000*u(8,Mas,PA,1) + 70000*u(8,Mas,KI,1) + 80000*u(9,Mas,EU,1) + 80000*u(9,Mas,IE,1) + 80000*u(9,Mas,PA,1) + 80000*u(9,Mas,KI,1)
     
      + 90000*u(10,Mas,EU,1) + 90000*u(10,Mas,IE,1) + 90000*u(10,Mas,PA,1) + 90000*u(10,Mas,KI,1) + 100000*u(11,Mas,EU,1) + 100000*u(11,Mas,IE,1) + 100000*u(11,Mas,PA,1) + 100000*u(11,Mas,KI,1) + 110000*u(12,Mas,EU,1) + 110000*u(12,Mas,IE,1)
     
      + 110000*u(12,Mas,PA,1) + 110000*u(12,Mas,KI,1) + 120000*u(13,Mas,EU,1) + 120000*u(13,Mas,IE,1) + 120000*u(13,Mas,PA,1) + 120000*u(13,Mas,KI,1) + 130000*u(14,Mas,EU,1) + 130000*u(14,Mas,IE,1) + 130000*u(14,Mas,PA,1) + 130000*u(14,Mas,KI,1)
     
      + 140000*u(15,Mas,EU,1) + 140000*u(15,Mas,IE,1) + 140000*u(15,Mas,PA,1) + 140000*u(15,Mas,KI,1) + 150000*u(16,Mas,EU,1) + 150000*u(16,Mas,IE,1) + 150000*u(16,Mas,PA,1) + 150000*u(16,Mas,KI,1) + 160000*u(17,Mas,EU,1) + 160000*u(17,Mas,IE,1)
     
      + 160000*u(17,Mas,PA,1) + 160000*u(17,Mas,KI,1) + 170000*u(18,Mas,EU,1) + 170000*u(18,Mas,IE,1) + 170000*u(18,Mas,PA,1) + 170000*u(18,Mas,KI,1) + 180000*u(19,Mas,EU,1) + 180000*u(19,Mas,IE,1) + 180000*u(19,Mas,PA,1) + 180000*u(19,Mas,KI,1)
     
      + 190000*u(20,Mas,EU,1) + 190000*u(20,Mas,IE,1) + 190000*u(20,Mas,PA,1) + 190000*u(20,Mas,KI,1) + 200000*u(21,Mas,EU,1) + 200000*u(21,Mas,IE,1) + 200000*u(21,Mas,PA,1) + 200000*u(21,Mas,KI,1) + 210000*u(22,Mas,EU,1) + 210000*u(22,Mas,IE,1)
     
      + 210000*u(22,Mas,PA,1) + 210000*u(22,Mas,KI,1) + 220000*u(23,Mas,EU,1) + 220000*u(23,Mas,IE,1) + 220000*u(23,Mas,PA,1) + 220000*u(23,Mas,KI,1) =L= 0 ; (LHS = 0)
     
Sold_Prod(Mas,2)..  - y(Mas,2) + 10100*u(2,Mas,EU,2) + 10100*u(2,Mas,IE,2) + 10100*u(2,Mas,PA,2) + 10100*u(2,Mas,KI,2) + 20200*u(3,Mas,EU,2) + 20200*u(3,Mas,IE,2) + 20200*u(3,Mas,PA,2) + 20200*u(3,Mas,KI,2) + 30300*u(4,Mas,EU,2) + 30300*u(4,Mas,IE,2)
     
      + 30300*u(4,Mas,PA,2) + 30300*u(4,Mas,KI,2) + 40400*u(5,Mas,EU,2) + 40400*u(5,Mas,IE,2) + 40400*u(5,Mas,PA,2) + 40400*u(5,Mas,KI,2) + 50500*u(6,Mas,EU,2) + 50500*u(6,Mas,IE,2) + 50500*u(6,Mas,PA,2) + 50500*u(6,Mas,KI,2) + 60600*u(7,Mas,EU,2)
     
      + 60600*u(7,Mas,IE,2) + 60600*u(7,Mas,PA,2) + 60600*u(7,Mas,KI,2) + 70700*u(8,Mas,EU,2) + 70700*u(8,Mas,IE,2) + 70700*u(8,Mas,PA,2) + 70700*u(8,Mas,KI,2) + 80800*u(9,Mas,EU,2) + 80800*u(9,Mas,IE,2) + 80800*u(9,Mas,PA,2) + 80800*u(9,Mas,KI,2)
     
      + 90900*u(10,Mas,EU,2) + 90900*u(10,Mas,IE,2) + 90900*u(10,Mas,PA,2) + 90900*u(10,Mas,KI,2) + 101000*u(11,Mas,EU,2) + 101000*u(11,Mas,IE,2) + 101000*u(11,Mas,PA,2) + 101000*u(11,Mas,KI,2) + 111100*u(12,Mas,EU,2) + 111100*u(12,Mas,IE,2)
     
      + 111100*u(12,Mas,PA,2) + 111100*u(12,Mas,KI,2) + 121200*u(13,Mas,EU,2) + 121200*u(13,Mas,IE,2) + 121200*u(13,Mas,PA,2) + 121200*u(13,Mas,KI,2) + 131300*u(14,Mas,EU,2) + 131300*u(14,Mas,IE,2) + 131300*u(14,Mas,PA,2) + 131300*u(14,Mas,KI,2)
     
      + 141400*u(15,Mas,EU,2) + 141400*u(15,Mas,IE,2) + 141400*u(15,Mas,PA,2) + 141400*u(15,Mas,KI,2) + 151500*u(16,Mas,EU,2) + 151500*u(16,Mas,IE,2) + 151500*u(16,Mas,PA,2) + 151500*u(16,Mas,KI,2) + 161600*u(17,Mas,EU,2) + 161600*u(17,Mas,IE,2)
     
      + 161600*u(17,Mas,PA,2) + 161600*u(17,Mas,KI,2) + 171700*u(18,Mas,EU,2) + 171700*u(18,Mas,IE,2) + 171700*u(18,Mas,PA,2) + 171700*u(18,Mas,KI,2) + 181800*u(19,Mas,EU,2) + 181800*u(19,Mas,IE,2) + 181800*u(19,Mas,PA,2) + 181800*u(19,Mas,KI,2)
     
      + 191900*u(20,Mas,EU,2) + 191900*u(20,Mas,IE,2) + 191900*u(20,Mas,PA,2) + 191900*u(20,Mas,KI,2) + 202000*u(21,Mas,EU,2) + 202000*u(21,Mas,IE,2) + 202000*u(21,Mas,PA,2) + 202000*u(21,Mas,KI,2) + 212100*u(22,Mas,EU,2) + 212100*u(22,Mas,IE,2)
     
      + 212100*u(22,Mas,PA,2) + 212100*u(22,Mas,KI,2) + 222200*u(23,Mas,EU,2) + 222200*u(23,Mas,IE,2) + 222200*u(23,Mas,PA,2) + 222200*u(23,Mas,KI,2) =L= 0 ; (LHS = 0)
     
Sold_Prod(Mas,3)..  - y(Mas,3) + 10201*u(2,Mas,EU,3) + 10201*u(2,Mas,IE,3) + 10201*u(2,Mas,PA,3) + 10201*u(2,Mas,KI,3) + 20402*u(3,Mas,EU,3) + 20402*u(3,Mas,IE,3) + 20402*u(3,Mas,PA,3) + 20402*u(3,Mas,KI,3) + 30603*u(4,Mas,EU,3) + 30603*u(4,Mas,IE,3)
     
      + 30603*u(4,Mas,PA,3) + 30603*u(4,Mas,KI,3) + 40804*u(5,Mas,EU,3) + 40804*u(5,Mas,IE,3) + 40804*u(5,Mas,PA,3) + 40804*u(5,Mas,KI,3) + 51005*u(6,Mas,EU,3) + 51005*u(6,Mas,IE,3) + 51005*u(6,Mas,PA,3) + 51005*u(6,Mas,KI,3) + 61206*u(7,Mas,EU,3)
     
      + 61206*u(7,Mas,IE,3) + 61206*u(7,Mas,PA,3) + 61206*u(7,Mas,KI,3) + 71407*u(8,Mas,EU,3) + 71407*u(8,Mas,IE,3) + 71407*u(8,Mas,PA,3) + 71407*u(8,Mas,KI,3) + 81608*u(9,Mas,EU,3) + 81608*u(9,Mas,IE,3) + 81608*u(9,Mas,PA,3) + 81608*u(9,Mas,KI,3)
     
      + 91809*u(10,Mas,EU,3) + 91809*u(10,Mas,IE,3) + 91809*u(10,Mas,PA,3) + 91809*u(10,Mas,KI,3) + 102010*u(11,Mas,EU,3) + 102010*u(11,Mas,IE,3) + 102010*u(11,Mas,PA,3) + 102010*u(11,Mas,KI,3) + 112211*u(12,Mas,EU,3) + 112211*u(12,Mas,IE,3)
     
      + 112211*u(12,Mas,PA,3) + 112211*u(12,Mas,KI,3) + 122412*u(13,Mas,EU,3) + 122412*u(13,Mas,IE,3) + 122412*u(13,Mas,PA,3) + 122412*u(13,Mas,KI,3) + 132613*u(14,Mas,EU,3) + 132613*u(14,Mas,IE,3) + 132613*u(14,Mas,PA,3) + 132613*u(14,Mas,KI,3)
     
      + 142814*u(15,Mas,EU,3) + 142814*u(15,Mas,IE,3) + 142814*u(15,Mas,PA,3) + 142814*u(15,Mas,KI,3) + 153015*u(16,Mas,EU,3) + 153015*u(16,Mas,IE,3) + 153015*u(16,Mas,PA,3) + 153015*u(16,Mas,KI,3) + 163216*u(17,Mas,EU,3) + 163216*u(17,Mas,IE,3)
     
      + 163216*u(17,Mas,PA,3) + 163216*u(17,Mas,KI,3) + 173417*u(18,Mas,EU,3) + 173417*u(18,Mas,IE,3) + 173417*u(18,Mas,PA,3) + 173417*u(18,Mas,KI,3) + 183618*u(19,Mas,EU,3) + 183618*u(19,Mas,IE,3) + 183618*u(19,Mas,PA,3) + 183618*u(19,Mas,KI,3)
     
      + 193819*u(20,Mas,EU,3) + 193819*u(20,Mas,IE,3) + 193819*u(20,Mas,PA,3) + 193819*u(20,Mas,KI,3) + 204020*u(21,Mas,EU,3) + 204020*u(21,Mas,IE,3) + 204020*u(21,Mas,PA,3) + 204020*u(21,Mas,KI,3) + 214221*u(22,Mas,EU,3) + 214221*u(22,Mas,IE,3)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 23:25:38 Page 19
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 433


     Sold_Prod  =L=  we cant sell more than we produce in each year     
     
      + 214221*u(22,Mas,PA,3) + 214221*u(22,Mas,KI,3) + 224422*u(23,Mas,EU,3) + 224422*u(23,Mas,IE,3) + 224422*u(23,Mas,PA,3) + 224422*u(23,Mas,KI,3) =L= 0 ; (LHS = 0)
     
Sold_Prod(Kus,1)..  - y(Kus,1) =L= 0 ; (LHS = 0)
     
Sold_Prod(Kus,2)..  - y(Kus,2) =L= 0 ; (LHS = 0)
     
Sold_Prod(Kus,3)..  - y(Kus,3) =L= 0 ; (LHS = 0)
     
Sold_Prod(Kos,1)..  - y(Kos,1) + 10000*u(2,Kos,EU,1) + 10000*u(2,Kos,IE,1) + 10000*u(2,Kos,PA,1) + 10000*u(2,Kos,KI,1) + 20000*u(3,Kos,EU,1) + 20000*u(3,Kos,IE,1) + 20000*u(3,Kos,PA,1) + 20000*u(3,Kos,KI,1) + 30000*u(4,Kos,EU,1) + 30000*u(4,Kos,IE,1)
     
      + 30000*u(4,Kos,PA,1) + 30000*u(4,Kos,KI,1) + 40000*u(5,Kos,EU,1) + 40000*u(5,Kos,IE,1) + 40000*u(5,Kos,PA,1) + 40000*u(5,Kos,KI,1) + 50000*u(6,Kos,EU,1) + 50000*u(6,Kos,IE,1) + 50000*u(6,Kos,PA,1) + 50000*u(6,Kos,KI,1) + 60000*u(7,Kos,EU,1)
     
      + 60000*u(7,Kos,IE,1) + 60000*u(7,Kos,PA,1) + 60000*u(7,Kos,KI,1) + 70000*u(8,Kos,EU,1) + 70000*u(8,Kos,IE,1) + 70000*u(8,Kos,PA,1) + 70000*u(8,Kos,KI,1) + 80000*u(9,Kos,EU,1) + 80000*u(9,Kos,IE,1) + 80000*u(9,Kos,PA,1) + 80000*u(9,Kos,KI,1)
     
      + 90000*u(10,Kos,EU,1) + 90000*u(10,Kos,IE,1) + 90000*u(10,Kos,PA,1) + 90000*u(10,Kos,KI,1) + 100000*u(11,Kos,EU,1) + 100000*u(11,Kos,IE,1) + 100000*u(11,Kos,PA,1) + 100000*u(11,Kos,KI,1) + 110000*u(12,Kos,EU,1) + 110000*u(12,Kos,IE,1)
     
      + 110000*u(12,Kos,PA,1) + 110000*u(12,Kos,KI,1) + 120000*u(13,Kos,EU,1) + 120000*u(13,Kos,IE,1) + 120000*u(13,Kos,PA,1) + 120000*u(13,Kos,KI,1) + 130000*u(14,Kos,EU,1) + 130000*u(14,Kos,IE,1) + 130000*u(14,Kos,PA,1) + 130000*u(14,Kos,KI,1)
     
      + 140000*u(15,Kos,EU,1) + 140000*u(15,Kos,IE,1) + 140000*u(15,Kos,PA,1) + 140000*u(15,Kos,KI,1) + 150000*u(16,Kos,EU,1) + 150000*u(16,Kos,IE,1) + 150000*u(16,Kos,PA,1) + 150000*u(16,Kos,KI,1) + 160000*u(17,Kos,EU,1) + 160000*u(17,Kos,IE,1)
     
      + 160000*u(17,Kos,PA,1) + 160000*u(17,Kos,KI,1) + 170000*u(18,Kos,EU,1) + 170000*u(18,Kos,IE,1) + 170000*u(18,Kos,PA,1) + 170000*u(18,Kos,KI,1) + 180000*u(19,Kos,EU,1) + 180000*u(19,Kos,IE,1) + 180000*u(19,Kos,PA,1) + 180000*u(19,Kos,KI,1)
     
      + 190000*u(20,Kos,EU,1) + 190000*u(20,Kos,IE,1) + 190000*u(20,Kos,PA,1) + 190000*u(20,Kos,KI,1) + 200000*u(21,Kos,EU,1) + 200000*u(21,Kos,IE,1) + 200000*u(21,Kos,PA,1) + 200000*u(21,Kos,KI,1) + 210000*u(22,Kos,EU,1) + 210000*u(22,Kos,IE,1)
     
      + 210000*u(22,Kos,PA,1) + 210000*u(22,Kos,KI,1) + 220000*u(23,Kos,EU,1) + 220000*u(23,Kos,IE,1) + 220000*u(23,Kos,PA,1) + 220000*u(23,Kos,KI,1) =L= 0 ; (LHS = 0)
     
Sold_Prod(Kos,2)..  - y(Kos,2) + 10150*u(2,Kos,EU,2) + 10150*u(2,Kos,IE,2) + 10150*u(2,Kos,PA,2) + 10150*u(2,Kos,KI,2) + 20300*u(3,Kos,EU,2) + 20300*u(3,Kos,IE,2) + 20300*u(3,Kos,PA,2) + 20300*u(3,Kos,KI,2) + 30450*u(4,Kos,EU,2) + 30450*u(4,Kos,IE,2)
     
      + 30450*u(4,Kos,PA,2) + 30450*u(4,Kos,KI,2) + 40600*u(5,Kos,EU,2) + 40600*u(5,Kos,IE,2) + 40600*u(5,Kos,PA,2) + 40600*u(5,Kos,KI,2) + 50750*u(6,Kos,EU,2) + 50750*u(6,Kos,IE,2) + 50750*u(6,Kos,PA,2) + 50750*u(6,Kos,KI,2) + 60900*u(7,Kos,EU,2)
     
      + 60900*u(7,Kos,IE,2) + 60900*u(7,Kos,PA,2) + 60900*u(7,Kos,KI,2) + 71050*u(8,Kos,EU,2) + 71050*u(8,Kos,IE,2) + 71050*u(8,Kos,PA,2) + 71050*u(8,Kos,KI,2) + 81200*u(9,Kos,EU,2) + 81200*u(9,Kos,IE,2) + 81200*u(9,Kos,PA,2) + 81200*u(9,Kos,KI,2)
     
      + 91350*u(10,Kos,EU,2) + 91350*u(10,Kos,IE,2) + 91350*u(10,Kos,PA,2) + 91350*u(10,Kos,KI,2) + 101500*u(11,Kos,EU,2) + 101500*u(11,Kos,IE,2) + 101500*u(11,Kos,PA,2) + 101500*u(11,Kos,KI,2) + 111650*u(12,Kos,EU,2) + 111650*u(12,Kos,IE,2)
     
      + 111650*u(12,Kos,PA,2) + 111650*u(12,Kos,KI,2) + 121800*u(13,Kos,EU,2) + 121800*u(13,Kos,IE,2) + 121800*u(13,Kos,PA,2) + 121800*u(13,Kos,KI,2) + 131950*u(14,Kos,EU,2) + 131950*u(14,Kos,IE,2) + 131950*u(14,Kos,PA,2) + 131950*u(14,Kos,KI,2)
     
      + 142100*u(15,Kos,EU,2) + 142100*u(15,Kos,IE,2) + 142100*u(15,Kos,PA,2) + 142100*u(15,Kos,KI,2) + 152250*u(16,Kos,EU,2) + 152250*u(16,Kos,IE,2) + 152250*u(16,Kos,PA,2) + 152250*u(16,Kos,KI,2) + 162400*u(17,Kos,EU,2) + 162400*u(17,Kos,IE,2)
     
      + 162400*u(17,Kos,PA,2) + 162400*u(17,Kos,KI,2) + 172550*u(18,Kos,EU,2) + 172550*u(18,Kos,IE,2) + 172550*u(18,Kos,PA,2) + 172550*u(18,Kos,KI,2) + 182700*u(19,Kos,EU,2) + 182700*u(19,Kos,IE,2) + 182700*u(19,Kos,PA,2) + 182700*u(19,Kos,KI,2)
     
      + 192850*u(20,Kos,EU,2) + 192850*u(20,Kos,IE,2) + 192850*u(20,Kos,PA,2) + 192850*u(20,Kos,KI,2) + 203000*u(21,Kos,EU,2) + 203000*u(21,Kos,IE,2) + 203000*u(21,Kos,PA,2) + 203000*u(21,Kos,KI,2) + 213150*u(22,Kos,EU,2) + 213150*u(22,Kos,IE,2)
     
      + 213150*u(22,Kos,PA,2) + 213150*u(22,Kos,KI,2) + 223300*u(23,Kos,EU,2) + 223300*u(23,Kos,IE,2) + 223300*u(23,Kos,PA,2) + 223300*u(23,Kos,KI,2) =L= 0 ; (LHS = 0)
     
Sold_Prod(Kos,3)..  - y(Kos,3) + 10302.25*u(2,Kos,EU,3) + 10302.25*u(2,Kos,IE,3) + 10302.25*u(2,Kos,PA,3) + 10302.25*u(2,Kos,KI,3) + 20604.5*u(3,Kos,EU,3) + 20604.5*u(3,Kos,IE,3) + 20604.5*u(3,Kos,PA,3) + 20604.5*u(3,Kos,KI,3) + 30906.75*u(4,Kos,EU,3)
     
      + 30906.75*u(4,Kos,IE,3) + 30906.75*u(4,Kos,PA,3) + 30906.75*u(4,Kos,KI,3) + 41209*u(5,Kos,EU,3) + 41209*u(5,Kos,IE,3) + 41209*u(5,Kos,PA,3) + 41209*u(5,Kos,KI,3) + 51511.25*u(6,Kos,EU,3) + 51511.25*u(6,Kos,IE,3) + 51511.25*u(6,Kos,PA,3)
     
      + 51511.25*u(6,Kos,KI,3) + 61813.5*u(7,Kos,EU,3) + 61813.5*u(7,Kos,IE,3) + 61813.5*u(7,Kos,PA,3) + 61813.5*u(7,Kos,KI,3) + 72115.75*u(8,Kos,EU,3) + 72115.75*u(8,Kos,IE,3) + 72115.75*u(8,Kos,PA,3) + 72115.75*u(8,Kos,KI,3) + 82418*u(9,Kos,EU,3)
     
      + 82418*u(9,Kos,IE,3) + 82418*u(9,Kos,PA,3) + 82418*u(9,Kos,KI,3) + 92720.25*u(10,Kos,EU,3) + 92720.25*u(10,Kos,IE,3) + 92720.25*u(10,Kos,PA,3) + 92720.25*u(10,Kos,KI,3) + 103022.5*u(11,Kos,EU,3) + 103022.5*u(11,Kos,IE,3) + 103022.5*u(11,Kos,PA,3)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 23:25:38 Page 20
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 433


     Sold_Prod  =L=  we cant sell more than we produce in each year     
     
      + 103022.5*u(11,Kos,KI,3) + 113324.75*u(12,Kos,EU,3) + 113324.75*u(12,Kos,IE,3) + 113324.75*u(12,Kos,PA,3) + 113324.75*u(12,Kos,KI,3) + 123627*u(13,Kos,EU,3) + 123627*u(13,Kos,IE,3) + 123627*u(13,Kos,PA,3) + 123627*u(13,Kos,KI,3)
     
      + 133929.25*u(14,Kos,EU,3) + 133929.25*u(14,Kos,IE,3) + 133929.25*u(14,Kos,PA,3) + 133929.25*u(14,Kos,KI,3) + 144231.5*u(15,Kos,EU,3) + 144231.5*u(15,Kos,IE,3) + 144231.5*u(15,Kos,PA,3) + 144231.5*u(15,Kos,KI,3) + 154533.75*u(16,Kos,EU,3)
     
      + 154533.75*u(16,Kos,IE,3) + 154533.75*u(16,Kos,PA,3) + 154533.75*u(16,Kos,KI,3) + 164836*u(17,Kos,EU,3) + 164836*u(17,Kos,IE,3) + 164836*u(17,Kos,PA,3) + 164836*u(17,Kos,KI,3) + 175138.25*u(18,Kos,EU,3) + 175138.25*u(18,Kos,IE,3)
     
      + 175138.25*u(18,Kos,PA,3) + 175138.25*u(18,Kos,KI,3) + 185440.5*u(19,Kos,EU,3) + 185440.5*u(19,Kos,IE,3) + 185440.5*u(19,Kos,PA,3) + 185440.5*u(19,Kos,KI,3) + 195742.75*u(20,Kos,EU,3) + 195742.75*u(20,Kos,IE,3) + 195742.75*u(20,Kos,PA,3)
     
      + 195742.75*u(20,Kos,KI,3) + 206045*u(21,Kos,EU,3) + 206045*u(21,Kos,IE,3) + 206045*u(21,Kos,PA,3) + 206045*u(21,Kos,KI,3) + 216347.25*u(22,Kos,EU,3) + 216347.25*u(22,Kos,IE,3) + 216347.25*u(22,Kos,PA,3) + 216347.25*u(22,Kos,KI,3)
     
      + 226649.5*u(23,Kos,EU,3) + 226649.5*u(23,Kos,IE,3) + 226649.5*u(23,Kos,PA,3) + 226649.5*u(23,Kos,KI,3) =L= 0 ; (LHS = 0)
     
Sold_Prod(Kuv,1)..  - y(Kuv,1) + 10000*u(2,Kuv,EU,1) + 10000*u(2,Kuv,IE,1) + 10000*u(2,Kuv,PA,1) + 10000*u(2,Kuv,KI,1) + 20000*u(3,Kuv,EU,1) + 20000*u(3,Kuv,IE,1) + 20000*u(3,Kuv,PA,1) + 20000*u(3,Kuv,KI,1) + 30000*u(4,Kuv,EU,1) + 30000*u(4,Kuv,IE,1)
     
      + 30000*u(4,Kuv,PA,1) + 30000*u(4,Kuv,KI,1) + 40000*u(5,Kuv,EU,1) + 40000*u(5,Kuv,IE,1) + 40000*u(5,Kuv,PA,1) + 40000*u(5,Kuv,KI,1) + 50000*u(6,Kuv,EU,1) + 50000*u(6,Kuv,IE,1) + 50000*u(6,Kuv,PA,1) + 50000*u(6,Kuv,KI,1) + 60000*u(7,Kuv,EU,1)
     
      + 60000*u(7,Kuv,IE,1) + 60000*u(7,Kuv,PA,1) + 60000*u(7,Kuv,KI,1) + 70000*u(8,Kuv,EU,1) + 70000*u(8,Kuv,IE,1) + 70000*u(8,Kuv,PA,1) + 70000*u(8,Kuv,KI,1) + 80000*u(9,Kuv,EU,1) + 80000*u(9,Kuv,IE,1) + 80000*u(9,Kuv,PA,1) + 80000*u(9,Kuv,KI,1)
     
      + 90000*u(10,Kuv,EU,1) + 90000*u(10,Kuv,IE,1) + 90000*u(10,Kuv,PA,1) + 90000*u(10,Kuv,KI,1) + 100000*u(11,Kuv,EU,1) + 100000*u(11,Kuv,IE,1) + 100000*u(11,Kuv,PA,1) + 100000*u(11,Kuv,KI,1) + 110000*u(12,Kuv,EU,1) + 110000*u(12,Kuv,IE,1)
     
      + 110000*u(12,Kuv,PA,1) + 110000*u(12,Kuv,KI,1) + 120000*u(13,Kuv,EU,1) + 120000*u(13,Kuv,IE,1) + 120000*u(13,Kuv,PA,1) + 120000*u(13,Kuv,KI,1) + 130000*u(14,Kuv,EU,1) + 130000*u(14,Kuv,IE,1) + 130000*u(14,Kuv,PA,1) + 130000*u(14,Kuv,KI,1)
     
      + 140000*u(15,Kuv,EU,1) + 140000*u(15,Kuv,IE,1) + 140000*u(15,Kuv,PA,1) + 140000*u(15,Kuv,KI,1) + 150000*u(16,Kuv,EU,1) + 150000*u(16,Kuv,IE,1) + 150000*u(16,Kuv,PA,1) + 150000*u(16,Kuv,KI,1) + 160000*u(17,Kuv,EU,1) + 160000*u(17,Kuv,IE,1)
     
      + 160000*u(17,Kuv,PA,1) + 160000*u(17,Kuv,KI,1) + 170000*u(18,Kuv,EU,1) + 170000*u(18,Kuv,IE,1) + 170000*u(18,Kuv,PA,1) + 170000*u(18,Kuv,KI,1) + 180000*u(19,Kuv,EU,1) + 180000*u(19,Kuv,IE,1) + 180000*u(19,Kuv,PA,1) + 180000*u(19,Kuv,KI,1)
     
      + 190000*u(20,Kuv,EU,1) + 190000*u(20,Kuv,IE,1) + 190000*u(20,Kuv,PA,1) + 190000*u(20,Kuv,KI,1) + 200000*u(21,Kuv,EU,1) + 200000*u(21,Kuv,IE,1) + 200000*u(21,Kuv,PA,1) + 200000*u(21,Kuv,KI,1) + 210000*u(22,Kuv,EU,1) + 210000*u(22,Kuv,IE,1)
     
      + 210000*u(22,Kuv,PA,1) + 210000*u(22,Kuv,KI,1) + 220000*u(23,Kuv,EU,1) + 220000*u(23,Kuv,IE,1) + 220000*u(23,Kuv,PA,1) + 220000*u(23,Kuv,KI,1) =L= 0 ; (LHS = 0)
     
Sold_Prod(Kuv,2)..  - y(Kuv,2) + 10150*u(2,Kuv,EU,2) + 10150*u(2,Kuv,IE,2) + 10150*u(2,Kuv,PA,2) + 10150*u(2,Kuv,KI,2) + 20300*u(3,Kuv,EU,2) + 20300*u(3,Kuv,IE,2) + 20300*u(3,Kuv,PA,2) + 20300*u(3,Kuv,KI,2) + 30450*u(4,Kuv,EU,2) + 30450*u(4,Kuv,IE,2)
     
      + 30450*u(4,Kuv,PA,2) + 30450*u(4,Kuv,KI,2) + 40600*u(5,Kuv,EU,2) + 40600*u(5,Kuv,IE,2) + 40600*u(5,Kuv,PA,2) + 40600*u(5,Kuv,KI,2) + 50750*u(6,Kuv,EU,2) + 50750*u(6,Kuv,IE,2) + 50750*u(6,Kuv,PA,2) + 50750*u(6,Kuv,KI,2) + 60900*u(7,Kuv,EU,2)
     
      + 60900*u(7,Kuv,IE,2) + 60900*u(7,Kuv,PA,2) + 60900*u(7,Kuv,KI,2) + 71050*u(8,Kuv,EU,2) + 71050*u(8,Kuv,IE,2) + 71050*u(8,Kuv,PA,2) + 71050*u(8,Kuv,KI,2) + 81200*u(9,Kuv,EU,2) + 81200*u(9,Kuv,IE,2) + 81200*u(9,Kuv,PA,2) + 81200*u(9,Kuv,KI,2)
     
      + 91350*u(10,Kuv,EU,2) + 91350*u(10,Kuv,IE,2) + 91350*u(10,Kuv,PA,2) + 91350*u(10,Kuv,KI,2) + 101500*u(11,Kuv,EU,2) + 101500*u(11,Kuv,IE,2) + 101500*u(11,Kuv,PA,2) + 101500*u(11,Kuv,KI,2) + 111650*u(12,Kuv,EU,2) + 111650*u(12,Kuv,IE,2)
     
      + 111650*u(12,Kuv,PA,2) + 111650*u(12,Kuv,KI,2) + 121800*u(13,Kuv,EU,2) + 121800*u(13,Kuv,IE,2) + 121800*u(13,Kuv,PA,2) + 121800*u(13,Kuv,KI,2) + 131950*u(14,Kuv,EU,2) + 131950*u(14,Kuv,IE,2) + 131950*u(14,Kuv,PA,2) + 131950*u(14,Kuv,KI,2)
     
      + 142100*u(15,Kuv,EU,2) + 142100*u(15,Kuv,IE,2) + 142100*u(15,Kuv,PA,2) + 142100*u(15,Kuv,KI,2) + 152250*u(16,Kuv,EU,2) + 152250*u(16,Kuv,IE,2) + 152250*u(16,Kuv,PA,2) + 152250*u(16,Kuv,KI,2) + 162400*u(17,Kuv,EU,2) + 162400*u(17,Kuv,IE,2)
     
      + 162400*u(17,Kuv,PA,2) + 162400*u(17,Kuv,KI,2) + 172550*u(18,Kuv,EU,2) + 172550*u(18,Kuv,IE,2) + 172550*u(18,Kuv,PA,2) + 172550*u(18,Kuv,KI,2) + 182700*u(19,Kuv,EU,2) + 182700*u(19,Kuv,IE,2) + 182700*u(19,Kuv,PA,2) + 182700*u(19,Kuv,KI,2)
     
      + 192850*u(20,Kuv,EU,2) + 192850*u(20,Kuv,IE,2) + 192850*u(20,Kuv,PA,2) + 192850*u(20,Kuv,KI,2) + 203000*u(21,Kuv,EU,2) + 203000*u(21,Kuv,IE,2) + 203000*u(21,Kuv,PA,2) + 203000*u(21,Kuv,KI,2) + 213150*u(22,Kuv,EU,2) + 213150*u(22,Kuv,IE,2)
     
      + 213150*u(22,Kuv,PA,2) + 213150*u(22,Kuv,KI,2) + 223300*u(23,Kuv,EU,2) + 223300*u(23,Kuv,IE,2) + 223300*u(23,Kuv,PA,2) + 223300*u(23,Kuv,KI,2) =L= 0 ; (LHS = 0)
     
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 23:25:38 Page 21
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 433


     Sold_Prod  =L=  we cant sell more than we produce in each year

Sold_Prod(Kuv,3)..  - y(Kuv,3) + 10302.25*u(2,Kuv,EU,3) + 10302.25*u(2,Kuv,IE,3) + 10302.25*u(2,Kuv,PA,3) + 10302.25*u(2,Kuv,KI,3) + 20604.5*u(3,Kuv,EU,3) + 20604.5*u(3,Kuv,IE,3) + 20604.5*u(3,Kuv,PA,3) + 20604.5*u(3,Kuv,KI,3) + 30906.75*u(4,Kuv,EU,3)
     
      + 30906.75*u(4,Kuv,IE,3) + 30906.75*u(4,Kuv,PA,3) + 30906.75*u(4,Kuv,KI,3) + 41209*u(5,Kuv,EU,3) + 41209*u(5,Kuv,IE,3) + 41209*u(5,Kuv,PA,3) + 41209*u(5,Kuv,KI,3) + 51511.25*u(6,Kuv,EU,3) + 51511.25*u(6,Kuv,IE,3) + 51511.25*u(6,Kuv,PA,3)
     
      + 51511.25*u(6,Kuv,KI,3) + 61813.5*u(7,Kuv,EU,3) + 61813.5*u(7,Kuv,IE,3) + 61813.5*u(7,Kuv,PA,3) + 61813.5*u(7,Kuv,KI,3) + 72115.75*u(8,Kuv,EU,3) + 72115.75*u(8,Kuv,IE,3) + 72115.75*u(8,Kuv,PA,3) + 72115.75*u(8,Kuv,KI,3) + 82418*u(9,Kuv,EU,3)
     
      + 82418*u(9,Kuv,IE,3) + 82418*u(9,Kuv,PA,3) + 82418*u(9,Kuv,KI,3) + 92720.25*u(10,Kuv,EU,3) + 92720.25*u(10,Kuv,IE,3) + 92720.25*u(10,Kuv,PA,3) + 92720.25*u(10,Kuv,KI,3) + 103022.5*u(11,Kuv,EU,3) + 103022.5*u(11,Kuv,IE,3) + 103022.5*u(11,Kuv,PA,3)
     
      + 103022.5*u(11,Kuv,KI,3) + 113324.75*u(12,Kuv,EU,3) + 113324.75*u(12,Kuv,IE,3) + 113324.75*u(12,Kuv,PA,3) + 113324.75*u(12,Kuv,KI,3) + 123627*u(13,Kuv,EU,3) + 123627*u(13,Kuv,IE,3) + 123627*u(13,Kuv,PA,3) + 123627*u(13,Kuv,KI,3)
     
      + 133929.25*u(14,Kuv,EU,3) + 133929.25*u(14,Kuv,IE,3) + 133929.25*u(14,Kuv,PA,3) + 133929.25*u(14,Kuv,KI,3) + 144231.5*u(15,Kuv,EU,3) + 144231.5*u(15,Kuv,IE,3) + 144231.5*u(15,Kuv,PA,3) + 144231.5*u(15,Kuv,KI,3) + 154533.75*u(16,Kuv,EU,3)
     
      + 154533.75*u(16,Kuv,IE,3) + 154533.75*u(16,Kuv,PA,3) + 154533.75*u(16,Kuv,KI,3) + 164836*u(17,Kuv,EU,3) + 164836*u(17,Kuv,IE,3) + 164836*u(17,Kuv,PA,3) + 164836*u(17,Kuv,KI,3) + 175138.25*u(18,Kuv,EU,3) + 175138.25*u(18,Kuv,IE,3)
     
      + 175138.25*u(18,Kuv,PA,3) + 175138.25*u(18,Kuv,KI,3) + 185440.5*u(19,Kuv,EU,3) + 185440.5*u(19,Kuv,IE,3) + 185440.5*u(19,Kuv,PA,3) + 185440.5*u(19,Kuv,KI,3) + 195742.75*u(20,Kuv,EU,3) + 195742.75*u(20,Kuv,IE,3) + 195742.75*u(20,Kuv,PA,3)
     
      + 195742.75*u(20,Kuv,KI,3) + 206045*u(21,Kuv,EU,3) + 206045*u(21,Kuv,IE,3) + 206045*u(21,Kuv,PA,3) + 206045*u(21,Kuv,KI,3) + 216347.25*u(22,Kuv,EU,3) + 216347.25*u(22,Kuv,IE,3) + 216347.25*u(22,Kuv,PA,3) + 216347.25*u(22,Kuv,KI,3)
     
      + 226649.5*u(23,Kuv,EU,3) + 226649.5*u(23,Kuv,IE,3) + 226649.5*u(23,Kuv,PA,3) + 226649.5*u(23,Kuv,KI,3) =L= 0 ; (LHS = 0)
     
Sold_Prod(Kov,1)..  - y(Kov,1) + 10000*u(2,Kov,EU,1) + 10000*u(2,Kov,IE,1) + 10000*u(2,Kov,PA,1) + 10000*u(2,Kov,KI,1) + 20000*u(3,Kov,EU,1) + 20000*u(3,Kov,IE,1) + 20000*u(3,Kov,PA,1) + 20000*u(3,Kov,KI,1) + 30000*u(4,Kov,EU,1) + 30000*u(4,Kov,IE,1)
     
      + 30000*u(4,Kov,PA,1) + 30000*u(4,Kov,KI,1) + 40000*u(5,Kov,EU,1) + 40000*u(5,Kov,IE,1) + 40000*u(5,Kov,PA,1) + 40000*u(5,Kov,KI,1) + 50000*u(6,Kov,EU,1) + 50000*u(6,Kov,IE,1) + 50000*u(6,Kov,PA,1) + 50000*u(6,Kov,KI,1) + 60000*u(7,Kov,EU,1)
     
      + 60000*u(7,Kov,IE,1) + 60000*u(7,Kov,PA,1) + 60000*u(7,Kov,KI,1) + 70000*u(8,Kov,EU,1) + 70000*u(8,Kov,IE,1) + 70000*u(8,Kov,PA,1) + 70000*u(8,Kov,KI,1) + 80000*u(9,Kov,EU,1) + 80000*u(9,Kov,IE,1) + 80000*u(9,Kov,PA,1) + 80000*u(9,Kov,KI,1)
     
      + 90000*u(10,Kov,EU,1) + 90000*u(10,Kov,IE,1) + 90000*u(10,Kov,PA,1) + 90000*u(10,Kov,KI,1) + 100000*u(11,Kov,EU,1) + 100000*u(11,Kov,IE,1) + 100000*u(11,Kov,PA,1) + 100000*u(11,Kov,KI,1) + 110000*u(12,Kov,EU,1) + 110000*u(12,Kov,IE,1)
     
      + 110000*u(12,Kov,PA,1) + 110000*u(12,Kov,KI,1) + 120000*u(13,Kov,EU,1) + 120000*u(13,Kov,IE,1) + 120000*u(13,Kov,PA,1) + 120000*u(13,Kov,KI,1) + 130000*u(14,Kov,EU,1) + 130000*u(14,Kov,IE,1) + 130000*u(14,Kov,PA,1) + 130000*u(14,Kov,KI,1)
     
      + 140000*u(15,Kov,EU,1) + 140000*u(15,Kov,IE,1) + 140000*u(15,Kov,PA,1) + 140000*u(15,Kov,KI,1) + 150000*u(16,Kov,EU,1) + 150000*u(16,Kov,IE,1) + 150000*u(16,Kov,PA,1) + 150000*u(16,Kov,KI,1) + 160000*u(17,Kov,EU,1) + 160000*u(17,Kov,IE,1)
     
      + 160000*u(17,Kov,PA,1) + 160000*u(17,Kov,KI,1) + 170000*u(18,Kov,EU,1) + 170000*u(18,Kov,IE,1) + 170000*u(18,Kov,PA,1) + 170000*u(18,Kov,KI,1) + 180000*u(19,Kov,EU,1) + 180000*u(19,Kov,IE,1) + 180000*u(19,Kov,PA,1) + 180000*u(19,Kov,KI,1)
     
      + 190000*u(20,Kov,EU,1) + 190000*u(20,Kov,IE,1) + 190000*u(20,Kov,PA,1) + 190000*u(20,Kov,KI,1) + 200000*u(21,Kov,EU,1) + 200000*u(21,Kov,IE,1) + 200000*u(21,Kov,PA,1) + 200000*u(21,Kov,KI,1) + 210000*u(22,Kov,EU,1) + 210000*u(22,Kov,IE,1)
     
      + 210000*u(22,Kov,PA,1) + 210000*u(22,Kov,KI,1) + 220000*u(23,Kov,EU,1) + 220000*u(23,Kov,IE,1) + 220000*u(23,Kov,PA,1) + 220000*u(23,Kov,KI,1) =L= 0 ; (LHS = 0)
     
Sold_Prod(Kov,2)..  - y(Kov,2) + 10200*u(2,Kov,EU,2) + 10200*u(2,Kov,IE,2) + 10200*u(2,Kov,PA,2) + 10200*u(2,Kov,KI,2) + 20400*u(3,Kov,EU,2) + 20400*u(3,Kov,IE,2) + 20400*u(3,Kov,PA,2) + 20400*u(3,Kov,KI,2) + 30600*u(4,Kov,EU,2) + 30600*u(4,Kov,IE,2)
     
      + 30600*u(4,Kov,PA,2) + 30600*u(4,Kov,KI,2) + 40800*u(5,Kov,EU,2) + 40800*u(5,Kov,IE,2) + 40800*u(5,Kov,PA,2) + 40800*u(5,Kov,KI,2) + 51000*u(6,Kov,EU,2) + 51000*u(6,Kov,IE,2) + 51000*u(6,Kov,PA,2) + 51000*u(6,Kov,KI,2) + 61200*u(7,Kov,EU,2)
     
      + 61200*u(7,Kov,IE,2) + 61200*u(7,Kov,PA,2) + 61200*u(7,Kov,KI,2) + 71400*u(8,Kov,EU,2) + 71400*u(8,Kov,IE,2) + 71400*u(8,Kov,PA,2) + 71400*u(8,Kov,KI,2) + 81600*u(9,Kov,EU,2) + 81600*u(9,Kov,IE,2) + 81600*u(9,Kov,PA,2) + 81600*u(9,Kov,KI,2)
     
      + 91800*u(10,Kov,EU,2) + 91800*u(10,Kov,IE,2) + 91800*u(10,Kov,PA,2) + 91800*u(10,Kov,KI,2) + 102000*u(11,Kov,EU,2) + 102000*u(11,Kov,IE,2) + 102000*u(11,Kov,PA,2) + 102000*u(11,Kov,KI,2) + 112200*u(12,Kov,EU,2) + 112200*u(12,Kov,IE,2)
     
      + 112200*u(12,Kov,PA,2) + 112200*u(12,Kov,KI,2) + 122400*u(13,Kov,EU,2) + 122400*u(13,Kov,IE,2) + 122400*u(13,Kov,PA,2) + 122400*u(13,Kov,KI,2) + 132600*u(14,Kov,EU,2) + 132600*u(14,Kov,IE,2) + 132600*u(14,Kov,PA,2) + 132600*u(14,Kov,KI,2)
     
      + 142800*u(15,Kov,EU,2) + 142800*u(15,Kov,IE,2) + 142800*u(15,Kov,PA,2) + 142800*u(15,Kov,KI,2) + 153000*u(16,Kov,EU,2) + 153000*u(16,Kov,IE,2) + 153000*u(16,Kov,PA,2) + 153000*u(16,Kov,KI,2) + 163200*u(17,Kov,EU,2) + 163200*u(17,Kov,IE,2)
     
      + 163200*u(17,Kov,PA,2) + 163200*u(17,Kov,KI,2) + 173400*u(18,Kov,EU,2) + 173400*u(18,Kov,IE,2) + 173400*u(18,Kov,PA,2) + 173400*u(18,Kov,KI,2) + 183600*u(19,Kov,EU,2) + 183600*u(19,Kov,IE,2) + 183600*u(19,Kov,PA,2) + 183600*u(19,Kov,KI,2)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 23:25:38 Page 22
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 433


     Sold_Prod  =L=  we cant sell more than we produce in each year     
     
      + 193800*u(20,Kov,EU,2) + 193800*u(20,Kov,IE,2) + 193800*u(20,Kov,PA,2) + 193800*u(20,Kov,KI,2) + 204000*u(21,Kov,EU,2) + 204000*u(21,Kov,IE,2) + 204000*u(21,Kov,PA,2) + 204000*u(21,Kov,KI,2) + 214200*u(22,Kov,EU,2) + 214200*u(22,Kov,IE,2)
     
      + 214200*u(22,Kov,PA,2) + 214200*u(22,Kov,KI,2) + 224400*u(23,Kov,EU,2) + 224400*u(23,Kov,IE,2) + 224400*u(23,Kov,PA,2) + 224400*u(23,Kov,KI,2) =L= 0 ; (LHS = 0)
     
Sold_Prod(Kov,3)..  - y(Kov,3) + 10404*u(2,Kov,EU,3) + 10404*u(2,Kov,IE,3) + 10404*u(2,Kov,PA,3) + 10404*u(2,Kov,KI,3) + 20808*u(3,Kov,EU,3) + 20808*u(3,Kov,IE,3) + 20808*u(3,Kov,PA,3) + 20808*u(3,Kov,KI,3) + 31212*u(4,Kov,EU,3) + 31212*u(4,Kov,IE,3)
     
      + 31212*u(4,Kov,PA,3) + 31212*u(4,Kov,KI,3) + 41616*u(5,Kov,EU,3) + 41616*u(5,Kov,IE,3) + 41616*u(5,Kov,PA,3) + 41616*u(5,Kov,KI,3) + 52020*u(6,Kov,EU,3) + 52020*u(6,Kov,IE,3) + 52020*u(6,Kov,PA,3) + 52020*u(6,Kov,KI,3) + 62424*u(7,Kov,EU,3)
     
      + 62424*u(7,Kov,IE,3) + 62424*u(7,Kov,PA,3) + 62424*u(7,Kov,KI,3) + 72828*u(8,Kov,EU,3) + 72828*u(8,Kov,IE,3) + 72828*u(8,Kov,PA,3) + 72828*u(8,Kov,KI,3) + 83232*u(9,Kov,EU,3) + 83232*u(9,Kov,IE,3) + 83232*u(9,Kov,PA,3) + 83232*u(9,Kov,KI,3)
     
      + 93636*u(10,Kov,EU,3) + 93636*u(10,Kov,IE,3) + 93636*u(10,Kov,PA,3) + 93636*u(10,Kov,KI,3) + 104040*u(11,Kov,EU,3) + 104040*u(11,Kov,IE,3) + 104040*u(11,Kov,PA,3) + 104040*u(11,Kov,KI,3) + 114444*u(12,Kov,EU,3) + 114444*u(12,Kov,IE,3)
     
      + 114444*u(12,Kov,PA,3) + 114444*u(12,Kov,KI,3) + 124848*u(13,Kov,EU,3) + 124848*u(13,Kov,IE,3) + 124848*u(13,Kov,PA,3) + 124848*u(13,Kov,KI,3) + 135252*u(14,Kov,EU,3) + 135252*u(14,Kov,IE,3) + 135252*u(14,Kov,PA,3) + 135252*u(14,Kov,KI,3)
     
      + 145656*u(15,Kov,EU,3) + 145656*u(15,Kov,IE,3) + 145656*u(15,Kov,PA,3) + 145656*u(15,Kov,KI,3) + 156060*u(16,Kov,EU,3) + 156060*u(16,Kov,IE,3) + 156060*u(16,Kov,PA,3) + 156060*u(16,Kov,KI,3) + 166464*u(17,Kov,EU,3) + 166464*u(17,Kov,IE,3)
     
      + 166464*u(17,Kov,PA,3) + 166464*u(17,Kov,KI,3) + 176868*u(18,Kov,EU,3) + 176868*u(18,Kov,IE,3) + 176868*u(18,Kov,PA,3) + 176868*u(18,Kov,KI,3) + 187272*u(19,Kov,EU,3) + 187272*u(19,Kov,IE,3) + 187272*u(19,Kov,PA,3) + 187272*u(19,Kov,KI,3)
     
      + 197676*u(20,Kov,EU,3) + 197676*u(20,Kov,IE,3) + 197676*u(20,Kov,PA,3) + 197676*u(20,Kov,KI,3) + 208080*u(21,Kov,EU,3) + 208080*u(21,Kov,IE,3) + 208080*u(21,Kov,PA,3) + 208080*u(21,Kov,KI,3) + 218484*u(22,Kov,EU,3) + 218484*u(22,Kov,IE,3)
     
      + 218484*u(22,Kov,PA,3) + 218484*u(22,Kov,KI,3) + 228888*u(23,Kov,EU,3) + 228888*u(23,Kov,IE,3) + 228888*u(23,Kov,PA,3) + 228888*u(23,Kov,KI,3) =L= 0 ; (LHS = 0)
     
Sold_Prod(Hsel,1)..  - y(Hsel,1) + 10000*u(2,Hsel,EU,1) + 10000*u(2,Hsel,IE,1) + 10000*u(2,Hsel,PA,1) + 10000*u(2,Hsel,KI,1) + 20000*u(3,Hsel,EU,1) + 20000*u(3,Hsel,IE,1) + 20000*u(3,Hsel,PA,1) + 20000*u(3,Hsel,KI,1) + 30000*u(4,Hsel,EU,1)
     
      + 30000*u(4,Hsel,IE,1) + 30000*u(4,Hsel,PA,1) + 30000*u(4,Hsel,KI,1) + 40000*u(5,Hsel,EU,1) + 40000*u(5,Hsel,IE,1) + 40000*u(5,Hsel,PA,1) + 40000*u(5,Hsel,KI,1) + 50000*u(6,Hsel,EU,1) + 50000*u(6,Hsel,IE,1) + 50000*u(6,Hsel,PA,1)
     
      + 50000*u(6,Hsel,KI,1) + 60000*u(7,Hsel,EU,1) + 60000*u(7,Hsel,IE,1) + 60000*u(7,Hsel,PA,1) + 60000*u(7,Hsel,KI,1) + 70000*u(8,Hsel,EU,1) + 70000*u(8,Hsel,IE,1) + 70000*u(8,Hsel,PA,1) + 70000*u(8,Hsel,KI,1) + 80000*u(9,Hsel,EU,1)
     
      + 80000*u(9,Hsel,IE,1) + 80000*u(9,Hsel,PA,1) + 80000*u(9,Hsel,KI,1) + 90000*u(10,Hsel,EU,1) + 90000*u(10,Hsel,IE,1) + 90000*u(10,Hsel,PA,1) + 90000*u(10,Hsel,KI,1) + 100000*u(11,Hsel,EU,1) + 100000*u(11,Hsel,IE,1) + 100000*u(11,Hsel,PA,1)
     
      + 100000*u(11,Hsel,KI,1) + 110000*u(12,Hsel,EU,1) + 110000*u(12,Hsel,IE,1) + 110000*u(12,Hsel,PA,1) + 110000*u(12,Hsel,KI,1) + 120000*u(13,Hsel,EU,1) + 120000*u(13,Hsel,IE,1) + 120000*u(13,Hsel,PA,1) + 120000*u(13,Hsel,KI,1) + 130000*u(14,Hsel,EU,1)
     
      + 130000*u(14,Hsel,IE,1) + 130000*u(14,Hsel,PA,1) + 130000*u(14,Hsel,KI,1) + 140000*u(15,Hsel,EU,1) + 140000*u(15,Hsel,IE,1) + 140000*u(15,Hsel,PA,1) + 140000*u(15,Hsel,KI,1) + 150000*u(16,Hsel,EU,1) + 150000*u(16,Hsel,IE,1) + 150000*u(16,Hsel,PA,1)
     
      + 150000*u(16,Hsel,KI,1) + 160000*u(17,Hsel,EU,1) + 160000*u(17,Hsel,IE,1) + 160000*u(17,Hsel,PA,1) + 160000*u(17,Hsel,KI,1) + 170000*u(18,Hsel,EU,1) + 170000*u(18,Hsel,IE,1) + 170000*u(18,Hsel,PA,1) + 170000*u(18,Hsel,KI,1) + 180000*u(19,Hsel,EU,1)
     
      + 180000*u(19,Hsel,IE,1) + 180000*u(19,Hsel,PA,1) + 180000*u(19,Hsel,KI,1) + 190000*u(20,Hsel,EU,1) + 190000*u(20,Hsel,IE,1) + 190000*u(20,Hsel,PA,1) + 190000*u(20,Hsel,KI,1) + 200000*u(21,Hsel,EU,1) + 200000*u(21,Hsel,IE,1) + 200000*u(21,Hsel,PA,1)
     
      + 200000*u(21,Hsel,KI,1) + 210000*u(22,Hsel,EU,1) + 210000*u(22,Hsel,IE,1) + 210000*u(22,Hsel,PA,1) + 210000*u(22,Hsel,KI,1) + 220000*u(23,Hsel,EU,1) + 220000*u(23,Hsel,IE,1) + 220000*u(23,Hsel,PA,1) + 220000*u(23,Hsel,KI,1) =L= 0 ; (LHS = 0)
     
Sold_Prod(Hsel,2)..  - y(Hsel,2) + 10250*u(2,Hsel,EU,2) + 10250*u(2,Hsel,IE,2) + 10250*u(2,Hsel,PA,2) + 10250*u(2,Hsel,KI,2) + 20500*u(3,Hsel,EU,2) + 20500*u(3,Hsel,IE,2) + 20500*u(3,Hsel,PA,2) + 20500*u(3,Hsel,KI,2) + 30750*u(4,Hsel,EU,2)
     
      + 30750*u(4,Hsel,IE,2) + 30750*u(4,Hsel,PA,2) + 30750*u(4,Hsel,KI,2) + 41000*u(5,Hsel,EU,2) + 41000*u(5,Hsel,IE,2) + 41000*u(5,Hsel,PA,2) + 41000*u(5,Hsel,KI,2) + 51250*u(6,Hsel,EU,2) + 51250*u(6,Hsel,IE,2) + 51250*u(6,Hsel,PA,2)
     
      + 51250*u(6,Hsel,KI,2) + 61500*u(7,Hsel,EU,2) + 61500*u(7,Hsel,IE,2) + 61500*u(7,Hsel,PA,2) + 61500*u(7,Hsel,KI,2) + 71750*u(8,Hsel,EU,2) + 71750*u(8,Hsel,IE,2) + 71750*u(8,Hsel,PA,2) + 71750*u(8,Hsel,KI,2) + 82000*u(9,Hsel,EU,2)
     
      + 82000*u(9,Hsel,IE,2) + 82000*u(9,Hsel,PA,2) + 82000*u(9,Hsel,KI,2) + 92250*u(10,Hsel,EU,2) + 92250*u(10,Hsel,IE,2) + 92250*u(10,Hsel,PA,2) + 92250*u(10,Hsel,KI,2) + 102500*u(11,Hsel,EU,2) + 102500*u(11,Hsel,IE,2) + 102500*u(11,Hsel,PA,2)
     
      + 102500*u(11,Hsel,KI,2) + 112750*u(12,Hsel,EU,2) + 112750*u(12,Hsel,IE,2) + 112750*u(12,Hsel,PA,2) + 112750*u(12,Hsel,KI,2) + 123000*u(13,Hsel,EU,2) + 123000*u(13,Hsel,IE,2) + 123000*u(13,Hsel,PA,2) + 123000*u(13,Hsel,KI,2) + 133250*u(14,Hsel,EU,2)
     
      + 133250*u(14,Hsel,IE,2) + 133250*u(14,Hsel,PA,2) + 133250*u(14,Hsel,KI,2) + 143500*u(15,Hsel,EU,2) + 143500*u(15,Hsel,IE,2) + 143500*u(15,Hsel,PA,2) + 143500*u(15,Hsel,KI,2) + 153750*u(16,Hsel,EU,2) + 153750*u(16,Hsel,IE,2) + 153750*u(16,Hsel,PA,2)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 23:25:38 Page 23
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 433


     Sold_Prod  =L=  we cant sell more than we produce in each year     
     
      + 153750*u(16,Hsel,KI,2) + 164000*u(17,Hsel,EU,2) + 164000*u(17,Hsel,IE,2) + 164000*u(17,Hsel,PA,2) + 164000*u(17,Hsel,KI,2) + 174250*u(18,Hsel,EU,2) + 174250*u(18,Hsel,IE,2) + 174250*u(18,Hsel,PA,2) + 174250*u(18,Hsel,KI,2) + 184500*u(19,Hsel,EU,2)
     
      + 184500*u(19,Hsel,IE,2) + 184500*u(19,Hsel,PA,2) + 184500*u(19,Hsel,KI,2) + 194750*u(20,Hsel,EU,2) + 194750*u(20,Hsel,IE,2) + 194750*u(20,Hsel,PA,2) + 194750*u(20,Hsel,KI,2) + 205000*u(21,Hsel,EU,2) + 205000*u(21,Hsel,IE,2) + 205000*u(21,Hsel,PA,2)
     
      + 205000*u(21,Hsel,KI,2) + 215250*u(22,Hsel,EU,2) + 215250*u(22,Hsel,IE,2) + 215250*u(22,Hsel,PA,2) + 215250*u(22,Hsel,KI,2) + 225500*u(23,Hsel,EU,2) + 225500*u(23,Hsel,IE,2) + 225500*u(23,Hsel,PA,2) + 225500*u(23,Hsel,KI,2) =L= 0 ; (LHS = 0)
     
Sold_Prod(Hsel,3)..  - y(Hsel,3) + 10506.25*u(2,Hsel,EU,3) + 10506.25*u(2,Hsel,IE,3) + 10506.25*u(2,Hsel,PA,3) + 10506.25*u(2,Hsel,KI,3) + 21012.5*u(3,Hsel,EU,3) + 21012.5*u(3,Hsel,IE,3) + 21012.5*u(3,Hsel,PA,3) + 21012.5*u(3,Hsel,KI,3)
     
      + 31518.75*u(4,Hsel,EU,3) + 31518.75*u(4,Hsel,IE,3) + 31518.75*u(4,Hsel,PA,3) + 31518.75*u(4,Hsel,KI,3) + 42025*u(5,Hsel,EU,3) + 42025*u(5,Hsel,IE,3) + 42025*u(5,Hsel,PA,3) + 42025*u(5,Hsel,KI,3) + 52531.25*u(6,Hsel,EU,3) + 52531.25*u(6,Hsel,IE,3)
     
      + 52531.25*u(6,Hsel,PA,3) + 52531.25*u(6,Hsel,KI,3) + 63037.5*u(7,Hsel,EU,3) + 63037.5*u(7,Hsel,IE,3) + 63037.5*u(7,Hsel,PA,3) + 63037.5*u(7,Hsel,KI,3) + 73543.75*u(8,Hsel,EU,3) + 73543.75*u(8,Hsel,IE,3) + 73543.75*u(8,Hsel,PA,3)
     
      + 73543.75*u(8,Hsel,KI,3) + 84050*u(9,Hsel,EU,3) + 84050*u(9,Hsel,IE,3) + 84050*u(9,Hsel,PA,3) + 84050*u(9,Hsel,KI,3) + 94556.25*u(10,Hsel,EU,3) + 94556.25*u(10,Hsel,IE,3) + 94556.25*u(10,Hsel,PA,3) + 94556.25*u(10,Hsel,KI,3)
     
      + 105062.5*u(11,Hsel,EU,3) + 105062.5*u(11,Hsel,IE,3) + 105062.5*u(11,Hsel,PA,3) + 105062.5*u(11,Hsel,KI,3) + 115568.75*u(12,Hsel,EU,3) + 115568.75*u(12,Hsel,IE,3) + 115568.75*u(12,Hsel,PA,3) + 115568.75*u(12,Hsel,KI,3) + 126075*u(13,Hsel,EU,3)
     
      + 126075*u(13,Hsel,IE,3) + 126075*u(13,Hsel,PA,3) + 126075*u(13,Hsel,KI,3) + 136581.25*u(14,Hsel,EU,3) + 136581.25*u(14,Hsel,IE,3) + 136581.25*u(14,Hsel,PA,3) + 136581.25*u(14,Hsel,KI,3) + 147087.5*u(15,Hsel,EU,3) + 147087.5*u(15,Hsel,IE,3)
     
      + 147087.5*u(15,Hsel,PA,3) + 147087.5*u(15,Hsel,KI,3) + 157593.75*u(16,Hsel,EU,3) + 157593.75*u(16,Hsel,IE,3) + 157593.75*u(16,Hsel,PA,3) + 157593.75*u(16,Hsel,KI,3) + 168100*u(17,Hsel,EU,3) + 168100*u(17,Hsel,IE,3) + 168100*u(17,Hsel,PA,3)
     
      + 168100*u(17,Hsel,KI,3) + 178606.25*u(18,Hsel,EU,3) + 178606.25*u(18,Hsel,IE,3) + 178606.25*u(18,Hsel,PA,3) + 178606.25*u(18,Hsel,KI,3) + 189112.5*u(19,Hsel,EU,3) + 189112.5*u(19,Hsel,IE,3) + 189112.5*u(19,Hsel,PA,3) + 189112.5*u(19,Hsel,KI,3)
     
      + 199618.75*u(20,Hsel,EU,3) + 199618.75*u(20,Hsel,IE,3) + 199618.75*u(20,Hsel,PA,3) + 199618.75*u(20,Hsel,KI,3) + 210125*u(21,Hsel,EU,3) + 210125*u(21,Hsel,IE,3) + 210125*u(21,Hsel,PA,3) + 210125*u(21,Hsel,KI,3) + 220631.25*u(22,Hsel,EU,3)
     
      + 220631.25*u(22,Hsel,IE,3) + 220631.25*u(22,Hsel,PA,3) + 220631.25*u(22,Hsel,KI,3) + 231137.5*u(23,Hsel,EU,3) + 231137.5*u(23,Hsel,IE,3) + 231137.5*u(23,Hsel,PA,3) + 231137.5*u(23,Hsel,KI,3) =L= 0 ; (LHS = 0)
     
Sold_Prod(Lsel,1)..  - y(Lsel,1) + 10000*u(2,Lsel,EU,1) + 10000*u(2,Lsel,IE,1) + 10000*u(2,Lsel,PA,1) + 10000*u(2,Lsel,KI,1) + 20000*u(3,Lsel,EU,1) + 20000*u(3,Lsel,IE,1) + 20000*u(3,Lsel,PA,1) + 20000*u(3,Lsel,KI,1) + 30000*u(4,Lsel,EU,1)
     
      + 30000*u(4,Lsel,IE,1) + 30000*u(4,Lsel,PA,1) + 30000*u(4,Lsel,KI,1) + 40000*u(5,Lsel,EU,1) + 40000*u(5,Lsel,IE,1) + 40000*u(5,Lsel,PA,1) + 40000*u(5,Lsel,KI,1) + 50000*u(6,Lsel,EU,1) + 50000*u(6,Lsel,IE,1) + 50000*u(6,Lsel,PA,1)
     
      + 50000*u(6,Lsel,KI,1) + 60000*u(7,Lsel,EU,1) + 60000*u(7,Lsel,IE,1) + 60000*u(7,Lsel,PA,1) + 60000*u(7,Lsel,KI,1) + 70000*u(8,Lsel,EU,1) + 70000*u(8,Lsel,IE,1) + 70000*u(8,Lsel,PA,1) + 70000*u(8,Lsel,KI,1) + 80000*u(9,Lsel,EU,1)
     
      + 80000*u(9,Lsel,IE,1) + 80000*u(9,Lsel,PA,1) + 80000*u(9,Lsel,KI,1) + 90000*u(10,Lsel,EU,1) + 90000*u(10,Lsel,IE,1) + 90000*u(10,Lsel,PA,1) + 90000*u(10,Lsel,KI,1) + 100000*u(11,Lsel,EU,1) + 100000*u(11,Lsel,IE,1) + 100000*u(11,Lsel,PA,1)
     
      + 100000*u(11,Lsel,KI,1) + 110000*u(12,Lsel,EU,1) + 110000*u(12,Lsel,IE,1) + 110000*u(12,Lsel,PA,1) + 110000*u(12,Lsel,KI,1) + 120000*u(13,Lsel,EU,1) + 120000*u(13,Lsel,IE,1) + 120000*u(13,Lsel,PA,1) + 120000*u(13,Lsel,KI,1) + 130000*u(14,Lsel,EU,1)
     
      + 130000*u(14,Lsel,IE,1) + 130000*u(14,Lsel,PA,1) + 130000*u(14,Lsel,KI,1) + 140000*u(15,Lsel,EU,1) + 140000*u(15,Lsel,IE,1) + 140000*u(15,Lsel,PA,1) + 140000*u(15,Lsel,KI,1) + 150000*u(16,Lsel,EU,1) + 150000*u(16,Lsel,IE,1) + 150000*u(16,Lsel,PA,1)
     
      + 150000*u(16,Lsel,KI,1) + 160000*u(17,Lsel,EU,1) + 160000*u(17,Lsel,IE,1) + 160000*u(17,Lsel,PA,1) + 160000*u(17,Lsel,KI,1) + 170000*u(18,Lsel,EU,1) + 170000*u(18,Lsel,IE,1) + 170000*u(18,Lsel,PA,1) + 170000*u(18,Lsel,KI,1) + 180000*u(19,Lsel,EU,1)
     
      + 180000*u(19,Lsel,IE,1) + 180000*u(19,Lsel,PA,1) + 180000*u(19,Lsel,KI,1) + 190000*u(20,Lsel,EU,1) + 190000*u(20,Lsel,IE,1) + 190000*u(20,Lsel,PA,1) + 190000*u(20,Lsel,KI,1) + 200000*u(21,Lsel,EU,1) + 200000*u(21,Lsel,IE,1) + 200000*u(21,Lsel,PA,1)
     
      + 200000*u(21,Lsel,KI,1) + 210000*u(22,Lsel,EU,1) + 210000*u(22,Lsel,IE,1) + 210000*u(22,Lsel,PA,1) + 210000*u(22,Lsel,KI,1) + 220000*u(23,Lsel,EU,1) + 220000*u(23,Lsel,IE,1) + 220000*u(23,Lsel,PA,1) + 220000*u(23,Lsel,KI,1) =L= 0 ; (LHS = 0)
     
Sold_Prod(Lsel,2)..  - y(Lsel,2) + 10300*u(2,Lsel,EU,2) + 10300*u(2,Lsel,IE,2) + 10300*u(2,Lsel,PA,2) + 10300*u(2,Lsel,KI,2) + 20600*u(3,Lsel,EU,2) + 20600*u(3,Lsel,IE,2) + 20600*u(3,Lsel,PA,2) + 20600*u(3,Lsel,KI,2) + 30900*u(4,Lsel,EU,2)
     
      + 30900*u(4,Lsel,IE,2) + 30900*u(4,Lsel,PA,2) + 30900*u(4,Lsel,KI,2) + 41200*u(5,Lsel,EU,2) + 41200*u(5,Lsel,IE,2) + 41200*u(5,Lsel,PA,2) + 41200*u(5,Lsel,KI,2) + 51500*u(6,Lsel,EU,2) + 51500*u(6,Lsel,IE,2) + 51500*u(6,Lsel,PA,2)
     
      + 51500*u(6,Lsel,KI,2) + 61800*u(7,Lsel,EU,2) + 61800*u(7,Lsel,IE,2) + 61800*u(7,Lsel,PA,2) + 61800*u(7,Lsel,KI,2) + 72100*u(8,Lsel,EU,2) + 72100*u(8,Lsel,IE,2) + 72100*u(8,Lsel,PA,2) + 72100*u(8,Lsel,KI,2) + 82400*u(9,Lsel,EU,2)
     
      + 82400*u(9,Lsel,IE,2) + 82400*u(9,Lsel,PA,2) + 82400*u(9,Lsel,KI,2) + 92700*u(10,Lsel,EU,2) + 92700*u(10,Lsel,IE,2) + 92700*u(10,Lsel,PA,2) + 92700*u(10,Lsel,KI,2) + 103000*u(11,Lsel,EU,2) + 103000*u(11,Lsel,IE,2) + 103000*u(11,Lsel,PA,2)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 23:25:38 Page 24
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 433


     Sold_Prod  =L=  we cant sell more than we produce in each year     
     
      + 103000*u(11,Lsel,KI,2) + 113300*u(12,Lsel,EU,2) + 113300*u(12,Lsel,IE,2) + 113300*u(12,Lsel,PA,2) + 113300*u(12,Lsel,KI,2) + 123600*u(13,Lsel,EU,2) + 123600*u(13,Lsel,IE,2) + 123600*u(13,Lsel,PA,2) + 123600*u(13,Lsel,KI,2) + 133900*u(14,Lsel,EU,2)
     
      + 133900*u(14,Lsel,IE,2) + 133900*u(14,Lsel,PA,2) + 133900*u(14,Lsel,KI,2) + 144200*u(15,Lsel,EU,2) + 144200*u(15,Lsel,IE,2) + 144200*u(15,Lsel,PA,2) + 144200*u(15,Lsel,KI,2) + 154500*u(16,Lsel,EU,2) + 154500*u(16,Lsel,IE,2) + 154500*u(16,Lsel,PA,2)
     
      + 154500*u(16,Lsel,KI,2) + 164800*u(17,Lsel,EU,2) + 164800*u(17,Lsel,IE,2) + 164800*u(17,Lsel,PA,2) + 164800*u(17,Lsel,KI,2) + 175100*u(18,Lsel,EU,2) + 175100*u(18,Lsel,IE,2) + 175100*u(18,Lsel,PA,2) + 175100*u(18,Lsel,KI,2) + 185400*u(19,Lsel,EU,2)
     
      + 185400*u(19,Lsel,IE,2) + 185400*u(19,Lsel,PA,2) + 185400*u(19,Lsel,KI,2) + 195700*u(20,Lsel,EU,2) + 195700*u(20,Lsel,IE,2) + 195700*u(20,Lsel,PA,2) + 195700*u(20,Lsel,KI,2) + 206000*u(21,Lsel,EU,2) + 206000*u(21,Lsel,IE,2) + 206000*u(21,Lsel,PA,2)
     
      + 206000*u(21,Lsel,KI,2) + 216300*u(22,Lsel,EU,2) + 216300*u(22,Lsel,IE,2) + 216300*u(22,Lsel,PA,2) + 216300*u(22,Lsel,KI,2) + 226600*u(23,Lsel,EU,2) + 226600*u(23,Lsel,IE,2) + 226600*u(23,Lsel,PA,2) + 226600*u(23,Lsel,KI,2) =L= 0 ; (LHS = 0)
     
Sold_Prod(Lsel,3)..  - y(Lsel,3) + 10609*u(2,Lsel,EU,3) + 10609*u(2,Lsel,IE,3) + 10609*u(2,Lsel,PA,3) + 10609*u(2,Lsel,KI,3) + 21218*u(3,Lsel,EU,3) + 21218*u(3,Lsel,IE,3) + 21218*u(3,Lsel,PA,3) + 21218*u(3,Lsel,KI,3) + 31827*u(4,Lsel,EU,3)
     
      + 31827*u(4,Lsel,IE,3) + 31827*u(4,Lsel,PA,3) + 31827*u(4,Lsel,KI,3) + 42436*u(5,Lsel,EU,3) + 42436*u(5,Lsel,IE,3) + 42436*u(5,Lsel,PA,3) + 42436*u(5,Lsel,KI,3) + 53045*u(6,Lsel,EU,3) + 53045*u(6,Lsel,IE,3) + 53045*u(6,Lsel,PA,3)
     
      + 53045*u(6,Lsel,KI,3) + 63654*u(7,Lsel,EU,3) + 63654*u(7,Lsel,IE,3) + 63654*u(7,Lsel,PA,3) + 63654*u(7,Lsel,KI,3) + 74263*u(8,Lsel,EU,3) + 74263*u(8,Lsel,IE,3) + 74263*u(8,Lsel,PA,3) + 74263*u(8,Lsel,KI,3) + 84872*u(9,Lsel,EU,3)
     
      + 84872*u(9,Lsel,IE,3) + 84872*u(9,Lsel,PA,3) + 84872*u(9,Lsel,KI,3) + 95481*u(10,Lsel,EU,3) + 95481*u(10,Lsel,IE,3) + 95481*u(10,Lsel,PA,3) + 95481*u(10,Lsel,KI,3) + 106090*u(11,Lsel,EU,3) + 106090*u(11,Lsel,IE,3) + 106090*u(11,Lsel,PA,3)
     
      + 106090*u(11,Lsel,KI,3) + 116699*u(12,Lsel,EU,3) + 116699*u(12,Lsel,IE,3) + 116699*u(12,Lsel,PA,3) + 116699*u(12,Lsel,KI,3) + 127308*u(13,Lsel,EU,3) + 127308*u(13,Lsel,IE,3) + 127308*u(13,Lsel,PA,3) + 127308*u(13,Lsel,KI,3) + 137917*u(14,Lsel,EU,3)
     
      + 137917*u(14,Lsel,IE,3) + 137917*u(14,Lsel,PA,3) + 137917*u(14,Lsel,KI,3) + 148526*u(15,Lsel,EU,3) + 148526*u(15,Lsel,IE,3) + 148526*u(15,Lsel,PA,3) + 148526*u(15,Lsel,KI,3) + 159135*u(16,Lsel,EU,3) + 159135*u(16,Lsel,IE,3) + 159135*u(16,Lsel,PA,3)
     
      + 159135*u(16,Lsel,KI,3) + 169744*u(17,Lsel,EU,3) + 169744*u(17,Lsel,IE,3) + 169744*u(17,Lsel,PA,3) + 169744*u(17,Lsel,KI,3) + 180353*u(18,Lsel,EU,3) + 180353*u(18,Lsel,IE,3) + 180353*u(18,Lsel,PA,3) + 180353*u(18,Lsel,KI,3) + 190962*u(19,Lsel,EU,3)
     
      + 190962*u(19,Lsel,IE,3) + 190962*u(19,Lsel,PA,3) + 190962*u(19,Lsel,KI,3) + 201571*u(20,Lsel,EU,3) + 201571*u(20,Lsel,IE,3) + 201571*u(20,Lsel,PA,3) + 201571*u(20,Lsel,KI,3) + 212180*u(21,Lsel,EU,3) + 212180*u(21,Lsel,IE,3) + 212180*u(21,Lsel,PA,3)
     
      + 212180*u(21,Lsel,KI,3) + 222789*u(22,Lsel,EU,3) + 222789*u(22,Lsel,IE,3) + 222789*u(22,Lsel,PA,3) + 222789*u(22,Lsel,KI,3) + 233398*u(23,Lsel,EU,3) + 233398*u(23,Lsel,IE,3) + 233398*u(23,Lsel,PA,3) + 233398*u(23,Lsel,KI,3) =L= 0 ; (LHS = 0)
     
Sold_Prod(Pap,1)..  - y(Pap,1) + 10000*u(2,Pap,EU,1) + 10000*u(2,Pap,IE,1) + 10000*u(2,Pap,PA,1) + 10000*u(2,Pap,KI,1) + 20000*u(3,Pap,EU,1) + 20000*u(3,Pap,IE,1) + 20000*u(3,Pap,PA,1) + 20000*u(3,Pap,KI,1) + 30000*u(4,Pap,EU,1) + 30000*u(4,Pap,IE,1)
     
      + 30000*u(4,Pap,PA,1) + 30000*u(4,Pap,KI,1) + 40000*u(5,Pap,EU,1) + 40000*u(5,Pap,IE,1) + 40000*u(5,Pap,PA,1) + 40000*u(5,Pap,KI,1) + 50000*u(6,Pap,EU,1) + 50000*u(6,Pap,IE,1) + 50000*u(6,Pap,PA,1) + 50000*u(6,Pap,KI,1) + 60000*u(7,Pap,EU,1)
     
      + 60000*u(7,Pap,IE,1) + 60000*u(7,Pap,PA,1) + 60000*u(7,Pap,KI,1) + 70000*u(8,Pap,EU,1) + 70000*u(8,Pap,IE,1) + 70000*u(8,Pap,PA,1) + 70000*u(8,Pap,KI,1) + 80000*u(9,Pap,EU,1) + 80000*u(9,Pap,IE,1) + 80000*u(9,Pap,PA,1) + 80000*u(9,Pap,KI,1)
     
      + 90000*u(10,Pap,EU,1) + 90000*u(10,Pap,IE,1) + 90000*u(10,Pap,PA,1) + 90000*u(10,Pap,KI,1) + 100000*u(11,Pap,EU,1) + 100000*u(11,Pap,IE,1) + 100000*u(11,Pap,PA,1) + 100000*u(11,Pap,KI,1) + 110000*u(12,Pap,EU,1) + 110000*u(12,Pap,IE,1)
     
      + 110000*u(12,Pap,PA,1) + 110000*u(12,Pap,KI,1) + 120000*u(13,Pap,EU,1) + 120000*u(13,Pap,IE,1) + 120000*u(13,Pap,PA,1) + 120000*u(13,Pap,KI,1) + 130000*u(14,Pap,EU,1) + 130000*u(14,Pap,IE,1) + 130000*u(14,Pap,PA,1) + 130000*u(14,Pap,KI,1)
     
      + 140000*u(15,Pap,EU,1) + 140000*u(15,Pap,IE,1) + 140000*u(15,Pap,PA,1) + 140000*u(15,Pap,KI,1) + 150000*u(16,Pap,EU,1) + 150000*u(16,Pap,IE,1) + 150000*u(16,Pap,PA,1) + 150000*u(16,Pap,KI,1) + 160000*u(17,Pap,EU,1) + 160000*u(17,Pap,IE,1)
     
      + 160000*u(17,Pap,PA,1) + 160000*u(17,Pap,KI,1) + 170000*u(18,Pap,EU,1) + 170000*u(18,Pap,IE,1) + 170000*u(18,Pap,PA,1) + 170000*u(18,Pap,KI,1) + 180000*u(19,Pap,EU,1) + 180000*u(19,Pap,IE,1) + 180000*u(19,Pap,PA,1) + 180000*u(19,Pap,KI,1)
     
      + 190000*u(20,Pap,EU,1) + 190000*u(20,Pap,IE,1) + 190000*u(20,Pap,PA,1) + 190000*u(20,Pap,KI,1) + 200000*u(21,Pap,EU,1) + 200000*u(21,Pap,IE,1) + 200000*u(21,Pap,PA,1) + 200000*u(21,Pap,KI,1) + 210000*u(22,Pap,EU,1) + 210000*u(22,Pap,IE,1)
     
      + 210000*u(22,Pap,PA,1) + 210000*u(22,Pap,KI,1) + 220000*u(23,Pap,EU,1) + 220000*u(23,Pap,IE,1) + 220000*u(23,Pap,PA,1) + 220000*u(23,Pap,KI,1) =L= 0 ; (LHS = 0)
     
Sold_Prod(Pap,2)..  - y(Pap,2) + 10350*u(2,Pap,EU,2) + 10350*u(2,Pap,IE,2) + 10350*u(2,Pap,PA,2) + 10350*u(2,Pap,KI,2) + 20700*u(3,Pap,EU,2) + 20700*u(3,Pap,IE,2) + 20700*u(3,Pap,PA,2) + 20700*u(3,Pap,KI,2) + 31050*u(4,Pap,EU,2) + 31050*u(4,Pap,IE,2)
     
      + 31050*u(4,Pap,PA,2) + 31050*u(4,Pap,KI,2) + 41400*u(5,Pap,EU,2) + 41400*u(5,Pap,IE,2) + 41400*u(5,Pap,PA,2) + 41400*u(5,Pap,KI,2) + 51750*u(6,Pap,EU,2) + 51750*u(6,Pap,IE,2) + 51750*u(6,Pap,PA,2) + 51750*u(6,Pap,KI,2) + 62100*u(7,Pap,EU,2)
     
      + 62100*u(7,Pap,IE,2) + 62100*u(7,Pap,PA,2) + 62100*u(7,Pap,KI,2) + 72450*u(8,Pap,EU,2) + 72450*u(8,Pap,IE,2) + 72450*u(8,Pap,PA,2) + 72450*u(8,Pap,KI,2) + 82800*u(9,Pap,EU,2) + 82800*u(9,Pap,IE,2) + 82800*u(9,Pap,PA,2) + 82800*u(9,Pap,KI,2)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 23:25:38 Page 25
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 433


     Sold_Prod  =L=  we cant sell more than we produce in each year     
     
      + 93150*u(10,Pap,EU,2) + 93150*u(10,Pap,IE,2) + 93150*u(10,Pap,PA,2) + 93150*u(10,Pap,KI,2) + 103500*u(11,Pap,EU,2) + 103500*u(11,Pap,IE,2) + 103500*u(11,Pap,PA,2) + 103500*u(11,Pap,KI,2) + 113850*u(12,Pap,EU,2) + 113850*u(12,Pap,IE,2)
     
      + 113850*u(12,Pap,PA,2) + 113850*u(12,Pap,KI,2) + 124200*u(13,Pap,EU,2) + 124200*u(13,Pap,IE,2) + 124200*u(13,Pap,PA,2) + 124200*u(13,Pap,KI,2) + 134550*u(14,Pap,EU,2) + 134550*u(14,Pap,IE,2) + 134550*u(14,Pap,PA,2) + 134550*u(14,Pap,KI,2)
     
      + 144900*u(15,Pap,EU,2) + 144900*u(15,Pap,IE,2) + 144900*u(15,Pap,PA,2) + 144900*u(15,Pap,KI,2) + 155250*u(16,Pap,EU,2) + 155250*u(16,Pap,IE,2) + 155250*u(16,Pap,PA,2) + 155250*u(16,Pap,KI,2) + 165600*u(17,Pap,EU,2) + 165600*u(17,Pap,IE,2)
     
      + 165600*u(17,Pap,PA,2) + 165600*u(17,Pap,KI,2) + 175950*u(18,Pap,EU,2) + 175950*u(18,Pap,IE,2) + 175950*u(18,Pap,PA,2) + 175950*u(18,Pap,KI,2) + 186300*u(19,Pap,EU,2) + 186300*u(19,Pap,IE,2) + 186300*u(19,Pap,PA,2) + 186300*u(19,Pap,KI,2)
     
      + 196650*u(20,Pap,EU,2) + 196650*u(20,Pap,IE,2) + 196650*u(20,Pap,PA,2) + 196650*u(20,Pap,KI,2) + 207000*u(21,Pap,EU,2) + 207000*u(21,Pap,IE,2) + 207000*u(21,Pap,PA,2) + 207000*u(21,Pap,KI,2) + 217350*u(22,Pap,EU,2) + 217350*u(22,Pap,IE,2)
     
      + 217350*u(22,Pap,PA,2) + 217350*u(22,Pap,KI,2) + 227700*u(23,Pap,EU,2) + 227700*u(23,Pap,IE,2) + 227700*u(23,Pap,PA,2) + 227700*u(23,Pap,KI,2) =L= 0 ; (LHS = 0)
     
Sold_Prod(Pap,3)..  - y(Pap,3) + 10712.25*u(2,Pap,EU,3) + 10712.25*u(2,Pap,IE,3) + 10712.25*u(2,Pap,PA,3) + 10712.25*u(2,Pap,KI,3) + 21424.5*u(3,Pap,EU,3) + 21424.5*u(3,Pap,IE,3) + 21424.5*u(3,Pap,PA,3) + 21424.5*u(3,Pap,KI,3) + 32136.75*u(4,Pap,EU,3)
     
      + 32136.75*u(4,Pap,IE,3) + 32136.75*u(4,Pap,PA,3) + 32136.75*u(4,Pap,KI,3) + 42849*u(5,Pap,EU,3) + 42849*u(5,Pap,IE,3) + 42849*u(5,Pap,PA,3) + 42849*u(5,Pap,KI,3) + 53561.25*u(6,Pap,EU,3) + 53561.25*u(6,Pap,IE,3) + 53561.25*u(6,Pap,PA,3)
     
      + 53561.25*u(6,Pap,KI,3) + 64273.5*u(7,Pap,EU,3) + 64273.5*u(7,Pap,IE,3) + 64273.5*u(7,Pap,PA,3) + 64273.5*u(7,Pap,KI,3) + 74985.75*u(8,Pap,EU,3) + 74985.75*u(8,Pap,IE,3) + 74985.75*u(8,Pap,PA,3) + 74985.75*u(8,Pap,KI,3) + 85698*u(9,Pap,EU,3)
     
      + 85698*u(9,Pap,IE,3) + 85698*u(9,Pap,PA,3) + 85698*u(9,Pap,KI,3) + 96410.25*u(10,Pap,EU,3) + 96410.25*u(10,Pap,IE,3) + 96410.25*u(10,Pap,PA,3) + 96410.25*u(10,Pap,KI,3) + 107122.5*u(11,Pap,EU,3) + 107122.5*u(11,Pap,IE,3) + 107122.5*u(11,Pap,PA,3)
     
      + 107122.5*u(11,Pap,KI,3) + 117834.75*u(12,Pap,EU,3) + 117834.75*u(12,Pap,IE,3) + 117834.75*u(12,Pap,PA,3) + 117834.75*u(12,Pap,KI,3) + 128547*u(13,Pap,EU,3) + 128547*u(13,Pap,IE,3) + 128547*u(13,Pap,PA,3) + 128547*u(13,Pap,KI,3)
     
      + 139259.25*u(14,Pap,EU,3) + 139259.25*u(14,Pap,IE,3) + 139259.25*u(14,Pap,PA,3) + 139259.25*u(14,Pap,KI,3) + 149971.5*u(15,Pap,EU,3) + 149971.5*u(15,Pap,IE,3) + 149971.5*u(15,Pap,PA,3) + 149971.5*u(15,Pap,KI,3) + 160683.75*u(16,Pap,EU,3)
     
      + 160683.75*u(16,Pap,IE,3) + 160683.75*u(16,Pap,PA,3) + 160683.75*u(16,Pap,KI,3) + 171396*u(17,Pap,EU,3) + 171396*u(17,Pap,IE,3) + 171396*u(17,Pap,PA,3) + 171396*u(17,Pap,KI,3) + 182108.25*u(18,Pap,EU,3) + 182108.25*u(18,Pap,IE,3)
     
      + 182108.25*u(18,Pap,PA,3) + 182108.25*u(18,Pap,KI,3) + 192820.5*u(19,Pap,EU,3) + 192820.5*u(19,Pap,IE,3) + 192820.5*u(19,Pap,PA,3) + 192820.5*u(19,Pap,KI,3) + 203532.75*u(20,Pap,EU,3) + 203532.75*u(20,Pap,IE,3) + 203532.75*u(20,Pap,PA,3)
     
      + 203532.75*u(20,Pap,KI,3) + 214245*u(21,Pap,EU,3) + 214245*u(21,Pap,IE,3) + 214245*u(21,Pap,PA,3) + 214245*u(21,Pap,KI,3) + 224957.25*u(22,Pap,EU,3) + 224957.25*u(22,Pap,IE,3) + 224957.25*u(22,Pap,PA,3) + 224957.25*u(22,Pap,KI,3)
     
      + 235669.5*u(23,Pap,EU,3) + 235669.5*u(23,Pap,IE,3) + 235669.5*u(23,Pap,PA,3) + 235669.5*u(23,Pap,KI,3) =L= 0 ; (LHS = 0)
     

---- timber_bought  =E=  amount of timber i bought in each year

timber_bought(Mat,1)..  - 10000*r(2,Mat,1) - 20000*r(3,Mat,1) - 30000*r(4,Mat,1) - 40000*r(5,Mat,1) - 50000*r(6,Mat,1) - 60000*r(7,Mat,1) - 70000*r(8,Mat,1) - 80000*r(9,Mat,1) - 90000*r(10,Mat,1) - 100000*r(11,Mat,1) - 110000*r(12,Mat,1)
     
      - 120000*r(13,Mat,1) - 130000*r(14,Mat,1) - 140000*r(15,Mat,1) - 150000*r(16,Mat,1) - 160000*r(17,Mat,1) - 170000*r(18,Mat,1) - 180000*r(19,Mat,1) - 190000*r(20,Mat,1) - 200000*r(21,Mat,1) - 210000*r(22,Mat,1) - 220000*r(23,Mat,1)
     
      - 230000*r(24,Mat,1) - 240000*r(25,Mat,1) - 250000*r(26,Mat,1) - 260000*r(27,Mat,1) - 270000*r(28,Mat,1) - 280000*r(29,Mat,1) - 290000*r(30,Mat,1) - 300000*r(31,Mat,1) - 310000*r(32,Mat,1) - 320000*r(33,Mat,1) - 330000*r(34,Mat,1)
     
      - 340000*r(35,Mat,1) - 350000*r(36,Mat,1) - 360000*r(37,Mat,1) - 370000*r(38,Mat,1) - 380000*r(39,Mat,1) - 390000*r(40,Mat,1) - 400000*r(41,Mat,1) - 410000*r(42,Mat,1) - 420000*r(43,Mat,1) - 430000*r(44,Mat,1) - 440000*r(45,Mat,1)
     
      - 450000*r(46,Mat,1) - 460000*r(47,Mat,1) - 470000*r(48,Mat,1) - 480000*r(49,Mat,1) - 490000*r(50,Mat,1) - 500000*r(51,Mat,1) - 510000*r(52,Mat,1) - 520000*r(53,Mat,1) - 530000*r(54,Mat,1) - 540000*r(55,Mat,1) - 550000*r(56,Mat,1)
     
      - 560000*r(57,Mat,1) - 570000*r(58,Mat,1) - 580000*r(59,Mat,1) - 590000*r(60,Mat,1) - 600000*r(61,Mat,1) - 610000*r(62,Mat,1) - 620000*r(63,Mat,1) - 630000*r(64,Mat,1) - 640000*r(65,Mat,1) - 650000*r(66,Mat,1) - 660000*r(67,Mat,1)
     
      - 670000*r(68,Mat,1) - 680000*r(69,Mat,1) - 690000*r(70,Mat,1) - 700000*r(71,Mat,1) - 710000*r(72,Mat,1) - 720000*r(73,Mat,1) - 730000*r(74,Mat,1) - 740000*r(75,Mat,1) - 750000*r(76,Mat,1) - 760000*r(77,Mat,1) - 770000*r(78,Mat,1)
     
      - 780000*r(79,Mat,1) - 790000*r(80,Mat,1) - 800000*r(81,Mat,1) - 810000*r(82,Mat,1) - 820000*r(83,Mat,1) - 830000*r(84,Mat,1) - 840000*r(85,Mat,1) - 850000*r(86,Mat,1) - 860000*r(87,Mat,1) - 870000*r(88,Mat,1) - 880000*r(89,Mat,1)
     
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 23:25:38 Page 26
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 433


     timber_bought  =E=  amount of timber i bought in each year     
     
      - 890000*r(90,Mat,1) - 900000*r(91,Mat,1) - 910000*r(92,Mat,1) - 920000*r(93,Mat,1) - 930000*r(94,Mat,1) - 940000*r(95,Mat,1) - 950000*r(96,Mat,1) - 960000*r(97,Mat,1) - 970000*r(98,Mat,1) - 980000*r(99,Mat,1) - 990000*r(100,Mat,1)
     
      - 1000000*r(101,Mat,1) - 1010000*r(102,Mat,1) - 1020000*r(103,Mat,1) - 1030000*r(104,Mat,1) - 1040000*r(105,Mat,1) - 1050000*r(106,Mat,1) - 1060000*r(107,Mat,1) + b(Mat,1) =E= 0 ; (LHS = 0)
     
timber_bought(Mat,2)..  - 10000*r(2,Mat,2) - 20000*r(3,Mat,2) - 30000*r(4,Mat,2) - 40000*r(5,Mat,2) - 50000*r(6,Mat,2) - 60000*r(7,Mat,2) - 70000*r(8,Mat,2) - 80000*r(9,Mat,2) - 90000*r(10,Mat,2) - 100000*r(11,Mat,2) - 110000*r(12,Mat,2)
     
      - 120000*r(13,Mat,2) - 130000*r(14,Mat,2) - 140000*r(15,Mat,2) - 150000*r(16,Mat,2) - 160000*r(17,Mat,2) - 170000*r(18,Mat,2) - 180000*r(19,Mat,2) - 190000*r(20,Mat,2) - 200000*r(21,Mat,2) - 210000*r(22,Mat,2) - 220000*r(23,Mat,2)
     
      - 230000*r(24,Mat,2) - 240000*r(25,Mat,2) - 250000*r(26,Mat,2) - 260000*r(27,Mat,2) - 270000*r(28,Mat,2) - 280000*r(29,Mat,2) - 290000*r(30,Mat,2) - 300000*r(31,Mat,2) - 310000*r(32,Mat,2) - 320000*r(33,Mat,2) - 330000*r(34,Mat,2)
     
      - 340000*r(35,Mat,2) - 350000*r(36,Mat,2) - 360000*r(37,Mat,2) - 370000*r(38,Mat,2) - 380000*r(39,Mat,2) - 390000*r(40,Mat,2) - 400000*r(41,Mat,2) - 410000*r(42,Mat,2) - 420000*r(43,Mat,2) - 430000*r(44,Mat,2) - 440000*r(45,Mat,2)
     
      - 450000*r(46,Mat,2) - 460000*r(47,Mat,2) - 470000*r(48,Mat,2) - 480000*r(49,Mat,2) - 490000*r(50,Mat,2) - 500000*r(51,Mat,2) - 510000*r(52,Mat,2) - 520000*r(53,Mat,2) - 530000*r(54,Mat,2) - 540000*r(55,Mat,2) - 550000*r(56,Mat,2)
     
      - 560000*r(57,Mat,2) - 570000*r(58,Mat,2) - 580000*r(59,Mat,2) - 590000*r(60,Mat,2) - 600000*r(61,Mat,2) - 610000*r(62,Mat,2) - 620000*r(63,Mat,2) - 630000*r(64,Mat,2) - 640000*r(65,Mat,2) - 650000*r(66,Mat,2) - 660000*r(67,Mat,2)
     
      - 670000*r(68,Mat,2) - 680000*r(69,Mat,2) - 690000*r(70,Mat,2) - 700000*r(71,Mat,2) - 710000*r(72,Mat,2) - 720000*r(73,Mat,2) - 730000*r(74,Mat,2) - 740000*r(75,Mat,2) - 750000*r(76,Mat,2) - 760000*r(77,Mat,2) - 770000*r(78,Mat,2)
     
      - 780000*r(79,Mat,2) - 790000*r(80,Mat,2) - 800000*r(81,Mat,2) - 810000*r(82,Mat,2) - 820000*r(83,Mat,2) - 830000*r(84,Mat,2) - 840000*r(85,Mat,2) - 850000*r(86,Mat,2) - 860000*r(87,Mat,2) - 870000*r(88,Mat,2) - 880000*r(89,Mat,2)
     
      - 890000*r(90,Mat,2) - 900000*r(91,Mat,2) - 910000*r(92,Mat,2) - 920000*r(93,Mat,2) - 930000*r(94,Mat,2) - 940000*r(95,Mat,2) - 950000*r(96,Mat,2) - 960000*r(97,Mat,2) - 970000*r(98,Mat,2) - 980000*r(99,Mat,2) - 990000*r(100,Mat,2)
     
      - 1000000*r(101,Mat,2) - 1010000*r(102,Mat,2) - 1020000*r(103,Mat,2) - 1030000*r(104,Mat,2) - 1040000*r(105,Mat,2) - 1050000*r(106,Mat,2) - 1060000*r(107,Mat,2) + b(Mat,2) =E= 0 ; (LHS = 0)
     
timber_bought(Mat,3)..  - 10000*r(2,Mat,3) - 20000*r(3,Mat,3) - 30000*r(4,Mat,3) - 40000*r(5,Mat,3) - 50000*r(6,Mat,3) - 60000*r(7,Mat,3) - 70000*r(8,Mat,3) - 80000*r(9,Mat,3) - 90000*r(10,Mat,3) - 100000*r(11,Mat,3) - 110000*r(12,Mat,3)
     
      - 120000*r(13,Mat,3) - 130000*r(14,Mat,3) - 140000*r(15,Mat,3) - 150000*r(16,Mat,3) - 160000*r(17,Mat,3) - 170000*r(18,Mat,3) - 180000*r(19,Mat,3) - 190000*r(20,Mat,3) - 200000*r(21,Mat,3) - 210000*r(22,Mat,3) - 220000*r(23,Mat,3)
     
      - 230000*r(24,Mat,3) - 240000*r(25,Mat,3) - 250000*r(26,Mat,3) - 260000*r(27,Mat,3) - 270000*r(28,Mat,3) - 280000*r(29,Mat,3) - 290000*r(30,Mat,3) - 300000*r(31,Mat,3) - 310000*r(32,Mat,3) - 320000*r(33,Mat,3) - 330000*r(34,Mat,3)
     
      - 340000*r(35,Mat,3) - 350000*r(36,Mat,3) - 360000*r(37,Mat,3) - 370000*r(38,Mat,3) - 380000*r(39,Mat,3) - 390000*r(40,Mat,3) - 400000*r(41,Mat,3) - 410000*r(42,Mat,3) - 420000*r(43,Mat,3) - 430000*r(44,Mat,3) - 440000*r(45,Mat,3)
     
      - 450000*r(46,Mat,3) - 460000*r(47,Mat,3) - 470000*r(48,Mat,3) - 480000*r(49,Mat,3) - 490000*r(50,Mat,3) - 500000*r(51,Mat,3) - 510000*r(52,Mat,3) - 520000*r(53,Mat,3) - 530000*r(54,Mat,3) - 540000*r(55,Mat,3) - 550000*r(56,Mat,3)
     
      - 560000*r(57,Mat,3) - 570000*r(58,Mat,3) - 580000*r(59,Mat,3) - 590000*r(60,Mat,3) - 600000*r(61,Mat,3) - 610000*r(62,Mat,3) - 620000*r(63,Mat,3) - 630000*r(64,Mat,3) - 640000*r(65,Mat,3) - 650000*r(66,Mat,3) - 660000*r(67,Mat,3)
     
      - 670000*r(68,Mat,3) - 680000*r(69,Mat,3) - 690000*r(70,Mat,3) - 700000*r(71,Mat,3) - 710000*r(72,Mat,3) - 720000*r(73,Mat,3) - 730000*r(74,Mat,3) - 740000*r(75,Mat,3) - 750000*r(76,Mat,3) - 760000*r(77,Mat,3) - 770000*r(78,Mat,3)
     
      - 780000*r(79,Mat,3) - 790000*r(80,Mat,3) - 800000*r(81,Mat,3) - 810000*r(82,Mat,3) - 820000*r(83,Mat,3) - 830000*r(84,Mat,3) - 840000*r(85,Mat,3) - 850000*r(86,Mat,3) - 860000*r(87,Mat,3) - 870000*r(88,Mat,3) - 880000*r(89,Mat,3)
     
      - 890000*r(90,Mat,3) - 900000*r(91,Mat,3) - 910000*r(92,Mat,3) - 920000*r(93,Mat,3) - 930000*r(94,Mat,3) - 940000*r(95,Mat,3) - 950000*r(96,Mat,3) - 960000*r(97,Mat,3) - 970000*r(98,Mat,3) - 980000*r(99,Mat,3) - 990000*r(100,Mat,3)
     
      - 1000000*r(101,Mat,3) - 1010000*r(102,Mat,3) - 1020000*r(103,Mat,3) - 1030000*r(104,Mat,3) - 1040000*r(105,Mat,3) - 1050000*r(106,Mat,3) - 1060000*r(107,Mat,3) + b(Mat,3) =E= 0 ; (LHS = 0)
     
timber_bought(Kut,1)..  - 10000*r(2,Kut,1) - 20000*r(3,Kut,1) - 30000*r(4,Kut,1) - 40000*r(5,Kut,1) - 50000*r(6,Kut,1) - 60000*r(7,Kut,1) - 70000*r(8,Kut,1) - 80000*r(9,Kut,1) - 90000*r(10,Kut,1) - 100000*r(11,Kut,1) - 110000*r(12,Kut,1)
     
      - 120000*r(13,Kut,1) - 130000*r(14,Kut,1) - 140000*r(15,Kut,1) - 150000*r(16,Kut,1) - 160000*r(17,Kut,1) - 170000*r(18,Kut,1) - 180000*r(19,Kut,1) - 190000*r(20,Kut,1) - 200000*r(21,Kut,1) - 210000*r(22,Kut,1) - 220000*r(23,Kut,1)
     
      - 230000*r(24,Kut,1) - 240000*r(25,Kut,1) - 250000*r(26,Kut,1) - 260000*r(27,Kut,1) - 270000*r(28,Kut,1) - 280000*r(29,Kut,1) - 290000*r(30,Kut,1) - 300000*r(31,Kut,1) - 310000*r(32,Kut,1) - 320000*r(33,Kut,1) - 330000*r(34,Kut,1)
     
      - 340000*r(35,Kut,1) - 350000*r(36,Kut,1) - 360000*r(37,Kut,1) - 370000*r(38,Kut,1) - 380000*r(39,Kut,1) - 390000*r(40,Kut,1) - 400000*r(41,Kut,1) - 410000*r(42,Kut,1) - 420000*r(43,Kut,1) - 430000*r(44,Kut,1) - 440000*r(45,Kut,1)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 23:25:38 Page 27
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 433


     timber_bought  =E=  amount of timber i bought in each year     
     
      - 450000*r(46,Kut,1) - 460000*r(47,Kut,1) - 470000*r(48,Kut,1) - 480000*r(49,Kut,1) - 490000*r(50,Kut,1) - 500000*r(51,Kut,1) - 510000*r(52,Kut,1) - 520000*r(53,Kut,1) - 530000*r(54,Kut,1) - 540000*r(55,Kut,1) - 550000*r(56,Kut,1)
     
      - 560000*r(57,Kut,1) - 570000*r(58,Kut,1) - 580000*r(59,Kut,1) - 590000*r(60,Kut,1) - 600000*r(61,Kut,1) - 610000*r(62,Kut,1) - 620000*r(63,Kut,1) - 630000*r(64,Kut,1) - 640000*r(65,Kut,1) - 650000*r(66,Kut,1) - 660000*r(67,Kut,1)
     
      - 670000*r(68,Kut,1) - 680000*r(69,Kut,1) - 690000*r(70,Kut,1) - 700000*r(71,Kut,1) - 710000*r(72,Kut,1) - 720000*r(73,Kut,1) - 730000*r(74,Kut,1) - 740000*r(75,Kut,1) - 750000*r(76,Kut,1) - 760000*r(77,Kut,1) - 770000*r(78,Kut,1)
     
      - 780000*r(79,Kut,1) - 790000*r(80,Kut,1) - 800000*r(81,Kut,1) - 810000*r(82,Kut,1) - 820000*r(83,Kut,1) - 830000*r(84,Kut,1) - 840000*r(85,Kut,1) - 850000*r(86,Kut,1) - 860000*r(87,Kut,1) - 870000*r(88,Kut,1) - 880000*r(89,Kut,1)
     
      - 890000*r(90,Kut,1) - 900000*r(91,Kut,1) - 910000*r(92,Kut,1) - 920000*r(93,Kut,1) - 930000*r(94,Kut,1) - 940000*r(95,Kut,1) - 950000*r(96,Kut,1) - 960000*r(97,Kut,1) - 970000*r(98,Kut,1) - 980000*r(99,Kut,1) - 990000*r(100,Kut,1)
     
      - 1000000*r(101,Kut,1) - 1010000*r(102,Kut,1) - 1020000*r(103,Kut,1) - 1030000*r(104,Kut,1) - 1040000*r(105,Kut,1) - 1050000*r(106,Kut,1) - 1060000*r(107,Kut,1) + b(Kut,1) =E= 0 ; (LHS = 0)
     
timber_bought(Kut,2)..  - 10000*r(2,Kut,2) - 20000*r(3,Kut,2) - 30000*r(4,Kut,2) - 40000*r(5,Kut,2) - 50000*r(6,Kut,2) - 60000*r(7,Kut,2) - 70000*r(8,Kut,2) - 80000*r(9,Kut,2) - 90000*r(10,Kut,2) - 100000*r(11,Kut,2) - 110000*r(12,Kut,2)
     
      - 120000*r(13,Kut,2) - 130000*r(14,Kut,2) - 140000*r(15,Kut,2) - 150000*r(16,Kut,2) - 160000*r(17,Kut,2) - 170000*r(18,Kut,2) - 180000*r(19,Kut,2) - 190000*r(20,Kut,2) - 200000*r(21,Kut,2) - 210000*r(22,Kut,2) - 220000*r(23,Kut,2)
     
      - 230000*r(24,Kut,2) - 240000*r(25,Kut,2) - 250000*r(26,Kut,2) - 260000*r(27,Kut,2) - 270000*r(28,Kut,2) - 280000*r(29,Kut,2) - 290000*r(30,Kut,2) - 300000*r(31,Kut,2) - 310000*r(32,Kut,2) - 320000*r(33,Kut,2) - 330000*r(34,Kut,2)
     
      - 340000*r(35,Kut,2) - 350000*r(36,Kut,2) - 360000*r(37,Kut,2) - 370000*r(38,Kut,2) - 380000*r(39,Kut,2) - 390000*r(40,Kut,2) - 400000*r(41,Kut,2) - 410000*r(42,Kut,2) - 420000*r(43,Kut,2) - 430000*r(44,Kut,2) - 440000*r(45,Kut,2)
     
      - 450000*r(46,Kut,2) - 460000*r(47,Kut,2) - 470000*r(48,Kut,2) - 480000*r(49,Kut,2) - 490000*r(50,Kut,2) - 500000*r(51,Kut,2) - 510000*r(52,Kut,2) - 520000*r(53,Kut,2) - 530000*r(54,Kut,2) - 540000*r(55,Kut,2) - 550000*r(56,Kut,2)
     
      - 560000*r(57,Kut,2) - 570000*r(58,Kut,2) - 580000*r(59,Kut,2) - 590000*r(60,Kut,2) - 600000*r(61,Kut,2) - 610000*r(62,Kut,2) - 620000*r(63,Kut,2) - 630000*r(64,Kut,2) - 640000*r(65,Kut,2) - 650000*r(66,Kut,2) - 660000*r(67,Kut,2)
     
      - 670000*r(68,Kut,2) - 680000*r(69,Kut,2) - 690000*r(70,Kut,2) - 700000*r(71,Kut,2) - 710000*r(72,Kut,2) - 720000*r(73,Kut,2) - 730000*r(74,Kut,2) - 740000*r(75,Kut,2) - 750000*r(76,Kut,2) - 760000*r(77,Kut,2) - 770000*r(78,Kut,2)
     
      - 780000*r(79,Kut,2) - 790000*r(80,Kut,2) - 800000*r(81,Kut,2) - 810000*r(82,Kut,2) - 820000*r(83,Kut,2) - 830000*r(84,Kut,2) - 840000*r(85,Kut,2) - 850000*r(86,Kut,2) - 860000*r(87,Kut,2) - 870000*r(88,Kut,2) - 880000*r(89,Kut,2)
     
      - 890000*r(90,Kut,2) - 900000*r(91,Kut,2) - 910000*r(92,Kut,2) - 920000*r(93,Kut,2) - 930000*r(94,Kut,2) - 940000*r(95,Kut,2) - 950000*r(96,Kut,2) - 960000*r(97,Kut,2) - 970000*r(98,Kut,2) - 980000*r(99,Kut,2) - 990000*r(100,Kut,2)
     
      - 1000000*r(101,Kut,2) - 1010000*r(102,Kut,2) - 1020000*r(103,Kut,2) - 1030000*r(104,Kut,2) - 1040000*r(105,Kut,2) - 1050000*r(106,Kut,2) - 1060000*r(107,Kut,2) + b(Kut,2) =E= 0 ; (LHS = 0)
     
timber_bought(Kut,3)..  - 10000*r(2,Kut,3) - 20000*r(3,Kut,3) - 30000*r(4,Kut,3) - 40000*r(5,Kut,3) - 50000*r(6,Kut,3) - 60000*r(7,Kut,3) - 70000*r(8,Kut,3) - 80000*r(9,Kut,3) - 90000*r(10,Kut,3) - 100000*r(11,Kut,3) - 110000*r(12,Kut,3)
     
      - 120000*r(13,Kut,3) - 130000*r(14,Kut,3) - 140000*r(15,Kut,3) - 150000*r(16,Kut,3) - 160000*r(17,Kut,3) - 170000*r(18,Kut,3) - 180000*r(19,Kut,3) - 190000*r(20,Kut,3) - 200000*r(21,Kut,3) - 210000*r(22,Kut,3) - 220000*r(23,Kut,3)
     
      - 230000*r(24,Kut,3) - 240000*r(25,Kut,3) - 250000*r(26,Kut,3) - 260000*r(27,Kut,3) - 270000*r(28,Kut,3) - 280000*r(29,Kut,3) - 290000*r(30,Kut,3) - 300000*r(31,Kut,3) - 310000*r(32,Kut,3) - 320000*r(33,Kut,3) - 330000*r(34,Kut,3)
     
      - 340000*r(35,Kut,3) - 350000*r(36,Kut,3) - 360000*r(37,Kut,3) - 370000*r(38,Kut,3) - 380000*r(39,Kut,3) - 390000*r(40,Kut,3) - 400000*r(41,Kut,3) - 410000*r(42,Kut,3) - 420000*r(43,Kut,3) - 430000*r(44,Kut,3) - 440000*r(45,Kut,3)
     
      - 450000*r(46,Kut,3) - 460000*r(47,Kut,3) - 470000*r(48,Kut,3) - 480000*r(49,Kut,3) - 490000*r(50,Kut,3) - 500000*r(51,Kut,3) - 510000*r(52,Kut,3) - 520000*r(53,Kut,3) - 530000*r(54,Kut,3) - 540000*r(55,Kut,3) - 550000*r(56,Kut,3)
     
      - 560000*r(57,Kut,3) - 570000*r(58,Kut,3) - 580000*r(59,Kut,3) - 590000*r(60,Kut,3) - 600000*r(61,Kut,3) - 610000*r(62,Kut,3) - 620000*r(63,Kut,3) - 630000*r(64,Kut,3) - 640000*r(65,Kut,3) - 650000*r(66,Kut,3) - 660000*r(67,Kut,3)
     
      - 670000*r(68,Kut,3) - 680000*r(69,Kut,3) - 690000*r(70,Kut,3) - 700000*r(71,Kut,3) - 710000*r(72,Kut,3) - 720000*r(73,Kut,3) - 730000*r(74,Kut,3) - 740000*r(75,Kut,3) - 750000*r(76,Kut,3) - 760000*r(77,Kut,3) - 770000*r(78,Kut,3)
     
      - 780000*r(79,Kut,3) - 790000*r(80,Kut,3) - 800000*r(81,Kut,3) - 810000*r(82,Kut,3) - 820000*r(83,Kut,3) - 830000*r(84,Kut,3) - 840000*r(85,Kut,3) - 850000*r(86,Kut,3) - 860000*r(87,Kut,3) - 870000*r(88,Kut,3) - 880000*r(89,Kut,3)
     
      - 890000*r(90,Kut,3) - 900000*r(91,Kut,3) - 910000*r(92,Kut,3) - 920000*r(93,Kut,3) - 930000*r(94,Kut,3) - 940000*r(95,Kut,3) - 950000*r(96,Kut,3) - 960000*r(97,Kut,3) - 970000*r(98,Kut,3) - 980000*r(99,Kut,3) - 990000*r(100,Kut,3)
     
      - 1000000*r(101,Kut,3) - 1010000*r(102,Kut,3) - 1020000*r(103,Kut,3) - 1030000*r(104,Kut,3) - 1040000*r(105,Kut,3) - 1050000*r(106,Kut,3) - 1060000*r(107,Kut,3) + b(Kut,3) =E= 0 ; (LHS = 0)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 23:25:38 Page 28
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 433


     timber_bought  =E=  amount of timber i bought in each year

timber_bought(Kot,1)..  - 10000*r(2,Kot,1) - 20000*r(3,Kot,1) - 30000*r(4,Kot,1) - 40000*r(5,Kot,1) - 50000*r(6,Kot,1) - 60000*r(7,Kot,1) - 70000*r(8,Kot,1) - 80000*r(9,Kot,1) - 90000*r(10,Kot,1) - 100000*r(11,Kot,1) - 110000*r(12,Kot,1)
     
      - 120000*r(13,Kot,1) - 130000*r(14,Kot,1) - 140000*r(15,Kot,1) - 150000*r(16,Kot,1) - 160000*r(17,Kot,1) - 170000*r(18,Kot,1) - 180000*r(19,Kot,1) - 190000*r(20,Kot,1) - 200000*r(21,Kot,1) - 210000*r(22,Kot,1) - 220000*r(23,Kot,1)
     
      - 230000*r(24,Kot,1) - 240000*r(25,Kot,1) - 250000*r(26,Kot,1) - 260000*r(27,Kot,1) - 270000*r(28,Kot,1) - 280000*r(29,Kot,1) - 290000*r(30,Kot,1) - 300000*r(31,Kot,1) - 310000*r(32,Kot,1) - 320000*r(33,Kot,1) - 330000*r(34,Kot,1)
     
      - 340000*r(35,Kot,1) - 350000*r(36,Kot,1) - 360000*r(37,Kot,1) - 370000*r(38,Kot,1) - 380000*r(39,Kot,1) - 390000*r(40,Kot,1) - 400000*r(41,Kot,1) - 410000*r(42,Kot,1) - 420000*r(43,Kot,1) - 430000*r(44,Kot,1) - 440000*r(45,Kot,1)
     
      - 450000*r(46,Kot,1) - 460000*r(47,Kot,1) - 470000*r(48,Kot,1) - 480000*r(49,Kot,1) - 490000*r(50,Kot,1) - 500000*r(51,Kot,1) - 510000*r(52,Kot,1) - 520000*r(53,Kot,1) - 530000*r(54,Kot,1) - 540000*r(55,Kot,1) - 550000*r(56,Kot,1)
     
      - 560000*r(57,Kot,1) - 570000*r(58,Kot,1) - 580000*r(59,Kot,1) - 590000*r(60,Kot,1) - 600000*r(61,Kot,1) - 610000*r(62,Kot,1) - 620000*r(63,Kot,1) - 630000*r(64,Kot,1) - 640000*r(65,Kot,1) - 650000*r(66,Kot,1) - 660000*r(67,Kot,1)
     
      - 670000*r(68,Kot,1) - 680000*r(69,Kot,1) - 690000*r(70,Kot,1) - 700000*r(71,Kot,1) - 710000*r(72,Kot,1) - 720000*r(73,Kot,1) - 730000*r(74,Kot,1) - 740000*r(75,Kot,1) - 750000*r(76,Kot,1) - 760000*r(77,Kot,1) - 770000*r(78,Kot,1)
     
      - 780000*r(79,Kot,1) - 790000*r(80,Kot,1) - 800000*r(81,Kot,1) - 810000*r(82,Kot,1) - 820000*r(83,Kot,1) - 830000*r(84,Kot,1) - 840000*r(85,Kot,1) - 850000*r(86,Kot,1) - 860000*r(87,Kot,1) - 870000*r(88,Kot,1) - 880000*r(89,Kot,1)
     
      - 890000*r(90,Kot,1) - 900000*r(91,Kot,1) - 910000*r(92,Kot,1) - 920000*r(93,Kot,1) - 930000*r(94,Kot,1) - 940000*r(95,Kot,1) - 950000*r(96,Kot,1) - 960000*r(97,Kot,1) - 970000*r(98,Kot,1) - 980000*r(99,Kot,1) - 990000*r(100,Kot,1)
     
      - 1000000*r(101,Kot,1) - 1010000*r(102,Kot,1) - 1020000*r(103,Kot,1) - 1030000*r(104,Kot,1) - 1040000*r(105,Kot,1) - 1050000*r(106,Kot,1) - 1060000*r(107,Kot,1) + b(Kot,1) =E= 0 ; (LHS = 0)
     
timber_bought(Kot,2)..  - 10000*r(2,Kot,2) - 20000*r(3,Kot,2) - 30000*r(4,Kot,2) - 40000*r(5,Kot,2) - 50000*r(6,Kot,2) - 60000*r(7,Kot,2) - 70000*r(8,Kot,2) - 80000*r(9,Kot,2) - 90000*r(10,Kot,2) - 100000*r(11,Kot,2) - 110000*r(12,Kot,2)
     
      - 120000*r(13,Kot,2) - 130000*r(14,Kot,2) - 140000*r(15,Kot,2) - 150000*r(16,Kot,2) - 160000*r(17,Kot,2) - 170000*r(18,Kot,2) - 180000*r(19,Kot,2) - 190000*r(20,Kot,2) - 200000*r(21,Kot,2) - 210000*r(22,Kot,2) - 220000*r(23,Kot,2)
     
      - 230000*r(24,Kot,2) - 240000*r(25,Kot,2) - 250000*r(26,Kot,2) - 260000*r(27,Kot,2) - 270000*r(28,Kot,2) - 280000*r(29,Kot,2) - 290000*r(30,Kot,2) - 300000*r(31,Kot,2) - 310000*r(32,Kot,2) - 320000*r(33,Kot,2) - 330000*r(34,Kot,2)
     
      - 340000*r(35,Kot,2) - 350000*r(36,Kot,2) - 360000*r(37,Kot,2) - 370000*r(38,Kot,2) - 380000*r(39,Kot,2) - 390000*r(40,Kot,2) - 400000*r(41,Kot,2) - 410000*r(42,Kot,2) - 420000*r(43,Kot,2) - 430000*r(44,Kot,2) - 440000*r(45,Kot,2)
     
      - 450000*r(46,Kot,2) - 460000*r(47,Kot,2) - 470000*r(48,Kot,2) - 480000*r(49,Kot,2) - 490000*r(50,Kot,2) - 500000*r(51,Kot,2) - 510000*r(52,Kot,2) - 520000*r(53,Kot,2) - 530000*r(54,Kot,2) - 540000*r(55,Kot,2) - 550000*r(56,Kot,2)
     
      - 560000*r(57,Kot,2) - 570000*r(58,Kot,2) - 580000*r(59,Kot,2) - 590000*r(60,Kot,2) - 600000*r(61,Kot,2) - 610000*r(62,Kot,2) - 620000*r(63,Kot,2) - 630000*r(64,Kot,2) - 640000*r(65,Kot,2) - 650000*r(66,Kot,2) - 660000*r(67,Kot,2)
     
      - 670000*r(68,Kot,2) - 680000*r(69,Kot,2) - 690000*r(70,Kot,2) - 700000*r(71,Kot,2) - 710000*r(72,Kot,2) - 720000*r(73,Kot,2) - 730000*r(74,Kot,2) - 740000*r(75,Kot,2) - 750000*r(76,Kot,2) - 760000*r(77,Kot,2) - 770000*r(78,Kot,2)
     
      - 780000*r(79,Kot,2) - 790000*r(80,Kot,2) - 800000*r(81,Kot,2) - 810000*r(82,Kot,2) - 820000*r(83,Kot,2) - 830000*r(84,Kot,2) - 840000*r(85,Kot,2) - 850000*r(86,Kot,2) - 860000*r(87,Kot,2) - 870000*r(88,Kot,2) - 880000*r(89,Kot,2)
     
      - 890000*r(90,Kot,2) - 900000*r(91,Kot,2) - 910000*r(92,Kot,2) - 920000*r(93,Kot,2) - 930000*r(94,Kot,2) - 940000*r(95,Kot,2) - 950000*r(96,Kot,2) - 960000*r(97,Kot,2) - 970000*r(98,Kot,2) - 980000*r(99,Kot,2) - 990000*r(100,Kot,2)
     
      - 1000000*r(101,Kot,2) - 1010000*r(102,Kot,2) - 1020000*r(103,Kot,2) - 1030000*r(104,Kot,2) - 1040000*r(105,Kot,2) - 1050000*r(106,Kot,2) - 1060000*r(107,Kot,2) + b(Kot,2) =E= 0 ; (LHS = 0)
     
timber_bought(Kot,3)..  - 10000*r(2,Kot,3) - 20000*r(3,Kot,3) - 30000*r(4,Kot,3) - 40000*r(5,Kot,3) - 50000*r(6,Kot,3) - 60000*r(7,Kot,3) - 70000*r(8,Kot,3) - 80000*r(9,Kot,3) - 90000*r(10,Kot,3) - 100000*r(11,Kot,3) - 110000*r(12,Kot,3)
     
      - 120000*r(13,Kot,3) - 130000*r(14,Kot,3) - 140000*r(15,Kot,3) - 150000*r(16,Kot,3) - 160000*r(17,Kot,3) - 170000*r(18,Kot,3) - 180000*r(19,Kot,3) - 190000*r(20,Kot,3) - 200000*r(21,Kot,3) - 210000*r(22,Kot,3) - 220000*r(23,Kot,3)
     
      - 230000*r(24,Kot,3) - 240000*r(25,Kot,3) - 250000*r(26,Kot,3) - 260000*r(27,Kot,3) - 270000*r(28,Kot,3) - 280000*r(29,Kot,3) - 290000*r(30,Kot,3) - 300000*r(31,Kot,3) - 310000*r(32,Kot,3) - 320000*r(33,Kot,3) - 330000*r(34,Kot,3)
     
      - 340000*r(35,Kot,3) - 350000*r(36,Kot,3) - 360000*r(37,Kot,3) - 370000*r(38,Kot,3) - 380000*r(39,Kot,3) - 390000*r(40,Kot,3) - 400000*r(41,Kot,3) - 410000*r(42,Kot,3) - 420000*r(43,Kot,3) - 430000*r(44,Kot,3) - 440000*r(45,Kot,3)
     
      - 450000*r(46,Kot,3) - 460000*r(47,Kot,3) - 470000*r(48,Kot,3) - 480000*r(49,Kot,3) - 490000*r(50,Kot,3) - 500000*r(51,Kot,3) - 510000*r(52,Kot,3) - 520000*r(53,Kot,3) - 530000*r(54,Kot,3) - 540000*r(55,Kot,3) - 550000*r(56,Kot,3)
     
      - 560000*r(57,Kot,3) - 570000*r(58,Kot,3) - 580000*r(59,Kot,3) - 590000*r(60,Kot,3) - 600000*r(61,Kot,3) - 610000*r(62,Kot,3) - 620000*r(63,Kot,3) - 630000*r(64,Kot,3) - 640000*r(65,Kot,3) - 650000*r(66,Kot,3) - 660000*r(67,Kot,3)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 23:25:38 Page 29
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 433


     timber_bought  =E=  amount of timber i bought in each year     
     
      - 670000*r(68,Kot,3) - 680000*r(69,Kot,3) - 690000*r(70,Kot,3) - 700000*r(71,Kot,3) - 710000*r(72,Kot,3) - 720000*r(73,Kot,3) - 730000*r(74,Kot,3) - 740000*r(75,Kot,3) - 750000*r(76,Kot,3) - 760000*r(77,Kot,3) - 770000*r(78,Kot,3)
     
      - 780000*r(79,Kot,3) - 790000*r(80,Kot,3) - 800000*r(81,Kot,3) - 810000*r(82,Kot,3) - 820000*r(83,Kot,3) - 830000*r(84,Kot,3) - 840000*r(85,Kot,3) - 850000*r(86,Kot,3) - 860000*r(87,Kot,3) - 870000*r(88,Kot,3) - 880000*r(89,Kot,3)
     
      - 890000*r(90,Kot,3) - 900000*r(91,Kot,3) - 910000*r(92,Kot,3) - 920000*r(93,Kot,3) - 930000*r(94,Kot,3) - 940000*r(95,Kot,3) - 950000*r(96,Kot,3) - 960000*r(97,Kot,3) - 970000*r(98,Kot,3) - 980000*r(99,Kot,3) - 990000*r(100,Kot,3)
     
      - 1000000*r(101,Kot,3) - 1010000*r(102,Kot,3) - 1020000*r(103,Kot,3) - 1030000*r(104,Kot,3) - 1040000*r(105,Kot,3) - 1050000*r(106,Kot,3) - 1060000*r(107,Kot,3) + b(Kot,3) =E= 0 ; (LHS = 0)
     
timber_bought(Mak,1)..  - 10000*r(2,Mak,1) - 20000*r(3,Mak,1) - 30000*r(4,Mak,1) - 40000*r(5,Mak,1) - 50000*r(6,Mak,1) - 60000*r(7,Mak,1) - 70000*r(8,Mak,1) - 80000*r(9,Mak,1) - 90000*r(10,Mak,1) - 100000*r(11,Mak,1) - 110000*r(12,Mak,1)
     
      - 120000*r(13,Mak,1) - 130000*r(14,Mak,1) - 140000*r(15,Mak,1) - 150000*r(16,Mak,1) - 160000*r(17,Mak,1) - 170000*r(18,Mak,1) - 180000*r(19,Mak,1) - 190000*r(20,Mak,1) - 200000*r(21,Mak,1) - 210000*r(22,Mak,1) - 220000*r(23,Mak,1)
     
      - 230000*r(24,Mak,1) - 240000*r(25,Mak,1) - 250000*r(26,Mak,1) - 260000*r(27,Mak,1) - 270000*r(28,Mak,1) - 280000*r(29,Mak,1) - 290000*r(30,Mak,1) - 300000*r(31,Mak,1) - 310000*r(32,Mak,1) - 320000*r(33,Mak,1) - 330000*r(34,Mak,1)
     
      - 340000*r(35,Mak,1) - 350000*r(36,Mak,1) - 360000*r(37,Mak,1) - 370000*r(38,Mak,1) - 380000*r(39,Mak,1) - 390000*r(40,Mak,1) - 400000*r(41,Mak,1) - 410000*r(42,Mak,1) - 420000*r(43,Mak,1) - 430000*r(44,Mak,1) - 440000*r(45,Mak,1)
     
      - 450000*r(46,Mak,1) - 460000*r(47,Mak,1) - 470000*r(48,Mak,1) - 480000*r(49,Mak,1) - 490000*r(50,Mak,1) - 500000*r(51,Mak,1) - 510000*r(52,Mak,1) - 520000*r(53,Mak,1) - 530000*r(54,Mak,1) - 540000*r(55,Mak,1) - 550000*r(56,Mak,1)
     
      - 560000*r(57,Mak,1) - 570000*r(58,Mak,1) - 580000*r(59,Mak,1) - 590000*r(60,Mak,1) - 600000*r(61,Mak,1) - 610000*r(62,Mak,1) - 620000*r(63,Mak,1) - 630000*r(64,Mak,1) - 640000*r(65,Mak,1) - 650000*r(66,Mak,1) - 660000*r(67,Mak,1)
     
      - 670000*r(68,Mak,1) - 680000*r(69,Mak,1) - 690000*r(70,Mak,1) - 700000*r(71,Mak,1) - 710000*r(72,Mak,1) - 720000*r(73,Mak,1) - 730000*r(74,Mak,1) - 740000*r(75,Mak,1) - 750000*r(76,Mak,1) - 760000*r(77,Mak,1) - 770000*r(78,Mak,1)
     
      - 780000*r(79,Mak,1) - 790000*r(80,Mak,1) - 800000*r(81,Mak,1) - 810000*r(82,Mak,1) - 820000*r(83,Mak,1) - 830000*r(84,Mak,1) - 840000*r(85,Mak,1) - 850000*r(86,Mak,1) - 860000*r(87,Mak,1) - 870000*r(88,Mak,1) - 880000*r(89,Mak,1)
     
      - 890000*r(90,Mak,1) - 900000*r(91,Mak,1) - 910000*r(92,Mak,1) - 920000*r(93,Mak,1) - 930000*r(94,Mak,1) - 940000*r(95,Mak,1) - 950000*r(96,Mak,1) - 960000*r(97,Mak,1) - 970000*r(98,Mak,1) - 980000*r(99,Mak,1) - 990000*r(100,Mak,1)
     
      - 1000000*r(101,Mak,1) - 1010000*r(102,Mak,1) - 1020000*r(103,Mak,1) - 1030000*r(104,Mak,1) - 1040000*r(105,Mak,1) - 1050000*r(106,Mak,1) - 1060000*r(107,Mak,1) + b(Mak,1) =E= 0 ; (LHS = 0)
     
timber_bought(Mak,2)..  - 10000*r(2,Mak,2) - 20000*r(3,Mak,2) - 30000*r(4,Mak,2) - 40000*r(5,Mak,2) - 50000*r(6,Mak,2) - 60000*r(7,Mak,2) - 70000*r(8,Mak,2) - 80000*r(9,Mak,2) - 90000*r(10,Mak,2) - 100000*r(11,Mak,2) - 110000*r(12,Mak,2)
     
      - 120000*r(13,Mak,2) - 130000*r(14,Mak,2) - 140000*r(15,Mak,2) - 150000*r(16,Mak,2) - 160000*r(17,Mak,2) - 170000*r(18,Mak,2) - 180000*r(19,Mak,2) - 190000*r(20,Mak,2) - 200000*r(21,Mak,2) - 210000*r(22,Mak,2) - 220000*r(23,Mak,2)
     
      - 230000*r(24,Mak,2) - 240000*r(25,Mak,2) - 250000*r(26,Mak,2) - 260000*r(27,Mak,2) - 270000*r(28,Mak,2) - 280000*r(29,Mak,2) - 290000*r(30,Mak,2) - 300000*r(31,Mak,2) - 310000*r(32,Mak,2) - 320000*r(33,Mak,2) - 330000*r(34,Mak,2)
     
      - 340000*r(35,Mak,2) - 350000*r(36,Mak,2) - 360000*r(37,Mak,2) - 370000*r(38,Mak,2) - 380000*r(39,Mak,2) - 390000*r(40,Mak,2) - 400000*r(41,Mak,2) - 410000*r(42,Mak,2) - 420000*r(43,Mak,2) - 430000*r(44,Mak,2) - 440000*r(45,Mak,2)
     
      - 450000*r(46,Mak,2) - 460000*r(47,Mak,2) - 470000*r(48,Mak,2) - 480000*r(49,Mak,2) - 490000*r(50,Mak,2) - 500000*r(51,Mak,2) - 510000*r(52,Mak,2) - 520000*r(53,Mak,2) - 530000*r(54,Mak,2) - 540000*r(55,Mak,2) - 550000*r(56,Mak,2)
     
      - 560000*r(57,Mak,2) - 570000*r(58,Mak,2) - 580000*r(59,Mak,2) - 590000*r(60,Mak,2) - 600000*r(61,Mak,2) - 610000*r(62,Mak,2) - 620000*r(63,Mak,2) - 630000*r(64,Mak,2) - 640000*r(65,Mak,2) - 650000*r(66,Mak,2) - 660000*r(67,Mak,2)
     
      - 670000*r(68,Mak,2) - 680000*r(69,Mak,2) - 690000*r(70,Mak,2) - 700000*r(71,Mak,2) - 710000*r(72,Mak,2) - 720000*r(73,Mak,2) - 730000*r(74,Mak,2) - 740000*r(75,Mak,2) - 750000*r(76,Mak,2) - 760000*r(77,Mak,2) - 770000*r(78,Mak,2)
     
      - 780000*r(79,Mak,2) - 790000*r(80,Mak,2) - 800000*r(81,Mak,2) - 810000*r(82,Mak,2) - 820000*r(83,Mak,2) - 830000*r(84,Mak,2) - 840000*r(85,Mak,2) - 850000*r(86,Mak,2) - 860000*r(87,Mak,2) - 870000*r(88,Mak,2) - 880000*r(89,Mak,2)
     
      - 890000*r(90,Mak,2) - 900000*r(91,Mak,2) - 910000*r(92,Mak,2) - 920000*r(93,Mak,2) - 930000*r(94,Mak,2) - 940000*r(95,Mak,2) - 950000*r(96,Mak,2) - 960000*r(97,Mak,2) - 970000*r(98,Mak,2) - 980000*r(99,Mak,2) - 990000*r(100,Mak,2)
     
      - 1000000*r(101,Mak,2) - 1010000*r(102,Mak,2) - 1020000*r(103,Mak,2) - 1030000*r(104,Mak,2) - 1040000*r(105,Mak,2) - 1050000*r(106,Mak,2) - 1060000*r(107,Mak,2) + b(Mak,2) =E= 0 ; (LHS = 0)
     
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 23:25:38 Page 30
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 433


     timber_bought  =E=  amount of timber i bought in each year

timber_bought(Mak,3)..  - 10000*r(2,Mak,3) - 20000*r(3,Mak,3) - 30000*r(4,Mak,3) - 40000*r(5,Mak,3) - 50000*r(6,Mak,3) - 60000*r(7,Mak,3) - 70000*r(8,Mak,3) - 80000*r(9,Mak,3) - 90000*r(10,Mak,3) - 100000*r(11,Mak,3) - 110000*r(12,Mak,3)
     
      - 120000*r(13,Mak,3) - 130000*r(14,Mak,3) - 140000*r(15,Mak,3) - 150000*r(16,Mak,3) - 160000*r(17,Mak,3) - 170000*r(18,Mak,3) - 180000*r(19,Mak,3) - 190000*r(20,Mak,3) - 200000*r(21,Mak,3) - 210000*r(22,Mak,3) - 220000*r(23,Mak,3)
     
      - 230000*r(24,Mak,3) - 240000*r(25,Mak,3) - 250000*r(26,Mak,3) - 260000*r(27,Mak,3) - 270000*r(28,Mak,3) - 280000*r(29,Mak,3) - 290000*r(30,Mak,3) - 300000*r(31,Mak,3) - 310000*r(32,Mak,3) - 320000*r(33,Mak,3) - 330000*r(34,Mak,3)
     
      - 340000*r(35,Mak,3) - 350000*r(36,Mak,3) - 360000*r(37,Mak,3) - 370000*r(38,Mak,3) - 380000*r(39,Mak,3) - 390000*r(40,Mak,3) - 400000*r(41,Mak,3) - 410000*r(42,Mak,3) - 420000*r(43,Mak,3) - 430000*r(44,Mak,3) - 440000*r(45,Mak,3)
     
      - 450000*r(46,Mak,3) - 460000*r(47,Mak,3) - 470000*r(48,Mak,3) - 480000*r(49,Mak,3) - 490000*r(50,Mak,3) - 500000*r(51,Mak,3) - 510000*r(52,Mak,3) - 520000*r(53,Mak,3) - 530000*r(54,Mak,3) - 540000*r(55,Mak,3) - 550000*r(56,Mak,3)
     
      - 560000*r(57,Mak,3) - 570000*r(58,Mak,3) - 580000*r(59,Mak,3) - 590000*r(60,Mak,3) - 600000*r(61,Mak,3) - 610000*r(62,Mak,3) - 620000*r(63,Mak,3) - 630000*r(64,Mak,3) - 640000*r(65,Mak,3) - 650000*r(66,Mak,3) - 660000*r(67,Mak,3)
     
      - 670000*r(68,Mak,3) - 680000*r(69,Mak,3) - 690000*r(70,Mak,3) - 700000*r(71,Mak,3) - 710000*r(72,Mak,3) - 720000*r(73,Mak,3) - 730000*r(74,Mak,3) - 740000*r(75,Mak,3) - 750000*r(76,Mak,3) - 760000*r(77,Mak,3) - 770000*r(78,Mak,3)
     
      - 780000*r(79,Mak,3) - 790000*r(80,Mak,3) - 800000*r(81,Mak,3) - 810000*r(82,Mak,3) - 820000*r(83,Mak,3) - 830000*r(84,Mak,3) - 840000*r(85,Mak,3) - 850000*r(86,Mak,3) - 860000*r(87,Mak,3) - 870000*r(88,Mak,3) - 880000*r(89,Mak,3)
     
      - 890000*r(90,Mak,3) - 900000*r(91,Mak,3) - 910000*r(92,Mak,3) - 920000*r(93,Mak,3) - 930000*r(94,Mak,3) - 940000*r(95,Mak,3) - 950000*r(96,Mak,3) - 960000*r(97,Mak,3) - 970000*r(98,Mak,3) - 980000*r(99,Mak,3) - 990000*r(100,Mak,3)
     
      - 1000000*r(101,Mak,3) - 1010000*r(102,Mak,3) - 1020000*r(103,Mak,3) - 1030000*r(104,Mak,3) - 1040000*r(105,Mak,3) - 1050000*r(106,Mak,3) - 1060000*r(107,Mak,3) + b(Mak,3) =E= 0 ; (LHS = 0)
     
timber_bought(Kuk,1)..  - 10000*r(2,Kuk,1) - 20000*r(3,Kuk,1) - 30000*r(4,Kuk,1) - 40000*r(5,Kuk,1) - 50000*r(6,Kuk,1) - 60000*r(7,Kuk,1) - 70000*r(8,Kuk,1) - 80000*r(9,Kuk,1) - 90000*r(10,Kuk,1) - 100000*r(11,Kuk,1) - 110000*r(12,Kuk,1)
     
      - 120000*r(13,Kuk,1) - 130000*r(14,Kuk,1) - 140000*r(15,Kuk,1) - 150000*r(16,Kuk,1) - 160000*r(17,Kuk,1) - 170000*r(18,Kuk,1) - 180000*r(19,Kuk,1) - 190000*r(20,Kuk,1) - 200000*r(21,Kuk,1) - 210000*r(22,Kuk,1) - 220000*r(23,Kuk,1)
     
      - 230000*r(24,Kuk,1) - 240000*r(25,Kuk,1) - 250000*r(26,Kuk,1) - 260000*r(27,Kuk,1) - 270000*r(28,Kuk,1) - 280000*r(29,Kuk,1) - 290000*r(30,Kuk,1) - 300000*r(31,Kuk,1) - 310000*r(32,Kuk,1) - 320000*r(33,Kuk,1) - 330000*r(34,Kuk,1)
     
      - 340000*r(35,Kuk,1) - 350000*r(36,Kuk,1) - 360000*r(37,Kuk,1) - 370000*r(38,Kuk,1) - 380000*r(39,Kuk,1) - 390000*r(40,Kuk,1) - 400000*r(41,Kuk,1) - 410000*r(42,Kuk,1) - 420000*r(43,Kuk,1) - 430000*r(44,Kuk,1) - 440000*r(45,Kuk,1)
     
      - 450000*r(46,Kuk,1) - 460000*r(47,Kuk,1) - 470000*r(48,Kuk,1) - 480000*r(49,Kuk,1) - 490000*r(50,Kuk,1) - 500000*r(51,Kuk,1) - 510000*r(52,Kuk,1) - 520000*r(53,Kuk,1) - 530000*r(54,Kuk,1) - 540000*r(55,Kuk,1) - 550000*r(56,Kuk,1)
     
      - 560000*r(57,Kuk,1) - 570000*r(58,Kuk,1) - 580000*r(59,Kuk,1) - 590000*r(60,Kuk,1) - 600000*r(61,Kuk,1) - 610000*r(62,Kuk,1) - 620000*r(63,Kuk,1) - 630000*r(64,Kuk,1) - 640000*r(65,Kuk,1) - 650000*r(66,Kuk,1) - 660000*r(67,Kuk,1)
     
      - 670000*r(68,Kuk,1) - 680000*r(69,Kuk,1) - 690000*r(70,Kuk,1) - 700000*r(71,Kuk,1) - 710000*r(72,Kuk,1) - 720000*r(73,Kuk,1) - 730000*r(74,Kuk,1) - 740000*r(75,Kuk,1) - 750000*r(76,Kuk,1) - 760000*r(77,Kuk,1) - 770000*r(78,Kuk,1)
     
      - 780000*r(79,Kuk,1) - 790000*r(80,Kuk,1) - 800000*r(81,Kuk,1) - 810000*r(82,Kuk,1) - 820000*r(83,Kuk,1) - 830000*r(84,Kuk,1) - 840000*r(85,Kuk,1) - 850000*r(86,Kuk,1) - 860000*r(87,Kuk,1) - 870000*r(88,Kuk,1) - 880000*r(89,Kuk,1)
     
      - 890000*r(90,Kuk,1) - 900000*r(91,Kuk,1) - 910000*r(92,Kuk,1) - 920000*r(93,Kuk,1) - 930000*r(94,Kuk,1) - 940000*r(95,Kuk,1) - 950000*r(96,Kuk,1) - 960000*r(97,Kuk,1) - 970000*r(98,Kuk,1) - 980000*r(99,Kuk,1) - 990000*r(100,Kuk,1)
     
      - 1000000*r(101,Kuk,1) - 1010000*r(102,Kuk,1) - 1020000*r(103,Kuk,1) - 1030000*r(104,Kuk,1) - 1040000*r(105,Kuk,1) - 1050000*r(106,Kuk,1) - 1060000*r(107,Kuk,1) + b(Kuk,1) =E= 0 ; (LHS = 0)
     
timber_bought(Kuk,2)..  - 10000*r(2,Kuk,2) - 20000*r(3,Kuk,2) - 30000*r(4,Kuk,2) - 40000*r(5,Kuk,2) - 50000*r(6,Kuk,2) - 60000*r(7,Kuk,2) - 70000*r(8,Kuk,2) - 80000*r(9,Kuk,2) - 90000*r(10,Kuk,2) - 100000*r(11,Kuk,2) - 110000*r(12,Kuk,2)
     
      - 120000*r(13,Kuk,2) - 130000*r(14,Kuk,2) - 140000*r(15,Kuk,2) - 150000*r(16,Kuk,2) - 160000*r(17,Kuk,2) - 170000*r(18,Kuk,2) - 180000*r(19,Kuk,2) - 190000*r(20,Kuk,2) - 200000*r(21,Kuk,2) - 210000*r(22,Kuk,2) - 220000*r(23,Kuk,2)
     
      - 230000*r(24,Kuk,2) - 240000*r(25,Kuk,2) - 250000*r(26,Kuk,2) - 260000*r(27,Kuk,2) - 270000*r(28,Kuk,2) - 280000*r(29,Kuk,2) - 290000*r(30,Kuk,2) - 300000*r(31,Kuk,2) - 310000*r(32,Kuk,2) - 320000*r(33,Kuk,2) - 330000*r(34,Kuk,2)
     
      - 340000*r(35,Kuk,2) - 350000*r(36,Kuk,2) - 360000*r(37,Kuk,2) - 370000*r(38,Kuk,2) - 380000*r(39,Kuk,2) - 390000*r(40,Kuk,2) - 400000*r(41,Kuk,2) - 410000*r(42,Kuk,2) - 420000*r(43,Kuk,2) - 430000*r(44,Kuk,2) - 440000*r(45,Kuk,2)
     
      - 450000*r(46,Kuk,2) - 460000*r(47,Kuk,2) - 470000*r(48,Kuk,2) - 480000*r(49,Kuk,2) - 490000*r(50,Kuk,2) - 500000*r(51,Kuk,2) - 510000*r(52,Kuk,2) - 520000*r(53,Kuk,2) - 530000*r(54,Kuk,2) - 540000*r(55,Kuk,2) - 550000*r(56,Kuk,2)
     
      - 560000*r(57,Kuk,2) - 570000*r(58,Kuk,2) - 580000*r(59,Kuk,2) - 590000*r(60,Kuk,2) - 600000*r(61,Kuk,2) - 610000*r(62,Kuk,2) - 620000*r(63,Kuk,2) - 630000*r(64,Kuk,2) - 640000*r(65,Kuk,2) - 650000*r(66,Kuk,2) - 660000*r(67,Kuk,2)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 23:25:38 Page 31
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 433


     timber_bought  =E=  amount of timber i bought in each year     
     
      - 670000*r(68,Kuk,2) - 680000*r(69,Kuk,2) - 690000*r(70,Kuk,2) - 700000*r(71,Kuk,2) - 710000*r(72,Kuk,2) - 720000*r(73,Kuk,2) - 730000*r(74,Kuk,2) - 740000*r(75,Kuk,2) - 750000*r(76,Kuk,2) - 760000*r(77,Kuk,2) - 770000*r(78,Kuk,2)
     
      - 780000*r(79,Kuk,2) - 790000*r(80,Kuk,2) - 800000*r(81,Kuk,2) - 810000*r(82,Kuk,2) - 820000*r(83,Kuk,2) - 830000*r(84,Kuk,2) - 840000*r(85,Kuk,2) - 850000*r(86,Kuk,2) - 860000*r(87,Kuk,2) - 870000*r(88,Kuk,2) - 880000*r(89,Kuk,2)
     
      - 890000*r(90,Kuk,2) - 900000*r(91,Kuk,2) - 910000*r(92,Kuk,2) - 920000*r(93,Kuk,2) - 930000*r(94,Kuk,2) - 940000*r(95,Kuk,2) - 950000*r(96,Kuk,2) - 960000*r(97,Kuk,2) - 970000*r(98,Kuk,2) - 980000*r(99,Kuk,2) - 990000*r(100,Kuk,2)
     
      - 1000000*r(101,Kuk,2) - 1010000*r(102,Kuk,2) - 1020000*r(103,Kuk,2) - 1030000*r(104,Kuk,2) - 1040000*r(105,Kuk,2) - 1050000*r(106,Kuk,2) - 1060000*r(107,Kuk,2) + b(Kuk,2) =E= 0 ; (LHS = 0)
     
timber_bought(Kuk,3)..  - 10000*r(2,Kuk,3) - 20000*r(3,Kuk,3) - 30000*r(4,Kuk,3) - 40000*r(5,Kuk,3) - 50000*r(6,Kuk,3) - 60000*r(7,Kuk,3) - 70000*r(8,Kuk,3) - 80000*r(9,Kuk,3) - 90000*r(10,Kuk,3) - 100000*r(11,Kuk,3) - 110000*r(12,Kuk,3)
     
      - 120000*r(13,Kuk,3) - 130000*r(14,Kuk,3) - 140000*r(15,Kuk,3) - 150000*r(16,Kuk,3) - 160000*r(17,Kuk,3) - 170000*r(18,Kuk,3) - 180000*r(19,Kuk,3) - 190000*r(20,Kuk,3) - 200000*r(21,Kuk,3) - 210000*r(22,Kuk,3) - 220000*r(23,Kuk,3)
     
      - 230000*r(24,Kuk,3) - 240000*r(25,Kuk,3) - 250000*r(26,Kuk,3) - 260000*r(27,Kuk,3) - 270000*r(28,Kuk,3) - 280000*r(29,Kuk,3) - 290000*r(30,Kuk,3) - 300000*r(31,Kuk,3) - 310000*r(32,Kuk,3) - 320000*r(33,Kuk,3) - 330000*r(34,Kuk,3)
     
      - 340000*r(35,Kuk,3) - 350000*r(36,Kuk,3) - 360000*r(37,Kuk,3) - 370000*r(38,Kuk,3) - 380000*r(39,Kuk,3) - 390000*r(40,Kuk,3) - 400000*r(41,Kuk,3) - 410000*r(42,Kuk,3) - 420000*r(43,Kuk,3) - 430000*r(44,Kuk,3) - 440000*r(45,Kuk,3)
     
      - 450000*r(46,Kuk,3) - 460000*r(47,Kuk,3) - 470000*r(48,Kuk,3) - 480000*r(49,Kuk,3) - 490000*r(50,Kuk,3) - 500000*r(51,Kuk,3) - 510000*r(52,Kuk,3) - 520000*r(53,Kuk,3) - 530000*r(54,Kuk,3) - 540000*r(55,Kuk,3) - 550000*r(56,Kuk,3)
     
      - 560000*r(57,Kuk,3) - 570000*r(58,Kuk,3) - 580000*r(59,Kuk,3) - 590000*r(60,Kuk,3) - 600000*r(61,Kuk,3) - 610000*r(62,Kuk,3) - 620000*r(63,Kuk,3) - 630000*r(64,Kuk,3) - 640000*r(65,Kuk,3) - 650000*r(66,Kuk,3) - 660000*r(67,Kuk,3)
     
      - 670000*r(68,Kuk,3) - 680000*r(69,Kuk,3) - 690000*r(70,Kuk,3) - 700000*r(71,Kuk,3) - 710000*r(72,Kuk,3) - 720000*r(73,Kuk,3) - 730000*r(74,Kuk,3) - 740000*r(75,Kuk,3) - 750000*r(76,Kuk,3) - 760000*r(77,Kuk,3) - 770000*r(78,Kuk,3)
     
      - 780000*r(79,Kuk,3) - 790000*r(80,Kuk,3) - 800000*r(81,Kuk,3) - 810000*r(82,Kuk,3) - 820000*r(83,Kuk,3) - 830000*r(84,Kuk,3) - 840000*r(85,Kuk,3) - 850000*r(86,Kuk,3) - 860000*r(87,Kuk,3) - 870000*r(88,Kuk,3) - 880000*r(89,Kuk,3)
     
      - 890000*r(90,Kuk,3) - 900000*r(91,Kuk,3) - 910000*r(92,Kuk,3) - 920000*r(93,Kuk,3) - 930000*r(94,Kuk,3) - 940000*r(95,Kuk,3) - 950000*r(96,Kuk,3) - 960000*r(97,Kuk,3) - 970000*r(98,Kuk,3) - 980000*r(99,Kuk,3) - 990000*r(100,Kuk,3)
     
      - 1000000*r(101,Kuk,3) - 1010000*r(102,Kuk,3) - 1020000*r(103,Kuk,3) - 1030000*r(104,Kuk,3) - 1040000*r(105,Kuk,3) - 1050000*r(106,Kuk,3) - 1060000*r(107,Kuk,3) + b(Kuk,3) =E= 0 ; (LHS = 0)
     
timber_bought(Kok,1)..  - 10000*r(2,Kok,1) - 20000*r(3,Kok,1) - 30000*r(4,Kok,1) - 40000*r(5,Kok,1) - 50000*r(6,Kok,1) - 60000*r(7,Kok,1) - 70000*r(8,Kok,1) - 80000*r(9,Kok,1) - 90000*r(10,Kok,1) - 100000*r(11,Kok,1) - 110000*r(12,Kok,1)
     
      - 120000*r(13,Kok,1) - 130000*r(14,Kok,1) - 140000*r(15,Kok,1) - 150000*r(16,Kok,1) - 160000*r(17,Kok,1) - 170000*r(18,Kok,1) - 180000*r(19,Kok,1) - 190000*r(20,Kok,1) - 200000*r(21,Kok,1) - 210000*r(22,Kok,1) - 220000*r(23,Kok,1)
     
      - 230000*r(24,Kok,1) - 240000*r(25,Kok,1) - 250000*r(26,Kok,1) - 260000*r(27,Kok,1) - 270000*r(28,Kok,1) - 280000*r(29,Kok,1) - 290000*r(30,Kok,1) - 300000*r(31,Kok,1) - 310000*r(32,Kok,1) - 320000*r(33,Kok,1) - 330000*r(34,Kok,1)
     
      - 340000*r(35,Kok,1) - 350000*r(36,Kok,1) - 360000*r(37,Kok,1) - 370000*r(38,Kok,1) - 380000*r(39,Kok,1) - 390000*r(40,Kok,1) - 400000*r(41,Kok,1) - 410000*r(42,Kok,1) - 420000*r(43,Kok,1) - 430000*r(44,Kok,1) - 440000*r(45,Kok,1)
     
      - 450000*r(46,Kok,1) - 460000*r(47,Kok,1) - 470000*r(48,Kok,1) - 480000*r(49,Kok,1) - 490000*r(50,Kok,1) - 500000*r(51,Kok,1) - 510000*r(52,Kok,1) - 520000*r(53,Kok,1) - 530000*r(54,Kok,1) - 540000*r(55,Kok,1) - 550000*r(56,Kok,1)
     
      - 560000*r(57,Kok,1) - 570000*r(58,Kok,1) - 580000*r(59,Kok,1) - 590000*r(60,Kok,1) - 600000*r(61,Kok,1) - 610000*r(62,Kok,1) - 620000*r(63,Kok,1) - 630000*r(64,Kok,1) - 640000*r(65,Kok,1) - 650000*r(66,Kok,1) - 660000*r(67,Kok,1)
     
      - 670000*r(68,Kok,1) - 680000*r(69,Kok,1) - 690000*r(70,Kok,1) - 700000*r(71,Kok,1) - 710000*r(72,Kok,1) - 720000*r(73,Kok,1) - 730000*r(74,Kok,1) - 740000*r(75,Kok,1) - 750000*r(76,Kok,1) - 760000*r(77,Kok,1) - 770000*r(78,Kok,1)
     
      - 780000*r(79,Kok,1) - 790000*r(80,Kok,1) - 800000*r(81,Kok,1) - 810000*r(82,Kok,1) - 820000*r(83,Kok,1) - 830000*r(84,Kok,1) - 840000*r(85,Kok,1) - 850000*r(86,Kok,1) - 860000*r(87,Kok,1) - 870000*r(88,Kok,1) - 880000*r(89,Kok,1)
     
      - 890000*r(90,Kok,1) - 900000*r(91,Kok,1) - 910000*r(92,Kok,1) - 920000*r(93,Kok,1) - 930000*r(94,Kok,1) - 940000*r(95,Kok,1) - 950000*r(96,Kok,1) - 960000*r(97,Kok,1) - 970000*r(98,Kok,1) - 980000*r(99,Kok,1) - 990000*r(100,Kok,1)
     
      - 1000000*r(101,Kok,1) - 1010000*r(102,Kok,1) - 1020000*r(103,Kok,1) - 1030000*r(104,Kok,1) - 1040000*r(105,Kok,1) - 1050000*r(106,Kok,1) - 1060000*r(107,Kok,1) + b(Kok,1) =E= 0 ; (LHS = 0)
     
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 23:25:38 Page 32
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 433


     timber_bought  =E=  amount of timber i bought in each year

timber_bought(Kok,2)..  - 10000*r(2,Kok,2) - 20000*r(3,Kok,2) - 30000*r(4,Kok,2) - 40000*r(5,Kok,2) - 50000*r(6,Kok,2) - 60000*r(7,Kok,2) - 70000*r(8,Kok,2) - 80000*r(9,Kok,2) - 90000*r(10,Kok,2) - 100000*r(11,Kok,2) - 110000*r(12,Kok,2)
     
      - 120000*r(13,Kok,2) - 130000*r(14,Kok,2) - 140000*r(15,Kok,2) - 150000*r(16,Kok,2) - 160000*r(17,Kok,2) - 170000*r(18,Kok,2) - 180000*r(19,Kok,2) - 190000*r(20,Kok,2) - 200000*r(21,Kok,2) - 210000*r(22,Kok,2) - 220000*r(23,Kok,2)
     
      - 230000*r(24,Kok,2) - 240000*r(25,Kok,2) - 250000*r(26,Kok,2) - 260000*r(27,Kok,2) - 270000*r(28,Kok,2) - 280000*r(29,Kok,2) - 290000*r(30,Kok,2) - 300000*r(31,Kok,2) - 310000*r(32,Kok,2) - 320000*r(33,Kok,2) - 330000*r(34,Kok,2)
     
      - 340000*r(35,Kok,2) - 350000*r(36,Kok,2) - 360000*r(37,Kok,2) - 370000*r(38,Kok,2) - 380000*r(39,Kok,2) - 390000*r(40,Kok,2) - 400000*r(41,Kok,2) - 410000*r(42,Kok,2) - 420000*r(43,Kok,2) - 430000*r(44,Kok,2) - 440000*r(45,Kok,2)
     
      - 450000*r(46,Kok,2) - 460000*r(47,Kok,2) - 470000*r(48,Kok,2) - 480000*r(49,Kok,2) - 490000*r(50,Kok,2) - 500000*r(51,Kok,2) - 510000*r(52,Kok,2) - 520000*r(53,Kok,2) - 530000*r(54,Kok,2) - 540000*r(55,Kok,2) - 550000*r(56,Kok,2)
     
      - 560000*r(57,Kok,2) - 570000*r(58,Kok,2) - 580000*r(59,Kok,2) - 590000*r(60,Kok,2) - 600000*r(61,Kok,2) - 610000*r(62,Kok,2) - 620000*r(63,Kok,2) - 630000*r(64,Kok,2) - 640000*r(65,Kok,2) - 650000*r(66,Kok,2) - 660000*r(67,Kok,2)
     
      - 670000*r(68,Kok,2) - 680000*r(69,Kok,2) - 690000*r(70,Kok,2) - 700000*r(71,Kok,2) - 710000*r(72,Kok,2) - 720000*r(73,Kok,2) - 730000*r(74,Kok,2) - 740000*r(75,Kok,2) - 750000*r(76,Kok,2) - 760000*r(77,Kok,2) - 770000*r(78,Kok,2)
     
      - 780000*r(79,Kok,2) - 790000*r(80,Kok,2) - 800000*r(81,Kok,2) - 810000*r(82,Kok,2) - 820000*r(83,Kok,2) - 830000*r(84,Kok,2) - 840000*r(85,Kok,2) - 850000*r(86,Kok,2) - 860000*r(87,Kok,2) - 870000*r(88,Kok,2) - 880000*r(89,Kok,2)
     
      - 890000*r(90,Kok,2) - 900000*r(91,Kok,2) - 910000*r(92,Kok,2) - 920000*r(93,Kok,2) - 930000*r(94,Kok,2) - 940000*r(95,Kok,2) - 950000*r(96,Kok,2) - 960000*r(97,Kok,2) - 970000*r(98,Kok,2) - 980000*r(99,Kok,2) - 990000*r(100,Kok,2)
     
      - 1000000*r(101,Kok,2) - 1010000*r(102,Kok,2) - 1020000*r(103,Kok,2) - 1030000*r(104,Kok,2) - 1040000*r(105,Kok,2) - 1050000*r(106,Kok,2) - 1060000*r(107,Kok,2) + b(Kok,2) =E= 0 ; (LHS = 0)
     
timber_bought(Kok,3)..  - 10000*r(2,Kok,3) - 20000*r(3,Kok,3) - 30000*r(4,Kok,3) - 40000*r(5,Kok,3) - 50000*r(6,Kok,3) - 60000*r(7,Kok,3) - 70000*r(8,Kok,3) - 80000*r(9,Kok,3) - 90000*r(10,Kok,3) - 100000*r(11,Kok,3) - 110000*r(12,Kok,3)
     
      - 120000*r(13,Kok,3) - 130000*r(14,Kok,3) - 140000*r(15,Kok,3) - 150000*r(16,Kok,3) - 160000*r(17,Kok,3) - 170000*r(18,Kok,3) - 180000*r(19,Kok,3) - 190000*r(20,Kok,3) - 200000*r(21,Kok,3) - 210000*r(22,Kok,3) - 220000*r(23,Kok,3)
     
      - 230000*r(24,Kok,3) - 240000*r(25,Kok,3) - 250000*r(26,Kok,3) - 260000*r(27,Kok,3) - 270000*r(28,Kok,3) - 280000*r(29,Kok,3) - 290000*r(30,Kok,3) - 300000*r(31,Kok,3) - 310000*r(32,Kok,3) - 320000*r(33,Kok,3) - 330000*r(34,Kok,3)
     
      - 340000*r(35,Kok,3) - 350000*r(36,Kok,3) - 360000*r(37,Kok,3) - 370000*r(38,Kok,3) - 380000*r(39,Kok,3) - 390000*r(40,Kok,3) - 400000*r(41,Kok,3) - 410000*r(42,Kok,3) - 420000*r(43,Kok,3) - 430000*r(44,Kok,3) - 440000*r(45,Kok,3)
     
      - 450000*r(46,Kok,3) - 460000*r(47,Kok,3) - 470000*r(48,Kok,3) - 480000*r(49,Kok,3) - 490000*r(50,Kok,3) - 500000*r(51,Kok,3) - 510000*r(52,Kok,3) - 520000*r(53,Kok,3) - 530000*r(54,Kok,3) - 540000*r(55,Kok,3) - 550000*r(56,Kok,3)
     
      - 560000*r(57,Kok,3) - 570000*r(58,Kok,3) - 580000*r(59,Kok,3) - 590000*r(60,Kok,3) - 600000*r(61,Kok,3) - 610000*r(62,Kok,3) - 620000*r(63,Kok,3) - 630000*r(64,Kok,3) - 640000*r(65,Kok,3) - 650000*r(66,Kok,3) - 660000*r(67,Kok,3)
     
      - 670000*r(68,Kok,3) - 680000*r(69,Kok,3) - 690000*r(70,Kok,3) - 700000*r(71,Kok,3) - 710000*r(72,Kok,3) - 720000*r(73,Kok,3) - 730000*r(74,Kok,3) - 740000*r(75,Kok,3) - 750000*r(76,Kok,3) - 760000*r(77,Kok,3) - 770000*r(78,Kok,3)
     
      - 780000*r(79,Kok,3) - 790000*r(80,Kok,3) - 800000*r(81,Kok,3) - 810000*r(82,Kok,3) - 820000*r(83,Kok,3) - 830000*r(84,Kok,3) - 840000*r(85,Kok,3) - 850000*r(86,Kok,3) - 860000*r(87,Kok,3) - 870000*r(88,Kok,3) - 880000*r(89,Kok,3)
     
      - 890000*r(90,Kok,3) - 900000*r(91,Kok,3) - 910000*r(92,Kok,3) - 920000*r(93,Kok,3) - 930000*r(94,Kok,3) - 940000*r(95,Kok,3) - 950000*r(96,Kok,3) - 960000*r(97,Kok,3) - 970000*r(98,Kok,3) - 980000*r(99,Kok,3) - 990000*r(100,Kok,3)
     
      - 1000000*r(101,Kok,3) - 1010000*r(102,Kok,3) - 1020000*r(103,Kok,3) - 1030000*r(104,Kok,3) - 1040000*r(105,Kok,3) - 1050000*r(106,Kok,3) - 1060000*r(107,Kok,3) + b(Kok,3) =E= 0 ; (LHS = 0)
     

---- Barges_buy  =E=  ensure we only pick one value n for barges for each timber i

Barges_buy(Mat,1)..  r(1,Mat,1) + r(2,Mat,1) + r(3,Mat,1) + r(4,Mat,1) + r(5,Mat,1) + r(6,Mat,1) + r(7,Mat,1) + r(8,Mat,1) + r(9,Mat,1) + r(10,Mat,1) + r(11,Mat,1) + r(12,Mat,1) + r(13,Mat,1) + r(14,Mat,1) + r(15,Mat,1) + r(16,Mat,1) + r(17,Mat,1)
     
      + r(18,Mat,1) + r(19,Mat,1) + r(20,Mat,1) + r(21,Mat,1) + r(22,Mat,1) + r(23,Mat,1) + r(24,Mat,1) + r(25,Mat,1) + r(26,Mat,1) + r(27,Mat,1) + r(28,Mat,1) + r(29,Mat,1) + r(30,Mat,1) + r(31,Mat,1) + r(32,Mat,1) + r(33,Mat,1) + r(34,Mat,1)
     
      + r(35,Mat,1) + r(36,Mat,1) + r(37,Mat,1) + r(38,Mat,1) + r(39,Mat,1) + r(40,Mat,1) + r(41,Mat,1) + r(42,Mat,1) + r(43,Mat,1) + r(44,Mat,1) + r(45,Mat,1) + r(46,Mat,1) + r(47,Mat,1) + r(48,Mat,1) + r(49,Mat,1) + r(50,Mat,1) + r(51,Mat,1)
     
      + r(52,Mat,1) + r(53,Mat,1) + r(54,Mat,1) + r(55,Mat,1) + r(56,Mat,1) + r(57,Mat,1) + r(58,Mat,1) + r(59,Mat,1) + r(60,Mat,1) + r(61,Mat,1) + r(62,Mat,1) + r(63,Mat,1) + r(64,Mat,1) + r(65,Mat,1) + r(66,Mat,1) + r(67,Mat,1) + r(68,Mat,1)
     
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 23:25:38 Page 33
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 433


     Barges_buy  =E=  ensure we only pick one value n for barges for each timber i     
     
      + r(69,Mat,1) + r(70,Mat,1) + r(71,Mat,1) + r(72,Mat,1) + r(73,Mat,1) + r(74,Mat,1) + r(75,Mat,1) + r(76,Mat,1) + r(77,Mat,1) + r(78,Mat,1) + r(79,Mat,1) + r(80,Mat,1) + r(81,Mat,1) + r(82,Mat,1) + r(83,Mat,1) + r(84,Mat,1) + r(85,Mat,1)
     
      + r(86,Mat,1) + r(87,Mat,1) + r(88,Mat,1) + r(89,Mat,1) + r(90,Mat,1) + r(91,Mat,1) + r(92,Mat,1) + r(93,Mat,1) + r(94,Mat,1) + r(95,Mat,1) + r(96,Mat,1) + r(97,Mat,1) + r(98,Mat,1) + r(99,Mat,1) + r(100,Mat,1) + r(101,Mat,1) + r(102,Mat,1)
     
      + r(103,Mat,1) + r(104,Mat,1) + r(105,Mat,1) + r(106,Mat,1) + r(107,Mat,1) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_buy(Mat,2)..  r(1,Mat,2) + r(2,Mat,2) + r(3,Mat,2) + r(4,Mat,2) + r(5,Mat,2) + r(6,Mat,2) + r(7,Mat,2) + r(8,Mat,2) + r(9,Mat,2) + r(10,Mat,2) + r(11,Mat,2) + r(12,Mat,2) + r(13,Mat,2) + r(14,Mat,2) + r(15,Mat,2) + r(16,Mat,2) + r(17,Mat,2)
     
      + r(18,Mat,2) + r(19,Mat,2) + r(20,Mat,2) + r(21,Mat,2) + r(22,Mat,2) + r(23,Mat,2) + r(24,Mat,2) + r(25,Mat,2) + r(26,Mat,2) + r(27,Mat,2) + r(28,Mat,2) + r(29,Mat,2) + r(30,Mat,2) + r(31,Mat,2) + r(32,Mat,2) + r(33,Mat,2) + r(34,Mat,2)
     
      + r(35,Mat,2) + r(36,Mat,2) + r(37,Mat,2) + r(38,Mat,2) + r(39,Mat,2) + r(40,Mat,2) + r(41,Mat,2) + r(42,Mat,2) + r(43,Mat,2) + r(44,Mat,2) + r(45,Mat,2) + r(46,Mat,2) + r(47,Mat,2) + r(48,Mat,2) + r(49,Mat,2) + r(50,Mat,2) + r(51,Mat,2)
     
      + r(52,Mat,2) + r(53,Mat,2) + r(54,Mat,2) + r(55,Mat,2) + r(56,Mat,2) + r(57,Mat,2) + r(58,Mat,2) + r(59,Mat,2) + r(60,Mat,2) + r(61,Mat,2) + r(62,Mat,2) + r(63,Mat,2) + r(64,Mat,2) + r(65,Mat,2) + r(66,Mat,2) + r(67,Mat,2) + r(68,Mat,2)
     
      + r(69,Mat,2) + r(70,Mat,2) + r(71,Mat,2) + r(72,Mat,2) + r(73,Mat,2) + r(74,Mat,2) + r(75,Mat,2) + r(76,Mat,2) + r(77,Mat,2) + r(78,Mat,2) + r(79,Mat,2) + r(80,Mat,2) + r(81,Mat,2) + r(82,Mat,2) + r(83,Mat,2) + r(84,Mat,2) + r(85,Mat,2)
     
      + r(86,Mat,2) + r(87,Mat,2) + r(88,Mat,2) + r(89,Mat,2) + r(90,Mat,2) + r(91,Mat,2) + r(92,Mat,2) + r(93,Mat,2) + r(94,Mat,2) + r(95,Mat,2) + r(96,Mat,2) + r(97,Mat,2) + r(98,Mat,2) + r(99,Mat,2) + r(100,Mat,2) + r(101,Mat,2) + r(102,Mat,2)
     
      + r(103,Mat,2) + r(104,Mat,2) + r(105,Mat,2) + r(106,Mat,2) + r(107,Mat,2) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_buy(Mat,3)..  r(1,Mat,3) + r(2,Mat,3) + r(3,Mat,3) + r(4,Mat,3) + r(5,Mat,3) + r(6,Mat,3) + r(7,Mat,3) + r(8,Mat,3) + r(9,Mat,3) + r(10,Mat,3) + r(11,Mat,3) + r(12,Mat,3) + r(13,Mat,3) + r(14,Mat,3) + r(15,Mat,3) + r(16,Mat,3) + r(17,Mat,3)
     
      + r(18,Mat,3) + r(19,Mat,3) + r(20,Mat,3) + r(21,Mat,3) + r(22,Mat,3) + r(23,Mat,3) + r(24,Mat,3) + r(25,Mat,3) + r(26,Mat,3) + r(27,Mat,3) + r(28,Mat,3) + r(29,Mat,3) + r(30,Mat,3) + r(31,Mat,3) + r(32,Mat,3) + r(33,Mat,3) + r(34,Mat,3)
     
      + r(35,Mat,3) + r(36,Mat,3) + r(37,Mat,3) + r(38,Mat,3) + r(39,Mat,3) + r(40,Mat,3) + r(41,Mat,3) + r(42,Mat,3) + r(43,Mat,3) + r(44,Mat,3) + r(45,Mat,3) + r(46,Mat,3) + r(47,Mat,3) + r(48,Mat,3) + r(49,Mat,3) + r(50,Mat,3) + r(51,Mat,3)
     
      + r(52,Mat,3) + r(53,Mat,3) + r(54,Mat,3) + r(55,Mat,3) + r(56,Mat,3) + r(57,Mat,3) + r(58,Mat,3) + r(59,Mat,3) + r(60,Mat,3) + r(61,Mat,3) + r(62,Mat,3) + r(63,Mat,3) + r(64,Mat,3) + r(65,Mat,3) + r(66,Mat,3) + r(67,Mat,3) + r(68,Mat,3)
     
      + r(69,Mat,3) + r(70,Mat,3) + r(71,Mat,3) + r(72,Mat,3) + r(73,Mat,3) + r(74,Mat,3) + r(75,Mat,3) + r(76,Mat,3) + r(77,Mat,3) + r(78,Mat,3) + r(79,Mat,3) + r(80,Mat,3) + r(81,Mat,3) + r(82,Mat,3) + r(83,Mat,3) + r(84,Mat,3) + r(85,Mat,3)
     
      + r(86,Mat,3) + r(87,Mat,3) + r(88,Mat,3) + r(89,Mat,3) + r(90,Mat,3) + r(91,Mat,3) + r(92,Mat,3) + r(93,Mat,3) + r(94,Mat,3) + r(95,Mat,3) + r(96,Mat,3) + r(97,Mat,3) + r(98,Mat,3) + r(99,Mat,3) + r(100,Mat,3) + r(101,Mat,3) + r(102,Mat,3)
     
      + r(103,Mat,3) + r(104,Mat,3) + r(105,Mat,3) + r(106,Mat,3) + r(107,Mat,3) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_buy(Kut,1)..  r(1,Kut,1) + r(2,Kut,1) + r(3,Kut,1) + r(4,Kut,1) + r(5,Kut,1) + r(6,Kut,1) + r(7,Kut,1) + r(8,Kut,1) + r(9,Kut,1) + r(10,Kut,1) + r(11,Kut,1) + r(12,Kut,1) + r(13,Kut,1) + r(14,Kut,1) + r(15,Kut,1) + r(16,Kut,1) + r(17,Kut,1)
     
      + r(18,Kut,1) + r(19,Kut,1) + r(20,Kut,1) + r(21,Kut,1) + r(22,Kut,1) + r(23,Kut,1) + r(24,Kut,1) + r(25,Kut,1) + r(26,Kut,1) + r(27,Kut,1) + r(28,Kut,1) + r(29,Kut,1) + r(30,Kut,1) + r(31,Kut,1) + r(32,Kut,1) + r(33,Kut,1) + r(34,Kut,1)
     
      + r(35,Kut,1) + r(36,Kut,1) + r(37,Kut,1) + r(38,Kut,1) + r(39,Kut,1) + r(40,Kut,1) + r(41,Kut,1) + r(42,Kut,1) + r(43,Kut,1) + r(44,Kut,1) + r(45,Kut,1) + r(46,Kut,1) + r(47,Kut,1) + r(48,Kut,1) + r(49,Kut,1) + r(50,Kut,1) + r(51,Kut,1)
     
      + r(52,Kut,1) + r(53,Kut,1) + r(54,Kut,1) + r(55,Kut,1) + r(56,Kut,1) + r(57,Kut,1) + r(58,Kut,1) + r(59,Kut,1) + r(60,Kut,1) + r(61,Kut,1) + r(62,Kut,1) + r(63,Kut,1) + r(64,Kut,1) + r(65,Kut,1) + r(66,Kut,1) + r(67,Kut,1) + r(68,Kut,1)
     
      + r(69,Kut,1) + r(70,Kut,1) + r(71,Kut,1) + r(72,Kut,1) + r(73,Kut,1) + r(74,Kut,1) + r(75,Kut,1) + r(76,Kut,1) + r(77,Kut,1) + r(78,Kut,1) + r(79,Kut,1) + r(80,Kut,1) + r(81,Kut,1) + r(82,Kut,1) + r(83,Kut,1) + r(84,Kut,1) + r(85,Kut,1)
     
      + r(86,Kut,1) + r(87,Kut,1) + r(88,Kut,1) + r(89,Kut,1) + r(90,Kut,1) + r(91,Kut,1) + r(92,Kut,1) + r(93,Kut,1) + r(94,Kut,1) + r(95,Kut,1) + r(96,Kut,1) + r(97,Kut,1) + r(98,Kut,1) + r(99,Kut,1) + r(100,Kut,1) + r(101,Kut,1) + r(102,Kut,1)
     
      + r(103,Kut,1) + r(104,Kut,1) + r(105,Kut,1) + r(106,Kut,1) + r(107,Kut,1) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 23:25:38 Page 34
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 433


     Barges_buy  =E=  ensure we only pick one value n for barges for each timber i

Barges_buy(Kut,2)..  r(1,Kut,2) + r(2,Kut,2) + r(3,Kut,2) + r(4,Kut,2) + r(5,Kut,2) + r(6,Kut,2) + r(7,Kut,2) + r(8,Kut,2) + r(9,Kut,2) + r(10,Kut,2) + r(11,Kut,2) + r(12,Kut,2) + r(13,Kut,2) + r(14,Kut,2) + r(15,Kut,2) + r(16,Kut,2) + r(17,Kut,2)
     
      + r(18,Kut,2) + r(19,Kut,2) + r(20,Kut,2) + r(21,Kut,2) + r(22,Kut,2) + r(23,Kut,2) + r(24,Kut,2) + r(25,Kut,2) + r(26,Kut,2) + r(27,Kut,2) + r(28,Kut,2) + r(29,Kut,2) + r(30,Kut,2) + r(31,Kut,2) + r(32,Kut,2) + r(33,Kut,2) + r(34,Kut,2)
     
      + r(35,Kut,2) + r(36,Kut,2) + r(37,Kut,2) + r(38,Kut,2) + r(39,Kut,2) + r(40,Kut,2) + r(41,Kut,2) + r(42,Kut,2) + r(43,Kut,2) + r(44,Kut,2) + r(45,Kut,2) + r(46,Kut,2) + r(47,Kut,2) + r(48,Kut,2) + r(49,Kut,2) + r(50,Kut,2) + r(51,Kut,2)
     
      + r(52,Kut,2) + r(53,Kut,2) + r(54,Kut,2) + r(55,Kut,2) + r(56,Kut,2) + r(57,Kut,2) + r(58,Kut,2) + r(59,Kut,2) + r(60,Kut,2) + r(61,Kut,2) + r(62,Kut,2) + r(63,Kut,2) + r(64,Kut,2) + r(65,Kut,2) + r(66,Kut,2) + r(67,Kut,2) + r(68,Kut,2)
     
      + r(69,Kut,2) + r(70,Kut,2) + r(71,Kut,2) + r(72,Kut,2) + r(73,Kut,2) + r(74,Kut,2) + r(75,Kut,2) + r(76,Kut,2) + r(77,Kut,2) + r(78,Kut,2) + r(79,Kut,2) + r(80,Kut,2) + r(81,Kut,2) + r(82,Kut,2) + r(83,Kut,2) + r(84,Kut,2) + r(85,Kut,2)
     
      + r(86,Kut,2) + r(87,Kut,2) + r(88,Kut,2) + r(89,Kut,2) + r(90,Kut,2) + r(91,Kut,2) + r(92,Kut,2) + r(93,Kut,2) + r(94,Kut,2) + r(95,Kut,2) + r(96,Kut,2) + r(97,Kut,2) + r(98,Kut,2) + r(99,Kut,2) + r(100,Kut,2) + r(101,Kut,2) + r(102,Kut,2)
     
      + r(103,Kut,2) + r(104,Kut,2) + r(105,Kut,2) + r(106,Kut,2) + r(107,Kut,2) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_buy(Kut,3)..  r(1,Kut,3) + r(2,Kut,3) + r(3,Kut,3) + r(4,Kut,3) + r(5,Kut,3) + r(6,Kut,3) + r(7,Kut,3) + r(8,Kut,3) + r(9,Kut,3) + r(10,Kut,3) + r(11,Kut,3) + r(12,Kut,3) + r(13,Kut,3) + r(14,Kut,3) + r(15,Kut,3) + r(16,Kut,3) + r(17,Kut,3)
     
      + r(18,Kut,3) + r(19,Kut,3) + r(20,Kut,3) + r(21,Kut,3) + r(22,Kut,3) + r(23,Kut,3) + r(24,Kut,3) + r(25,Kut,3) + r(26,Kut,3) + r(27,Kut,3) + r(28,Kut,3) + r(29,Kut,3) + r(30,Kut,3) + r(31,Kut,3) + r(32,Kut,3) + r(33,Kut,3) + r(34,Kut,3)
     
      + r(35,Kut,3) + r(36,Kut,3) + r(37,Kut,3) + r(38,Kut,3) + r(39,Kut,3) + r(40,Kut,3) + r(41,Kut,3) + r(42,Kut,3) + r(43,Kut,3) + r(44,Kut,3) + r(45,Kut,3) + r(46,Kut,3) + r(47,Kut,3) + r(48,Kut,3) + r(49,Kut,3) + r(50,Kut,3) + r(51,Kut,3)
     
      + r(52,Kut,3) + r(53,Kut,3) + r(54,Kut,3) + r(55,Kut,3) + r(56,Kut,3) + r(57,Kut,3) + r(58,Kut,3) + r(59,Kut,3) + r(60,Kut,3) + r(61,Kut,3) + r(62,Kut,3) + r(63,Kut,3) + r(64,Kut,3) + r(65,Kut,3) + r(66,Kut,3) + r(67,Kut,3) + r(68,Kut,3)
     
      + r(69,Kut,3) + r(70,Kut,3) + r(71,Kut,3) + r(72,Kut,3) + r(73,Kut,3) + r(74,Kut,3) + r(75,Kut,3) + r(76,Kut,3) + r(77,Kut,3) + r(78,Kut,3) + r(79,Kut,3) + r(80,Kut,3) + r(81,Kut,3) + r(82,Kut,3) + r(83,Kut,3) + r(84,Kut,3) + r(85,Kut,3)
     
      + r(86,Kut,3) + r(87,Kut,3) + r(88,Kut,3) + r(89,Kut,3) + r(90,Kut,3) + r(91,Kut,3) + r(92,Kut,3) + r(93,Kut,3) + r(94,Kut,3) + r(95,Kut,3) + r(96,Kut,3) + r(97,Kut,3) + r(98,Kut,3) + r(99,Kut,3) + r(100,Kut,3) + r(101,Kut,3) + r(102,Kut,3)
     
      + r(103,Kut,3) + r(104,Kut,3) + r(105,Kut,3) + r(106,Kut,3) + r(107,Kut,3) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_buy(Kot,1)..  r(1,Kot,1) + r(2,Kot,1) + r(3,Kot,1) + r(4,Kot,1) + r(5,Kot,1) + r(6,Kot,1) + r(7,Kot,1) + r(8,Kot,1) + r(9,Kot,1) + r(10,Kot,1) + r(11,Kot,1) + r(12,Kot,1) + r(13,Kot,1) + r(14,Kot,1) + r(15,Kot,1) + r(16,Kot,1) + r(17,Kot,1)
     
      + r(18,Kot,1) + r(19,Kot,1) + r(20,Kot,1) + r(21,Kot,1) + r(22,Kot,1) + r(23,Kot,1) + r(24,Kot,1) + r(25,Kot,1) + r(26,Kot,1) + r(27,Kot,1) + r(28,Kot,1) + r(29,Kot,1) + r(30,Kot,1) + r(31,Kot,1) + r(32,Kot,1) + r(33,Kot,1) + r(34,Kot,1)
     
      + r(35,Kot,1) + r(36,Kot,1) + r(37,Kot,1) + r(38,Kot,1) + r(39,Kot,1) + r(40,Kot,1) + r(41,Kot,1) + r(42,Kot,1) + r(43,Kot,1) + r(44,Kot,1) + r(45,Kot,1) + r(46,Kot,1) + r(47,Kot,1) + r(48,Kot,1) + r(49,Kot,1) + r(50,Kot,1) + r(51,Kot,1)
     
      + r(52,Kot,1) + r(53,Kot,1) + r(54,Kot,1) + r(55,Kot,1) + r(56,Kot,1) + r(57,Kot,1) + r(58,Kot,1) + r(59,Kot,1) + r(60,Kot,1) + r(61,Kot,1) + r(62,Kot,1) + r(63,Kot,1) + r(64,Kot,1) + r(65,Kot,1) + r(66,Kot,1) + r(67,Kot,1) + r(68,Kot,1)
     
      + r(69,Kot,1) + r(70,Kot,1) + r(71,Kot,1) + r(72,Kot,1) + r(73,Kot,1) + r(74,Kot,1) + r(75,Kot,1) + r(76,Kot,1) + r(77,Kot,1) + r(78,Kot,1) + r(79,Kot,1) + r(80,Kot,1) + r(81,Kot,1) + r(82,Kot,1) + r(83,Kot,1) + r(84,Kot,1) + r(85,Kot,1)
     
      + r(86,Kot,1) + r(87,Kot,1) + r(88,Kot,1) + r(89,Kot,1) + r(90,Kot,1) + r(91,Kot,1) + r(92,Kot,1) + r(93,Kot,1) + r(94,Kot,1) + r(95,Kot,1) + r(96,Kot,1) + r(97,Kot,1) + r(98,Kot,1) + r(99,Kot,1) + r(100,Kot,1) + r(101,Kot,1) + r(102,Kot,1)
     
      + r(103,Kot,1) + r(104,Kot,1) + r(105,Kot,1) + r(106,Kot,1) + r(107,Kot,1) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_buy(Kot,2)..  r(1,Kot,2) + r(2,Kot,2) + r(3,Kot,2) + r(4,Kot,2) + r(5,Kot,2) + r(6,Kot,2) + r(7,Kot,2) + r(8,Kot,2) + r(9,Kot,2) + r(10,Kot,2) + r(11,Kot,2) + r(12,Kot,2) + r(13,Kot,2) + r(14,Kot,2) + r(15,Kot,2) + r(16,Kot,2) + r(17,Kot,2)
     
      + r(18,Kot,2) + r(19,Kot,2) + r(20,Kot,2) + r(21,Kot,2) + r(22,Kot,2) + r(23,Kot,2) + r(24,Kot,2) + r(25,Kot,2) + r(26,Kot,2) + r(27,Kot,2) + r(28,Kot,2) + r(29,Kot,2) + r(30,Kot,2) + r(31,Kot,2) + r(32,Kot,2) + r(33,Kot,2) + r(34,Kot,2)
     
      + r(35,Kot,2) + r(36,Kot,2) + r(37,Kot,2) + r(38,Kot,2) + r(39,Kot,2) + r(40,Kot,2) + r(41,Kot,2) + r(42,Kot,2) + r(43,Kot,2) + r(44,Kot,2) + r(45,Kot,2) + r(46,Kot,2) + r(47,Kot,2) + r(48,Kot,2) + r(49,Kot,2) + r(50,Kot,2) + r(51,Kot,2)
     
      + r(52,Kot,2) + r(53,Kot,2) + r(54,Kot,2) + r(55,Kot,2) + r(56,Kot,2) + r(57,Kot,2) + r(58,Kot,2) + r(59,Kot,2) + r(60,Kot,2) + r(61,Kot,2) + r(62,Kot,2) + r(63,Kot,2) + r(64,Kot,2) + r(65,Kot,2) + r(66,Kot,2) + r(67,Kot,2) + r(68,Kot,2)
     
      + r(69,Kot,2) + r(70,Kot,2) + r(71,Kot,2) + r(72,Kot,2) + r(73,Kot,2) + r(74,Kot,2) + r(75,Kot,2) + r(76,Kot,2) + r(77,Kot,2) + r(78,Kot,2) + r(79,Kot,2) + r(80,Kot,2) + r(81,Kot,2) + r(82,Kot,2) + r(83,Kot,2) + r(84,Kot,2) + r(85,Kot,2)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 23:25:38 Page 35
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 433


     Barges_buy  =E=  ensure we only pick one value n for barges for each timber i     
     
      + r(86,Kot,2) + r(87,Kot,2) + r(88,Kot,2) + r(89,Kot,2) + r(90,Kot,2) + r(91,Kot,2) + r(92,Kot,2) + r(93,Kot,2) + r(94,Kot,2) + r(95,Kot,2) + r(96,Kot,2) + r(97,Kot,2) + r(98,Kot,2) + r(99,Kot,2) + r(100,Kot,2) + r(101,Kot,2) + r(102,Kot,2)
     
      + r(103,Kot,2) + r(104,Kot,2) + r(105,Kot,2) + r(106,Kot,2) + r(107,Kot,2) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_buy(Kot,3)..  r(1,Kot,3) + r(2,Kot,3) + r(3,Kot,3) + r(4,Kot,3) + r(5,Kot,3) + r(6,Kot,3) + r(7,Kot,3) + r(8,Kot,3) + r(9,Kot,3) + r(10,Kot,3) + r(11,Kot,3) + r(12,Kot,3) + r(13,Kot,3) + r(14,Kot,3) + r(15,Kot,3) + r(16,Kot,3) + r(17,Kot,3)
     
      + r(18,Kot,3) + r(19,Kot,3) + r(20,Kot,3) + r(21,Kot,3) + r(22,Kot,3) + r(23,Kot,3) + r(24,Kot,3) + r(25,Kot,3) + r(26,Kot,3) + r(27,Kot,3) + r(28,Kot,3) + r(29,Kot,3) + r(30,Kot,3) + r(31,Kot,3) + r(32,Kot,3) + r(33,Kot,3) + r(34,Kot,3)
     
      + r(35,Kot,3) + r(36,Kot,3) + r(37,Kot,3) + r(38,Kot,3) + r(39,Kot,3) + r(40,Kot,3) + r(41,Kot,3) + r(42,Kot,3) + r(43,Kot,3) + r(44,Kot,3) + r(45,Kot,3) + r(46,Kot,3) + r(47,Kot,3) + r(48,Kot,3) + r(49,Kot,3) + r(50,Kot,3) + r(51,Kot,3)
     
      + r(52,Kot,3) + r(53,Kot,3) + r(54,Kot,3) + r(55,Kot,3) + r(56,Kot,3) + r(57,Kot,3) + r(58,Kot,3) + r(59,Kot,3) + r(60,Kot,3) + r(61,Kot,3) + r(62,Kot,3) + r(63,Kot,3) + r(64,Kot,3) + r(65,Kot,3) + r(66,Kot,3) + r(67,Kot,3) + r(68,Kot,3)
     
      + r(69,Kot,3) + r(70,Kot,3) + r(71,Kot,3) + r(72,Kot,3) + r(73,Kot,3) + r(74,Kot,3) + r(75,Kot,3) + r(76,Kot,3) + r(77,Kot,3) + r(78,Kot,3) + r(79,Kot,3) + r(80,Kot,3) + r(81,Kot,3) + r(82,Kot,3) + r(83,Kot,3) + r(84,Kot,3) + r(85,Kot,3)
     
      + r(86,Kot,3) + r(87,Kot,3) + r(88,Kot,3) + r(89,Kot,3) + r(90,Kot,3) + r(91,Kot,3) + r(92,Kot,3) + r(93,Kot,3) + r(94,Kot,3) + r(95,Kot,3) + r(96,Kot,3) + r(97,Kot,3) + r(98,Kot,3) + r(99,Kot,3) + r(100,Kot,3) + r(101,Kot,3) + r(102,Kot,3)
     
      + r(103,Kot,3) + r(104,Kot,3) + r(105,Kot,3) + r(106,Kot,3) + r(107,Kot,3) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_buy(Mak,1)..  r(1,Mak,1) + r(2,Mak,1) + r(3,Mak,1) + r(4,Mak,1) + r(5,Mak,1) + r(6,Mak,1) + r(7,Mak,1) + r(8,Mak,1) + r(9,Mak,1) + r(10,Mak,1) + r(11,Mak,1) + r(12,Mak,1) + r(13,Mak,1) + r(14,Mak,1) + r(15,Mak,1) + r(16,Mak,1) + r(17,Mak,1)
     
      + r(18,Mak,1) + r(19,Mak,1) + r(20,Mak,1) + r(21,Mak,1) + r(22,Mak,1) + r(23,Mak,1) + r(24,Mak,1) + r(25,Mak,1) + r(26,Mak,1) + r(27,Mak,1) + r(28,Mak,1) + r(29,Mak,1) + r(30,Mak,1) + r(31,Mak,1) + r(32,Mak,1) + r(33,Mak,1) + r(34,Mak,1)
     
      + r(35,Mak,1) + r(36,Mak,1) + r(37,Mak,1) + r(38,Mak,1) + r(39,Mak,1) + r(40,Mak,1) + r(41,Mak,1) + r(42,Mak,1) + r(43,Mak,1) + r(44,Mak,1) + r(45,Mak,1) + r(46,Mak,1) + r(47,Mak,1) + r(48,Mak,1) + r(49,Mak,1) + r(50,Mak,1) + r(51,Mak,1)
     
      + r(52,Mak,1) + r(53,Mak,1) + r(54,Mak,1) + r(55,Mak,1) + r(56,Mak,1) + r(57,Mak,1) + r(58,Mak,1) + r(59,Mak,1) + r(60,Mak,1) + r(61,Mak,1) + r(62,Mak,1) + r(63,Mak,1) + r(64,Mak,1) + r(65,Mak,1) + r(66,Mak,1) + r(67,Mak,1) + r(68,Mak,1)
     
      + r(69,Mak,1) + r(70,Mak,1) + r(71,Mak,1) + r(72,Mak,1) + r(73,Mak,1) + r(74,Mak,1) + r(75,Mak,1) + r(76,Mak,1) + r(77,Mak,1) + r(78,Mak,1) + r(79,Mak,1) + r(80,Mak,1) + r(81,Mak,1) + r(82,Mak,1) + r(83,Mak,1) + r(84,Mak,1) + r(85,Mak,1)
     
      + r(86,Mak,1) + r(87,Mak,1) + r(88,Mak,1) + r(89,Mak,1) + r(90,Mak,1) + r(91,Mak,1) + r(92,Mak,1) + r(93,Mak,1) + r(94,Mak,1) + r(95,Mak,1) + r(96,Mak,1) + r(97,Mak,1) + r(98,Mak,1) + r(99,Mak,1) + r(100,Mak,1) + r(101,Mak,1) + r(102,Mak,1)
     
      + r(103,Mak,1) + r(104,Mak,1) + r(105,Mak,1) + r(106,Mak,1) + r(107,Mak,1) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_buy(Mak,2)..  r(1,Mak,2) + r(2,Mak,2) + r(3,Mak,2) + r(4,Mak,2) + r(5,Mak,2) + r(6,Mak,2) + r(7,Mak,2) + r(8,Mak,2) + r(9,Mak,2) + r(10,Mak,2) + r(11,Mak,2) + r(12,Mak,2) + r(13,Mak,2) + r(14,Mak,2) + r(15,Mak,2) + r(16,Mak,2) + r(17,Mak,2)
     
      + r(18,Mak,2) + r(19,Mak,2) + r(20,Mak,2) + r(21,Mak,2) + r(22,Mak,2) + r(23,Mak,2) + r(24,Mak,2) + r(25,Mak,2) + r(26,Mak,2) + r(27,Mak,2) + r(28,Mak,2) + r(29,Mak,2) + r(30,Mak,2) + r(31,Mak,2) + r(32,Mak,2) + r(33,Mak,2) + r(34,Mak,2)
     
      + r(35,Mak,2) + r(36,Mak,2) + r(37,Mak,2) + r(38,Mak,2) + r(39,Mak,2) + r(40,Mak,2) + r(41,Mak,2) + r(42,Mak,2) + r(43,Mak,2) + r(44,Mak,2) + r(45,Mak,2) + r(46,Mak,2) + r(47,Mak,2) + r(48,Mak,2) + r(49,Mak,2) + r(50,Mak,2) + r(51,Mak,2)
     
      + r(52,Mak,2) + r(53,Mak,2) + r(54,Mak,2) + r(55,Mak,2) + r(56,Mak,2) + r(57,Mak,2) + r(58,Mak,2) + r(59,Mak,2) + r(60,Mak,2) + r(61,Mak,2) + r(62,Mak,2) + r(63,Mak,2) + r(64,Mak,2) + r(65,Mak,2) + r(66,Mak,2) + r(67,Mak,2) + r(68,Mak,2)
     
      + r(69,Mak,2) + r(70,Mak,2) + r(71,Mak,2) + r(72,Mak,2) + r(73,Mak,2) + r(74,Mak,2) + r(75,Mak,2) + r(76,Mak,2) + r(77,Mak,2) + r(78,Mak,2) + r(79,Mak,2) + r(80,Mak,2) + r(81,Mak,2) + r(82,Mak,2) + r(83,Mak,2) + r(84,Mak,2) + r(85,Mak,2)
     
      + r(86,Mak,2) + r(87,Mak,2) + r(88,Mak,2) + r(89,Mak,2) + r(90,Mak,2) + r(91,Mak,2) + r(92,Mak,2) + r(93,Mak,2) + r(94,Mak,2) + r(95,Mak,2) + r(96,Mak,2) + r(97,Mak,2) + r(98,Mak,2) + r(99,Mak,2) + r(100,Mak,2) + r(101,Mak,2) + r(102,Mak,2)
     
      + r(103,Mak,2) + r(104,Mak,2) + r(105,Mak,2) + r(106,Mak,2) + r(107,Mak,2) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_buy(Mak,3)..  r(1,Mak,3) + r(2,Mak,3) + r(3,Mak,3) + r(4,Mak,3) + r(5,Mak,3) + r(6,Mak,3) + r(7,Mak,3) + r(8,Mak,3) + r(9,Mak,3) + r(10,Mak,3) + r(11,Mak,3) + r(12,Mak,3) + r(13,Mak,3) + r(14,Mak,3) + r(15,Mak,3) + r(16,Mak,3) + r(17,Mak,3)
     
      + r(18,Mak,3) + r(19,Mak,3) + r(20,Mak,3) + r(21,Mak,3) + r(22,Mak,3) + r(23,Mak,3) + r(24,Mak,3) + r(25,Mak,3) + r(26,Mak,3) + r(27,Mak,3) + r(28,Mak,3) + r(29,Mak,3) + r(30,Mak,3) + r(31,Mak,3) + r(32,Mak,3) + r(33,Mak,3) + r(34,Mak,3)
     
      + r(35,Mak,3) + r(36,Mak,3) + r(37,Mak,3) + r(38,Mak,3) + r(39,Mak,3) + r(40,Mak,3) + r(41,Mak,3) + r(42,Mak,3) + r(43,Mak,3) + r(44,Mak,3) + r(45,Mak,3) + r(46,Mak,3) + r(47,Mak,3) + r(48,Mak,3) + r(49,Mak,3) + r(50,Mak,3) + r(51,Mak,3)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 23:25:38 Page 36
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 433


     Barges_buy  =E=  ensure we only pick one value n for barges for each timber i     
     
      + r(52,Mak,3) + r(53,Mak,3) + r(54,Mak,3) + r(55,Mak,3) + r(56,Mak,3) + r(57,Mak,3) + r(58,Mak,3) + r(59,Mak,3) + r(60,Mak,3) + r(61,Mak,3) + r(62,Mak,3) + r(63,Mak,3) + r(64,Mak,3) + r(65,Mak,3) + r(66,Mak,3) + r(67,Mak,3) + r(68,Mak,3)
     
      + r(69,Mak,3) + r(70,Mak,3) + r(71,Mak,3) + r(72,Mak,3) + r(73,Mak,3) + r(74,Mak,3) + r(75,Mak,3) + r(76,Mak,3) + r(77,Mak,3) + r(78,Mak,3) + r(79,Mak,3) + r(80,Mak,3) + r(81,Mak,3) + r(82,Mak,3) + r(83,Mak,3) + r(84,Mak,3) + r(85,Mak,3)
     
      + r(86,Mak,3) + r(87,Mak,3) + r(88,Mak,3) + r(89,Mak,3) + r(90,Mak,3) + r(91,Mak,3) + r(92,Mak,3) + r(93,Mak,3) + r(94,Mak,3) + r(95,Mak,3) + r(96,Mak,3) + r(97,Mak,3) + r(98,Mak,3) + r(99,Mak,3) + r(100,Mak,3) + r(101,Mak,3) + r(102,Mak,3)
     
      + r(103,Mak,3) + r(104,Mak,3) + r(105,Mak,3) + r(106,Mak,3) + r(107,Mak,3) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_buy(Kuk,1)..  r(1,Kuk,1) + r(2,Kuk,1) + r(3,Kuk,1) + r(4,Kuk,1) + r(5,Kuk,1) + r(6,Kuk,1) + r(7,Kuk,1) + r(8,Kuk,1) + r(9,Kuk,1) + r(10,Kuk,1) + r(11,Kuk,1) + r(12,Kuk,1) + r(13,Kuk,1) + r(14,Kuk,1) + r(15,Kuk,1) + r(16,Kuk,1) + r(17,Kuk,1)
     
      + r(18,Kuk,1) + r(19,Kuk,1) + r(20,Kuk,1) + r(21,Kuk,1) + r(22,Kuk,1) + r(23,Kuk,1) + r(24,Kuk,1) + r(25,Kuk,1) + r(26,Kuk,1) + r(27,Kuk,1) + r(28,Kuk,1) + r(29,Kuk,1) + r(30,Kuk,1) + r(31,Kuk,1) + r(32,Kuk,1) + r(33,Kuk,1) + r(34,Kuk,1)
     
      + r(35,Kuk,1) + r(36,Kuk,1) + r(37,Kuk,1) + r(38,Kuk,1) + r(39,Kuk,1) + r(40,Kuk,1) + r(41,Kuk,1) + r(42,Kuk,1) + r(43,Kuk,1) + r(44,Kuk,1) + r(45,Kuk,1) + r(46,Kuk,1) + r(47,Kuk,1) + r(48,Kuk,1) + r(49,Kuk,1) + r(50,Kuk,1) + r(51,Kuk,1)
     
      + r(52,Kuk,1) + r(53,Kuk,1) + r(54,Kuk,1) + r(55,Kuk,1) + r(56,Kuk,1) + r(57,Kuk,1) + r(58,Kuk,1) + r(59,Kuk,1) + r(60,Kuk,1) + r(61,Kuk,1) + r(62,Kuk,1) + r(63,Kuk,1) + r(64,Kuk,1) + r(65,Kuk,1) + r(66,Kuk,1) + r(67,Kuk,1) + r(68,Kuk,1)
     
      + r(69,Kuk,1) + r(70,Kuk,1) + r(71,Kuk,1) + r(72,Kuk,1) + r(73,Kuk,1) + r(74,Kuk,1) + r(75,Kuk,1) + r(76,Kuk,1) + r(77,Kuk,1) + r(78,Kuk,1) + r(79,Kuk,1) + r(80,Kuk,1) + r(81,Kuk,1) + r(82,Kuk,1) + r(83,Kuk,1) + r(84,Kuk,1) + r(85,Kuk,1)
     
      + r(86,Kuk,1) + r(87,Kuk,1) + r(88,Kuk,1) + r(89,Kuk,1) + r(90,Kuk,1) + r(91,Kuk,1) + r(92,Kuk,1) + r(93,Kuk,1) + r(94,Kuk,1) + r(95,Kuk,1) + r(96,Kuk,1) + r(97,Kuk,1) + r(98,Kuk,1) + r(99,Kuk,1) + r(100,Kuk,1) + r(101,Kuk,1) + r(102,Kuk,1)
     
      + r(103,Kuk,1) + r(104,Kuk,1) + r(105,Kuk,1) + r(106,Kuk,1) + r(107,Kuk,1) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_buy(Kuk,2)..  r(1,Kuk,2) + r(2,Kuk,2) + r(3,Kuk,2) + r(4,Kuk,2) + r(5,Kuk,2) + r(6,Kuk,2) + r(7,Kuk,2) + r(8,Kuk,2) + r(9,Kuk,2) + r(10,Kuk,2) + r(11,Kuk,2) + r(12,Kuk,2) + r(13,Kuk,2) + r(14,Kuk,2) + r(15,Kuk,2) + r(16,Kuk,2) + r(17,Kuk,2)
     
      + r(18,Kuk,2) + r(19,Kuk,2) + r(20,Kuk,2) + r(21,Kuk,2) + r(22,Kuk,2) + r(23,Kuk,2) + r(24,Kuk,2) + r(25,Kuk,2) + r(26,Kuk,2) + r(27,Kuk,2) + r(28,Kuk,2) + r(29,Kuk,2) + r(30,Kuk,2) + r(31,Kuk,2) + r(32,Kuk,2) + r(33,Kuk,2) + r(34,Kuk,2)
     
      + r(35,Kuk,2) + r(36,Kuk,2) + r(37,Kuk,2) + r(38,Kuk,2) + r(39,Kuk,2) + r(40,Kuk,2) + r(41,Kuk,2) + r(42,Kuk,2) + r(43,Kuk,2) + r(44,Kuk,2) + r(45,Kuk,2) + r(46,Kuk,2) + r(47,Kuk,2) + r(48,Kuk,2) + r(49,Kuk,2) + r(50,Kuk,2) + r(51,Kuk,2)
     
      + r(52,Kuk,2) + r(53,Kuk,2) + r(54,Kuk,2) + r(55,Kuk,2) + r(56,Kuk,2) + r(57,Kuk,2) + r(58,Kuk,2) + r(59,Kuk,2) + r(60,Kuk,2) + r(61,Kuk,2) + r(62,Kuk,2) + r(63,Kuk,2) + r(64,Kuk,2) + r(65,Kuk,2) + r(66,Kuk,2) + r(67,Kuk,2) + r(68,Kuk,2)
     
      + r(69,Kuk,2) + r(70,Kuk,2) + r(71,Kuk,2) + r(72,Kuk,2) + r(73,Kuk,2) + r(74,Kuk,2) + r(75,Kuk,2) + r(76,Kuk,2) + r(77,Kuk,2) + r(78,Kuk,2) + r(79,Kuk,2) + r(80,Kuk,2) + r(81,Kuk,2) + r(82,Kuk,2) + r(83,Kuk,2) + r(84,Kuk,2) + r(85,Kuk,2)
     
      + r(86,Kuk,2) + r(87,Kuk,2) + r(88,Kuk,2) + r(89,Kuk,2) + r(90,Kuk,2) + r(91,Kuk,2) + r(92,Kuk,2) + r(93,Kuk,2) + r(94,Kuk,2) + r(95,Kuk,2) + r(96,Kuk,2) + r(97,Kuk,2) + r(98,Kuk,2) + r(99,Kuk,2) + r(100,Kuk,2) + r(101,Kuk,2) + r(102,Kuk,2)
     
      + r(103,Kuk,2) + r(104,Kuk,2) + r(105,Kuk,2) + r(106,Kuk,2) + r(107,Kuk,2) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_buy(Kuk,3)..  r(1,Kuk,3) + r(2,Kuk,3) + r(3,Kuk,3) + r(4,Kuk,3) + r(5,Kuk,3) + r(6,Kuk,3) + r(7,Kuk,3) + r(8,Kuk,3) + r(9,Kuk,3) + r(10,Kuk,3) + r(11,Kuk,3) + r(12,Kuk,3) + r(13,Kuk,3) + r(14,Kuk,3) + r(15,Kuk,3) + r(16,Kuk,3) + r(17,Kuk,3)
     
      + r(18,Kuk,3) + r(19,Kuk,3) + r(20,Kuk,3) + r(21,Kuk,3) + r(22,Kuk,3) + r(23,Kuk,3) + r(24,Kuk,3) + r(25,Kuk,3) + r(26,Kuk,3) + r(27,Kuk,3) + r(28,Kuk,3) + r(29,Kuk,3) + r(30,Kuk,3) + r(31,Kuk,3) + r(32,Kuk,3) + r(33,Kuk,3) + r(34,Kuk,3)
     
      + r(35,Kuk,3) + r(36,Kuk,3) + r(37,Kuk,3) + r(38,Kuk,3) + r(39,Kuk,3) + r(40,Kuk,3) + r(41,Kuk,3) + r(42,Kuk,3) + r(43,Kuk,3) + r(44,Kuk,3) + r(45,Kuk,3) + r(46,Kuk,3) + r(47,Kuk,3) + r(48,Kuk,3) + r(49,Kuk,3) + r(50,Kuk,3) + r(51,Kuk,3)
     
      + r(52,Kuk,3) + r(53,Kuk,3) + r(54,Kuk,3) + r(55,Kuk,3) + r(56,Kuk,3) + r(57,Kuk,3) + r(58,Kuk,3) + r(59,Kuk,3) + r(60,Kuk,3) + r(61,Kuk,3) + r(62,Kuk,3) + r(63,Kuk,3) + r(64,Kuk,3) + r(65,Kuk,3) + r(66,Kuk,3) + r(67,Kuk,3) + r(68,Kuk,3)
     
      + r(69,Kuk,3) + r(70,Kuk,3) + r(71,Kuk,3) + r(72,Kuk,3) + r(73,Kuk,3) + r(74,Kuk,3) + r(75,Kuk,3) + r(76,Kuk,3) + r(77,Kuk,3) + r(78,Kuk,3) + r(79,Kuk,3) + r(80,Kuk,3) + r(81,Kuk,3) + r(82,Kuk,3) + r(83,Kuk,3) + r(84,Kuk,3) + r(85,Kuk,3)
     
      + r(86,Kuk,3) + r(87,Kuk,3) + r(88,Kuk,3) + r(89,Kuk,3) + r(90,Kuk,3) + r(91,Kuk,3) + r(92,Kuk,3) + r(93,Kuk,3) + r(94,Kuk,3) + r(95,Kuk,3) + r(96,Kuk,3) + r(97,Kuk,3) + r(98,Kuk,3) + r(99,Kuk,3) + r(100,Kuk,3) + r(101,Kuk,3) + r(102,Kuk,3)
     
      + r(103,Kuk,3) + r(104,Kuk,3) + r(105,Kuk,3) + r(106,Kuk,3) + r(107,Kuk,3) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 23:25:38 Page 37
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 433


     Barges_buy  =E=  ensure we only pick one value n for barges for each timber i

Barges_buy(Kok,1)..  r(1,Kok,1) + r(2,Kok,1) + r(3,Kok,1) + r(4,Kok,1) + r(5,Kok,1) + r(6,Kok,1) + r(7,Kok,1) + r(8,Kok,1) + r(9,Kok,1) + r(10,Kok,1) + r(11,Kok,1) + r(12,Kok,1) + r(13,Kok,1) + r(14,Kok,1) + r(15,Kok,1) + r(16,Kok,1) + r(17,Kok,1)
     
      + r(18,Kok,1) + r(19,Kok,1) + r(20,Kok,1) + r(21,Kok,1) + r(22,Kok,1) + r(23,Kok,1) + r(24,Kok,1) + r(25,Kok,1) + r(26,Kok,1) + r(27,Kok,1) + r(28,Kok,1) + r(29,Kok,1) + r(30,Kok,1) + r(31,Kok,1) + r(32,Kok,1) + r(33,Kok,1) + r(34,Kok,1)
     
      + r(35,Kok,1) + r(36,Kok,1) + r(37,Kok,1) + r(38,Kok,1) + r(39,Kok,1) + r(40,Kok,1) + r(41,Kok,1) + r(42,Kok,1) + r(43,Kok,1) + r(44,Kok,1) + r(45,Kok,1) + r(46,Kok,1) + r(47,Kok,1) + r(48,Kok,1) + r(49,Kok,1) + r(50,Kok,1) + r(51,Kok,1)
     
      + r(52,Kok,1) + r(53,Kok,1) + r(54,Kok,1) + r(55,Kok,1) + r(56,Kok,1) + r(57,Kok,1) + r(58,Kok,1) + r(59,Kok,1) + r(60,Kok,1) + r(61,Kok,1) + r(62,Kok,1) + r(63,Kok,1) + r(64,Kok,1) + r(65,Kok,1) + r(66,Kok,1) + r(67,Kok,1) + r(68,Kok,1)
     
      + r(69,Kok,1) + r(70,Kok,1) + r(71,Kok,1) + r(72,Kok,1) + r(73,Kok,1) + r(74,Kok,1) + r(75,Kok,1) + r(76,Kok,1) + r(77,Kok,1) + r(78,Kok,1) + r(79,Kok,1) + r(80,Kok,1) + r(81,Kok,1) + r(82,Kok,1) + r(83,Kok,1) + r(84,Kok,1) + r(85,Kok,1)
     
      + r(86,Kok,1) + r(87,Kok,1) + r(88,Kok,1) + r(89,Kok,1) + r(90,Kok,1) + r(91,Kok,1) + r(92,Kok,1) + r(93,Kok,1) + r(94,Kok,1) + r(95,Kok,1) + r(96,Kok,1) + r(97,Kok,1) + r(98,Kok,1) + r(99,Kok,1) + r(100,Kok,1) + r(101,Kok,1) + r(102,Kok,1)
     
      + r(103,Kok,1) + r(104,Kok,1) + r(105,Kok,1) + r(106,Kok,1) + r(107,Kok,1) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_buy(Kok,2)..  r(1,Kok,2) + r(2,Kok,2) + r(3,Kok,2) + r(4,Kok,2) + r(5,Kok,2) + r(6,Kok,2) + r(7,Kok,2) + r(8,Kok,2) + r(9,Kok,2) + r(10,Kok,2) + r(11,Kok,2) + r(12,Kok,2) + r(13,Kok,2) + r(14,Kok,2) + r(15,Kok,2) + r(16,Kok,2) + r(17,Kok,2)
     
      + r(18,Kok,2) + r(19,Kok,2) + r(20,Kok,2) + r(21,Kok,2) + r(22,Kok,2) + r(23,Kok,2) + r(24,Kok,2) + r(25,Kok,2) + r(26,Kok,2) + r(27,Kok,2) + r(28,Kok,2) + r(29,Kok,2) + r(30,Kok,2) + r(31,Kok,2) + r(32,Kok,2) + r(33,Kok,2) + r(34,Kok,2)
     
      + r(35,Kok,2) + r(36,Kok,2) + r(37,Kok,2) + r(38,Kok,2) + r(39,Kok,2) + r(40,Kok,2) + r(41,Kok,2) + r(42,Kok,2) + r(43,Kok,2) + r(44,Kok,2) + r(45,Kok,2) + r(46,Kok,2) + r(47,Kok,2) + r(48,Kok,2) + r(49,Kok,2) + r(50,Kok,2) + r(51,Kok,2)
     
      + r(52,Kok,2) + r(53,Kok,2) + r(54,Kok,2) + r(55,Kok,2) + r(56,Kok,2) + r(57,Kok,2) + r(58,Kok,2) + r(59,Kok,2) + r(60,Kok,2) + r(61,Kok,2) + r(62,Kok,2) + r(63,Kok,2) + r(64,Kok,2) + r(65,Kok,2) + r(66,Kok,2) + r(67,Kok,2) + r(68,Kok,2)
     
      + r(69,Kok,2) + r(70,Kok,2) + r(71,Kok,2) + r(72,Kok,2) + r(73,Kok,2) + r(74,Kok,2) + r(75,Kok,2) + r(76,Kok,2) + r(77,Kok,2) + r(78,Kok,2) + r(79,Kok,2) + r(80,Kok,2) + r(81,Kok,2) + r(82,Kok,2) + r(83,Kok,2) + r(84,Kok,2) + r(85,Kok,2)
     
      + r(86,Kok,2) + r(87,Kok,2) + r(88,Kok,2) + r(89,Kok,2) + r(90,Kok,2) + r(91,Kok,2) + r(92,Kok,2) + r(93,Kok,2) + r(94,Kok,2) + r(95,Kok,2) + r(96,Kok,2) + r(97,Kok,2) + r(98,Kok,2) + r(99,Kok,2) + r(100,Kok,2) + r(101,Kok,2) + r(102,Kok,2)
     
      + r(103,Kok,2) + r(104,Kok,2) + r(105,Kok,2) + r(106,Kok,2) + r(107,Kok,2) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_buy(Kok,3)..  r(1,Kok,3) + r(2,Kok,3) + r(3,Kok,3) + r(4,Kok,3) + r(5,Kok,3) + r(6,Kok,3) + r(7,Kok,3) + r(8,Kok,3) + r(9,Kok,3) + r(10,Kok,3) + r(11,Kok,3) + r(12,Kok,3) + r(13,Kok,3) + r(14,Kok,3) + r(15,Kok,3) + r(16,Kok,3) + r(17,Kok,3)
     
      + r(18,Kok,3) + r(19,Kok,3) + r(20,Kok,3) + r(21,Kok,3) + r(22,Kok,3) + r(23,Kok,3) + r(24,Kok,3) + r(25,Kok,3) + r(26,Kok,3) + r(27,Kok,3) + r(28,Kok,3) + r(29,Kok,3) + r(30,Kok,3) + r(31,Kok,3) + r(32,Kok,3) + r(33,Kok,3) + r(34,Kok,3)
     
      + r(35,Kok,3) + r(36,Kok,3) + r(37,Kok,3) + r(38,Kok,3) + r(39,Kok,3) + r(40,Kok,3) + r(41,Kok,3) + r(42,Kok,3) + r(43,Kok,3) + r(44,Kok,3) + r(45,Kok,3) + r(46,Kok,3) + r(47,Kok,3) + r(48,Kok,3) + r(49,Kok,3) + r(50,Kok,3) + r(51,Kok,3)
     
      + r(52,Kok,3) + r(53,Kok,3) + r(54,Kok,3) + r(55,Kok,3) + r(56,Kok,3) + r(57,Kok,3) + r(58,Kok,3) + r(59,Kok,3) + r(60,Kok,3) + r(61,Kok,3) + r(62,Kok,3) + r(63,Kok,3) + r(64,Kok,3) + r(65,Kok,3) + r(66,Kok,3) + r(67,Kok,3) + r(68,Kok,3)
     
      + r(69,Kok,3) + r(70,Kok,3) + r(71,Kok,3) + r(72,Kok,3) + r(73,Kok,3) + r(74,Kok,3) + r(75,Kok,3) + r(76,Kok,3) + r(77,Kok,3) + r(78,Kok,3) + r(79,Kok,3) + r(80,Kok,3) + r(81,Kok,3) + r(82,Kok,3) + r(83,Kok,3) + r(84,Kok,3) + r(85,Kok,3)
     
      + r(86,Kok,3) + r(87,Kok,3) + r(88,Kok,3) + r(89,Kok,3) + r(90,Kok,3) + r(91,Kok,3) + r(92,Kok,3) + r(93,Kok,3) + r(94,Kok,3) + r(95,Kok,3) + r(96,Kok,3) + r(97,Kok,3) + r(98,Kok,3) + r(99,Kok,3) + r(100,Kok,3) + r(101,Kok,3) + r(102,Kok,3)
     
      + r(103,Kok,3) + r(104,Kok,3) + r(105,Kok,3) + r(106,Kok,3) + r(107,Kok,3) =E= 1 ; (LHS = 0, INFES = 1 ****)
     

---- Barges_sell  =E=  ensure we only pick one value  n for barges for each product to each city

Barges_sell(Mas,EU,1)..  u(1,Mas,EU,1) + u(2,Mas,EU,1) + u(3,Mas,EU,1) + u(4,Mas,EU,1) + u(5,Mas,EU,1) + u(6,Mas,EU,1) + u(7,Mas,EU,1) + u(8,Mas,EU,1) + u(9,Mas,EU,1) + u(10,Mas,EU,1) + u(11,Mas,EU,1) + u(12,Mas,EU,1) + u(13,Mas,EU,1) + u(14,Mas,EU,1)
     
      + u(15,Mas,EU,1) + u(16,Mas,EU,1) + u(17,Mas,EU,1) + u(18,Mas,EU,1) + u(19,Mas,EU,1) + u(20,Mas,EU,1) + u(21,Mas,EU,1) + u(22,Mas,EU,1) + u(23,Mas,EU,1) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 23:25:38 Page 38
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 433


     Barges_sell  =E=  ensure we only pick one value  n for barges for each product to each city

Barges_sell(Mas,EU,2)..  u(1,Mas,EU,2) + u(2,Mas,EU,2) + u(3,Mas,EU,2) + u(4,Mas,EU,2) + u(5,Mas,EU,2) + u(6,Mas,EU,2) + u(7,Mas,EU,2) + u(8,Mas,EU,2) + u(9,Mas,EU,2) + u(10,Mas,EU,2) + u(11,Mas,EU,2) + u(12,Mas,EU,2) + u(13,Mas,EU,2) + u(14,Mas,EU,2)
     
      + u(15,Mas,EU,2) + u(16,Mas,EU,2) + u(17,Mas,EU,2) + u(18,Mas,EU,2) + u(19,Mas,EU,2) + u(20,Mas,EU,2) + u(21,Mas,EU,2) + u(22,Mas,EU,2) + u(23,Mas,EU,2) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Mas,EU,3)..  u(1,Mas,EU,3) + u(2,Mas,EU,3) + u(3,Mas,EU,3) + u(4,Mas,EU,3) + u(5,Mas,EU,3) + u(6,Mas,EU,3) + u(7,Mas,EU,3) + u(8,Mas,EU,3) + u(9,Mas,EU,3) + u(10,Mas,EU,3) + u(11,Mas,EU,3) + u(12,Mas,EU,3) + u(13,Mas,EU,3) + u(14,Mas,EU,3)
     
      + u(15,Mas,EU,3) + u(16,Mas,EU,3) + u(17,Mas,EU,3) + u(18,Mas,EU,3) + u(19,Mas,EU,3) + u(20,Mas,EU,3) + u(21,Mas,EU,3) + u(22,Mas,EU,3) + u(23,Mas,EU,3) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Mas,IE,1)..  u(1,Mas,IE,1) + u(2,Mas,IE,1) + u(3,Mas,IE,1) + u(4,Mas,IE,1) + u(5,Mas,IE,1) + u(6,Mas,IE,1) + u(7,Mas,IE,1) + u(8,Mas,IE,1) + u(9,Mas,IE,1) + u(10,Mas,IE,1) + u(11,Mas,IE,1) + u(12,Mas,IE,1) + u(13,Mas,IE,1) + u(14,Mas,IE,1)
     
      + u(15,Mas,IE,1) + u(16,Mas,IE,1) + u(17,Mas,IE,1) + u(18,Mas,IE,1) + u(19,Mas,IE,1) + u(20,Mas,IE,1) + u(21,Mas,IE,1) + u(22,Mas,IE,1) + u(23,Mas,IE,1) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Mas,IE,2)..  u(1,Mas,IE,2) + u(2,Mas,IE,2) + u(3,Mas,IE,2) + u(4,Mas,IE,2) + u(5,Mas,IE,2) + u(6,Mas,IE,2) + u(7,Mas,IE,2) + u(8,Mas,IE,2) + u(9,Mas,IE,2) + u(10,Mas,IE,2) + u(11,Mas,IE,2) + u(12,Mas,IE,2) + u(13,Mas,IE,2) + u(14,Mas,IE,2)
     
      + u(15,Mas,IE,2) + u(16,Mas,IE,2) + u(17,Mas,IE,2) + u(18,Mas,IE,2) + u(19,Mas,IE,2) + u(20,Mas,IE,2) + u(21,Mas,IE,2) + u(22,Mas,IE,2) + u(23,Mas,IE,2) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Mas,IE,3)..  u(1,Mas,IE,3) + u(2,Mas,IE,3) + u(3,Mas,IE,3) + u(4,Mas,IE,3) + u(5,Mas,IE,3) + u(6,Mas,IE,3) + u(7,Mas,IE,3) + u(8,Mas,IE,3) + u(9,Mas,IE,3) + u(10,Mas,IE,3) + u(11,Mas,IE,3) + u(12,Mas,IE,3) + u(13,Mas,IE,3) + u(14,Mas,IE,3)
     
      + u(15,Mas,IE,3) + u(16,Mas,IE,3) + u(17,Mas,IE,3) + u(18,Mas,IE,3) + u(19,Mas,IE,3) + u(20,Mas,IE,3) + u(21,Mas,IE,3) + u(22,Mas,IE,3) + u(23,Mas,IE,3) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Mas,PA,1)..  u(1,Mas,PA,1) + u(2,Mas,PA,1) + u(3,Mas,PA,1) + u(4,Mas,PA,1) + u(5,Mas,PA,1) + u(6,Mas,PA,1) + u(7,Mas,PA,1) + u(8,Mas,PA,1) + u(9,Mas,PA,1) + u(10,Mas,PA,1) + u(11,Mas,PA,1) + u(12,Mas,PA,1) + u(13,Mas,PA,1) + u(14,Mas,PA,1)
     
      + u(15,Mas,PA,1) + u(16,Mas,PA,1) + u(17,Mas,PA,1) + u(18,Mas,PA,1) + u(19,Mas,PA,1) + u(20,Mas,PA,1) + u(21,Mas,PA,1) + u(22,Mas,PA,1) + u(23,Mas,PA,1) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Mas,PA,2)..  u(1,Mas,PA,2) + u(2,Mas,PA,2) + u(3,Mas,PA,2) + u(4,Mas,PA,2) + u(5,Mas,PA,2) + u(6,Mas,PA,2) + u(7,Mas,PA,2) + u(8,Mas,PA,2) + u(9,Mas,PA,2) + u(10,Mas,PA,2) + u(11,Mas,PA,2) + u(12,Mas,PA,2) + u(13,Mas,PA,2) + u(14,Mas,PA,2)
     
      + u(15,Mas,PA,2) + u(16,Mas,PA,2) + u(17,Mas,PA,2) + u(18,Mas,PA,2) + u(19,Mas,PA,2) + u(20,Mas,PA,2) + u(21,Mas,PA,2) + u(22,Mas,PA,2) + u(23,Mas,PA,2) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Mas,PA,3)..  u(1,Mas,PA,3) + u(2,Mas,PA,3) + u(3,Mas,PA,3) + u(4,Mas,PA,3) + u(5,Mas,PA,3) + u(6,Mas,PA,3) + u(7,Mas,PA,3) + u(8,Mas,PA,3) + u(9,Mas,PA,3) + u(10,Mas,PA,3) + u(11,Mas,PA,3) + u(12,Mas,PA,3) + u(13,Mas,PA,3) + u(14,Mas,PA,3)
     
      + u(15,Mas,PA,3) + u(16,Mas,PA,3) + u(17,Mas,PA,3) + u(18,Mas,PA,3) + u(19,Mas,PA,3) + u(20,Mas,PA,3) + u(21,Mas,PA,3) + u(22,Mas,PA,3) + u(23,Mas,PA,3) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Mas,KI,1)..  u(1,Mas,KI,1) + u(2,Mas,KI,1) + u(3,Mas,KI,1) + u(4,Mas,KI,1) + u(5,Mas,KI,1) + u(6,Mas,KI,1) + u(7,Mas,KI,1) + u(8,Mas,KI,1) + u(9,Mas,KI,1) + u(10,Mas,KI,1) + u(11,Mas,KI,1) + u(12,Mas,KI,1) + u(13,Mas,KI,1) + u(14,Mas,KI,1)
     
      + u(15,Mas,KI,1) + u(16,Mas,KI,1) + u(17,Mas,KI,1) + u(18,Mas,KI,1) + u(19,Mas,KI,1) + u(20,Mas,KI,1) + u(21,Mas,KI,1) + u(22,Mas,KI,1) + u(23,Mas,KI,1) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Mas,KI,2)..  u(1,Mas,KI,2) + u(2,Mas,KI,2) + u(3,Mas,KI,2) + u(4,Mas,KI,2) + u(5,Mas,KI,2) + u(6,Mas,KI,2) + u(7,Mas,KI,2) + u(8,Mas,KI,2) + u(9,Mas,KI,2) + u(10,Mas,KI,2) + u(11,Mas,KI,2) + u(12,Mas,KI,2) + u(13,Mas,KI,2) + u(14,Mas,KI,2)
     
      + u(15,Mas,KI,2) + u(16,Mas,KI,2) + u(17,Mas,KI,2) + u(18,Mas,KI,2) + u(19,Mas,KI,2) + u(20,Mas,KI,2) + u(21,Mas,KI,2) + u(22,Mas,KI,2) + u(23,Mas,KI,2) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Mas,KI,3)..  u(1,Mas,KI,3) + u(2,Mas,KI,3) + u(3,Mas,KI,3) + u(4,Mas,KI,3) + u(5,Mas,KI,3) + u(6,Mas,KI,3) + u(7,Mas,KI,3) + u(8,Mas,KI,3) + u(9,Mas,KI,3) + u(10,Mas,KI,3) + u(11,Mas,KI,3) + u(12,Mas,KI,3) + u(13,Mas,KI,3) + u(14,Mas,KI,3)
     
      + u(15,Mas,KI,3) + u(16,Mas,KI,3) + u(17,Mas,KI,3) + u(18,Mas,KI,3) + u(19,Mas,KI,3) + u(20,Mas,KI,3) + u(21,Mas,KI,3) + u(22,Mas,KI,3) + u(23,Mas,KI,3) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Kus,EU,1)..  u(1,Kus,EU,1) + u(2,Kus,EU,1) + u(3,Kus,EU,1) + u(4,Kus,EU,1) + u(5,Kus,EU,1) + u(6,Kus,EU,1) + u(7,Kus,EU,1) + u(8,Kus,EU,1) + u(9,Kus,EU,1) + u(10,Kus,EU,1) + u(11,Kus,EU,1) + u(12,Kus,EU,1) + u(13,Kus,EU,1) + u(14,Kus,EU,1)
     
      + u(15,Kus,EU,1) + u(16,Kus,EU,1) + u(17,Kus,EU,1) + u(18,Kus,EU,1) + u(19,Kus,EU,1) + u(20,Kus,EU,1) + u(21,Kus,EU,1) + u(22,Kus,EU,1) + u(23,Kus,EU,1) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 23:25:38 Page 39
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 433


     Barges_sell  =E=  ensure we only pick one value  n for barges for each product to each city

Barges_sell(Kus,EU,2)..  u(1,Kus,EU,2) + u(2,Kus,EU,2) + u(3,Kus,EU,2) + u(4,Kus,EU,2) + u(5,Kus,EU,2) + u(6,Kus,EU,2) + u(7,Kus,EU,2) + u(8,Kus,EU,2) + u(9,Kus,EU,2) + u(10,Kus,EU,2) + u(11,Kus,EU,2) + u(12,Kus,EU,2) + u(13,Kus,EU,2) + u(14,Kus,EU,2)
     
      + u(15,Kus,EU,2) + u(16,Kus,EU,2) + u(17,Kus,EU,2) + u(18,Kus,EU,2) + u(19,Kus,EU,2) + u(20,Kus,EU,2) + u(21,Kus,EU,2) + u(22,Kus,EU,2) + u(23,Kus,EU,2) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Kus,EU,3)..  u(1,Kus,EU,3) + u(2,Kus,EU,3) + u(3,Kus,EU,3) + u(4,Kus,EU,3) + u(5,Kus,EU,3) + u(6,Kus,EU,3) + u(7,Kus,EU,3) + u(8,Kus,EU,3) + u(9,Kus,EU,3) + u(10,Kus,EU,3) + u(11,Kus,EU,3) + u(12,Kus,EU,3) + u(13,Kus,EU,3) + u(14,Kus,EU,3)
     
      + u(15,Kus,EU,3) + u(16,Kus,EU,3) + u(17,Kus,EU,3) + u(18,Kus,EU,3) + u(19,Kus,EU,3) + u(20,Kus,EU,3) + u(21,Kus,EU,3) + u(22,Kus,EU,3) + u(23,Kus,EU,3) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Kus,IE,1)..  u(1,Kus,IE,1) + u(2,Kus,IE,1) + u(3,Kus,IE,1) + u(4,Kus,IE,1) + u(5,Kus,IE,1) + u(6,Kus,IE,1) + u(7,Kus,IE,1) + u(8,Kus,IE,1) + u(9,Kus,IE,1) + u(10,Kus,IE,1) + u(11,Kus,IE,1) + u(12,Kus,IE,1) + u(13,Kus,IE,1) + u(14,Kus,IE,1)
     
      + u(15,Kus,IE,1) + u(16,Kus,IE,1) + u(17,Kus,IE,1) + u(18,Kus,IE,1) + u(19,Kus,IE,1) + u(20,Kus,IE,1) + u(21,Kus,IE,1) + u(22,Kus,IE,1) + u(23,Kus,IE,1) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Kus,IE,2)..  u(1,Kus,IE,2) + u(2,Kus,IE,2) + u(3,Kus,IE,2) + u(4,Kus,IE,2) + u(5,Kus,IE,2) + u(6,Kus,IE,2) + u(7,Kus,IE,2) + u(8,Kus,IE,2) + u(9,Kus,IE,2) + u(10,Kus,IE,2) + u(11,Kus,IE,2) + u(12,Kus,IE,2) + u(13,Kus,IE,2) + u(14,Kus,IE,2)
     
      + u(15,Kus,IE,2) + u(16,Kus,IE,2) + u(17,Kus,IE,2) + u(18,Kus,IE,2) + u(19,Kus,IE,2) + u(20,Kus,IE,2) + u(21,Kus,IE,2) + u(22,Kus,IE,2) + u(23,Kus,IE,2) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Kus,IE,3)..  u(1,Kus,IE,3) + u(2,Kus,IE,3) + u(3,Kus,IE,3) + u(4,Kus,IE,3) + u(5,Kus,IE,3) + u(6,Kus,IE,3) + u(7,Kus,IE,3) + u(8,Kus,IE,3) + u(9,Kus,IE,3) + u(10,Kus,IE,3) + u(11,Kus,IE,3) + u(12,Kus,IE,3) + u(13,Kus,IE,3) + u(14,Kus,IE,3)
     
      + u(15,Kus,IE,3) + u(16,Kus,IE,3) + u(17,Kus,IE,3) + u(18,Kus,IE,3) + u(19,Kus,IE,3) + u(20,Kus,IE,3) + u(21,Kus,IE,3) + u(22,Kus,IE,3) + u(23,Kus,IE,3) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Kus,PA,1)..  u(1,Kus,PA,1) + u(2,Kus,PA,1) + u(3,Kus,PA,1) + u(4,Kus,PA,1) + u(5,Kus,PA,1) + u(6,Kus,PA,1) + u(7,Kus,PA,1) + u(8,Kus,PA,1) + u(9,Kus,PA,1) + u(10,Kus,PA,1) + u(11,Kus,PA,1) + u(12,Kus,PA,1) + u(13,Kus,PA,1) + u(14,Kus,PA,1)
     
      + u(15,Kus,PA,1) + u(16,Kus,PA,1) + u(17,Kus,PA,1) + u(18,Kus,PA,1) + u(19,Kus,PA,1) + u(20,Kus,PA,1) + u(21,Kus,PA,1) + u(22,Kus,PA,1) + u(23,Kus,PA,1) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Kus,PA,2)..  u(1,Kus,PA,2) + u(2,Kus,PA,2) + u(3,Kus,PA,2) + u(4,Kus,PA,2) + u(5,Kus,PA,2) + u(6,Kus,PA,2) + u(7,Kus,PA,2) + u(8,Kus,PA,2) + u(9,Kus,PA,2) + u(10,Kus,PA,2) + u(11,Kus,PA,2) + u(12,Kus,PA,2) + u(13,Kus,PA,2) + u(14,Kus,PA,2)
     
      + u(15,Kus,PA,2) + u(16,Kus,PA,2) + u(17,Kus,PA,2) + u(18,Kus,PA,2) + u(19,Kus,PA,2) + u(20,Kus,PA,2) + u(21,Kus,PA,2) + u(22,Kus,PA,2) + u(23,Kus,PA,2) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Kus,PA,3)..  u(1,Kus,PA,3) + u(2,Kus,PA,3) + u(3,Kus,PA,3) + u(4,Kus,PA,3) + u(5,Kus,PA,3) + u(6,Kus,PA,3) + u(7,Kus,PA,3) + u(8,Kus,PA,3) + u(9,Kus,PA,3) + u(10,Kus,PA,3) + u(11,Kus,PA,3) + u(12,Kus,PA,3) + u(13,Kus,PA,3) + u(14,Kus,PA,3)
     
      + u(15,Kus,PA,3) + u(16,Kus,PA,3) + u(17,Kus,PA,3) + u(18,Kus,PA,3) + u(19,Kus,PA,3) + u(20,Kus,PA,3) + u(21,Kus,PA,3) + u(22,Kus,PA,3) + u(23,Kus,PA,3) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Kus,KI,1)..  u(1,Kus,KI,1) + u(2,Kus,KI,1) + u(3,Kus,KI,1) + u(4,Kus,KI,1) + u(5,Kus,KI,1) + u(6,Kus,KI,1) + u(7,Kus,KI,1) + u(8,Kus,KI,1) + u(9,Kus,KI,1) + u(10,Kus,KI,1) + u(11,Kus,KI,1) + u(12,Kus,KI,1) + u(13,Kus,KI,1) + u(14,Kus,KI,1)
     
      + u(15,Kus,KI,1) + u(16,Kus,KI,1) + u(17,Kus,KI,1) + u(18,Kus,KI,1) + u(19,Kus,KI,1) + u(20,Kus,KI,1) + u(21,Kus,KI,1) + u(22,Kus,KI,1) + u(23,Kus,KI,1) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Kus,KI,2)..  u(1,Kus,KI,2) + u(2,Kus,KI,2) + u(3,Kus,KI,2) + u(4,Kus,KI,2) + u(5,Kus,KI,2) + u(6,Kus,KI,2) + u(7,Kus,KI,2) + u(8,Kus,KI,2) + u(9,Kus,KI,2) + u(10,Kus,KI,2) + u(11,Kus,KI,2) + u(12,Kus,KI,2) + u(13,Kus,KI,2) + u(14,Kus,KI,2)
     
      + u(15,Kus,KI,2) + u(16,Kus,KI,2) + u(17,Kus,KI,2) + u(18,Kus,KI,2) + u(19,Kus,KI,2) + u(20,Kus,KI,2) + u(21,Kus,KI,2) + u(22,Kus,KI,2) + u(23,Kus,KI,2) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Kus,KI,3)..  u(1,Kus,KI,3) + u(2,Kus,KI,3) + u(3,Kus,KI,3) + u(4,Kus,KI,3) + u(5,Kus,KI,3) + u(6,Kus,KI,3) + u(7,Kus,KI,3) + u(8,Kus,KI,3) + u(9,Kus,KI,3) + u(10,Kus,KI,3) + u(11,Kus,KI,3) + u(12,Kus,KI,3) + u(13,Kus,KI,3) + u(14,Kus,KI,3)
     
      + u(15,Kus,KI,3) + u(16,Kus,KI,3) + u(17,Kus,KI,3) + u(18,Kus,KI,3) + u(19,Kus,KI,3) + u(20,Kus,KI,3) + u(21,Kus,KI,3) + u(22,Kus,KI,3) + u(23,Kus,KI,3) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Kos,EU,1)..  u(1,Kos,EU,1) + u(2,Kos,EU,1) + u(3,Kos,EU,1) + u(4,Kos,EU,1) + u(5,Kos,EU,1) + u(6,Kos,EU,1) + u(7,Kos,EU,1) + u(8,Kos,EU,1) + u(9,Kos,EU,1) + u(10,Kos,EU,1) + u(11,Kos,EU,1) + u(12,Kos,EU,1) + u(13,Kos,EU,1) + u(14,Kos,EU,1)
     
      + u(15,Kos,EU,1) + u(16,Kos,EU,1) + u(17,Kos,EU,1) + u(18,Kos,EU,1) + u(19,Kos,EU,1) + u(20,Kos,EU,1) + u(21,Kos,EU,1) + u(22,Kos,EU,1) + u(23,Kos,EU,1) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 23:25:38 Page 40
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 433


     Barges_sell  =E=  ensure we only pick one value  n for barges for each product to each city

Barges_sell(Kos,EU,2)..  u(1,Kos,EU,2) + u(2,Kos,EU,2) + u(3,Kos,EU,2) + u(4,Kos,EU,2) + u(5,Kos,EU,2) + u(6,Kos,EU,2) + u(7,Kos,EU,2) + u(8,Kos,EU,2) + u(9,Kos,EU,2) + u(10,Kos,EU,2) + u(11,Kos,EU,2) + u(12,Kos,EU,2) + u(13,Kos,EU,2) + u(14,Kos,EU,2)
     
      + u(15,Kos,EU,2) + u(16,Kos,EU,2) + u(17,Kos,EU,2) + u(18,Kos,EU,2) + u(19,Kos,EU,2) + u(20,Kos,EU,2) + u(21,Kos,EU,2) + u(22,Kos,EU,2) + u(23,Kos,EU,2) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Kos,EU,3)..  u(1,Kos,EU,3) + u(2,Kos,EU,3) + u(3,Kos,EU,3) + u(4,Kos,EU,3) + u(5,Kos,EU,3) + u(6,Kos,EU,3) + u(7,Kos,EU,3) + u(8,Kos,EU,3) + u(9,Kos,EU,3) + u(10,Kos,EU,3) + u(11,Kos,EU,3) + u(12,Kos,EU,3) + u(13,Kos,EU,3) + u(14,Kos,EU,3)
     
      + u(15,Kos,EU,3) + u(16,Kos,EU,3) + u(17,Kos,EU,3) + u(18,Kos,EU,3) + u(19,Kos,EU,3) + u(20,Kos,EU,3) + u(21,Kos,EU,3) + u(22,Kos,EU,3) + u(23,Kos,EU,3) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Kos,IE,1)..  u(1,Kos,IE,1) + u(2,Kos,IE,1) + u(3,Kos,IE,1) + u(4,Kos,IE,1) + u(5,Kos,IE,1) + u(6,Kos,IE,1) + u(7,Kos,IE,1) + u(8,Kos,IE,1) + u(9,Kos,IE,1) + u(10,Kos,IE,1) + u(11,Kos,IE,1) + u(12,Kos,IE,1) + u(13,Kos,IE,1) + u(14,Kos,IE,1)
     
      + u(15,Kos,IE,1) + u(16,Kos,IE,1) + u(17,Kos,IE,1) + u(18,Kos,IE,1) + u(19,Kos,IE,1) + u(20,Kos,IE,1) + u(21,Kos,IE,1) + u(22,Kos,IE,1) + u(23,Kos,IE,1) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Kos,IE,2)..  u(1,Kos,IE,2) + u(2,Kos,IE,2) + u(3,Kos,IE,2) + u(4,Kos,IE,2) + u(5,Kos,IE,2) + u(6,Kos,IE,2) + u(7,Kos,IE,2) + u(8,Kos,IE,2) + u(9,Kos,IE,2) + u(10,Kos,IE,2) + u(11,Kos,IE,2) + u(12,Kos,IE,2) + u(13,Kos,IE,2) + u(14,Kos,IE,2)
     
      + u(15,Kos,IE,2) + u(16,Kos,IE,2) + u(17,Kos,IE,2) + u(18,Kos,IE,2) + u(19,Kos,IE,2) + u(20,Kos,IE,2) + u(21,Kos,IE,2) + u(22,Kos,IE,2) + u(23,Kos,IE,2) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Kos,IE,3)..  u(1,Kos,IE,3) + u(2,Kos,IE,3) + u(3,Kos,IE,3) + u(4,Kos,IE,3) + u(5,Kos,IE,3) + u(6,Kos,IE,3) + u(7,Kos,IE,3) + u(8,Kos,IE,3) + u(9,Kos,IE,3) + u(10,Kos,IE,3) + u(11,Kos,IE,3) + u(12,Kos,IE,3) + u(13,Kos,IE,3) + u(14,Kos,IE,3)
     
      + u(15,Kos,IE,3) + u(16,Kos,IE,3) + u(17,Kos,IE,3) + u(18,Kos,IE,3) + u(19,Kos,IE,3) + u(20,Kos,IE,3) + u(21,Kos,IE,3) + u(22,Kos,IE,3) + u(23,Kos,IE,3) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Kos,PA,1)..  u(1,Kos,PA,1) + u(2,Kos,PA,1) + u(3,Kos,PA,1) + u(4,Kos,PA,1) + u(5,Kos,PA,1) + u(6,Kos,PA,1) + u(7,Kos,PA,1) + u(8,Kos,PA,1) + u(9,Kos,PA,1) + u(10,Kos,PA,1) + u(11,Kos,PA,1) + u(12,Kos,PA,1) + u(13,Kos,PA,1) + u(14,Kos,PA,1)
     
      + u(15,Kos,PA,1) + u(16,Kos,PA,1) + u(17,Kos,PA,1) + u(18,Kos,PA,1) + u(19,Kos,PA,1) + u(20,Kos,PA,1) + u(21,Kos,PA,1) + u(22,Kos,PA,1) + u(23,Kos,PA,1) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Kos,PA,2)..  u(1,Kos,PA,2) + u(2,Kos,PA,2) + u(3,Kos,PA,2) + u(4,Kos,PA,2) + u(5,Kos,PA,2) + u(6,Kos,PA,2) + u(7,Kos,PA,2) + u(8,Kos,PA,2) + u(9,Kos,PA,2) + u(10,Kos,PA,2) + u(11,Kos,PA,2) + u(12,Kos,PA,2) + u(13,Kos,PA,2) + u(14,Kos,PA,2)
     
      + u(15,Kos,PA,2) + u(16,Kos,PA,2) + u(17,Kos,PA,2) + u(18,Kos,PA,2) + u(19,Kos,PA,2) + u(20,Kos,PA,2) + u(21,Kos,PA,2) + u(22,Kos,PA,2) + u(23,Kos,PA,2) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Kos,PA,3)..  u(1,Kos,PA,3) + u(2,Kos,PA,3) + u(3,Kos,PA,3) + u(4,Kos,PA,3) + u(5,Kos,PA,3) + u(6,Kos,PA,3) + u(7,Kos,PA,3) + u(8,Kos,PA,3) + u(9,Kos,PA,3) + u(10,Kos,PA,3) + u(11,Kos,PA,3) + u(12,Kos,PA,3) + u(13,Kos,PA,3) + u(14,Kos,PA,3)
     
      + u(15,Kos,PA,3) + u(16,Kos,PA,3) + u(17,Kos,PA,3) + u(18,Kos,PA,3) + u(19,Kos,PA,3) + u(20,Kos,PA,3) + u(21,Kos,PA,3) + u(22,Kos,PA,3) + u(23,Kos,PA,3) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Kos,KI,1)..  u(1,Kos,KI,1) + u(2,Kos,KI,1) + u(3,Kos,KI,1) + u(4,Kos,KI,1) + u(5,Kos,KI,1) + u(6,Kos,KI,1) + u(7,Kos,KI,1) + u(8,Kos,KI,1) + u(9,Kos,KI,1) + u(10,Kos,KI,1) + u(11,Kos,KI,1) + u(12,Kos,KI,1) + u(13,Kos,KI,1) + u(14,Kos,KI,1)
     
      + u(15,Kos,KI,1) + u(16,Kos,KI,1) + u(17,Kos,KI,1) + u(18,Kos,KI,1) + u(19,Kos,KI,1) + u(20,Kos,KI,1) + u(21,Kos,KI,1) + u(22,Kos,KI,1) + u(23,Kos,KI,1) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Kos,KI,2)..  u(1,Kos,KI,2) + u(2,Kos,KI,2) + u(3,Kos,KI,2) + u(4,Kos,KI,2) + u(5,Kos,KI,2) + u(6,Kos,KI,2) + u(7,Kos,KI,2) + u(8,Kos,KI,2) + u(9,Kos,KI,2) + u(10,Kos,KI,2) + u(11,Kos,KI,2) + u(12,Kos,KI,2) + u(13,Kos,KI,2) + u(14,Kos,KI,2)
     
      + u(15,Kos,KI,2) + u(16,Kos,KI,2) + u(17,Kos,KI,2) + u(18,Kos,KI,2) + u(19,Kos,KI,2) + u(20,Kos,KI,2) + u(21,Kos,KI,2) + u(22,Kos,KI,2) + u(23,Kos,KI,2) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Kos,KI,3)..  u(1,Kos,KI,3) + u(2,Kos,KI,3) + u(3,Kos,KI,3) + u(4,Kos,KI,3) + u(5,Kos,KI,3) + u(6,Kos,KI,3) + u(7,Kos,KI,3) + u(8,Kos,KI,3) + u(9,Kos,KI,3) + u(10,Kos,KI,3) + u(11,Kos,KI,3) + u(12,Kos,KI,3) + u(13,Kos,KI,3) + u(14,Kos,KI,3)
     
      + u(15,Kos,KI,3) + u(16,Kos,KI,3) + u(17,Kos,KI,3) + u(18,Kos,KI,3) + u(19,Kos,KI,3) + u(20,Kos,KI,3) + u(21,Kos,KI,3) + u(22,Kos,KI,3) + u(23,Kos,KI,3) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Kuv,EU,1)..  u(1,Kuv,EU,1) + u(2,Kuv,EU,1) + u(3,Kuv,EU,1) + u(4,Kuv,EU,1) + u(5,Kuv,EU,1) + u(6,Kuv,EU,1) + u(7,Kuv,EU,1) + u(8,Kuv,EU,1) + u(9,Kuv,EU,1) + u(10,Kuv,EU,1) + u(11,Kuv,EU,1) + u(12,Kuv,EU,1) + u(13,Kuv,EU,1) + u(14,Kuv,EU,1)
     
      + u(15,Kuv,EU,1) + u(16,Kuv,EU,1) + u(17,Kuv,EU,1) + u(18,Kuv,EU,1) + u(19,Kuv,EU,1) + u(20,Kuv,EU,1) + u(21,Kuv,EU,1) + u(22,Kuv,EU,1) + u(23,Kuv,EU,1) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 23:25:38 Page 41
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 433


     Barges_sell  =E=  ensure we only pick one value  n for barges for each product to each city

Barges_sell(Kuv,EU,2)..  u(1,Kuv,EU,2) + u(2,Kuv,EU,2) + u(3,Kuv,EU,2) + u(4,Kuv,EU,2) + u(5,Kuv,EU,2) + u(6,Kuv,EU,2) + u(7,Kuv,EU,2) + u(8,Kuv,EU,2) + u(9,Kuv,EU,2) + u(10,Kuv,EU,2) + u(11,Kuv,EU,2) + u(12,Kuv,EU,2) + u(13,Kuv,EU,2) + u(14,Kuv,EU,2)
     
      + u(15,Kuv,EU,2) + u(16,Kuv,EU,2) + u(17,Kuv,EU,2) + u(18,Kuv,EU,2) + u(19,Kuv,EU,2) + u(20,Kuv,EU,2) + u(21,Kuv,EU,2) + u(22,Kuv,EU,2) + u(23,Kuv,EU,2) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Kuv,EU,3)..  u(1,Kuv,EU,3) + u(2,Kuv,EU,3) + u(3,Kuv,EU,3) + u(4,Kuv,EU,3) + u(5,Kuv,EU,3) + u(6,Kuv,EU,3) + u(7,Kuv,EU,3) + u(8,Kuv,EU,3) + u(9,Kuv,EU,3) + u(10,Kuv,EU,3) + u(11,Kuv,EU,3) + u(12,Kuv,EU,3) + u(13,Kuv,EU,3) + u(14,Kuv,EU,3)
     
      + u(15,Kuv,EU,3) + u(16,Kuv,EU,3) + u(17,Kuv,EU,3) + u(18,Kuv,EU,3) + u(19,Kuv,EU,3) + u(20,Kuv,EU,3) + u(21,Kuv,EU,3) + u(22,Kuv,EU,3) + u(23,Kuv,EU,3) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Kuv,IE,1)..  u(1,Kuv,IE,1) + u(2,Kuv,IE,1) + u(3,Kuv,IE,1) + u(4,Kuv,IE,1) + u(5,Kuv,IE,1) + u(6,Kuv,IE,1) + u(7,Kuv,IE,1) + u(8,Kuv,IE,1) + u(9,Kuv,IE,1) + u(10,Kuv,IE,1) + u(11,Kuv,IE,1) + u(12,Kuv,IE,1) + u(13,Kuv,IE,1) + u(14,Kuv,IE,1)
     
      + u(15,Kuv,IE,1) + u(16,Kuv,IE,1) + u(17,Kuv,IE,1) + u(18,Kuv,IE,1) + u(19,Kuv,IE,1) + u(20,Kuv,IE,1) + u(21,Kuv,IE,1) + u(22,Kuv,IE,1) + u(23,Kuv,IE,1) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Kuv,IE,2)..  u(1,Kuv,IE,2) + u(2,Kuv,IE,2) + u(3,Kuv,IE,2) + u(4,Kuv,IE,2) + u(5,Kuv,IE,2) + u(6,Kuv,IE,2) + u(7,Kuv,IE,2) + u(8,Kuv,IE,2) + u(9,Kuv,IE,2) + u(10,Kuv,IE,2) + u(11,Kuv,IE,2) + u(12,Kuv,IE,2) + u(13,Kuv,IE,2) + u(14,Kuv,IE,2)
     
      + u(15,Kuv,IE,2) + u(16,Kuv,IE,2) + u(17,Kuv,IE,2) + u(18,Kuv,IE,2) + u(19,Kuv,IE,2) + u(20,Kuv,IE,2) + u(21,Kuv,IE,2) + u(22,Kuv,IE,2) + u(23,Kuv,IE,2) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Kuv,IE,3)..  u(1,Kuv,IE,3) + u(2,Kuv,IE,3) + u(3,Kuv,IE,3) + u(4,Kuv,IE,3) + u(5,Kuv,IE,3) + u(6,Kuv,IE,3) + u(7,Kuv,IE,3) + u(8,Kuv,IE,3) + u(9,Kuv,IE,3) + u(10,Kuv,IE,3) + u(11,Kuv,IE,3) + u(12,Kuv,IE,3) + u(13,Kuv,IE,3) + u(14,Kuv,IE,3)
     
      + u(15,Kuv,IE,3) + u(16,Kuv,IE,3) + u(17,Kuv,IE,3) + u(18,Kuv,IE,3) + u(19,Kuv,IE,3) + u(20,Kuv,IE,3) + u(21,Kuv,IE,3) + u(22,Kuv,IE,3) + u(23,Kuv,IE,3) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Kuv,PA,1)..  u(1,Kuv,PA,1) + u(2,Kuv,PA,1) + u(3,Kuv,PA,1) + u(4,Kuv,PA,1) + u(5,Kuv,PA,1) + u(6,Kuv,PA,1) + u(7,Kuv,PA,1) + u(8,Kuv,PA,1) + u(9,Kuv,PA,1) + u(10,Kuv,PA,1) + u(11,Kuv,PA,1) + u(12,Kuv,PA,1) + u(13,Kuv,PA,1) + u(14,Kuv,PA,1)
     
      + u(15,Kuv,PA,1) + u(16,Kuv,PA,1) + u(17,Kuv,PA,1) + u(18,Kuv,PA,1) + u(19,Kuv,PA,1) + u(20,Kuv,PA,1) + u(21,Kuv,PA,1) + u(22,Kuv,PA,1) + u(23,Kuv,PA,1) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Kuv,PA,2)..  u(1,Kuv,PA,2) + u(2,Kuv,PA,2) + u(3,Kuv,PA,2) + u(4,Kuv,PA,2) + u(5,Kuv,PA,2) + u(6,Kuv,PA,2) + u(7,Kuv,PA,2) + u(8,Kuv,PA,2) + u(9,Kuv,PA,2) + u(10,Kuv,PA,2) + u(11,Kuv,PA,2) + u(12,Kuv,PA,2) + u(13,Kuv,PA,2) + u(14,Kuv,PA,2)
     
      + u(15,Kuv,PA,2) + u(16,Kuv,PA,2) + u(17,Kuv,PA,2) + u(18,Kuv,PA,2) + u(19,Kuv,PA,2) + u(20,Kuv,PA,2) + u(21,Kuv,PA,2) + u(22,Kuv,PA,2) + u(23,Kuv,PA,2) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Kuv,PA,3)..  u(1,Kuv,PA,3) + u(2,Kuv,PA,3) + u(3,Kuv,PA,3) + u(4,Kuv,PA,3) + u(5,Kuv,PA,3) + u(6,Kuv,PA,3) + u(7,Kuv,PA,3) + u(8,Kuv,PA,3) + u(9,Kuv,PA,3) + u(10,Kuv,PA,3) + u(11,Kuv,PA,3) + u(12,Kuv,PA,3) + u(13,Kuv,PA,3) + u(14,Kuv,PA,3)
     
      + u(15,Kuv,PA,3) + u(16,Kuv,PA,3) + u(17,Kuv,PA,3) + u(18,Kuv,PA,3) + u(19,Kuv,PA,3) + u(20,Kuv,PA,3) + u(21,Kuv,PA,3) + u(22,Kuv,PA,3) + u(23,Kuv,PA,3) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Kuv,KI,1)..  u(1,Kuv,KI,1) + u(2,Kuv,KI,1) + u(3,Kuv,KI,1) + u(4,Kuv,KI,1) + u(5,Kuv,KI,1) + u(6,Kuv,KI,1) + u(7,Kuv,KI,1) + u(8,Kuv,KI,1) + u(9,Kuv,KI,1) + u(10,Kuv,KI,1) + u(11,Kuv,KI,1) + u(12,Kuv,KI,1) + u(13,Kuv,KI,1) + u(14,Kuv,KI,1)
     
      + u(15,Kuv,KI,1) + u(16,Kuv,KI,1) + u(17,Kuv,KI,1) + u(18,Kuv,KI,1) + u(19,Kuv,KI,1) + u(20,Kuv,KI,1) + u(21,Kuv,KI,1) + u(22,Kuv,KI,1) + u(23,Kuv,KI,1) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Kuv,KI,2)..  u(1,Kuv,KI,2) + u(2,Kuv,KI,2) + u(3,Kuv,KI,2) + u(4,Kuv,KI,2) + u(5,Kuv,KI,2) + u(6,Kuv,KI,2) + u(7,Kuv,KI,2) + u(8,Kuv,KI,2) + u(9,Kuv,KI,2) + u(10,Kuv,KI,2) + u(11,Kuv,KI,2) + u(12,Kuv,KI,2) + u(13,Kuv,KI,2) + u(14,Kuv,KI,2)
     
      + u(15,Kuv,KI,2) + u(16,Kuv,KI,2) + u(17,Kuv,KI,2) + u(18,Kuv,KI,2) + u(19,Kuv,KI,2) + u(20,Kuv,KI,2) + u(21,Kuv,KI,2) + u(22,Kuv,KI,2) + u(23,Kuv,KI,2) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Kuv,KI,3)..  u(1,Kuv,KI,3) + u(2,Kuv,KI,3) + u(3,Kuv,KI,3) + u(4,Kuv,KI,3) + u(5,Kuv,KI,3) + u(6,Kuv,KI,3) + u(7,Kuv,KI,3) + u(8,Kuv,KI,3) + u(9,Kuv,KI,3) + u(10,Kuv,KI,3) + u(11,Kuv,KI,3) + u(12,Kuv,KI,3) + u(13,Kuv,KI,3) + u(14,Kuv,KI,3)
     
      + u(15,Kuv,KI,3) + u(16,Kuv,KI,3) + u(17,Kuv,KI,3) + u(18,Kuv,KI,3) + u(19,Kuv,KI,3) + u(20,Kuv,KI,3) + u(21,Kuv,KI,3) + u(22,Kuv,KI,3) + u(23,Kuv,KI,3) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Kov,EU,1)..  u(1,Kov,EU,1) + u(2,Kov,EU,1) + u(3,Kov,EU,1) + u(4,Kov,EU,1) + u(5,Kov,EU,1) + u(6,Kov,EU,1) + u(7,Kov,EU,1) + u(8,Kov,EU,1) + u(9,Kov,EU,1) + u(10,Kov,EU,1) + u(11,Kov,EU,1) + u(12,Kov,EU,1) + u(13,Kov,EU,1) + u(14,Kov,EU,1)
     
      + u(15,Kov,EU,1) + u(16,Kov,EU,1) + u(17,Kov,EU,1) + u(18,Kov,EU,1) + u(19,Kov,EU,1) + u(20,Kov,EU,1) + u(21,Kov,EU,1) + u(22,Kov,EU,1) + u(23,Kov,EU,1) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 23:25:38 Page 42
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 433


     Barges_sell  =E=  ensure we only pick one value  n for barges for each product to each city

Barges_sell(Kov,EU,2)..  u(1,Kov,EU,2) + u(2,Kov,EU,2) + u(3,Kov,EU,2) + u(4,Kov,EU,2) + u(5,Kov,EU,2) + u(6,Kov,EU,2) + u(7,Kov,EU,2) + u(8,Kov,EU,2) + u(9,Kov,EU,2) + u(10,Kov,EU,2) + u(11,Kov,EU,2) + u(12,Kov,EU,2) + u(13,Kov,EU,2) + u(14,Kov,EU,2)
     
      + u(15,Kov,EU,2) + u(16,Kov,EU,2) + u(17,Kov,EU,2) + u(18,Kov,EU,2) + u(19,Kov,EU,2) + u(20,Kov,EU,2) + u(21,Kov,EU,2) + u(22,Kov,EU,2) + u(23,Kov,EU,2) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Kov,EU,3)..  u(1,Kov,EU,3) + u(2,Kov,EU,3) + u(3,Kov,EU,3) + u(4,Kov,EU,3) + u(5,Kov,EU,3) + u(6,Kov,EU,3) + u(7,Kov,EU,3) + u(8,Kov,EU,3) + u(9,Kov,EU,3) + u(10,Kov,EU,3) + u(11,Kov,EU,3) + u(12,Kov,EU,3) + u(13,Kov,EU,3) + u(14,Kov,EU,3)
     
      + u(15,Kov,EU,3) + u(16,Kov,EU,3) + u(17,Kov,EU,3) + u(18,Kov,EU,3) + u(19,Kov,EU,3) + u(20,Kov,EU,3) + u(21,Kov,EU,3) + u(22,Kov,EU,3) + u(23,Kov,EU,3) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Kov,IE,1)..  u(1,Kov,IE,1) + u(2,Kov,IE,1) + u(3,Kov,IE,1) + u(4,Kov,IE,1) + u(5,Kov,IE,1) + u(6,Kov,IE,1) + u(7,Kov,IE,1) + u(8,Kov,IE,1) + u(9,Kov,IE,1) + u(10,Kov,IE,1) + u(11,Kov,IE,1) + u(12,Kov,IE,1) + u(13,Kov,IE,1) + u(14,Kov,IE,1)
     
      + u(15,Kov,IE,1) + u(16,Kov,IE,1) + u(17,Kov,IE,1) + u(18,Kov,IE,1) + u(19,Kov,IE,1) + u(20,Kov,IE,1) + u(21,Kov,IE,1) + u(22,Kov,IE,1) + u(23,Kov,IE,1) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Kov,IE,2)..  u(1,Kov,IE,2) + u(2,Kov,IE,2) + u(3,Kov,IE,2) + u(4,Kov,IE,2) + u(5,Kov,IE,2) + u(6,Kov,IE,2) + u(7,Kov,IE,2) + u(8,Kov,IE,2) + u(9,Kov,IE,2) + u(10,Kov,IE,2) + u(11,Kov,IE,2) + u(12,Kov,IE,2) + u(13,Kov,IE,2) + u(14,Kov,IE,2)
     
      + u(15,Kov,IE,2) + u(16,Kov,IE,2) + u(17,Kov,IE,2) + u(18,Kov,IE,2) + u(19,Kov,IE,2) + u(20,Kov,IE,2) + u(21,Kov,IE,2) + u(22,Kov,IE,2) + u(23,Kov,IE,2) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Kov,IE,3)..  u(1,Kov,IE,3) + u(2,Kov,IE,3) + u(3,Kov,IE,3) + u(4,Kov,IE,3) + u(5,Kov,IE,3) + u(6,Kov,IE,3) + u(7,Kov,IE,3) + u(8,Kov,IE,3) + u(9,Kov,IE,3) + u(10,Kov,IE,3) + u(11,Kov,IE,3) + u(12,Kov,IE,3) + u(13,Kov,IE,3) + u(14,Kov,IE,3)
     
      + u(15,Kov,IE,3) + u(16,Kov,IE,3) + u(17,Kov,IE,3) + u(18,Kov,IE,3) + u(19,Kov,IE,3) + u(20,Kov,IE,3) + u(21,Kov,IE,3) + u(22,Kov,IE,3) + u(23,Kov,IE,3) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Kov,PA,1)..  u(1,Kov,PA,1) + u(2,Kov,PA,1) + u(3,Kov,PA,1) + u(4,Kov,PA,1) + u(5,Kov,PA,1) + u(6,Kov,PA,1) + u(7,Kov,PA,1) + u(8,Kov,PA,1) + u(9,Kov,PA,1) + u(10,Kov,PA,1) + u(11,Kov,PA,1) + u(12,Kov,PA,1) + u(13,Kov,PA,1) + u(14,Kov,PA,1)
     
      + u(15,Kov,PA,1) + u(16,Kov,PA,1) + u(17,Kov,PA,1) + u(18,Kov,PA,1) + u(19,Kov,PA,1) + u(20,Kov,PA,1) + u(21,Kov,PA,1) + u(22,Kov,PA,1) + u(23,Kov,PA,1) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Kov,PA,2)..  u(1,Kov,PA,2) + u(2,Kov,PA,2) + u(3,Kov,PA,2) + u(4,Kov,PA,2) + u(5,Kov,PA,2) + u(6,Kov,PA,2) + u(7,Kov,PA,2) + u(8,Kov,PA,2) + u(9,Kov,PA,2) + u(10,Kov,PA,2) + u(11,Kov,PA,2) + u(12,Kov,PA,2) + u(13,Kov,PA,2) + u(14,Kov,PA,2)
     
      + u(15,Kov,PA,2) + u(16,Kov,PA,2) + u(17,Kov,PA,2) + u(18,Kov,PA,2) + u(19,Kov,PA,2) + u(20,Kov,PA,2) + u(21,Kov,PA,2) + u(22,Kov,PA,2) + u(23,Kov,PA,2) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Kov,PA,3)..  u(1,Kov,PA,3) + u(2,Kov,PA,3) + u(3,Kov,PA,3) + u(4,Kov,PA,3) + u(5,Kov,PA,3) + u(6,Kov,PA,3) + u(7,Kov,PA,3) + u(8,Kov,PA,3) + u(9,Kov,PA,3) + u(10,Kov,PA,3) + u(11,Kov,PA,3) + u(12,Kov,PA,3) + u(13,Kov,PA,3) + u(14,Kov,PA,3)
     
      + u(15,Kov,PA,3) + u(16,Kov,PA,3) + u(17,Kov,PA,3) + u(18,Kov,PA,3) + u(19,Kov,PA,3) + u(20,Kov,PA,3) + u(21,Kov,PA,3) + u(22,Kov,PA,3) + u(23,Kov,PA,3) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Kov,KI,1)..  u(1,Kov,KI,1) + u(2,Kov,KI,1) + u(3,Kov,KI,1) + u(4,Kov,KI,1) + u(5,Kov,KI,1) + u(6,Kov,KI,1) + u(7,Kov,KI,1) + u(8,Kov,KI,1) + u(9,Kov,KI,1) + u(10,Kov,KI,1) + u(11,Kov,KI,1) + u(12,Kov,KI,1) + u(13,Kov,KI,1) + u(14,Kov,KI,1)
     
      + u(15,Kov,KI,1) + u(16,Kov,KI,1) + u(17,Kov,KI,1) + u(18,Kov,KI,1) + u(19,Kov,KI,1) + u(20,Kov,KI,1) + u(21,Kov,KI,1) + u(22,Kov,KI,1) + u(23,Kov,KI,1) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Kov,KI,2)..  u(1,Kov,KI,2) + u(2,Kov,KI,2) + u(3,Kov,KI,2) + u(4,Kov,KI,2) + u(5,Kov,KI,2) + u(6,Kov,KI,2) + u(7,Kov,KI,2) + u(8,Kov,KI,2) + u(9,Kov,KI,2) + u(10,Kov,KI,2) + u(11,Kov,KI,2) + u(12,Kov,KI,2) + u(13,Kov,KI,2) + u(14,Kov,KI,2)
     
      + u(15,Kov,KI,2) + u(16,Kov,KI,2) + u(17,Kov,KI,2) + u(18,Kov,KI,2) + u(19,Kov,KI,2) + u(20,Kov,KI,2) + u(21,Kov,KI,2) + u(22,Kov,KI,2) + u(23,Kov,KI,2) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Kov,KI,3)..  u(1,Kov,KI,3) + u(2,Kov,KI,3) + u(3,Kov,KI,3) + u(4,Kov,KI,3) + u(5,Kov,KI,3) + u(6,Kov,KI,3) + u(7,Kov,KI,3) + u(8,Kov,KI,3) + u(9,Kov,KI,3) + u(10,Kov,KI,3) + u(11,Kov,KI,3) + u(12,Kov,KI,3) + u(13,Kov,KI,3) + u(14,Kov,KI,3)
     
      + u(15,Kov,KI,3) + u(16,Kov,KI,3) + u(17,Kov,KI,3) + u(18,Kov,KI,3) + u(19,Kov,KI,3) + u(20,Kov,KI,3) + u(21,Kov,KI,3) + u(22,Kov,KI,3) + u(23,Kov,KI,3) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Hsel,EU,1)..  u(1,Hsel,EU,1) + u(2,Hsel,EU,1) + u(3,Hsel,EU,1) + u(4,Hsel,EU,1) + u(5,Hsel,EU,1) + u(6,Hsel,EU,1) + u(7,Hsel,EU,1) + u(8,Hsel,EU,1) + u(9,Hsel,EU,1) + u(10,Hsel,EU,1) + u(11,Hsel,EU,1) + u(12,Hsel,EU,1) + u(13,Hsel,EU,1)
     
      + u(14,Hsel,EU,1) + u(15,Hsel,EU,1) + u(16,Hsel,EU,1) + u(17,Hsel,EU,1) + u(18,Hsel,EU,1) + u(19,Hsel,EU,1) + u(20,Hsel,EU,1) + u(21,Hsel,EU,1) + u(22,Hsel,EU,1) + u(23,Hsel,EU,1) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 23:25:38 Page 43
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 433


     Barges_sell  =E=  ensure we only pick one value  n for barges for each product to each city

Barges_sell(Hsel,EU,2)..  u(1,Hsel,EU,2) + u(2,Hsel,EU,2) + u(3,Hsel,EU,2) + u(4,Hsel,EU,2) + u(5,Hsel,EU,2) + u(6,Hsel,EU,2) + u(7,Hsel,EU,2) + u(8,Hsel,EU,2) + u(9,Hsel,EU,2) + u(10,Hsel,EU,2) + u(11,Hsel,EU,2) + u(12,Hsel,EU,2) + u(13,Hsel,EU,2)
     
      + u(14,Hsel,EU,2) + u(15,Hsel,EU,2) + u(16,Hsel,EU,2) + u(17,Hsel,EU,2) + u(18,Hsel,EU,2) + u(19,Hsel,EU,2) + u(20,Hsel,EU,2) + u(21,Hsel,EU,2) + u(22,Hsel,EU,2) + u(23,Hsel,EU,2) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Hsel,EU,3)..  u(1,Hsel,EU,3) + u(2,Hsel,EU,3) + u(3,Hsel,EU,3) + u(4,Hsel,EU,3) + u(5,Hsel,EU,3) + u(6,Hsel,EU,3) + u(7,Hsel,EU,3) + u(8,Hsel,EU,3) + u(9,Hsel,EU,3) + u(10,Hsel,EU,3) + u(11,Hsel,EU,3) + u(12,Hsel,EU,3) + u(13,Hsel,EU,3)
     
      + u(14,Hsel,EU,3) + u(15,Hsel,EU,3) + u(16,Hsel,EU,3) + u(17,Hsel,EU,3) + u(18,Hsel,EU,3) + u(19,Hsel,EU,3) + u(20,Hsel,EU,3) + u(21,Hsel,EU,3) + u(22,Hsel,EU,3) + u(23,Hsel,EU,3) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Hsel,IE,1)..  u(1,Hsel,IE,1) + u(2,Hsel,IE,1) + u(3,Hsel,IE,1) + u(4,Hsel,IE,1) + u(5,Hsel,IE,1) + u(6,Hsel,IE,1) + u(7,Hsel,IE,1) + u(8,Hsel,IE,1) + u(9,Hsel,IE,1) + u(10,Hsel,IE,1) + u(11,Hsel,IE,1) + u(12,Hsel,IE,1) + u(13,Hsel,IE,1)
     
      + u(14,Hsel,IE,1) + u(15,Hsel,IE,1) + u(16,Hsel,IE,1) + u(17,Hsel,IE,1) + u(18,Hsel,IE,1) + u(19,Hsel,IE,1) + u(20,Hsel,IE,1) + u(21,Hsel,IE,1) + u(22,Hsel,IE,1) + u(23,Hsel,IE,1) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Hsel,IE,2)..  u(1,Hsel,IE,2) + u(2,Hsel,IE,2) + u(3,Hsel,IE,2) + u(4,Hsel,IE,2) + u(5,Hsel,IE,2) + u(6,Hsel,IE,2) + u(7,Hsel,IE,2) + u(8,Hsel,IE,2) + u(9,Hsel,IE,2) + u(10,Hsel,IE,2) + u(11,Hsel,IE,2) + u(12,Hsel,IE,2) + u(13,Hsel,IE,2)
     
      + u(14,Hsel,IE,2) + u(15,Hsel,IE,2) + u(16,Hsel,IE,2) + u(17,Hsel,IE,2) + u(18,Hsel,IE,2) + u(19,Hsel,IE,2) + u(20,Hsel,IE,2) + u(21,Hsel,IE,2) + u(22,Hsel,IE,2) + u(23,Hsel,IE,2) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Hsel,IE,3)..  u(1,Hsel,IE,3) + u(2,Hsel,IE,3) + u(3,Hsel,IE,3) + u(4,Hsel,IE,3) + u(5,Hsel,IE,3) + u(6,Hsel,IE,3) + u(7,Hsel,IE,3) + u(8,Hsel,IE,3) + u(9,Hsel,IE,3) + u(10,Hsel,IE,3) + u(11,Hsel,IE,3) + u(12,Hsel,IE,3) + u(13,Hsel,IE,3)
     
      + u(14,Hsel,IE,3) + u(15,Hsel,IE,3) + u(16,Hsel,IE,3) + u(17,Hsel,IE,3) + u(18,Hsel,IE,3) + u(19,Hsel,IE,3) + u(20,Hsel,IE,3) + u(21,Hsel,IE,3) + u(22,Hsel,IE,3) + u(23,Hsel,IE,3) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Hsel,PA,1)..  u(1,Hsel,PA,1) + u(2,Hsel,PA,1) + u(3,Hsel,PA,1) + u(4,Hsel,PA,1) + u(5,Hsel,PA,1) + u(6,Hsel,PA,1) + u(7,Hsel,PA,1) + u(8,Hsel,PA,1) + u(9,Hsel,PA,1) + u(10,Hsel,PA,1) + u(11,Hsel,PA,1) + u(12,Hsel,PA,1) + u(13,Hsel,PA,1)
     
      + u(14,Hsel,PA,1) + u(15,Hsel,PA,1) + u(16,Hsel,PA,1) + u(17,Hsel,PA,1) + u(18,Hsel,PA,1) + u(19,Hsel,PA,1) + u(20,Hsel,PA,1) + u(21,Hsel,PA,1) + u(22,Hsel,PA,1) + u(23,Hsel,PA,1) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Hsel,PA,2)..  u(1,Hsel,PA,2) + u(2,Hsel,PA,2) + u(3,Hsel,PA,2) + u(4,Hsel,PA,2) + u(5,Hsel,PA,2) + u(6,Hsel,PA,2) + u(7,Hsel,PA,2) + u(8,Hsel,PA,2) + u(9,Hsel,PA,2) + u(10,Hsel,PA,2) + u(11,Hsel,PA,2) + u(12,Hsel,PA,2) + u(13,Hsel,PA,2)
     
      + u(14,Hsel,PA,2) + u(15,Hsel,PA,2) + u(16,Hsel,PA,2) + u(17,Hsel,PA,2) + u(18,Hsel,PA,2) + u(19,Hsel,PA,2) + u(20,Hsel,PA,2) + u(21,Hsel,PA,2) + u(22,Hsel,PA,2) + u(23,Hsel,PA,2) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Hsel,PA,3)..  u(1,Hsel,PA,3) + u(2,Hsel,PA,3) + u(3,Hsel,PA,3) + u(4,Hsel,PA,3) + u(5,Hsel,PA,3) + u(6,Hsel,PA,3) + u(7,Hsel,PA,3) + u(8,Hsel,PA,3) + u(9,Hsel,PA,3) + u(10,Hsel,PA,3) + u(11,Hsel,PA,3) + u(12,Hsel,PA,3) + u(13,Hsel,PA,3)
     
      + u(14,Hsel,PA,3) + u(15,Hsel,PA,3) + u(16,Hsel,PA,3) + u(17,Hsel,PA,3) + u(18,Hsel,PA,3) + u(19,Hsel,PA,3) + u(20,Hsel,PA,3) + u(21,Hsel,PA,3) + u(22,Hsel,PA,3) + u(23,Hsel,PA,3) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Hsel,KI,1)..  u(1,Hsel,KI,1) + u(2,Hsel,KI,1) + u(3,Hsel,KI,1) + u(4,Hsel,KI,1) + u(5,Hsel,KI,1) + u(6,Hsel,KI,1) + u(7,Hsel,KI,1) + u(8,Hsel,KI,1) + u(9,Hsel,KI,1) + u(10,Hsel,KI,1) + u(11,Hsel,KI,1) + u(12,Hsel,KI,1) + u(13,Hsel,KI,1)
     
      + u(14,Hsel,KI,1) + u(15,Hsel,KI,1) + u(16,Hsel,KI,1) + u(17,Hsel,KI,1) + u(18,Hsel,KI,1) + u(19,Hsel,KI,1) + u(20,Hsel,KI,1) + u(21,Hsel,KI,1) + u(22,Hsel,KI,1) + u(23,Hsel,KI,1) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Hsel,KI,2)..  u(1,Hsel,KI,2) + u(2,Hsel,KI,2) + u(3,Hsel,KI,2) + u(4,Hsel,KI,2) + u(5,Hsel,KI,2) + u(6,Hsel,KI,2) + u(7,Hsel,KI,2) + u(8,Hsel,KI,2) + u(9,Hsel,KI,2) + u(10,Hsel,KI,2) + u(11,Hsel,KI,2) + u(12,Hsel,KI,2) + u(13,Hsel,KI,2)
     
      + u(14,Hsel,KI,2) + u(15,Hsel,KI,2) + u(16,Hsel,KI,2) + u(17,Hsel,KI,2) + u(18,Hsel,KI,2) + u(19,Hsel,KI,2) + u(20,Hsel,KI,2) + u(21,Hsel,KI,2) + u(22,Hsel,KI,2) + u(23,Hsel,KI,2) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Hsel,KI,3)..  u(1,Hsel,KI,3) + u(2,Hsel,KI,3) + u(3,Hsel,KI,3) + u(4,Hsel,KI,3) + u(5,Hsel,KI,3) + u(6,Hsel,KI,3) + u(7,Hsel,KI,3) + u(8,Hsel,KI,3) + u(9,Hsel,KI,3) + u(10,Hsel,KI,3) + u(11,Hsel,KI,3) + u(12,Hsel,KI,3) + u(13,Hsel,KI,3)
     
      + u(14,Hsel,KI,3) + u(15,Hsel,KI,3) + u(16,Hsel,KI,3) + u(17,Hsel,KI,3) + u(18,Hsel,KI,3) + u(19,Hsel,KI,3) + u(20,Hsel,KI,3) + u(21,Hsel,KI,3) + u(22,Hsel,KI,3) + u(23,Hsel,KI,3) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Lsel,EU,1)..  u(1,Lsel,EU,1) + u(2,Lsel,EU,1) + u(3,Lsel,EU,1) + u(4,Lsel,EU,1) + u(5,Lsel,EU,1) + u(6,Lsel,EU,1) + u(7,Lsel,EU,1) + u(8,Lsel,EU,1) + u(9,Lsel,EU,1) + u(10,Lsel,EU,1) + u(11,Lsel,EU,1) + u(12,Lsel,EU,1) + u(13,Lsel,EU,1)
     
      + u(14,Lsel,EU,1) + u(15,Lsel,EU,1) + u(16,Lsel,EU,1) + u(17,Lsel,EU,1) + u(18,Lsel,EU,1) + u(19,Lsel,EU,1) + u(20,Lsel,EU,1) + u(21,Lsel,EU,1) + u(22,Lsel,EU,1) + u(23,Lsel,EU,1) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 23:25:38 Page 44
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 433


     Barges_sell  =E=  ensure we only pick one value  n for barges for each product to each city

Barges_sell(Lsel,EU,2)..  u(1,Lsel,EU,2) + u(2,Lsel,EU,2) + u(3,Lsel,EU,2) + u(4,Lsel,EU,2) + u(5,Lsel,EU,2) + u(6,Lsel,EU,2) + u(7,Lsel,EU,2) + u(8,Lsel,EU,2) + u(9,Lsel,EU,2) + u(10,Lsel,EU,2) + u(11,Lsel,EU,2) + u(12,Lsel,EU,2) + u(13,Lsel,EU,2)
     
      + u(14,Lsel,EU,2) + u(15,Lsel,EU,2) + u(16,Lsel,EU,2) + u(17,Lsel,EU,2) + u(18,Lsel,EU,2) + u(19,Lsel,EU,2) + u(20,Lsel,EU,2) + u(21,Lsel,EU,2) + u(22,Lsel,EU,2) + u(23,Lsel,EU,2) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Lsel,EU,3)..  u(1,Lsel,EU,3) + u(2,Lsel,EU,3) + u(3,Lsel,EU,3) + u(4,Lsel,EU,3) + u(5,Lsel,EU,3) + u(6,Lsel,EU,3) + u(7,Lsel,EU,3) + u(8,Lsel,EU,3) + u(9,Lsel,EU,3) + u(10,Lsel,EU,3) + u(11,Lsel,EU,3) + u(12,Lsel,EU,3) + u(13,Lsel,EU,3)
     
      + u(14,Lsel,EU,3) + u(15,Lsel,EU,3) + u(16,Lsel,EU,3) + u(17,Lsel,EU,3) + u(18,Lsel,EU,3) + u(19,Lsel,EU,3) + u(20,Lsel,EU,3) + u(21,Lsel,EU,3) + u(22,Lsel,EU,3) + u(23,Lsel,EU,3) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Lsel,IE,1)..  u(1,Lsel,IE,1) + u(2,Lsel,IE,1) + u(3,Lsel,IE,1) + u(4,Lsel,IE,1) + u(5,Lsel,IE,1) + u(6,Lsel,IE,1) + u(7,Lsel,IE,1) + u(8,Lsel,IE,1) + u(9,Lsel,IE,1) + u(10,Lsel,IE,1) + u(11,Lsel,IE,1) + u(12,Lsel,IE,1) + u(13,Lsel,IE,1)
     
      + u(14,Lsel,IE,1) + u(15,Lsel,IE,1) + u(16,Lsel,IE,1) + u(17,Lsel,IE,1) + u(18,Lsel,IE,1) + u(19,Lsel,IE,1) + u(20,Lsel,IE,1) + u(21,Lsel,IE,1) + u(22,Lsel,IE,1) + u(23,Lsel,IE,1) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Lsel,IE,2)..  u(1,Lsel,IE,2) + u(2,Lsel,IE,2) + u(3,Lsel,IE,2) + u(4,Lsel,IE,2) + u(5,Lsel,IE,2) + u(6,Lsel,IE,2) + u(7,Lsel,IE,2) + u(8,Lsel,IE,2) + u(9,Lsel,IE,2) + u(10,Lsel,IE,2) + u(11,Lsel,IE,2) + u(12,Lsel,IE,2) + u(13,Lsel,IE,2)
     
      + u(14,Lsel,IE,2) + u(15,Lsel,IE,2) + u(16,Lsel,IE,2) + u(17,Lsel,IE,2) + u(18,Lsel,IE,2) + u(19,Lsel,IE,2) + u(20,Lsel,IE,2) + u(21,Lsel,IE,2) + u(22,Lsel,IE,2) + u(23,Lsel,IE,2) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Lsel,IE,3)..  u(1,Lsel,IE,3) + u(2,Lsel,IE,3) + u(3,Lsel,IE,3) + u(4,Lsel,IE,3) + u(5,Lsel,IE,3) + u(6,Lsel,IE,3) + u(7,Lsel,IE,3) + u(8,Lsel,IE,3) + u(9,Lsel,IE,3) + u(10,Lsel,IE,3) + u(11,Lsel,IE,3) + u(12,Lsel,IE,3) + u(13,Lsel,IE,3)
     
      + u(14,Lsel,IE,3) + u(15,Lsel,IE,3) + u(16,Lsel,IE,3) + u(17,Lsel,IE,3) + u(18,Lsel,IE,3) + u(19,Lsel,IE,3) + u(20,Lsel,IE,3) + u(21,Lsel,IE,3) + u(22,Lsel,IE,3) + u(23,Lsel,IE,3) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Lsel,PA,1)..  u(1,Lsel,PA,1) + u(2,Lsel,PA,1) + u(3,Lsel,PA,1) + u(4,Lsel,PA,1) + u(5,Lsel,PA,1) + u(6,Lsel,PA,1) + u(7,Lsel,PA,1) + u(8,Lsel,PA,1) + u(9,Lsel,PA,1) + u(10,Lsel,PA,1) + u(11,Lsel,PA,1) + u(12,Lsel,PA,1) + u(13,Lsel,PA,1)
     
      + u(14,Lsel,PA,1) + u(15,Lsel,PA,1) + u(16,Lsel,PA,1) + u(17,Lsel,PA,1) + u(18,Lsel,PA,1) + u(19,Lsel,PA,1) + u(20,Lsel,PA,1) + u(21,Lsel,PA,1) + u(22,Lsel,PA,1) + u(23,Lsel,PA,1) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Lsel,PA,2)..  u(1,Lsel,PA,2) + u(2,Lsel,PA,2) + u(3,Lsel,PA,2) + u(4,Lsel,PA,2) + u(5,Lsel,PA,2) + u(6,Lsel,PA,2) + u(7,Lsel,PA,2) + u(8,Lsel,PA,2) + u(9,Lsel,PA,2) + u(10,Lsel,PA,2) + u(11,Lsel,PA,2) + u(12,Lsel,PA,2) + u(13,Lsel,PA,2)
     
      + u(14,Lsel,PA,2) + u(15,Lsel,PA,2) + u(16,Lsel,PA,2) + u(17,Lsel,PA,2) + u(18,Lsel,PA,2) + u(19,Lsel,PA,2) + u(20,Lsel,PA,2) + u(21,Lsel,PA,2) + u(22,Lsel,PA,2) + u(23,Lsel,PA,2) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Lsel,PA,3)..  u(1,Lsel,PA,3) + u(2,Lsel,PA,3) + u(3,Lsel,PA,3) + u(4,Lsel,PA,3) + u(5,Lsel,PA,3) + u(6,Lsel,PA,3) + u(7,Lsel,PA,3) + u(8,Lsel,PA,3) + u(9,Lsel,PA,3) + u(10,Lsel,PA,3) + u(11,Lsel,PA,3) + u(12,Lsel,PA,3) + u(13,Lsel,PA,3)
     
      + u(14,Lsel,PA,3) + u(15,Lsel,PA,3) + u(16,Lsel,PA,3) + u(17,Lsel,PA,3) + u(18,Lsel,PA,3) + u(19,Lsel,PA,3) + u(20,Lsel,PA,3) + u(21,Lsel,PA,3) + u(22,Lsel,PA,3) + u(23,Lsel,PA,3) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Lsel,KI,1)..  u(1,Lsel,KI,1) + u(2,Lsel,KI,1) + u(3,Lsel,KI,1) + u(4,Lsel,KI,1) + u(5,Lsel,KI,1) + u(6,Lsel,KI,1) + u(7,Lsel,KI,1) + u(8,Lsel,KI,1) + u(9,Lsel,KI,1) + u(10,Lsel,KI,1) + u(11,Lsel,KI,1) + u(12,Lsel,KI,1) + u(13,Lsel,KI,1)
     
      + u(14,Lsel,KI,1) + u(15,Lsel,KI,1) + u(16,Lsel,KI,1) + u(17,Lsel,KI,1) + u(18,Lsel,KI,1) + u(19,Lsel,KI,1) + u(20,Lsel,KI,1) + u(21,Lsel,KI,1) + u(22,Lsel,KI,1) + u(23,Lsel,KI,1) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Lsel,KI,2)..  u(1,Lsel,KI,2) + u(2,Lsel,KI,2) + u(3,Lsel,KI,2) + u(4,Lsel,KI,2) + u(5,Lsel,KI,2) + u(6,Lsel,KI,2) + u(7,Lsel,KI,2) + u(8,Lsel,KI,2) + u(9,Lsel,KI,2) + u(10,Lsel,KI,2) + u(11,Lsel,KI,2) + u(12,Lsel,KI,2) + u(13,Lsel,KI,2)
     
      + u(14,Lsel,KI,2) + u(15,Lsel,KI,2) + u(16,Lsel,KI,2) + u(17,Lsel,KI,2) + u(18,Lsel,KI,2) + u(19,Lsel,KI,2) + u(20,Lsel,KI,2) + u(21,Lsel,KI,2) + u(22,Lsel,KI,2) + u(23,Lsel,KI,2) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Lsel,KI,3)..  u(1,Lsel,KI,3) + u(2,Lsel,KI,3) + u(3,Lsel,KI,3) + u(4,Lsel,KI,3) + u(5,Lsel,KI,3) + u(6,Lsel,KI,3) + u(7,Lsel,KI,3) + u(8,Lsel,KI,3) + u(9,Lsel,KI,3) + u(10,Lsel,KI,3) + u(11,Lsel,KI,3) + u(12,Lsel,KI,3) + u(13,Lsel,KI,3)
     
      + u(14,Lsel,KI,3) + u(15,Lsel,KI,3) + u(16,Lsel,KI,3) + u(17,Lsel,KI,3) + u(18,Lsel,KI,3) + u(19,Lsel,KI,3) + u(20,Lsel,KI,3) + u(21,Lsel,KI,3) + u(22,Lsel,KI,3) + u(23,Lsel,KI,3) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Pap,EU,1)..  u(1,Pap,EU,1) + u(2,Pap,EU,1) + u(3,Pap,EU,1) + u(4,Pap,EU,1) + u(5,Pap,EU,1) + u(6,Pap,EU,1) + u(7,Pap,EU,1) + u(8,Pap,EU,1) + u(9,Pap,EU,1) + u(10,Pap,EU,1) + u(11,Pap,EU,1) + u(12,Pap,EU,1) + u(13,Pap,EU,1) + u(14,Pap,EU,1)
     
      + u(15,Pap,EU,1) + u(16,Pap,EU,1) + u(17,Pap,EU,1) + u(18,Pap,EU,1) + u(19,Pap,EU,1) + u(20,Pap,EU,1) + u(21,Pap,EU,1) + u(22,Pap,EU,1) + u(23,Pap,EU,1) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 23:25:38 Page 45
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 433


     Barges_sell  =E=  ensure we only pick one value  n for barges for each product to each city

Barges_sell(Pap,EU,2)..  u(1,Pap,EU,2) + u(2,Pap,EU,2) + u(3,Pap,EU,2) + u(4,Pap,EU,2) + u(5,Pap,EU,2) + u(6,Pap,EU,2) + u(7,Pap,EU,2) + u(8,Pap,EU,2) + u(9,Pap,EU,2) + u(10,Pap,EU,2) + u(11,Pap,EU,2) + u(12,Pap,EU,2) + u(13,Pap,EU,2) + u(14,Pap,EU,2)
     
      + u(15,Pap,EU,2) + u(16,Pap,EU,2) + u(17,Pap,EU,2) + u(18,Pap,EU,2) + u(19,Pap,EU,2) + u(20,Pap,EU,2) + u(21,Pap,EU,2) + u(22,Pap,EU,2) + u(23,Pap,EU,2) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Pap,EU,3)..  u(1,Pap,EU,3) + u(2,Pap,EU,3) + u(3,Pap,EU,3) + u(4,Pap,EU,3) + u(5,Pap,EU,3) + u(6,Pap,EU,3) + u(7,Pap,EU,3) + u(8,Pap,EU,3) + u(9,Pap,EU,3) + u(10,Pap,EU,3) + u(11,Pap,EU,3) + u(12,Pap,EU,3) + u(13,Pap,EU,3) + u(14,Pap,EU,3)
     
      + u(15,Pap,EU,3) + u(16,Pap,EU,3) + u(17,Pap,EU,3) + u(18,Pap,EU,3) + u(19,Pap,EU,3) + u(20,Pap,EU,3) + u(21,Pap,EU,3) + u(22,Pap,EU,3) + u(23,Pap,EU,3) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Pap,IE,1)..  u(1,Pap,IE,1) + u(2,Pap,IE,1) + u(3,Pap,IE,1) + u(4,Pap,IE,1) + u(5,Pap,IE,1) + u(6,Pap,IE,1) + u(7,Pap,IE,1) + u(8,Pap,IE,1) + u(9,Pap,IE,1) + u(10,Pap,IE,1) + u(11,Pap,IE,1) + u(12,Pap,IE,1) + u(13,Pap,IE,1) + u(14,Pap,IE,1)
     
      + u(15,Pap,IE,1) + u(16,Pap,IE,1) + u(17,Pap,IE,1) + u(18,Pap,IE,1) + u(19,Pap,IE,1) + u(20,Pap,IE,1) + u(21,Pap,IE,1) + u(22,Pap,IE,1) + u(23,Pap,IE,1) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Pap,IE,2)..  u(1,Pap,IE,2) + u(2,Pap,IE,2) + u(3,Pap,IE,2) + u(4,Pap,IE,2) + u(5,Pap,IE,2) + u(6,Pap,IE,2) + u(7,Pap,IE,2) + u(8,Pap,IE,2) + u(9,Pap,IE,2) + u(10,Pap,IE,2) + u(11,Pap,IE,2) + u(12,Pap,IE,2) + u(13,Pap,IE,2) + u(14,Pap,IE,2)
     
      + u(15,Pap,IE,2) + u(16,Pap,IE,2) + u(17,Pap,IE,2) + u(18,Pap,IE,2) + u(19,Pap,IE,2) + u(20,Pap,IE,2) + u(21,Pap,IE,2) + u(22,Pap,IE,2) + u(23,Pap,IE,2) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Pap,IE,3)..  u(1,Pap,IE,3) + u(2,Pap,IE,3) + u(3,Pap,IE,3) + u(4,Pap,IE,3) + u(5,Pap,IE,3) + u(6,Pap,IE,3) + u(7,Pap,IE,3) + u(8,Pap,IE,3) + u(9,Pap,IE,3) + u(10,Pap,IE,3) + u(11,Pap,IE,3) + u(12,Pap,IE,3) + u(13,Pap,IE,3) + u(14,Pap,IE,3)
     
      + u(15,Pap,IE,3) + u(16,Pap,IE,3) + u(17,Pap,IE,3) + u(18,Pap,IE,3) + u(19,Pap,IE,3) + u(20,Pap,IE,3) + u(21,Pap,IE,3) + u(22,Pap,IE,3) + u(23,Pap,IE,3) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Pap,PA,1)..  u(1,Pap,PA,1) + u(2,Pap,PA,1) + u(3,Pap,PA,1) + u(4,Pap,PA,1) + u(5,Pap,PA,1) + u(6,Pap,PA,1) + u(7,Pap,PA,1) + u(8,Pap,PA,1) + u(9,Pap,PA,1) + u(10,Pap,PA,1) + u(11,Pap,PA,1) + u(12,Pap,PA,1) + u(13,Pap,PA,1) + u(14,Pap,PA,1)
     
      + u(15,Pap,PA,1) + u(16,Pap,PA,1) + u(17,Pap,PA,1) + u(18,Pap,PA,1) + u(19,Pap,PA,1) + u(20,Pap,PA,1) + u(21,Pap,PA,1) + u(22,Pap,PA,1) + u(23,Pap,PA,1) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Pap,PA,2)..  u(1,Pap,PA,2) + u(2,Pap,PA,2) + u(3,Pap,PA,2) + u(4,Pap,PA,2) + u(5,Pap,PA,2) + u(6,Pap,PA,2) + u(7,Pap,PA,2) + u(8,Pap,PA,2) + u(9,Pap,PA,2) + u(10,Pap,PA,2) + u(11,Pap,PA,2) + u(12,Pap,PA,2) + u(13,Pap,PA,2) + u(14,Pap,PA,2)
     
      + u(15,Pap,PA,2) + u(16,Pap,PA,2) + u(17,Pap,PA,2) + u(18,Pap,PA,2) + u(19,Pap,PA,2) + u(20,Pap,PA,2) + u(21,Pap,PA,2) + u(22,Pap,PA,2) + u(23,Pap,PA,2) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Pap,PA,3)..  u(1,Pap,PA,3) + u(2,Pap,PA,3) + u(3,Pap,PA,3) + u(4,Pap,PA,3) + u(5,Pap,PA,3) + u(6,Pap,PA,3) + u(7,Pap,PA,3) + u(8,Pap,PA,3) + u(9,Pap,PA,3) + u(10,Pap,PA,3) + u(11,Pap,PA,3) + u(12,Pap,PA,3) + u(13,Pap,PA,3) + u(14,Pap,PA,3)
     
      + u(15,Pap,PA,3) + u(16,Pap,PA,3) + u(17,Pap,PA,3) + u(18,Pap,PA,3) + u(19,Pap,PA,3) + u(20,Pap,PA,3) + u(21,Pap,PA,3) + u(22,Pap,PA,3) + u(23,Pap,PA,3) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Pap,KI,1)..  u(1,Pap,KI,1) + u(2,Pap,KI,1) + u(3,Pap,KI,1) + u(4,Pap,KI,1) + u(5,Pap,KI,1) + u(6,Pap,KI,1) + u(7,Pap,KI,1) + u(8,Pap,KI,1) + u(9,Pap,KI,1) + u(10,Pap,KI,1) + u(11,Pap,KI,1) + u(12,Pap,KI,1) + u(13,Pap,KI,1) + u(14,Pap,KI,1)
     
      + u(15,Pap,KI,1) + u(16,Pap,KI,1) + u(17,Pap,KI,1) + u(18,Pap,KI,1) + u(19,Pap,KI,1) + u(20,Pap,KI,1) + u(21,Pap,KI,1) + u(22,Pap,KI,1) + u(23,Pap,KI,1) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Pap,KI,2)..  u(1,Pap,KI,2) + u(2,Pap,KI,2) + u(3,Pap,KI,2) + u(4,Pap,KI,2) + u(5,Pap,KI,2) + u(6,Pap,KI,2) + u(7,Pap,KI,2) + u(8,Pap,KI,2) + u(9,Pap,KI,2) + u(10,Pap,KI,2) + u(11,Pap,KI,2) + u(12,Pap,KI,2) + u(13,Pap,KI,2) + u(14,Pap,KI,2)
     
      + u(15,Pap,KI,2) + u(16,Pap,KI,2) + u(17,Pap,KI,2) + u(18,Pap,KI,2) + u(19,Pap,KI,2) + u(20,Pap,KI,2) + u(21,Pap,KI,2) + u(22,Pap,KI,2) + u(23,Pap,KI,2) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
Barges_sell(Pap,KI,3)..  u(1,Pap,KI,3) + u(2,Pap,KI,3) + u(3,Pap,KI,3) + u(4,Pap,KI,3) + u(5,Pap,KI,3) + u(6,Pap,KI,3) + u(7,Pap,KI,3) + u(8,Pap,KI,3) + u(9,Pap,KI,3) + u(10,Pap,KI,3) + u(11,Pap,KI,3) + u(12,Pap,KI,3) + u(13,Pap,KI,3) + u(14,Pap,KI,3)
     
      + u(15,Pap,KI,3) + u(16,Pap,KI,3) + u(17,Pap,KI,3) + u(18,Pap,KI,3) + u(19,Pap,KI,3) + u(20,Pap,KI,3) + u(21,Pap,KI,3) + u(22,Pap,KI,3) + u(23,Pap,KI,3) =E= 1 ; (LHS = 0, INFES = 1 ****)
     

---- Capacity1  =G=  Capacity goes up if we produce over the capacity

Capacity1(Pap,1)..  - y(Pap,1) + Cap(Pap,1) =G= 0 ; (LHS = 0)
     
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 23:25:38 Page 46
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 433


     Capacity1  =G=  Capacity goes up if we produce over the capacity

Capacity1(Pap,2)..  - y(Pap,2) + Cap(Pap,2) =G= 0 ; (LHS = 0)
     
Capacity1(Pap,3)..  - y(Pap,3) + Cap(Pap,3) =G= 0 ; (LHS = 0)
     
Capacity1(SAW,1)..  - y(Mas,1) - y(Kus,1) - y(Kos,1) + Cap(SAW,1) =G= 0 ; (LHS = 0)
     
Capacity1(SAW,2)..  - y(Mas,2) - y(Kus,2) - y(Kos,2) + Cap(SAW,2) =G= 0 ; (LHS = 0)
     
Capacity1(SAW,3)..  - y(Mas,3) - y(Kus,3) - y(Kos,3) + Cap(SAW,3) =G= 0 ; (LHS = 0)
     
Capacity1(PLY,1)..  - y(Kuv,1) - y(Kov,1) + Cap(PLY,1) =G= 0 ; (LHS = 0)
     
Capacity1(PLY,2)..  - y(Kuv,2) - y(Kov,2) + Cap(PLY,2) =G= 0 ; (LHS = 0)
     
Capacity1(PLY,3)..  - y(Kuv,3) - y(Kov,3) + Cap(PLY,3) =G= 0 ; (LHS = 0)
     
Capacity1(SPULP,1)..  - y(Hsel,1) + Cap(SPULP,1) =G= 0 ; (LHS = 0)
     
Capacity1(SPULP,2)..  - y(Hsel,2) + Cap(SPULP,2) =G= 0 ; (LHS = 0)
     
Capacity1(SPULP,3)..  - y(Hsel,3) + Cap(SPULP,3) =G= 0 ; (LHS = 0)
     
Capacity1(HPULP,1)..  - y(Lsel,1) + Cap(HPULP,1) =G= 0 ; (LHS = 0)
     
Capacity1(HPULP,2)..  - y(Lsel,2) + Cap(HPULP,2) =G= 0 ; (LHS = 0)
     
Capacity1(HPULP,3)..  - y(Lsel,3) + Cap(HPULP,3) =G= 0 ; (LHS = 0)
     

---- MaxCapacity  =L=  Make sure we dont go over the maximum capacity

MaxCapacity(Pap,1)..  Cap(Pap,1) =L= 160000 ; (LHS = 0)
     
MaxCapacity(Pap,2)..  Cap(Pap,2) =L= 160000 ; (LHS = 0)
     
MaxCapacity(Pap,3)..  Cap(Pap,3) =L= 160000 ; (LHS = 0)
     
MaxCapacity(SAW,1)..  Cap(SAW,1) =L= 150000 ; (LHS = 0)
     
MaxCapacity(SAW,2)..  Cap(SAW,2) =L= 150000 ; (LHS = 0)
     
MaxCapacity(SAW,3)..  Cap(SAW,3) =L= 150000 ; (LHS = 0)
     
MaxCapacity(PLY,1)..  Cap(PLY,1) =L= 135000 ; (LHS = 0)
     
MaxCapacity(PLY,2)..  Cap(PLY,2) =L= 135000 ; (LHS = 0)
     
MaxCapacity(PLY,3)..  Cap(PLY,3) =L= 135000 ; (LHS = 0)
     
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 23:25:38 Page 47
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 433


     MaxCapacity  =L=  Make sure we dont go over the maximum capacity

MaxCapacity(SPULP,1)..  Cap(SPULP,1) =L= 200000 ; (LHS = 0)
     
MaxCapacity(SPULP,2)..  Cap(SPULP,2) =L= 200000 ; (LHS = 0)
     
MaxCapacity(SPULP,3)..  Cap(SPULP,3) =L= 200000 ; (LHS = 0)
     
MaxCapacity(HPULP,1)..  Cap(HPULP,1) =L= 300000 ; (LHS = 0)
     
MaxCapacity(HPULP,2)..  Cap(HPULP,2) =L= 300000 ; (LHS = 0)
     
MaxCapacity(HPULP,3)..  Cap(HPULP,3) =L= 300000 ; (LHS = 0)
     

---- CapStart  =L=  Make sure the starting capacity is right

CapStart(Pap,1)..  Cap(Pap,1) =L= 80000 ; (LHS = 0)
     
CapStart(Pap,2)..  Cap(Pap,1) =L= 80000 ; (LHS = 0)
     
CapStart(Pap,3)..  Cap(Pap,1) =L= 80000 ; (LHS = 0)
     
CapStart(SAW,1)..  Cap(SAW,1) =L= 100000 ; (LHS = 0)
     
CapStart(SAW,2)..  Cap(SAW,1) =L= 100000 ; (LHS = 0)
     
CapStart(SAW,3)..  Cap(SAW,1) =L= 100000 ; (LHS = 0)
     
CapStart(PLY,1)..  Cap(PLY,1) =L= 90000 ; (LHS = 0)
     
CapStart(PLY,2)..  Cap(PLY,1) =L= 90000 ; (LHS = 0)
     
CapStart(PLY,3)..  Cap(PLY,1) =L= 90000 ; (LHS = 0)
     
CapStart(SPULP,1)..  Cap(SPULP,1) =L= 100000 ; (LHS = 0)
     
CapStart(SPULP,2)..  Cap(SPULP,1) =L= 100000 ; (LHS = 0)
     
CapStart(SPULP,3)..  Cap(SPULP,1) =L= 100000 ; (LHS = 0)
     
CapStart(HPULP,1)..  Cap(HPULP,1) =L= 150000 ; (LHS = 0)
     
CapStart(HPULP,2)..  Cap(HPULP,1) =L= 150000 ; (LHS = 0)
     
CapStart(HPULP,3)..  Cap(HPULP,1) =L= 150000 ; (LHS = 0)
     

---- PAP_HSEL  =L=  Proportion needed of HSEL for PAP

GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 23:25:38 Page 48
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 433


     PAP_HSEL  =L=  Proportion needed of HSEL for PAP

PAP_HSEL(1)..  - y(Hsel,1) + 0.2*y(Pap,1) =L= 0 ; (LHS = 0)
     
PAP_HSEL(2)..  - y(Hsel,2) + 0.2*y(Pap,2) =L= 0 ; (LHS = 0)
     
PAP_HSEL(3)..  - y(Hsel,3) + 0.2*y(Pap,3) =L= 0 ; (LHS = 0)
     

---- PAP_LSEL  =L=  Proportion needed of LSEL for PAP

PAP_LSEL(1)..  - y(Lsel,1) + 0.2*y(Pap,1) =L= 0 ; (LHS = 0)
     
PAP_LSEL(2)..  - y(Lsel,2) + 0.2*y(Pap,2) =L= 0 ; (LHS = 0)
     
PAP_LSEL(3)..  - y(Lsel,3) + 0.2*y(Pap,3) =L= 0 ; (LHS = 0)
     

---- PULP_Bal  =L=  Cant produce paper without pulp

PULP_Bal(Hsel,1)..  - y(Hsel,1) + 0.2*y(Pap,1) + 10000*u(2,Hsel,EU,1) + 10000*u(2,Hsel,IE,1) + 10000*u(2,Hsel,PA,1) + 10000*u(2,Hsel,KI,1) + 20000*u(3,Hsel,EU,1) + 20000*u(3,Hsel,IE,1) + 20000*u(3,Hsel,PA,1) + 20000*u(3,Hsel,KI,1) + 30000*u(4,Hsel,EU,1)
     
      + 30000*u(4,Hsel,IE,1) + 30000*u(4,Hsel,PA,1) + 30000*u(4,Hsel,KI,1) + 40000*u(5,Hsel,EU,1) + 40000*u(5,Hsel,IE,1) + 40000*u(5,Hsel,PA,1) + 40000*u(5,Hsel,KI,1) + 50000*u(6,Hsel,EU,1) + 50000*u(6,Hsel,IE,1) + 50000*u(6,Hsel,PA,1)
     
      + 50000*u(6,Hsel,KI,1) + 60000*u(7,Hsel,EU,1) + 60000*u(7,Hsel,IE,1) + 60000*u(7,Hsel,PA,1) + 60000*u(7,Hsel,KI,1) + 70000*u(8,Hsel,EU,1) + 70000*u(8,Hsel,IE,1) + 70000*u(8,Hsel,PA,1) + 70000*u(8,Hsel,KI,1) + 80000*u(9,Hsel,EU,1)
     
      + 80000*u(9,Hsel,IE,1) + 80000*u(9,Hsel,PA,1) + 80000*u(9,Hsel,KI,1) + 90000*u(10,Hsel,EU,1) + 90000*u(10,Hsel,IE,1) + 90000*u(10,Hsel,PA,1) + 90000*u(10,Hsel,KI,1) + 100000*u(11,Hsel,EU,1) + 100000*u(11,Hsel,IE,1) + 100000*u(11,Hsel,PA,1)
     
      + 100000*u(11,Hsel,KI,1) + 110000*u(12,Hsel,EU,1) + 110000*u(12,Hsel,IE,1) + 110000*u(12,Hsel,PA,1) + 110000*u(12,Hsel,KI,1) + 120000*u(13,Hsel,EU,1) + 120000*u(13,Hsel,IE,1) + 120000*u(13,Hsel,PA,1) + 120000*u(13,Hsel,KI,1) + 130000*u(14,Hsel,EU,1)
     
      + 130000*u(14,Hsel,IE,1) + 130000*u(14,Hsel,PA,1) + 130000*u(14,Hsel,KI,1) + 140000*u(15,Hsel,EU,1) + 140000*u(15,Hsel,IE,1) + 140000*u(15,Hsel,PA,1) + 140000*u(15,Hsel,KI,1) + 150000*u(16,Hsel,EU,1) + 150000*u(16,Hsel,IE,1) + 150000*u(16,Hsel,PA,1)
     
      + 150000*u(16,Hsel,KI,1) + 160000*u(17,Hsel,EU,1) + 160000*u(17,Hsel,IE,1) + 160000*u(17,Hsel,PA,1) + 160000*u(17,Hsel,KI,1) + 170000*u(18,Hsel,EU,1) + 170000*u(18,Hsel,IE,1) + 170000*u(18,Hsel,PA,1) + 170000*u(18,Hsel,KI,1) + 180000*u(19,Hsel,EU,1)
     
      + 180000*u(19,Hsel,IE,1) + 180000*u(19,Hsel,PA,1) + 180000*u(19,Hsel,KI,1) + 190000*u(20,Hsel,EU,1) + 190000*u(20,Hsel,IE,1) + 190000*u(20,Hsel,PA,1) + 190000*u(20,Hsel,KI,1) + 200000*u(21,Hsel,EU,1) + 200000*u(21,Hsel,IE,1) + 200000*u(21,Hsel,PA,1)
     
      + 200000*u(21,Hsel,KI,1) + 210000*u(22,Hsel,EU,1) + 210000*u(22,Hsel,IE,1) + 210000*u(22,Hsel,PA,1) + 210000*u(22,Hsel,KI,1) + 220000*u(23,Hsel,EU,1) + 220000*u(23,Hsel,IE,1) + 220000*u(23,Hsel,PA,1) + 220000*u(23,Hsel,KI,1) =L= 0 ; (LHS = 0)
     
PULP_Bal(Hsel,2)..  - y(Hsel,2) + 0.2*y(Pap,2) + 10000*u(2,Hsel,EU,2) + 10000*u(2,Hsel,IE,2) + 10000*u(2,Hsel,PA,2) + 10000*u(2,Hsel,KI,2) + 20000*u(3,Hsel,EU,2) + 20000*u(3,Hsel,IE,2) + 20000*u(3,Hsel,PA,2) + 20000*u(3,Hsel,KI,2) + 30000*u(4,Hsel,EU,2)
     
      + 30000*u(4,Hsel,IE,2) + 30000*u(4,Hsel,PA,2) + 30000*u(4,Hsel,KI,2) + 40000*u(5,Hsel,EU,2) + 40000*u(5,Hsel,IE,2) + 40000*u(5,Hsel,PA,2) + 40000*u(5,Hsel,KI,2) + 50000*u(6,Hsel,EU,2) + 50000*u(6,Hsel,IE,2) + 50000*u(6,Hsel,PA,2)
     
      + 50000*u(6,Hsel,KI,2) + 60000*u(7,Hsel,EU,2) + 60000*u(7,Hsel,IE,2) + 60000*u(7,Hsel,PA,2) + 60000*u(7,Hsel,KI,2) + 70000*u(8,Hsel,EU,2) + 70000*u(8,Hsel,IE,2) + 70000*u(8,Hsel,PA,2) + 70000*u(8,Hsel,KI,2) + 80000*u(9,Hsel,EU,2)
     
      + 80000*u(9,Hsel,IE,2) + 80000*u(9,Hsel,PA,2) + 80000*u(9,Hsel,KI,2) + 90000*u(10,Hsel,EU,2) + 90000*u(10,Hsel,IE,2) + 90000*u(10,Hsel,PA,2) + 90000*u(10,Hsel,KI,2) + 100000*u(11,Hsel,EU,2) + 100000*u(11,Hsel,IE,2) + 100000*u(11,Hsel,PA,2)
     
      + 100000*u(11,Hsel,KI,2) + 110000*u(12,Hsel,EU,2) + 110000*u(12,Hsel,IE,2) + 110000*u(12,Hsel,PA,2) + 110000*u(12,Hsel,KI,2) + 120000*u(13,Hsel,EU,2) + 120000*u(13,Hsel,IE,2) + 120000*u(13,Hsel,PA,2) + 120000*u(13,Hsel,KI,2) + 130000*u(14,Hsel,EU,2)
     
      + 130000*u(14,Hsel,IE,2) + 130000*u(14,Hsel,PA,2) + 130000*u(14,Hsel,KI,2) + 140000*u(15,Hsel,EU,2) + 140000*u(15,Hsel,IE,2) + 140000*u(15,Hsel,PA,2) + 140000*u(15,Hsel,KI,2) + 150000*u(16,Hsel,EU,2) + 150000*u(16,Hsel,IE,2) + 150000*u(16,Hsel,PA,2)
     
      + 150000*u(16,Hsel,KI,2) + 160000*u(17,Hsel,EU,2) + 160000*u(17,Hsel,IE,2) + 160000*u(17,Hsel,PA,2) + 160000*u(17,Hsel,KI,2) + 170000*u(18,Hsel,EU,2) + 170000*u(18,Hsel,IE,2) + 170000*u(18,Hsel,PA,2) + 170000*u(18,Hsel,KI,2) + 180000*u(19,Hsel,EU,2)
     
      + 180000*u(19,Hsel,IE,2) + 180000*u(19,Hsel,PA,2) + 180000*u(19,Hsel,KI,2) + 190000*u(20,Hsel,EU,2) + 190000*u(20,Hsel,IE,2) + 190000*u(20,Hsel,PA,2) + 190000*u(20,Hsel,KI,2) + 200000*u(21,Hsel,EU,2) + 200000*u(21,Hsel,IE,2) + 200000*u(21,Hsel,PA,2)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 23:25:38 Page 49
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 433


     PULP_Bal  =L=  Cant produce paper without pulp     
     
      + 200000*u(21,Hsel,KI,2) + 210000*u(22,Hsel,EU,2) + 210000*u(22,Hsel,IE,2) + 210000*u(22,Hsel,PA,2) + 210000*u(22,Hsel,KI,2) + 220000*u(23,Hsel,EU,2) + 220000*u(23,Hsel,IE,2) + 220000*u(23,Hsel,PA,2) + 220000*u(23,Hsel,KI,2) =L= 0 ; (LHS = 0)
     
PULP_Bal(Hsel,3)..  - y(Hsel,3) + 0.2*y(Pap,3) + 10000*u(2,Hsel,EU,3) + 10000*u(2,Hsel,IE,3) + 10000*u(2,Hsel,PA,3) + 10000*u(2,Hsel,KI,3) + 20000*u(3,Hsel,EU,3) + 20000*u(3,Hsel,IE,3) + 20000*u(3,Hsel,PA,3) + 20000*u(3,Hsel,KI,3) + 30000*u(4,Hsel,EU,3)
     
      + 30000*u(4,Hsel,IE,3) + 30000*u(4,Hsel,PA,3) + 30000*u(4,Hsel,KI,3) + 40000*u(5,Hsel,EU,3) + 40000*u(5,Hsel,IE,3) + 40000*u(5,Hsel,PA,3) + 40000*u(5,Hsel,KI,3) + 50000*u(6,Hsel,EU,3) + 50000*u(6,Hsel,IE,3) + 50000*u(6,Hsel,PA,3)
     
      + 50000*u(6,Hsel,KI,3) + 60000*u(7,Hsel,EU,3) + 60000*u(7,Hsel,IE,3) + 60000*u(7,Hsel,PA,3) + 60000*u(7,Hsel,KI,3) + 70000*u(8,Hsel,EU,3) + 70000*u(8,Hsel,IE,3) + 70000*u(8,Hsel,PA,3) + 70000*u(8,Hsel,KI,3) + 80000*u(9,Hsel,EU,3)
     
      + 80000*u(9,Hsel,IE,3) + 80000*u(9,Hsel,PA,3) + 80000*u(9,Hsel,KI,3) + 90000*u(10,Hsel,EU,3) + 90000*u(10,Hsel,IE,3) + 90000*u(10,Hsel,PA,3) + 90000*u(10,Hsel,KI,3) + 100000*u(11,Hsel,EU,3) + 100000*u(11,Hsel,IE,3) + 100000*u(11,Hsel,PA,3)
     
      + 100000*u(11,Hsel,KI,3) + 110000*u(12,Hsel,EU,3) + 110000*u(12,Hsel,IE,3) + 110000*u(12,Hsel,PA,3) + 110000*u(12,Hsel,KI,3) + 120000*u(13,Hsel,EU,3) + 120000*u(13,Hsel,IE,3) + 120000*u(13,Hsel,PA,3) + 120000*u(13,Hsel,KI,3) + 130000*u(14,Hsel,EU,3)
     
      + 130000*u(14,Hsel,IE,3) + 130000*u(14,Hsel,PA,3) + 130000*u(14,Hsel,KI,3) + 140000*u(15,Hsel,EU,3) + 140000*u(15,Hsel,IE,3) + 140000*u(15,Hsel,PA,3) + 140000*u(15,Hsel,KI,3) + 150000*u(16,Hsel,EU,3) + 150000*u(16,Hsel,IE,3) + 150000*u(16,Hsel,PA,3)
     
      + 150000*u(16,Hsel,KI,3) + 160000*u(17,Hsel,EU,3) + 160000*u(17,Hsel,IE,3) + 160000*u(17,Hsel,PA,3) + 160000*u(17,Hsel,KI,3) + 170000*u(18,Hsel,EU,3) + 170000*u(18,Hsel,IE,3) + 170000*u(18,Hsel,PA,3) + 170000*u(18,Hsel,KI,3) + 180000*u(19,Hsel,EU,3)
     
      + 180000*u(19,Hsel,IE,3) + 180000*u(19,Hsel,PA,3) + 180000*u(19,Hsel,KI,3) + 190000*u(20,Hsel,EU,3) + 190000*u(20,Hsel,IE,3) + 190000*u(20,Hsel,PA,3) + 190000*u(20,Hsel,KI,3) + 200000*u(21,Hsel,EU,3) + 200000*u(21,Hsel,IE,3) + 200000*u(21,Hsel,PA,3)
     
      + 200000*u(21,Hsel,KI,3) + 210000*u(22,Hsel,EU,3) + 210000*u(22,Hsel,IE,3) + 210000*u(22,Hsel,PA,3) + 210000*u(22,Hsel,KI,3) + 220000*u(23,Hsel,EU,3) + 220000*u(23,Hsel,IE,3) + 220000*u(23,Hsel,PA,3) + 220000*u(23,Hsel,KI,3) =L= 0 ; (LHS = 0)
     
PULP_Bal(Lsel,1)..  - y(Lsel,1) + 0.2*y(Pap,1) + 10000*u(2,Lsel,EU,1) + 10000*u(2,Lsel,IE,1) + 10000*u(2,Lsel,PA,1) + 10000*u(2,Lsel,KI,1) + 20000*u(3,Lsel,EU,1) + 20000*u(3,Lsel,IE,1) + 20000*u(3,Lsel,PA,1) + 20000*u(3,Lsel,KI,1) + 30000*u(4,Lsel,EU,1)
     
      + 30000*u(4,Lsel,IE,1) + 30000*u(4,Lsel,PA,1) + 30000*u(4,Lsel,KI,1) + 40000*u(5,Lsel,EU,1) + 40000*u(5,Lsel,IE,1) + 40000*u(5,Lsel,PA,1) + 40000*u(5,Lsel,KI,1) + 50000*u(6,Lsel,EU,1) + 50000*u(6,Lsel,IE,1) + 50000*u(6,Lsel,PA,1)
     
      + 50000*u(6,Lsel,KI,1) + 60000*u(7,Lsel,EU,1) + 60000*u(7,Lsel,IE,1) + 60000*u(7,Lsel,PA,1) + 60000*u(7,Lsel,KI,1) + 70000*u(8,Lsel,EU,1) + 70000*u(8,Lsel,IE,1) + 70000*u(8,Lsel,PA,1) + 70000*u(8,Lsel,KI,1) + 80000*u(9,Lsel,EU,1)
     
      + 80000*u(9,Lsel,IE,1) + 80000*u(9,Lsel,PA,1) + 80000*u(9,Lsel,KI,1) + 90000*u(10,Lsel,EU,1) + 90000*u(10,Lsel,IE,1) + 90000*u(10,Lsel,PA,1) + 90000*u(10,Lsel,KI,1) + 100000*u(11,Lsel,EU,1) + 100000*u(11,Lsel,IE,1) + 100000*u(11,Lsel,PA,1)
     
      + 100000*u(11,Lsel,KI,1) + 110000*u(12,Lsel,EU,1) + 110000*u(12,Lsel,IE,1) + 110000*u(12,Lsel,PA,1) + 110000*u(12,Lsel,KI,1) + 120000*u(13,Lsel,EU,1) + 120000*u(13,Lsel,IE,1) + 120000*u(13,Lsel,PA,1) + 120000*u(13,Lsel,KI,1) + 130000*u(14,Lsel,EU,1)
     
      + 130000*u(14,Lsel,IE,1) + 130000*u(14,Lsel,PA,1) + 130000*u(14,Lsel,KI,1) + 140000*u(15,Lsel,EU,1) + 140000*u(15,Lsel,IE,1) + 140000*u(15,Lsel,PA,1) + 140000*u(15,Lsel,KI,1) + 150000*u(16,Lsel,EU,1) + 150000*u(16,Lsel,IE,1) + 150000*u(16,Lsel,PA,1)
     
      + 150000*u(16,Lsel,KI,1) + 160000*u(17,Lsel,EU,1) + 160000*u(17,Lsel,IE,1) + 160000*u(17,Lsel,PA,1) + 160000*u(17,Lsel,KI,1) + 170000*u(18,Lsel,EU,1) + 170000*u(18,Lsel,IE,1) + 170000*u(18,Lsel,PA,1) + 170000*u(18,Lsel,KI,1) + 180000*u(19,Lsel,EU,1)
     
      + 180000*u(19,Lsel,IE,1) + 180000*u(19,Lsel,PA,1) + 180000*u(19,Lsel,KI,1) + 190000*u(20,Lsel,EU,1) + 190000*u(20,Lsel,IE,1) + 190000*u(20,Lsel,PA,1) + 190000*u(20,Lsel,KI,1) + 200000*u(21,Lsel,EU,1) + 200000*u(21,Lsel,IE,1) + 200000*u(21,Lsel,PA,1)
     
      + 200000*u(21,Lsel,KI,1) + 210000*u(22,Lsel,EU,1) + 210000*u(22,Lsel,IE,1) + 210000*u(22,Lsel,PA,1) + 210000*u(22,Lsel,KI,1) + 220000*u(23,Lsel,EU,1) + 220000*u(23,Lsel,IE,1) + 220000*u(23,Lsel,PA,1) + 220000*u(23,Lsel,KI,1) =L= 0 ; (LHS = 0)
     
PULP_Bal(Lsel,2)..  - y(Lsel,2) + 0.2*y(Pap,2) + 10000*u(2,Lsel,EU,2) + 10000*u(2,Lsel,IE,2) + 10000*u(2,Lsel,PA,2) + 10000*u(2,Lsel,KI,2) + 20000*u(3,Lsel,EU,2) + 20000*u(3,Lsel,IE,2) + 20000*u(3,Lsel,PA,2) + 20000*u(3,Lsel,KI,2) + 30000*u(4,Lsel,EU,2)
     
      + 30000*u(4,Lsel,IE,2) + 30000*u(4,Lsel,PA,2) + 30000*u(4,Lsel,KI,2) + 40000*u(5,Lsel,EU,2) + 40000*u(5,Lsel,IE,2) + 40000*u(5,Lsel,PA,2) + 40000*u(5,Lsel,KI,2) + 50000*u(6,Lsel,EU,2) + 50000*u(6,Lsel,IE,2) + 50000*u(6,Lsel,PA,2)
     
      + 50000*u(6,Lsel,KI,2) + 60000*u(7,Lsel,EU,2) + 60000*u(7,Lsel,IE,2) + 60000*u(7,Lsel,PA,2) + 60000*u(7,Lsel,KI,2) + 70000*u(8,Lsel,EU,2) + 70000*u(8,Lsel,IE,2) + 70000*u(8,Lsel,PA,2) + 70000*u(8,Lsel,KI,2) + 80000*u(9,Lsel,EU,2)
     
      + 80000*u(9,Lsel,IE,2) + 80000*u(9,Lsel,PA,2) + 80000*u(9,Lsel,KI,2) + 90000*u(10,Lsel,EU,2) + 90000*u(10,Lsel,IE,2) + 90000*u(10,Lsel,PA,2) + 90000*u(10,Lsel,KI,2) + 100000*u(11,Lsel,EU,2) + 100000*u(11,Lsel,IE,2) + 100000*u(11,Lsel,PA,2)
     
      + 100000*u(11,Lsel,KI,2) + 110000*u(12,Lsel,EU,2) + 110000*u(12,Lsel,IE,2) + 110000*u(12,Lsel,PA,2) + 110000*u(12,Lsel,KI,2) + 120000*u(13,Lsel,EU,2) + 120000*u(13,Lsel,IE,2) + 120000*u(13,Lsel,PA,2) + 120000*u(13,Lsel,KI,2) + 130000*u(14,Lsel,EU,2)
     
      + 130000*u(14,Lsel,IE,2) + 130000*u(14,Lsel,PA,2) + 130000*u(14,Lsel,KI,2) + 140000*u(15,Lsel,EU,2) + 140000*u(15,Lsel,IE,2) + 140000*u(15,Lsel,PA,2) + 140000*u(15,Lsel,KI,2) + 150000*u(16,Lsel,EU,2) + 150000*u(16,Lsel,IE,2) + 150000*u(16,Lsel,PA,2)
     
      + 150000*u(16,Lsel,KI,2) + 160000*u(17,Lsel,EU,2) + 160000*u(17,Lsel,IE,2) + 160000*u(17,Lsel,PA,2) + 160000*u(17,Lsel,KI,2) + 170000*u(18,Lsel,EU,2) + 170000*u(18,Lsel,IE,2) + 170000*u(18,Lsel,PA,2) + 170000*u(18,Lsel,KI,2) + 180000*u(19,Lsel,EU,2)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 23:25:38 Page 50
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 433


     PULP_Bal  =L=  Cant produce paper without pulp     
     
      + 180000*u(19,Lsel,IE,2) + 180000*u(19,Lsel,PA,2) + 180000*u(19,Lsel,KI,2) + 190000*u(20,Lsel,EU,2) + 190000*u(20,Lsel,IE,2) + 190000*u(20,Lsel,PA,2) + 190000*u(20,Lsel,KI,2) + 200000*u(21,Lsel,EU,2) + 200000*u(21,Lsel,IE,2) + 200000*u(21,Lsel,PA,2)
     
      + 200000*u(21,Lsel,KI,2) + 210000*u(22,Lsel,EU,2) + 210000*u(22,Lsel,IE,2) + 210000*u(22,Lsel,PA,2) + 210000*u(22,Lsel,KI,2) + 220000*u(23,Lsel,EU,2) + 220000*u(23,Lsel,IE,2) + 220000*u(23,Lsel,PA,2) + 220000*u(23,Lsel,KI,2) =L= 0 ; (LHS = 0)
     
PULP_Bal(Lsel,3)..  - y(Lsel,3) + 0.2*y(Pap,3) + 10000*u(2,Lsel,EU,3) + 10000*u(2,Lsel,IE,3) + 10000*u(2,Lsel,PA,3) + 10000*u(2,Lsel,KI,3) + 20000*u(3,Lsel,EU,3) + 20000*u(3,Lsel,IE,3) + 20000*u(3,Lsel,PA,3) + 20000*u(3,Lsel,KI,3) + 30000*u(4,Lsel,EU,3)
     
      + 30000*u(4,Lsel,IE,3) + 30000*u(4,Lsel,PA,3) + 30000*u(4,Lsel,KI,3) + 40000*u(5,Lsel,EU,3) + 40000*u(5,Lsel,IE,3) + 40000*u(5,Lsel,PA,3) + 40000*u(5,Lsel,KI,3) + 50000*u(6,Lsel,EU,3) + 50000*u(6,Lsel,IE,3) + 50000*u(6,Lsel,PA,3)
     
      + 50000*u(6,Lsel,KI,3) + 60000*u(7,Lsel,EU,3) + 60000*u(7,Lsel,IE,3) + 60000*u(7,Lsel,PA,3) + 60000*u(7,Lsel,KI,3) + 70000*u(8,Lsel,EU,3) + 70000*u(8,Lsel,IE,3) + 70000*u(8,Lsel,PA,3) + 70000*u(8,Lsel,KI,3) + 80000*u(9,Lsel,EU,3)
     
      + 80000*u(9,Lsel,IE,3) + 80000*u(9,Lsel,PA,3) + 80000*u(9,Lsel,KI,3) + 90000*u(10,Lsel,EU,3) + 90000*u(10,Lsel,IE,3) + 90000*u(10,Lsel,PA,3) + 90000*u(10,Lsel,KI,3) + 100000*u(11,Lsel,EU,3) + 100000*u(11,Lsel,IE,3) + 100000*u(11,Lsel,PA,3)
     
      + 100000*u(11,Lsel,KI,3) + 110000*u(12,Lsel,EU,3) + 110000*u(12,Lsel,IE,3) + 110000*u(12,Lsel,PA,3) + 110000*u(12,Lsel,KI,3) + 120000*u(13,Lsel,EU,3) + 120000*u(13,Lsel,IE,3) + 120000*u(13,Lsel,PA,3) + 120000*u(13,Lsel,KI,3) + 130000*u(14,Lsel,EU,3)
     
      + 130000*u(14,Lsel,IE,3) + 130000*u(14,Lsel,PA,3) + 130000*u(14,Lsel,KI,3) + 140000*u(15,Lsel,EU,3) + 140000*u(15,Lsel,IE,3) + 140000*u(15,Lsel,PA,3) + 140000*u(15,Lsel,KI,3) + 150000*u(16,Lsel,EU,3) + 150000*u(16,Lsel,IE,3) + 150000*u(16,Lsel,PA,3)
     
      + 150000*u(16,Lsel,KI,3) + 160000*u(17,Lsel,EU,3) + 160000*u(17,Lsel,IE,3) + 160000*u(17,Lsel,PA,3) + 160000*u(17,Lsel,KI,3) + 170000*u(18,Lsel,EU,3) + 170000*u(18,Lsel,IE,3) + 170000*u(18,Lsel,PA,3) + 170000*u(18,Lsel,KI,3) + 180000*u(19,Lsel,EU,3)
     
      + 180000*u(19,Lsel,IE,3) + 180000*u(19,Lsel,PA,3) + 180000*u(19,Lsel,KI,3) + 190000*u(20,Lsel,EU,3) + 190000*u(20,Lsel,IE,3) + 190000*u(20,Lsel,PA,3) + 190000*u(20,Lsel,KI,3) + 200000*u(21,Lsel,EU,3) + 200000*u(21,Lsel,IE,3) + 200000*u(21,Lsel,PA,3)
     
      + 200000*u(21,Lsel,KI,3) + 210000*u(22,Lsel,EU,3) + 210000*u(22,Lsel,IE,3) + 210000*u(22,Lsel,PA,3) + 210000*u(22,Lsel,KI,3) + 220000*u(23,Lsel,EU,3) + 220000*u(23,Lsel,IE,3) + 220000*u(23,Lsel,PA,3) + 220000*u(23,Lsel,KI,3) =L= 0 ; (LHS = 0)
     

---- PROFIT  =E=  Profit is what we gain minus what we spend

PROFIT(1)..  0.542*y(Mas,1) + 0.492*y(Kus,1) + 0.442*y(Kos,1) + 2.492*y(Kuv,1) + 2.592*y(Kov,1) + 0.82*y(Hsel,1) + 0.8*y(Lsel,1) + 1.7*y(Pap,1) + 0.19*s(Mat,1) + 0.15*s(Kut,1) + 0.12*s(Kot,1) + 0.18*s(Mak,1) + 0.15*s(Kuk,1) + 0.15*s(Kok,1)
     
      + 2000*r(2,Mat,1) + 1550*r(2,Kut,1) + 1500*r(2,Kot,1) + 1820*r(2,Mak,1) + 1530*r(2,Kuk,1) + 1520*r(2,Kok,1) + 4200*r(3,Mat,1) + 3200*r(3,Kut,1) + 3600*r(3,Kot,1) + 3680*r(3,Mak,1) + 3120*r(3,Kuk,1) + 3080*r(3,Kok,1) + 6600*r(4,Mat,1)
     
      + 4950*r(4,Kut,1) + 6300*r(4,Kot,1) + 5580*r(4,Mak,1) + 4770*r(4,Kuk,1) + 4680*r(4,Kok,1) + 9200*r(5,Mat,1) + 6800*r(5,Kut,1) + 9600*r(5,Kot,1) + 7520*r(5,Mak,1) + 6480*r(5,Kuk,1) + 6320*r(5,Kok,1) + 12000*r(6,Mat,1) + 8750*r(6,Kut,1)
     
      + 13500*r(6,Kot,1) + 9500*r(6,Mak,1) + 8250*r(6,Kuk,1) + 8000*r(6,Kok,1) + 15000*r(7,Mat,1) + 10800*r(7,Kut,1) + 18000*r(7,Kot,1) + 11520*r(7,Mak,1) + 10080*r(7,Kuk,1) + 9720*r(7,Kok,1) + 18200*r(8,Mat,1) + 12950*r(8,Kut,1) + 23100*r(8,Kot,1)
     
      + 13580*r(8,Mak,1) + 11970*r(8,Kuk,1) + 11480*r(8,Kok,1) + 21600*r(9,Mat,1) + 15200*r(9,Kut,1) + 28800*r(9,Kot,1) + 15680*r(9,Mak,1) + 13920*r(9,Kuk,1) + 13280*r(9,Kok,1) + 25200*r(10,Mat,1) + 17550*r(10,Kut,1) + 35100*r(10,Kot,1)
     
      + 17820*r(10,Mak,1) + 15930*r(10,Kuk,1) + 15120*r(10,Kok,1) + 29000*r(11,Mat,1) + 20000*r(11,Kut,1) + 42000*r(11,Kot,1) + 20000*r(11,Mak,1) + 18000*r(11,Kuk,1) + 17000*r(11,Kok,1) + 33000*r(12,Mat,1) + 22550*r(12,Kut,1) + 49500*r(12,Kot,1)
     
      + 22220*r(12,Mak,1) + 20130*r(12,Kuk,1) + 18920*r(12,Kok,1) + 37200*r(13,Mat,1) + 25200*r(13,Kut,1) + 57600*r(13,Kot,1) + 24480*r(13,Mak,1) + 22320*r(13,Kuk,1) + 20880*r(13,Kok,1) + 41600*r(14,Mat,1) + 27950*r(14,Kut,1) + 66300*r(14,Kot,1)
     
      + 26780*r(14,Mak,1) + 24570*r(14,Kuk,1) + 22880*r(14,Kok,1) + 46200*r(15,Mat,1) + 30800*r(15,Kut,1) + 75600*r(15,Kot,1) + 29120*r(15,Mak,1) + 26880*r(15,Kuk,1) + 24920*r(15,Kok,1) + 51000*r(16,Mat,1) + 33750*r(16,Kut,1) + 85500*r(16,Kot,1)
     
      + 31500*r(16,Mak,1) + 29250*r(16,Kuk,1) + 27000*r(16,Kok,1) + 56000*r(17,Mat,1) + 36800*r(17,Kut,1) + 96000*r(17,Kot,1) + 33920*r(17,Mak,1) + 31680*r(17,Kuk,1) + 29120*r(17,Kok,1) + 61200*r(18,Mat,1) + 39950*r(18,Kut,1) + 107100*r(18,Kot,1)
     
      + 36380*r(18,Mak,1) + 34170*r(18,Kuk,1) + 31280*r(18,Kok,1) + 66600*r(19,Mat,1) + 43200*r(19,Kut,1) + 118800*r(19,Kot,1) + 38880*r(19,Mak,1) + 36720*r(19,Kuk,1) + 33480*r(19,Kok,1) + 72200*r(20,Mat,1) + 46550*r(20,Kut,1) + 131100*r(20,Kot,1)
     
      + 41420*r(20,Mak,1) + 39330*r(20,Kuk,1) + 35720*r(20,Kok,1) + 78000*r(21,Mat,1) + 50000*r(21,Kut,1) + 144000*r(21,Kot,1) + 44000*r(21,Mak,1) + 42000*r(21,Kuk,1) + 38000*r(21,Kok,1) + 84000*r(22,Mat,1) + 53550*r(22,Kut,1) + 157500*r(22,Kot,1)
     
      + 46620*r(22,Mak,1) + 44730*r(22,Kuk,1) + 40320*r(22,Kok,1) + 90200*r(23,Mat,1) + 57200*r(23,Kut,1) + 171600*r(23,Kot,1) + 49280*r(23,Mak,1) + 47520*r(23,Kuk,1) + 42680*r(23,Kok,1) + 96600*r(24,Mat,1) + 60950*r(24,Kut,1) + 186300*r(24,Kot,1)
     
      + 51980*r(24,Mak,1) + 50370*r(24,Kuk,1) + 45080*r(24,Kok,1) + 103200*r(25,Mat,1) + 64800*r(25,Kut,1) + 201600*r(25,Kot,1) + 54720*r(25,Mak,1) + 53280*r(25,Kuk,1) + 47520*r(25,Kok,1) + 110000*r(26,Mat,1) + 68750*r(26,Kut,1) + 217500*r(26,Kot,1)
     
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 23:25:38 Page 51
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 433


     PROFIT  =E=  Profit is what we gain minus what we spend     
     
      + 57500*r(26,Mak,1) + 56250*r(26,Kuk,1) + 50000*r(26,Kok,1) + 117000*r(27,Mat,1) + 72800*r(27,Kut,1) + 234000*r(27,Kot,1) + 60320*r(27,Mak,1) + 59280*r(27,Kuk,1) + 52520*r(27,Kok,1) + 124200*r(28,Mat,1) + 76950*r(28,Kut,1) + 251100*r(28,Kot,1)
     
      + 63180*r(28,Mak,1) + 62370*r(28,Kuk,1) + 55080*r(28,Kok,1) + 131600*r(29,Mat,1) + 81200*r(29,Kut,1) + 268800*r(29,Kot,1) + 66080*r(29,Mak,1) + 65520*r(29,Kuk,1) + 57680*r(29,Kok,1) + 139200*r(30,Mat,1) + 85550*r(30,Kut,1) + 287100*r(30,Kot,1)
     
      + 69020*r(30,Mak,1) + 68730*r(30,Kuk,1) + 60320*r(30,Kok,1) + 147000*r(31,Mat,1) + 90000*r(31,Kut,1) + 306000*r(31,Kot,1) + 72000*r(31,Mak,1) + 72000*r(31,Kuk,1) + 63000*r(31,Kok,1) + 155000*r(32,Mat,1) + 94550*r(32,Kut,1) + 325500*r(32,Kot,1)
     
      + 75020*r(32,Mak,1) + 75330*r(32,Kuk,1) + 65720*r(32,Kok,1) + 163200*r(33,Mat,1) + 99200*r(33,Kut,1) + 345600*r(33,Kot,1) + 78080*r(33,Mak,1) + 78720*r(33,Kuk,1) + 68480*r(33,Kok,1) + 171600*r(34,Mat,1) + 103950*r(34,Kut,1) + 366300*r(34,Kot,1)
     
      + 81180*r(34,Mak,1) + 82170*r(34,Kuk,1) + 71280*r(34,Kok,1) + 180200*r(35,Mat,1) + 108800*r(35,Kut,1) + 387600*r(35,Kot,1) + 84320*r(35,Mak,1) + 85680*r(35,Kuk,1) + 74120*r(35,Kok,1) + 189000*r(36,Mat,1) + 113750*r(36,Kut,1) + 409500*r(36,Kot,1)
     
      + 87500*r(36,Mak,1) + 89250*r(36,Kuk,1) + 77000*r(36,Kok,1) + 198000*r(37,Mat,1) + 118800*r(37,Kut,1) + 432000*r(37,Kot,1) + 90720*r(37,Mak,1) + 92880*r(37,Kuk,1) + 79920*r(37,Kok,1) + 207200*r(38,Mat,1) + 123950*r(38,Kut,1) + 455100*r(38,Kot,1)
     
      + 93980*r(38,Mak,1) + 96570*r(38,Kuk,1) + 82880*r(38,Kok,1) + 216600*r(39,Mat,1) + 129200*r(39,Kut,1) + 478800*r(39,Kot,1) + 97280*r(39,Mak,1) + 100320*r(39,Kuk,1) + 85880*r(39,Kok,1) + 226200*r(40,Mat,1) + 134550*r(40,Kut,1) + 503100*r(40,Kot,1)
     
      + 100620*r(40,Mak,1) + 104130*r(40,Kuk,1) + 88920*r(40,Kok,1) + 236000*r(41,Mat,1) + 140000*r(41,Kut,1) + 528000*r(41,Kot,1) + 104000*r(41,Mak,1) + 108000*r(41,Kuk,1) + 92000*r(41,Kok,1) + 246000*r(42,Mat,1) + 145550*r(42,Kut,1) + 553500*r(42,Kot,1)
     
      + 107420*r(42,Mak,1) + 111930*r(42,Kuk,1) + 95120*r(42,Kok,1) + 256200*r(43,Mat,1) + 151200*r(43,Kut,1) + 579600*r(43,Kot,1) + 110880*r(43,Mak,1) + 115920*r(43,Kuk,1) + 98280*r(43,Kok,1) + 266600*r(44,Mat,1) + 156950*r(44,Kut,1) + 606300*r(44,Kot,1)
     
      + 114380*r(44,Mak,1) + 119970*r(44,Kuk,1) + 101480*r(44,Kok,1) + 277200*r(45,Mat,1) + 162800*r(45,Kut,1) + 633600*r(45,Kot,1) + 117920*r(45,Mak,1) + 124080*r(45,Kuk,1) + 104720*r(45,Kok,1) + 288000*r(46,Mat,1) + 168750*r(46,Kut,1)
     
      + 661500*r(46,Kot,1) + 121500*r(46,Mak,1) + 128250*r(46,Kuk,1) + 108000*r(46,Kok,1) + 299000*r(47,Mat,1) + 174800*r(47,Kut,1) + 690000*r(47,Kot,1) + 125120*r(47,Mak,1) + 132480*r(47,Kuk,1) + 111320*r(47,Kok,1) + 310200*r(48,Mat,1)
     
      + 180950*r(48,Kut,1) + 719100*r(48,Kot,1) + 128780*r(48,Mak,1) + 136770*r(48,Kuk,1) + 114680*r(48,Kok,1) + 321600*r(49,Mat,1) + 187200*r(49,Kut,1) + 748800*r(49,Kot,1) + 132480*r(49,Mak,1) + 141120*r(49,Kuk,1) + 118080*r(49,Kok,1)
     
      + 333200*r(50,Mat,1) + 193550*r(50,Kut,1) + 779100*r(50,Kot,1) + 136220*r(50,Mak,1) + 145530*r(50,Kuk,1) + 121520*r(50,Kok,1) + 345000*r(51,Mat,1) + 200000*r(51,Kut,1) + 810000*r(51,Kot,1) + 140000*r(51,Mak,1) + 150000*r(51,Kuk,1)
     
      + 125000*r(51,Kok,1) + 357000*r(52,Mat,1) + 206550*r(52,Kut,1) + 841500*r(52,Kot,1) + 143820*r(52,Mak,1) + 154530*r(52,Kuk,1) + 128520*r(52,Kok,1) + 369200*r(53,Mat,1) + 213200*r(53,Kut,1) + 873600*r(53,Kot,1) + 147680*r(53,Mak,1)
     
      + 159120*r(53,Kuk,1) + 132080*r(53,Kok,1) + 381600*r(54,Mat,1) + 219950*r(54,Kut,1) + 906300*r(54,Kot,1) + 151580*r(54,Mak,1) + 163770*r(54,Kuk,1) + 135680*r(54,Kok,1) + 394200*r(55,Mat,1) + 226800*r(55,Kut,1) + 939600*r(55,Kot,1)
     
      + 155520*r(55,Mak,1) + 168480*r(55,Kuk,1) + 139320*r(55,Kok,1) + 407000*r(56,Mat,1) + 233750*r(56,Kut,1) + 973500*r(56,Kot,1) + 159500*r(56,Mak,1) + 173250*r(56,Kuk,1) + 143000*r(56,Kok,1) + 420000*r(57,Mat,1) + 240800*r(57,Kut,1)
     
      + 1008000*r(57,Kot,1) + 163520*r(57,Mak,1) + 178080*r(57,Kuk,1) + 146720*r(57,Kok,1) + 433200*r(58,Mat,1) + 247950*r(58,Kut,1) + 1043100*r(58,Kot,1) + 167580*r(58,Mak,1) + 182970*r(58,Kuk,1) + 150480*r(58,Kok,1) + 446600*r(59,Mat,1)
     
      + 255200*r(59,Kut,1) + 1078800*r(59,Kot,1) + 171680*r(59,Mak,1) + 187920*r(59,Kuk,1) + 154280*r(59,Kok,1) + 460200*r(60,Mat,1) + 262550*r(60,Kut,1) + 1115100*r(60,Kot,1) + 175820*r(60,Mak,1) + 192930*r(60,Kuk,1) + 158120*r(60,Kok,1)
     
      + 474000*r(61,Mat,1) + 270000*r(61,Kut,1) + 1152000*r(61,Kot,1) + 180000*r(61,Mak,1) + 198000*r(61,Kuk,1) + 162000*r(61,Kok,1) + 488000*r(62,Mat,1) + 277550*r(62,Kut,1) + 1189500*r(62,Kot,1) + 184220*r(62,Mak,1) + 203130*r(62,Kuk,1)
     
      + 165920*r(62,Kok,1) + 502200*r(63,Mat,1) + 285200*r(63,Kut,1) + 1227600*r(63,Kot,1) + 188480*r(63,Mak,1) + 208320*r(63,Kuk,1) + 169880*r(63,Kok,1) + 516600*r(64,Mat,1) + 292950*r(64,Kut,1) + 1266300*r(64,Kot,1) + 192780*r(64,Mak,1)
     
      + 213570*r(64,Kuk,1) + 173880*r(64,Kok,1) + 531200*r(65,Mat,1) + 300800*r(65,Kut,1) + 1305600*r(65,Kot,1) + 197120*r(65,Mak,1) + 218880*r(65,Kuk,1) + 177920*r(65,Kok,1) + 546000*r(66,Mat,1) + 308750*r(66,Kut,1) + 1345500*r(66,Kot,1)
     
      + 201500*r(66,Mak,1) + 224250*r(66,Kuk,1) + 182000*r(66,Kok,1) + 561000*r(67,Mat,1) + 316800*r(67,Kut,1) + 1386000*r(67,Kot,1) + 205920*r(67,Mak,1) + 229680*r(67,Kuk,1) + 186120*r(67,Kok,1) + 576200*r(68,Mat,1) + 324950*r(68,Kut,1)
     
      + 1427100*r(68,Kot,1) + 210380*r(68,Mak,1) + 235170*r(68,Kuk,1) + 190280*r(68,Kok,1) + 591600*r(69,Mat,1) + 333200*r(69,Kut,1) + 1468800*r(69,Kot,1) + 214880*r(69,Mak,1) + 240720*r(69,Kuk,1) + 194480*r(69,Kok,1) + 607200*r(70,Mat,1)
     
      + 341550*r(70,Kut,1) + 1511100*r(70,Kot,1) + 219420*r(70,Mak,1) + 246330*r(70,Kuk,1) + 198720*r(70,Kok,1) + 623000*r(71,Mat,1) + 350000*r(71,Kut,1) + 1554000*r(71,Kot,1) + 224000*r(71,Mak,1) + 252000*r(71,Kuk,1) + 203000*r(71,Kok,1)
     
      + 639000*r(72,Mat,1) + 358550*r(72,Kut,1) + 1597500*r(72,Kot,1) + 228620*r(72,Mak,1) + 257730*r(72,Kuk,1) + 207320*r(72,Kok,1) + 655200*r(73,Mat,1) + 367200*r(73,Kut,1) + 1641600*r(73,Kot,1) + 233280*r(73,Mak,1) + 263520*r(73,Kuk,1)
     
      + 211680*r(73,Kok,1) + 671600*r(74,Mat,1) + 375950*r(74,Kut,1) + 1686300*r(74,Kot,1) + 237980*r(74,Mak,1) + 269370*r(74,Kuk,1) + 216080*r(74,Kok,1) + 688200*r(75,Mat,1) + 384800*r(75,Kut,1) + 1731600*r(75,Kot,1) + 242720*r(75,Mak,1)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 23:25:38 Page 52
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 433


     PROFIT  =E=  Profit is what we gain minus what we spend     
     
      + 275280*r(75,Kuk,1) + 220520*r(75,Kok,1) + 705000*r(76,Mat,1) + 393750*r(76,Kut,1) + 1777500*r(76,Kot,1) + 247500*r(76,Mak,1) + 281250*r(76,Kuk,1) + 225000*r(76,Kok,1) + 722000*r(77,Mat,1) + 402800*r(77,Kut,1) + 1824000*r(77,Kot,1)
     
      + 252320*r(77,Mak,1) + 287280*r(77,Kuk,1) + 229520*r(77,Kok,1) + 739200*r(78,Mat,1) + 411950*r(78,Kut,1) + 1871100*r(78,Kot,1) + 257180*r(78,Mak,1) + 293370*r(78,Kuk,1) + 234080*r(78,Kok,1) + 756600*r(79,Mat,1) + 421200*r(79,Kut,1)
     
      + 1918800*r(79,Kot,1) + 262080*r(79,Mak,1) + 299520*r(79,Kuk,1) + 238680*r(79,Kok,1) + 774200*r(80,Mat,1) + 430550*r(80,Kut,1) + 1967100*r(80,Kot,1) + 267020*r(80,Mak,1) + 305730*r(80,Kuk,1) + 243320*r(80,Kok,1) + 792000*r(81,Mat,1)
     
      + 440000*r(81,Kut,1) + 2016000*r(81,Kot,1) + 272000*r(81,Mak,1) + 312000*r(81,Kuk,1) + 248000*r(81,Kok,1) + 810000*r(82,Mat,1) + 449550*r(82,Kut,1) + 2065500*r(82,Kot,1) + 277020*r(82,Mak,1) + 318330*r(82,Kuk,1) + 252720*r(82,Kok,1)
     
      + 828200*r(83,Mat,1) + 459200*r(83,Kut,1) + 2115600*r(83,Kot,1) + 282080*r(83,Mak,1) + 324720*r(83,Kuk,1) + 257480*r(83,Kok,1) + 846600*r(84,Mat,1) + 468950*r(84,Kut,1) + 2166300*r(84,Kot,1) + 287180*r(84,Mak,1) + 331170*r(84,Kuk,1)
     
      + 262280*r(84,Kok,1) + 865200*r(85,Mat,1) + 478800*r(85,Kut,1) + 2217600*r(85,Kot,1) + 292320*r(85,Mak,1) + 337680*r(85,Kuk,1) + 267120*r(85,Kok,1) + 884000*r(86,Mat,1) + 488750*r(86,Kut,1) + 2269500*r(86,Kot,1) + 297500*r(86,Mak,1)
     
      + 344250*r(86,Kuk,1) + 272000*r(86,Kok,1) + 903000*r(87,Mat,1) + 498800*r(87,Kut,1) + 2322000*r(87,Kot,1) + 302720*r(87,Mak,1) + 350880*r(87,Kuk,1) + 276920*r(87,Kok,1) + 922200*r(88,Mat,1) + 508950*r(88,Kut,1) + 2375100*r(88,Kot,1)
     
      + 307980*r(88,Mak,1) + 357570*r(88,Kuk,1) + 281880*r(88,Kok,1) + 941600*r(89,Mat,1) + 519200*r(89,Kut,1) + 2428800*r(89,Kot,1) + 313280*r(89,Mak,1) + 364320*r(89,Kuk,1) + 286880*r(89,Kok,1) + 961200*r(90,Mat,1) + 529550*r(90,Kut,1)
     
      + 2483100*r(90,Kot,1) + 318620*r(90,Mak,1) + 371130*r(90,Kuk,1) + 291920*r(90,Kok,1) + 981000*r(91,Mat,1) + 540000*r(91,Kut,1) + 2538000*r(91,Kot,1) + 324000*r(91,Mak,1) + 378000*r(91,Kuk,1) + 297000*r(91,Kok,1) + 1001000*r(92,Mat,1)
     
      + 550550*r(92,Kut,1) + 2593500*r(92,Kot,1) + 329420*r(92,Mak,1) + 384930*r(92,Kuk,1) + 302120*r(92,Kok,1) + 1021200*r(93,Mat,1) + 561200*r(93,Kut,1) + 2649600*r(93,Kot,1) + 334880*r(93,Mak,1) + 391920*r(93,Kuk,1) + 307280*r(93,Kok,1)
     
      + 1041600*r(94,Mat,1) + 571950*r(94,Kut,1) + 2706300*r(94,Kot,1) + 340380*r(94,Mak,1) + 398970*r(94,Kuk,1) + 312480*r(94,Kok,1) + 1062200*r(95,Mat,1) + 582800*r(95,Kut,1) + 2763600*r(95,Kot,1) + 345920*r(95,Mak,1) + 406080*r(95,Kuk,1)
     
      + 317720*r(95,Kok,1) + 1083000*r(96,Mat,1) + 593750*r(96,Kut,1) + 2821500*r(96,Kot,1) + 351500*r(96,Mak,1) + 413250*r(96,Kuk,1) + 323000*r(96,Kok,1) + 1104000*r(97,Mat,1) + 604800*r(97,Kut,1) + 2880000*r(97,Kot,1) + 357120*r(97,Mak,1)
     
      + 420480*r(97,Kuk,1) + 328320*r(97,Kok,1) + 1125200*r(98,Mat,1) + 615950*r(98,Kut,1) + 2939100*r(98,Kot,1) + 362780*r(98,Mak,1) + 427770*r(98,Kuk,1) + 333680*r(98,Kok,1) + 1146600*r(99,Mat,1) + 627200*r(99,Kut,1) + 2998800*r(99,Kot,1)
     
      + 368480*r(99,Mak,1) + 435120*r(99,Kuk,1) + 339080*r(99,Kok,1) + 1168200*r(100,Mat,1) + 638550*r(100,Kut,1) + 3059100*r(100,Kot,1) + 374220*r(100,Mak,1) + 442530*r(100,Kuk,1) + 344520*r(100,Kok,1) + 1190000*r(101,Mat,1) + 650000*r(101,Kut,1)
     
      + 3120000*r(101,Kot,1) + 380000*r(101,Mak,1) + 450000*r(101,Kuk,1) + 350000*r(101,Kok,1) + 1212000*r(102,Mat,1) + 661550*r(102,Kut,1) + 3181500*r(102,Kot,1) + 385820*r(102,Mak,1) + 457530*r(102,Kuk,1) + 355520*r(102,Kok,1) + 1234200*r(103,Mat,1)
     
      + 673200*r(103,Kut,1) + 3243600*r(103,Kot,1) + 391680*r(103,Mak,1) + 465120*r(103,Kuk,1) + 361080*r(103,Kok,1) + 1256600*r(104,Mat,1) + 684950*r(104,Kut,1) + 3306300*r(104,Kot,1) + 397580*r(104,Mak,1) + 472770*r(104,Kuk,1) + 366680*r(104,Kok,1)
     
      + 1279200*r(105,Mat,1) + 696800*r(105,Kut,1) + 3369600*r(105,Kot,1) + 403520*r(105,Mak,1) + 480480*r(105,Kuk,1) + 372320*r(105,Kok,1) + 1302000*r(106,Mat,1) + 708750*r(106,Kut,1) + 3433500*r(106,Kot,1) + 409500*r(106,Mak,1) + 488250*r(106,Kuk,1)
     
      + 378000*r(106,Kok,1) + 1325000*r(107,Mat,1) + 720800*r(107,Kut,1) + 3498000*r(107,Kot,1) + 415520*r(107,Mak,1) + 496080*r(107,Kuk,1) + 383720*r(107,Kok,1) - 15600*u(2,Mas,EU,1) - 12000*u(2,Mas,IE,1) - 12800*u(2,Mas,PA,1) - 13500*u(2,Mas,KI,1)
     
      - 11600*u(2,Kos,EU,1) - 12000*u(2,Kos,IE,1) - 12800*u(2,Kos,PA,1) - 13500*u(2,Kos,KI,1) - 43600*u(2,Kuv,EU,1) - 37000*u(2,Kuv,IE,1) - 34800*u(2,Kuv,PA,1) - 33500*u(2,Kuv,KI,1) - 42600*u(2,Kov,EU,1) - 40000*u(2,Kov,IE,1) - 37800*u(2,Kov,PA,1)
     
      - 36500*u(2,Kov,KI,1) - 22800*u(2,Hsel,EU,1) - 24600*u(2,Hsel,IE,1) - 22500*u(2,Hsel,PA,1) - 25400*u(2,Hsel,KI,1) - 24700*u(2,Lsel,EU,1) - 27800*u(2,Lsel,IE,1) - 22500*u(2,Lsel,PA,1) - 24300*u(2,Lsel,KI,1) - 44600*u(2,Pap,EU,1) - 46000*u(2,Pap,IE,1)
     
      - 41800*u(2,Pap,PA,1) - 46500*u(2,Pap,KI,1) - 30400*u(3,Mas,EU,1) - 22000*u(3,Mas,IE,1) - 23200*u(3,Mas,PA,1) - 24000*u(3,Mas,KI,1) - 20400*u(3,Kos,EU,1) - 20000*u(3,Kos,IE,1) - 21200*u(3,Kos,PA,1) - 22000*u(3,Kos,KI,1) - 86400*u(3,Kuv,EU,1)
     
      - 72000*u(3,Kuv,IE,1) - 67200*u(3,Kuv,PA,1) - 64000*u(3,Kuv,KI,1) - 84400*u(3,Kov,EU,1) - 78000*u(3,Kov,IE,1) - 73200*u(3,Kov,PA,1) - 70000*u(3,Kov,KI,1) - 45200*u(3,Hsel,EU,1) - 48400*u(3,Hsel,IE,1) - 44000*u(3,Hsel,PA,1) - 49600*u(3,Hsel,KI,1)
     
      - 48800*u(3,Lsel,EU,1) - 55200*u(3,Lsel,IE,1) - 44000*u(3,Lsel,PA,1) - 47200*u(3,Lsel,KI,1) - 88400*u(3,Pap,EU,1) - 90000*u(3,Pap,IE,1) - 81200*u(3,Pap,PA,1) - 90000*u(3,Pap,KI,1) - 44400*u(4,Mas,EU,1) - 30000*u(4,Mas,IE,1) - 31200*u(4,Mas,PA,1)
     
      - 31500*u(4,Mas,KI,1) - 26400*u(4,Kos,EU,1) - 24000*u(4,Kos,IE,1) - 25200*u(4,Kos,PA,1) - 25500*u(4,Kos,KI,1) - 128400*u(4,Kuv,EU,1) - 105000*u(4,Kuv,IE,1) - 97200*u(4,Kuv,PA,1) - 91500*u(4,Kuv,KI,1) - 125400*u(4,Kov,EU,1) - 114000*u(4,Kov,IE,1)
     
      - 106200*u(4,Kov,PA,1) - 100500*u(4,Kov,KI,1) - 67200*u(4,Hsel,EU,1) - 71400*u(4,Hsel,IE,1) - 64500*u(4,Hsel,PA,1) - 72600*u(4,Hsel,KI,1) - 72300*u(4,Lsel,EU,1) - 82200*u(4,Lsel,IE,1) - 64500*u(4,Lsel,PA,1) - 68700*u(4,Lsel,KI,1)
     
      - 131400*u(4,Pap,EU,1) - 132000*u(4,Pap,IE,1) - 118200*u(4,Pap,PA,1) - 130500*u(4,Pap,KI,1) - 57600*u(5,Mas,EU,1) - 36000*u(5,Mas,IE,1) - 36800*u(5,Mas,PA,1) - 36000*u(5,Mas,KI,1) - 29600*u(5,Kos,EU,1) - 24000*u(5,Kos,IE,1) - 24800*u(5,Kos,PA,1)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 23:25:38 Page 53
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 433


     PROFIT  =E=  Profit is what we gain minus what we spend     
     
      - 24000*u(5,Kos,KI,1) - 169600*u(5,Kuv,EU,1) - 136000*u(5,Kuv,IE,1) - 124800*u(5,Kuv,PA,1) - 116000*u(5,Kuv,KI,1) - 165600*u(5,Kov,EU,1) - 148000*u(5,Kov,IE,1) - 136800*u(5,Kov,PA,1) - 128000*u(5,Kov,KI,1) - 88800*u(5,Hsel,EU,1)
     
      - 93600*u(5,Hsel,IE,1) - 84000*u(5,Hsel,PA,1) - 94400*u(5,Hsel,KI,1) - 95200*u(5,Lsel,EU,1) - 108800*u(5,Lsel,IE,1) - 84000*u(5,Lsel,PA,1) - 88800*u(5,Lsel,KI,1) - 173600*u(5,Pap,EU,1) - 172000*u(5,Pap,IE,1) - 152800*u(5,Pap,PA,1)
     
      - 168000*u(5,Pap,KI,1) - 70000*u(6,Mas,EU,1) - 40000*u(6,Mas,IE,1) - 40000*u(6,Mas,PA,1) - 37500*u(6,Mas,KI,1) - 30000*u(6,Kos,EU,1) - 20000*u(6,Kos,IE,1) - 20000*u(6,Kos,PA,1) - 17500*u(6,Kos,KI,1) - 210000*u(6,Kuv,EU,1) - 165000*u(6,Kuv,IE,1)
     
      - 150000*u(6,Kuv,PA,1) - 137500*u(6,Kuv,KI,1) - 205000*u(6,Kov,EU,1) - 180000*u(6,Kov,IE,1) - 165000*u(6,Kov,PA,1) - 152500*u(6,Kov,KI,1) - 110000*u(6,Hsel,EU,1) - 115000*u(6,Hsel,IE,1) - 102500*u(6,Hsel,PA,1) - 115000*u(6,Hsel,KI,1)
     
      - 117500*u(6,Lsel,EU,1) - 135000*u(6,Lsel,IE,1) - 102500*u(6,Lsel,PA,1) - 107500*u(6,Lsel,KI,1) - 215000*u(6,Pap,EU,1) - 210000*u(6,Pap,IE,1) - 185000*u(6,Pap,PA,1) - 202500*u(6,Pap,KI,1) - 81600*u(7,Mas,EU,1) - 42000*u(7,Mas,IE,1)
     
      - 40800*u(7,Mas,PA,1) - 36000*u(7,Mas,KI,1) - 27600*u(7,Kos,EU,1) - 12000*u(7,Kos,IE,1) - 10800*u(7,Kos,PA,1) - 6000*u(7,Kos,KI,1) - 249600*u(7,Kuv,EU,1) - 192000*u(7,Kuv,IE,1) - 172800*u(7,Kuv,PA,1) - 156000*u(7,Kuv,KI,1) - 243600*u(7,Kov,EU,1)
     
      - 210000*u(7,Kov,IE,1) - 190800*u(7,Kov,PA,1) - 174000*u(7,Kov,KI,1) - 130800*u(7,Hsel,EU,1) - 135600*u(7,Hsel,IE,1) - 120000*u(7,Hsel,PA,1) - 134400*u(7,Hsel,KI,1) - 139200*u(7,Lsel,EU,1) - 160800*u(7,Lsel,IE,1) - 120000*u(7,Lsel,PA,1)
     
      - 124800*u(7,Lsel,KI,1) - 255600*u(7,Pap,EU,1) - 246000*u(7,Pap,IE,1) - 214800*u(7,Pap,PA,1) - 234000*u(7,Pap,KI,1) - 92400*u(8,Mas,EU,1) - 42000*u(8,Mas,IE,1) - 39200*u(8,Mas,PA,1) - 31500*u(8,Mas,KI,1) - 22400*u(8,Kos,EU,1) + 2800*u(8,Kos,PA,1)
     
      + 10500*u(8,Kos,KI,1) - 288400*u(8,Kuv,EU,1) - 217000*u(8,Kuv,IE,1) - 193200*u(8,Kuv,PA,1) - 171500*u(8,Kuv,KI,1) - 281400*u(8,Kov,EU,1) - 238000*u(8,Kov,IE,1) - 214200*u(8,Kov,PA,1) - 192500*u(8,Kov,KI,1) - 151200*u(8,Hsel,EU,1)
     
      - 155400*u(8,Hsel,IE,1) - 136500*u(8,Hsel,PA,1) - 152600*u(8,Hsel,KI,1) - 160300*u(8,Lsel,EU,1) - 186200*u(8,Lsel,IE,1) - 136500*u(8,Lsel,PA,1) - 140700*u(8,Lsel,KI,1) - 295400*u(8,Pap,EU,1) - 280000*u(8,Pap,IE,1) - 242200*u(8,Pap,PA,1)
     
      - 262500*u(8,Pap,KI,1) - 102400*u(9,Mas,EU,1) - 40000*u(9,Mas,IE,1) - 35200*u(9,Mas,PA,1) - 24000*u(9,Mas,KI,1) - 14400*u(9,Kos,EU,1) + 16000*u(9,Kos,IE,1) + 20800*u(9,Kos,PA,1) + 32000*u(9,Kos,KI,1) - 326400*u(9,Kuv,EU,1) - 240000*u(9,Kuv,IE,1)
     
      - 211200*u(9,Kuv,PA,1) - 184000*u(9,Kuv,KI,1) - 318400*u(9,Kov,EU,1) - 264000*u(9,Kov,IE,1) - 235200*u(9,Kov,PA,1) - 208000*u(9,Kov,KI,1) - 171200*u(9,Hsel,EU,1) - 174400*u(9,Hsel,IE,1) - 152000*u(9,Hsel,PA,1) - 169600*u(9,Hsel,KI,1)
     
      - 180800*u(9,Lsel,EU,1) - 211200*u(9,Lsel,IE,1) - 152000*u(9,Lsel,PA,1) - 155200*u(9,Lsel,KI,1) - 334400*u(9,Pap,EU,1) - 312000*u(9,Pap,IE,1) - 267200*u(9,Pap,PA,1) - 288000*u(9,Pap,KI,1) - 111600*u(10,Mas,EU,1) - 36000*u(10,Mas,IE,1)
     
      - 28800*u(10,Mas,PA,1) - 13500*u(10,Mas,KI,1) - 3600*u(10,Kos,EU,1) + 36000*u(10,Kos,IE,1) + 43200*u(10,Kos,PA,1) + 58500*u(10,Kos,KI,1) - 363600*u(10,Kuv,EU,1) - 261000*u(10,Kuv,IE,1) - 226800*u(10,Kuv,PA,1) - 193500*u(10,Kuv,KI,1)
     
      - 354600*u(10,Kov,EU,1) - 288000*u(10,Kov,IE,1) - 253800*u(10,Kov,PA,1) - 220500*u(10,Kov,KI,1) - 190800*u(10,Hsel,EU,1) - 192600*u(10,Hsel,IE,1) - 166500*u(10,Hsel,PA,1) - 185400*u(10,Hsel,KI,1) - 200700*u(10,Lsel,EU,1) - 235800*u(10,Lsel,IE,1)
     
      - 166500*u(10,Lsel,PA,1) - 168300*u(10,Lsel,KI,1) - 372600*u(10,Pap,EU,1) - 342000*u(10,Pap,IE,1) - 289800*u(10,Pap,PA,1) - 310500*u(10,Pap,KI,1) - 120000*u(11,Mas,EU,1) - 30000*u(11,Mas,IE,1) - 20000*u(11,Mas,PA,1) + 10000*u(11,Kos,EU,1)
     
      + 60000*u(11,Kos,IE,1) + 70000*u(11,Kos,PA,1) + 90000*u(11,Kos,KI,1) - 400000*u(11,Kuv,EU,1) - 280000*u(11,Kuv,IE,1) - 240000*u(11,Kuv,PA,1) - 200000*u(11,Kuv,KI,1) - 390000*u(11,Kov,EU,1) - 310000*u(11,Kov,IE,1) - 270000*u(11,Kov,PA,1)
     
      - 230000*u(11,Kov,KI,1) - 210000*u(11,Hsel,EU,1) - 210000*u(11,Hsel,IE,1) - 180000*u(11,Hsel,PA,1) - 200000*u(11,Hsel,KI,1) - 220000*u(11,Lsel,EU,1) - 260000*u(11,Lsel,IE,1) - 180000*u(11,Lsel,PA,1) - 180000*u(11,Lsel,KI,1) - 410000*u(11,Pap,EU,1)
     
      - 370000*u(11,Pap,IE,1) - 310000*u(11,Pap,PA,1) - 330000*u(11,Pap,KI,1) - 127600*u(12,Mas,EU,1) - 22000*u(12,Mas,IE,1) - 8800.00000000003*u(12,Mas,PA,1) + 16500*u(12,Mas,KI,1) + 26400*u(12,Kos,EU,1) + 88000*u(12,Kos,IE,1) + 101200*u(12,Kos,PA,1)
     
      + 126500*u(12,Kos,KI,1) - 435600*u(12,Kuv,EU,1) - 297000*u(12,Kuv,IE,1) - 250800*u(12,Kuv,PA,1) - 203500*u(12,Kuv,KI,1) - 424600*u(12,Kov,EU,1) - 330000*u(12,Kov,IE,1) - 283800*u(12,Kov,PA,1) - 236500*u(12,Kov,KI,1) - 228800*u(12,Hsel,EU,1)
     
      - 226600*u(12,Hsel,IE,1) - 192500*u(12,Hsel,PA,1) - 213400*u(12,Hsel,KI,1) - 238700*u(12,Lsel,EU,1) - 283800*u(12,Lsel,IE,1) - 192500*u(12,Lsel,PA,1) - 190300*u(12,Lsel,KI,1) - 446600*u(12,Pap,EU,1) - 396000*u(12,Pap,IE,1) - 327800*u(12,Pap,PA,1)
     
      - 346500*u(12,Pap,KI,1) - 134400*u(13,Mas,EU,1) - 12000*u(13,Mas,IE,1) + 4799.99999999997*u(13,Mas,PA,1) + 36000*u(13,Mas,KI,1) + 45600*u(13,Kos,EU,1) + 120000*u(13,Kos,IE,1) + 136800*u(13,Kos,PA,1) + 168000*u(13,Kos,KI,1) - 470400*u(13,Kuv,EU,1)
     
      - 312000*u(13,Kuv,IE,1) - 259200*u(13,Kuv,PA,1) - 204000*u(13,Kuv,KI,1) - 458400*u(13,Kov,EU,1) - 348000*u(13,Kov,IE,1) - 295200*u(13,Kov,PA,1) - 240000*u(13,Kov,KI,1) - 247200*u(13,Hsel,EU,1) - 242400*u(13,Hsel,IE,1) - 204000*u(13,Hsel,PA,1)
     
      - 225600*u(13,Hsel,KI,1) - 256800*u(13,Lsel,EU,1) - 307200*u(13,Lsel,IE,1) - 204000*u(13,Lsel,PA,1) - 199200*u(13,Lsel,KI,1) - 482400*u(13,Pap,EU,1) - 420000*u(13,Pap,IE,1) - 343200*u(13,Pap,PA,1) - 360000*u(13,Pap,KI,1) - 140400*u(14,Mas,EU,1)
     
      + 20800*u(14,Mas,PA,1) + 58500*u(14,Mas,KI,1) + 67600*u(14,Kos,EU,1) + 156000*u(14,Kos,IE,1) + 176800*u(14,Kos,PA,1) + 214500*u(14,Kos,KI,1) - 504400*u(14,Kuv,EU,1) - 325000*u(14,Kuv,IE,1) - 265200*u(14,Kuv,PA,1) - 201500*u(14,Kuv,KI,1)
     
      - 491400*u(14,Kov,EU,1) - 364000*u(14,Kov,IE,1) - 304200*u(14,Kov,PA,1) - 240500*u(14,Kov,KI,1) - 265200*u(14,Hsel,EU,1) - 257400*u(14,Hsel,IE,1) - 214500*u(14,Hsel,PA,1) - 236600*u(14,Hsel,KI,1) - 274300*u(14,Lsel,EU,1) - 330200*u(14,Lsel,IE,1)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 23:25:38 Page 54
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 433


     PROFIT  =E=  Profit is what we gain minus what we spend     
     
      - 214500*u(14,Lsel,PA,1) - 206700*u(14,Lsel,KI,1) - 517400*u(14,Pap,EU,1) - 442000*u(14,Pap,IE,1) - 356200*u(14,Pap,PA,1) - 370500*u(14,Pap,KI,1) - 145600*u(15,Mas,EU,1) + 14000*u(15,Mas,IE,1) + 39200*u(15,Mas,PA,1) + 84000*u(15,Mas,KI,1)
     
      + 92400*u(15,Kos,EU,1) + 196000*u(15,Kos,IE,1) + 221200*u(15,Kos,PA,1) + 266000*u(15,Kos,KI,1) - 537600*u(15,Kuv,EU,1) - 336000*u(15,Kuv,IE,1) - 268800*u(15,Kuv,PA,1) - 196000*u(15,Kuv,KI,1) - 523600*u(15,Kov,EU,1) - 378000*u(15,Kov,IE,1)
     
      - 310800*u(15,Kov,PA,1) - 238000*u(15,Kov,KI,1) - 282800*u(15,Hsel,EU,1) - 271600*u(15,Hsel,IE,1) - 224000*u(15,Hsel,PA,1) - 246400*u(15,Hsel,KI,1) - 291200*u(15,Lsel,EU,1) - 352800*u(15,Lsel,IE,1) - 224000*u(15,Lsel,PA,1) - 212800*u(15,Lsel,KI,1)
     
      - 551600*u(15,Pap,EU,1) - 462000*u(15,Pap,IE,1) - 366800*u(15,Pap,PA,1) - 378000*u(15,Pap,KI,1) - 150000*u(16,Mas,EU,1) + 30000*u(16,Mas,IE,1) + 60000*u(16,Mas,PA,1) + 112500*u(16,Mas,KI,1) + 120000*u(16,Kos,EU,1) + 240000*u(16,Kos,IE,1)
     
      + 270000*u(16,Kos,PA,1) + 322500*u(16,Kos,KI,1) - 570000*u(16,Kuv,EU,1) - 345000*u(16,Kuv,IE,1) - 270000*u(16,Kuv,PA,1) - 187500*u(16,Kuv,KI,1) - 555000*u(16,Kov,EU,1) - 390000*u(16,Kov,IE,1) - 315000*u(16,Kov,PA,1) - 232500*u(16,Kov,KI,1)
     
      - 300000*u(16,Hsel,EU,1) - 285000*u(16,Hsel,IE,1) - 232500*u(16,Hsel,PA,1) - 255000*u(16,Hsel,KI,1) - 307500*u(16,Lsel,EU,1) - 375000*u(16,Lsel,IE,1) - 232500*u(16,Lsel,PA,1) - 217500*u(16,Lsel,KI,1) - 585000*u(16,Pap,EU,1) - 480000*u(16,Pap,IE,1)
     
      - 375000*u(16,Pap,PA,1) - 382500*u(16,Pap,KI,1) - 153600*u(17,Mas,EU,1) + 48000*u(17,Mas,IE,1) + 83200*u(17,Mas,PA,1) + 144000*u(17,Mas,KI,1) + 150400*u(17,Kos,EU,1) + 288000*u(17,Kos,IE,1) + 323200*u(17,Kos,PA,1) + 384000*u(17,Kos,KI,1)
     
      - 601600*u(17,Kuv,EU,1) - 352000*u(17,Kuv,IE,1) - 268800*u(17,Kuv,PA,1) - 176000*u(17,Kuv,KI,1) - 585600*u(17,Kov,EU,1) - 400000*u(17,Kov,IE,1) - 316800*u(17,Kov,PA,1) - 224000*u(17,Kov,KI,1) - 316800*u(17,Hsel,EU,1) - 297600*u(17,Hsel,IE,1)
     
      - 240000*u(17,Hsel,PA,1) - 262400*u(17,Hsel,KI,1) - 323200*u(17,Lsel,EU,1) - 396800*u(17,Lsel,IE,1) - 240000*u(17,Lsel,PA,1) - 220800*u(17,Lsel,KI,1) - 617600*u(17,Pap,EU,1) - 496000*u(17,Pap,IE,1) - 380800*u(17,Pap,PA,1) - 384000*u(17,Pap,KI,1)
     
      - 156400*u(18,Mas,EU,1) + 68000*u(18,Mas,IE,1) + 108800*u(18,Mas,PA,1) + 178500*u(18,Mas,KI,1) + 183600*u(18,Kos,EU,1) + 340000*u(18,Kos,IE,1) + 380800*u(18,Kos,PA,1) + 450500*u(18,Kos,KI,1) - 632400*u(18,Kuv,EU,1) - 357000*u(18,Kuv,IE,1)
     
      - 265200*u(18,Kuv,PA,1) - 161500*u(18,Kuv,KI,1) - 615400*u(18,Kov,EU,1) - 408000*u(18,Kov,IE,1) - 316200*u(18,Kov,PA,1) - 212500*u(18,Kov,KI,1) - 333200*u(18,Hsel,EU,1) - 309400*u(18,Hsel,IE,1) - 246500*u(18,Hsel,PA,1) - 268600*u(18,Hsel,KI,1)
     
      - 338300*u(18,Lsel,EU,1) - 418200*u(18,Lsel,IE,1) - 246500*u(18,Lsel,PA,1) - 222700*u(18,Lsel,KI,1) - 649400*u(18,Pap,EU,1) - 510000*u(18,Pap,IE,1) - 384200*u(18,Pap,PA,1) - 382500*u(18,Pap,KI,1) - 158400*u(19,Mas,EU,1) + 90000*u(19,Mas,IE,1)
     
      + 136800*u(19,Mas,PA,1) + 216000*u(19,Mas,KI,1) + 219600*u(19,Kos,EU,1) + 396000*u(19,Kos,IE,1) + 442800*u(19,Kos,PA,1) + 522000*u(19,Kos,KI,1) - 662400*u(19,Kuv,EU,1) - 360000*u(19,Kuv,IE,1) - 259200*u(19,Kuv,PA,1) - 144000*u(19,Kuv,KI,1)
     
      - 644400*u(19,Kov,EU,1) - 414000*u(19,Kov,IE,1) - 313200*u(19,Kov,PA,1) - 198000*u(19,Kov,KI,1) - 349200*u(19,Hsel,EU,1) - 320400*u(19,Hsel,IE,1) - 252000*u(19,Hsel,PA,1) - 273600*u(19,Hsel,KI,1) - 352800*u(19,Lsel,EU,1) - 439200*u(19,Lsel,IE,1)
     
      - 252000*u(19,Lsel,PA,1) - 223200*u(19,Lsel,KI,1) - 680400*u(19,Pap,EU,1) - 522000*u(19,Pap,IE,1) - 385200*u(19,Pap,PA,1) - 378000*u(19,Pap,KI,1) - 159600*u(20,Mas,EU,1) + 114000*u(20,Mas,IE,1) + 167200*u(20,Mas,PA,1) + 256500*u(20,Mas,KI,1)
     
      + 258400*u(20,Kos,EU,1) + 456000*u(20,Kos,IE,1) + 509200*u(20,Kos,PA,1) + 598500*u(20,Kos,KI,1) - 691600*u(20,Kuv,EU,1) - 361000*u(20,Kuv,IE,1) - 250800*u(20,Kuv,PA,1) - 123500*u(20,Kuv,KI,1) - 672600*u(20,Kov,EU,1) - 418000*u(20,Kov,IE,1)
     
      - 307800*u(20,Kov,PA,1) - 180500*u(20,Kov,KI,1) - 364800*u(20,Hsel,EU,1) - 330600*u(20,Hsel,IE,1) - 256500*u(20,Hsel,PA,1) - 277400*u(20,Hsel,KI,1) - 366700*u(20,Lsel,EU,1) - 459800*u(20,Lsel,IE,1) - 256500*u(20,Lsel,PA,1) - 222300*u(20,Lsel,KI,1)
     
      - 710600*u(20,Pap,EU,1) - 532000*u(20,Pap,IE,1) - 383800*u(20,Pap,PA,1) - 370500*u(20,Pap,KI,1) - 160000*u(21,Mas,EU,1) + 140000*u(21,Mas,IE,1) + 200000*u(21,Mas,PA,1) + 300000*u(21,Mas,KI,1) + 300000*u(21,Kos,EU,1) + 520000*u(21,Kos,IE,1)
     
      + 580000*u(21,Kos,PA,1) + 680000*u(21,Kos,KI,1) - 720000*u(21,Kuv,EU,1) - 360000*u(21,Kuv,IE,1) - 240000*u(21,Kuv,PA,1) - 100000*u(21,Kuv,KI,1) - 700000*u(21,Kov,EU,1) - 420000*u(21,Kov,IE,1) - 300000*u(21,Kov,PA,1) - 160000*u(21,Kov,KI,1)
     
      - 380000*u(21,Hsel,EU,1) - 340000*u(21,Hsel,IE,1) - 260000*u(21,Hsel,PA,1) - 280000*u(21,Hsel,KI,1) - 380000*u(21,Lsel,EU,1) - 480000*u(21,Lsel,IE,1) - 260000*u(21,Lsel,PA,1) - 220000*u(21,Lsel,KI,1) - 740000*u(21,Pap,EU,1) - 540000*u(21,Pap,IE,1)
     
      - 380000*u(21,Pap,PA,1) - 360000*u(21,Pap,KI,1) - 159600*u(22,Mas,EU,1) + 168000*u(22,Mas,IE,1) + 235200*u(22,Mas,PA,1) + 346500*u(22,Mas,KI,1) + 344400*u(22,Kos,EU,1) + 588000*u(22,Kos,IE,1) + 655200*u(22,Kos,PA,1) + 766500*u(22,Kos,KI,1)
     
      - 747600*u(22,Kuv,EU,1) - 357000*u(22,Kuv,IE,1) - 226800*u(22,Kuv,PA,1) - 73500*u(22,Kuv,KI,1) - 726600*u(22,Kov,EU,1) - 420000*u(22,Kov,IE,1) - 289800*u(22,Kov,PA,1) - 136500*u(22,Kov,KI,1) - 394800*u(22,Hsel,EU,1) - 348600*u(22,Hsel,IE,1)
     
      - 262500*u(22,Hsel,PA,1) - 281400*u(22,Hsel,KI,1) - 392700*u(22,Lsel,EU,1) - 499800*u(22,Lsel,IE,1) - 262500*u(22,Lsel,PA,1) - 216300*u(22,Lsel,KI,1) - 768600*u(22,Pap,EU,1) - 546000*u(22,Pap,IE,1) - 373800*u(22,Pap,PA,1) - 346500*u(22,Pap,KI,1)
     
      - 158400*u(23,Mas,EU,1) + 198000*u(23,Mas,IE,1) + 272800*u(23,Mas,PA,1) + 396000*u(23,Mas,KI,1) + 391600*u(23,Kos,EU,1) + 660000*u(23,Kos,IE,1) + 734800*u(23,Kos,PA,1) + 858000*u(23,Kos,KI,1) - 774400*u(23,Kuv,EU,1) - 352000*u(23,Kuv,IE,1)
     
      - 211200*u(23,Kuv,PA,1) - 44000*u(23,Kuv,KI,1) - 752400*u(23,Kov,EU,1) - 418000*u(23,Kov,IE,1) - 277200*u(23,Kov,PA,1) - 110000*u(23,Kov,KI,1) - 409200*u(23,Hsel,EU,1) - 356400*u(23,Hsel,IE,1) - 264000*u(23,Hsel,PA,1) - 281600*u(23,Hsel,KI,1)
     
      - 404800*u(23,Lsel,EU,1) - 519200*u(23,Lsel,IE,1) - 264000*u(23,Lsel,PA,1) - 211200*u(23,Lsel,KI,1) - 796400*u(23,Pap,EU,1) - 550000*u(23,Pap,IE,1) - 365200*u(23,Pap,PA,1) - 330000*u(23,Pap,KI,1) - 0.19*b(Mat,1) - 0.15*b(Kut,1) - 0.12*b(Kot,1)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 23:25:38 Page 55
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 433


     PROFIT  =E=  Profit is what we gain minus what we spend     
     
      - 0.18*b(Mak,1) - 0.15*b(Kuk,1) - 0.15*b(Kok,1) + Pr(1) + 0.7*Cap(Pap,2) + 0.1*Cap(SAW,2) + 0.3*Cap(PLY,2) + 0.5*Cap(SPULP,2) + 0.5*Cap(HPULP,2) =E= 0 ; (LHS = 0)
     
PROFIT(2)..  0.542*y(Mas,2) + 0.492*y(Kus,2) + 0.442*y(Kos,2) + 2.492*y(Kuv,2) + 2.592*y(Kov,2) + 0.82*y(Hsel,2) + 0.8*y(Lsel,2) + 1.7*y(Pap,2) + 0.19*s(Mat,2) + 0.15*s(Kut,2) + 0.12*s(Kot,2) + 0.18*s(Mak,2) + 0.15*s(Kuk,2) + 0.15*s(Kok,2)
     
      + 2000*r(2,Mat,2) + 1550*r(2,Kut,2) + 1500*r(2,Kot,2) + 1820*r(2,Mak,2) + 1530*r(2,Kuk,2) + 1520*r(2,Kok,2) + 4200*r(3,Mat,2) + 3200*r(3,Kut,2) + 3600*r(3,Kot,2) + 3680*r(3,Mak,2) + 3120*r(3,Kuk,2) + 3080*r(3,Kok,2) + 6600*r(4,Mat,2)
     
      + 4950*r(4,Kut,2) + 6300*r(4,Kot,2) + 5580*r(4,Mak,2) + 4770*r(4,Kuk,2) + 4680*r(4,Kok,2) + 9200*r(5,Mat,2) + 6800*r(5,Kut,2) + 9600*r(5,Kot,2) + 7520*r(5,Mak,2) + 6480*r(5,Kuk,2) + 6320*r(5,Kok,2) + 12000*r(6,Mat,2) + 8750*r(6,Kut,2)
     
      + 13500*r(6,Kot,2) + 9500*r(6,Mak,2) + 8250*r(6,Kuk,2) + 8000*r(6,Kok,2) + 15000*r(7,Mat,2) + 10800*r(7,Kut,2) + 18000*r(7,Kot,2) + 11520*r(7,Mak,2) + 10080*r(7,Kuk,2) + 9720*r(7,Kok,2) + 18200*r(8,Mat,2) + 12950*r(8,Kut,2) + 23100*r(8,Kot,2)
     
      + 13580*r(8,Mak,2) + 11970*r(8,Kuk,2) + 11480*r(8,Kok,2) + 21600*r(9,Mat,2) + 15200*r(9,Kut,2) + 28800*r(9,Kot,2) + 15680*r(9,Mak,2) + 13920*r(9,Kuk,2) + 13280*r(9,Kok,2) + 25200*r(10,Mat,2) + 17550*r(10,Kut,2) + 35100*r(10,Kot,2)
     
      + 17820*r(10,Mak,2) + 15930*r(10,Kuk,2) + 15120*r(10,Kok,2) + 29000*r(11,Mat,2) + 20000*r(11,Kut,2) + 42000*r(11,Kot,2) + 20000*r(11,Mak,2) + 18000*r(11,Kuk,2) + 17000*r(11,Kok,2) + 33000*r(12,Mat,2) + 22550*r(12,Kut,2) + 49500*r(12,Kot,2)
     
      + 22220*r(12,Mak,2) + 20130*r(12,Kuk,2) + 18920*r(12,Kok,2) + 37200*r(13,Mat,2) + 25200*r(13,Kut,2) + 57600*r(13,Kot,2) + 24480*r(13,Mak,2) + 22320*r(13,Kuk,2) + 20880*r(13,Kok,2) + 41600*r(14,Mat,2) + 27950*r(14,Kut,2) + 66300*r(14,Kot,2)
     
      + 26780*r(14,Mak,2) + 24570*r(14,Kuk,2) + 22880*r(14,Kok,2) + 46200*r(15,Mat,2) + 30800*r(15,Kut,2) + 75600*r(15,Kot,2) + 29120*r(15,Mak,2) + 26880*r(15,Kuk,2) + 24920*r(15,Kok,2) + 51000*r(16,Mat,2) + 33750*r(16,Kut,2) + 85500*r(16,Kot,2)
     
      + 31500*r(16,Mak,2) + 29250*r(16,Kuk,2) + 27000*r(16,Kok,2) + 56000*r(17,Mat,2) + 36800*r(17,Kut,2) + 96000*r(17,Kot,2) + 33920*r(17,Mak,2) + 31680*r(17,Kuk,2) + 29120*r(17,Kok,2) + 61200*r(18,Mat,2) + 39950*r(18,Kut,2) + 107100*r(18,Kot,2)
     
      + 36380*r(18,Mak,2) + 34170*r(18,Kuk,2) + 31280*r(18,Kok,2) + 66600*r(19,Mat,2) + 43200*r(19,Kut,2) + 118800*r(19,Kot,2) + 38880*r(19,Mak,2) + 36720*r(19,Kuk,2) + 33480*r(19,Kok,2) + 72200*r(20,Mat,2) + 46550*r(20,Kut,2) + 131100*r(20,Kot,2)
     
      + 41420*r(20,Mak,2) + 39330*r(20,Kuk,2) + 35720*r(20,Kok,2) + 78000*r(21,Mat,2) + 50000*r(21,Kut,2) + 144000*r(21,Kot,2) + 44000*r(21,Mak,2) + 42000*r(21,Kuk,2) + 38000*r(21,Kok,2) + 84000*r(22,Mat,2) + 53550*r(22,Kut,2) + 157500*r(22,Kot,2)
     
      + 46620*r(22,Mak,2) + 44730*r(22,Kuk,2) + 40320*r(22,Kok,2) + 90200*r(23,Mat,2) + 57200*r(23,Kut,2) + 171600*r(23,Kot,2) + 49280*r(23,Mak,2) + 47520*r(23,Kuk,2) + 42680*r(23,Kok,2) + 96600*r(24,Mat,2) + 60950*r(24,Kut,2) + 186300*r(24,Kot,2)
     
      + 51980*r(24,Mak,2) + 50370*r(24,Kuk,2) + 45080*r(24,Kok,2) + 103200*r(25,Mat,2) + 64800*r(25,Kut,2) + 201600*r(25,Kot,2) + 54720*r(25,Mak,2) + 53280*r(25,Kuk,2) + 47520*r(25,Kok,2) + 110000*r(26,Mat,2) + 68750*r(26,Kut,2) + 217500*r(26,Kot,2)
     
      + 57500*r(26,Mak,2) + 56250*r(26,Kuk,2) + 50000*r(26,Kok,2) + 117000*r(27,Mat,2) + 72800*r(27,Kut,2) + 234000*r(27,Kot,2) + 60320*r(27,Mak,2) + 59280*r(27,Kuk,2) + 52520*r(27,Kok,2) + 124200*r(28,Mat,2) + 76950*r(28,Kut,2) + 251100*r(28,Kot,2)
     
      + 63180*r(28,Mak,2) + 62370*r(28,Kuk,2) + 55080*r(28,Kok,2) + 131600*r(29,Mat,2) + 81200*r(29,Kut,2) + 268800*r(29,Kot,2) + 66080*r(29,Mak,2) + 65520*r(29,Kuk,2) + 57680*r(29,Kok,2) + 139200*r(30,Mat,2) + 85550*r(30,Kut,2) + 287100*r(30,Kot,2)
     
      + 69020*r(30,Mak,2) + 68730*r(30,Kuk,2) + 60320*r(30,Kok,2) + 147000*r(31,Mat,2) + 90000*r(31,Kut,2) + 306000*r(31,Kot,2) + 72000*r(31,Mak,2) + 72000*r(31,Kuk,2) + 63000*r(31,Kok,2) + 155000*r(32,Mat,2) + 94550*r(32,Kut,2) + 325500*r(32,Kot,2)
     
      + 75020*r(32,Mak,2) + 75330*r(32,Kuk,2) + 65720*r(32,Kok,2) + 163200*r(33,Mat,2) + 99200*r(33,Kut,2) + 345600*r(33,Kot,2) + 78080*r(33,Mak,2) + 78720*r(33,Kuk,2) + 68480*r(33,Kok,2) + 171600*r(34,Mat,2) + 103950*r(34,Kut,2) + 366300*r(34,Kot,2)
     
      + 81180*r(34,Mak,2) + 82170*r(34,Kuk,2) + 71280*r(34,Kok,2) + 180200*r(35,Mat,2) + 108800*r(35,Kut,2) + 387600*r(35,Kot,2) + 84320*r(35,Mak,2) + 85680*r(35,Kuk,2) + 74120*r(35,Kok,2) + 189000*r(36,Mat,2) + 113750*r(36,Kut,2) + 409500*r(36,Kot,2)
     
      + 87500*r(36,Mak,2) + 89250*r(36,Kuk,2) + 77000*r(36,Kok,2) + 198000*r(37,Mat,2) + 118800*r(37,Kut,2) + 432000*r(37,Kot,2) + 90720*r(37,Mak,2) + 92880*r(37,Kuk,2) + 79920*r(37,Kok,2) + 207200*r(38,Mat,2) + 123950*r(38,Kut,2) + 455100*r(38,Kot,2)
     
      + 93980*r(38,Mak,2) + 96570*r(38,Kuk,2) + 82880*r(38,Kok,2) + 216600*r(39,Mat,2) + 129200*r(39,Kut,2) + 478800*r(39,Kot,2) + 97280*r(39,Mak,2) + 100320*r(39,Kuk,2) + 85880*r(39,Kok,2) + 226200*r(40,Mat,2) + 134550*r(40,Kut,2) + 503100*r(40,Kot,2)
     
      + 100620*r(40,Mak,2) + 104130*r(40,Kuk,2) + 88920*r(40,Kok,2) + 236000*r(41,Mat,2) + 140000*r(41,Kut,2) + 528000*r(41,Kot,2) + 104000*r(41,Mak,2) + 108000*r(41,Kuk,2) + 92000*r(41,Kok,2) + 246000*r(42,Mat,2) + 145550*r(42,Kut,2) + 553500*r(42,Kot,2)
     
      + 107420*r(42,Mak,2) + 111930*r(42,Kuk,2) + 95120*r(42,Kok,2) + 256200*r(43,Mat,2) + 151200*r(43,Kut,2) + 579600*r(43,Kot,2) + 110880*r(43,Mak,2) + 115920*r(43,Kuk,2) + 98280*r(43,Kok,2) + 266600*r(44,Mat,2) + 156950*r(44,Kut,2) + 606300*r(44,Kot,2)
     
      + 114380*r(44,Mak,2) + 119970*r(44,Kuk,2) + 101480*r(44,Kok,2) + 277200*r(45,Mat,2) + 162800*r(45,Kut,2) + 633600*r(45,Kot,2) + 117920*r(45,Mak,2) + 124080*r(45,Kuk,2) + 104720*r(45,Kok,2) + 288000*r(46,Mat,2) + 168750*r(46,Kut,2)
     
      + 661500*r(46,Kot,2) + 121500*r(46,Mak,2) + 128250*r(46,Kuk,2) + 108000*r(46,Kok,2) + 299000*r(47,Mat,2) + 174800*r(47,Kut,2) + 690000*r(47,Kot,2) + 125120*r(47,Mak,2) + 132480*r(47,Kuk,2) + 111320*r(47,Kok,2) + 310200*r(48,Mat,2)
     
      + 180950*r(48,Kut,2) + 719100*r(48,Kot,2) + 128780*r(48,Mak,2) + 136770*r(48,Kuk,2) + 114680*r(48,Kok,2) + 321600*r(49,Mat,2) + 187200*r(49,Kut,2) + 748800*r(49,Kot,2) + 132480*r(49,Mak,2) + 141120*r(49,Kuk,2) + 118080*r(49,Kok,2)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 23:25:38 Page 56
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 433


     PROFIT  =E=  Profit is what we gain minus what we spend     
     
      + 333200*r(50,Mat,2) + 193550*r(50,Kut,2) + 779100*r(50,Kot,2) + 136220*r(50,Mak,2) + 145530*r(50,Kuk,2) + 121520*r(50,Kok,2) + 345000*r(51,Mat,2) + 200000*r(51,Kut,2) + 810000*r(51,Kot,2) + 140000*r(51,Mak,2) + 150000*r(51,Kuk,2)
     
      + 125000*r(51,Kok,2) + 357000*r(52,Mat,2) + 206550*r(52,Kut,2) + 841500*r(52,Kot,2) + 143820*r(52,Mak,2) + 154530*r(52,Kuk,2) + 128520*r(52,Kok,2) + 369200*r(53,Mat,2) + 213200*r(53,Kut,2) + 873600*r(53,Kot,2) + 147680*r(53,Mak,2)
     
      + 159120*r(53,Kuk,2) + 132080*r(53,Kok,2) + 381600*r(54,Mat,2) + 219950*r(54,Kut,2) + 906300*r(54,Kot,2) + 151580*r(54,Mak,2) + 163770*r(54,Kuk,2) + 135680*r(54,Kok,2) + 394200*r(55,Mat,2) + 226800*r(55,Kut,2) + 939600*r(55,Kot,2)
     
      + 155520*r(55,Mak,2) + 168480*r(55,Kuk,2) + 139320*r(55,Kok,2) + 407000*r(56,Mat,2) + 233750*r(56,Kut,2) + 973500*r(56,Kot,2) + 159500*r(56,Mak,2) + 173250*r(56,Kuk,2) + 143000*r(56,Kok,2) + 420000*r(57,Mat,2) + 240800*r(57,Kut,2)
     
      + 1008000*r(57,Kot,2) + 163520*r(57,Mak,2) + 178080*r(57,Kuk,2) + 146720*r(57,Kok,2) + 433200*r(58,Mat,2) + 247950*r(58,Kut,2) + 1043100*r(58,Kot,2) + 167580*r(58,Mak,2) + 182970*r(58,Kuk,2) + 150480*r(58,Kok,2) + 446600*r(59,Mat,2)
     
      + 255200*r(59,Kut,2) + 1078800*r(59,Kot,2) + 171680*r(59,Mak,2) + 187920*r(59,Kuk,2) + 154280*r(59,Kok,2) + 460200*r(60,Mat,2) + 262550*r(60,Kut,2) + 1115100*r(60,Kot,2) + 175820*r(60,Mak,2) + 192930*r(60,Kuk,2) + 158120*r(60,Kok,2)
     
      + 474000*r(61,Mat,2) + 270000*r(61,Kut,2) + 1152000*r(61,Kot,2) + 180000*r(61,Mak,2) + 198000*r(61,Kuk,2) + 162000*r(61,Kok,2) + 488000*r(62,Mat,2) + 277550*r(62,Kut,2) + 1189500*r(62,Kot,2) + 184220*r(62,Mak,2) + 203130*r(62,Kuk,2)
     
      + 165920*r(62,Kok,2) + 502200*r(63,Mat,2) + 285200*r(63,Kut,2) + 1227600*r(63,Kot,2) + 188480*r(63,Mak,2) + 208320*r(63,Kuk,2) + 169880*r(63,Kok,2) + 516600*r(64,Mat,2) + 292950*r(64,Kut,2) + 1266300*r(64,Kot,2) + 192780*r(64,Mak,2)
     
      + 213570*r(64,Kuk,2) + 173880*r(64,Kok,2) + 531200*r(65,Mat,2) + 300800*r(65,Kut,2) + 1305600*r(65,Kot,2) + 197120*r(65,Mak,2) + 218880*r(65,Kuk,2) + 177920*r(65,Kok,2) + 546000*r(66,Mat,2) + 308750*r(66,Kut,2) + 1345500*r(66,Kot,2)
     
      + 201500*r(66,Mak,2) + 224250*r(66,Kuk,2) + 182000*r(66,Kok,2) + 561000*r(67,Mat,2) + 316800*r(67,Kut,2) + 1386000*r(67,Kot,2) + 205920*r(67,Mak,2) + 229680*r(67,Kuk,2) + 186120*r(67,Kok,2) + 576200*r(68,Mat,2) + 324950*r(68,Kut,2)
     
      + 1427100*r(68,Kot,2) + 210380*r(68,Mak,2) + 235170*r(68,Kuk,2) + 190280*r(68,Kok,2) + 591600*r(69,Mat,2) + 333200*r(69,Kut,2) + 1468800*r(69,Kot,2) + 214880*r(69,Mak,2) + 240720*r(69,Kuk,2) + 194480*r(69,Kok,2) + 607200*r(70,Mat,2)
     
      + 341550*r(70,Kut,2) + 1511100*r(70,Kot,2) + 219420*r(70,Mak,2) + 246330*r(70,Kuk,2) + 198720*r(70,Kok,2) + 623000*r(71,Mat,2) + 350000*r(71,Kut,2) + 1554000*r(71,Kot,2) + 224000*r(71,Mak,2) + 252000*r(71,Kuk,2) + 203000*r(71,Kok,2)
     
      + 639000*r(72,Mat,2) + 358550*r(72,Kut,2) + 1597500*r(72,Kot,2) + 228620*r(72,Mak,2) + 257730*r(72,Kuk,2) + 207320*r(72,Kok,2) + 655200*r(73,Mat,2) + 367200*r(73,Kut,2) + 1641600*r(73,Kot,2) + 233280*r(73,Mak,2) + 263520*r(73,Kuk,2)
     
      + 211680*r(73,Kok,2) + 671600*r(74,Mat,2) + 375950*r(74,Kut,2) + 1686300*r(74,Kot,2) + 237980*r(74,Mak,2) + 269370*r(74,Kuk,2) + 216080*r(74,Kok,2) + 688200*r(75,Mat,2) + 384800*r(75,Kut,2) + 1731600*r(75,Kot,2) + 242720*r(75,Mak,2)
     
      + 275280*r(75,Kuk,2) + 220520*r(75,Kok,2) + 705000*r(76,Mat,2) + 393750*r(76,Kut,2) + 1777500*r(76,Kot,2) + 247500*r(76,Mak,2) + 281250*r(76,Kuk,2) + 225000*r(76,Kok,2) + 722000*r(77,Mat,2) + 402800*r(77,Kut,2) + 1824000*r(77,Kot,2)
     
      + 252320*r(77,Mak,2) + 287280*r(77,Kuk,2) + 229520*r(77,Kok,2) + 739200*r(78,Mat,2) + 411950*r(78,Kut,2) + 1871100*r(78,Kot,2) + 257180*r(78,Mak,2) + 293370*r(78,Kuk,2) + 234080*r(78,Kok,2) + 756600*r(79,Mat,2) + 421200*r(79,Kut,2)
     
      + 1918800*r(79,Kot,2) + 262080*r(79,Mak,2) + 299520*r(79,Kuk,2) + 238680*r(79,Kok,2) + 774200*r(80,Mat,2) + 430550*r(80,Kut,2) + 1967100*r(80,Kot,2) + 267020*r(80,Mak,2) + 305730*r(80,Kuk,2) + 243320*r(80,Kok,2) + 792000*r(81,Mat,2)
     
      + 440000*r(81,Kut,2) + 2016000*r(81,Kot,2) + 272000*r(81,Mak,2) + 312000*r(81,Kuk,2) + 248000*r(81,Kok,2) + 810000*r(82,Mat,2) + 449550*r(82,Kut,2) + 2065500*r(82,Kot,2) + 277020*r(82,Mak,2) + 318330*r(82,Kuk,2) + 252720*r(82,Kok,2)
     
      + 828200*r(83,Mat,2) + 459200*r(83,Kut,2) + 2115600*r(83,Kot,2) + 282080*r(83,Mak,2) + 324720*r(83,Kuk,2) + 257480*r(83,Kok,2) + 846600*r(84,Mat,2) + 468950*r(84,Kut,2) + 2166300*r(84,Kot,2) + 287180*r(84,Mak,2) + 331170*r(84,Kuk,2)
     
      + 262280*r(84,Kok,2) + 865200*r(85,Mat,2) + 478800*r(85,Kut,2) + 2217600*r(85,Kot,2) + 292320*r(85,Mak,2) + 337680*r(85,Kuk,2) + 267120*r(85,Kok,2) + 884000*r(86,Mat,2) + 488750*r(86,Kut,2) + 2269500*r(86,Kot,2) + 297500*r(86,Mak,2)
     
      + 344250*r(86,Kuk,2) + 272000*r(86,Kok,2) + 903000*r(87,Mat,2) + 498800*r(87,Kut,2) + 2322000*r(87,Kot,2) + 302720*r(87,Mak,2) + 350880*r(87,Kuk,2) + 276920*r(87,Kok,2) + 922200*r(88,Mat,2) + 508950*r(88,Kut,2) + 2375100*r(88,Kot,2)
     
      + 307980*r(88,Mak,2) + 357570*r(88,Kuk,2) + 281880*r(88,Kok,2) + 941600*r(89,Mat,2) + 519200*r(89,Kut,2) + 2428800*r(89,Kot,2) + 313280*r(89,Mak,2) + 364320*r(89,Kuk,2) + 286880*r(89,Kok,2) + 961200*r(90,Mat,2) + 529550*r(90,Kut,2)
     
      + 2483100*r(90,Kot,2) + 318620*r(90,Mak,2) + 371130*r(90,Kuk,2) + 291920*r(90,Kok,2) + 981000*r(91,Mat,2) + 540000*r(91,Kut,2) + 2538000*r(91,Kot,2) + 324000*r(91,Mak,2) + 378000*r(91,Kuk,2) + 297000*r(91,Kok,2) + 1001000*r(92,Mat,2)
     
      + 550550*r(92,Kut,2) + 2593500*r(92,Kot,2) + 329420*r(92,Mak,2) + 384930*r(92,Kuk,2) + 302120*r(92,Kok,2) + 1021200*r(93,Mat,2) + 561200*r(93,Kut,2) + 2649600*r(93,Kot,2) + 334880*r(93,Mak,2) + 391920*r(93,Kuk,2) + 307280*r(93,Kok,2)
     
      + 1041600*r(94,Mat,2) + 571950*r(94,Kut,2) + 2706300*r(94,Kot,2) + 340380*r(94,Mak,2) + 398970*r(94,Kuk,2) + 312480*r(94,Kok,2) + 1062200*r(95,Mat,2) + 582800*r(95,Kut,2) + 2763600*r(95,Kot,2) + 345920*r(95,Mak,2) + 406080*r(95,Kuk,2)
     
      + 317720*r(95,Kok,2) + 1083000*r(96,Mat,2) + 593750*r(96,Kut,2) + 2821500*r(96,Kot,2) + 351500*r(96,Mak,2) + 413250*r(96,Kuk,2) + 323000*r(96,Kok,2) + 1104000*r(97,Mat,2) + 604800*r(97,Kut,2) + 2880000*r(97,Kot,2) + 357120*r(97,Mak,2)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 23:25:38 Page 57
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 433


     PROFIT  =E=  Profit is what we gain minus what we spend     
     
      + 420480*r(97,Kuk,2) + 328320*r(97,Kok,2) + 1125200*r(98,Mat,2) + 615950*r(98,Kut,2) + 2939100*r(98,Kot,2) + 362780*r(98,Mak,2) + 427770*r(98,Kuk,2) + 333680*r(98,Kok,2) + 1146600*r(99,Mat,2) + 627200*r(99,Kut,2) + 2998800*r(99,Kot,2)
     
      + 368480*r(99,Mak,2) + 435120*r(99,Kuk,2) + 339080*r(99,Kok,2) + 1168200*r(100,Mat,2) + 638550*r(100,Kut,2) + 3059100*r(100,Kot,2) + 374220*r(100,Mak,2) + 442530*r(100,Kuk,2) + 344520*r(100,Kok,2) + 1190000*r(101,Mat,2) + 650000*r(101,Kut,2)
     
      + 3120000*r(101,Kot,2) + 380000*r(101,Mak,2) + 450000*r(101,Kuk,2) + 350000*r(101,Kok,2) + 1212000*r(102,Mat,2) + 661550*r(102,Kut,2) + 3181500*r(102,Kot,2) + 385820*r(102,Mak,2) + 457530*r(102,Kuk,2) + 355520*r(102,Kok,2) + 1234200*r(103,Mat,2)
     
      + 673200*r(103,Kut,2) + 3243600*r(103,Kot,2) + 391680*r(103,Mak,2) + 465120*r(103,Kuk,2) + 361080*r(103,Kok,2) + 1256600*r(104,Mat,2) + 684950*r(104,Kut,2) + 3306300*r(104,Kot,2) + 397580*r(104,Mak,2) + 472770*r(104,Kuk,2) + 366680*r(104,Kok,2)
     
      + 1279200*r(105,Mat,2) + 696800*r(105,Kut,2) + 3369600*r(105,Kot,2) + 403520*r(105,Mak,2) + 480480*r(105,Kuk,2) + 372320*r(105,Kok,2) + 1302000*r(106,Mat,2) + 708750*r(106,Kut,2) + 3433500*r(106,Kot,2) + 409500*r(106,Mak,2) + 488250*r(106,Kuk,2)
     
      + 378000*r(106,Kok,2) + 1325000*r(107,Mat,2) + 720800*r(107,Kut,2) + 3498000*r(107,Kot,2) + 415520*r(107,Mak,2) + 496080*r(107,Kuk,2) + 383720*r(107,Kok,2) - 14676.9924517204*u(2,Mas,EU,2) - 11296.4415253407*u(2,Mas,IE,2)
     
      - 12050.7793353593*u(2,Mas,PA,2) - 12711.9890206842*u(2,Mas,KI,2) - 10876.5075590284*u(2,Kos,EU,2) - 11259.1909534325*u(2,Kos,IE,2) - 12010.7258123226*u(2,Kos,PA,2) - 12670.0478050911*u(2,Kos,KI,2) - 40813.4145453663*u(2,Kuv,EU,2)
     
      - 34644.3738018394*u(2,Kuv,IE,2) - 32588.0268873304*u(2,Kuv,PA,2) - 31375.427697833*u(2,Kuv,KI,2) - 39683.7754709727*u(2,Kov,EU,2) - 37273.1641676278*u(2,Kov,IE,2) - 35227.7970011534*u(2,Kov,PA,2) - 34022.491349481*u(2,Kov,KI,2)
     
      - 21136.2284354551*u(2,Hsel,EU,2) - 22809.0422367638*u(2,Hsel,IE,2) - 20864.9613325402*u(2,Hsel,PA,2) - 23555.0267697799*u(2,Hsel,KI,2) - 22789.6125930813*u(2,Lsel,EU,2) - 25646.1494957112*u(2,Lsel,IE,2) - 20765.8591761712*u(2,Lsel,PA,2)
     
      - 22431.4261476105*u(2,Lsel,KI,2) - 40949.6137599477*u(2,Pap,EU,2) - 42253.2614530094*u(2,Pap,IE,2) - 38404.3968353987*u(2,Pap,PA,2) - 42727.7182664706*u(2,Pap,KI,2) - 28608.9599058916*u(3,Mas,EU,2) - 20730.3205568082*u(3,Mas,IE,2)
     
      - 21866.4836780708*u(3,Mas,PA,2) - 22630.1343005588*u(3,Mas,KI,2) - 19171.0548666553*u(3,Kos,EU,2) - 18829.8672620059*u(3,Kos,IE,2) - 19964.0855153001*u(3,Kos,PA,2) - 20729.4523041083*u(3,Kos,KI,2) - 80889.1261617608*u(3,Kuv,EU,2)
     
      - 67444.4902812493*u(3,Kuv,IE,2) - 62962.9449877454*u(3,Kuv,PA,2) - 59984.4694120217*u(3,Kuv,KI,2) - 78637.0626682045*u(3,Kov,EU,2) - 72720.1076509035*u(3,Kov,IE,2) - 68264.1291810842*u(3,Kov,PA,2) - 65305.6516724337*u(3,Kov,KI,2)
     
      - 41910.7674003569*u(3,Hsel,EU,2) - 44894.7055324212*u(3,Hsel,IE,2) - 40825.6989886972*u(3,Hsel,PA,2) - 46024.9851279001*u(3,Hsel,KI,2) - 45041.9455179565*u(3,Lsel,EU,2) - 50934.1125459516*u(3,Lsel,IE,2) - 40636.2522386653*u(3,Lsel,PA,2)
     
      - 43609.1997360731*u(3,Lsel,KI,2) - 81189.759387617*u(3,Pap,EU,2) - 82732.8525753227*u(3,Pap,IE,2) - 74680.389273962*u(3,Pap,PA,2) - 82794.931036897*u(3,Pap,KI,2) - 41795.9023625135*u(4,Mas,EU,2) - 28301.6370944025*u(4,Mas,IE,2)
     
      - 29447.1130281345*u(4,Mas,PA,2) - 29754.4358396236*u(4,Mas,KI,2) - 24883.6419228809*u(4,Kos,EU,2) - 22712.0289257201*u(4,Kos,IE,2) - 23860.0791089325*u(4,Kos,PA,2) - 24178.2134970516*u(4,Kos,KI,2) - 120227.134849183*u(4,Kuv,EU,2)
     
      - 98400.3494382295*u(4,Kuv,IE,2) - 91124.7543012449*u(4,Kuv,PA,2) - 85827.125142566*u(4,Kuv,KI,2) - 116859.861591695*u(4,Kov,EU,2) - 106340.830449827*u(4,Kov,IE,2) - 99108.9965397924*u(4,Kov,PA,2) - 93849.4809688581*u(4,Kov,KI,2)
     
      - 62323.6168947055*u(4,Hsel,EU,2) - 66256.989886972*u(4,Hsel,IE,2) - 59882.2129684712*u(4,Hsel,PA,2) - 67409.8750743605*u(4,Hsel,KI,2) - 66756.9987746253*u(4,Lsel,EU,2) - 75863.8891507211*u(4,Lsel,IE,2) - 59611.1791874823*u(4,Lsel,PA,2)
     
      - 63533.3207653879*u(4,Lsel,KI,2) - 120720.436883008*u(4,Pap,EU,2) - 121438.77336694*u(4,Pap,IE,2) - 108827.97731569*u(4,Pap,PA,2) - 120201.638311279*u(4,Pap,KI,2) - 54237.8198215861*u(5,Mas,EU,2) - 34010.3911381237*u(5,Mas,IE,2)
     
      - 34792.6673855504*u(5,Mas,PA,2) - 34084.8936378786*u(5,Mas,KI,2) - 28014.2687277051*u(5,Kos,EU,2) - 22905.6759445752*u(5,Kos,IE,2) - 23698.7065932199*u(5,Kos,PA,2) - 23016.331383921*u(5,Kos,KI,2) - 158827.440607634*u(5,Kuv,EU,2)
     
      - 127511.95127278*u(5,Kuv,IE,2) - 117073.454827829*u(5,Kuv,PA,2) - 108903.394889466*u(5,Kuv,KI,2) - 154352.172241446*u(5,Kov,EU,2) - 138135.332564398*u(5,Kov,IE,2) - 127762.399077278*u(5,Kov,PA,2) - 119653.979238754*u(5,Kov,KI,2)
     
      - 82374.7769185009*u(5,Hsel,EU,2) - 86895.8953004164*u(5,Hsel,IE,2) - 78034.503271862*u(5,Hsel,PA,2) - 87709.6966091612*u(5,Hsel,KI,2) - 87934.7723630879*u(5,Lsel,EU,2) - 100435.47931002*u(5,Lsel,IE,2) - 77690.6400226223*u(5,Lsel,PA,2)
     
      - 82203.7892355547*u(5,Lsel,KI,2) - 159541.64624612*u(5,Pap,EU,2) - 158371.023827861*u(5,Pap,IE,2) - 140847.160960582*u(5,Pap,PA,2) - 154947.840089617*u(5,Pap,KI,2) - 65934.7122831095*u(6,Mas,EU,2) - 37856.5826879718*u(6,Mas,IE,2)
     
      - 37903.1467503186*u(6,Mas,PA,2) - 35621.507695324*u(6,Mas,KI,2) - 28562.9352811279*u(6,Kos,EU,2) - 19410.8083185712*u(6,Kos,IE,2) - 19479.9679681623*u(6,Kos,PA,2) - 17243.8059647164*u(6,Kos,KI,2) - 196690.043437113*u(6,Kuv,EU,2)
     
      - 154779.295784901*u(6,Kuv,IE,2) - 140809.046567497*u(6,Kuv,PA,2) - 129213.278652721*u(6,Kuv,KI,2) - 191113.994617455*u(6,Kov,EU,2) - 168103.613994617*u(6,Kov,IE,2) - 154224.336793541*u(6,Kov,PA,2) - 142719.146482122*u(6,Kov,KI,2)
     
      - 102064.247471743*u(6,Hsel,EU,2) - 106811.421772754*u(6,Hsel,IE,2) - 95282.5698988697*u(6,Hsel,PA,2) - 106924.449732302*u(6,Hsel,KI,2) - 108575.266283344*u(6,Lsel,EU,2) - 124648.883023848*u(6,Lsel,IE,2) - 94874.6347440852*u(6,Lsel,PA,2)
     
      - 99620.6051465737*u(6,Lsel,KI,2) - 197653.387476954*u(6,Pap,EU,2) - 193529.603958085*u(6,Pap,IE,2) - 170737.94020864*u(6,Pap,PA,2) - 187033.536371911*u(6,Pap,KI,2) - 76886.5797470836*u(7,Mas,EU,2) - 39840.2117439467*u(7,Mas,IE,2)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 23:25:38 Page 58
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 433


     PROFIT  =E=  Profit is what we gain minus what we spend     
     
      - 38778.551122439*u(7,Mas,PA,2) - 34364.2780119596*u(7,Mas,KI,2) - 26529.6415831493*u(7,Kos,EU,2) - 12227.426047708*u(7,Kos,IE,2) - 11203.8632337596*u(7,Kos,PA,2) - 6860.63723943796*u(7,Kos,KI,2) - 233814.94333762*u(7,Kuv,EU,2)
     
      - 180202.382974593*u(7,Kuv,IE,2) - 162331.52952025*u(7,Kuv,PA,2) - 146756.776432333*u(7,Kuv,KI,2) - 227145.328719723*u(7,Kov,EU,2) - 196245.674740484*u(7,Kov,IE,2) - 178494.809688581*u(7,Kov,PA,2) - 163044.982698962*u(7,Kov,KI,2)
     
      - 121392.028554432*u(7,Hsel,EU,2) - 126003.569303986*u(7,Hsel,IE,2) - 111626.412849494*u(7,Hsel,PA,2) - 125054.134443783*u(7,Hsel,KI,2) - 128678.480535394*u(7,Lsel,EU,2) - 148504.100292205*u(7,Lsel,IE,2) - 111163.163351871*u(7,Lsel,PA,2)
     
      - 115783.768498445*u(7,Lsel,KI,2) - 235055.660575509*u(7,Pap,EU,2) - 226914.513757614*u(7,Pap,IE,2) - 198500.315059861*u(7,Pap,PA,2) - 216458.72715816*u(7,Pap,KI,2) - 87093.4222135085*u(8,Mas,EU,2) - 39961.2783060484*u(8,Mas,IE,2)
     
      - 37418.8805019116*u(8,Mas,PA,2) - 30313.2045877855*u(8,Mas,KI,2) - 21914.3876337693*u(8,Kos,EU,2) - 1355.52913198571*u(8,Kos,IE,2) + 1129.60760998813*u(8,Kos,PA,2) + 8133.17479191441*u(8,Kos,KI,2) - 270202.140309156*u(8,Kuv,EU,2)
     
      - 203781.212841855*u(8,Kuv,IE,2) - 181640.903686088*u(8,Kuv,PA,2) - 161533.8882283*u(8,Kuv,KI,2) - 262446.174548251*u(8,Kov,EU,2) - 222561.514801999*u(8,Kov,IE,2) - 200573.817762399*u(8,Kov,PA,2) - 180631.487889273*u(8,Kov,KI,2)
     
      - 140358.120166568*u(8,Hsel,EU,2) - 144472.337894111*u(8,Hsel,IE,2) - 127066.032123736*u(8,Hsel,PA,2) - 142098.750743605*u(8,Hsel,KI,2) - 148244.415119238*u(8,Lsel,EU,2) - 172001.131115091*u(8,Lsel,IE,2) - 126556.22584598*u(8,Lsel,PA,2)
     
      - 130693.279291168*u(8,Lsel,KI,2) - 271748.465541786*u(8,Pap,EU,2) - 258525.753226446*u(8,Pap,IE,2) - 224134.285514248*u(8,Pap,PA,2) - 243223.412448365*u(8,Pap,KI,2) - 96555.2396823841*u(9,Mas,EU,2) - 38219.782374277*u(9,Mas,IE,2)
     
      - 33824.1348887364*u(9,Mas,PA,2) - 23468.2874228017*u(9,Mas,KI,2) - 14717.1734329879*u(9,Kos,EU,2) + 13204.8824285957*u(9,Kos,IE,2) + 17520.4445630809*u(9,Kos,PA,2) + 27737.6301293407*u(9,Kos,KI,2) - 305851.634351719*u(9,Kuv,EU,2)
     
      - 225515.785386687*u(9,Kuv,IE,2) - 198737.16906501*u(9,Kuv,PA,2) - 173544.614040622*u(9,Kuv,KI,2) - 297016.532103037*u(9,Kov,EU,2) - 247051.134179162*u(9,Kov,IE,2) - 220461.361014994*u(9,Kov,PA,2) - 195478.662053057*u(9,Kov,KI,2)
     
      - 158962.52230815*u(9,Hsel,EU,2) - 162217.727543129*u(9,Hsel,IE,2) - 141601.427721594*u(9,Hsel,PA,2) - 158058.298631767*u(9,Hsel,KI,2) - 167273.070034876*u(9,Lsel,EU,2) - 195139.975492506*u(9,Lsel,IE,2) - 141053.822226412*u(9,Lsel,PA,2)
     
      - 144349.137524743*u(9,Lsel,KI,2) - 307731.802375785*u(9,Pap,EU,2) - 288363.322364583*u(9,Pap,IE,2) - 247639.851571799*u(9,Pap,PA,2) - 267327.592242526*u(9,Pap,KI,2) - 105272.03215371*u(10,Mas,EU,2) - 34615.7239486325*u(10,Mas,IE,2)
     
      - 27994.3142829135*u(10,Mas,PA,2) - 13829.5265170081*u(10,Mas,KI,2) - 4937.99898080515*u(10,Kos,EU,2) + 31453.8086340363*u(10,Kos,IE,2) + 37968.6476255187*u(10,Kos,PA,2) + 51952.7287728409*u(10,Kos,KI,2) - 340763.425465311*u(10,Kuv,EU,2)
     
      - 245406.10060909*u(10,Kuv,IE,2) - 213620.325657017*u(10,Kuv,PA,2) - 182788.9538693*u(10,Kuv,KI,2) - 330856.401384083*u(10,Kov,EU,2) - 269714.532871972*u(10,Kov,IE,2) - 238157.439446367*u(10,Kov,PA,2) - 207586.505190311*u(10,Kov,KI,2)
     
      - 177205.234979179*u(10,Hsel,EU,2) - 179239.738251041*u(10,Hsel,IE,2) - 155232.59964307*u(10,Hsel,PA,2) - 172932.778108269*u(10,Hsel,KI,2) - 185764.445282307*u(10,Lsel,EU,2) - 217920.633424451*u(10,Lsel,IE,2) - 154655.952493166*u(10,Lsel,PA,2)
     
      - 156751.34319917*u(10,Lsel,KI,2) - 343005.671077505*u(10,Pap,EU,2) - 316427.221172023*u(10,Pap,IE,2) - 269017.013232514*u(10,Pap,PA,2) - 288771.266540643*u(10,Pap,KI,2) - 113243.799627488*u(11,Mas,EU,2) - 29149.1030291148*u(11,Mas,IE,2)
     
      - 19929.4186844427*u(11,Mas,PA,2) - 1396.92187040487*u(11,Mas,KI,2) + 7423.13572277905*u(11,Kos,EU,2) + 53391.249484336*u(11,Kos,IE,2) + 62474.2167973016*u(11,Kos,PA,2) + 80778.470722415*u(11,Kos,KI,2) - 374937.513649931*u(11,Kuv,EU,2)
     
      - 263452.158509064*u(11,Kuv,IE,2) - 226290.373462108*u(11,Kuv,PA,2) - 189266.907714334*u(11,Kuv,KI,2) - 363965.782391388*u(11,Kov,EU,2) - 290551.710880431*u(11,Kov,IE,2) - 253662.053056517*u(11,Kov,PA,2) - 216955.017301038*u(11,Kov,KI,2)
     
      - 195086.258179655*u(11,Hsel,EU,2) - 195538.370017847*u(11,Hsel,IE,2) - 167959.547888162*u(11,Hsel,PA,2) - 186722.189173111*u(11,Hsel,KI,2) - 203718.540861533*u(11,Lsel,EU,2) - 240343.104910925*u(11,Lsel,IE,2) - 167362.616646244*u(11,Lsel,PA,2)
     
      - 167899.89631445*u(11,Lsel,KI,2) - 377570.071646946*u(11,Pap,EU,2) - 342717.449648767*u(11,Pap,IE,2) - 288265.770496394*u(11,Pap,PA,2) - 307554.435342715*u(11,Pap,KI,2) - 120470.542103715*u(12,Mas,EU,2) - 21819.9196157239*u(12,Mas,IE,2)
     
      - 9629.44809332424*u(12,Mas,PA,2) + 13829.5265170081*u(12,Mas,KI,2) + 22366.2306777646*u(12,Kos,EU,2) + 79017.2049794948*u(12,Kos,IE,2) + 91037.1520784295*u(12,Kos,PA,2) + 114214.855978063*u(12,Kos,KI,2) - 408373.898905579*u(12,Kuv,EU,2)
     
      - 279653.959086607*u(12,Kuv,IE,2) - 236747.312480283*u(12,Kuv,PA,2) - 192978.475575724*u(12,Kuv,KI,2) - 396344.675124952*u(12,Kov,EU,2) - 309562.668204537*u(12,Kov,IE,2) - 266975.201845444*u(12,Kov,PA,2) - 223584.198385236*u(12,Kov,KI,2)
     
      - 212605.591909578*u(12,Hsel,EU,2) - 211113.622843545*u(12,Hsel,IE,2) - 179782.272456871*u(12,Hsel,PA,2) - 199426.531826294*u(12,Hsel,KI,2) - 221135.356772552*u(12,Lsel,EU,2) - 262407.389951928*u(12,Lsel,IE,2) - 179173.814685644*u(12,Lsel,PA,2)
     
      - 177794.796870582*u(12,Lsel,KI,2) - 411425.004084109*u(12,Pap,EU,2) - 367234.007794814*u(12,Pap,IE,2) - 305386.123363439*u(12,Pap,PA,2) - 323677.098648743*u(12,Pap,KI,2) - 126952.259582394*u(13,Mas,EU,2) - 12628.17370846*u(13,Mas,IE,2)
     
      + 2905.59749044206*u(13,Mas,PA,2) + 31849.8186452308*u(13,Mas,KI,2) + 39891.2858841516*u(13,Kos,EU,2) + 108331.675119513*u(13,Kos,IE,2) + 123657.453468902*u(13,Kos,PA,2) + 152261.884539785*u(13,Kos,KI,2) - 441072.581232255*u(13,Kuv,EU,2)
     
      - 294011.502341722*u(13,Kuv,IE,2) - 244991.142711544*u(13,Kuv,PA,2) - 193923.657453469*u(13,Kuv,KI,2) - 427993.079584775*u(13,Kov,EU,2) - 326747.404844291*u(13,Kov,IE,2) - 278096.885813149*u(13,Kov,PA,2) - 227474.048442907*u(13,Kov,KI,2)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 23:25:38 Page 59
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 433


     PROFIT  =E=  Profit is what we gain minus what we spend     
     
      - 229763.236168947*u(13,Hsel,EU,2) - 225965.496728138*u(13,Hsel,IE,2) - 190700.773349197*u(13,Hsel,PA,2) - 211045.806067817*u(13,Hsel,KI,2) - 238014.893015364*u(13,Lsel,EU,2) - 284113.48854746*u(13,Lsel,IE,2) - 190089.546611368*u(13,Lsel,PA,2)
     
      - 186436.044867565*u(13,Lsel,KI,2) - 444570.468388994*u(13,Pap,EU,2) - 389976.895610166*u(13,Pap,IE,2) - 320378.071833648*u(13,Pap,PA,2) - 337139.256458727*u(13,Pap,KI,2) - 132688.952063523*u(14,Mas,EU,2) - 1573.86530732284*u(14,Mas,IE,2)
     
      + 17675.7180668562*u(14,Mas,PA,2) + 52663.9545142633*u(14,Mas,KI,2) + 59998.3013419399*u(14,Kos,EU,2) + 141334.65990439*u(14,Kos,IE,2) + 160335.12096872*u(14,Kos,PA,2) + 194919.556407581*u(14,Kos,KI,2) - 473033.56062996*u(14,Kuv,EU,2)
     
      - 306524.788274406*u(14,Kuv,IE,2) - 251021.864155888*u(14,Kuv,PA,2) - 192102.45334757*u(14,Kuv,KI,2) - 458910.995770857*u(14,Kov,EU,2) - 342105.920799692*u(14,Kov,IE,2) - 287027.104959631*u(14,Kov,PA,2) - 228624.567474048*u(14,Kov,KI,2)
     
      - 246559.190957763*u(14,Hsel,EU,2) - 240093.991671624*u(14,Hsel,IE,2) - 200715.05056514*u(14,Hsel,PA,2) - 221580.01189768*u(14,Hsel,KI,2) - 254357.149589971*u(14,Lsel,EU,2) - 305461.400697521*u(14,Lsel,IE,2) - 200109.812423414*u(14,Lsel,PA,2)
     
      - 193823.640305401*u(14,Lsel,KI,2) - 477006.4645616*u(14,Pap,EU,2) - 410946.113094821*u(14,Pap,IE,2) - 333241.615907022*u(14,Pap,PA,2) - 347940.908772667*u(14,Pap,KI,2) - 137680.619547103*u(15,Mas,EU,2) + 11343.0055876875*u(15,Mas,IE,2)
     
      + 34680.913635918*u(15,Mas,PA,2) + 76271.9341241055*u(15,Mas,KI,2) + 82687.2770511296*u(15,Kos,EU,2) + 178026.159334126*u(15,Kos,IE,2) + 201070.154577884*u(15,Kos,PA,2) + 242187.871581451*u(15,Kos,KI,2) - 504256.837098692*u(15,Kuv,EU,2)
     
      - 317193.816884661*u(15,Kuv,IE,2) - 254839.476813317*u(15,Kuv,PA,2) - 187514.863258026*u(15,Kuv,KI,2) - 489098.423683199*u(15,Kov,EU,2) - 355638.216070742*u(15,Kov,IE,2) - 293765.85928489*u(15,Kov,PA,2) - 227035.755478662*u(15,Kov,KI,2)
     
      - 262993.456276026*u(15,Hsel,EU,2) - 253499.107674004*u(15,Hsel,IE,2) - 209825.1041047*u(15,Hsel,PA,2) - 231029.149315883*u(15,Hsel,KI,2) - 270162.126496371*u(15,Lsel,EU,2) - 326451.126402111*u(15,Lsel,IE,2) - 209234.612121783*u(15,Lsel,PA,2)
     
      - 199957.583184089*u(15,Lsel,KI,2) - 508732.992601928*u(15,Pap,EU,2) - 430141.660248781*u(15,Pap,IE,2) - 343976.755583561*u(15,Pap,PA,2) - 356082.055590562*u(15,Pap,KI,2) - 141927.262033134*u(16,Mas,EU,2) + 26122.4389765709*u(16,Mas,IE,2)
     
      + 53921.1841976276*u(16,Mas,PA,2) + 102673.757474757*u(16,Mas,KI,2) + 107958.213011721*u(16,Kos,EU,2) + 218406.173408721*u(16,Kos,IE,2) + 245862.554296392*u(16,Kos,PA,2) + 294066.830061395*u(16,Kos,KI,2) - 534742.410638453*u(16,Kuv,EU,2)
     
      - 326018.588172487*u(16,Kuv,IE,2) - 256443.980683831*u(16,Kuv,PA,2) - 180160.887184838*u(16,Kuv,KI,2) - 518555.363321799*u(16,Kov,EU,2) - 367344.290657439*u(16,Kov,IE,2) - 298313.148788927*u(16,Kov,PA,2) - 222707.612456747*u(16,Kov,KI,2)
     
      - 279066.032123736*u(16,Hsel,EU,2) - 266180.844735277*u(16,Hsel,IE,2) - 218030.933967876*u(16,Hsel,PA,2) - 239393.218322427*u(16,Hsel,KI,2) - 285429.823734565*u(16,Lsel,EU,2) - 347082.665661231*u(16,Lsel,IE,2) - 217463.945706476*u(16,Lsel,PA,2)
     
      - 204837.873503629*u(16,Lsel,KI,2) - 539750.052509977*u(16,Pap,EU,2) - 447563.537072044*u(16,Pap,IE,2) - 352583.490863264*u(16,Pap,PA,2) - 361562.696912413*u(16,Pap,KI,2) - 145428.879521616*u(17,Mas,EU,2) + 42764.4348593275*u(17,Mas,IE,2)
     
      + 75396.529751985*u(17,Mas,PA,2) + 131869.424566219*u(17,Mas,KI,2) + 135811.109223713*u(17,Kos,EU,2) + 262474.702128176*u(17,Kos,IE,2) + 294712.320124245*u(17,Kos,PA,2) + 350556.431847412*u(17,Kos,KI,2) - 564490.281249242*u(17,Kuv,EU,2)
     
      - 332999.102137882*u(17,Kuv,IE,2) - 255835.375767429*u(17,Kuv,PA,2) - 170040.525128006*u(17,Kuv,KI,2) - 547281.814686659*u(17,Kov,EU,2) - 377224.144559785*u(17,Kov,IE,2) - 300668.973471742*u(17,Kov,PA,2) - 215640.138408305*u(17,Kov,KI,2)
     
      - 294776.918500892*u(17,Hsel,EU,2) - 278139.202855443*u(17,Hsel,IE,2) - 225332.54015467*u(17,Hsel,PA,2) - 246672.218917311*u(17,Hsel,KI,2) - 300160.241304553*u(17,Lsel,EU,2) - 367356.01847488*u(17,Lsel,IE,2) - 224797.813177491*u(17,Lsel,PA,2)
     
      - 208464.511264021*u(17,Lsel,KI,2) - 570057.644285748*u(17,Pap,EU,2) - 463211.743564611*u(17,Pap,IE,2) - 359061.821746132*u(17,Pap,PA,2) - 364382.83273822*u(17,Pap,KI,2) - 148185.472012548*u(18,Mas,EU,2) + 61268.9932359572*u(18,Mas,IE,2)
     
      + 99106.9502989902*u(18,Mas,PA,2) + 163858.93539849*u(18,Mas,KI,2) + 166245.965687107*u(18,Kos,EU,2) + 310231.74549249*u(18,Kos,IE,2) + 347619.452061443*u(18,Kos,PA,2) + 411656.676939504*u(18,Kos,KI,2) - 593500.448931059*u(18,Kuv,EU,2)
     
      - 338135.358780849*u(18,Kuv,IE,2) - 253013.662064112*u(18,Kuv,PA,2) - 157153.777087529*u(18,Kuv,KI,2) - 575277.777777778*u(18,Kov,EU,2) - 385277.777777778*u(18,Kov,IE,2) - 300833.333333333*u(18,Kov,PA,2) - 205833.333333333*u(18,Kov,KI,2)
     
      - 310126.115407496*u(18,Hsel,EU,2) - 289374.182034503*u(18,Hsel,IE,2) - 231729.92266508*u(18,Hsel,PA,2) - 252866.151100535*u(18,Hsel,KI,2) - 314353.379206334*u(18,Lsel,EU,2) - 387271.184843058*u(18,Lsel,IE,2) - 231236.214534829*u(18,Lsel,PA,2)
     
      - 210837.496465265*u(18,Lsel,KI,2) - 599655.76792924*u(18,Pap,EU,2) - 477086.279726481*u(18,Pap,IE,2) - 363411.748232164*u(18,Pap,PA,2) - 364542.463067983*u(18,Pap,KI,2) - 150197.039505931*u(19,Mas,EU,2) + 81636.1141064602*u(19,Mas,IE,2)
     
      + 125052.445838643*u(19,Mas,PA,2) + 198642.289971571*u(19,Mas,KI,2) + 199262.782401903*u(19,Kos,EU,2) + 361677.303501662*u(19,Kos,IE,2) + 404583.950107986*u(19,Kos,PA,2) + 477367.565337669*u(19,Kos,KI,2) - 621772.913683904*u(19,Kuv,EU,2)
     
      - 341427.358101386*u(19,Kuv,IE,2) - 247978.839573879*u(19,Kuv,PA,2) - 141500.643063408*u(19,Kuv,KI,2) - 602543.252595156*u(19,Kov,EU,2) - 391505.190311419*u(19,Kov,IE,2) - 298806.228373702*u(19,Kov,PA,2) - 193287.197231834*u(19,Kov,KI,2)
     
      - 325113.622843546*u(19,Hsel,EU,2) - 299885.782272457*u(19,Hsel,IE,2) - 237223.081499108*u(19,Hsel,PA,2) - 257975.0148721*u(19,Hsel,KI,2) - 328009.237439909*u(19,Lsel,EU,2) - 406828.164765765*u(19,Lsel,IE,2) - 236779.14977849*u(19,Lsel,PA,2)
     
      - 211956.829107362*u(19,Lsel,KI,2) - 628544.423440454*u(19,Pap,EU,2) - 489187.145557656*u(19,Pap,IE,2) - 365633.270321361*u(19,Pap,PA,2) - 362041.587901701*u(19,Pap,KI,2) - 151463.582001765*u(20,Mas,EU,2) + 103865.797470836*u(20,Mas,IE,2)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 23:25:38 Page 60
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 433


     PROFIT  =E=  Profit is what we gain minus what we spend     
     
      + 153233.016370944*u(20,Mas,PA,2) + 236219.488285462*u(20,Mas,KI,2) + 234861.559368099*u(20,Kos,EU,2) + 416811.376155694*u(20,Kos,IE,2) + 465605.814263875*u(20,Kos,PA,2) + 547689.097041908*u(20,Kos,KI,2) - 649307.675507777*u(20,Kuv,EU,2)
     
      - 342875.100099493*u(20,Kuv,IE,2) - 240730.908296731*u(20,Kuv,PA,2) - 123081.123055643*u(20,Kuv,KI,2) - 629078.239138793*u(20,Kov,EU,2) - 395906.382160707*u(20,Kov,IE,2) - 294587.658592849*u(20,Kov,PA,2) - 178001.730103806*u(20,Kov,KI,2)
     
      - 339739.440809042*u(20,Hsel,EU,2) - 309674.003569304*u(20,Hsel,IE,2) - 241812.016656752*u(20,Hsel,PA,2) - 261998.810232005*u(20,Hsel,KI,2) - 341127.816005278*u(20,Lsel,EU,2) - 426026.958243001*u(20,Lsel,IE,2) - 241426.618908474*u(20,Lsel,PA,2)
     
      - 211822.50919031*u(20,Lsel,KI,2) - 656723.610819389*u(20,Pap,EU,2) - 499514.341058134*u(20,Pap,IE,2) - 365726.388013723*u(20,Pap,PA,2) - 356880.207239375*u(20,Pap,KI,2) - 151985.099500049*u(21,Mas,EU,2) + 127958.043329085*u(21,Mas,IE,2)
     
      + 183648.661895892*u(21,Mas,PA,2) + 276590.530340163*u(21,Mas,KI,2) + 273042.296585698*u(21,Kos,EU,2) + 475633.963454585*u(21,Kos,IE,2) + 530685.044529108*u(21,Kos,PA,2) + 622621.272052222*u(21,Kos,KI,2) - 676104.734402679*u(21,Kuv,EU,2)
     
      - 342478.58477517*u(21,Kuv,IE,2) - 231269.868232668*u(21,Kuv,PA,2) - 101895.217064233*u(21,Kuv,KI,2) - 654882.737408689*u(21,Kov,EU,2) - 398481.353325644*u(21,Kov,IE,2) - 288177.623990773*u(21,Kov,PA,2) - 159976.93194925*u(21,Kov,KI,2)
     
      - 354003.569303986*u(21,Hsel,EU,2) - 318738.845925045*u(21,Hsel,IE,2) - 245496.728138013*u(21,Hsel,PA,2) - 264937.53718025*u(21,Hsel,KI,2) - 353709.114902441*u(21,Lsel,EU,2) - 444867.565274767*u(21,Lsel,IE,2) - 245178.621924781*u(21,Lsel,PA,2)
     
      - 210434.536714111*u(21,Lsel,KI,2) - 684193.330066046*u(21,Pap,EU,2) - 508067.866227917*u(21,Pap,IE,2) - 363691.101309249*u(21,Pap,PA,2) - 349058.321081005*u(21,Pap,KI,2) - 151761.592000784*u(22,Mas,EU,2) + 153912.851681208*u(22,Mas,IE,2)
     
      + 216299.382413489*u(22,Mas,PA,2) + 319755.416135673*u(22,Mas,KI,2) + 313804.994054697*u(22,Kos,EU,2) + 538145.065398336*u(22,Kos,IE,2) + 599821.640903686*u(22,Kos,PA,2) + 702164.090368609*u(22,Kos,KI,2) - 702164.090368609*u(22,Kuv,EU,2)
     
      - 340237.812128418*u(22,Kuv,IE,2) - 219595.719381688*u(22,Kuv,PA,2) - 77942.9250891794*u(22,Kuv,KI,2) - 679956.747404844*u(22,Kov,EU,2) - 399230.103806228*u(22,Kov,IE,2) - 279576.124567474*u(22,Kov,PA,2) - 139212.802768166*u(22,Kov,KI,2)
     
      - 367906.008328376*u(22,Hsel,EU,2) - 327080.309339679*u(22,Hsel,IE,2) - 248277.215942891*u(22,Hsel,PA,2) - 266791.195716835*u(22,Hsel,KI,2) - 365753.134131398*u(22,Lsel,EU,2) - 463349.985861061*u(22,Lsel,IE,2) - 248035.158827411*u(22,Lsel,PA,2)
     
      - 207792.911678763*u(22,Lsel,KI,2) - 710953.581180424*u(22,Pap,EU,2) - 514847.721067003*u(22,Pap,IE,2) - 359527.41020794*u(22,Pap,PA,2) - 338575.929426591*u(22,Pap,KI,2) - 150793.05950397*u(23,Mas,EU,2) + 181730.222527203*u(23,Mas,IE,2)
     
      + 251185.177923733*u(23,Mas,PA,2) + 365714.145671993*u(23,Mas,KI,2) + 357149.651775098*u(23,Kos,EU,2) + 604344.681986945*u(23,Kos,IE,2) + 673015.60338761*u(23,Kos,PA,2) + 786317.55199107*u(23,Kos,KI,2) - 727485.743405567*u(23,Kuv,EU,2)
     
      - 336152.782159237*u(23,Kuv,IE,2) - 205708.461743794*u(23,Kuv,PA,2) - 51224.2471304811*u(23,Kuv,KI,2) - 704300.269127259*u(23,Kov,EU,2) - 398152.63360246*u(23,Kov,IE,2) - 268783.160322953*u(23,Kov,PA,2) - 115709.342560554*u(23,Kov,KI,2)
     
      - 381446.757882213*u(23,Hsel,EU,2) - 334698.393813206*u(23,Hsel,IE,2) - 250153.480071386*u(23,Hsel,PA,2) - 267559.785841761*u(23,Hsel,KI,2) - 377259.873692148*u(23,Lsel,EU,2) - 481474.220001885*u(23,Lsel,IE,2) - 249996.229616364*u(23,Lsel,PA,2)
     
      - 203897.634084268*u(23,Lsel,KI,2) - 737004.364162524*u(23,Pap,EU,2) - 519853.905575393*u(23,Pap,IE,2) - 353235.314709795*u(23,Pap,PA,2) - 325433.032276132*u(23,Pap,KI,2) - 0.19*b(Mat,2) - 0.15*b(Kut,2) - 0.12*b(Kot,2) - 0.18*b(Mak,2)
     
      - 0.15*b(Kuk,2) - 0.15*b(Kok,2) + Pr(2) + 0.7*Cap(Pap,3) + 0.1*Cap(SAW,3) + 0.3*Cap(PLY,3) + 0.5*Cap(SPULP,3) + 0.5*Cap(HPULP,3) =E= 0 ; (LHS = 0)
     
PROFIT(3)..  0.542*y(Mas,3) + 0.492*y(Kus,3) + 0.442*y(Kos,3) + 2.492*y(Kuv,3) + 2.592*y(Kov,3) + 0.82*y(Hsel,3) + 0.8*y(Lsel,3) + 1.7*y(Pap,3) + 0.19*s(Mat,3) + 0.15*s(Kut,3) + 0.12*s(Kot,3) + 0.18*s(Mak,3) + 0.15*s(Kuk,3) + 0.15*s(Kok,3)
     
      + 2000*r(2,Mat,3) + 1550*r(2,Kut,3) + 1500*r(2,Kot,3) + 1820*r(2,Mak,3) + 1530*r(2,Kuk,3) + 1520*r(2,Kok,3) + 4200*r(3,Mat,3) + 3200*r(3,Kut,3) + 3600*r(3,Kot,3) + 3680*r(3,Mak,3) + 3120*r(3,Kuk,3) + 3080*r(3,Kok,3) + 6600*r(4,Mat,3)
     
      + 4950*r(4,Kut,3) + 6300*r(4,Kot,3) + 5580*r(4,Mak,3) + 4770*r(4,Kuk,3) + 4680*r(4,Kok,3) + 9200*r(5,Mat,3) + 6800*r(5,Kut,3) + 9600*r(5,Kot,3) + 7520*r(5,Mak,3) + 6480*r(5,Kuk,3) + 6320*r(5,Kok,3) + 12000*r(6,Mat,3) + 8750*r(6,Kut,3)
     
      + 13500*r(6,Kot,3) + 9500*r(6,Mak,3) + 8250*r(6,Kuk,3) + 8000*r(6,Kok,3) + 15000*r(7,Mat,3) + 10800*r(7,Kut,3) + 18000*r(7,Kot,3) + 11520*r(7,Mak,3) + 10080*r(7,Kuk,3) + 9720*r(7,Kok,3) + 18200*r(8,Mat,3) + 12950*r(8,Kut,3) + 23100*r(8,Kot,3)
     
      + 13580*r(8,Mak,3) + 11970*r(8,Kuk,3) + 11480*r(8,Kok,3) + 21600*r(9,Mat,3) + 15200*r(9,Kut,3) + 28800*r(9,Kot,3) + 15680*r(9,Mak,3) + 13920*r(9,Kuk,3) + 13280*r(9,Kok,3) + 25200*r(10,Mat,3) + 17550*r(10,Kut,3) + 35100*r(10,Kot,3)
     
      + 17820*r(10,Mak,3) + 15930*r(10,Kuk,3) + 15120*r(10,Kok,3) + 29000*r(11,Mat,3) + 20000*r(11,Kut,3) + 42000*r(11,Kot,3) + 20000*r(11,Mak,3) + 18000*r(11,Kuk,3) + 17000*r(11,Kok,3) + 33000*r(12,Mat,3) + 22550*r(12,Kut,3) + 49500*r(12,Kot,3)
     
      + 22220*r(12,Mak,3) + 20130*r(12,Kuk,3) + 18920*r(12,Kok,3) + 37200*r(13,Mat,3) + 25200*r(13,Kut,3) + 57600*r(13,Kot,3) + 24480*r(13,Mak,3) + 22320*r(13,Kuk,3) + 20880*r(13,Kok,3) + 41600*r(14,Mat,3) + 27950*r(14,Kut,3) + 66300*r(14,Kot,3)
     
      + 26780*r(14,Mak,3) + 24570*r(14,Kuk,3) + 22880*r(14,Kok,3) + 46200*r(15,Mat,3) + 30800*r(15,Kut,3) + 75600*r(15,Kot,3) + 29120*r(15,Mak,3) + 26880*r(15,Kuk,3) + 24920*r(15,Kok,3) + 51000*r(16,Mat,3) + 33750*r(16,Kut,3) + 85500*r(16,Kot,3)
     
      + 31500*r(16,Mak,3) + 29250*r(16,Kuk,3) + 27000*r(16,Kok,3) + 56000*r(17,Mat,3) + 36800*r(17,Kut,3) + 96000*r(17,Kot,3) + 33920*r(17,Mak,3) + 31680*r(17,Kuk,3) + 29120*r(17,Kok,3) + 61200*r(18,Mat,3) + 39950*r(18,Kut,3) + 107100*r(18,Kot,3)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 23:25:38 Page 61
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 433


     PROFIT  =E=  Profit is what we gain minus what we spend     
     
      + 36380*r(18,Mak,3) + 34170*r(18,Kuk,3) + 31280*r(18,Kok,3) + 66600*r(19,Mat,3) + 43200*r(19,Kut,3) + 118800*r(19,Kot,3) + 38880*r(19,Mak,3) + 36720*r(19,Kuk,3) + 33480*r(19,Kok,3) + 72200*r(20,Mat,3) + 46550*r(20,Kut,3) + 131100*r(20,Kot,3)
     
      + 41420*r(20,Mak,3) + 39330*r(20,Kuk,3) + 35720*r(20,Kok,3) + 78000*r(21,Mat,3) + 50000*r(21,Kut,3) + 144000*r(21,Kot,3) + 44000*r(21,Mak,3) + 42000*r(21,Kuk,3) + 38000*r(21,Kok,3) + 84000*r(22,Mat,3) + 53550*r(22,Kut,3) + 157500*r(22,Kot,3)
     
      + 46620*r(22,Mak,3) + 44730*r(22,Kuk,3) + 40320*r(22,Kok,3) + 90200*r(23,Mat,3) + 57200*r(23,Kut,3) + 171600*r(23,Kot,3) + 49280*r(23,Mak,3) + 47520*r(23,Kuk,3) + 42680*r(23,Kok,3) + 96600*r(24,Mat,3) + 60950*r(24,Kut,3) + 186300*r(24,Kot,3)
     
      + 51980*r(24,Mak,3) + 50370*r(24,Kuk,3) + 45080*r(24,Kok,3) + 103200*r(25,Mat,3) + 64800*r(25,Kut,3) + 201600*r(25,Kot,3) + 54720*r(25,Mak,3) + 53280*r(25,Kuk,3) + 47520*r(25,Kok,3) + 110000*r(26,Mat,3) + 68750*r(26,Kut,3) + 217500*r(26,Kot,3)
     
      + 57500*r(26,Mak,3) + 56250*r(26,Kuk,3) + 50000*r(26,Kok,3) + 117000*r(27,Mat,3) + 72800*r(27,Kut,3) + 234000*r(27,Kot,3) + 60320*r(27,Mak,3) + 59280*r(27,Kuk,3) + 52520*r(27,Kok,3) + 124200*r(28,Mat,3) + 76950*r(28,Kut,3) + 251100*r(28,Kot,3)
     
      + 63180*r(28,Mak,3) + 62370*r(28,Kuk,3) + 55080*r(28,Kok,3) + 131600*r(29,Mat,3) + 81200*r(29,Kut,3) + 268800*r(29,Kot,3) + 66080*r(29,Mak,3) + 65520*r(29,Kuk,3) + 57680*r(29,Kok,3) + 139200*r(30,Mat,3) + 85550*r(30,Kut,3) + 287100*r(30,Kot,3)
     
      + 69020*r(30,Mak,3) + 68730*r(30,Kuk,3) + 60320*r(30,Kok,3) + 147000*r(31,Mat,3) + 90000*r(31,Kut,3) + 306000*r(31,Kot,3) + 72000*r(31,Mak,3) + 72000*r(31,Kuk,3) + 63000*r(31,Kok,3) + 155000*r(32,Mat,3) + 94550*r(32,Kut,3) + 325500*r(32,Kot,3)
     
      + 75020*r(32,Mak,3) + 75330*r(32,Kuk,3) + 65720*r(32,Kok,3) + 163200*r(33,Mat,3) + 99200*r(33,Kut,3) + 345600*r(33,Kot,3) + 78080*r(33,Mak,3) + 78720*r(33,Kuk,3) + 68480*r(33,Kok,3) + 171600*r(34,Mat,3) + 103950*r(34,Kut,3) + 366300*r(34,Kot,3)
     
      + 81180*r(34,Mak,3) + 82170*r(34,Kuk,3) + 71280*r(34,Kok,3) + 180200*r(35,Mat,3) + 108800*r(35,Kut,3) + 387600*r(35,Kot,3) + 84320*r(35,Mak,3) + 85680*r(35,Kuk,3) + 74120*r(35,Kok,3) + 189000*r(36,Mat,3) + 113750*r(36,Kut,3) + 409500*r(36,Kot,3)
     
      + 87500*r(36,Mak,3) + 89250*r(36,Kuk,3) + 77000*r(36,Kok,3) + 198000*r(37,Mat,3) + 118800*r(37,Kut,3) + 432000*r(37,Kot,3) + 90720*r(37,Mak,3) + 92880*r(37,Kuk,3) + 79920*r(37,Kok,3) + 207200*r(38,Mat,3) + 123950*r(38,Kut,3) + 455100*r(38,Kot,3)
     
      + 93980*r(38,Mak,3) + 96570*r(38,Kuk,3) + 82880*r(38,Kok,3) + 216600*r(39,Mat,3) + 129200*r(39,Kut,3) + 478800*r(39,Kot,3) + 97280*r(39,Mak,3) + 100320*r(39,Kuk,3) + 85880*r(39,Kok,3) + 226200*r(40,Mat,3) + 134550*r(40,Kut,3) + 503100*r(40,Kot,3)
     
      + 100620*r(40,Mak,3) + 104130*r(40,Kuk,3) + 88920*r(40,Kok,3) + 236000*r(41,Mat,3) + 140000*r(41,Kut,3) + 528000*r(41,Kot,3) + 104000*r(41,Mak,3) + 108000*r(41,Kuk,3) + 92000*r(41,Kok,3) + 246000*r(42,Mat,3) + 145550*r(42,Kut,3) + 553500*r(42,Kot,3)
     
      + 107420*r(42,Mak,3) + 111930*r(42,Kuk,3) + 95120*r(42,Kok,3) + 256200*r(43,Mat,3) + 151200*r(43,Kut,3) + 579600*r(43,Kot,3) + 110880*r(43,Mak,3) + 115920*r(43,Kuk,3) + 98280*r(43,Kok,3) + 266600*r(44,Mat,3) + 156950*r(44,Kut,3) + 606300*r(44,Kot,3)
     
      + 114380*r(44,Mak,3) + 119970*r(44,Kuk,3) + 101480*r(44,Kok,3) + 277200*r(45,Mat,3) + 162800*r(45,Kut,3) + 633600*r(45,Kot,3) + 117920*r(45,Mak,3) + 124080*r(45,Kuk,3) + 104720*r(45,Kok,3) + 288000*r(46,Mat,3) + 168750*r(46,Kut,3)
     
      + 661500*r(46,Kot,3) + 121500*r(46,Mak,3) + 128250*r(46,Kuk,3) + 108000*r(46,Kok,3) + 299000*r(47,Mat,3) + 174800*r(47,Kut,3) + 690000*r(47,Kot,3) + 125120*r(47,Mak,3) + 132480*r(47,Kuk,3) + 111320*r(47,Kok,3) + 310200*r(48,Mat,3)
     
      + 180950*r(48,Kut,3) + 719100*r(48,Kot,3) + 128780*r(48,Mak,3) + 136770*r(48,Kuk,3) + 114680*r(48,Kok,3) + 321600*r(49,Mat,3) + 187200*r(49,Kut,3) + 748800*r(49,Kot,3) + 132480*r(49,Mak,3) + 141120*r(49,Kuk,3) + 118080*r(49,Kok,3)
     
      + 333200*r(50,Mat,3) + 193550*r(50,Kut,3) + 779100*r(50,Kot,3) + 136220*r(50,Mak,3) + 145530*r(50,Kuk,3) + 121520*r(50,Kok,3) + 345000*r(51,Mat,3) + 200000*r(51,Kut,3) + 810000*r(51,Kot,3) + 140000*r(51,Mak,3) + 150000*r(51,Kuk,3)
     
      + 125000*r(51,Kok,3) + 357000*r(52,Mat,3) + 206550*r(52,Kut,3) + 841500*r(52,Kot,3) + 143820*r(52,Mak,3) + 154530*r(52,Kuk,3) + 128520*r(52,Kok,3) + 369200*r(53,Mat,3) + 213200*r(53,Kut,3) + 873600*r(53,Kot,3) + 147680*r(53,Mak,3)
     
      + 159120*r(53,Kuk,3) + 132080*r(53,Kok,3) + 381600*r(54,Mat,3) + 219950*r(54,Kut,3) + 906300*r(54,Kot,3) + 151580*r(54,Mak,3) + 163770*r(54,Kuk,3) + 135680*r(54,Kok,3) + 394200*r(55,Mat,3) + 226800*r(55,Kut,3) + 939600*r(55,Kot,3)
     
      + 155520*r(55,Mak,3) + 168480*r(55,Kuk,3) + 139320*r(55,Kok,3) + 407000*r(56,Mat,3) + 233750*r(56,Kut,3) + 973500*r(56,Kot,3) + 159500*r(56,Mak,3) + 173250*r(56,Kuk,3) + 143000*r(56,Kok,3) + 420000*r(57,Mat,3) + 240800*r(57,Kut,3)
     
      + 1008000*r(57,Kot,3) + 163520*r(57,Mak,3) + 178080*r(57,Kuk,3) + 146720*r(57,Kok,3) + 433200*r(58,Mat,3) + 247950*r(58,Kut,3) + 1043100*r(58,Kot,3) + 167580*r(58,Mak,3) + 182970*r(58,Kuk,3) + 150480*r(58,Kok,3) + 446600*r(59,Mat,3)
     
      + 255200*r(59,Kut,3) + 1078800*r(59,Kot,3) + 171680*r(59,Mak,3) + 187920*r(59,Kuk,3) + 154280*r(59,Kok,3) + 460200*r(60,Mat,3) + 262550*r(60,Kut,3) + 1115100*r(60,Kot,3) + 175820*r(60,Mak,3) + 192930*r(60,Kuk,3) + 158120*r(60,Kok,3)
     
      + 474000*r(61,Mat,3) + 270000*r(61,Kut,3) + 1152000*r(61,Kot,3) + 180000*r(61,Mak,3) + 198000*r(61,Kuk,3) + 162000*r(61,Kok,3) + 488000*r(62,Mat,3) + 277550*r(62,Kut,3) + 1189500*r(62,Kot,3) + 184220*r(62,Mak,3) + 203130*r(62,Kuk,3)
     
      + 165920*r(62,Kok,3) + 502200*r(63,Mat,3) + 285200*r(63,Kut,3) + 1227600*r(63,Kot,3) + 188480*r(63,Mak,3) + 208320*r(63,Kuk,3) + 169880*r(63,Kok,3) + 516600*r(64,Mat,3) + 292950*r(64,Kut,3) + 1266300*r(64,Kot,3) + 192780*r(64,Mak,3)
     
      + 213570*r(64,Kuk,3) + 173880*r(64,Kok,3) + 531200*r(65,Mat,3) + 300800*r(65,Kut,3) + 1305600*r(65,Kot,3) + 197120*r(65,Mak,3) + 218880*r(65,Kuk,3) + 177920*r(65,Kok,3) + 546000*r(66,Mat,3) + 308750*r(66,Kut,3) + 1345500*r(66,Kot,3)
     
      + 201500*r(66,Mak,3) + 224250*r(66,Kuk,3) + 182000*r(66,Kok,3) + 561000*r(67,Mat,3) + 316800*r(67,Kut,3) + 1386000*r(67,Kot,3) + 205920*r(67,Mak,3) + 229680*r(67,Kuk,3) + 186120*r(67,Kok,3) + 576200*r(68,Mat,3) + 324950*r(68,Kut,3)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 23:25:38 Page 62
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 433


     PROFIT  =E=  Profit is what we gain minus what we spend     
     
      + 1427100*r(68,Kot,3) + 210380*r(68,Mak,3) + 235170*r(68,Kuk,3) + 190280*r(68,Kok,3) + 591600*r(69,Mat,3) + 333200*r(69,Kut,3) + 1468800*r(69,Kot,3) + 214880*r(69,Mak,3) + 240720*r(69,Kuk,3) + 194480*r(69,Kok,3) + 607200*r(70,Mat,3)
     
      + 341550*r(70,Kut,3) + 1511100*r(70,Kot,3) + 219420*r(70,Mak,3) + 246330*r(70,Kuk,3) + 198720*r(70,Kok,3) + 623000*r(71,Mat,3) + 350000*r(71,Kut,3) + 1554000*r(71,Kot,3) + 224000*r(71,Mak,3) + 252000*r(71,Kuk,3) + 203000*r(71,Kok,3)
     
      + 639000*r(72,Mat,3) + 358550*r(72,Kut,3) + 1597500*r(72,Kot,3) + 228620*r(72,Mak,3) + 257730*r(72,Kuk,3) + 207320*r(72,Kok,3) + 655200*r(73,Mat,3) + 367200*r(73,Kut,3) + 1641600*r(73,Kot,3) + 233280*r(73,Mak,3) + 263520*r(73,Kuk,3)
     
      + 211680*r(73,Kok,3) + 671600*r(74,Mat,3) + 375950*r(74,Kut,3) + 1686300*r(74,Kot,3) + 237980*r(74,Mak,3) + 269370*r(74,Kuk,3) + 216080*r(74,Kok,3) + 688200*r(75,Mat,3) + 384800*r(75,Kut,3) + 1731600*r(75,Kot,3) + 242720*r(75,Mak,3)
     
      + 275280*r(75,Kuk,3) + 220520*r(75,Kok,3) + 705000*r(76,Mat,3) + 393750*r(76,Kut,3) + 1777500*r(76,Kot,3) + 247500*r(76,Mak,3) + 281250*r(76,Kuk,3) + 225000*r(76,Kok,3) + 722000*r(77,Mat,3) + 402800*r(77,Kut,3) + 1824000*r(77,Kot,3)
     
      + 252320*r(77,Mak,3) + 287280*r(77,Kuk,3) + 229520*r(77,Kok,3) + 739200*r(78,Mat,3) + 411950*r(78,Kut,3) + 1871100*r(78,Kot,3) + 257180*r(78,Mak,3) + 293370*r(78,Kuk,3) + 234080*r(78,Kok,3) + 756600*r(79,Mat,3) + 421200*r(79,Kut,3)
     
      + 1918800*r(79,Kot,3) + 262080*r(79,Mak,3) + 299520*r(79,Kuk,3) + 238680*r(79,Kok,3) + 774200*r(80,Mat,3) + 430550*r(80,Kut,3) + 1967100*r(80,Kot,3) + 267020*r(80,Mak,3) + 305730*r(80,Kuk,3) + 243320*r(80,Kok,3) + 792000*r(81,Mat,3)
     
      + 440000*r(81,Kut,3) + 2016000*r(81,Kot,3) + 272000*r(81,Mak,3) + 312000*r(81,Kuk,3) + 248000*r(81,Kok,3) + 810000*r(82,Mat,3) + 449550*r(82,Kut,3) + 2065500*r(82,Kot,3) + 277020*r(82,Mak,3) + 318330*r(82,Kuk,3) + 252720*r(82,Kok,3)
     
      + 828200*r(83,Mat,3) + 459200*r(83,Kut,3) + 2115600*r(83,Kot,3) + 282080*r(83,Mak,3) + 324720*r(83,Kuk,3) + 257480*r(83,Kok,3) + 846600*r(84,Mat,3) + 468950*r(84,Kut,3) + 2166300*r(84,Kot,3) + 287180*r(84,Mak,3) + 331170*r(84,Kuk,3)
     
      + 262280*r(84,Kok,3) + 865200*r(85,Mat,3) + 478800*r(85,Kut,3) + 2217600*r(85,Kot,3) + 292320*r(85,Mak,3) + 337680*r(85,Kuk,3) + 267120*r(85,Kok,3) + 884000*r(86,Mat,3) + 488750*r(86,Kut,3) + 2269500*r(86,Kot,3) + 297500*r(86,Mak,3)
     
      + 344250*r(86,Kuk,3) + 272000*r(86,Kok,3) + 903000*r(87,Mat,3) + 498800*r(87,Kut,3) + 2322000*r(87,Kot,3) + 302720*r(87,Mak,3) + 350880*r(87,Kuk,3) + 276920*r(87,Kok,3) + 922200*r(88,Mat,3) + 508950*r(88,Kut,3) + 2375100*r(88,Kot,3)
     
      + 307980*r(88,Mak,3) + 357570*r(88,Kuk,3) + 281880*r(88,Kok,3) + 941600*r(89,Mat,3) + 519200*r(89,Kut,3) + 2428800*r(89,Kot,3) + 313280*r(89,Mak,3) + 364320*r(89,Kuk,3) + 286880*r(89,Kok,3) + 961200*r(90,Mat,3) + 529550*r(90,Kut,3)
     
      + 2483100*r(90,Kot,3) + 318620*r(90,Mak,3) + 371130*r(90,Kuk,3) + 291920*r(90,Kok,3) + 981000*r(91,Mat,3) + 540000*r(91,Kut,3) + 2538000*r(91,Kot,3) + 324000*r(91,Mak,3) + 378000*r(91,Kuk,3) + 297000*r(91,Kok,3) + 1001000*r(92,Mat,3)
     
      + 550550*r(92,Kut,3) + 2593500*r(92,Kot,3) + 329420*r(92,Mak,3) + 384930*r(92,Kuk,3) + 302120*r(92,Kok,3) + 1021200*r(93,Mat,3) + 561200*r(93,Kut,3) + 2649600*r(93,Kot,3) + 334880*r(93,Mak,3) + 391920*r(93,Kuk,3) + 307280*r(93,Kok,3)
     
      + 1041600*r(94,Mat,3) + 571950*r(94,Kut,3) + 2706300*r(94,Kot,3) + 340380*r(94,Mak,3) + 398970*r(94,Kuk,3) + 312480*r(94,Kok,3) + 1062200*r(95,Mat,3) + 582800*r(95,Kut,3) + 2763600*r(95,Kot,3) + 345920*r(95,Mak,3) + 406080*r(95,Kuk,3)
     
      + 317720*r(95,Kok,3) + 1083000*r(96,Mat,3) + 593750*r(96,Kut,3) + 2821500*r(96,Kot,3) + 351500*r(96,Mak,3) + 413250*r(96,Kuk,3) + 323000*r(96,Kok,3) + 1104000*r(97,Mat,3) + 604800*r(97,Kut,3) + 2880000*r(97,Kot,3) + 357120*r(97,Mak,3)
     
      + 420480*r(97,Kuk,3) + 328320*r(97,Kok,3) + 1125200*r(98,Mat,3) + 615950*r(98,Kut,3) + 2939100*r(98,Kot,3) + 362780*r(98,Mak,3) + 427770*r(98,Kuk,3) + 333680*r(98,Kok,3) + 1146600*r(99,Mat,3) + 627200*r(99,Kut,3) + 2998800*r(99,Kot,3)
     
      + 368480*r(99,Mak,3) + 435120*r(99,Kuk,3) + 339080*r(99,Kok,3) + 1168200*r(100,Mat,3) + 638550*r(100,Kut,3) + 3059100*r(100,Kot,3) + 374220*r(100,Mak,3) + 442530*r(100,Kuk,3) + 344520*r(100,Kok,3) + 1190000*r(101,Mat,3) + 650000*r(101,Kut,3)
     
      + 3120000*r(101,Kot,3) + 380000*r(101,Mak,3) + 450000*r(101,Kuk,3) + 350000*r(101,Kok,3) + 1212000*r(102,Mat,3) + 661550*r(102,Kut,3) + 3181500*r(102,Kot,3) + 385820*r(102,Mak,3) + 457530*r(102,Kuk,3) + 355520*r(102,Kok,3) + 1234200*r(103,Mat,3)
     
      + 673200*r(103,Kut,3) + 3243600*r(103,Kot,3) + 391680*r(103,Mak,3) + 465120*r(103,Kuk,3) + 361080*r(103,Kok,3) + 1256600*r(104,Mat,3) + 684950*r(104,Kut,3) + 3306300*r(104,Kot,3) + 397580*r(104,Mak,3) + 472770*r(104,Kuk,3) + 366680*r(104,Kok,3)
     
      + 1279200*r(105,Mat,3) + 696800*r(105,Kut,3) + 3369600*r(105,Kot,3) + 403520*r(105,Mak,3) + 480480*r(105,Kuk,3) + 372320*r(105,Kok,3) + 1302000*r(106,Mat,3) + 708750*r(106,Kut,3) + 3433500*r(106,Kot,3) + 409500*r(106,Mak,3) + 488250*r(106,Kuk,3)
     
      + 378000*r(106,Kok,3) + 1325000*r(107,Mat,3) + 720800*r(107,Kut,3) + 3498000*r(107,Kot,3) + 415520*r(107,Mak,3) + 496080*r(107,Kuk,3) + 383720*r(107,Kok,3) - 13808.5610490776*u(2,Mas,EU,3) - 10634.038638771*u(2,Mas,IE,3)
     
      - 11345.2988711816*u(2,Mas,PA,3) - 11969.8306275026*u(2,Mas,KI,3) - 10197.8391910353*u(2,Kos,EU,3) - 10563.6686584891*u(2,Kos,IE,3) - 11269.6266330764*u(2,Kos,PA,3) - 11890.5524808803*u(2,Kos,KI,3) - 38204.8495316444*u(2,Kuv,EU,3)
     
      - 32438.5234020199*u(2,Kuv,IE,3) - 30516.4146921451*u(2,Kuv,PA,3) - 29385.2960836409*u(2,Kuv,KI,3) - 36967.0492790975*u(2,Kov,EU,3) - 34731.8773307696*u(2,Kov,IE,3) - 32830.2135812373*u(2,Kov,PA,3) - 31712.6276070733*u(2,Kov,KI,3)
     
      - 19593.7632375845*u(2,Hsel,EU,3) - 21148.264131326*u(2,Hsel,IE,3) - 19348.477100505*u(2,Hsel,PA,3) - 21843.7525325036*u(2,Hsel,KI,3) - 21026.7623316072*u(2,Lsel,EU,3) - 23659.0267116612*u(2,Lsel,IE,3) - 19165.004803472*u(2,Lsel,PA,3)
     
      - 20706.0185073096*u(2,Lsel,KI,3) - 37597.6126744314*u(2,Pap,EU,3) - 38810.7135222939*u(2,Pap,IE,3) - 35283.4445718716*u(2,Pap,PA,3) - 39259.9686241256*u(2,Pap,KI,3) - 26923.2942894387*u(3,Mas,EU,3) - 19533.5077557504*u(3,Mas,IE,3)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 23:25:38 Page 63
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 433


     PROFIT  =E=  Profit is what we gain minus what we spend     
     
      - 20609.1143162133*u(3,Mas,PA,3) - 21337.8069723179*u(3,Mas,KI,3) - 18014.778832136*u(3,Kos,EU,3) - 17726.0522456431*u(3,Kos,IE,3) - 18797.8396876842*u(3,Kos,PA,3) - 19529.4986225917*u(3,Kos,KI,3) - 75729.4420490219*u(3,Kuv,EU,3)
     
      - 63176.4042683723*u(3,Kuv,IE,3) - 58992.0583414891*u(3,Kuv,PA,3) - 56219.6283637805*u(3,Kuv,KI,3) - 73267.082160604*u(3,Kov,EU,3) - 67796.2136675614*u(3,Kov,IE,3) - 63659.3779697011*u(3,Kov,PA,3) - 60923.9437231798*u(3,Kov,KI,3)
     
      - 38860.4782923963*u(3,Hsel,EU,3) - 41642.4318971067*u(3,Hsel,IE,3) - 37879.3337440782*u(3,Hsel,PA,3) - 42706.3605166891*u(3,Hsel,KI,3) - 41572.408926768*u(3,Lsel,EU,3) - 46997.3095990248*u(3,Lsel,IE,3) - 37528.1500462*u(3,Lsel,PA,3)
     
      - 40289.4336295777*u(3,Lsel,KI,3) - 74566.0440604644*u(3,Pap,EU,3) - 76048.473823592*u(3,Pap,IE,3) - 68679.3452785482*u(3,Pap,PA,3) - 76160.5074167574*u(3,Pap,KI,3) - 39344.1997210831*u(4,Mas,EU,3) - 26698.4073509384*u(4,Mas,IE,3)
     
      - 27791.4463350953*u(4,Mas,PA,3) - 28103.9290344461*u(4,Mas,KI,3) - 23450.8189233022*u(4,Kos,EU,3) - 21487.150761462*u(4,Kos,IE,3) - 22584.6391638234*u(4,Kos,PA,3) - 22916.8384251343*u(4,Kos,KI,3) - 112573.777552132*u(4,Kuv,EU,3)
     
      - 92213.6425990571*u(4,Kuv,IE,3) - 85426.9309480321*u(4,Kuv,PA,3) - 80502.9968404188*u(4,Kuv,KI,3) - 108900.098644519*u(4,Kov,EU,3) - 99193.0090103753*u(4,Kov,IE,3) - 92487.4931653915*u(4,Kov,PA,3) - 87633.9483483196*u(4,Kov,KI,3)
     
      - 57800.1451644354*u(4,Hsel,EU,3) - 61482.5032973419*u(4,Hsel,IE,3) - 55592.5699307196*u(4,Hsel,PA,3) - 62587.8239525565*u(4,Hsel,KI,3) - 61636.9397854824*u(4,Lsel,EU,3) - 70014.8486620909*u(4,Lsel,IE,3) - 55089.4357281841*u(4,Lsel,PA,3)
     
      - 58750.2453668044*u(4,Lsel,KI,3) - 110905.294158099*u(4,Pap,EU,3) - 111713.280903894*u(4,Pap,IE,3) - 100187.70212003*u(4,Pap,PA,3) - 110701.616377895*u(4,Pap,KI,3) - 51071.277344011*u(5,Mas,EU,3) - 32128.7374243349*u(5,Mas,IE,3)
     
      - 32892.2949278275*u(5,Mas,PA,3) - 32268.196813887*u(5,Mas,KI,3) - 26505.9594645339*u(5,Kos,EU,3) - 21846.9642059459*u(5,Kos,IE,3) - 22630.025061494*u(5,Kos,PA,3) - 22052.5718885081*u(5,Kos,KI,3) - 148737.856040976*u(5,Kuv,EU,3)
     
      - 119550.238394074*u(5,Kuv,IE,3) - 109821.032511774*u(5,Kuv,PA,3) - 102235.401513556*u(5,Kuv,KI,3) - 143866.098730843*u(5,Kov,EU,3) - 128922.263359211*u(5,Kov,IE,3) - 119314.559168309*u(5,Kov,PA,3) - 111842.641482493*u(5,Kov,KI,3)
     
      - 76412.7638537017*u(5,Hsel,EU,3) - 80668.4783320316*u(5,Hsel,IE,3) - 72488.1856604292*u(5,Hsel,PA,3) - 81488.1428401057*u(5,Hsel,KI,3) - 81220.3549077506*u(5,Lsel,EU,3) - 92711.6439008594*u(5,Lsel,IE,3) - 71848.8618494244*u(5,Lsel,PA,3)
     
      - 76088.4537189895*u(5,Lsel,KI,3) - 146615.362967335*u(5,Pap,EU,3) - 145805.1347632*u(5,Pap,IE,3) - 129808.515096316*u(5,Pap,PA,3) - 142883.295507539*u(5,Pap,KI,3) - 62104.5271582223*u(6,Mas,EU,3) - 35824.49797594*u(6,Mas,IE,3)
     
      - 35911.66009441*u(6,Mas,PA,3) - 33830.6103106406*u(6,Mas,KI,3) - 27180.200455831*u(6,Kos,EU,3) - 18805.4925790947*u(6,Kos,IE,3) - 18933.997380696*u(6,Kos,PA,3) - 16936.699012713*u(6,Kos,KI,3) - 184221.677515552*u(6,Kuv,EU,3)
     
      - 145186.191653424*u(6,Kuv,IE,3) - 132174.363032715*u(6,Kuv,PA,3) - 121416.842383191*u(6,Kuv,KI,3) - 178165.082419576*u(6,Kov,EU,3) - 156983.97671407*u(6,Kov,IE,3) - 144140.575978452*u(6,Kov,PA,3) - 133550.023125699*u(6,Kov,KI,3)
     
      - 94698.3343601954*u(6,Hsel,EU,3) - 99200.357001176*u(6,Hsel,IE,3) - 88566.180933207*u(6,Hsel,PA,3) - 99407.3171793368*u(6,Hsel,KI,3) - 100322.654293572*u(6,Lsel,EU,3) - 115087.69531533*u(6,Lsel,IE,3) - 87806.4284099207*u(6,Lsel,PA,3)
     
      - 92304.0586861332*u(6,Lsel,KI,3) - 181696.250488173*u(6,Pap,EU,3) - 178324.03540151*u(6,Pap,IE,3) - 157541.784207407*u(6,Pap,PA,3) - 172705.544805689*u(6,Pap,KI,3) - 72443.9491637169*u(7,Mas,EU,3) - 37785.6890057535*u(7,Mas,IE,3)
     
      - 36849.5418348426*u(7,Mas,PA,3) - 32791.1695247071*u(7,Mas,KI,3) - 25473.5418971935*u(7,Kos,EU,3) - 12362.7358809084*u(7,Kos,IE,3) - 11496.5561214295*u(7,Kos,PA,3) - 7569.21979774905*u(7,Kos,KI,3) - 219025.241975861*u(7,Kuv,EU,3)
     
      - 169121.502377106*u(7,Kuv,IE,3) - 152486.922510855*u(7,Kuv,PA,3) - 138047.319449326*u(7,Kuv,KI,3) - 211797.049710718*u(7,Kov,EU,3) - 183378.14907495*u(7,Kov,IE,3) - 166965.543595822*u(7,Kov,PA,3) - 152756.093277938*u(7,Kov,KI,3)
     
      - 112656.856683916*u(7,Hsel,EU,3) - 117078.139304775*u(7,Hsel,IE,3) - 103826.555749053*u(7,Hsel,PA,3) - 116345.34697025*u(7,Hsel,KI,3) - 118943.837942948*u(7,Lsel,EU,3) - 137143.002905504*u(7,Lsel,IE,3) - 102962.135409673*u(7,Lsel,PA,3)
     
      - 107397.060268235*u(7,Lsel,KI,3) - 216147.956720613*u(7,Pap,EU,3) - 209269.982818825*u(7,Pap,IE,3) - 183387.509453303*u(7,Pap,PA,3) - 200168.364272346*u(7,Pap,KI,3) - 82089.543360495*u(8,Mas,EU,3) - 38012.3105137755*u(8,Mas,IE,3)
     
      - 35705.9401491255*u(8,Mas,PA,3) - 29149.8744560863*u(8,Mas,KI,3) - 21385.9837886215*u(8,Kos,EU,3) - 2518.694111387*u(8,Kos,IE,3) - 317.701283694366*u(8,Kos,PA,3) + 6049.86575638372*u(8,Kos,KI,3) - 253148.549421904*u(8,Kuv,EU,3)
     
      - 191356.170565121*u(8,Kuv,IE,3) - 170758.710946194*u(8,Kuv,PA,3) - 152126.832711959*u(8,Kuv,KI,3) - 244762.000604269*u(8,Kov,EU,3) - 208104.780441852*u(8,Kov,IE,3) - 187789.462020419*u(8,Kov,PA,3) - 169460.851939211*u(8,Kov,KI,3)
     
      - 130288.330824865*u(8,Hsel,EU,3) - 134301.825242828*u(8,Hsel,IE,3) - 118269.310107967*u(8,Hsel,PA,3) - 132302.232212845*u(8,Hsel,KI,3) - 137083.905855877*u(8,Lsel,EU,3) - 158877.56667138*u(8,Lsel,IE,3) - 117315.982848682*u(8,Lsel,PA,3)
     
      - 121367.458465296*u(8,Lsel,KI,3) - 249970.481664654*u(8,Pap,EU,3) - 238642.977015143*u(8,Pap,IE,3) - 207345.690834004*u(8,Pap,PA,3) - 225271.753907508*u(8,Pap,KI,3) - 91041.3097485565*u(9,Mas,EU,3) - 36504.3625000061*u(9,Mas,IE,3)
     
      - 32480.8550372586*u(9,Mas,PA,3) - 22906.7251047783*u(9,Mas,KI,3) - 14917.5261301149*u(9,Kos,EU,3) + 10726.6327294695*u(9,Kos,IE,3) + 14602.5671325093*u(9,Kos,PA,3) + 23920.5576496853*u(9,Kos,KI,3) - 286591.599853679*u(9,Kuv,EU,3)
     
      - 211890.196217468*u(9,Kuv,IE,3) - 186989.728338731*u(9,Kuv,PA,3) - 163655.382171091*u(9,Kuv,KI,3) - 277059.935100228*u(9,Kov,EU,3) - 231163.870814777*u(9,Kov,IE,3) - 206612.331252242*u(9,Kov,PA,3) - 183664.299109516*u(9,Kov,KI,3)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 23:25:38 Page 64
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 433


     PROFIT  =E=  Profit is what we gain minus what we spend     
     
      - 147592.75678304*u(9,Hsel,EU,3) - 150871.414815336*u(9,Hsel,IE,3) - 131894.44400995*u(9,Hsel,PA,3) - 147277.972907121*u(9,Hsel,KI,3) - 154742.85803236*u(9,Lsel,EU,3) - 180291.386612958*u(9,Lsel,IE,3) - 130867.970726946*u(9,Lsel,PA,3)
     
      - 134215.253277316*u(9,Lsel,KI,3) - 283163.825320297*u(9,Pap,EU,3) - 266443.017990466*u(9,Pap,IE,3) - 229416.32834951*u(9,Pap,PA,3) - 248015.713711176*u(9,Pap,KI,3) - 99299.2483279014*u(10,Mas,EU,3) - 33261.8449644452*u(10,Mas,IE,3)
     
      - 27174.2864992419*u(10,Mas,PA,3) - 14061.7214707831*u(10,Mas,KI,3) - 6068.16892167379*u(10,Kos,EU,3) + 27373.244641661*u(10,Kos,IE,3) + 33264.2491271816*u(10,Kos,PA,3) + 46042.8558821558*u(10,Kos,KI,3) - 319354.393271187*u(10,Kuv,EU,3)
     
      - 230723.579334148*u(10,Kuv,IE,3) - 201179.974688468*u(10,Kuv,PA,3) - 172632.967826721*u(10,Kuv,KI,3) - 308690.853198597*u(10,Kov,EU,3) - 252555.420193724*u(10,Kov,IE,3) - 223434.151291292*u(10,Kov,PA,3) - 195366.434788856*u(10,Kov,KI,3)
     
      - 164570.134558443*u(10,Hsel,EU,3) - 166786.908022299*u(10,Hsel,IE,3) - 144701.957455001*u(10,Hsel,PA,3) - 161272.56905308*u(10,Hsel,KI,3) - 171920.694472396*u(10,Lsel,EU,3) - 201384.462730238*u(10,Lsel,IE,3) - 143618.099044467*u(10,Lsel,PA,3)
     
      - 145940.444704293*u(10,Lsel,KI,3) - 315727.987687541*u(10,Pap,EU,3) - 292670.105744792*u(10,Pap,IE,3) - 249599.421999821*u(10,Pap,PA,3) - 268400.243683351*u(10,Pap,KI,3) - 106863.35909853*u(11,Mas,EU,3) - 28284.7579070928*u(11,Mas,IE,3)
     
      - 19786.2345350754*u(11,Mas,PA,3) - 2614.86355410065*u(11,Mas,KI,3) + 5162.08783670187*u(11,Kos,EU,3) + 47421.1416251876*u(11,Kos,IE,3) + 55667.3447003225*u(11,Kos,PA,3) + 72416.7604537951*u(11,Kos,KI,3) - 351436.929674429*u(11,Kuv,EU,3)
     
      - 247856.31991516*u(11,Kuv,IE,3) - 213329.449995404*u(11,Kuv,PA,3) - 179059.58967885*u(11,Kuv,KI,3) - 339654.754899374*u(11,Kov,EU,3) - 272279.428578693*u(11,Kov,IE,3) - 238254.922137568*u(11,Kov,PA,3) - 204567.258977228*u(11,Kov,KI,3)
     
      - 181220.464151073*u(11,Hsel,EU,3) - 182048.304863716*u(11,Hsel,IE,3) - 156691.85044312*u(11,Hsel,PA,3) - 174286.02065072*u(11,Hsel,KI,3) - 188617.415175986*u(11,Lsel,EU,3) - 222156.795023222*u(11,Lsel,IE,3) - 155566.367801244*u(11,Lsel,PA,3)
     
      - 156543.03274623*u(11,Lsel,KI,3) - 347662.968766387*u(11,Pap,EU,3) - 317324.240278123*u(11,Pap,IE,3) - 267894.971784936*u(11,Pap,PA,3) - 286425.343824032*u(11,Pap,KI,3) - 113733.642060441*u(12,Mas,EU,3) - 21573.1013279489*u(12,Mas,IE,3)
     
      - 10316.6991447592*u(12,Mas,PA,3) + 11433.848645269*u(12,Mas,KI,3) + 18773.2441450121*u(12,Kos,EU,3) + 70870.3236800492*u(12,Kos,IE,3) + 81811.8538519319*u(12,Kos,PA,3) + 103042.271364603*u(12,Kos,KI,3) - 382839.209063403*u(12,Kuv,EU,3)
     
      - 263288.417960504*u(12,Kuv,IE,3) - 223438.154259538*u(12,Kuv,PA,3) - 182935.247727478*u(12,Kuv,KI,3) - 369951.64020256*u(12,Kov,EU,3) - 290335.895969684*u(12,Kov,IE,3) - 251074.643791071*u(12,Kov,PA,3) - 211266.771674633*u(12,Kov,KI,3)
     
      - 197543.74556093*u(12,Hsel,EU,3) - 196655.605339588*u(12,Hsel,IE,3) - 167864.122974307*u(12,Hsel,PA,3) - 186318.327700043*u(12,Hsel,KI,3) - 204833.02014313*u(12,Lsel,EU,3) - 242608.383491907*u(12,Lsel,IE,3) - 166712.776997276*u(12,Lsel,PA,3)
     
      - 166023.017403125*u(12,Lsel,KI,3) - 378968.768556835*u(12,Pap,EU,3) - 340405.421590458*u(12,Pap,IE,3) - 284302.977704857*u(12,Pap,PA,3) - 302091.014133218*u(12,Pap,KI,3) - 119910.097213637*u(13,Mas,EU,3) - 13126.8752270136*u(13,Mas,IE,3)
     
      + 1234.31967170677*u(13,Mas,PA,3) + 28084.4151273259*u(13,Mas,KI,3) + 34765.3000032569*u(13,Kos,EU,3) + 97720.7908062459*u(13,Kos,IE,3) + 111697.77658201*u(13,Kos,PA,3) + 137919.38861458*u(13,Kos,KI,3) - 413561.23143811*u(13,Kuv,EU,3)
     
      - 277019.873470182*u(13,Kuv,IE,3) - 231506.087480872*u(13,Kuv,PA,3) - 184259.941972605*u(13,Kuv,KI,3) - 399581.509108155*u(13,Kov,EU,3) - 306724.822366697*u(13,Kov,IE,3) - 261893.316251801*u(13,Kov,PA,3) - 215464.972881072*u(13,Kov,KI,3)
     
      - 213539.978788015*u(13,Hsel,EU,3) - 210608.809449915*u(13,Hsel,IE,3) - 178218.775048562*u(13,Hsel,PA,3) - 197369.490201047*u(13,Hsel,KI,3) - 220567.509373827*u(13,Lsel,EU,3) - 262739.228136295*u(13,Lsel,IE,3) - 177057.326632565*u(13,Lsel,PA,3)
     
      - 174380.398674978*u(13,Lsel,KI,3) - 409645.387058884*u(13,Pap,EU,3) - 361913.649681796*u(13,Pap,IE,3) - 298823.439759582*u(13,Pap,PA,3) - 315397.254610911*u(13,Pap,KI,3) - 125392.724558115*u(14,Mas,EU,3) - 2946.07960428674*u(14,Mas,IE,3)
     
      + 14866.8219143226*u(14,Mas,PA,3) + 47336.83589207*u(14,Mas,KI,3) + 53138.2554114362*u(14,Kos,EU,3) + 127972.543003778*u(14,Kos,IE,3) + 145325.112890557*u(14,Kos,PA,3) + 177048.112203726*u(14,Kos,KI,3) - 443602.996798551*u(14,Kuv,EU,3)
     
      - 289050.686444191*u(14,Kuv,IE,3) - 237533.249659404*u(14,Kuv,PA,3) - 183033.67241423*u(14,Kuv,KI,3) - 428544.361616159*u(14,Kov,EU,3) - 321446.207769732*u(14,Kov,IE,3) - 270710.939519757*u(14,Kov,PA,3) - 217161.862596544*u(14,Kov,KI,3)
     
      - 229209.163832327*u(14,Hsel,EU,3) - 223907.917194695*u(14,Hsel,IE,3) - 187755.806665886*u(14,Hsel,PA,3) - 207439.508153733*u(14,Hsel,KI,3) - 235820.882868078*u(14,Lsel,EU,3) - 282549.328956386*u(14,Lsel,IE,3) - 186600.016707111*u(14,Lsel,PA,3)
     
      - 181615.17656179*u(14,Lsel,KI,3) - 439692.824272535*u(14,Pap,EU,3) - 381848.924552139*u(14,Pap,IE,3) - 311456.357949113*u(14,Pap,PA,3) - 326344.06525711*u(14,Pap,KI,3) - 130181.524093877*u(15,Mas,EU,3) + 8969.2855402316*u(15,Mas,IE,3)
     
      + 30580.8075830882*u(15,Mas,PA,3) + 69191.1109395013*u(15,Mas,KI,3) + 73892.1103695501*u(15,Kos,EU,3) + 161625.580272645*u(15,Kos,IE,3) + 182693.862777572*u(15,Kos,PA,3) + 220428.442132041*u(15,Kos,KI,3) - 472964.505144724*u(15,Kuv,EU,3)
     
      - 299380.856882533*u(15,Kuv,IE,3) - 241519.640795136*u(15,Kuv,PA,3) - 179256.439052354*u(15,Kuv,KI,3) - 456840.197726572*u(15,Kov,EU,3) - 334500.05217879*u(15,Kov,IE,3) - 277527.51359494*u(15,Kov,PA,3) - 216357.440821049*u(15,Kov,KI,3)
     
      - 244551.300693866*u(15,Hsel,EU,3) - 236552.928573931*u(15,Hsel,IE,3) - 196475.217826278*u(15,Hsel,PA,3) - 216528.381558101*u(15,Hsel,KI,3) - 250593.140625883*u(15,Lsel,EU,3) - 302038.685952178*u(15,Lsel,IE,3) - 195340.847220912*u(15,Lsel,PA,3)
     
      - 187727.35106356*u(15,Lsel,KI,3) - 469111.080197787*u(15,Pap,EU,3) - 400211.246201486*u(15,Pap,IE,3) - 322201.732273448*u(15,Pap,PA,3) - 334931.446071815*u(15,Pap,KI,3) - 134276.495820922*u(16,Mas,EU,3) + 22619.2202065414*u(16,Mas,IE,3)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 23:25:38 Page 65
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 433


     PROFIT  =E=  Profit is what we gain minus what we spend     
     
      + 48376.2766780036*u(16,Mas,PA,3) + 93647.2402696199*u(16,Mas,KI,3) + 97026.8648775985*u(16,Kos,EU,3) + 198679.902612847*u(16,Kos,IE,3) + 223804.026243056*u(16,Kos,PA,3) + 268060.378399524*u(16,Kos,KI,3) - 501645.75647663*u(16,Kuv,EU,3)
     
      - 308010.384785207*u(16,Kuv,IE,3) - 243465.260888066*u(16,Kuv,PA,3) - 172928.241886976*u(16,Kuv,KI,3) - 484469.017439393*u(16,Kov,EU,3) - 345886.355593869*u(16,Kov,IE,3) - 282343.038477349*u(16,Kov,PA,3) - 213051.707554587*u(16,Kov,KI,3)
     
      - 259566.389372633*u(16,Hsel,EU,3) - 248543.843587621*u(16,Hsel,IE,3) - 204377.008529738*u(16,Hsel,PA,3) - 224636.11041415*u(16,Hsel,KI,3) - 264884.282647241*u(16,Lsel,EU,3) - 321207.299123674*u(16,Lsel,IE,3) - 203279.818173969*u(16,Lsel,PA,3)
     
      - 192716.922180289*u(16,Lsel,KI,3) - 497900.154834642*u(16,Pap,EU,3) - 417000.614629837*u(16,Pap,IE,3) - 331059.562732588*u(16,Pap,PA,3) - 341159.397055027*u(16,Pap,KI,3) - 137677.639739251*u(17,Mas,EU,3) + 38003.7243946427*u(17,Mas,IE,3)
     
      + 68253.2291990687*u(17,Mas,PA,3) + 120705.223882426*u(17,Mas,KI,3) + 122542.518935582*u(17,Kos,EU,3) + 239135.510024384*u(17,Kos,IE,3) + 268655.603287008*u(17,Kos,PA,3) + 319943.921006177*u(17,Kos,KI,3) - 529646.750794269*u(17,Kuv,EU,3)
     
      - 314939.270152214*u(17,Kuv,IE,3) - 243370.109938196*u(17,Kuv,PA,3) - 164049.080918098*u(17,Kuv,KI,3) - 511430.820754624*u(17,Kov,EU,3) - 355605.118014971*u(17,Kov,IE,3) - 285157.514166985*u(17,Kov,PA,3) - 207244.662797159*u(17,Kov,KI,3)
     
      - 274254.429868627*u(17,Hsel,EU,3) - 259880.662235766*u(17,Hsel,IE,3) - 211461.178776266*u(17,Hsel,PA,3) - 231762.694721882*u(17,Hsel,KI,3) - 278694.308932153*u(17,Lsel,EU,3) - 340055.168470871*u(17,Lsel,IE,3) - 210416.929566282*u(17,Lsel,PA,3)
     
      - 196583.889911977*u(17,Lsel,KI,3) - 526060.048183097*u(17,Pap,EU,3) - 432217.029837192*u(17,Pap,IE,3) - 338029.849326533*u(17,Pap,PA,3) - 345027.918206744*u(17,Pap,KI,3) - 140384.955848863*u(18,Mas,EU,3) + 55122.7981045354*u(18,Mas,IE,3)
     
      + 90211.6651462836*u(18,Mas,PA,3) + 150365.061777919*u(18,Mas,KI,3) + 150439.072543499*u(18,Kos,EU,3) + 282992.402507256*u(18,Kos,IE,3) + 317248.593909429*u(18,Kos,PA,3) + 376079.069951998*u(18,Kos,KI,3) - 556967.488097642*u(18,Kuv,EU,3)
     
      - 320167.512983553*u(18,Kuv,IE,3) - 241234.187945524*u(18,Kuv,PA,3) - 152618.956145718*u(18,Kuv,KI,3) - 537725.607672263*u(18,Kov,EU,3) - 363656.339442095*u(18,Kov,IE,3) - 285970.940663847*u(18,Kov,PA,3) - 198936.306548763*u(18,Kov,KI,3)
     
      - 288615.422181848*u(18,Hsel,EU,3) - 270563.384518365*u(18,Hsel,IE,3) - 217727.728565862*u(18,Hsel,PA,3) - 237908.134481295*u(18,Hsel,KI,3) - 292023.219480619*u(18,Lsel,EU,3) - 358582.293993772*u(18,Lsel,IE,3) - 216752.181397852*u(18,Lsel,PA,3)
     
      - 199328.254258623*u(18,Lsel,KI,3) - 553590.760243155*u(18,Pap,EU,3) - 445860.491823551*u(18,Pap,IE,3) - 343112.592055283*u(18,Pap,PA,3) - 346537.009526967*u(18,Pap,KI,3) - 142398.444149759*u(19,Mas,EU,3) + 73976.4413362197*u(19,Mas,IE,3)
     
      + 114251.584519648*u(19,Mas,PA,3) + 182626.753956099*u(19,Mas,KI,3) + 180716.525701351*u(19,Kos,EU,3) + 330250.580061463*u(19,Kos,IE,3) + 369582.998110318*u(19,Kos,PA,3) + 436465.825236988*u(19,Kos,KI,3) - 583607.968386747*u(19,Kuv,EU,3)
     
      - 323695.113279225*u(19,Kuv,IE,3) - 237057.494910051*u(19,Kuv,PA,3) - 138637.867569836*u(19,Kuv,KI,3) - 563353.378192311*u(19,Kov,EU,3) - 370040.019875241*u(19,Kov,IE,3) - 284783.317967936*u(19,Kov,PA,3) - 188126.638809401*u(19,Kov,KI,3)
     
      - 302649.366312296*u(19,Hsel,EU,3) - 280592.010435419*u(19,Hsel,IE,3) - 223176.657898527*u(19,Hsel,PA,3) - 243072.429692391*u(19,Hsel,KI,3) - 304871.014292638*u(19,Lsel,EU,3) - 376788.675692374*u(19,Lsel,IE,3) - 222285.573668677*u(19,Lsel,PA,3)
     
      - 200950.015220227*u(19,Lsel,KI,3) - 580492.291014814*u(19,Pap,EU,3) - 457931.000588915*u(19,Pap,IE,3) - 346307.790918838*u(19,Pap,PA,3) - 345686.671015697*u(19,Pap,KI,3) - 143718.104641938*u(20,Mas,EU,3) + 94564.6540896955*u(20,Mas,IE,3)
     
      + 140372.987319163*u(20,Mas,PA,3) + 217490.300416966*u(20,Mas,KI,3) + 213374.878409138*u(20,Kos,EU,3) + 380910.042687005*u(20,Kos,IE,3) + 425658.815889677*u(20,Kos,PA,3) + 501104.186861147*u(20,Kos,KI,3) - 609568.191661585*u(20,Kuv,EU,3)
     
      - 325522.071039229*u(20,Kuv,IE,3) - 230840.030831778*u(20,Kuv,PA,3) - 122105.815190454*u(20,Kuv,KI,3) - 588314.132314768*u(20,Kov,EU,3) - 374756.159314409*u(20,Kov,IE,3) - 281594.646079252*u(20,Kov,PA,3) - 174815.659579072*u(20,Kov,KI,3)
     
      - 316356.262259972*u(20,Hsel,EU,3) - 289966.539986927*u(20,Hsel,IE,3) - 227807.96677426*u(20,Hsel,PA,3) - 247255.580355168*u(20,Hsel,KI,3) - 317237.693368211*u(20,Lsel,EU,3) - 394674.313566679*u(20,Lsel,IE,3) - 227017.106378759*u(20,Lsel,PA,3)
     
      - 201449.17279679*u(20,Lsel,KI,3) - 606764.640498075*u(20,Pap,EU,3) - 468428.556133282*u(20,Pap,IE,3) - 347615.445917198*u(20,Pap,PA,3) - 342476.902672933*u(20,Pap,KI,3) - 144343.9373254*u(21,Mas,EU,3) + 116887.436364963*u(21,Mas,IE,3)
     
      + 168575.873544827*u(21,Mas,PA,3) + 254955.701160521*u(21,Mas,KI,3) + 248414.130666859*u(21,Kos,EU,3) + 434970.790383883*u(21,Kos,IE,3) + 485476.047247503*u(21,Kos,PA,3) + 569994.154824475*u(21,Kos,KI,3) - 634848.157922156*u(21,Kuv,EU,3)
     
      - 325648.386263566*u(21,Kuv,IE,3) - 222581.795710703*u(21,Kuv,PA,3) - 103022.79900757*u(21,Kuv,KI,3) - 612607.870039634*u(21,Kov,EU,3) - 377804.757759599*u(21,Kov,IE,3) - 276404.924997794*u(21,Kov,PA,3) - 159003.368857777*u(21,Kov,KI,3)
     
      - 329736.110024875*u(21,Hsel,EU,3) - 298686.97317289*u(21,Hsel,IE,3) - 231621.655193061*u(21,Hsel,PA,3) - 250457.586469627*u(21,Hsel,KI,3) - 329123.256707338*u(21,Lsel,EU,3) - 412239.207616687*u(21,Lsel,IE,3) - 230946.779528096*u(21,Lsel,PA,3)
     
      - 200825.726988312*u(21,Lsel,KI,3) - 632407.808692937*u(21,Pap,EU,3) - 477353.158456653*u(21,Pap,IE,3) - 347035.557050362*u(21,Pap,PA,3) - 336907.704498675*u(21,Pap,KI,3) - 144275.942200146*u(22,Mas,EU,3) + 140944.788162021*u(22,Mas,IE,3)
     
      + 198860.243196641*u(22,Mas,PA,3) + 295022.956186763*u(22,Mas,KI,3) + 285834.282474515*u(22,Kos,EU,3) + 492432.823152095*u(22,Kos,IE,3) + 549034.692183799*u(22,Kos,PA,3) + 643135.729126971*u(22,Kos,KI,3) - 659447.86716846*u(22,Kuv,EU,3)
     
      - 324074.058952235*u(22,Kuv,IE,3) - 212282.789546827*u(22,Kuv,PA,3) - 81388.8190211845*u(22,Kuv,KI,3) - 636234.591366908*u(22,Kov,EU,3) - 379185.815210812*u(22,Kov,IE,3) - 269214.154723563*u(22,Kov,PA,3) - 140689.766645514*u(22,Kov,KI,3)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 23:25:38 Page 66
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 433


     PROFIT  =E=  Profit is what we gain minus what we spend     
     
      - 342788.909607005*u(22,Hsel,EU,3) - 306753.309993308*u(22,Hsel,IE,3) - 234617.723154931*u(22,Hsel,PA,3) - 252678.448035768*u(22,Hsel,KI,3) - 340527.704310018*u(22,Lsel,EU,3) - 429483.357842397*u(22,Lsel,IE,3) - 234074.59311669*u(22,Lsel,PA,3)
     
      - 199079.677794792*u(22,Lsel,KI,3) - 657421.795599401*u(22,Pap,EU,3) - 484704.807559029*u(22,Pap,IE,3) - 344568.124318332*u(22,Pap,PA,3) - 328979.076492923*u(22,Pap,KI,3) - 143514.119266175*u(23,Mas,EU,3) + 166736.709480872*u(23,Mas,IE,3)
     
      + 231226.096274605*u(23,Mas,PA,3) + 337692.065495692*u(23,Mas,KI,3) + 325635.333832105*u(23,Kos,EU,3) + 553296.140991643*u(23,Kos,IE,3) + 616334.750698562*u(23,Kos,PA,3) + 720528.909768637*u(23,Kos,KI,3) - 683367.319400497*u(23,Kuv,EU,3)
     
      - 320799.089105237*u(23,Kuv,IE,3) - 199943.01234015*u(23,Kuv,PA,3) - 57203.8752312979*u(23,Kuv,KI,3) - 659194.296296592*u(23,Kov,EU,3) - 378899.331668046*u(23,Kov,IE,3) - 260022.335256558*u(23,Kov,PA,3) - 119874.852942285*u(23,Kov,KI,3)
     
      - 355514.661006363*u(23,Hsel,EU,3) - 314165.55044818*u(23,Hsel,IE,3) - 236796.170659868*u(23,Hsel,PA,3) - 253918.165053591*u(23,Hsel,KI,3) - 351451.036176252*u(23,Lsel,EU,3) - 446406.764243809*u(23,Lsel,IE,3) - 236400.54714454*u(23,Lsel,PA,3)
     
      - 196211.025216231*u(23,Lsel,KI,3) - 681806.601217467*u(23,Pap,EU,3) - 490483.503440408*u(23,Pap,IE,3) - 340213.147721106*u(23,Pap,PA,3) - 318691.018655677*u(23,Pap,KI,3) - 0.19*b(Mat,3) - 0.15*b(Kut,3) - 0.12*b(Kot,3) - 0.18*b(Mak,3)
     
      - 0.15*b(Kuk,3) - 0.15*b(Kok,3) + Pr(3) =E= 0 ; (LHS = 0)
     
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 23:25:38 Page 67
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE final Using MIP From line 433


---- z  the objective

z
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       obj


---- y  Cubic meters produced of product j

y(Mas,1)
                (.LO, .L, .UP, .M = 0, 0, 1060000, 0)
        2       timber_used(Mat,1)
       -0.8     timber_used(Mak,1)
       -1       Sold_Prod(Mas,1)
       -1       Capacity1(SAW,1)
        0.542   PROFIT(1)

y(Mas,2)
                (.LO, .L, .UP, .M = 0, 0, 1060000, 0)
        2       timber_used(Mat,2)
       -0.8     timber_used(Mak,2)
       -1       Sold_Prod(Mas,2)
       -1       Capacity1(SAW,2)
        0.542   PROFIT(2)

y(Mas,3)
                (.LO, .L, .UP, .M = 0, 0, 1060000, 0)
        2       timber_used(Mat,3)
       -0.8     timber_used(Mak,3)
       -1       Sold_Prod(Mas,3)
       -1       Capacity1(SAW,3)
        0.542   PROFIT(3)

y(Kus,1)
                (.LO, .L, .UP, .M = 0, 0, 1060000, 0)
        2       timber_used(Kut,1)
       -0.8     timber_used(Kuk,1)
       -1       Sold_Prod(Kus,1)
       -1       Capacity1(SAW,1)
        0.492   PROFIT(1)

y(Kus,2)
                (.LO, .L, .UP, .M = 0, 0, 1060000, 0)
        2       timber_used(Kut,2)
       -0.8     timber_used(Kuk,2)
       -1       Sold_Prod(Kus,2)
       -1       Capacity1(SAW,2)
        0.492   PROFIT(2)

y(Kus,3)
                (.LO, .L, .UP, .M = 0, 0, 1060000, 0)
        2       timber_used(Kut,3)
       -0.8     timber_used(Kuk,3)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 23:25:38 Page 68
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE final Using MIP From line 433


     y  Cubic meters produced of product j

       -1       Sold_Prod(Kus,3)
       -1       Capacity1(SAW,3)
        0.492   PROFIT(3)

y(Kos,1)
                (.LO, .L, .UP, .M = 0, 0, 1060000, 0)
        2       timber_used(Kot,1)
       -0.8     timber_used(Kok,1)
       -1       Sold_Prod(Kos,1)
       -1       Capacity1(SAW,1)
        0.442   PROFIT(1)

y(Kos,2)
                (.LO, .L, .UP, .M = 0, 0, 1060000, 0)
        2       timber_used(Kot,2)
       -0.8     timber_used(Kok,2)
       -1       Sold_Prod(Kos,2)
       -1       Capacity1(SAW,2)
        0.442   PROFIT(2)

y(Kos,3)
                (.LO, .L, .UP, .M = 0, 0, 1060000, 0)
        2       timber_used(Kot,3)
       -0.8     timber_used(Kok,3)
       -1       Sold_Prod(Kos,3)
       -1       Capacity1(SAW,3)
        0.442   PROFIT(3)

y(Kuv,1)
                (.LO, .L, .UP, .M = 0, 0, 1060000, 0)
        2.8     timber_used(Kut,1)
       -1.6     timber_used(Kuk,1)
       -1       Sold_Prod(Kuv,1)
       -1       Capacity1(PLY,1)
        2.492   PROFIT(1)

y(Kuv,2)
                (.LO, .L, .UP, .M = 0, 0, 1060000, 0)
        2.8     timber_used(Kut,2)
       -1.6     timber_used(Kuk,2)
       -1       Sold_Prod(Kuv,2)
       -1       Capacity1(PLY,2)
        2.492   PROFIT(2)

y(Kuv,3)
                (.LO, .L, .UP, .M = 0, 0, 1060000, 0)
        2.8     timber_used(Kut,3)
       -1.6     timber_used(Kuk,3)
       -1       Sold_Prod(Kuv,3)
       -1       Capacity1(PLY,3)
        2.492   PROFIT(3)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 23:25:38 Page 69
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE final Using MIP From line 433


     y  Cubic meters produced of product j


y(Kov,1)
                (.LO, .L, .UP, .M = 0, 0, 1060000, 0)
        2.8     timber_used(Kot,1)
       -1.6     timber_used(Kok,1)
       -1       Sold_Prod(Kov,1)
       -1       Capacity1(PLY,1)
        2.592   PROFIT(1)

y(Kov,2)
                (.LO, .L, .UP, .M = 0, 0, 1060000, 0)
        2.8     timber_used(Kot,2)
       -1.6     timber_used(Kok,2)
       -1       Sold_Prod(Kov,2)
       -1       Capacity1(PLY,2)
        2.592   PROFIT(2)

y(Kov,3)
                (.LO, .L, .UP, .M = 0, 0, 1060000, 0)
        2.8     timber_used(Kot,3)
       -1.6     timber_used(Kok,3)
       -1       Sold_Prod(Kov,3)
       -1       Capacity1(PLY,3)
        2.592   PROFIT(3)

y(Hsel,1)
                (.LO, .L, .UP, .M = 0, 0, 1060000, 0)
        4.8     timber_used(Mak,1)
       -1       Sold_Prod(Hsel,1)
       -1       Capacity1(SPULP,1)
       -1       PAP_HSEL(1)
       -1       PULP_Bal(Hsel,1)
        0.82    PROFIT(1)

y(Hsel,2)
                (.LO, .L, .UP, .M = 0, 0, 1060000, 0)
        4.8     timber_used(Mak,2)
       -1       Sold_Prod(Hsel,2)
       -1       Capacity1(SPULP,2)
       -1       PAP_HSEL(2)
       -1       PULP_Bal(Hsel,2)
        0.82    PROFIT(2)

y(Hsel,3)
                (.LO, .L, .UP, .M = 0, 0, 1060000, 0)
        4.8     timber_used(Mak,3)
       -1       Sold_Prod(Hsel,3)
       -1       Capacity1(SPULP,3)
       -1       PAP_HSEL(3)
       -1       PULP_Bal(Hsel,3)
        0.82    PROFIT(3)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 23:25:38 Page 70
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE final Using MIP From line 433


     y  Cubic meters produced of product j


y(Lsel,1)
                (.LO, .L, .UP, .M = 0, 0, 1060000, 0)
        4.2     timber_used(Kok,1)
       -1       Sold_Prod(Lsel,1)
       -1       Capacity1(HPULP,1)
       -1       PAP_LSEL(1)
       -1       PULP_Bal(Lsel,1)
        0.8     PROFIT(1)

y(Lsel,2)
                (.LO, .L, .UP, .M = 0, 0, 1060000, 0)
        4.2     timber_used(Kok,2)
       -1       Sold_Prod(Lsel,2)
       -1       Capacity1(HPULP,2)
       -1       PAP_LSEL(2)
       -1       PULP_Bal(Lsel,2)
        0.8     PROFIT(2)

y(Lsel,3)
                (.LO, .L, .UP, .M = 0, 0, 1060000, 0)
        4.2     timber_used(Kok,3)
       -1       Sold_Prod(Lsel,3)
       -1       Capacity1(HPULP,3)
       -1       PAP_LSEL(3)
       -1       PULP_Bal(Lsel,3)
        0.8     PROFIT(3)

y(Pap,1)
                (.LO, .L, .UP, .M = 0, 0, 1060000, 0)
        1       timber_used(Kuk,1)
       -1       Sold_Prod(Pap,1)
       -1       Capacity1(Pap,1)
        0.2     PAP_HSEL(1)
        0.2     PAP_LSEL(1)
        0.2     PULP_Bal(Hsel,1)
        0.2     PULP_Bal(Lsel,1)
        1.7     PROFIT(1)

y(Pap,2)
                (.LO, .L, .UP, .M = 0, 0, 1060000, 0)
        1       timber_used(Kuk,2)
       -1       Sold_Prod(Pap,2)
       -1       Capacity1(Pap,2)
        0.2     PAP_HSEL(2)
        0.2     PAP_LSEL(2)
        0.2     PULP_Bal(Hsel,2)
        0.2     PULP_Bal(Lsel,2)
        1.7     PROFIT(2)

y(Pap,3)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 23:25:38 Page 71
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE final Using MIP From line 433


     y  Cubic meters produced of product j

                (.LO, .L, .UP, .M = 0, 0, 1060000, 0)
        1       timber_used(Kuk,3)
       -1       Sold_Prod(Pap,3)
       -1       Capacity1(Pap,3)
        0.2     PAP_HSEL(3)
        0.2     PAP_LSEL(3)
        0.2     PULP_Bal(Hsel,3)
        0.2     PULP_Bal(Lsel,3)
        1.7     PROFIT(3)


---- s  amount of timber i used to make products

s(Mat,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -1       timber_used(Mat,1)
       -1       prod_starved(Mat,1)
        0.19    PROFIT(1)

s(Mat,2)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -1       timber_used(Mat,2)
       -1       prod_starved(Mat,2)
        0.19    PROFIT(2)

s(Mat,3)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -1       timber_used(Mat,3)
       -1       prod_starved(Mat,3)
        0.19    PROFIT(3)

s(Kut,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -1       timber_used(Kut,1)
       -1       prod_starved(Kut,1)
        0.15    PROFIT(1)

s(Kut,2)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -1       timber_used(Kut,2)
       -1       prod_starved(Kut,2)
        0.15    PROFIT(2)

s(Kut,3)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -1       timber_used(Kut,3)
       -1       prod_starved(Kut,3)
        0.15    PROFIT(3)

s(Kot,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 23:25:38 Page 72
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE final Using MIP From line 433


     s  amount of timber i used to make products

       -1       timber_used(Kot,1)
       -1       prod_starved(Kot,1)
        0.12    PROFIT(1)

s(Kot,2)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -1       timber_used(Kot,2)
       -1       prod_starved(Kot,2)
        0.12    PROFIT(2)

s(Kot,3)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -1       timber_used(Kot,3)
       -1       prod_starved(Kot,3)
        0.12    PROFIT(3)

s(Mak,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -1       timber_used(Mak,1)
       -1       prod_starved(Mak,1)
        0.18    PROFIT(1)

s(Mak,2)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -1       timber_used(Mak,2)
       -1       prod_starved(Mak,2)
        0.18    PROFIT(2)

s(Mak,3)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -1       timber_used(Mak,3)
       -1       prod_starved(Mak,3)
        0.18    PROFIT(3)

s(Kuk,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -1       timber_used(Kuk,1)
       -1       prod_starved(Kuk,1)
        0.15    PROFIT(1)

s(Kuk,2)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -1       timber_used(Kuk,2)
       -1       prod_starved(Kuk,2)
        0.15    PROFIT(2)

s(Kuk,3)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -1       timber_used(Kuk,3)
       -1       prod_starved(Kuk,3)
        0.15    PROFIT(3)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 23:25:38 Page 73
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE final Using MIP From line 433


     s  amount of timber i used to make products


s(Kok,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -1       timber_used(Kok,1)
       -1       prod_starved(Kok,1)
        0.15    PROFIT(1)

s(Kok,2)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -1       timber_used(Kok,2)
       -1       prod_starved(Kok,2)
        0.15    PROFIT(2)

s(Kok,3)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -1       timber_used(Kok,3)
       -1       prod_starved(Kok,3)
        0.15    PROFIT(3)


---- r  1 if we buy n boats of timber i, 0 otherwise

r(1,Mat,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_buy(Mat,1)

r(1,Mat,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_buy(Mat,2)

r(1,Mat,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_buy(Mat,3)

r(1,Kut,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_buy(Kut,1)

r(1,Kut,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_buy(Kut,2)

r(1,Kut,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_buy(Kut,3)

r(1,Kot,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_buy(Kot,1)

r(1,Kot,2)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 23:25:38 Page 74
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE final Using MIP From line 433


     r  1 if we buy n boats of timber i, 0 otherwise

                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_buy(Kot,2)

r(1,Kot,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_buy(Kot,3)

r(1,Mak,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_buy(Mak,1)

r(1,Mak,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_buy(Mak,2)

r(1,Mak,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_buy(Mak,3)

r(1,Kuk,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_buy(Kuk,1)

r(1,Kuk,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_buy(Kuk,2)

r(1,Kuk,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_buy(Kuk,3)

r(1,Kok,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_buy(Kok,1)

r(1,Kok,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_buy(Kok,2)

r(1,Kok,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_buy(Kok,3)

r(2,Mat,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    10000       prod_starved(Mat,1)
   -10000       timber_bought(Mat,1)
        1       Barges_buy(Mat,1)
     2000       PROFIT(1)

r(2,Mat,2)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 23:25:38 Page 75
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE final Using MIP From line 433


     r  1 if we buy n boats of timber i, 0 otherwise

                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    10000       prod_starved(Mat,2)
   -10000       timber_bought(Mat,2)
        1       Barges_buy(Mat,2)
     2000       PROFIT(2)

r(2,Mat,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    10000       prod_starved(Mat,3)
   -10000       timber_bought(Mat,3)
        1       Barges_buy(Mat,3)
     2000       PROFIT(3)

r(2,Kut,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    10000       prod_starved(Kut,1)
   -10000       timber_bought(Kut,1)
        1       Barges_buy(Kut,1)
     1550       PROFIT(1)

r(2,Kut,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    10000       prod_starved(Kut,2)
   -10000       timber_bought(Kut,2)
        1       Barges_buy(Kut,2)
     1550       PROFIT(2)

r(2,Kut,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    10000       prod_starved(Kut,3)
   -10000       timber_bought(Kut,3)
        1       Barges_buy(Kut,3)
     1550       PROFIT(3)

r(2,Kot,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    10000       prod_starved(Kot,1)
   -10000       timber_bought(Kot,1)
        1       Barges_buy(Kot,1)
     1500       PROFIT(1)

r(2,Kot,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    10000       prod_starved(Kot,2)
   -10000       timber_bought(Kot,2)
        1       Barges_buy(Kot,2)
     1500       PROFIT(2)

r(2,Kot,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    10000       prod_starved(Kot,3)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 23:25:38 Page 76
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE final Using MIP From line 433


     r  1 if we buy n boats of timber i, 0 otherwise

   -10000       timber_bought(Kot,3)
        1       Barges_buy(Kot,3)
     1500       PROFIT(3)

r(2,Mak,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    10000       prod_starved(Mak,1)
   -10000       timber_bought(Mak,1)
        1       Barges_buy(Mak,1)
     1820       PROFIT(1)

r(2,Mak,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    10000       prod_starved(Mak,2)
   -10000       timber_bought(Mak,2)
        1       Barges_buy(Mak,2)
     1820       PROFIT(2)

r(2,Mak,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    10000       prod_starved(Mak,3)
   -10000       timber_bought(Mak,3)
        1       Barges_buy(Mak,3)
     1820       PROFIT(3)

r(2,Kuk,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    10000       prod_starved(Kuk,1)
   -10000       timber_bought(Kuk,1)
        1       Barges_buy(Kuk,1)
     1530       PROFIT(1)

r(2,Kuk,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    10000       prod_starved(Kuk,2)
   -10000       timber_bought(Kuk,2)
        1       Barges_buy(Kuk,2)
     1530       PROFIT(2)

r(2,Kuk,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    10000       prod_starved(Kuk,3)
   -10000       timber_bought(Kuk,3)
        1       Barges_buy(Kuk,3)
     1530       PROFIT(3)

r(2,Kok,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    10000       prod_starved(Kok,1)
   -10000       timber_bought(Kok,1)
        1       Barges_buy(Kok,1)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 23:25:38 Page 77
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE final Using MIP From line 433


     r  1 if we buy n boats of timber i, 0 otherwise

     1520       PROFIT(1)

r(2,Kok,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    10000       prod_starved(Kok,2)
   -10000       timber_bought(Kok,2)
        1       Barges_buy(Kok,2)
     1520       PROFIT(2)

r(2,Kok,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    10000       prod_starved(Kok,3)
   -10000       timber_bought(Kok,3)
        1       Barges_buy(Kok,3)
     1520       PROFIT(3)

r(3,Mat,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    20000       prod_starved(Mat,1)
   -20000       timber_bought(Mat,1)
        1       Barges_buy(Mat,1)
     4200       PROFIT(1)

r(3,Mat,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    20000       prod_starved(Mat,2)
   -20000       timber_bought(Mat,2)
        1       Barges_buy(Mat,2)
     4200       PROFIT(2)

r(3,Mat,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    20000       prod_starved(Mat,3)
   -20000       timber_bought(Mat,3)
        1       Barges_buy(Mat,3)
     4200       PROFIT(3)

r(3,Kut,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    20000       prod_starved(Kut,1)
   -20000       timber_bought(Kut,1)
        1       Barges_buy(Kut,1)
     3200       PROFIT(1)

r(3,Kut,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    20000       prod_starved(Kut,2)
   -20000       timber_bought(Kut,2)
        1       Barges_buy(Kut,2)
     3200       PROFIT(2)

GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 23:25:38 Page 78
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE final Using MIP From line 433


     r  1 if we buy n boats of timber i, 0 otherwise

r(3,Kut,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    20000       prod_starved(Kut,3)
   -20000       timber_bought(Kut,3)
        1       Barges_buy(Kut,3)
     3200       PROFIT(3)

r(3,Kot,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    20000       prod_starved(Kot,1)
   -20000       timber_bought(Kot,1)
        1       Barges_buy(Kot,1)
     3600       PROFIT(1)

r(3,Kot,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    20000       prod_starved(Kot,2)
   -20000       timber_bought(Kot,2)
        1       Barges_buy(Kot,2)
     3600       PROFIT(2)

r(3,Kot,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    20000       prod_starved(Kot,3)
   -20000       timber_bought(Kot,3)
        1       Barges_buy(Kot,3)
     3600       PROFIT(3)

r(3,Mak,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    20000       prod_starved(Mak,1)
   -20000       timber_bought(Mak,1)
        1       Barges_buy(Mak,1)
     3680       PROFIT(1)

r(3,Mak,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    20000       prod_starved(Mak,2)
   -20000       timber_bought(Mak,2)
        1       Barges_buy(Mak,2)
     3680       PROFIT(2)

r(3,Mak,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    20000       prod_starved(Mak,3)
   -20000       timber_bought(Mak,3)
        1       Barges_buy(Mak,3)
     3680       PROFIT(3)

r(3,Kuk,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 23:25:38 Page 79
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE final Using MIP From line 433


     r  1 if we buy n boats of timber i, 0 otherwise

    20000       prod_starved(Kuk,1)
   -20000       timber_bought(Kuk,1)
        1       Barges_buy(Kuk,1)
     3120       PROFIT(1)

r(3,Kuk,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    20000       prod_starved(Kuk,2)
   -20000       timber_bought(Kuk,2)
        1       Barges_buy(Kuk,2)
     3120       PROFIT(2)

r(3,Kuk,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    20000       prod_starved(Kuk,3)
   -20000       timber_bought(Kuk,3)
        1       Barges_buy(Kuk,3)
     3120       PROFIT(3)

r(3,Kok,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    20000       prod_starved(Kok,1)
   -20000       timber_bought(Kok,1)
        1       Barges_buy(Kok,1)
     3080       PROFIT(1)

r(3,Kok,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    20000       prod_starved(Kok,2)
   -20000       timber_bought(Kok,2)
        1       Barges_buy(Kok,2)
     3080       PROFIT(2)

r(3,Kok,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    20000       prod_starved(Kok,3)
   -20000       timber_bought(Kok,3)
        1       Barges_buy(Kok,3)
     3080       PROFIT(3)

r(4,Mat,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    30000       prod_starved(Mat,1)
   -30000       timber_bought(Mat,1)
        1       Barges_buy(Mat,1)
     6600       PROFIT(1)

r(4,Mat,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    30000       prod_starved(Mat,2)
   -30000       timber_bought(Mat,2)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 23:25:38 Page 80
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE final Using MIP From line 433


     r  1 if we buy n boats of timber i, 0 otherwise

        1       Barges_buy(Mat,2)
     6600       PROFIT(2)

r(4,Mat,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    30000       prod_starved(Mat,3)
   -30000       timber_bought(Mat,3)
        1       Barges_buy(Mat,3)
     6600       PROFIT(3)

r(4,Kut,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    30000       prod_starved(Kut,1)
   -30000       timber_bought(Kut,1)
        1       Barges_buy(Kut,1)
     4950       PROFIT(1)

r(4,Kut,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    30000       prod_starved(Kut,2)
   -30000       timber_bought(Kut,2)
        1       Barges_buy(Kut,2)
     4950       PROFIT(2)

r(4,Kut,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    30000       prod_starved(Kut,3)
   -30000       timber_bought(Kut,3)
        1       Barges_buy(Kut,3)
     4950       PROFIT(3)

r(4,Kot,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    30000       prod_starved(Kot,1)
   -30000       timber_bought(Kot,1)
        1       Barges_buy(Kot,1)
     6300       PROFIT(1)

r(4,Kot,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    30000       prod_starved(Kot,2)
   -30000       timber_bought(Kot,2)
        1       Barges_buy(Kot,2)
     6300       PROFIT(2)

r(4,Kot,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    30000       prod_starved(Kot,3)
   -30000       timber_bought(Kot,3)
        1       Barges_buy(Kot,3)
     6300       PROFIT(3)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 23:25:38 Page 81
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE final Using MIP From line 433


     r  1 if we buy n boats of timber i, 0 otherwise


r(4,Mak,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    30000       prod_starved(Mak,1)
   -30000       timber_bought(Mak,1)
        1       Barges_buy(Mak,1)
     5580       PROFIT(1)

r(4,Mak,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    30000       prod_starved(Mak,2)
   -30000       timber_bought(Mak,2)
        1       Barges_buy(Mak,2)
     5580       PROFIT(2)

r(4,Mak,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    30000       prod_starved(Mak,3)
   -30000       timber_bought(Mak,3)
        1       Barges_buy(Mak,3)
     5580       PROFIT(3)

r(4,Kuk,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    30000       prod_starved(Kuk,1)
   -30000       timber_bought(Kuk,1)
        1       Barges_buy(Kuk,1)
     4770       PROFIT(1)

r(4,Kuk,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    30000       prod_starved(Kuk,2)
   -30000       timber_bought(Kuk,2)
        1       Barges_buy(Kuk,2)
     4770       PROFIT(2)

r(4,Kuk,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    30000       prod_starved(Kuk,3)
   -30000       timber_bought(Kuk,3)
        1       Barges_buy(Kuk,3)
     4770       PROFIT(3)

r(4,Kok,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    30000       prod_starved(Kok,1)
   -30000       timber_bought(Kok,1)
        1       Barges_buy(Kok,1)
     4680       PROFIT(1)

r(4,Kok,2)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 23:25:38 Page 82
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE final Using MIP From line 433


     r  1 if we buy n boats of timber i, 0 otherwise

                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    30000       prod_starved(Kok,2)
   -30000       timber_bought(Kok,2)
        1       Barges_buy(Kok,2)
     4680       PROFIT(2)

r(4,Kok,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    30000       prod_starved(Kok,3)
   -30000       timber_bought(Kok,3)
        1       Barges_buy(Kok,3)
     4680       PROFIT(3)

r(5,Mat,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    40000       prod_starved(Mat,1)
   -40000       timber_bought(Mat,1)
        1       Barges_buy(Mat,1)
     9200       PROFIT(1)

r(5,Mat,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    40000       prod_starved(Mat,2)
   -40000       timber_bought(Mat,2)
        1       Barges_buy(Mat,2)
     9200       PROFIT(2)

r(5,Mat,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    40000       prod_starved(Mat,3)
   -40000       timber_bought(Mat,3)
        1       Barges_buy(Mat,3)
     9200       PROFIT(3)

r(5,Kut,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    40000       prod_starved(Kut,1)
   -40000       timber_bought(Kut,1)
        1       Barges_buy(Kut,1)
     6800       PROFIT(1)

r(5,Kut,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    40000       prod_starved(Kut,2)
   -40000       timber_bought(Kut,2)
        1       Barges_buy(Kut,2)
     6800       PROFIT(2)

r(5,Kut,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    40000       prod_starved(Kut,3)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 23:25:38 Page 83
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE final Using MIP From line 433


     r  1 if we buy n boats of timber i, 0 otherwise

   -40000       timber_bought(Kut,3)
        1       Barges_buy(Kut,3)
     6800       PROFIT(3)

r(5,Kot,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    40000       prod_starved(Kot,1)
   -40000       timber_bought(Kot,1)
        1       Barges_buy(Kot,1)
     9600       PROFIT(1)

r(5,Kot,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    40000       prod_starved(Kot,2)
   -40000       timber_bought(Kot,2)
        1       Barges_buy(Kot,2)
     9600       PROFIT(2)

r(5,Kot,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    40000       prod_starved(Kot,3)
   -40000       timber_bought(Kot,3)
        1       Barges_buy(Kot,3)
     9600       PROFIT(3)

r(5,Mak,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    40000       prod_starved(Mak,1)
   -40000       timber_bought(Mak,1)
        1       Barges_buy(Mak,1)
     7520       PROFIT(1)

r(5,Mak,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    40000       prod_starved(Mak,2)
   -40000       timber_bought(Mak,2)
        1       Barges_buy(Mak,2)
     7520       PROFIT(2)

r(5,Mak,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    40000       prod_starved(Mak,3)
   -40000       timber_bought(Mak,3)
        1       Barges_buy(Mak,3)
     7520       PROFIT(3)

r(5,Kuk,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    40000       prod_starved(Kuk,1)
   -40000       timber_bought(Kuk,1)
        1       Barges_buy(Kuk,1)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 23:25:38 Page 84
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE final Using MIP From line 433


     r  1 if we buy n boats of timber i, 0 otherwise

     6480       PROFIT(1)

r(5,Kuk,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    40000       prod_starved(Kuk,2)
   -40000       timber_bought(Kuk,2)
        1       Barges_buy(Kuk,2)
     6480       PROFIT(2)

r(5,Kuk,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    40000       prod_starved(Kuk,3)
   -40000       timber_bought(Kuk,3)
        1       Barges_buy(Kuk,3)
     6480       PROFIT(3)

r(5,Kok,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    40000       prod_starved(Kok,1)
   -40000       timber_bought(Kok,1)
        1       Barges_buy(Kok,1)
     6320       PROFIT(1)

r(5,Kok,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    40000       prod_starved(Kok,2)
   -40000       timber_bought(Kok,2)
        1       Barges_buy(Kok,2)
     6320       PROFIT(2)

r(5,Kok,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    40000       prod_starved(Kok,3)
   -40000       timber_bought(Kok,3)
        1       Barges_buy(Kok,3)
     6320       PROFIT(3)

r(6,Mat,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    50000       prod_starved(Mat,1)
   -50000       timber_bought(Mat,1)
        1       Barges_buy(Mat,1)
    12000       PROFIT(1)

r(6,Mat,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    50000       prod_starved(Mat,2)
   -50000       timber_bought(Mat,2)
        1       Barges_buy(Mat,2)
    12000       PROFIT(2)

GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 23:25:38 Page 85
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE final Using MIP From line 433


     r  1 if we buy n boats of timber i, 0 otherwise

r(6,Mat,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    50000       prod_starved(Mat,3)
   -50000       timber_bought(Mat,3)
        1       Barges_buy(Mat,3)
    12000       PROFIT(3)

r(6,Kut,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    50000       prod_starved(Kut,1)
   -50000       timber_bought(Kut,1)
        1       Barges_buy(Kut,1)
     8750       PROFIT(1)

r(6,Kut,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    50000       prod_starved(Kut,2)
   -50000       timber_bought(Kut,2)
        1       Barges_buy(Kut,2)
     8750       PROFIT(2)

r(6,Kut,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    50000       prod_starved(Kut,3)
   -50000       timber_bought(Kut,3)
        1       Barges_buy(Kut,3)
     8750       PROFIT(3)

r(6,Kot,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    50000       prod_starved(Kot,1)
   -50000       timber_bought(Kot,1)
        1       Barges_buy(Kot,1)
    13500       PROFIT(1)

r(6,Kot,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    50000       prod_starved(Kot,2)
   -50000       timber_bought(Kot,2)
        1       Barges_buy(Kot,2)
    13500       PROFIT(2)

r(6,Kot,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    50000       prod_starved(Kot,3)
   -50000       timber_bought(Kot,3)
        1       Barges_buy(Kot,3)
    13500       PROFIT(3)

r(6,Mak,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 23:25:38 Page 86
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE final Using MIP From line 433


     r  1 if we buy n boats of timber i, 0 otherwise

    50000       prod_starved(Mak,1)
   -50000       timber_bought(Mak,1)
        1       Barges_buy(Mak,1)
     9500       PROFIT(1)

REMAINING 1826 ENTRIES SKIPPED

---- u  1 if we use n boats for product j shiping to region k, 0 otherwise

u(1,Mas,EU,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Mas,EU,1)

u(1,Mas,EU,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Mas,EU,2)

u(1,Mas,EU,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Mas,EU,3)

u(1,Mas,IE,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Mas,IE,1)

u(1,Mas,IE,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Mas,IE,2)

u(1,Mas,IE,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Mas,IE,3)

u(1,Mas,PA,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Mas,PA,1)

u(1,Mas,PA,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Mas,PA,2)

u(1,Mas,PA,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Mas,PA,3)

u(1,Mas,KI,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Mas,KI,1)

u(1,Mas,KI,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 23:25:38 Page 87
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE final Using MIP From line 433


     u  1 if we use n boats for product j shiping to region k, 0 otherwise

        1       Barges_sell(Mas,KI,2)

u(1,Mas,KI,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Mas,KI,3)

u(1,Kus,EU,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Kus,EU,1)

u(1,Kus,EU,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Kus,EU,2)

u(1,Kus,EU,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Kus,EU,3)

u(1,Kus,IE,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Kus,IE,1)

u(1,Kus,IE,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Kus,IE,2)

u(1,Kus,IE,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Kus,IE,3)

u(1,Kus,PA,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Kus,PA,1)

u(1,Kus,PA,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Kus,PA,2)

u(1,Kus,PA,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Kus,PA,3)

u(1,Kus,KI,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Kus,KI,1)

u(1,Kus,KI,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Kus,KI,2)

u(1,Kus,KI,3)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 23:25:38 Page 88
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE final Using MIP From line 433


     u  1 if we use n boats for product j shiping to region k, 0 otherwise

                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Kus,KI,3)

u(1,Kos,EU,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Kos,EU,1)

u(1,Kos,EU,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Kos,EU,2)

u(1,Kos,EU,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Kos,EU,3)

u(1,Kos,IE,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Kos,IE,1)

u(1,Kos,IE,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Kos,IE,2)

u(1,Kos,IE,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Kos,IE,3)

u(1,Kos,PA,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Kos,PA,1)

u(1,Kos,PA,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Kos,PA,2)

u(1,Kos,PA,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Kos,PA,3)

u(1,Kos,KI,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Kos,KI,1)

u(1,Kos,KI,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Kos,KI,2)

u(1,Kos,KI,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Kos,KI,3)

GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 23:25:38 Page 89
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE final Using MIP From line 433


     u  1 if we use n boats for product j shiping to region k, 0 otherwise

u(1,Kuv,EU,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Kuv,EU,1)

u(1,Kuv,EU,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Kuv,EU,2)

u(1,Kuv,EU,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Kuv,EU,3)

u(1,Kuv,IE,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Kuv,IE,1)

u(1,Kuv,IE,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Kuv,IE,2)

u(1,Kuv,IE,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Kuv,IE,3)

u(1,Kuv,PA,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Kuv,PA,1)

u(1,Kuv,PA,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Kuv,PA,2)

u(1,Kuv,PA,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Kuv,PA,3)

u(1,Kuv,KI,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Kuv,KI,1)

u(1,Kuv,KI,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Kuv,KI,2)

u(1,Kuv,KI,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Kuv,KI,3)

u(1,Kov,EU,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Kov,EU,1)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 23:25:38 Page 90
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE final Using MIP From line 433


     u  1 if we use n boats for product j shiping to region k, 0 otherwise


u(1,Kov,EU,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Kov,EU,2)

u(1,Kov,EU,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Kov,EU,3)

u(1,Kov,IE,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Kov,IE,1)

u(1,Kov,IE,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Kov,IE,2)

u(1,Kov,IE,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Kov,IE,3)

u(1,Kov,PA,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Kov,PA,1)

u(1,Kov,PA,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Kov,PA,2)

u(1,Kov,PA,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Kov,PA,3)

u(1,Kov,KI,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Kov,KI,1)

u(1,Kov,KI,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Kov,KI,2)

u(1,Kov,KI,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Kov,KI,3)

u(1,Hsel,EU,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Hsel,EU,1)

u(1,Hsel,EU,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 23:25:38 Page 91
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE final Using MIP From line 433


     u  1 if we use n boats for product j shiping to region k, 0 otherwise

        1       Barges_sell(Hsel,EU,2)

u(1,Hsel,EU,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Hsel,EU,3)

u(1,Hsel,IE,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Hsel,IE,1)

u(1,Hsel,IE,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Hsel,IE,2)

u(1,Hsel,IE,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Hsel,IE,3)

u(1,Hsel,PA,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Hsel,PA,1)

u(1,Hsel,PA,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Hsel,PA,2)

u(1,Hsel,PA,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Hsel,PA,3)

u(1,Hsel,KI,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Hsel,KI,1)

u(1,Hsel,KI,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Hsel,KI,2)

u(1,Hsel,KI,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Hsel,KI,3)

u(1,Lsel,EU,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Lsel,EU,1)

u(1,Lsel,EU,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Lsel,EU,2)

u(1,Lsel,EU,3)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 23:25:38 Page 92
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE final Using MIP From line 433


     u  1 if we use n boats for product j shiping to region k, 0 otherwise

                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Lsel,EU,3)

u(1,Lsel,IE,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Lsel,IE,1)

u(1,Lsel,IE,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Lsel,IE,2)

u(1,Lsel,IE,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Lsel,IE,3)

u(1,Lsel,PA,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Lsel,PA,1)

u(1,Lsel,PA,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Lsel,PA,2)

u(1,Lsel,PA,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Lsel,PA,3)

u(1,Lsel,KI,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Lsel,KI,1)

u(1,Lsel,KI,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Lsel,KI,2)

u(1,Lsel,KI,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Lsel,KI,3)

u(1,Pap,EU,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Pap,EU,1)

u(1,Pap,EU,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Pap,EU,2)

u(1,Pap,EU,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Pap,EU,3)

GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 23:25:38 Page 93
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE final Using MIP From line 433


     u  1 if we use n boats for product j shiping to region k, 0 otherwise

u(1,Pap,IE,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Pap,IE,1)

u(1,Pap,IE,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Pap,IE,2)

u(1,Pap,IE,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Pap,IE,3)

u(1,Pap,PA,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Pap,PA,1)

u(1,Pap,PA,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Pap,PA,2)

u(1,Pap,PA,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Pap,PA,3)

u(1,Pap,KI,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Pap,KI,1)

u(1,Pap,KI,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Pap,KI,2)

u(1,Pap,KI,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Pap,KI,3)

u(2,Mas,EU,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    10000       Sold_Prod(Mas,1)
        1       Barges_sell(Mas,EU,1)
   -15600       PROFIT(1)

u(2,Mas,EU,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    10100       Sold_Prod(Mas,2)
        1       Barges_sell(Mas,EU,2)
   -14676.9925  PROFIT(2)

u(2,Mas,EU,3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    10201       Sold_Prod(Mas,3)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 23:25:38 Page 94
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE final Using MIP From line 433


     u  1 if we use n boats for product j shiping to region k, 0 otherwise

        1       Barges_sell(Mas,EU,3)
   -13808.561   PROFIT(3)

u(2,Mas,IE,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    10000       Sold_Prod(Mas,1)
        1       Barges_sell(Mas,IE,1)
   -12000       PROFIT(1)

REMAINING 2108 ENTRIES SKIPPED

---- b  amount of timber i bought

b(Mat,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       timber_bought(Mat,1)
       -0.19    PROFIT(1)

b(Mat,2)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       timber_bought(Mat,2)
       -0.19    PROFIT(2)

b(Mat,3)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       timber_bought(Mat,3)
       -0.19    PROFIT(3)

b(Kut,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       timber_bought(Kut,1)
       -0.15    PROFIT(1)

b(Kut,2)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       timber_bought(Kut,2)
       -0.15    PROFIT(2)

b(Kut,3)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       timber_bought(Kut,3)
       -0.15    PROFIT(3)

b(Kot,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       timber_bought(Kot,1)
       -0.12    PROFIT(1)

b(Kot,2)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       timber_bought(Kot,2)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 23:25:38 Page 95
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE final Using MIP From line 433


     b  amount of timber i bought

       -0.12    PROFIT(2)

b(Kot,3)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       timber_bought(Kot,3)
       -0.12    PROFIT(3)

b(Mak,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       timber_bought(Mak,1)
       -0.18    PROFIT(1)

b(Mak,2)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       timber_bought(Mak,2)
       -0.18    PROFIT(2)

b(Mak,3)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       timber_bought(Mak,3)
       -0.18    PROFIT(3)

b(Kuk,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       timber_bought(Kuk,1)
       -0.15    PROFIT(1)

b(Kuk,2)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       timber_bought(Kuk,2)
       -0.15    PROFIT(2)

b(Kuk,3)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       timber_bought(Kuk,3)
       -0.15    PROFIT(3)

b(Kok,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       timber_bought(Kok,1)
       -0.15    PROFIT(1)

b(Kok,2)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       timber_bought(Kok,2)
       -0.15    PROFIT(2)

b(Kok,3)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       timber_bought(Kok,3)
       -0.15    PROFIT(3)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 23:25:38 Page 96
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE final Using MIP From line 433


     b  amount of timber i bought



---- Pr  Net profit in each year t

Pr(1)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
       -1       obj
        1       PROFIT(1)

Pr(2)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
       -1       obj
        1       PROFIT(2)

Pr(3)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
       -1       obj
        1       PROFIT(3)


---- Cap  Capacity of machine m in year t

Cap(Pap,1)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       Capacity1(Pap,1)
        1       MaxCapacity(Pap,1)
        1       CapStart(Pap,1)
        1       CapStart(Pap,2)
        1       CapStart(Pap,3)

Cap(Pap,2)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       Capacity1(Pap,2)
        1       MaxCapacity(Pap,2)
        0.7     PROFIT(1)

Cap(Pap,3)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       Capacity1(Pap,3)
        1       MaxCapacity(Pap,3)
        0.7     PROFIT(2)

Cap(SAW,1)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       Capacity1(SAW,1)
        1       MaxCapacity(SAW,1)
        1       CapStart(SAW,1)
        1       CapStart(SAW,2)
        1       CapStart(SAW,3)

Cap(SAW,2)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 23:25:38 Page 97
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE final Using MIP From line 433


     Cap  Capacity of machine m in year t

                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       Capacity1(SAW,2)
        1       MaxCapacity(SAW,2)
        0.1     PROFIT(1)

Cap(SAW,3)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       Capacity1(SAW,3)
        1       MaxCapacity(SAW,3)
        0.1     PROFIT(2)

Cap(PLY,1)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       Capacity1(PLY,1)
        1       MaxCapacity(PLY,1)
        1       CapStart(PLY,1)
        1       CapStart(PLY,2)
        1       CapStart(PLY,3)

Cap(PLY,2)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       Capacity1(PLY,2)
        1       MaxCapacity(PLY,2)
        0.3     PROFIT(1)

Cap(PLY,3)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       Capacity1(PLY,3)
        1       MaxCapacity(PLY,3)
        0.3     PROFIT(2)

Cap(SPULP,1)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       Capacity1(SPULP,1)
        1       MaxCapacity(SPULP,1)
        1       CapStart(SPULP,1)
        1       CapStart(SPULP,2)
        1       CapStart(SPULP,3)

Cap(SPULP,2)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       Capacity1(SPULP,2)
        1       MaxCapacity(SPULP,2)
        0.5     PROFIT(1)

Cap(SPULP,3)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       Capacity1(SPULP,3)
        1       MaxCapacity(SPULP,3)
        0.5     PROFIT(2)

GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 23:25:38 Page 98
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE final Using MIP From line 433


     Cap  Capacity of machine m in year t

Cap(HPULP,1)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       Capacity1(HPULP,1)
        1       MaxCapacity(HPULP,1)
        1       CapStart(HPULP,1)
        1       CapStart(HPULP,2)
        1       CapStart(HPULP,3)

Cap(HPULP,2)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       Capacity1(HPULP,2)
        1       MaxCapacity(HPULP,2)
        0.5     PROFIT(1)

Cap(HPULP,3)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       Capacity1(HPULP,3)
        1       MaxCapacity(HPULP,3)
        0.5     PROFIT(2)

GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/18/17 23:25:38 Page 99
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Model Statistics    SOLVE final Using MIP From line 433


MODEL STATISTICS

BLOCKS OF EQUATIONS          14     SINGLE EQUATIONS          253
BLOCKS OF VARIABLES           8     SINGLE VARIABLES        4,213
NON ZERO ELEMENTS        14,366     DISCRETE VARIABLES      4,158


GENERATION TIME      =        0.067 SECONDS      5 MB  24.8.1 r59919 DEX-DEG


EXECUTION TIME       =        0.067 SECONDS      5 MB  24.8.1 r59919 DEX-DEG
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 23:25:38 Page 100
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 433


               S O L V E      S U M M A R Y

     MODEL   final               OBJECTIVE  z
     TYPE    MIP                 DIRECTION  MAXIMIZE
     SOLVER  CPLEX               FROM LINE  433

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      1 Optimal                   
**** OBJECTIVE VALUE           544908.1618

 RESOURCE USAGE, LIMIT          0.840       300.000
 ITERATION COUNT, LIMIT       753     999999999

IBM ILOG CPLEX   24.8.1 r59919 Released Dec 22, 2016 DEG x86 64bit/Mac OS X   
--- GAMS/Cplex licensed for continuous and discrete problems.
Cplex 12.7.0.0

Space for names approximately 0.09 Mb
Use option 'names no' to turn use of names off
MIP status(101): integer optimal solution
Cplex Time: 0.82sec (det. 479.23 ticks)
Fixing integer variables, and solving final LP...
Fixed MIP status(1): optimal
Cplex Time: 0.00sec (det. 1.76 ticks)
Proven optimal solution.

MIP Solution:       544908.161756    (753 iterations, 61 nodes)
Final Solve:        544908.161756    (0 iterations)

Best possible:      544908.161756
Absolute gap:            0.000000
Relative gap:            0.000000


                           LOWER          LEVEL          UPPER         MARGINAL

---- EQU obj                 .              .              .             1.0000      

  obj  Maximum gross profit

---- EQU timber_used   amount of  timber i used to make  product j in year t

             LOWER          LEVEL          UPPER         MARGINAL

Mat.1          .              .              .             0.1900      
Mat.2          .              .              .             0.1900      
Mat.3          .              .              .             0.1900      
Kut.1          .              .              .             0.1500      
Kut.2          .              .              .             0.1500      
Kut.3          .              .              .             0.1500      
Kot.1          .              .              .             0.1200      
Kot.2          .              .              .             0.1200      
Kot.3          .              .              .             0.1200      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 23:25:38 Page 101
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 433


     EQU timber_used   amount of  timber i used to make  product j in year t

             LOWER          LEVEL          UPPER         MARGINAL

Mak.1          .              .              .             0.1800      
Mak.2          .              .              .             0.1800      
Mak.3          .              .              .             0.1800      
Kuk.1          .              .              .              .          
Kuk.2          .              .              .             0.1500      
Kuk.3          .              .              .             0.1500      
Kok.1          .              .              .             0.1500      
Kok.2          .              .              .             0.1500      
Kok.3          .              .              .             0.1500      

---- EQU prod_starved  ensure that production can not be starved in each year

             LOWER          LEVEL          UPPER         MARGINAL

Mat.1          .              .            +INF             .          
Mat.2          .          9200.0000        +INF             .          
Mat.3          .          8794.0000        +INF             .          
Kut.1          .              .            +INF             .          
Kut.2          .          1060.0000        +INF             .          
Kut.3          .          4614.8000        +INF             .          
Kot.1          .          6000.0000        +INF             .          
Kot.2          .          2880.0000        +INF             .          
Kot.3          .           262.8000        +INF             .          
Mak.1          .          1200.0000        +INF             .          
Mak.2          .          3216.0000        +INF             .          
Mak.3          .          2492.0000        +INF             .          
Kuk.1          .              .            +INF             .          
Kuk.2          .          8780.0000        +INF             .          
Kuk.3          .           948.4000        +INF             .          
Kok.1          .          4800.0000        +INF             .          
Kok.2          .           924.0000        +INF             .          
Kok.3          .          3897.2000        +INF             .          

---- EQU Sold_Prod  we cant sell more than we produce in each year

              LOWER          LEVEL          UPPER         MARGINAL

Mas .1        -INF             .              .              .          
Mas .2        -INF             .              .              .          
Mas .3        -INF             .              .              .          
Kus .1        -INF             .              .              .          
Kus .2        -INF             .              .              .          
Kus .3        -INF             .              .              .          
Kos .1        -INF             .              .              .          
Kos .2        -INF             .              .              .          
Kos .3        -INF           -0.7500          .              .          
Kuv .1        -INF             .              .              .          
Kuv .2        -INF             .              .              .          
Kuv .3        -INF             .              .              .          
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 23:25:38 Page 102
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 433


     EQU Sold_Prod  we cant sell more than we produce in each year

              LOWER          LEVEL          UPPER         MARGINAL

Kov .1        -INF             .              .              .          
Kov .2        -INF             .              .              .          
Kov .3        -INF             .              .              .          
Hsel.1        -INF       -16000.0000          .              .          
Hsel.2        -INF       -28980.0000          .              .          
Hsel.3        -INF       -14998.0000          .              .          
Lsel.1        -INF       -16000.0000          .              .          
Lsel.2        -INF       -27480.0000          .              .          
Lsel.3        -INF       -12562.0000          .              .          
Pap .1        -INF             .              .              .          
Pap .2        -INF             .              .              .          
Pap .3        -INF           -0.2500          .              .          

---- EQU timber_bought  amount of timber i bought in each year

             LOWER          LEVEL          UPPER         MARGINAL

Mat.1          .              .              .             0.1900      
Mat.2          .              .              .             0.1900      
Mat.3          .              .              .             0.1900      
Kut.1          .              .              .             0.1500      
Kut.2          .              .              .             0.1500      
Kut.3          .              .              .             0.1500      
Kot.1          .              .              .             0.1200      
Kot.2          .              .              .             0.1200      
Kot.3          .              .              .             0.1200      
Mak.1          .              .              .             0.1800      
Mak.2          .              .              .             0.1800      
Mak.3          .              .              .             0.1800      
Kuk.1          .              .              .             0.1500      
Kuk.2          .              .              .             0.1500      
Kuk.3          .              .              .             0.1500      
Kok.1          .              .              .             0.1500      
Kok.2          .              .              .             0.1500      
Kok.3          .              .              .             0.1500      

---- EQU Barges_buy  ensure we only pick one value n for barges for each timber i

             LOWER          LEVEL          UPPER         MARGINAL

Mat.1         1.0000         1.0000         1.0000          .          
Mat.2         1.0000         1.0000         1.0000          .          
Mat.3         1.0000         1.0000         1.0000          .          
Kut.1         1.0000         1.0000         1.0000          .          
Kut.2         1.0000         1.0000         1.0000          .          
Kut.3         1.0000         1.0000         1.0000          .          
Kot.1         1.0000         1.0000         1.0000          .          
Kot.2         1.0000         1.0000         1.0000          .          
Kot.3         1.0000         1.0000         1.0000          .          
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 23:25:38 Page 103
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 433


     EQU Barges_buy  ensure we only pick one value n for barges for each timber i

             LOWER          LEVEL          UPPER         MARGINAL

Mak.1         1.0000         1.0000         1.0000          .          
Mak.2         1.0000         1.0000         1.0000          .          
Mak.3         1.0000         1.0000         1.0000          .          
Kuk.1         1.0000         1.0000         1.0000          .          
Kuk.2         1.0000         1.0000         1.0000          .          
Kuk.3         1.0000         1.0000         1.0000          .          
Kok.1         1.0000         1.0000         1.0000          .          
Kok.2         1.0000         1.0000         1.0000          .          
Kok.3         1.0000         1.0000         1.0000          .          

---- EQU Barges_sell  ensure we only pick one value  n for barges for each product to each city

                 LOWER          LEVEL          UPPER         MARGINAL

Mas .EU.1         1.0000         1.0000         1.0000          .          
Mas .EU.2         1.0000         1.0000         1.0000          .          
Mas .EU.3         1.0000         1.0000         1.0000          .          
Mas .IE.1         1.0000         1.0000         1.0000          .          
Mas .IE.2         1.0000         1.0000         1.0000          .          
Mas .IE.3         1.0000         1.0000         1.0000          .          
Mas .PA.1         1.0000         1.0000         1.0000          .          
Mas .PA.2         1.0000         1.0000         1.0000          .          
Mas .PA.3         1.0000         1.0000         1.0000          .          
Mas .KI.1         1.0000         1.0000         1.0000          .          
Mas .KI.2         1.0000         1.0000         1.0000          .          
Mas .KI.3         1.0000         1.0000         1.0000          .          
Kus .EU.1         1.0000         1.0000         1.0000          .          
Kus .EU.2         1.0000         1.0000         1.0000          .          
Kus .EU.3         1.0000         1.0000         1.0000          .          
Kus .IE.1         1.0000         1.0000         1.0000          .          
Kus .IE.2         1.0000         1.0000         1.0000          .          
Kus .IE.3         1.0000         1.0000         1.0000          .          
Kus .PA.1         1.0000         1.0000         1.0000          .          
Kus .PA.2         1.0000         1.0000         1.0000          .          
Kus .PA.3         1.0000         1.0000         1.0000          .          
Kus .KI.1         1.0000         1.0000         1.0000          .          
Kus .KI.2         1.0000         1.0000         1.0000          .          
Kus .KI.3         1.0000         1.0000         1.0000          .          
Kos .EU.1         1.0000         1.0000         1.0000          .          
Kos .EU.2         1.0000         1.0000         1.0000          .          
Kos .EU.3         1.0000         1.0000         1.0000          .          
Kos .IE.1         1.0000         1.0000         1.0000          .          
Kos .IE.2         1.0000         1.0000         1.0000          .          
Kos .IE.3         1.0000         1.0000         1.0000          .          
Kos .PA.1         1.0000         1.0000         1.0000          .          
Kos .PA.2         1.0000         1.0000         1.0000          .          
Kos .PA.3         1.0000         1.0000         1.0000          .          
Kos .KI.1         1.0000         1.0000         1.0000          .          
Kos .KI.2         1.0000         1.0000         1.0000          .          
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 23:25:38 Page 104
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 433


     EQU Barges_sell  ensure we only pick one value  n for barges for each product to each city

                 LOWER          LEVEL          UPPER         MARGINAL

Kos .KI.3         1.0000         1.0000         1.0000          .          
Kuv .EU.1         1.0000         1.0000         1.0000          .          
Kuv .EU.2         1.0000         1.0000         1.0000          .          
Kuv .EU.3         1.0000         1.0000         1.0000          .          
Kuv .IE.1         1.0000         1.0000         1.0000          .          
Kuv .IE.2         1.0000         1.0000         1.0000          .          
Kuv .IE.3         1.0000         1.0000         1.0000          .          
Kuv .PA.1         1.0000         1.0000         1.0000          .          
Kuv .PA.2         1.0000         1.0000         1.0000          .          
Kuv .PA.3         1.0000         1.0000         1.0000          .          
Kuv .KI.1         1.0000         1.0000         1.0000          .          
Kuv .KI.2         1.0000         1.0000         1.0000          .          
Kuv .KI.3         1.0000         1.0000         1.0000          .          
Kov .EU.1         1.0000         1.0000         1.0000          .          
Kov .EU.2         1.0000         1.0000         1.0000          .          
Kov .EU.3         1.0000         1.0000         1.0000          .          
Kov .IE.1         1.0000         1.0000         1.0000          .          
Kov .IE.2         1.0000         1.0000         1.0000          .          
Kov .IE.3         1.0000         1.0000         1.0000          .          
Kov .PA.1         1.0000         1.0000         1.0000          .          
Kov .PA.2         1.0000         1.0000         1.0000          .          
Kov .PA.3         1.0000         1.0000         1.0000          .          
Kov .KI.1         1.0000         1.0000         1.0000          .          
Kov .KI.2         1.0000         1.0000         1.0000          .          
Kov .KI.3         1.0000         1.0000         1.0000          .          
Hsel.EU.1         1.0000         1.0000         1.0000          .          
Hsel.EU.2         1.0000         1.0000         1.0000          .          
Hsel.EU.3         1.0000         1.0000         1.0000          .          
Hsel.IE.1         1.0000         1.0000         1.0000          .          
Hsel.IE.2         1.0000         1.0000         1.0000          .          
Hsel.IE.3         1.0000         1.0000         1.0000          .          
Hsel.PA.1         1.0000         1.0000         1.0000          .          
Hsel.PA.2         1.0000         1.0000         1.0000          .          
Hsel.PA.3         1.0000         1.0000         1.0000          .          
Hsel.KI.1         1.0000         1.0000         1.0000          .          
Hsel.KI.2         1.0000         1.0000         1.0000          .          
Hsel.KI.3         1.0000         1.0000         1.0000          .          
Lsel.EU.1         1.0000         1.0000         1.0000          .          
Lsel.EU.2         1.0000         1.0000         1.0000          .          
Lsel.EU.3         1.0000         1.0000         1.0000          .          
Lsel.IE.1         1.0000         1.0000         1.0000          .          
Lsel.IE.2         1.0000         1.0000         1.0000          .          
Lsel.IE.3         1.0000         1.0000         1.0000          .          
Lsel.PA.1         1.0000         1.0000         1.0000          .          
Lsel.PA.2         1.0000         1.0000         1.0000          .          
Lsel.PA.3         1.0000         1.0000         1.0000          .          
Lsel.KI.1         1.0000         1.0000         1.0000          .          
Lsel.KI.2         1.0000         1.0000         1.0000          .          
Lsel.KI.3         1.0000         1.0000         1.0000          .          
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 23:25:38 Page 105
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 433


     EQU Barges_sell  ensure we only pick one value  n for barges for each product to each city

                 LOWER          LEVEL          UPPER         MARGINAL

Pap .EU.1         1.0000         1.0000         1.0000          .          
Pap .EU.2         1.0000         1.0000         1.0000          .          
Pap .EU.3         1.0000         1.0000         1.0000          .          
Pap .IE.1         1.0000         1.0000         1.0000          .          
Pap .IE.2         1.0000         1.0000         1.0000          .          
Pap .IE.3         1.0000         1.0000         1.0000          .          
Pap .PA.1         1.0000         1.0000         1.0000          .          
Pap .PA.2         1.0000         1.0000         1.0000          .          
Pap .PA.3         1.0000         1.0000         1.0000          .          
Pap .KI.1         1.0000         1.0000         1.0000          .          
Pap .KI.2         1.0000         1.0000         1.0000          .          
Pap .KI.3         1.0000         1.0000         1.0000          .          

---- EQU Capacity1  Capacity goes up if we produce over the capacity

               LOWER          LEVEL          UPPER         MARGINAL

Pap  .1          .              .            +INF            EPS         
Pap  .2          .              .            +INF           -0.7000      
Pap  .3          .              .            +INF           -0.7000      
SAW  .1          .              .            +INF            EPS         
SAW  .2          .              .            +INF           -0.1000      
SAW  .3          .              .            +INF           -0.1000      
PLY  .1          .              .            +INF            EPS         
PLY  .2          .              .            +INF           -0.3000      
PLY  .3          .              .            +INF           -0.3000      
SPULP.1          .              .            +INF            EPS         
SPULP.2          .              .            +INF           -0.5000      
SPULP.3          .              .            +INF           -0.5000      
HPULP.1          .              .            +INF            EPS         
HPULP.2          .              .            +INF           -0.5000      
HPULP.3          .              .            +INF           -0.5000      

---- EQU MaxCapacity  Make sure we dont go over the maximum capacity

               LOWER          LEVEL          UPPER         MARGINAL

Pap  .1        -INF        80000.0000    160000.0000          .          
Pap  .2        -INF       144900.0000    160000.0000          .          
Pap  .3        -INF        74986.0000    160000.0000          .          
SAW  .1        -INF        70000.0000    150000.0000          .          
SAW  .2        -INF        40400.0000    150000.0000          .          
SAW  .3        -INF        40906.0000    150000.0000          .          
PLY  .1        -INF        80000.0000    135000.0000          .          
PLY  .2        -INF        91450.0000    135000.0000          .          
PLY  .3        -INF        51613.0000    135000.0000          .          
SPULP.1        -INF        76000.0000    200000.0000          .          
SPULP.2        -INF        28980.0000    200000.0000          .          
SPULP.3        -INF        14998.0000    200000.0000          .          
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 23:25:38 Page 106
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 433


     EQU MaxCapacity  Make sure we dont go over the maximum capacity

               LOWER          LEVEL          UPPER         MARGINAL

HPULP.1        -INF       146000.0000    300000.0000          .          
HPULP.2        -INF        78980.0000    300000.0000          .          
HPULP.3        -INF        54998.0000    300000.0000          .          

---- EQU CapStart  Make sure the starting capacity is right

               LOWER          LEVEL          UPPER         MARGINAL

Pap  .1        -INF        80000.0000     80000.0000          .          
Pap  .2        -INF        80000.0000     80000.0000          .          
Pap  .3        -INF        80000.0000     80000.0000          .          
SAW  .1        -INF        70000.0000    100000.0000          .          
SAW  .2        -INF        70000.0000    100000.0000          .          
SAW  .3        -INF        70000.0000    100000.0000          .          
PLY  .1        -INF        80000.0000     90000.0000          .          
PLY  .2        -INF        80000.0000     90000.0000          .          
PLY  .3        -INF        80000.0000     90000.0000          .          
SPULP.1        -INF        76000.0000    100000.0000          .          
SPULP.2        -INF        76000.0000    100000.0000          .          
SPULP.3        -INF        76000.0000    100000.0000          .          
HPULP.1        -INF       146000.0000    150000.0000          .          
HPULP.2        -INF       146000.0000    150000.0000          .          
HPULP.3        -INF       146000.0000    150000.0000          .          

---- EQU PAP_HSEL  Proportion needed of HSEL for PAP

         LOWER          LEVEL          UPPER         MARGINAL

1        -INF       -60000.0000          .              .          
2        -INF             .              .              .          
3        -INF           -0.8000          .              .          

---- EQU PAP_LSEL  Proportion needed of LSEL for PAP

         LOWER          LEVEL          UPPER         MARGINAL

1        -INF      -130000.0000          .              .          
2        -INF       -50000.0000          .              .          
3        -INF       -40000.8000          .              .          

---- EQU PULP_Bal  Cant produce paper without pulp

              LOWER          LEVEL          UPPER         MARGINAL

Hsel.1        -INF             .              .              .          
Hsel.2        -INF             .              .              .          
Hsel.3        -INF           -0.8000          .              .          
Lsel.1        -INF             .              .              .          
Lsel.2        -INF             .              .              .          
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 23:25:38 Page 107
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 433


     EQU PULP_Bal  Cant produce paper without pulp

              LOWER          LEVEL          UPPER         MARGINAL

Lsel.3        -INF           -0.8000          .              .          

---- EQU PROFIT  Profit is what we gain minus what we spend

         LOWER          LEVEL          UPPER         MARGINAL

1          .              .              .             1.0000      
2          .              .              .             1.0000      
3          .              .              .             1.0000      

                           LOWER          LEVEL          UPPER         MARGINAL

---- VAR z                 -INF       544908.1618        +INF             .          

  z  the objective

---- VAR y  Cubic meters produced of product j

              LOWER          LEVEL          UPPER         MARGINAL

Mas .1          .         70000.0000   1060000.0000        -0.7780      
Mas .2          .         40400.0000   1060000.0000        -0.8780      
Mas .3          .         30603.0000   1060000.0000        -0.8780      
Kus .1          .              .       1060000.0000        -0.7920      
Kus .2          .              .       1060000.0000        -0.7720      
Kus .3          .              .       1060000.0000        -0.7720      
Kos .1          .              .       1060000.0000        -0.5620      
Kos .2          .              .       1060000.0000        -0.6620      
Kos .3          .         10303.0000   1060000.0000        -0.6620      
Kuv .1          .         50000.0000   1060000.0000        -2.9120      
Kuv .2          .         71050.0000   1060000.0000        -2.9720      
Kuv .3          .         41209.0000   1060000.0000        -2.9720      
Kov .1          .         30000.0000   1060000.0000        -2.6880      
Kov .2          .         20400.0000   1060000.0000        -2.9880      
Kov .3          .         10404.0000   1060000.0000        -2.9880      
Hsel.1          .         76000.0000   1060000.0000        -1.6840      
Hsel.2          .         28980.0000   1060000.0000        -2.1840      
Hsel.3          .         14998.0000   1060000.0000        -2.1840      
Lsel.1          .        146000.0000   1060000.0000        -1.4300      
Lsel.2          .         78980.0000   1060000.0000        -1.9300      
Lsel.3          .         54998.0000   1060000.0000        -1.9300      
Pap .1          .         80000.0000   1060000.0000        -1.7000      
Pap .2          .        144900.0000   1060000.0000        -2.5500      
Pap .3          .         74986.0000   1060000.0000        -2.5500      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 23:25:38 Page 108
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 433


---- VAR s  amount of timber i used to make products

             LOWER          LEVEL          UPPER         MARGINAL

Mat.1          .        140000.0000        +INF             .          
Mat.2          .         80800.0000        +INF             .          
Mat.3          .         61206.0000        +INF             .          
Kut.1          .        140000.0000        +INF             .          
Kut.2          .        198940.0000        +INF             .          
Kut.3          .        115385.2000        +INF             .          
Kot.1          .         84000.0000        +INF             .          
Kot.2          .         57120.0000        +INF             .          
Kot.3          .         49737.2000        +INF             .          
Mak.1          .        308800.0000        +INF             .          
Mak.2          .        106784.0000        +INF             .          
Mak.3          .         47508.0000        +INF             .          
Kuk.1          .              .            +INF           -0.1500      
Kuk.2          .         31220.0000        +INF             .          
Kuk.3          .          9051.6000        +INF             .          
Kok.1          .        565200.0000        +INF             .          
Kok.2          .        299076.0000        +INF             .          
Kok.3          .        206102.8000        +INF             .          

---- VAR r  1 if we buy n boats of timber i, 0 otherwise

                 LOWER          LEVEL          UPPER         MARGINAL

1  .Mat.1          .              .             1.0000         EPS         
1  .Mat.2          .              .             1.0000         EPS         
1  .Mat.3          .              .             1.0000         EPS         
1  .Kut.1          .              .             1.0000         EPS         
1  .Kut.2          .              .             1.0000         EPS         
1  .Kut.3          .              .             1.0000         EPS         
1  .Kot.1          .              .             1.0000         EPS         
1  .Kot.2          .              .             1.0000         EPS         
1  .Kot.3          .              .             1.0000         EPS         
1  .Mak.1          .              .             1.0000         EPS         
1  .Mak.2          .              .             1.0000         EPS         
1  .Mak.3          .              .             1.0000         EPS         
1  .Kuk.1          .             1.0000         1.0000         EPS         
1  .Kuk.2          .              .             1.0000         EPS         
1  .Kuk.3          .              .             1.0000         EPS         
1  .Kok.1          .              .             1.0000         EPS         
1  .Kok.2          .              .             1.0000         EPS         
1  .Kok.3          .              .             1.0000         EPS         
2  .Mat.1          .              .             1.0000      -100.0000      
2  .Mat.2          .              .             1.0000      -100.0000      
2  .Mat.3          .              .             1.0000      -100.0000      
2  .Kut.1          .              .             1.0000       -50.0000      
2  .Kut.2          .              .             1.0000       -50.0000      
2  .Kut.3          .              .             1.0000       -50.0000      
2  .Kot.1          .              .             1.0000      -300.0000      
2  .Kot.2          .              .             1.0000      -300.0000      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 23:25:38 Page 109
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 433


     VAR r  1 if we buy n boats of timber i, 0 otherwise

                 LOWER          LEVEL          UPPER         MARGINAL

2  .Kot.3          .              .             1.0000      -300.0000      
2  .Mak.1          .              .             1.0000       -20.0000      
2  .Mak.2          .              .             1.0000       -20.0000      
2  .Mak.3          .              .             1.0000       -20.0000      
2  .Kuk.1          .              .             1.0000       -30.0000      
2  .Kuk.2          .              .             1.0000       -30.0000      
2  .Kuk.3          .             1.0000         1.0000       -30.0000      
2  .Kok.1          .              .             1.0000       -20.0000      
2  .Kok.2          .              .             1.0000       -20.0000      
2  .Kok.3          .              .             1.0000       -20.0000      
3  .Mat.1          .              .             1.0000      -400.0000      
3  .Mat.2          .              .             1.0000      -400.0000      
3  .Mat.3          .              .             1.0000      -400.0000      
3  .Kut.1          .              .             1.0000      -200.0000      
3  .Kut.2          .              .             1.0000      -200.0000      
3  .Kut.3          .              .             1.0000      -200.0000      
3  .Kot.1          .              .             1.0000     -1200.0000      
3  .Kot.2          .              .             1.0000     -1200.0000      
3  .Kot.3          .              .             1.0000     -1200.0000      
3  .Mak.1          .              .             1.0000       -80.0000      
3  .Mak.2          .              .             1.0000       -80.0000      
3  .Mak.3          .              .             1.0000       -80.0000      
3  .Kuk.1          .              .             1.0000      -120.0000      
3  .Kuk.2          .              .             1.0000      -120.0000      
3  .Kuk.3          .              .             1.0000      -120.0000      
3  .Kok.1          .              .             1.0000       -80.0000      
3  .Kok.2          .              .             1.0000       -80.0000      
3  .Kok.3          .              .             1.0000       -80.0000      
4  .Mat.1          .              .             1.0000      -900.0000      
4  .Mat.2          .              .             1.0000      -900.0000      
4  .Mat.3          .              .             1.0000      -900.0000      
4  .Kut.1          .              .             1.0000      -450.0000      
4  .Kut.2          .              .             1.0000      -450.0000      
4  .Kut.3          .              .             1.0000      -450.0000      
4  .Kot.1          .              .             1.0000     -2700.0000      
4  .Kot.2          .              .             1.0000     -2700.0000      
4  .Kot.3          .              .             1.0000     -2700.0000      
4  .Mak.1          .              .             1.0000      -180.0000      
4  .Mak.2          .              .             1.0000      -180.0000      
4  .Mak.3          .              .             1.0000      -180.0000      
4  .Kuk.1          .              .             1.0000      -270.0000      
4  .Kuk.2          .              .             1.0000      -270.0000      
4  .Kuk.3          .              .             1.0000      -270.0000      
4  .Kok.1          .              .             1.0000      -180.0000      
4  .Kok.2          .              .             1.0000      -180.0000      
4  .Kok.3          .              .             1.0000      -180.0000      
5  .Mat.1          .              .             1.0000     -1600.0000      
5  .Mat.2          .              .             1.0000     -1600.0000      
5  .Mat.3          .              .             1.0000     -1600.0000      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 23:25:38 Page 110
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 433


     VAR r  1 if we buy n boats of timber i, 0 otherwise

                 LOWER          LEVEL          UPPER         MARGINAL

5  .Kut.1          .              .             1.0000      -800.0000      
5  .Kut.2          .              .             1.0000      -800.0000      
5  .Kut.3          .              .             1.0000      -800.0000      
5  .Kot.1          .              .             1.0000     -4800.0000      
5  .Kot.2          .              .             1.0000     -4800.0000      
5  .Kot.3          .              .             1.0000     -4800.0000      
5  .Mak.1          .              .             1.0000      -320.0000      
5  .Mak.2          .              .             1.0000      -320.0000      
5  .Mak.3          .              .             1.0000      -320.0000      
5  .Kuk.1          .              .             1.0000      -480.0000      
5  .Kuk.2          .             1.0000         1.0000      -480.0000      
5  .Kuk.3          .              .             1.0000      -480.0000      
5  .Kok.1          .              .             1.0000      -320.0000      
5  .Kok.2          .              .             1.0000      -320.0000      
5  .Kok.3          .              .             1.0000      -320.0000      
6  .Mat.1          .              .             1.0000     -2500.0000      
6  .Mat.2          .              .             1.0000     -2500.0000      
6  .Mat.3          .              .             1.0000     -2500.0000      
6  .Kut.1          .              .             1.0000     -1250.0000      
6  .Kut.2          .              .             1.0000     -1250.0000      
6  .Kut.3          .              .             1.0000     -1250.0000      
6  .Kot.1          .              .             1.0000     -7500.0000      
6  .Kot.2          .              .             1.0000     -7500.0000      
6  .Kot.3          .             1.0000         1.0000     -7500.0000      
6  .Mak.1          .              .             1.0000      -500.0000      
6  .Mak.2          .              .             1.0000      -500.0000      
6  .Mak.3          .             1.0000         1.0000      -500.0000      
6  .Kuk.1          .              .             1.0000      -750.0000      
6  .Kuk.2          .              .             1.0000      -750.0000      
6  .Kuk.3          .              .             1.0000      -750.0000      
6  .Kok.1          .              .             1.0000      -500.0000      
6  .Kok.2          .              .             1.0000      -500.0000      
6  .Kok.3          .              .             1.0000      -500.0000      
7  .Mat.1          .              .             1.0000     -3600.0000      
7  .Mat.2          .              .             1.0000     -3600.0000      
7  .Mat.3          .              .             1.0000     -3600.0000      
7  .Kut.1          .              .             1.0000     -1800.0000      
7  .Kut.2          .              .             1.0000     -1800.0000      
7  .Kut.3          .              .             1.0000     -1800.0000      
7  .Kot.1          .              .             1.0000    -10800.0000      
7  .Kot.2          .             1.0000         1.0000    -10800.0000      
7  .Kot.3          .              .             1.0000    -10800.0000      
7  .Mak.1          .              .             1.0000      -720.0000      
7  .Mak.2          .              .             1.0000      -720.0000      
7  .Mak.3          .              .             1.0000      -720.0000      
7  .Kuk.1          .              .             1.0000     -1080.0000      
7  .Kuk.2          .              .             1.0000     -1080.0000      
7  .Kuk.3          .              .             1.0000     -1080.0000      
7  .Kok.1          .              .             1.0000      -720.0000      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 23:25:38 Page 111
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 433


     VAR r  1 if we buy n boats of timber i, 0 otherwise

                 LOWER          LEVEL          UPPER         MARGINAL

7  .Kok.2          .              .             1.0000      -720.0000      
7  .Kok.3          .              .             1.0000      -720.0000      
8  .Mat.1          .              .             1.0000     -4900.0000      
8  .Mat.2          .              .             1.0000     -4900.0000      
8  .Mat.3          .             1.0000         1.0000     -4900.0000      
8  .Kut.1          .              .             1.0000     -2450.0000      
8  .Kut.2          .              .             1.0000     -2450.0000      
8  .Kut.3          .              .             1.0000     -2450.0000      
8  .Kot.1          .              .             1.0000    -14700.0000      
8  .Kot.2          .              .             1.0000    -14700.0000      
8  .Kot.3          .              .             1.0000    -14700.0000      
8  .Mak.1          .              .             1.0000      -980.0000      
8  .Mak.2          .              .             1.0000      -980.0000      
8  .Mak.3          .              .             1.0000      -980.0000      
8  .Kuk.1          .              .             1.0000     -1470.0000      
8  .Kuk.2          .              .             1.0000     -1470.0000      
8  .Kuk.3          .              .             1.0000     -1470.0000      
8  .Kok.1          .              .             1.0000      -980.0000      
8  .Kok.2          .              .             1.0000      -980.0000      
8  .Kok.3          .              .             1.0000      -980.0000      
9  .Mat.1          .              .             1.0000     -6400.0000      
9  .Mat.2          .              .             1.0000     -6400.0000      
9  .Mat.3          .              .             1.0000     -6400.0000      
9  .Kut.1          .              .             1.0000     -3200.0000      
9  .Kut.2          .              .             1.0000     -3200.0000      
9  .Kut.3          .              .             1.0000     -3200.0000      
9  .Kot.1          .              .             1.0000    -19200.0000      
9  .Kot.2          .              .             1.0000    -19200.0000      
9  .Kot.3          .              .             1.0000    -19200.0000      
9  .Mak.1          .              .             1.0000     -1280.0000      
9  .Mak.2          .              .             1.0000     -1280.0000      
9  .Mak.3          .              .             1.0000     -1280.0000      
9  .Kuk.1          .              .             1.0000     -1920.0000      
9  .Kuk.2          .              .             1.0000     -1920.0000      
9  .Kuk.3          .              .             1.0000     -1920.0000      
9  .Kok.1          .              .             1.0000     -1280.0000      
9  .Kok.2          .              .             1.0000     -1280.0000      
9  .Kok.3          .              .             1.0000     -1280.0000      
10 .Mat.1          .              .             1.0000     -8100.0000      
10 .Mat.2          .             1.0000         1.0000     -8100.0000      
10 .Mat.3          .              .             1.0000     -8100.0000      
10 .Kut.1          .              .             1.0000     -4050.0000      
10 .Kut.2          .              .             1.0000     -4050.0000      
10 .Kut.3          .              .             1.0000     -4050.0000      
10 .Kot.1          .             1.0000         1.0000    -24300.0000      
10 .Kot.2          .              .             1.0000    -24300.0000      
10 .Kot.3          .              .             1.0000    -24300.0000      
10 .Mak.1          .              .             1.0000     -1620.0000      
10 .Mak.2          .              .             1.0000     -1620.0000      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 23:25:38 Page 112
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 433


     VAR r  1 if we buy n boats of timber i, 0 otherwise

                 LOWER          LEVEL          UPPER         MARGINAL

10 .Mak.3          .              .             1.0000     -1620.0000      
10 .Kuk.1          .              .             1.0000     -2430.0000      
10 .Kuk.2          .              .             1.0000     -2430.0000      
10 .Kuk.3          .              .             1.0000     -2430.0000      
10 .Kok.1          .              .             1.0000     -1620.0000      
10 .Kok.2          .              .             1.0000     -1620.0000      
10 .Kok.3          .              .             1.0000     -1620.0000      
11 .Mat.1          .              .             1.0000    -10000.0000      
11 .Mat.2          .              .             1.0000    -10000.0000      
11 .Mat.3          .              .             1.0000    -10000.0000      
11 .Kut.1          .              .             1.0000     -5000.0000      
11 .Kut.2          .              .             1.0000     -5000.0000      
11 .Kut.3          .              .             1.0000     -5000.0000      
11 .Kot.1          .              .             1.0000    -30000.0000      
11 .Kot.2          .              .             1.0000    -30000.0000      
11 .Kot.3          .              .             1.0000    -30000.0000      
11 .Mak.1          .              .             1.0000     -2000.0000      
11 .Mak.2          .              .             1.0000     -2000.0000      
11 .Mak.3          .              .             1.0000     -2000.0000      
11 .Kuk.1          .              .             1.0000     -3000.0000      
11 .Kuk.2          .              .             1.0000     -3000.0000      
11 .Kuk.3          .              .             1.0000     -3000.0000      
11 .Kok.1          .              .             1.0000     -2000.0000      
11 .Kok.2          .              .             1.0000     -2000.0000      
11 .Kok.3          .              .             1.0000     -2000.0000      
12 .Mat.1          .              .             1.0000    -12100.0000      
12 .Mat.2          .              .             1.0000    -12100.0000      
12 .Mat.3          .              .             1.0000    -12100.0000      
12 .Kut.1          .              .             1.0000     -6050.0000      
12 .Kut.2          .              .             1.0000     -6050.0000      
12 .Kut.3          .              .             1.0000     -6050.0000      
12 .Kot.1          .              .             1.0000    -36300.0000      
12 .Kot.2          .              .             1.0000    -36300.0000      
12 .Kot.3          .              .             1.0000    -36300.0000      
12 .Mak.1          .              .             1.0000     -2420.0000      
12 .Mak.2          .             1.0000         1.0000     -2420.0000      
12 .Mak.3          .              .             1.0000     -2420.0000      
12 .Kuk.1          .              .             1.0000     -3630.0000      
12 .Kuk.2          .              .             1.0000     -3630.0000      
12 .Kuk.3          .              .             1.0000     -3630.0000      
12 .Kok.1          .              .             1.0000     -2420.0000      
12 .Kok.2          .              .             1.0000     -2420.0000      
12 .Kok.3          .              .             1.0000     -2420.0000      
13 .Mat.1          .              .             1.0000    -14400.0000      
13 .Mat.2          .              .             1.0000    -14400.0000      
13 .Mat.3          .              .             1.0000    -14400.0000      
13 .Kut.1          .              .             1.0000     -7200.0000      
13 .Kut.2          .              .             1.0000     -7200.0000      
13 .Kut.3          .             1.0000         1.0000     -7200.0000      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 23:25:38 Page 113
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 433


     VAR r  1 if we buy n boats of timber i, 0 otherwise

                 LOWER          LEVEL          UPPER         MARGINAL

13 .Kot.1          .              .             1.0000    -43200.0000      
13 .Kot.2          .              .             1.0000    -43200.0000      
13 .Kot.3          .              .             1.0000    -43200.0000      
13 .Mak.1          .              .             1.0000     -2880.0000      
13 .Mak.2          .              .             1.0000     -2880.0000      
13 .Mak.3          .              .             1.0000     -2880.0000      
13 .Kuk.1          .              .             1.0000     -4320.0000      
13 .Kuk.2          .              .             1.0000     -4320.0000      
13 .Kuk.3          .              .             1.0000     -4320.0000      
13 .Kok.1          .              .             1.0000     -2880.0000      
13 .Kok.2          .              .             1.0000     -2880.0000      
13 .Kok.3          .              .             1.0000     -2880.0000      
14 .Mat.1          .              .             1.0000    -16900.0000      
14 .Mat.2          .              .             1.0000    -16900.0000      
14 .Mat.3          .              .             1.0000    -16900.0000      
14 .Kut.1          .              .             1.0000     -8450.0000      
14 .Kut.2          .              .             1.0000     -8450.0000      
14 .Kut.3          .              .             1.0000     -8450.0000      
14 .Kot.1          .              .             1.0000    -50700.0000      
14 .Kot.2          .              .             1.0000    -50700.0000      
14 .Kot.3          .              .             1.0000    -50700.0000      
14 .Mak.1          .              .             1.0000     -3380.0000      
14 .Mak.2          .              .             1.0000     -3380.0000      
14 .Mak.3          .              .             1.0000     -3380.0000      
14 .Kuk.1          .              .             1.0000     -5070.0000      
14 .Kuk.2          .              .             1.0000     -5070.0000      
14 .Kuk.3          .              .             1.0000     -5070.0000      
14 .Kok.1          .              .             1.0000     -3380.0000      
14 .Kok.2          .              .             1.0000     -3380.0000      
14 .Kok.3          .              .             1.0000     -3380.0000      
15 .Mat.1          .             1.0000         1.0000    -19600.0000      
15 .Mat.2          .              .             1.0000    -19600.0000      
15 .Mat.3          .              .             1.0000    -19600.0000      
15 .Kut.1          .             1.0000         1.0000     -9800.0000      
15 .Kut.2          .              .             1.0000     -9800.0000      
15 .Kut.3          .              .             1.0000     -9800.0000      
15 .Kot.1          .              .             1.0000    -58800.0000      
15 .Kot.2          .              .             1.0000    -58800.0000      
15 .Kot.3          .              .             1.0000    -58800.0000      
15 .Mak.1          .              .             1.0000     -3920.0000      
15 .Mak.2          .              .             1.0000     -3920.0000      
15 .Mak.3          .              .             1.0000     -3920.0000      
15 .Kuk.1          .              .             1.0000     -5880.0000      
15 .Kuk.2          .              .             1.0000     -5880.0000      
15 .Kuk.3          .              .             1.0000     -5880.0000      
15 .Kok.1          .              .             1.0000     -3920.0000      
15 .Kok.2          .              .             1.0000     -3920.0000      
15 .Kok.3          .              .             1.0000     -3920.0000      
16 .Mat.1          .              .             1.0000    -22500.0000      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 23:25:38 Page 114
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 433


     VAR r  1 if we buy n boats of timber i, 0 otherwise

                 LOWER          LEVEL          UPPER         MARGINAL

16 .Mat.2          .              .             1.0000    -22500.0000      
16 .Mat.3          .              .             1.0000    -22500.0000      
16 .Kut.1          .              .             1.0000    -11250.0000      
16 .Kut.2          .              .             1.0000    -11250.0000      
16 .Kut.3          .              .             1.0000    -11250.0000      
16 .Kot.1          .              .             1.0000    -67500.0000      
16 .Kot.2          .              .             1.0000    -67500.0000      
16 .Kot.3          .              .             1.0000    -67500.0000      
16 .Mak.1          .              .             1.0000     -4500.0000      
16 .Mak.2          .              .             1.0000     -4500.0000      
16 .Mak.3          .              .             1.0000     -4500.0000      
16 .Kuk.1          .              .             1.0000     -6750.0000      
16 .Kuk.2          .              .             1.0000     -6750.0000      
16 .Kuk.3          .              .             1.0000     -6750.0000      
16 .Kok.1          .              .             1.0000     -4500.0000      
16 .Kok.2          .              .             1.0000     -4500.0000      
16 .Kok.3          .              .             1.0000     -4500.0000      
17 .Mat.1          .              .             1.0000    -25600.0000      
17 .Mat.2          .              .             1.0000    -25600.0000      
17 .Mat.3          .              .             1.0000    -25600.0000      
17 .Kut.1          .              .             1.0000    -12800.0000      
17 .Kut.2          .              .             1.0000    -12800.0000      
17 .Kut.3          .              .             1.0000    -12800.0000      
17 .Kot.1          .              .             1.0000    -76800.0000      
17 .Kot.2          .              .             1.0000    -76800.0000      
17 .Kot.3          .              .             1.0000    -76800.0000      
17 .Mak.1          .              .             1.0000     -5120.0000      
17 .Mak.2          .              .             1.0000     -5120.0000      
17 .Mak.3          .              .             1.0000     -5120.0000      
17 .Kuk.1          .              .             1.0000     -7680.0000      
17 .Kuk.2          .              .             1.0000     -7680.0000      
17 .Kuk.3          .              .             1.0000     -7680.0000      
17 .Kok.1          .              .             1.0000     -5120.0000      
17 .Kok.2          .              .             1.0000     -5120.0000      
17 .Kok.3          .              .             1.0000     -5120.0000      
18 .Mat.1          .              .             1.0000    -28900.0000      
18 .Mat.2          .              .             1.0000    -28900.0000      
18 .Mat.3          .              .             1.0000    -28900.0000      
18 .Kut.1          .              .             1.0000    -14450.0000      
18 .Kut.2          .              .             1.0000    -14450.0000      
18 .Kut.3          .              .             1.0000    -14450.0000      
18 .Kot.1          .              .             1.0000    -86700.0000      
18 .Kot.2          .              .             1.0000    -86700.0000      
18 .Kot.3          .              .             1.0000    -86700.0000      
18 .Mak.1          .              .             1.0000     -5780.0000      
18 .Mak.2          .              .             1.0000     -5780.0000      
18 .Mak.3          .              .             1.0000     -5780.0000      
18 .Kuk.1          .              .             1.0000     -8670.0000      
18 .Kuk.2          .              .             1.0000     -8670.0000      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 23:25:38 Page 115
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 433


     VAR r  1 if we buy n boats of timber i, 0 otherwise

                 LOWER          LEVEL          UPPER         MARGINAL

18 .Kuk.3          .              .             1.0000     -8670.0000      
18 .Kok.1          .              .             1.0000     -5780.0000      
18 .Kok.2          .              .             1.0000     -5780.0000      
18 .Kok.3          .              .             1.0000     -5780.0000      
19 .Mat.1          .              .             1.0000    -32400.0000      
19 .Mat.2          .              .             1.0000    -32400.0000      
19 .Mat.3          .              .             1.0000    -32400.0000      
19 .Kut.1          .              .             1.0000    -16200.0000      
19 .Kut.2          .              .             1.0000    -16200.0000      
19 .Kut.3          .              .             1.0000    -16200.0000      
19 .Kot.1          .              .             1.0000    -97200.0000      
19 .Kot.2          .              .             1.0000    -97200.0000      
19 .Kot.3          .              .             1.0000    -97200.0000      
19 .Mak.1          .              .             1.0000     -6480.0000      
19 .Mak.2          .              .             1.0000     -6480.0000      
19 .Mak.3          .              .             1.0000     -6480.0000      
19 .Kuk.1          .              .             1.0000     -9720.0000      
19 .Kuk.2          .              .             1.0000     -9720.0000      
19 .Kuk.3          .              .             1.0000     -9720.0000      
19 .Kok.1          .              .             1.0000     -6480.0000      
19 .Kok.2          .              .             1.0000     -6480.0000      
19 .Kok.3          .              .             1.0000     -6480.0000      
20 .Mat.1          .              .             1.0000    -36100.0000      
20 .Mat.2          .              .             1.0000    -36100.0000      
20 .Mat.3          .              .             1.0000    -36100.0000      
20 .Kut.1          .              .             1.0000    -18050.0000      
20 .Kut.2          .              .             1.0000    -18050.0000      
20 .Kut.3          .              .             1.0000    -18050.0000      
20 .Kot.1          .              .             1.0000   -108300.0000      
20 .Kot.2          .              .             1.0000   -108300.0000      
20 .Kot.3          .              .             1.0000   -108300.0000      
20 .Mak.1          .              .             1.0000     -7220.0000      
20 .Mak.2          .              .             1.0000     -7220.0000      
20 .Mak.3          .              .             1.0000     -7220.0000      
20 .Kuk.1          .              .             1.0000    -10830.0000      
20 .Kuk.2          .              .             1.0000    -10830.0000      
20 .Kuk.3          .              .             1.0000    -10830.0000      
20 .Kok.1          .              .             1.0000     -7220.0000      
20 .Kok.2          .              .             1.0000     -7220.0000      
20 .Kok.3          .              .             1.0000     -7220.0000      
21 .Mat.1          .              .             1.0000    -40000.0000      
21 .Mat.2          .              .             1.0000    -40000.0000      
21 .Mat.3          .              .             1.0000    -40000.0000      
21 .Kut.1          .              .             1.0000    -20000.0000      
21 .Kut.2          .             1.0000         1.0000    -20000.0000      
21 .Kut.3          .              .             1.0000    -20000.0000      
21 .Kot.1          .              .             1.0000   -120000.0000      
21 .Kot.2          .              .             1.0000   -120000.0000      
21 .Kot.3          .              .             1.0000   -120000.0000      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 23:25:38 Page 116
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 433


     VAR r  1 if we buy n boats of timber i, 0 otherwise

                 LOWER          LEVEL          UPPER         MARGINAL

21 .Mak.1          .              .             1.0000     -8000.0000      
21 .Mak.2          .              .             1.0000     -8000.0000      
21 .Mak.3          .              .             1.0000     -8000.0000      
21 .Kuk.1          .              .             1.0000    -12000.0000      
21 .Kuk.2          .              .             1.0000    -12000.0000      
21 .Kuk.3          .              .             1.0000    -12000.0000      
21 .Kok.1          .              .             1.0000     -8000.0000      
21 .Kok.2          .              .             1.0000     -8000.0000      
21 .Kok.3          .              .             1.0000     -8000.0000      
22 .Mat.1          .              .             1.0000    -44100.0000      
22 .Mat.2          .              .             1.0000    -44100.0000      
22 .Mat.3          .              .             1.0000    -44100.0000      
22 .Kut.1          .              .             1.0000    -22050.0000      
22 .Kut.2          .              .             1.0000    -22050.0000      
22 .Kut.3          .              .             1.0000    -22050.0000      
22 .Kot.1          .              .             1.0000   -132300.0000      
22 .Kot.2          .              .             1.0000   -132300.0000      
22 .Kot.3          .              .             1.0000   -132300.0000      
22 .Mak.1          .              .             1.0000     -8820.0000      
22 .Mak.2          .              .             1.0000     -8820.0000      
22 .Mak.3          .              .             1.0000     -8820.0000      
22 .Kuk.1          .              .             1.0000    -13230.0000      
22 .Kuk.2          .              .             1.0000    -13230.0000      
22 .Kuk.3          .              .             1.0000    -13230.0000      
22 .Kok.1          .              .             1.0000     -8820.0000      
22 .Kok.2          .              .             1.0000     -8820.0000      
22 .Kok.3          .             1.0000         1.0000     -8820.0000      
23 .Mat.1          .              .             1.0000    -48400.0000      
23 .Mat.2          .              .             1.0000    -48400.0000      
23 .Mat.3          .              .             1.0000    -48400.0000      
23 .Kut.1          .              .             1.0000    -24200.0000      
23 .Kut.2          .              .             1.0000    -24200.0000      
23 .Kut.3          .              .             1.0000    -24200.0000      
23 .Kot.1          .              .             1.0000   -145200.0000      
23 .Kot.2          .              .             1.0000   -145200.0000      
23 .Kot.3          .              .             1.0000   -145200.0000      
23 .Mak.1          .              .             1.0000     -9680.0000      
23 .Mak.2          .              .             1.0000     -9680.0000      
23 .Mak.3          .              .             1.0000     -9680.0000      
23 .Kuk.1          .              .             1.0000    -14520.0000      
23 .Kuk.2          .              .             1.0000    -14520.0000      
23 .Kuk.3          .              .             1.0000    -14520.0000      
23 .Kok.1          .              .             1.0000     -9680.0000      
23 .Kok.2          .              .             1.0000     -9680.0000      
23 .Kok.3          .              .             1.0000     -9680.0000      
24 .Mat.1          .              .             1.0000    -52900.0000      
24 .Mat.2          .              .             1.0000    -52900.0000      
24 .Mat.3          .              .             1.0000    -52900.0000      
24 .Kut.1          .              .             1.0000    -26450.0000      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 23:25:38 Page 117
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 433


     VAR r  1 if we buy n boats of timber i, 0 otherwise

                 LOWER          LEVEL          UPPER         MARGINAL

24 .Kut.2          .              .             1.0000    -26450.0000      
24 .Kut.3          .              .             1.0000    -26450.0000      
24 .Kot.1          .              .             1.0000   -158700.0000      
24 .Kot.2          .              .             1.0000   -158700.0000      
24 .Kot.3          .              .             1.0000   -158700.0000      
24 .Mak.1          .              .             1.0000    -10580.0000      
24 .Mak.2          .              .             1.0000    -10580.0000      
24 .Mak.3          .              .             1.0000    -10580.0000      
24 .Kuk.1          .              .             1.0000    -15870.0000      
24 .Kuk.2          .              .             1.0000    -15870.0000      
24 .Kuk.3          .              .             1.0000    -15870.0000      
24 .Kok.1          .              .             1.0000    -10580.0000      
24 .Kok.2          .              .             1.0000    -10580.0000      
24 .Kok.3          .              .             1.0000    -10580.0000      
25 .Mat.1          .              .             1.0000    -57600.0000      
25 .Mat.2          .              .             1.0000    -57600.0000      
25 .Mat.3          .              .             1.0000    -57600.0000      
25 .Kut.1          .              .             1.0000    -28800.0000      
25 .Kut.2          .              .             1.0000    -28800.0000      
25 .Kut.3          .              .             1.0000    -28800.0000      
25 .Kot.1          .              .             1.0000   -172800.0000      
25 .Kot.2          .              .             1.0000   -172800.0000      
25 .Kot.3          .              .             1.0000   -172800.0000      
25 .Mak.1          .              .             1.0000    -11520.0000      
25 .Mak.2          .              .             1.0000    -11520.0000      
25 .Mak.3          .              .             1.0000    -11520.0000      
25 .Kuk.1          .              .             1.0000    -17280.0000      
25 .Kuk.2          .              .             1.0000    -17280.0000      
25 .Kuk.3          .              .             1.0000    -17280.0000      
25 .Kok.1          .              .             1.0000    -11520.0000      
25 .Kok.2          .              .             1.0000    -11520.0000      
25 .Kok.3          .              .             1.0000    -11520.0000      
26 .Mat.1          .              .             1.0000    -62500.0000      
26 .Mat.2          .              .             1.0000    -62500.0000      
26 .Mat.3          .              .             1.0000    -62500.0000      
26 .Kut.1          .              .             1.0000    -31250.0000      
26 .Kut.2          .              .             1.0000    -31250.0000      
26 .Kut.3          .              .             1.0000    -31250.0000      
26 .Kot.1          .              .             1.0000   -187500.0000      
26 .Kot.2          .              .             1.0000   -187500.0000      
26 .Kot.3          .              .             1.0000   -187500.0000      
26 .Mak.1          .              .             1.0000    -12500.0000      
26 .Mak.2          .              .             1.0000    -12500.0000      
26 .Mak.3          .              .             1.0000    -12500.0000      
26 .Kuk.1          .              .             1.0000    -18750.0000      
26 .Kuk.2          .              .             1.0000    -18750.0000      
26 .Kuk.3          .              .             1.0000    -18750.0000      
26 .Kok.1          .              .             1.0000    -12500.0000      
26 .Kok.2          .              .             1.0000    -12500.0000      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 23:25:38 Page 118
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 433


     VAR r  1 if we buy n boats of timber i, 0 otherwise

                 LOWER          LEVEL          UPPER         MARGINAL

26 .Kok.3          .              .             1.0000    -12500.0000      
27 .Mat.1          .              .             1.0000    -67600.0000      
27 .Mat.2          .              .             1.0000    -67600.0000      
27 .Mat.3          .              .             1.0000    -67600.0000      
27 .Kut.1          .              .             1.0000    -33800.0000      
27 .Kut.2          .              .             1.0000    -33800.0000      
27 .Kut.3          .              .             1.0000    -33800.0000      
27 .Kot.1          .              .             1.0000   -202800.0000      
27 .Kot.2          .              .             1.0000   -202800.0000      
27 .Kot.3          .              .             1.0000   -202800.0000      
27 .Mak.1          .              .             1.0000    -13520.0000      
27 .Mak.2          .              .             1.0000    -13520.0000      
27 .Mak.3          .              .             1.0000    -13520.0000      
27 .Kuk.1          .              .             1.0000    -20280.0000      
27 .Kuk.2          .              .             1.0000    -20280.0000      
27 .Kuk.3          .              .             1.0000    -20280.0000      
27 .Kok.1          .              .             1.0000    -13520.0000      
27 .Kok.2          .              .             1.0000    -13520.0000      
27 .Kok.3          .              .             1.0000    -13520.0000      
28 .Mat.1          .              .             1.0000    -72900.0000      
28 .Mat.2          .              .             1.0000    -72900.0000      
28 .Mat.3          .              .             1.0000    -72900.0000      
28 .Kut.1          .              .             1.0000    -36450.0000      
28 .Kut.2          .              .             1.0000    -36450.0000      
28 .Kut.3          .              .             1.0000    -36450.0000      
28 .Kot.1          .              .             1.0000   -218700.0000      
28 .Kot.2          .              .             1.0000   -218700.0000      
28 .Kot.3          .              .             1.0000   -218700.0000      
28 .Mak.1          .              .             1.0000    -14580.0000      
28 .Mak.2          .              .             1.0000    -14580.0000      
28 .Mak.3          .              .             1.0000    -14580.0000      
28 .Kuk.1          .              .             1.0000    -21870.0000      
28 .Kuk.2          .              .             1.0000    -21870.0000      
28 .Kuk.3          .              .             1.0000    -21870.0000      
28 .Kok.1          .              .             1.0000    -14580.0000      
28 .Kok.2          .              .             1.0000    -14580.0000      
28 .Kok.3          .              .             1.0000    -14580.0000      
29 .Mat.1          .              .             1.0000    -78400.0000      
29 .Mat.2          .              .             1.0000    -78400.0000      
29 .Mat.3          .              .             1.0000    -78400.0000      
29 .Kut.1          .              .             1.0000    -39200.0000      
29 .Kut.2          .              .             1.0000    -39200.0000      
29 .Kut.3          .              .             1.0000    -39200.0000      
29 .Kot.1          .              .             1.0000   -235200.0000      
29 .Kot.2          .              .             1.0000   -235200.0000      
29 .Kot.3          .              .             1.0000   -235200.0000      
29 .Mak.1          .              .             1.0000    -15680.0000      
29 .Mak.2          .              .             1.0000    -15680.0000      
29 .Mak.3          .              .             1.0000    -15680.0000      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 23:25:38 Page 119
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 433


     VAR r  1 if we buy n boats of timber i, 0 otherwise

                 LOWER          LEVEL          UPPER         MARGINAL

29 .Kuk.1          .              .             1.0000    -23520.0000      
29 .Kuk.2          .              .             1.0000    -23520.0000      
29 .Kuk.3          .              .             1.0000    -23520.0000      
29 .Kok.1          .              .             1.0000    -15680.0000      
29 .Kok.2          .              .             1.0000    -15680.0000      
29 .Kok.3          .              .             1.0000    -15680.0000      
30 .Mat.1          .              .             1.0000    -84100.0000      
30 .Mat.2          .              .             1.0000    -84100.0000      
30 .Mat.3          .              .             1.0000    -84100.0000      
30 .Kut.1          .              .             1.0000    -42050.0000      
30 .Kut.2          .              .             1.0000    -42050.0000      
30 .Kut.3          .              .             1.0000    -42050.0000      
30 .Kot.1          .              .             1.0000   -252300.0000      
30 .Kot.2          .              .             1.0000   -252300.0000      
30 .Kot.3          .              .             1.0000   -252300.0000      
30 .Mak.1          .              .             1.0000    -16820.0000      
30 .Mak.2          .              .             1.0000    -16820.0000      
30 .Mak.3          .              .             1.0000    -16820.0000      
30 .Kuk.1          .              .             1.0000    -25230.0000      
30 .Kuk.2          .              .             1.0000    -25230.0000      
30 .Kuk.3          .              .             1.0000    -25230.0000      
30 .Kok.1          .              .             1.0000    -16820.0000      
30 .Kok.2          .              .             1.0000    -16820.0000      
30 .Kok.3          .              .             1.0000    -16820.0000      
31 .Mat.1          .              .             1.0000    -90000.0000      
31 .Mat.2          .              .             1.0000    -90000.0000      
31 .Mat.3          .              .             1.0000    -90000.0000      
31 .Kut.1          .              .             1.0000    -45000.0000      
31 .Kut.2          .              .             1.0000    -45000.0000      
31 .Kut.3          .              .             1.0000    -45000.0000      
31 .Kot.1          .              .             1.0000   -270000.0000      
31 .Kot.2          .              .             1.0000   -270000.0000      
31 .Kot.3          .              .             1.0000   -270000.0000      
31 .Mak.1          .              .             1.0000    -18000.0000      
31 .Mak.2          .              .             1.0000    -18000.0000      
31 .Mak.3          .              .             1.0000    -18000.0000      
31 .Kuk.1          .              .             1.0000    -27000.0000      
31 .Kuk.2          .              .             1.0000    -27000.0000      
31 .Kuk.3          .              .             1.0000    -27000.0000      
31 .Kok.1          .              .             1.0000    -18000.0000      
31 .Kok.2          .             1.0000         1.0000    -18000.0000      
31 .Kok.3          .              .             1.0000    -18000.0000      
32 .Mat.1          .              .             1.0000    -96100.0000      
32 .Mat.2          .              .             1.0000    -96100.0000      
32 .Mat.3          .              .             1.0000    -96100.0000      
32 .Kut.1          .              .             1.0000    -48050.0000      
32 .Kut.2          .              .             1.0000    -48050.0000      
32 .Kut.3          .              .             1.0000    -48050.0000      
32 .Kot.1          .              .             1.0000   -288300.0000      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 23:25:38 Page 120
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 433


     VAR r  1 if we buy n boats of timber i, 0 otherwise

                 LOWER          LEVEL          UPPER         MARGINAL

32 .Kot.2          .              .             1.0000   -288300.0000      
32 .Kot.3          .              .             1.0000   -288300.0000      
32 .Mak.1          .             1.0000         1.0000    -19220.0000      
32 .Mak.2          .              .             1.0000    -19220.0000      
32 .Mak.3          .              .             1.0000    -19220.0000      
32 .Kuk.1          .              .             1.0000    -28830.0000      
32 .Kuk.2          .              .             1.0000    -28830.0000      
32 .Kuk.3          .              .             1.0000    -28830.0000      
32 .Kok.1          .              .             1.0000    -19220.0000      
32 .Kok.2          .              .             1.0000    -19220.0000      
32 .Kok.3          .              .             1.0000    -19220.0000      
33 .Mat.1          .              .             1.0000   -102400.0000      
33 .Mat.2          .              .             1.0000   -102400.0000      
33 .Mat.3          .              .             1.0000   -102400.0000      
33 .Kut.1          .              .             1.0000    -51200.0000      
33 .Kut.2          .              .             1.0000    -51200.0000      
33 .Kut.3          .              .             1.0000    -51200.0000      
33 .Kot.1          .              .             1.0000   -307200.0000      
33 .Kot.2          .              .             1.0000   -307200.0000      
33 .Kot.3          .              .             1.0000   -307200.0000      
33 .Mak.1          .              .             1.0000    -20480.0000      
33 .Mak.2          .              .             1.0000    -20480.0000      
33 .Mak.3          .              .             1.0000    -20480.0000      
33 .Kuk.1          .              .             1.0000    -30720.0000      
33 .Kuk.2          .              .             1.0000    -30720.0000      
33 .Kuk.3          .              .             1.0000    -30720.0000      
33 .Kok.1          .              .             1.0000    -20480.0000      
33 .Kok.2          .              .             1.0000    -20480.0000      
33 .Kok.3          .              .             1.0000    -20480.0000      
34 .Mat.1          .              .             1.0000   -108900.0000      
34 .Mat.2          .              .             1.0000   -108900.0000      
34 .Mat.3          .              .             1.0000   -108900.0000      
34 .Kut.1          .              .             1.0000    -54450.0000      
34 .Kut.2          .              .             1.0000    -54450.0000      
34 .Kut.3          .              .             1.0000    -54450.0000      
34 .Kot.1          .              .             1.0000   -326700.0000      
34 .Kot.2          .              .             1.0000   -326700.0000      
34 .Kot.3          .              .             1.0000   -326700.0000      
34 .Mak.1          .              .             1.0000    -21780.0000      
34 .Mak.2          .              .             1.0000    -21780.0000      
34 .Mak.3          .              .             1.0000    -21780.0000      
34 .Kuk.1          .              .             1.0000    -32670.0000      
34 .Kuk.2          .              .             1.0000    -32670.0000      
34 .Kuk.3          .              .             1.0000    -32670.0000      
34 .Kok.1          .              .             1.0000    -21780.0000      
34 .Kok.2          .              .             1.0000    -21780.0000      
34 .Kok.3          .              .             1.0000    -21780.0000      
35 .Mat.1          .              .             1.0000   -115600.0000      
35 .Mat.2          .              .             1.0000   -115600.0000      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 23:25:38 Page 121
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 433


     VAR r  1 if we buy n boats of timber i, 0 otherwise

                 LOWER          LEVEL          UPPER         MARGINAL

35 .Mat.3          .              .             1.0000   -115600.0000      
35 .Kut.1          .              .             1.0000    -57800.0000      
35 .Kut.2          .              .             1.0000    -57800.0000      
35 .Kut.3          .              .             1.0000    -57800.0000      
35 .Kot.1          .              .             1.0000   -346800.0000      
35 .Kot.2          .              .             1.0000   -346800.0000      
35 .Kot.3          .              .             1.0000   -346800.0000      
35 .Mak.1          .              .             1.0000    -23120.0000      
35 .Mak.2          .              .             1.0000    -23120.0000      
35 .Mak.3          .              .             1.0000    -23120.0000      
35 .Kuk.1          .              .             1.0000    -34680.0000      
35 .Kuk.2          .              .             1.0000    -34680.0000      
35 .Kuk.3          .              .             1.0000    -34680.0000      
35 .Kok.1          .              .             1.0000    -23120.0000      
35 .Kok.2          .              .             1.0000    -23120.0000      
35 .Kok.3          .              .             1.0000    -23120.0000      
36 .Mat.1          .              .             1.0000   -122500.0000      
36 .Mat.2          .              .             1.0000   -122500.0000      
36 .Mat.3          .              .             1.0000   -122500.0000      
36 .Kut.1          .              .             1.0000    -61250.0000      
36 .Kut.2          .              .             1.0000    -61250.0000      
36 .Kut.3          .              .             1.0000    -61250.0000      
36 .Kot.1          .              .             1.0000   -367500.0000      
36 .Kot.2          .              .             1.0000   -367500.0000      
36 .Kot.3          .              .             1.0000   -367500.0000      
36 .Mak.1          .              .             1.0000    -24500.0000      
36 .Mak.2          .              .             1.0000    -24500.0000      
36 .Mak.3          .              .             1.0000    -24500.0000      
36 .Kuk.1          .              .             1.0000    -36750.0000      
36 .Kuk.2          .              .             1.0000    -36750.0000      
36 .Kuk.3          .              .             1.0000    -36750.0000      
36 .Kok.1          .              .             1.0000    -24500.0000      
36 .Kok.2          .              .             1.0000    -24500.0000      
36 .Kok.3          .              .             1.0000    -24500.0000      
37 .Mat.1          .              .             1.0000   -129600.0000      
37 .Mat.2          .              .             1.0000   -129600.0000      
37 .Mat.3          .              .             1.0000   -129600.0000      
37 .Kut.1          .              .             1.0000    -64800.0000      
37 .Kut.2          .              .             1.0000    -64800.0000      
37 .Kut.3          .              .             1.0000    -64800.0000      
37 .Kot.1          .              .             1.0000   -388800.0000      
37 .Kot.2          .              .             1.0000   -388800.0000      
37 .Kot.3          .              .             1.0000   -388800.0000      
37 .Mak.1          .              .             1.0000    -25920.0000      
37 .Mak.2          .              .             1.0000    -25920.0000      
37 .Mak.3          .              .             1.0000    -25920.0000      
37 .Kuk.1          .              .             1.0000    -38880.0000      
37 .Kuk.2          .              .             1.0000    -38880.0000      
37 .Kuk.3          .              .             1.0000    -38880.0000      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 23:25:38 Page 122
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 433


     VAR r  1 if we buy n boats of timber i, 0 otherwise

                 LOWER          LEVEL          UPPER         MARGINAL

37 .Kok.1          .              .             1.0000    -25920.0000      
37 .Kok.2          .              .             1.0000    -25920.0000      
37 .Kok.3          .              .             1.0000    -25920.0000      
38 .Mat.1          .              .             1.0000   -136900.0000      
38 .Mat.2          .              .             1.0000   -136900.0000      
38 .Mat.3          .              .             1.0000   -136900.0000      
38 .Kut.1          .              .             1.0000    -68450.0000      
38 .Kut.2          .              .             1.0000    -68450.0000      
38 .Kut.3          .              .             1.0000    -68450.0000      
38 .Kot.1          .              .             1.0000   -410700.0000      
38 .Kot.2          .              .             1.0000   -410700.0000      
38 .Kot.3          .              .             1.0000   -410700.0000      
38 .Mak.1          .              .             1.0000    -27380.0000      
38 .Mak.2          .              .             1.0000    -27380.0000      
38 .Mak.3          .              .             1.0000    -27380.0000      
38 .Kuk.1          .              .             1.0000    -41070.0000      
38 .Kuk.2          .              .             1.0000    -41070.0000      
38 .Kuk.3          .              .             1.0000    -41070.0000      
38 .Kok.1          .              .             1.0000    -27380.0000      
38 .Kok.2          .              .             1.0000    -27380.0000      
38 .Kok.3          .              .             1.0000    -27380.0000      
39 .Mat.1          .              .             1.0000   -144400.0000      
39 .Mat.2          .              .             1.0000   -144400.0000      
39 .Mat.3          .              .             1.0000   -144400.0000      
39 .Kut.1          .              .             1.0000    -72200.0000      
39 .Kut.2          .              .             1.0000    -72200.0000      
39 .Kut.3          .              .             1.0000    -72200.0000      
39 .Kot.1          .              .             1.0000   -433200.0000      
39 .Kot.2          .              .             1.0000   -433200.0000      
39 .Kot.3          .              .             1.0000   -433200.0000      
39 .Mak.1          .              .             1.0000    -28880.0000      
39 .Mak.2          .              .             1.0000    -28880.0000      
39 .Mak.3          .              .             1.0000    -28880.0000      
39 .Kuk.1          .              .             1.0000    -43320.0000      
39 .Kuk.2          .              .             1.0000    -43320.0000      
39 .Kuk.3          .              .             1.0000    -43320.0000      
39 .Kok.1          .              .             1.0000    -28880.0000      
39 .Kok.2          .              .             1.0000    -28880.0000      
39 .Kok.3          .              .             1.0000    -28880.0000      
40 .Mat.1          .              .             1.0000   -152100.0000      
40 .Mat.2          .              .             1.0000   -152100.0000      
40 .Mat.3          .              .             1.0000   -152100.0000      
40 .Kut.1          .              .             1.0000    -76050.0000      
40 .Kut.2          .              .             1.0000    -76050.0000      
40 .Kut.3          .              .             1.0000    -76050.0000      
40 .Kot.1          .              .             1.0000   -456300.0000      
40 .Kot.2          .              .             1.0000   -456300.0000      
40 .Kot.3          .              .             1.0000   -456300.0000      
40 .Mak.1          .              .             1.0000    -30420.0000      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 23:25:38 Page 123
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 433


     VAR r  1 if we buy n boats of timber i, 0 otherwise

                 LOWER          LEVEL          UPPER         MARGINAL

40 .Mak.2          .              .             1.0000    -30420.0000      
40 .Mak.3          .              .             1.0000    -30420.0000      
40 .Kuk.1          .              .             1.0000    -45630.0000      
40 .Kuk.2          .              .             1.0000    -45630.0000      
40 .Kuk.3          .              .             1.0000    -45630.0000      
40 .Kok.1          .              .             1.0000    -30420.0000      
40 .Kok.2          .              .             1.0000    -30420.0000      
40 .Kok.3          .              .             1.0000    -30420.0000      
41 .Mat.1          .              .             1.0000   -160000.0000      
41 .Mat.2          .              .             1.0000   -160000.0000      
41 .Mat.3          .              .             1.0000   -160000.0000      
41 .Kut.1          .              .             1.0000    -80000.0000      
41 .Kut.2          .              .             1.0000    -80000.0000      
41 .Kut.3          .              .             1.0000    -80000.0000      
41 .Kot.1          .              .             1.0000   -480000.0000      
41 .Kot.2          .              .             1.0000   -480000.0000      
41 .Kot.3          .              .             1.0000   -480000.0000      
41 .Mak.1          .              .             1.0000    -32000.0000      
41 .Mak.2          .              .             1.0000    -32000.0000      
41 .Mak.3          .              .             1.0000    -32000.0000      
41 .Kuk.1          .              .             1.0000    -48000.0000      
41 .Kuk.2          .              .             1.0000    -48000.0000      
41 .Kuk.3          .              .             1.0000    -48000.0000      
41 .Kok.1          .              .             1.0000    -32000.0000      
41 .Kok.2          .              .             1.0000    -32000.0000      
41 .Kok.3          .              .             1.0000    -32000.0000      
42 .Mat.1          .              .             1.0000   -168100.0000      
42 .Mat.2          .              .             1.0000   -168100.0000      
42 .Mat.3          .              .             1.0000   -168100.0000      
42 .Kut.1          .              .             1.0000    -84050.0000      
42 .Kut.2          .              .             1.0000    -84050.0000      
42 .Kut.3          .              .             1.0000    -84050.0000      
42 .Kot.1          .              .             1.0000   -504300.0000      
42 .Kot.2          .              .             1.0000   -504300.0000      
42 .Kot.3          .              .             1.0000   -504300.0000      
42 .Mak.1          .              .             1.0000    -33620.0000      
42 .Mak.2          .              .             1.0000    -33620.0000      
42 .Mak.3          .              .             1.0000    -33620.0000      
42 .Kuk.1          .              .             1.0000    -50430.0000      
42 .Kuk.2          .              .             1.0000    -50430.0000      
42 .Kuk.3          .              .             1.0000    -50430.0000      
42 .Kok.1          .              .             1.0000    -33620.0000      
42 .Kok.2          .              .             1.0000    -33620.0000      
42 .Kok.3          .              .             1.0000    -33620.0000      
43 .Mat.1          .              .             1.0000   -176400.0000      
43 .Mat.2          .              .             1.0000   -176400.0000      
43 .Mat.3          .              .             1.0000   -176400.0000      
43 .Kut.1          .              .             1.0000    -88200.0000      
43 .Kut.2          .              .             1.0000    -88200.0000      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 23:25:38 Page 124
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 433


     VAR r  1 if we buy n boats of timber i, 0 otherwise

                 LOWER          LEVEL          UPPER         MARGINAL

43 .Kut.3          .              .             1.0000    -88200.0000      
43 .Kot.1          .              .             1.0000   -529200.0000      
43 .Kot.2          .              .             1.0000   -529200.0000      
43 .Kot.3          .              .             1.0000   -529200.0000      
43 .Mak.1          .              .             1.0000    -35280.0000      
43 .Mak.2          .              .             1.0000    -35280.0000      
43 .Mak.3          .              .             1.0000    -35280.0000      
43 .Kuk.1          .              .             1.0000    -52920.0000      
43 .Kuk.2          .              .             1.0000    -52920.0000      
43 .Kuk.3          .              .             1.0000    -52920.0000      
43 .Kok.1          .              .             1.0000    -35280.0000      
43 .Kok.2          .              .             1.0000    -35280.0000      
43 .Kok.3          .              .             1.0000    -35280.0000      
44 .Mat.1          .              .             1.0000   -184900.0000      
44 .Mat.2          .              .             1.0000   -184900.0000      
44 .Mat.3          .              .             1.0000   -184900.0000      
44 .Kut.1          .              .             1.0000    -92450.0000      
44 .Kut.2          .              .             1.0000    -92450.0000      
44 .Kut.3          .              .             1.0000    -92450.0000      
44 .Kot.1          .              .             1.0000   -554700.0000      
44 .Kot.2          .              .             1.0000   -554700.0000      
44 .Kot.3          .              .             1.0000   -554700.0000      
44 .Mak.1          .              .             1.0000    -36980.0000      
44 .Mak.2          .              .             1.0000    -36980.0000      
44 .Mak.3          .              .             1.0000    -36980.0000      
44 .Kuk.1          .              .             1.0000    -55470.0000      
44 .Kuk.2          .              .             1.0000    -55470.0000      
44 .Kuk.3          .              .             1.0000    -55470.0000      
44 .Kok.1          .              .             1.0000    -36980.0000      
44 .Kok.2          .              .             1.0000    -36980.0000      
44 .Kok.3          .              .             1.0000    -36980.0000      
45 .Mat.1          .              .             1.0000   -193600.0000      
45 .Mat.2          .              .             1.0000   -193600.0000      
45 .Mat.3          .              .             1.0000   -193600.0000      
45 .Kut.1          .              .             1.0000    -96800.0000      
45 .Kut.2          .              .             1.0000    -96800.0000      
45 .Kut.3          .              .             1.0000    -96800.0000      
45 .Kot.1          .              .             1.0000   -580800.0000      
45 .Kot.2          .              .             1.0000   -580800.0000      
45 .Kot.3          .              .             1.0000   -580800.0000      
45 .Mak.1          .              .             1.0000    -38720.0000      
45 .Mak.2          .              .             1.0000    -38720.0000      
45 .Mak.3          .              .             1.0000    -38720.0000      
45 .Kuk.1          .              .             1.0000    -58080.0000      
45 .Kuk.2          .              .             1.0000    -58080.0000      
45 .Kuk.3          .              .             1.0000    -58080.0000      
45 .Kok.1          .              .             1.0000    -38720.0000      
45 .Kok.2          .              .             1.0000    -38720.0000      
45 .Kok.3          .              .             1.0000    -38720.0000      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 23:25:38 Page 125
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 433


     VAR r  1 if we buy n boats of timber i, 0 otherwise

                 LOWER          LEVEL          UPPER         MARGINAL

46 .Mat.1          .              .             1.0000   -202500.0000      
46 .Mat.2          .              .             1.0000   -202500.0000      
46 .Mat.3          .              .             1.0000   -202500.0000      
46 .Kut.1          .              .             1.0000   -101250.0000      
46 .Kut.2          .              .             1.0000   -101250.0000      
46 .Kut.3          .              .             1.0000   -101250.0000      
46 .Kot.1          .              .             1.0000   -607500.0000      
46 .Kot.2          .              .             1.0000   -607500.0000      
46 .Kot.3          .              .             1.0000   -607500.0000      
46 .Mak.1          .              .             1.0000    -40500.0000      
46 .Mak.2          .              .             1.0000    -40500.0000      
46 .Mak.3          .              .             1.0000    -40500.0000      
46 .Kuk.1          .              .             1.0000    -60750.0000      
46 .Kuk.2          .              .             1.0000    -60750.0000      
46 .Kuk.3          .              .             1.0000    -60750.0000      
46 .Kok.1          .              .             1.0000    -40500.0000      
46 .Kok.2          .              .             1.0000    -40500.0000      
46 .Kok.3          .              .             1.0000    -40500.0000      
47 .Mat.1          .              .             1.0000   -211600.0000      
47 .Mat.2          .              .             1.0000   -211600.0000      
47 .Mat.3          .              .             1.0000   -211600.0000      
47 .Kut.1          .              .             1.0000   -105800.0000      
47 .Kut.2          .              .             1.0000   -105800.0000      
47 .Kut.3          .              .             1.0000   -105800.0000      
47 .Kot.1          .              .             1.0000   -634800.0000      
47 .Kot.2          .              .             1.0000   -634800.0000      
47 .Kot.3          .              .             1.0000   -634800.0000      
47 .Mak.1          .              .             1.0000    -42320.0000      
47 .Mak.2          .              .             1.0000    -42320.0000      
47 .Mak.3          .              .             1.0000    -42320.0000      
47 .Kuk.1          .              .             1.0000    -63480.0000      
47 .Kuk.2          .              .             1.0000    -63480.0000      
47 .Kuk.3          .              .             1.0000    -63480.0000      
47 .Kok.1          .              .             1.0000    -42320.0000      
47 .Kok.2          .              .             1.0000    -42320.0000      
47 .Kok.3          .              .             1.0000    -42320.0000      
48 .Mat.1          .              .             1.0000   -220900.0000      
48 .Mat.2          .              .             1.0000   -220900.0000      
48 .Mat.3          .              .             1.0000   -220900.0000      
48 .Kut.1          .              .             1.0000   -110450.0000      
48 .Kut.2          .              .             1.0000   -110450.0000      
48 .Kut.3          .              .             1.0000   -110450.0000      
48 .Kot.1          .              .             1.0000   -662700.0000      
48 .Kot.2          .              .             1.0000   -662700.0000      
48 .Kot.3          .              .             1.0000   -662700.0000      
48 .Mak.1          .              .             1.0000    -44180.0000      
48 .Mak.2          .              .             1.0000    -44180.0000      
48 .Mak.3          .              .             1.0000    -44180.0000      
48 .Kuk.1          .              .             1.0000    -66270.0000      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 23:25:38 Page 126
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 433


     VAR r  1 if we buy n boats of timber i, 0 otherwise

                 LOWER          LEVEL          UPPER         MARGINAL

48 .Kuk.2          .              .             1.0000    -66270.0000      
48 .Kuk.3          .              .             1.0000    -66270.0000      
48 .Kok.1          .              .             1.0000    -44180.0000      
48 .Kok.2          .              .             1.0000    -44180.0000      
48 .Kok.3          .              .             1.0000    -44180.0000      
49 .Mat.1          .              .             1.0000   -230400.0000      
49 .Mat.2          .              .             1.0000   -230400.0000      
49 .Mat.3          .              .             1.0000   -230400.0000      
49 .Kut.1          .              .             1.0000   -115200.0000      
49 .Kut.2          .              .             1.0000   -115200.0000      
49 .Kut.3          .              .             1.0000   -115200.0000      
49 .Kot.1          .              .             1.0000   -691200.0000      
49 .Kot.2          .              .             1.0000   -691200.0000      
49 .Kot.3          .              .             1.0000   -691200.0000      
49 .Mak.1          .              .             1.0000    -46080.0000      
49 .Mak.2          .              .             1.0000    -46080.0000      
49 .Mak.3          .              .             1.0000    -46080.0000      
49 .Kuk.1          .              .             1.0000    -69120.0000      
49 .Kuk.2          .              .             1.0000    -69120.0000      
49 .Kuk.3          .              .             1.0000    -69120.0000      
49 .Kok.1          .              .             1.0000    -46080.0000      
49 .Kok.2          .              .             1.0000    -46080.0000      
49 .Kok.3          .              .             1.0000    -46080.0000      
50 .Mat.1          .              .             1.0000   -240100.0000      
50 .Mat.2          .              .             1.0000   -240100.0000      
50 .Mat.3          .              .             1.0000   -240100.0000      
50 .Kut.1          .              .             1.0000   -120050.0000      
50 .Kut.2          .              .             1.0000   -120050.0000      
50 .Kut.3          .              .             1.0000   -120050.0000      
50 .Kot.1          .              .             1.0000   -720300.0000      
50 .Kot.2          .              .             1.0000   -720300.0000      
50 .Kot.3          .              .             1.0000   -720300.0000      
50 .Mak.1          .              .             1.0000    -48020.0000      
50 .Mak.2          .              .             1.0000    -48020.0000      
50 .Mak.3          .              .             1.0000    -48020.0000      
50 .Kuk.1          .              .             1.0000    -72030.0000      
50 .Kuk.2          .              .             1.0000    -72030.0000      
50 .Kuk.3          .              .             1.0000    -72030.0000      
50 .Kok.1          .              .             1.0000    -48020.0000      
50 .Kok.2          .              .             1.0000    -48020.0000      
50 .Kok.3          .              .             1.0000    -48020.0000      
51 .Mat.1          .              .             1.0000   -250000.0000      
51 .Mat.2          .              .             1.0000   -250000.0000      
51 .Mat.3          .              .             1.0000   -250000.0000      
51 .Kut.1          .              .             1.0000   -125000.0000      
51 .Kut.2          .              .             1.0000   -125000.0000      
51 .Kut.3          .              .             1.0000   -125000.0000      
51 .Kot.1          .              .             1.0000   -750000.0000      
51 .Kot.2          .              .             1.0000   -750000.0000      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 23:25:38 Page 127
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 433


     VAR r  1 if we buy n boats of timber i, 0 otherwise

                 LOWER          LEVEL          UPPER         MARGINAL

51 .Kot.3          .              .             1.0000   -750000.0000      
51 .Mak.1          .              .             1.0000    -50000.0000      
51 .Mak.2          .              .             1.0000    -50000.0000      
51 .Mak.3          .              .             1.0000    -50000.0000      
51 .Kuk.1          .              .             1.0000    -75000.0000      
51 .Kuk.2          .              .             1.0000    -75000.0000      
51 .Kuk.3          .              .             1.0000    -75000.0000      
51 .Kok.1          .              .             1.0000    -50000.0000      
51 .Kok.2          .              .             1.0000    -50000.0000      
51 .Kok.3          .              .             1.0000    -50000.0000      
52 .Mat.1          .              .             1.0000   -260100.0000      
52 .Mat.2          .              .             1.0000   -260100.0000      
52 .Mat.3          .              .             1.0000   -260100.0000      
52 .Kut.1          .              .             1.0000   -130050.0000      
52 .Kut.2          .              .             1.0000   -130050.0000      
52 .Kut.3          .              .             1.0000   -130050.0000      
52 .Kot.1          .              .             1.0000   -780300.0000      
52 .Kot.2          .              .             1.0000   -780300.0000      
52 .Kot.3          .              .             1.0000   -780300.0000      
52 .Mak.1          .              .             1.0000    -52020.0000      
52 .Mak.2          .              .             1.0000    -52020.0000      
52 .Mak.3          .              .             1.0000    -52020.0000      
52 .Kuk.1          .              .             1.0000    -78030.0000      
52 .Kuk.2          .              .             1.0000    -78030.0000      
52 .Kuk.3          .              .             1.0000    -78030.0000      
52 .Kok.1          .              .             1.0000    -52020.0000      
52 .Kok.2          .              .             1.0000    -52020.0000      
52 .Kok.3          .              .             1.0000    -52020.0000      
53 .Mat.1          .              .             1.0000   -270400.0000      
53 .Mat.2          .              .             1.0000   -270400.0000      
53 .Mat.3          .              .             1.0000   -270400.0000      
53 .Kut.1          .              .             1.0000   -135200.0000      
53 .Kut.2          .              .             1.0000   -135200.0000      
53 .Kut.3          .              .             1.0000   -135200.0000      
53 .Kot.1          .              .             1.0000   -811200.0000      
53 .Kot.2          .              .             1.0000   -811200.0000      
53 .Kot.3          .              .             1.0000   -811200.0000      
53 .Mak.1          .              .             1.0000    -54080.0000      
53 .Mak.2          .              .             1.0000    -54080.0000      
53 .Mak.3          .              .             1.0000    -54080.0000      
53 .Kuk.1          .              .             1.0000    -81120.0000      
53 .Kuk.2          .              .             1.0000    -81120.0000      
53 .Kuk.3          .              .             1.0000    -81120.0000      
53 .Kok.1          .              .             1.0000    -54080.0000      
53 .Kok.2          .              .             1.0000    -54080.0000      
53 .Kok.3          .              .             1.0000    -54080.0000      
54 .Mat.1          .              .             1.0000   -280900.0000      
54 .Mat.2          .              .             1.0000   -280900.0000      
54 .Mat.3          .              .             1.0000   -280900.0000      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 23:25:38 Page 128
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 433


     VAR r  1 if we buy n boats of timber i, 0 otherwise

                 LOWER          LEVEL          UPPER         MARGINAL

54 .Kut.1          .              .             1.0000   -140450.0000      
54 .Kut.2          .              .             1.0000   -140450.0000      
54 .Kut.3          .              .             1.0000   -140450.0000      
54 .Kot.1          .              .             1.0000   -842700.0000      
54 .Kot.2          .              .             1.0000   -842700.0000      
54 .Kot.3          .              .             1.0000   -842700.0000      
54 .Mak.1          .              .             1.0000    -56180.0000      
54 .Mak.2          .              .             1.0000    -56180.0000      
54 .Mak.3          .              .             1.0000    -56180.0000      
54 .Kuk.1          .              .             1.0000    -84270.0000      
54 .Kuk.2          .              .             1.0000    -84270.0000      
54 .Kuk.3          .              .             1.0000    -84270.0000      
54 .Kok.1          .              .             1.0000    -56180.0000      
54 .Kok.2          .              .             1.0000    -56180.0000      
54 .Kok.3          .              .             1.0000    -56180.0000      
55 .Mat.1          .              .             1.0000   -291600.0000      
55 .Mat.2          .              .             1.0000   -291600.0000      
55 .Mat.3          .              .             1.0000   -291600.0000      
55 .Kut.1          .              .             1.0000   -145800.0000      
55 .Kut.2          .              .             1.0000   -145800.0000      
55 .Kut.3          .              .             1.0000   -145800.0000      
55 .Kot.1          .              .             1.0000   -874800.0000      
55 .Kot.2          .              .             1.0000   -874800.0000      
55 .Kot.3          .              .             1.0000   -874800.0000      
55 .Mak.1          .              .             1.0000    -58320.0000      
55 .Mak.2          .              .             1.0000    -58320.0000      
55 .Mak.3          .              .             1.0000    -58320.0000      
55 .Kuk.1          .              .             1.0000    -87480.0000      
55 .Kuk.2          .              .             1.0000    -87480.0000      
55 .Kuk.3          .              .             1.0000    -87480.0000      
55 .Kok.1          .              .             1.0000    -58320.0000      
55 .Kok.2          .              .             1.0000    -58320.0000      
55 .Kok.3          .              .             1.0000    -58320.0000      
56 .Mat.1          .              .             1.0000   -302500.0000      
56 .Mat.2          .              .             1.0000   -302500.0000      
56 .Mat.3          .              .             1.0000   -302500.0000      
56 .Kut.1          .              .             1.0000   -151250.0000      
56 .Kut.2          .              .             1.0000   -151250.0000      
56 .Kut.3          .              .             1.0000   -151250.0000      
56 .Kot.1          .              .             1.0000   -907500.0000      
56 .Kot.2          .              .             1.0000   -907500.0000      
56 .Kot.3          .              .             1.0000   -907500.0000      
56 .Mak.1          .              .             1.0000    -60500.0000      
56 .Mak.2          .              .             1.0000    -60500.0000      
56 .Mak.3          .              .             1.0000    -60500.0000      
56 .Kuk.1          .              .             1.0000    -90750.0000      
56 .Kuk.2          .              .             1.0000    -90750.0000      
56 .Kuk.3          .              .             1.0000    -90750.0000      
56 .Kok.1          .              .             1.0000    -60500.0000      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 23:25:38 Page 129
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 433


     VAR r  1 if we buy n boats of timber i, 0 otherwise

                 LOWER          LEVEL          UPPER         MARGINAL

56 .Kok.2          .              .             1.0000    -60500.0000      
56 .Kok.3          .              .             1.0000    -60500.0000      
57 .Mat.1          .              .             1.0000   -313600.0000      
57 .Mat.2          .              .             1.0000   -313600.0000      
57 .Mat.3          .              .             1.0000   -313600.0000      
57 .Kut.1          .              .             1.0000   -156800.0000      
57 .Kut.2          .              .             1.0000   -156800.0000      
57 .Kut.3          .              .             1.0000   -156800.0000      
57 .Kot.1          .              .             1.0000   -940800.0000      
57 .Kot.2          .              .             1.0000   -940800.0000      
57 .Kot.3          .              .             1.0000   -940800.0000      
57 .Mak.1          .              .             1.0000    -62720.0000      
57 .Mak.2          .              .             1.0000    -62720.0000      
57 .Mak.3          .              .             1.0000    -62720.0000      
57 .Kuk.1          .              .             1.0000    -94080.0000      
57 .Kuk.2          .              .             1.0000    -94080.0000      
57 .Kuk.3          .              .             1.0000    -94080.0000      
57 .Kok.1          .              .             1.0000    -62720.0000      
57 .Kok.2          .              .             1.0000    -62720.0000      
57 .Kok.3          .              .             1.0000    -62720.0000      
58 .Mat.1          .              .             1.0000   -324900.0000      
58 .Mat.2          .              .             1.0000   -324900.0000      
58 .Mat.3          .              .             1.0000   -324900.0000      
58 .Kut.1          .              .             1.0000   -162450.0000      
58 .Kut.2          .              .             1.0000   -162450.0000      
58 .Kut.3          .              .             1.0000   -162450.0000      
58 .Kot.1          .              .             1.0000   -974700.0000      
58 .Kot.2          .              .             1.0000   -974700.0000      
58 .Kot.3          .              .             1.0000   -974700.0000      
58 .Mak.1          .              .             1.0000    -64980.0000      
58 .Mak.2          .              .             1.0000    -64980.0000      
58 .Mak.3          .              .             1.0000    -64980.0000      
58 .Kuk.1          .              .             1.0000    -97470.0000      
58 .Kuk.2          .              .             1.0000    -97470.0000      
58 .Kuk.3          .              .             1.0000    -97470.0000      
58 .Kok.1          .             1.0000         1.0000    -64980.0000      
58 .Kok.2          .              .             1.0000    -64980.0000      
58 .Kok.3          .              .             1.0000    -64980.0000      
59 .Mat.1          .              .             1.0000   -336400.0000      
59 .Mat.2          .              .             1.0000   -336400.0000      
59 .Mat.3          .              .             1.0000   -336400.0000      
59 .Kut.1          .              .             1.0000   -168200.0000      
59 .Kut.2          .              .             1.0000   -168200.0000      
59 .Kut.3          .              .             1.0000   -168200.0000      
59 .Kot.1          .              .             1.0000   -1.009200E+6      
59 .Kot.2          .              .             1.0000   -1.009200E+6      
59 .Kot.3          .              .             1.0000   -1.009200E+6      
59 .Mak.1          .              .             1.0000    -67280.0000      
59 .Mak.2          .              .             1.0000    -67280.0000      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 23:25:38 Page 130
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 433


     VAR r  1 if we buy n boats of timber i, 0 otherwise

                 LOWER          LEVEL          UPPER         MARGINAL

59 .Mak.3          .              .             1.0000    -67280.0000      
59 .Kuk.1          .              .             1.0000   -100920.0000      
59 .Kuk.2          .              .             1.0000   -100920.0000      
59 .Kuk.3          .              .             1.0000   -100920.0000      
59 .Kok.1          .              .             1.0000    -67280.0000      
59 .Kok.2          .              .             1.0000    -67280.0000      
59 .Kok.3          .              .             1.0000    -67280.0000      
60 .Mat.1          .              .             1.0000   -348100.0000      
60 .Mat.2          .              .             1.0000   -348100.0000      
60 .Mat.3          .              .             1.0000   -348100.0000      
60 .Kut.1          .              .             1.0000   -174050.0000      
60 .Kut.2          .              .             1.0000   -174050.0000      
60 .Kut.3          .              .             1.0000   -174050.0000      
60 .Kot.1          .              .             1.0000   -1.044300E+6      
60 .Kot.2          .              .             1.0000   -1.044300E+6      
60 .Kot.3          .              .             1.0000   -1.044300E+6      
60 .Mak.1          .              .             1.0000    -69620.0000      
60 .Mak.2          .              .             1.0000    -69620.0000      
60 .Mak.3          .              .             1.0000    -69620.0000      
60 .Kuk.1          .              .             1.0000   -104430.0000      
60 .Kuk.2          .              .             1.0000   -104430.0000      
60 .Kuk.3          .              .             1.0000   -104430.0000      
60 .Kok.1          .              .             1.0000    -69620.0000      
60 .Kok.2          .              .             1.0000    -69620.0000      
60 .Kok.3          .              .             1.0000    -69620.0000      
61 .Mat.1          .              .             1.0000   -360000.0000      
61 .Mat.2          .              .             1.0000   -360000.0000      
61 .Mat.3          .              .             1.0000   -360000.0000      
61 .Kut.1          .              .             1.0000   -180000.0000      
61 .Kut.2          .              .             1.0000   -180000.0000      
61 .Kut.3          .              .             1.0000   -180000.0000      
61 .Kot.1          .              .             1.0000   -1.080000E+6      
61 .Kot.2          .              .             1.0000   -1.080000E+6      
61 .Kot.3          .              .             1.0000   -1.080000E+6      
61 .Mak.1          .              .             1.0000    -72000.0000      
61 .Mak.2          .              .             1.0000    -72000.0000      
61 .Mak.3          .              .             1.0000    -72000.0000      
61 .Kuk.1          .              .             1.0000   -108000.0000      
61 .Kuk.2          .              .             1.0000   -108000.0000      
61 .Kuk.3          .              .             1.0000   -108000.0000      
61 .Kok.1          .              .             1.0000    -72000.0000      
61 .Kok.2          .              .             1.0000    -72000.0000      
61 .Kok.3          .              .             1.0000    -72000.0000      
62 .Mat.1          .              .             1.0000   -372100.0000      
62 .Mat.2          .              .             1.0000   -372100.0000      
62 .Mat.3          .              .             1.0000   -372100.0000      
62 .Kut.1          .              .             1.0000   -186050.0000      
62 .Kut.2          .              .             1.0000   -186050.0000      
62 .Kut.3          .              .             1.0000   -186050.0000      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 23:25:38 Page 131
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 433


     VAR r  1 if we buy n boats of timber i, 0 otherwise

                 LOWER          LEVEL          UPPER         MARGINAL

62 .Kot.1          .              .             1.0000   -1.116300E+6      
62 .Kot.2          .              .             1.0000   -1.116300E+6      
62 .Kot.3          .              .             1.0000   -1.116300E+6      
62 .Mak.1          .              .             1.0000    -74420.0000      
62 .Mak.2          .              .             1.0000    -74420.0000      
62 .Mak.3          .              .             1.0000    -74420.0000      
62 .Kuk.1          .              .             1.0000   -111630.0000      
62 .Kuk.2          .              .             1.0000   -111630.0000      
62 .Kuk.3          .              .             1.0000   -111630.0000      
62 .Kok.1          .              .             1.0000    -74420.0000      
62 .Kok.2          .              .             1.0000    -74420.0000      
62 .Kok.3          .              .             1.0000    -74420.0000      
63 .Mat.1          .              .             1.0000   -384400.0000      
63 .Mat.2          .              .             1.0000   -384400.0000      
63 .Mat.3          .              .             1.0000   -384400.0000      
63 .Kut.1          .              .             1.0000   -192200.0000      
63 .Kut.2          .              .             1.0000   -192200.0000      
63 .Kut.3          .              .             1.0000   -192200.0000      
63 .Kot.1          .              .             1.0000   -1.153200E+6      
63 .Kot.2          .              .             1.0000   -1.153200E+6      
63 .Kot.3          .              .             1.0000   -1.153200E+6      
63 .Mak.1          .              .             1.0000    -76880.0000      
63 .Mak.2          .              .             1.0000    -76880.0000      
63 .Mak.3          .              .             1.0000    -76880.0000      
63 .Kuk.1          .              .             1.0000   -115320.0000      
63 .Kuk.2          .              .             1.0000   -115320.0000      
63 .Kuk.3          .              .             1.0000   -115320.0000      
63 .Kok.1          .              .             1.0000    -76880.0000      
63 .Kok.2          .              .             1.0000    -76880.0000      
63 .Kok.3          .              .             1.0000    -76880.0000      
64 .Mat.1          .              .             1.0000   -396900.0000      
64 .Mat.2          .              .             1.0000   -396900.0000      
64 .Mat.3          .              .             1.0000   -396900.0000      
64 .Kut.1          .              .             1.0000   -198450.0000      
64 .Kut.2          .              .             1.0000   -198450.0000      
64 .Kut.3          .              .             1.0000   -198450.0000      
64 .Kot.1          .              .             1.0000   -1.190700E+6      
64 .Kot.2          .              .             1.0000   -1.190700E+6      
64 .Kot.3          .              .             1.0000   -1.190700E+6      
64 .Mak.1          .              .             1.0000    -79380.0000      
64 .Mak.2          .              .             1.0000    -79380.0000      
64 .Mak.3          .              .             1.0000    -79380.0000      
64 .Kuk.1          .              .             1.0000   -119070.0000      
64 .Kuk.2          .              .             1.0000   -119070.0000      
64 .Kuk.3          .              .             1.0000   -119070.0000      
64 .Kok.1          .              .             1.0000    -79380.0000      
64 .Kok.2          .              .             1.0000    -79380.0000      
64 .Kok.3          .              .             1.0000    -79380.0000      
65 .Mat.1          .              .             1.0000   -409600.0000      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 23:25:38 Page 132
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 433


     VAR r  1 if we buy n boats of timber i, 0 otherwise

                 LOWER          LEVEL          UPPER         MARGINAL

65 .Mat.2          .              .             1.0000   -409600.0000      
65 .Mat.3          .              .             1.0000   -409600.0000      
65 .Kut.1          .              .             1.0000   -204800.0000      
65 .Kut.2          .              .             1.0000   -204800.0000      
65 .Kut.3          .              .             1.0000   -204800.0000      
65 .Kot.1          .              .             1.0000   -1.228800E+6      
65 .Kot.2          .              .             1.0000   -1.228800E+6      
65 .Kot.3          .              .             1.0000   -1.228800E+6      
65 .Mak.1          .              .             1.0000    -81920.0000      
65 .Mak.2          .              .             1.0000    -81920.0000      
65 .Mak.3          .              .             1.0000    -81920.0000      
65 .Kuk.1          .              .             1.0000   -122880.0000      
65 .Kuk.2          .              .             1.0000   -122880.0000      
65 .Kuk.3          .              .             1.0000   -122880.0000      
65 .Kok.1          .              .             1.0000    -81920.0000      
65 .Kok.2          .              .             1.0000    -81920.0000      
65 .Kok.3          .              .             1.0000    -81920.0000      
66 .Mat.1          .              .             1.0000   -422500.0000      
66 .Mat.2          .              .             1.0000   -422500.0000      
66 .Mat.3          .              .             1.0000   -422500.0000      
66 .Kut.1          .              .             1.0000   -211250.0000      
66 .Kut.2          .              .             1.0000   -211250.0000      
66 .Kut.3          .              .             1.0000   -211250.0000      
66 .Kot.1          .              .             1.0000   -1.267500E+6      
66 .Kot.2          .              .             1.0000   -1.267500E+6      
66 .Kot.3          .              .             1.0000   -1.267500E+6      
66 .Mak.1          .              .             1.0000    -84500.0000      
66 .Mak.2          .              .             1.0000    -84500.0000      
66 .Mak.3          .              .             1.0000    -84500.0000      
66 .Kuk.1          .              .             1.0000   -126750.0000      
66 .Kuk.2          .              .             1.0000   -126750.0000      
66 .Kuk.3          .              .             1.0000   -126750.0000      
66 .Kok.1          .              .             1.0000    -84500.0000      
66 .Kok.2          .              .             1.0000    -84500.0000      
66 .Kok.3          .              .             1.0000    -84500.0000      
67 .Mat.1          .              .             1.0000   -435600.0000      
67 .Mat.2          .              .             1.0000   -435600.0000      
67 .Mat.3          .              .             1.0000   -435600.0000      
67 .Kut.1          .              .             1.0000   -217800.0000      
67 .Kut.2          .              .             1.0000   -217800.0000      
67 .Kut.3          .              .             1.0000   -217800.0000      
67 .Kot.1          .              .             1.0000   -1.306800E+6      
67 .Kot.2          .              .             1.0000   -1.306800E+6      
67 .Kot.3          .              .             1.0000   -1.306800E+6      
67 .Mak.1          .              .             1.0000    -87120.0000      
67 .Mak.2          .              .             1.0000    -87120.0000      
67 .Mak.3          .              .             1.0000    -87120.0000      
67 .Kuk.1          .              .             1.0000   -130680.0000      
67 .Kuk.2          .              .             1.0000   -130680.0000      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 23:25:38 Page 133
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 433


     VAR r  1 if we buy n boats of timber i, 0 otherwise

                 LOWER          LEVEL          UPPER         MARGINAL

67 .Kuk.3          .              .             1.0000   -130680.0000      
67 .Kok.1          .              .             1.0000    -87120.0000      
67 .Kok.2          .              .             1.0000    -87120.0000      
67 .Kok.3          .              .             1.0000    -87120.0000      
68 .Mat.1          .              .             1.0000   -448900.0000      
68 .Mat.2          .              .             1.0000   -448900.0000      
68 .Mat.3          .              .             1.0000   -448900.0000      
68 .Kut.1          .              .             1.0000   -224450.0000      
68 .Kut.2          .              .             1.0000   -224450.0000      
68 .Kut.3          .              .             1.0000   -224450.0000      
68 .Kot.1          .              .             1.0000   -1.346700E+6      
68 .Kot.2          .              .             1.0000   -1.346700E+6      
68 .Kot.3          .              .             1.0000   -1.346700E+6      
68 .Mak.1          .              .             1.0000    -89780.0000      
68 .Mak.2          .              .             1.0000    -89780.0000      
68 .Mak.3          .              .             1.0000    -89780.0000      
68 .Kuk.1          .              .             1.0000   -134670.0000      
68 .Kuk.2          .              .             1.0000   -134670.0000      
68 .Kuk.3          .              .             1.0000   -134670.0000      
68 .Kok.1          .              .             1.0000    -89780.0000      
68 .Kok.2          .              .             1.0000    -89780.0000      
68 .Kok.3          .              .             1.0000    -89780.0000      
69 .Mat.1          .              .             1.0000   -462400.0000      
69 .Mat.2          .              .             1.0000   -462400.0000      
69 .Mat.3          .              .             1.0000   -462400.0000      
69 .Kut.1          .              .             1.0000   -231200.0000      
69 .Kut.2          .              .             1.0000   -231200.0000      
69 .Kut.3          .              .             1.0000   -231200.0000      
69 .Kot.1          .              .             1.0000   -1.387200E+6      
69 .Kot.2          .              .             1.0000   -1.387200E+6      
69 .Kot.3          .              .             1.0000   -1.387200E+6      
69 .Mak.1          .              .             1.0000    -92480.0000      
69 .Mak.2          .              .             1.0000    -92480.0000      
69 .Mak.3          .              .             1.0000    -92480.0000      
69 .Kuk.1          .              .             1.0000   -138720.0000      
69 .Kuk.2          .              .             1.0000   -138720.0000      
69 .Kuk.3          .              .             1.0000   -138720.0000      
69 .Kok.1          .              .             1.0000    -92480.0000      
69 .Kok.2          .              .             1.0000    -92480.0000      
69 .Kok.3          .              .             1.0000    -92480.0000      
70 .Mat.1          .              .             1.0000   -476100.0000      
70 .Mat.2          .              .             1.0000   -476100.0000      
70 .Mat.3          .              .             1.0000   -476100.0000      
70 .Kut.1          .              .             1.0000   -238050.0000      
70 .Kut.2          .              .             1.0000   -238050.0000      
70 .Kut.3          .              .             1.0000   -238050.0000      
70 .Kot.1          .              .             1.0000   -1.428300E+6      
70 .Kot.2          .              .             1.0000   -1.428300E+6      
70 .Kot.3          .              .             1.0000   -1.428300E+6      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 23:25:38 Page 134
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 433


     VAR r  1 if we buy n boats of timber i, 0 otherwise

                 LOWER          LEVEL          UPPER         MARGINAL

70 .Mak.1          .              .             1.0000    -95220.0000      
70 .Mak.2          .              .             1.0000    -95220.0000      
70 .Mak.3          .              .             1.0000    -95220.0000      
70 .Kuk.1          .              .             1.0000   -142830.0000      
70 .Kuk.2          .              .             1.0000   -142830.0000      
70 .Kuk.3          .              .             1.0000   -142830.0000      
70 .Kok.1          .              .             1.0000    -95220.0000      
70 .Kok.2          .              .             1.0000    -95220.0000      
70 .Kok.3          .              .             1.0000    -95220.0000      
71 .Mat.1          .              .             1.0000   -490000.0000      
71 .Mat.2          .              .             1.0000   -490000.0000      
71 .Mat.3          .              .             1.0000   -490000.0000      
71 .Kut.1          .              .             1.0000   -245000.0000      
71 .Kut.2          .              .             1.0000   -245000.0000      
71 .Kut.3          .              .             1.0000   -245000.0000      
71 .Kot.1          .              .             1.0000   -1.470000E+6      
71 .Kot.2          .              .             1.0000   -1.470000E+6      
71 .Kot.3          .              .             1.0000   -1.470000E+6      
71 .Mak.1          .              .             1.0000    -98000.0000      
71 .Mak.2          .              .             1.0000    -98000.0000      
71 .Mak.3          .              .             1.0000    -98000.0000      
71 .Kuk.1          .              .             1.0000   -147000.0000      
71 .Kuk.2          .              .             1.0000   -147000.0000      
71 .Kuk.3          .              .             1.0000   -147000.0000      
71 .Kok.1          .              .             1.0000    -98000.0000      
71 .Kok.2          .              .             1.0000    -98000.0000      
71 .Kok.3          .              .             1.0000    -98000.0000      
72 .Mat.1          .              .             1.0000   -504100.0000      
72 .Mat.2          .              .             1.0000   -504100.0000      
72 .Mat.3          .              .             1.0000   -504100.0000      
72 .Kut.1          .              .             1.0000   -252050.0000      
72 .Kut.2          .              .             1.0000   -252050.0000      
72 .Kut.3          .              .             1.0000   -252050.0000      
72 .Kot.1          .              .             1.0000   -1.512300E+6      
72 .Kot.2          .              .             1.0000   -1.512300E+6      
72 .Kot.3          .              .             1.0000   -1.512300E+6      
72 .Mak.1          .              .             1.0000   -100820.0000      
72 .Mak.2          .              .             1.0000   -100820.0000      
72 .Mak.3          .              .             1.0000   -100820.0000      
72 .Kuk.1          .              .             1.0000   -151230.0000      
72 .Kuk.2          .              .             1.0000   -151230.0000      
72 .Kuk.3          .              .             1.0000   -151230.0000      
72 .Kok.1          .              .             1.0000   -100820.0000      
72 .Kok.2          .              .             1.0000   -100820.0000      
72 .Kok.3          .              .             1.0000   -100820.0000      
73 .Mat.1          .              .             1.0000   -518400.0000      
73 .Mat.2          .              .             1.0000   -518400.0000      
73 .Mat.3          .              .             1.0000   -518400.0000      
73 .Kut.1          .              .             1.0000   -259200.0000      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 23:25:38 Page 135
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 433


     VAR r  1 if we buy n boats of timber i, 0 otherwise

                 LOWER          LEVEL          UPPER         MARGINAL

73 .Kut.2          .              .             1.0000   -259200.0000      
73 .Kut.3          .              .             1.0000   -259200.0000      
73 .Kot.1          .              .             1.0000   -1.555200E+6      
73 .Kot.2          .              .             1.0000   -1.555200E+6      
73 .Kot.3          .              .             1.0000   -1.555200E+6      
73 .Mak.1          .              .             1.0000   -103680.0000      
73 .Mak.2          .              .             1.0000   -103680.0000      
73 .Mak.3          .              .             1.0000   -103680.0000      
73 .Kuk.1          .              .             1.0000   -155520.0000      
73 .Kuk.2          .              .             1.0000   -155520.0000      
73 .Kuk.3          .              .             1.0000   -155520.0000      
73 .Kok.1          .              .             1.0000   -103680.0000      
73 .Kok.2          .              .             1.0000   -103680.0000      
73 .Kok.3          .              .             1.0000   -103680.0000      
74 .Mat.1          .              .             1.0000   -532900.0000      
74 .Mat.2          .              .             1.0000   -532900.0000      
74 .Mat.3          .              .             1.0000   -532900.0000      
74 .Kut.1          .              .             1.0000   -266450.0000      
74 .Kut.2          .              .             1.0000   -266450.0000      
74 .Kut.3          .              .             1.0000   -266450.0000      
74 .Kot.1          .              .             1.0000   -1.598700E+6      
74 .Kot.2          .              .             1.0000   -1.598700E+6      
74 .Kot.3          .              .             1.0000   -1.598700E+6      
74 .Mak.1          .              .             1.0000   -106580.0000      
74 .Mak.2          .              .             1.0000   -106580.0000      
74 .Mak.3          .              .             1.0000   -106580.0000      
74 .Kuk.1          .              .             1.0000   -159870.0000      
74 .Kuk.2          .              .             1.0000   -159870.0000      
74 .Kuk.3          .              .             1.0000   -159870.0000      
74 .Kok.1          .              .             1.0000   -106580.0000      
74 .Kok.2          .              .             1.0000   -106580.0000      
74 .Kok.3          .              .             1.0000   -106580.0000      
75 .Mat.1          .              .             1.0000   -547600.0000      
75 .Mat.2          .              .             1.0000   -547600.0000      
75 .Mat.3          .              .             1.0000   -547600.0000      
75 .Kut.1          .              .             1.0000   -273800.0000      
75 .Kut.2          .              .             1.0000   -273800.0000      
75 .Kut.3          .              .             1.0000   -273800.0000      
75 .Kot.1          .              .             1.0000   -1.642800E+6      
75 .Kot.2          .              .             1.0000   -1.642800E+6      
75 .Kot.3          .              .             1.0000   -1.642800E+6      
75 .Mak.1          .              .             1.0000   -109520.0000      
75 .Mak.2          .              .             1.0000   -109520.0000      
75 .Mak.3          .              .             1.0000   -109520.0000      
75 .Kuk.1          .              .             1.0000   -164280.0000      
75 .Kuk.2          .              .             1.0000   -164280.0000      
75 .Kuk.3          .              .             1.0000   -164280.0000      
75 .Kok.1          .              .             1.0000   -109520.0000      
75 .Kok.2          .              .             1.0000   -109520.0000      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 23:25:38 Page 136
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 433


     VAR r  1 if we buy n boats of timber i, 0 otherwise

                 LOWER          LEVEL          UPPER         MARGINAL

75 .Kok.3          .              .             1.0000   -109520.0000      
76 .Mat.1          .              .             1.0000   -562500.0000      
76 .Mat.2          .              .             1.0000   -562500.0000      
76 .Mat.3          .              .             1.0000   -562500.0000      
76 .Kut.1          .              .             1.0000   -281250.0000      
76 .Kut.2          .              .             1.0000   -281250.0000      
76 .Kut.3          .              .             1.0000   -281250.0000      
76 .Kot.1          .              .             1.0000   -1.687500E+6      
76 .Kot.2          .              .             1.0000   -1.687500E+6      
76 .Kot.3          .              .             1.0000   -1.687500E+6      
76 .Mak.1          .              .             1.0000   -112500.0000      
76 .Mak.2          .              .             1.0000   -112500.0000      
76 .Mak.3          .              .             1.0000   -112500.0000      
76 .Kuk.1          .              .             1.0000   -168750.0000      
76 .Kuk.2          .              .             1.0000   -168750.0000      
76 .Kuk.3          .              .             1.0000   -168750.0000      
76 .Kok.1          .              .             1.0000   -112500.0000      
76 .Kok.2          .              .             1.0000   -112500.0000      
76 .Kok.3          .              .             1.0000   -112500.0000      
77 .Mat.1          .              .             1.0000   -577600.0000      
77 .Mat.2          .              .             1.0000   -577600.0000      
77 .Mat.3          .              .             1.0000   -577600.0000      
77 .Kut.1          .              .             1.0000   -288800.0000      
77 .Kut.2          .              .             1.0000   -288800.0000      
77 .Kut.3          .              .             1.0000   -288800.0000      
77 .Kot.1          .              .             1.0000   -1.732800E+6      
77 .Kot.2          .              .             1.0000   -1.732800E+6      
77 .Kot.3          .              .             1.0000   -1.732800E+6      
77 .Mak.1          .              .             1.0000   -115520.0000      
77 .Mak.2          .              .             1.0000   -115520.0000      
77 .Mak.3          .              .             1.0000   -115520.0000      
77 .Kuk.1          .              .             1.0000   -173280.0000      
77 .Kuk.2          .              .             1.0000   -173280.0000      
77 .Kuk.3          .              .             1.0000   -173280.0000      
77 .Kok.1          .              .             1.0000   -115520.0000      
77 .Kok.2          .              .             1.0000   -115520.0000      
77 .Kok.3          .              .             1.0000   -115520.0000      
78 .Mat.1          .              .             1.0000   -592900.0000      
78 .Mat.2          .              .             1.0000   -592900.0000      
78 .Mat.3          .              .             1.0000   -592900.0000      
78 .Kut.1          .              .             1.0000   -296450.0000      
78 .Kut.2          .              .             1.0000   -296450.0000      
78 .Kut.3          .              .             1.0000   -296450.0000      
78 .Kot.1          .              .             1.0000   -1.778700E+6      
78 .Kot.2          .              .             1.0000   -1.778700E+6      
78 .Kot.3          .              .             1.0000   -1.778700E+6      
78 .Mak.1          .              .             1.0000   -118580.0000      
78 .Mak.2          .              .             1.0000   -118580.0000      
78 .Mak.3          .              .             1.0000   -118580.0000      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 23:25:38 Page 137
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 433


     VAR r  1 if we buy n boats of timber i, 0 otherwise

                 LOWER          LEVEL          UPPER         MARGINAL

78 .Kuk.1          .              .             1.0000   -177870.0000      
78 .Kuk.2          .              .             1.0000   -177870.0000      
78 .Kuk.3          .              .             1.0000   -177870.0000      
78 .Kok.1          .              .             1.0000   -118580.0000      
78 .Kok.2          .              .             1.0000   -118580.0000      
78 .Kok.3          .              .             1.0000   -118580.0000      
79 .Mat.1          .              .             1.0000   -608400.0000      
79 .Mat.2          .              .             1.0000   -608400.0000      
79 .Mat.3          .              .             1.0000   -608400.0000      
79 .Kut.1          .              .             1.0000   -304200.0000      
79 .Kut.2          .              .             1.0000   -304200.0000      
79 .Kut.3          .              .             1.0000   -304200.0000      
79 .Kot.1          .              .             1.0000   -1.825200E+6      
79 .Kot.2          .              .             1.0000   -1.825200E+6      
79 .Kot.3          .              .             1.0000   -1.825200E+6      
79 .Mak.1          .              .             1.0000   -121680.0000      
79 .Mak.2          .              .             1.0000   -121680.0000      
79 .Mak.3          .              .             1.0000   -121680.0000      
79 .Kuk.1          .              .             1.0000   -182520.0000      
79 .Kuk.2          .              .             1.0000   -182520.0000      
79 .Kuk.3          .              .             1.0000   -182520.0000      
79 .Kok.1          .              .             1.0000   -121680.0000      
79 .Kok.2          .              .             1.0000   -121680.0000      
79 .Kok.3          .              .             1.0000   -121680.0000      
80 .Mat.1          .              .             1.0000   -624100.0000      
80 .Mat.2          .              .             1.0000   -624100.0000      
80 .Mat.3          .              .             1.0000   -624100.0000      
80 .Kut.1          .              .             1.0000   -312050.0000      
80 .Kut.2          .              .             1.0000   -312050.0000      
80 .Kut.3          .              .             1.0000   -312050.0000      
80 .Kot.1          .              .             1.0000   -1.872300E+6      
80 .Kot.2          .              .             1.0000   -1.872300E+6      
80 .Kot.3          .              .             1.0000   -1.872300E+6      
80 .Mak.1          .              .             1.0000   -124820.0000      
80 .Mak.2          .              .             1.0000   -124820.0000      
80 .Mak.3          .              .             1.0000   -124820.0000      
80 .Kuk.1          .              .             1.0000   -187230.0000      
80 .Kuk.2          .              .             1.0000   -187230.0000      
80 .Kuk.3          .              .             1.0000   -187230.0000      
80 .Kok.1          .              .             1.0000   -124820.0000      
80 .Kok.2          .              .             1.0000   -124820.0000      
80 .Kok.3          .              .             1.0000   -124820.0000      
81 .Mat.1          .              .             1.0000   -640000.0000      
81 .Mat.2          .              .             1.0000   -640000.0000      
81 .Mat.3          .              .             1.0000   -640000.0000      
81 .Kut.1          .              .             1.0000   -320000.0000      
81 .Kut.2          .              .             1.0000   -320000.0000      
81 .Kut.3          .              .             1.0000   -320000.0000      
81 .Kot.1          .              .             1.0000   -1.920000E+6      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 23:25:38 Page 138
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 433


     VAR r  1 if we buy n boats of timber i, 0 otherwise

                 LOWER          LEVEL          UPPER         MARGINAL

81 .Kot.2          .              .             1.0000   -1.920000E+6      
81 .Kot.3          .              .             1.0000   -1.920000E+6      
81 .Mak.1          .              .             1.0000   -128000.0000      
81 .Mak.2          .              .             1.0000   -128000.0000      
81 .Mak.3          .              .             1.0000   -128000.0000      
81 .Kuk.1          .              .             1.0000   -192000.0000      
81 .Kuk.2          .              .             1.0000   -192000.0000      
81 .Kuk.3          .              .             1.0000   -192000.0000      
81 .Kok.1          .              .             1.0000   -128000.0000      
81 .Kok.2          .              .             1.0000   -128000.0000      
81 .Kok.3          .              .             1.0000   -128000.0000      
82 .Mat.1          .              .             1.0000   -656100.0000      
82 .Mat.2          .              .             1.0000   -656100.0000      
82 .Mat.3          .              .             1.0000   -656100.0000      
82 .Kut.1          .              .             1.0000   -328050.0000      
82 .Kut.2          .              .             1.0000   -328050.0000      
82 .Kut.3          .              .             1.0000   -328050.0000      
82 .Kot.1          .              .             1.0000   -1.968300E+6      
82 .Kot.2          .              .             1.0000   -1.968300E+6      
82 .Kot.3          .              .             1.0000   -1.968300E+6      
82 .Mak.1          .              .             1.0000   -131220.0000      
82 .Mak.2          .              .             1.0000   -131220.0000      
82 .Mak.3          .              .             1.0000   -131220.0000      
82 .Kuk.1          .              .             1.0000   -196830.0000      
82 .Kuk.2          .              .             1.0000   -196830.0000      
82 .Kuk.3          .              .             1.0000   -196830.0000      
82 .Kok.1          .              .             1.0000   -131220.0000      
82 .Kok.2          .              .             1.0000   -131220.0000      
82 .Kok.3          .              .             1.0000   -131220.0000      
83 .Mat.1          .              .             1.0000   -672400.0000      
83 .Mat.2          .              .             1.0000   -672400.0000      
83 .Mat.3          .              .             1.0000   -672400.0000      
83 .Kut.1          .              .             1.0000   -336200.0000      
83 .Kut.2          .              .             1.0000   -336200.0000      
83 .Kut.3          .              .             1.0000   -336200.0000      
83 .Kot.1          .              .             1.0000   -2.017200E+6      
83 .Kot.2          .              .             1.0000   -2.017200E+6      
83 .Kot.3          .              .             1.0000   -2.017200E+6      
83 .Mak.1          .              .             1.0000   -134480.0000      
83 .Mak.2          .              .             1.0000   -134480.0000      
83 .Mak.3          .              .             1.0000   -134480.0000      
83 .Kuk.1          .              .             1.0000   -201720.0000      
83 .Kuk.2          .              .             1.0000   -201720.0000      
83 .Kuk.3          .              .             1.0000   -201720.0000      
83 .Kok.1          .              .             1.0000   -134480.0000      
83 .Kok.2          .              .             1.0000   -134480.0000      
83 .Kok.3          .              .             1.0000   -134480.0000      
84 .Mat.1          .              .             1.0000   -688900.0000      
84 .Mat.2          .              .             1.0000   -688900.0000      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 23:25:38 Page 139
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 433


     VAR r  1 if we buy n boats of timber i, 0 otherwise

                 LOWER          LEVEL          UPPER         MARGINAL

84 .Mat.3          .              .             1.0000   -688900.0000      
84 .Kut.1          .              .             1.0000   -344450.0000      
84 .Kut.2          .              .             1.0000   -344450.0000      
84 .Kut.3          .              .             1.0000   -344450.0000      
84 .Kot.1          .              .             1.0000   -2.066700E+6      
84 .Kot.2          .              .             1.0000   -2.066700E+6      
84 .Kot.3          .              .             1.0000   -2.066700E+6      
84 .Mak.1          .              .             1.0000   -137780.0000      
84 .Mak.2          .              .             1.0000   -137780.0000      
84 .Mak.3          .              .             1.0000   -137780.0000      
84 .Kuk.1          .              .             1.0000   -206670.0000      
84 .Kuk.2          .              .             1.0000   -206670.0000      
84 .Kuk.3          .              .             1.0000   -206670.0000      
84 .Kok.1          .              .             1.0000   -137780.0000      
84 .Kok.2          .              .             1.0000   -137780.0000      
84 .Kok.3          .              .             1.0000   -137780.0000      
85 .Mat.1          .              .             1.0000   -705600.0000      
85 .Mat.2          .              .             1.0000   -705600.0000      
85 .Mat.3          .              .             1.0000   -705600.0000      
85 .Kut.1          .              .             1.0000   -352800.0000      
85 .Kut.2          .              .             1.0000   -352800.0000      
85 .Kut.3          .              .             1.0000   -352800.0000      
85 .Kot.1          .              .             1.0000   -2.116800E+6      
85 .Kot.2          .              .             1.0000   -2.116800E+6      
85 .Kot.3          .              .             1.0000   -2.116800E+6      
85 .Mak.1          .              .             1.0000   -141120.0000      
85 .Mak.2          .              .             1.0000   -141120.0000      
85 .Mak.3          .              .             1.0000   -141120.0000      
85 .Kuk.1          .              .             1.0000   -211680.0000      
85 .Kuk.2          .              .             1.0000   -211680.0000      
85 .Kuk.3          .              .             1.0000   -211680.0000      
85 .Kok.1          .              .             1.0000   -141120.0000      
85 .Kok.2          .              .             1.0000   -141120.0000      
85 .Kok.3          .              .             1.0000   -141120.0000      
86 .Mat.1          .              .             1.0000   -722500.0000      
86 .Mat.2          .              .             1.0000   -722500.0000      
86 .Mat.3          .              .             1.0000   -722500.0000      
86 .Kut.1          .              .             1.0000   -361250.0000      
86 .Kut.2          .              .             1.0000   -361250.0000      
86 .Kut.3          .              .             1.0000   -361250.0000      
86 .Kot.1          .              .             1.0000   -2.167500E+6      
86 .Kot.2          .              .             1.0000   -2.167500E+6      
86 .Kot.3          .              .             1.0000   -2.167500E+6      
86 .Mak.1          .              .             1.0000   -144500.0000      
86 .Mak.2          .              .             1.0000   -144500.0000      
86 .Mak.3          .              .             1.0000   -144500.0000      
86 .Kuk.1          .              .             1.0000   -216750.0000      
86 .Kuk.2          .              .             1.0000   -216750.0000      
86 .Kuk.3          .              .             1.0000   -216750.0000      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 23:25:38 Page 140
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 433


     VAR r  1 if we buy n boats of timber i, 0 otherwise

                 LOWER          LEVEL          UPPER         MARGINAL

86 .Kok.1          .              .             1.0000   -144500.0000      
86 .Kok.2          .              .             1.0000   -144500.0000      
86 .Kok.3          .              .             1.0000   -144500.0000      
87 .Mat.1          .              .             1.0000   -739600.0000      
87 .Mat.2          .              .             1.0000   -739600.0000      
87 .Mat.3          .              .             1.0000   -739600.0000      
87 .Kut.1          .              .             1.0000   -369800.0000      
87 .Kut.2          .              .             1.0000   -369800.0000      
87 .Kut.3          .              .             1.0000   -369800.0000      
87 .Kot.1          .              .             1.0000   -2.218800E+6      
87 .Kot.2          .              .             1.0000   -2.218800E+6      
87 .Kot.3          .              .             1.0000   -2.218800E+6      
87 .Mak.1          .              .             1.0000   -147920.0000      
87 .Mak.2          .              .             1.0000   -147920.0000      
87 .Mak.3          .              .             1.0000   -147920.0000      
87 .Kuk.1          .              .             1.0000   -221880.0000      
87 .Kuk.2          .              .             1.0000   -221880.0000      
87 .Kuk.3          .              .             1.0000   -221880.0000      
87 .Kok.1          .              .             1.0000   -147920.0000      
87 .Kok.2          .              .             1.0000   -147920.0000      
87 .Kok.3          .              .             1.0000   -147920.0000      
88 .Mat.1          .              .             1.0000   -756900.0000      
88 .Mat.2          .              .             1.0000   -756900.0000      
88 .Mat.3          .              .             1.0000   -756900.0000      
88 .Kut.1          .              .             1.0000   -378450.0000      
88 .Kut.2          .              .             1.0000   -378450.0000      
88 .Kut.3          .              .             1.0000   -378450.0000      
88 .Kot.1          .              .             1.0000   -2.270700E+6      
88 .Kot.2          .              .             1.0000   -2.270700E+6      
88 .Kot.3          .              .             1.0000   -2.270700E+6      
88 .Mak.1          .              .             1.0000   -151380.0000      
88 .Mak.2          .              .             1.0000   -151380.0000      
88 .Mak.3          .              .             1.0000   -151380.0000      
88 .Kuk.1          .              .             1.0000   -227070.0000      
88 .Kuk.2          .              .             1.0000   -227070.0000      
88 .Kuk.3          .              .             1.0000   -227070.0000      
88 .Kok.1          .              .             1.0000   -151380.0000      
88 .Kok.2          .              .             1.0000   -151380.0000      
88 .Kok.3          .              .             1.0000   -151380.0000      
89 .Mat.1          .              .             1.0000   -774400.0000      
89 .Mat.2          .              .             1.0000   -774400.0000      
89 .Mat.3          .              .             1.0000   -774400.0000      
89 .Kut.1          .              .             1.0000   -387200.0000      
89 .Kut.2          .              .             1.0000   -387200.0000      
89 .Kut.3          .              .             1.0000   -387200.0000      
89 .Kot.1          .              .             1.0000   -2.323200E+6      
89 .Kot.2          .              .             1.0000   -2.323200E+6      
89 .Kot.3          .              .             1.0000   -2.323200E+6      
89 .Mak.1          .              .             1.0000   -154880.0000      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 23:25:38 Page 141
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 433


     VAR r  1 if we buy n boats of timber i, 0 otherwise

                 LOWER          LEVEL          UPPER         MARGINAL

89 .Mak.2          .              .             1.0000   -154880.0000      
89 .Mak.3          .              .             1.0000   -154880.0000      
89 .Kuk.1          .              .             1.0000   -232320.0000      
89 .Kuk.2          .              .             1.0000   -232320.0000      
89 .Kuk.3          .              .             1.0000   -232320.0000      
89 .Kok.1          .              .             1.0000   -154880.0000      
89 .Kok.2          .              .             1.0000   -154880.0000      
89 .Kok.3          .              .             1.0000   -154880.0000      
90 .Mat.1          .              .             1.0000   -792100.0000      
90 .Mat.2          .              .             1.0000   -792100.0000      
90 .Mat.3          .              .             1.0000   -792100.0000      
90 .Kut.1          .              .             1.0000   -396050.0000      
90 .Kut.2          .              .             1.0000   -396050.0000      
90 .Kut.3          .              .             1.0000   -396050.0000      
90 .Kot.1          .              .             1.0000   -2.376300E+6      
90 .Kot.2          .              .             1.0000   -2.376300E+6      
90 .Kot.3          .              .             1.0000   -2.376300E+6      
90 .Mak.1          .              .             1.0000   -158420.0000      
90 .Mak.2          .              .             1.0000   -158420.0000      
90 .Mak.3          .              .             1.0000   -158420.0000      
90 .Kuk.1          .              .             1.0000   -237630.0000      
90 .Kuk.2          .              .             1.0000   -237630.0000      
90 .Kuk.3          .              .             1.0000   -237630.0000      
90 .Kok.1          .              .             1.0000   -158420.0000      
90 .Kok.2          .              .             1.0000   -158420.0000      
90 .Kok.3          .              .             1.0000   -158420.0000      
91 .Mat.1          .              .             1.0000   -810000.0000      
91 .Mat.2          .              .             1.0000   -810000.0000      
91 .Mat.3          .              .             1.0000   -810000.0000      
91 .Kut.1          .              .             1.0000   -405000.0000      
91 .Kut.2          .              .             1.0000   -405000.0000      
91 .Kut.3          .              .             1.0000   -405000.0000      
91 .Kot.1          .              .             1.0000   -2.430000E+6      
91 .Kot.2          .              .             1.0000   -2.430000E+6      
91 .Kot.3          .              .             1.0000   -2.430000E+6      
91 .Mak.1          .              .             1.0000   -162000.0000      
91 .Mak.2          .              .             1.0000   -162000.0000      
91 .Mak.3          .              .             1.0000   -162000.0000      
91 .Kuk.1          .              .             1.0000   -243000.0000      
91 .Kuk.2          .              .             1.0000   -243000.0000      
91 .Kuk.3          .              .             1.0000   -243000.0000      
91 .Kok.1          .              .             1.0000   -162000.0000      
91 .Kok.2          .              .             1.0000   -162000.0000      
91 .Kok.3          .              .             1.0000   -162000.0000      
92 .Mat.1          .              .             1.0000   -828100.0000      
92 .Mat.2          .              .             1.0000   -828100.0000      
92 .Mat.3          .              .             1.0000   -828100.0000      
92 .Kut.1          .              .             1.0000   -414050.0000      
92 .Kut.2          .              .             1.0000   -414050.0000      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 23:25:38 Page 142
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 433


     VAR r  1 if we buy n boats of timber i, 0 otherwise

                 LOWER          LEVEL          UPPER         MARGINAL

92 .Kut.3          .              .             1.0000   -414050.0000      
92 .Kot.1          .              .             1.0000   -2.484300E+6      
92 .Kot.2          .              .             1.0000   -2.484300E+6      
92 .Kot.3          .              .             1.0000   -2.484300E+6      
92 .Mak.1          .              .             1.0000   -165620.0000      
92 .Mak.2          .              .             1.0000   -165620.0000      
92 .Mak.3          .              .             1.0000   -165620.0000      
92 .Kuk.1          .              .             1.0000   -248430.0000      
92 .Kuk.2          .              .             1.0000   -248430.0000      
92 .Kuk.3          .              .             1.0000   -248430.0000      
92 .Kok.1          .              .             1.0000   -165620.0000      
92 .Kok.2          .              .             1.0000   -165620.0000      
92 .Kok.3          .              .             1.0000   -165620.0000      
93 .Mat.1          .              .             1.0000   -846400.0000      
93 .Mat.2          .              .             1.0000   -846400.0000      
93 .Mat.3          .              .             1.0000   -846400.0000      
93 .Kut.1          .              .             1.0000   -423200.0000      
93 .Kut.2          .              .             1.0000   -423200.0000      
93 .Kut.3          .              .             1.0000   -423200.0000      
93 .Kot.1          .              .             1.0000   -2.539200E+6      
93 .Kot.2          .              .             1.0000   -2.539200E+6      
93 .Kot.3          .              .             1.0000   -2.539200E+6      
93 .Mak.1          .              .             1.0000   -169280.0000      
93 .Mak.2          .              .             1.0000   -169280.0000      
93 .Mak.3          .              .             1.0000   -169280.0000      
93 .Kuk.1          .              .             1.0000   -253920.0000      
93 .Kuk.2          .              .             1.0000   -253920.0000      
93 .Kuk.3          .              .             1.0000   -253920.0000      
93 .Kok.1          .              .             1.0000   -169280.0000      
93 .Kok.2          .              .             1.0000   -169280.0000      
93 .Kok.3          .              .             1.0000   -169280.0000      
94 .Mat.1          .              .             1.0000   -864900.0000      
94 .Mat.2          .              .             1.0000   -864900.0000      
94 .Mat.3          .              .             1.0000   -864900.0000      
94 .Kut.1          .              .             1.0000   -432450.0000      
94 .Kut.2          .              .             1.0000   -432450.0000      
94 .Kut.3          .              .             1.0000   -432450.0000      
94 .Kot.1          .              .             1.0000   -2.594700E+6      
94 .Kot.2          .              .             1.0000   -2.594700E+6      
94 .Kot.3          .              .             1.0000   -2.594700E+6      
94 .Mak.1          .              .             1.0000   -172980.0000      
94 .Mak.2          .              .             1.0000   -172980.0000      
94 .Mak.3          .              .             1.0000   -172980.0000      
94 .Kuk.1          .              .             1.0000   -259470.0000      
94 .Kuk.2          .              .             1.0000   -259470.0000      
94 .Kuk.3          .              .             1.0000   -259470.0000      
94 .Kok.1          .              .             1.0000   -172980.0000      
94 .Kok.2          .              .             1.0000   -172980.0000      
94 .Kok.3          .              .             1.0000   -172980.0000      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 23:25:38 Page 143
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 433


     VAR r  1 if we buy n boats of timber i, 0 otherwise

                 LOWER          LEVEL          UPPER         MARGINAL

95 .Mat.1          .              .             1.0000   -883600.0000      
95 .Mat.2          .              .             1.0000   -883600.0000      
95 .Mat.3          .              .             1.0000   -883600.0000      
95 .Kut.1          .              .             1.0000   -441800.0000      
95 .Kut.2          .              .             1.0000   -441800.0000      
95 .Kut.3          .              .             1.0000   -441800.0000      
95 .Kot.1          .              .             1.0000   -2.650800E+6      
95 .Kot.2          .              .             1.0000   -2.650800E+6      
95 .Kot.3          .              .             1.0000   -2.650800E+6      
95 .Mak.1          .              .             1.0000   -176720.0000      
95 .Mak.2          .              .             1.0000   -176720.0000      
95 .Mak.3          .              .             1.0000   -176720.0000      
95 .Kuk.1          .              .             1.0000   -265080.0000      
95 .Kuk.2          .              .             1.0000   -265080.0000      
95 .Kuk.3          .              .             1.0000   -265080.0000      
95 .Kok.1          .              .             1.0000   -176720.0000      
95 .Kok.2          .              .             1.0000   -176720.0000      
95 .Kok.3          .              .             1.0000   -176720.0000      
96 .Mat.1          .              .             1.0000   -902500.0000      
96 .Mat.2          .              .             1.0000   -902500.0000      
96 .Mat.3          .              .             1.0000   -902500.0000      
96 .Kut.1          .              .             1.0000   -451250.0000      
96 .Kut.2          .              .             1.0000   -451250.0000      
96 .Kut.3          .              .             1.0000   -451250.0000      
96 .Kot.1          .              .             1.0000   -2.707500E+6      
96 .Kot.2          .              .             1.0000   -2.707500E+6      
96 .Kot.3          .              .             1.0000   -2.707500E+6      
96 .Mak.1          .              .             1.0000   -180500.0000      
96 .Mak.2          .              .             1.0000   -180500.0000      
96 .Mak.3          .              .             1.0000   -180500.0000      
96 .Kuk.1          .              .             1.0000   -270750.0000      
96 .Kuk.2          .              .             1.0000   -270750.0000      
96 .Kuk.3          .              .             1.0000   -270750.0000      
96 .Kok.1          .              .             1.0000   -180500.0000      
96 .Kok.2          .              .             1.0000   -180500.0000      
96 .Kok.3          .              .             1.0000   -180500.0000      
97 .Mat.1          .              .             1.0000   -921600.0000      
97 .Mat.2          .              .             1.0000   -921600.0000      
97 .Mat.3          .              .             1.0000   -921600.0000      
97 .Kut.1          .              .             1.0000   -460800.0000      
97 .Kut.2          .              .             1.0000   -460800.0000      
97 .Kut.3          .              .             1.0000   -460800.0000      
97 .Kot.1          .              .             1.0000   -2.764800E+6      
97 .Kot.2          .              .             1.0000   -2.764800E+6      
97 .Kot.3          .              .             1.0000   -2.764800E+6      
97 .Mak.1          .              .             1.0000   -184320.0000      
97 .Mak.2          .              .             1.0000   -184320.0000      
97 .Mak.3          .              .             1.0000   -184320.0000      
97 .Kuk.1          .              .             1.0000   -276480.0000      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 23:25:38 Page 144
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 433


     VAR r  1 if we buy n boats of timber i, 0 otherwise

                 LOWER          LEVEL          UPPER         MARGINAL

97 .Kuk.2          .              .             1.0000   -276480.0000      
97 .Kuk.3          .              .             1.0000   -276480.0000      
97 .Kok.1          .              .             1.0000   -184320.0000      
97 .Kok.2          .              .             1.0000   -184320.0000      
97 .Kok.3          .              .             1.0000   -184320.0000      
98 .Mat.1          .              .             1.0000   -940900.0000      
98 .Mat.2          .              .             1.0000   -940900.0000      
98 .Mat.3          .              .             1.0000   -940900.0000      
98 .Kut.1          .              .             1.0000   -470450.0000      
98 .Kut.2          .              .             1.0000   -470450.0000      
98 .Kut.3          .              .             1.0000   -470450.0000      
98 .Kot.1          .              .             1.0000   -2.822700E+6      
98 .Kot.2          .              .             1.0000   -2.822700E+6      
98 .Kot.3          .              .             1.0000   -2.822700E+6      
98 .Mak.1          .              .             1.0000   -188180.0000      
98 .Mak.2          .              .             1.0000   -188180.0000      
98 .Mak.3          .              .             1.0000   -188180.0000      
98 .Kuk.1          .              .             1.0000   -282270.0000      
98 .Kuk.2          .              .             1.0000   -282270.0000      
98 .Kuk.3          .              .             1.0000   -282270.0000      
98 .Kok.1          .              .             1.0000   -188180.0000      
98 .Kok.2          .              .             1.0000   -188180.0000      
98 .Kok.3          .              .             1.0000   -188180.0000      
99 .Mat.1          .              .             1.0000   -960400.0000      
99 .Mat.2          .              .             1.0000   -960400.0000      
99 .Mat.3          .              .             1.0000   -960400.0000      
99 .Kut.1          .              .             1.0000   -480200.0000      
99 .Kut.2          .              .             1.0000   -480200.0000      
99 .Kut.3          .              .             1.0000   -480200.0000      
99 .Kot.1          .              .             1.0000   -2.881200E+6      
99 .Kot.2          .              .             1.0000   -2.881200E+6      
99 .Kot.3          .              .             1.0000   -2.881200E+6      
99 .Mak.1          .              .             1.0000   -192080.0000      
99 .Mak.2          .              .             1.0000   -192080.0000      
99 .Mak.3          .              .             1.0000   -192080.0000      
99 .Kuk.1          .              .             1.0000   -288120.0000      
99 .Kuk.2          .              .             1.0000   -288120.0000      
99 .Kuk.3          .              .             1.0000   -288120.0000      
99 .Kok.1          .              .             1.0000   -192080.0000      
99 .Kok.2          .              .             1.0000   -192080.0000      
99 .Kok.3          .              .             1.0000   -192080.0000      
100.Mat.1          .              .             1.0000   -980100.0000      
100.Mat.2          .              .             1.0000   -980100.0000      
100.Mat.3          .              .             1.0000   -980100.0000      
100.Kut.1          .              .             1.0000   -490050.0000      
100.Kut.2          .              .             1.0000   -490050.0000      
100.Kut.3          .              .             1.0000   -490050.0000      
100.Kot.1          .              .             1.0000   -2.940300E+6      
100.Kot.2          .              .             1.0000   -2.940300E+6      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 23:25:38 Page 145
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 433


     VAR r  1 if we buy n boats of timber i, 0 otherwise

                 LOWER          LEVEL          UPPER         MARGINAL

100.Kot.3          .              .             1.0000   -2.940300E+6      
100.Mak.1          .              .             1.0000   -196020.0000      
100.Mak.2          .              .             1.0000   -196020.0000      
100.Mak.3          .              .             1.0000   -196020.0000      
100.Kuk.1          .              .             1.0000   -294030.0000      
100.Kuk.2          .              .             1.0000   -294030.0000      
100.Kuk.3          .              .             1.0000   -294030.0000      
100.Kok.1          .              .             1.0000   -196020.0000      
100.Kok.2          .              .             1.0000   -196020.0000      
100.Kok.3          .              .             1.0000   -196020.0000      
101.Mat.1          .              .             1.0000   -1.000000E+6      
101.Mat.2          .              .             1.0000   -1.000000E+6      
101.Mat.3          .              .             1.0000   -1.000000E+6      
101.Kut.1          .              .             1.0000   -500000.0000      
101.Kut.2          .              .             1.0000   -500000.0000      
101.Kut.3          .              .             1.0000   -500000.0000      
101.Kot.1          .              .             1.0000   -3.000000E+6      
101.Kot.2          .              .             1.0000   -3.000000E+6      
101.Kot.3          .              .             1.0000   -3.000000E+6      
101.Mak.1          .              .             1.0000   -200000.0000      
101.Mak.2          .              .             1.0000   -200000.0000      
101.Mak.3          .              .             1.0000   -200000.0000      
101.Kuk.1          .              .             1.0000   -300000.0000      
101.Kuk.2          .              .             1.0000   -300000.0000      
101.Kuk.3          .              .             1.0000   -300000.0000      
101.Kok.1          .              .             1.0000   -200000.0000      
101.Kok.2          .              .             1.0000   -200000.0000      
101.Kok.3          .              .             1.0000   -200000.0000      
102.Mat.1          .              .             1.0000   -1.020100E+6      
102.Mat.2          .              .             1.0000   -1.020100E+6      
102.Mat.3          .              .             1.0000   -1.020100E+6      
102.Kut.1          .              .             1.0000   -510050.0000      
102.Kut.2          .              .             1.0000   -510050.0000      
102.Kut.3          .              .             1.0000   -510050.0000      
102.Kot.1          .              .             1.0000   -3.060300E+6      
102.Kot.2          .              .             1.0000   -3.060300E+6      
102.Kot.3          .              .             1.0000   -3.060300E+6      
102.Mak.1          .              .             1.0000   -204020.0000      
102.Mak.2          .              .             1.0000   -204020.0000      
102.Mak.3          .              .             1.0000   -204020.0000      
102.Kuk.1          .              .             1.0000   -306030.0000      
102.Kuk.2          .              .             1.0000   -306030.0000      
102.Kuk.3          .              .             1.0000   -306030.0000      
102.Kok.1          .              .             1.0000   -204020.0000      
102.Kok.2          .              .             1.0000   -204020.0000      
102.Kok.3          .              .             1.0000   -204020.0000      
103.Mat.1          .              .             1.0000   -1.040400E+6      
103.Mat.2          .              .             1.0000   -1.040400E+6      
103.Mat.3          .              .             1.0000   -1.040400E+6      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 23:25:38 Page 146
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 433


     VAR r  1 if we buy n boats of timber i, 0 otherwise

                 LOWER          LEVEL          UPPER         MARGINAL

103.Kut.1          .              .             1.0000   -520200.0000      
103.Kut.2          .              .             1.0000   -520200.0000      
103.Kut.3          .              .             1.0000   -520200.0000      
103.Kot.1          .              .             1.0000   -3.121200E+6      
103.Kot.2          .              .             1.0000   -3.121200E+6      
103.Kot.3          .              .             1.0000   -3.121200E+6      
103.Mak.1          .              .             1.0000   -208080.0000      
103.Mak.2          .              .             1.0000   -208080.0000      
103.Mak.3          .              .             1.0000   -208080.0000      
103.Kuk.1          .              .             1.0000   -312120.0000      
103.Kuk.2          .              .             1.0000   -312120.0000      
103.Kuk.3          .              .             1.0000   -312120.0000      
103.Kok.1          .              .             1.0000   -208080.0000      
103.Kok.2          .              .             1.0000   -208080.0000      
103.Kok.3          .              .             1.0000   -208080.0000      
104.Mat.1          .              .             1.0000   -1.060900E+6      
104.Mat.2          .              .             1.0000   -1.060900E+6      
104.Mat.3          .              .             1.0000   -1.060900E+6      
104.Kut.1          .              .             1.0000   -530450.0000      
104.Kut.2          .              .             1.0000   -530450.0000      
104.Kut.3          .              .             1.0000   -530450.0000      
104.Kot.1          .              .             1.0000   -3.182700E+6      
104.Kot.2          .              .             1.0000   -3.182700E+6      
104.Kot.3          .              .             1.0000   -3.182700E+6      
104.Mak.1          .              .             1.0000   -212180.0000      
104.Mak.2          .              .             1.0000   -212180.0000      
104.Mak.3          .              .             1.0000   -212180.0000      
104.Kuk.1          .              .             1.0000   -318270.0000      
104.Kuk.2          .              .             1.0000   -318270.0000      
104.Kuk.3          .              .             1.0000   -318270.0000      
104.Kok.1          .              .             1.0000   -212180.0000      
104.Kok.2          .              .             1.0000   -212180.0000      
104.Kok.3          .              .             1.0000   -212180.0000      
105.Mat.1          .              .             1.0000   -1.081600E+6      
105.Mat.2          .              .             1.0000   -1.081600E+6      
105.Mat.3          .              .             1.0000   -1.081600E+6      
105.Kut.1          .              .             1.0000   -540800.0000      
105.Kut.2          .              .             1.0000   -540800.0000      
105.Kut.3          .              .             1.0000   -540800.0000      
105.Kot.1          .              .             1.0000   -3.244800E+6      
105.Kot.2          .              .             1.0000   -3.244800E+6      
105.Kot.3          .              .             1.0000   -3.244800E+6      
105.Mak.1          .              .             1.0000   -216320.0000      
105.Mak.2          .              .             1.0000   -216320.0000      
105.Mak.3          .              .             1.0000   -216320.0000      
105.Kuk.1          .              .             1.0000   -324480.0000      
105.Kuk.2          .              .             1.0000   -324480.0000      
105.Kuk.3          .              .             1.0000   -324480.0000      
105.Kok.1          .              .             1.0000   -216320.0000      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 23:25:38 Page 147
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 433


     VAR r  1 if we buy n boats of timber i, 0 otherwise

                 LOWER          LEVEL          UPPER         MARGINAL

105.Kok.2          .              .             1.0000   -216320.0000      
105.Kok.3          .              .             1.0000   -216320.0000      
106.Mat.1          .              .             1.0000   -1.102500E+6      
106.Mat.2          .              .             1.0000   -1.102500E+6      
106.Mat.3          .              .             1.0000   -1.102500E+6      
106.Kut.1          .              .             1.0000   -551250.0000      
106.Kut.2          .              .             1.0000   -551250.0000      
106.Kut.3          .              .             1.0000   -551250.0000      
106.Kot.1          .              .             1.0000   -3.307500E+6      
106.Kot.2          .              .             1.0000   -3.307500E+6      
106.Kot.3          .              .             1.0000   -3.307500E+6      
106.Mak.1          .              .             1.0000   -220500.0000      
106.Mak.2          .              .             1.0000   -220500.0000      
106.Mak.3          .              .             1.0000   -220500.0000      
106.Kuk.1          .              .             1.0000   -330750.0000      
106.Kuk.2          .              .             1.0000   -330750.0000      
106.Kuk.3          .              .             1.0000   -330750.0000      
106.Kok.1          .              .             1.0000   -220500.0000      
106.Kok.2          .              .             1.0000   -220500.0000      
106.Kok.3          .              .             1.0000   -220500.0000      
107.Mat.1          .              .             1.0000   -1.123600E+6      
107.Mat.2          .              .             1.0000   -1.123600E+6      
107.Mat.3          .              .             1.0000   -1.123600E+6      
107.Kut.1          .              .             1.0000   -561800.0000      
107.Kut.2          .              .             1.0000   -561800.0000      
107.Kut.3          .              .             1.0000   -561800.0000      
107.Kot.1          .              .             1.0000   -3.370800E+6      
107.Kot.2          .              .             1.0000   -3.370800E+6      
107.Kot.3          .              .             1.0000   -3.370800E+6      
107.Mak.1          .              .             1.0000   -224720.0000      
107.Mak.2          .              .             1.0000   -224720.0000      
107.Mak.3          .              .             1.0000   -224720.0000      
107.Kuk.1          .              .             1.0000   -337080.0000      
107.Kuk.2          .              .             1.0000   -337080.0000      
107.Kuk.3          .              .             1.0000   -337080.0000      
107.Kok.1          .              .             1.0000   -224720.0000      
107.Kok.2          .              .             1.0000   -224720.0000      
107.Kok.3          .              .             1.0000   -224720.0000      

---- VAR u  1 if we use n boats for product j shiping to region k, 0 otherwise

                    LOWER          LEVEL          UPPER         MARGINAL

1 .Mas .EU.1          .              .             1.0000         EPS         
1 .Mas .EU.2          .              .             1.0000         EPS         
1 .Mas .EU.3          .              .             1.0000         EPS         
1 .Mas .IE.1          .             1.0000         1.0000         EPS         
1 .Mas .IE.2          .             1.0000         1.0000         EPS         
1 .Mas .IE.3          .             1.0000         1.0000         EPS         
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 23:25:38 Page 148
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 433


     VAR u  1 if we use n boats for product j shiping to region k, 0 otherwise

                    LOWER          LEVEL          UPPER         MARGINAL

1 .Mas .PA.1          .              .             1.0000         EPS         
1 .Mas .PA.2          .             1.0000         1.0000         EPS         
1 .Mas .PA.3          .             1.0000         1.0000         EPS         
1 .Mas .KI.1          .              .             1.0000         EPS         
1 .Mas .KI.2          .              .             1.0000         EPS         
1 .Mas .KI.3          .             1.0000         1.0000         EPS         
1 .Kus .EU.1          .             1.0000         1.0000         EPS         
1 .Kus .EU.2          .             1.0000         1.0000         EPS         
1 .Kus .EU.3          .             1.0000         1.0000         EPS         
1 .Kus .IE.1          .             1.0000         1.0000         EPS         
1 .Kus .IE.2          .             1.0000         1.0000         EPS         
1 .Kus .IE.3          .             1.0000         1.0000         EPS         
1 .Kus .PA.1          .             1.0000         1.0000         EPS         
1 .Kus .PA.2          .             1.0000         1.0000         EPS         
1 .Kus .PA.3          .             1.0000         1.0000         EPS         
1 .Kus .KI.1          .             1.0000         1.0000         EPS         
1 .Kus .KI.2          .             1.0000         1.0000         EPS         
1 .Kus .KI.3          .             1.0000         1.0000         EPS         
1 .Kos .EU.1          .             1.0000         1.0000         EPS         
1 .Kos .EU.2          .             1.0000         1.0000         EPS         
1 .Kos .EU.3          .             1.0000         1.0000         EPS         
1 .Kos .IE.1          .             1.0000         1.0000         EPS         
1 .Kos .IE.2          .             1.0000         1.0000         EPS         
1 .Kos .IE.3          .             1.0000         1.0000         EPS         
1 .Kos .PA.1          .             1.0000         1.0000         EPS         
1 .Kos .PA.2          .             1.0000         1.0000         EPS         
1 .Kos .PA.3          .             1.0000         1.0000         EPS         
1 .Kos .KI.1          .             1.0000         1.0000         EPS         
1 .Kos .KI.2          .             1.0000         1.0000         EPS         
1 .Kos .KI.3          .              .             1.0000         EPS         
1 .Kuv .EU.1          .              .             1.0000         EPS         
1 .Kuv .EU.2          .              .             1.0000         EPS         
1 .Kuv .EU.3          .              .             1.0000         EPS         
1 .Kuv .IE.1          .             1.0000         1.0000         EPS         
1 .Kuv .IE.2          .             1.0000         1.0000         EPS         
1 .Kuv .IE.3          .             1.0000         1.0000         EPS         
1 .Kuv .PA.1          .             1.0000         1.0000         EPS         
1 .Kuv .PA.2          .             1.0000         1.0000         EPS         
1 .Kuv .PA.3          .             1.0000         1.0000         EPS         
1 .Kuv .KI.1          .             1.0000         1.0000         EPS         
1 .Kuv .KI.2          .             1.0000         1.0000         EPS         
1 .Kuv .KI.3          .             1.0000         1.0000         EPS         
1 .Kov .EU.1          .              .             1.0000         EPS         
1 .Kov .EU.2          .              .             1.0000         EPS         
1 .Kov .EU.3          .              .             1.0000         EPS         
1 .Kov .IE.1          .             1.0000         1.0000         EPS         
1 .Kov .IE.2          .             1.0000         1.0000         EPS         
1 .Kov .IE.3          .             1.0000         1.0000         EPS         
1 .Kov .PA.1          .             1.0000         1.0000         EPS         
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 23:25:38 Page 149
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 433


     VAR u  1 if we use n boats for product j shiping to region k, 0 otherwise

                    LOWER          LEVEL          UPPER         MARGINAL

1 .Kov .PA.2          .             1.0000         1.0000         EPS         
1 .Kov .PA.3          .             1.0000         1.0000         EPS         
1 .Kov .KI.1          .             1.0000         1.0000         EPS         
1 .Kov .KI.2          .             1.0000         1.0000         EPS         
1 .Kov .KI.3          .             1.0000         1.0000         EPS         
1 .Hsel.EU.1          .             1.0000         1.0000         EPS         
1 .Hsel.EU.2          .             1.0000         1.0000         EPS         
1 .Hsel.EU.3          .             1.0000         1.0000         EPS         
1 .Hsel.IE.1          .              .             1.0000         EPS         
1 .Hsel.IE.2          .             1.0000         1.0000         EPS         
1 .Hsel.IE.3          .             1.0000         1.0000         EPS         
1 .Hsel.PA.1          .             1.0000         1.0000         EPS         
1 .Hsel.PA.2          .             1.0000         1.0000         EPS         
1 .Hsel.PA.3          .             1.0000         1.0000         EPS         
1 .Hsel.KI.1          .              .             1.0000         EPS         
1 .Hsel.KI.2          .             1.0000         1.0000         EPS         
1 .Hsel.KI.3          .             1.0000         1.0000         EPS         
1 .Lsel.EU.1          .              .             1.0000         EPS         
1 .Lsel.EU.2          .             1.0000         1.0000         EPS         
1 .Lsel.EU.3          .             1.0000         1.0000         EPS         
1 .Lsel.IE.1          .              .             1.0000         EPS         
1 .Lsel.IE.2          .              .             1.0000         EPS         
1 .Lsel.IE.3          .              .             1.0000         EPS         
1 .Lsel.PA.1          .             1.0000         1.0000         EPS         
1 .Lsel.PA.2          .             1.0000         1.0000         EPS         
1 .Lsel.PA.3          .             1.0000         1.0000         EPS         
1 .Lsel.KI.1          .              .             1.0000         EPS         
1 .Lsel.KI.2          .             1.0000         1.0000         EPS         
1 .Lsel.KI.3          .             1.0000         1.0000         EPS         
1 .Pap .EU.1          .              .             1.0000         EPS         
1 .Pap .EU.2          .              .             1.0000         EPS         
1 .Pap .EU.3          .              .             1.0000         EPS         
1 .Pap .IE.1          .              .             1.0000         EPS         
1 .Pap .IE.2          .              .             1.0000         EPS         
1 .Pap .IE.3          .              .             1.0000         EPS         
1 .Pap .PA.1          .             1.0000         1.0000         EPS         
1 .Pap .PA.2          .              .             1.0000         EPS         
1 .Pap .PA.3          .             1.0000         1.0000         EPS         
1 .Pap .KI.1          .              .             1.0000         EPS         
1 .Pap .KI.2          .              .             1.0000         EPS         
1 .Pap .KI.3          .              .             1.0000         EPS         
2 .Mas .EU.1          .              .             1.0000     15600.0000      
2 .Mas .EU.2          .              .             1.0000     14676.9925      
2 .Mas .EU.3          .              .             1.0000     13808.5610      
2 .Mas .IE.1          .              .             1.0000     12000.0000      
2 .Mas .IE.2          .              .             1.0000     11296.4415      
2 .Mas .IE.3          .              .             1.0000     10634.0386      
2 .Mas .PA.1          .             1.0000         1.0000     12800.0000      
2 .Mas .PA.2          .              .             1.0000     12050.7793      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 23:25:38 Page 150
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 433


     VAR u  1 if we use n boats for product j shiping to region k, 0 otherwise

                    LOWER          LEVEL          UPPER         MARGINAL

2 .Mas .PA.3          .              .             1.0000     11345.2989      
2 .Mas .KI.1          .             1.0000         1.0000     13500.0000      
2 .Mas .KI.2          .             1.0000         1.0000     12711.9890      
2 .Mas .KI.3          .              .             1.0000     11969.8306      
2 .Kus .EU.1          .              .             1.0000         EPS         
2 .Kus .EU.2          .              .             1.0000         EPS         
2 .Kus .EU.3          .              .             1.0000         EPS         
2 .Kus .IE.1          .              .             1.0000         EPS         
2 .Kus .IE.2          .              .             1.0000         EPS         
2 .Kus .IE.3          .              .             1.0000         EPS         
2 .Kus .PA.1          .              .             1.0000         EPS         
2 .Kus .PA.2          .              .             1.0000         EPS         
2 .Kus .PA.3          .              .             1.0000         EPS         
2 .Kus .KI.1          .              .             1.0000         EPS         
2 .Kus .KI.2          .              .             1.0000         EPS         
2 .Kus .KI.3          .              .             1.0000         EPS         
2 .Kos .EU.1          .              .             1.0000     11600.0000      
2 .Kos .EU.2          .              .             1.0000     10876.5076      
2 .Kos .EU.3          .              .             1.0000     10197.8392      
2 .Kos .IE.1          .              .             1.0000     12000.0000      
2 .Kos .IE.2          .              .             1.0000     11259.1910      
2 .Kos .IE.3          .              .             1.0000     10563.6687      
2 .Kos .PA.1          .              .             1.0000     12800.0000      
2 .Kos .PA.2          .              .             1.0000     12010.7258      
2 .Kos .PA.3          .              .             1.0000     11269.6266      
2 .Kos .KI.1          .              .             1.0000     13500.0000      
2 .Kos .KI.2          .              .             1.0000     12670.0478      
2 .Kos .KI.3          .             1.0000         1.0000     11890.5525      
2 .Kuv .EU.1          .              .             1.0000     43600.0000      
2 .Kuv .EU.2          .              .             1.0000     40813.4145      
2 .Kuv .EU.3          .              .             1.0000     38204.8495      
2 .Kuv .IE.1          .              .             1.0000     37000.0000      
2 .Kuv .IE.2          .              .             1.0000     34644.3738      
2 .Kuv .IE.3          .              .             1.0000     32438.5234      
2 .Kuv .PA.1          .              .             1.0000     34800.0000      
2 .Kuv .PA.2          .              .             1.0000     32588.0269      
2 .Kuv .PA.3          .              .             1.0000     30516.4147      
2 .Kuv .KI.1          .              .             1.0000     33500.0000      
2 .Kuv .KI.2          .              .             1.0000     31375.4277      
2 .Kuv .KI.3          .              .             1.0000     29385.2961      
2 .Kov .EU.1          .              .             1.0000     42600.0000      
2 .Kov .EU.2          .              .             1.0000     39683.7755      
2 .Kov .EU.3          .             1.0000         1.0000     36967.0493      
2 .Kov .IE.1          .              .             1.0000     40000.0000      
2 .Kov .IE.2          .              .             1.0000     37273.1642      
2 .Kov .IE.3          .              .             1.0000     34731.8773      
2 .Kov .PA.1          .              .             1.0000     37800.0000      
2 .Kov .PA.2          .              .             1.0000     35227.7970      
2 .Kov .PA.3          .              .             1.0000     32830.2136      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 23:25:38 Page 151
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 433


     VAR u  1 if we use n boats for product j shiping to region k, 0 otherwise

                    LOWER          LEVEL          UPPER         MARGINAL

2 .Kov .KI.1          .              .             1.0000     36500.0000      
2 .Kov .KI.2          .              .             1.0000     34022.4913      
2 .Kov .KI.3          .              .             1.0000     31712.6276      
2 .Hsel.EU.1          .              .             1.0000     22800.0000      
2 .Hsel.EU.2          .              .             1.0000     21136.2284      
2 .Hsel.EU.3          .              .             1.0000     19593.7632      
2 .Hsel.IE.1          .              .             1.0000     24600.0000      
2 .Hsel.IE.2          .              .             1.0000     22809.0422      
2 .Hsel.IE.3          .              .             1.0000     21148.2641      
2 .Hsel.PA.1          .              .             1.0000     22500.0000      
2 .Hsel.PA.2          .              .             1.0000     20864.9613      
2 .Hsel.PA.3          .              .             1.0000     19348.4771      
2 .Hsel.KI.1          .              .             1.0000     25400.0000      
2 .Hsel.KI.2          .              .             1.0000     23555.0268      
2 .Hsel.KI.3          .              .             1.0000     21843.7525      
2 .Lsel.EU.1          .              .             1.0000     24700.0000      
2 .Lsel.EU.2          .              .             1.0000     22789.6126      
2 .Lsel.EU.3          .              .             1.0000     21026.7623      
2 .Lsel.IE.1          .              .             1.0000     27800.0000      
2 .Lsel.IE.2          .              .             1.0000     25646.1495      
2 .Lsel.IE.3          .              .             1.0000     23659.0267      
2 .Lsel.PA.1          .              .             1.0000     22500.0000      
2 .Lsel.PA.2          .              .             1.0000     20765.8592      
2 .Lsel.PA.3          .              .             1.0000     19165.0048      
2 .Lsel.KI.1          .             1.0000         1.0000     24300.0000      
2 .Lsel.KI.2          .              .             1.0000     22431.4261      
2 .Lsel.KI.3          .              .             1.0000     20706.0185      
2 .Pap .EU.1          .              .             1.0000     44600.0000      
2 .Pap .EU.2          .              .             1.0000     40949.6138      
2 .Pap .EU.3          .              .             1.0000     37597.6127      
2 .Pap .IE.1          .              .             1.0000     46000.0000      
2 .Pap .IE.2          .              .             1.0000     42253.2615      
2 .Pap .IE.3          .              .             1.0000     38810.7135      
2 .Pap .PA.1          .              .             1.0000     41800.0000      
2 .Pap .PA.2          .             1.0000         1.0000     38404.3968      
2 .Pap .PA.3          .              .             1.0000     35283.4446      
2 .Pap .KI.1          .              .             1.0000     46500.0000      
2 .Pap .KI.2          .              .             1.0000     42727.7183      
2 .Pap .KI.3          .              .             1.0000     39259.9686      
3 .Mas .EU.1          .              .             1.0000     30400.0000      
3 .Mas .EU.2          .              .             1.0000     28608.9599      
3 .Mas .EU.3          .              .             1.0000     26923.2943      
3 .Mas .IE.1          .              .             1.0000     22000.0000      
3 .Mas .IE.2          .              .             1.0000     20730.3206      
3 .Mas .IE.3          .              .             1.0000     19533.5078      
3 .Mas .PA.1          .              .             1.0000     23200.0000      
3 .Mas .PA.2          .              .             1.0000     21866.4837      
3 .Mas .PA.3          .              .             1.0000     20609.1143      
3 .Mas .KI.1          .              .             1.0000     24000.0000      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 23:25:38 Page 152
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 433


     VAR u  1 if we use n boats for product j shiping to region k, 0 otherwise

                    LOWER          LEVEL          UPPER         MARGINAL

3 .Mas .KI.2          .              .             1.0000     22630.1343      
3 .Mas .KI.3          .              .             1.0000     21337.8070      
3 .Kus .EU.1          .              .             1.0000         EPS         
3 .Kus .EU.2          .              .             1.0000         EPS         
3 .Kus .EU.3          .              .             1.0000         EPS         
3 .Kus .IE.1          .              .             1.0000         EPS         
3 .Kus .IE.2          .              .             1.0000         EPS         
3 .Kus .IE.3          .              .             1.0000         EPS         
3 .Kus .PA.1          .              .             1.0000         EPS         
3 .Kus .PA.2          .              .             1.0000         EPS         
3 .Kus .PA.3          .              .             1.0000         EPS         
3 .Kus .KI.1          .              .             1.0000         EPS         
3 .Kus .KI.2          .              .             1.0000         EPS         
3 .Kus .KI.3          .              .             1.0000         EPS         
3 .Kos .EU.1          .              .             1.0000     20400.0000      
3 .Kos .EU.2          .              .             1.0000     19171.0549      
3 .Kos .EU.3          .              .             1.0000     18014.7788      
3 .Kos .IE.1          .              .             1.0000     20000.0000      
3 .Kos .IE.2          .              .             1.0000     18829.8673      
3 .Kos .IE.3          .              .             1.0000     17726.0522      
3 .Kos .PA.1          .              .             1.0000     21200.0000      
3 .Kos .PA.2          .              .             1.0000     19964.0855      
3 .Kos .PA.3          .              .             1.0000     18797.8397      
3 .Kos .KI.1          .              .             1.0000     22000.0000      
3 .Kos .KI.2          .              .             1.0000     20729.4523      
3 .Kos .KI.3          .              .             1.0000     19529.4986      
3 .Kuv .EU.1          .              .             1.0000     86400.0000      
3 .Kuv .EU.2          .              .             1.0000     80889.1262      
3 .Kuv .EU.3          .              .             1.0000     75729.4420      
3 .Kuv .IE.1          .              .             1.0000     72000.0000      
3 .Kuv .IE.2          .              .             1.0000     67444.4903      
3 .Kuv .IE.3          .              .             1.0000     63176.4043      
3 .Kuv .PA.1          .              .             1.0000     67200.0000      
3 .Kuv .PA.2          .              .             1.0000     62962.9450      
3 .Kuv .PA.3          .              .             1.0000     58992.0583      
3 .Kuv .KI.1          .              .             1.0000     64000.0000      
3 .Kuv .KI.2          .              .             1.0000     59984.4694      
3 .Kuv .KI.3          .              .             1.0000     56219.6284      
3 .Kov .EU.1          .              .             1.0000     84400.0000      
3 .Kov .EU.2          .             1.0000         1.0000     78637.0627      
3 .Kov .EU.3          .              .             1.0000     73267.0822      
3 .Kov .IE.1          .              .             1.0000     78000.0000      
3 .Kov .IE.2          .              .             1.0000     72720.1077      
3 .Kov .IE.3          .              .             1.0000     67796.2137      
3 .Kov .PA.1          .              .             1.0000     73200.0000      
3 .Kov .PA.2          .              .             1.0000     68264.1292      
3 .Kov .PA.3          .              .             1.0000     63659.3780      
3 .Kov .KI.1          .              .             1.0000     70000.0000      
3 .Kov .KI.2          .              .             1.0000     65305.6517      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 23:25:38 Page 153
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 433


     VAR u  1 if we use n boats for product j shiping to region k, 0 otherwise

                    LOWER          LEVEL          UPPER         MARGINAL

3 .Kov .KI.3          .              .             1.0000     60923.9437      
3 .Hsel.EU.1          .              .             1.0000     45200.0000      
3 .Hsel.EU.2          .              .             1.0000     41910.7674      
3 .Hsel.EU.3          .              .             1.0000     38860.4783      
3 .Hsel.IE.1          .              .             1.0000     48400.0000      
3 .Hsel.IE.2          .              .             1.0000     44894.7055      
3 .Hsel.IE.3          .              .             1.0000     41642.4319      
3 .Hsel.PA.1          .              .             1.0000     44000.0000      
3 .Hsel.PA.2          .              .             1.0000     40825.6990      
3 .Hsel.PA.3          .              .             1.0000     37879.3337      
3 .Hsel.KI.1          .              .             1.0000     49600.0000      
3 .Hsel.KI.2          .              .             1.0000     46024.9851      
3 .Hsel.KI.3          .              .             1.0000     42706.3605      
3 .Lsel.EU.1          .             1.0000         1.0000     48800.0000      
3 .Lsel.EU.2          .              .             1.0000     45041.9455      
3 .Lsel.EU.3          .              .             1.0000     41572.4089      
3 .Lsel.IE.1          .              .             1.0000     55200.0000      
3 .Lsel.IE.2          .              .             1.0000     50934.1125      
3 .Lsel.IE.3          .              .             1.0000     46997.3096      
3 .Lsel.PA.1          .              .             1.0000     44000.0000      
3 .Lsel.PA.2          .              .             1.0000     40636.2522      
3 .Lsel.PA.3          .              .             1.0000     37528.1500      
3 .Lsel.KI.1          .              .             1.0000     47200.0000      
3 .Lsel.KI.2          .              .             1.0000     43609.1997      
3 .Lsel.KI.3          .              .             1.0000     40289.4336      
3 .Pap .EU.1          .              .             1.0000     88400.0000      
3 .Pap .EU.2          .              .             1.0000     81189.7594      
3 .Pap .EU.3          .              .             1.0000     74566.0441      
3 .Pap .IE.1          .             1.0000         1.0000     90000.0000      
3 .Pap .IE.2          .              .             1.0000     82732.8526      
3 .Pap .IE.3          .             1.0000         1.0000     76048.4738      
3 .Pap .PA.1          .              .             1.0000     81200.0000      
3 .Pap .PA.2          .              .             1.0000     74680.3893      
3 .Pap .PA.3          .              .             1.0000     68679.3453      
3 .Pap .KI.1          .             1.0000         1.0000     90000.0000      
3 .Pap .KI.2          .              .             1.0000     82794.9310      
3 .Pap .KI.3          .             1.0000         1.0000     76160.5074      
4 .Mas .EU.1          .              .             1.0000     44400.0000      
4 .Mas .EU.2          .             1.0000         1.0000     41795.9024      
4 .Mas .EU.3          .             1.0000         1.0000     39344.1997      
4 .Mas .IE.1          .              .             1.0000     30000.0000      
4 .Mas .IE.2          .              .             1.0000     28301.6371      
4 .Mas .IE.3          .              .             1.0000     26698.4074      
4 .Mas .PA.1          .              .             1.0000     31200.0000      
4 .Mas .PA.2          .              .             1.0000     29447.1130      
4 .Mas .PA.3          .              .             1.0000     27791.4463      
4 .Mas .KI.1          .              .             1.0000     31500.0000      
4 .Mas .KI.2          .              .             1.0000     29754.4358      
4 .Mas .KI.3          .              .             1.0000     28103.9290      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 23:25:38 Page 154
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 433


     VAR u  1 if we use n boats for product j shiping to region k, 0 otherwise

                    LOWER          LEVEL          UPPER         MARGINAL

4 .Kus .EU.1          .              .             1.0000         EPS         
4 .Kus .EU.2          .              .             1.0000         EPS         
4 .Kus .EU.3          .              .             1.0000         EPS         
4 .Kus .IE.1          .              .             1.0000         EPS         
4 .Kus .IE.2          .              .             1.0000         EPS         
4 .Kus .IE.3          .              .             1.0000         EPS         
4 .Kus .PA.1          .              .             1.0000         EPS         
4 .Kus .PA.2          .              .             1.0000         EPS         
4 .Kus .PA.3          .              .             1.0000         EPS         
4 .Kus .KI.1          .              .             1.0000         EPS         
4 .Kus .KI.2          .              .             1.0000         EPS         
4 .Kus .KI.3          .              .             1.0000         EPS         
4 .Kos .EU.1          .              .             1.0000     26400.0000      
4 .Kos .EU.2          .              .             1.0000     24883.6419      
4 .Kos .EU.3          .              .             1.0000     23450.8189      
4 .Kos .IE.1          .              .             1.0000     24000.0000      
4 .Kos .IE.2          .              .             1.0000     22712.0289      
4 .Kos .IE.3          .              .             1.0000     21487.1508      
4 .Kos .PA.1          .              .             1.0000     25200.0000      
4 .Kos .PA.2          .              .             1.0000     23860.0791      
4 .Kos .PA.3          .              .             1.0000     22584.6392      
4 .Kos .KI.1          .              .             1.0000     25500.0000      
4 .Kos .KI.2          .              .             1.0000     24178.2135      
4 .Kos .KI.3          .              .             1.0000     22916.8384      
4 .Kuv .EU.1          .              .             1.0000    128400.0000      
4 .Kuv .EU.2          .              .             1.0000    120227.1348      
4 .Kuv .EU.3          .              .             1.0000    112573.7776      
4 .Kuv .IE.1          .              .             1.0000    105000.0000      
4 .Kuv .IE.2          .              .             1.0000     98400.3494      
4 .Kuv .IE.3          .              .             1.0000     92213.6426      
4 .Kuv .PA.1          .              .             1.0000     97200.0000      
4 .Kuv .PA.2          .              .             1.0000     91124.7543      
4 .Kuv .PA.3          .              .             1.0000     85426.9309      
4 .Kuv .KI.1          .              .             1.0000     91500.0000      
4 .Kuv .KI.2          .              .             1.0000     85827.1251      
4 .Kuv .KI.3          .              .             1.0000     80502.9968      
4 .Kov .EU.1          .             1.0000         1.0000    125400.0000      
4 .Kov .EU.2          .              .             1.0000    116859.8616      
4 .Kov .EU.3          .              .             1.0000    108900.0986      
4 .Kov .IE.1          .              .             1.0000    114000.0000      
4 .Kov .IE.2          .              .             1.0000    106340.8304      
4 .Kov .IE.3          .              .             1.0000     99193.0090      
4 .Kov .PA.1          .              .             1.0000    106200.0000      
4 .Kov .PA.2          .              .             1.0000     99108.9965      
4 .Kov .PA.3          .              .             1.0000     92487.4932      
4 .Kov .KI.1          .              .             1.0000    100500.0000      
4 .Kov .KI.2          .              .             1.0000     93849.4810      
4 .Kov .KI.3          .              .             1.0000     87633.9483      
4 .Hsel.EU.1          .              .             1.0000     67200.0000      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 23:25:38 Page 155
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 433


     VAR u  1 if we use n boats for product j shiping to region k, 0 otherwise

                    LOWER          LEVEL          UPPER         MARGINAL

4 .Hsel.EU.2          .              .             1.0000     62323.6169      
4 .Hsel.EU.3          .              .             1.0000     57800.1452      
4 .Hsel.IE.1          .             1.0000         1.0000     71400.0000      
4 .Hsel.IE.2          .              .             1.0000     66256.9899      
4 .Hsel.IE.3          .              .             1.0000     61482.5033      
4 .Hsel.PA.1          .              .             1.0000     64500.0000      
4 .Hsel.PA.2          .              .             1.0000     59882.2130      
4 .Hsel.PA.3          .              .             1.0000     55592.5699      
4 .Hsel.KI.1          .             1.0000         1.0000     72600.0000      
4 .Hsel.KI.2          .              .             1.0000     67409.8751      
4 .Hsel.KI.3          .              .             1.0000     62587.8240      
4 .Lsel.EU.1          .              .             1.0000     72300.0000      
4 .Lsel.EU.2          .              .             1.0000     66756.9988      
4 .Lsel.EU.3          .              .             1.0000     61636.9398      
4 .Lsel.IE.1          .              .             1.0000     82200.0000      
4 .Lsel.IE.2          .              .             1.0000     75863.8892      
4 .Lsel.IE.3          .              .             1.0000     70014.8487      
4 .Lsel.PA.1          .              .             1.0000     64500.0000      
4 .Lsel.PA.2          .              .             1.0000     59611.1792      
4 .Lsel.PA.3          .              .             1.0000     55089.4357      
4 .Lsel.KI.1          .              .             1.0000     68700.0000      
4 .Lsel.KI.2          .              .             1.0000     63533.3208      
4 .Lsel.KI.3          .              .             1.0000     58750.2454      
4 .Pap .EU.1          .              .             1.0000    131400.0000      
4 .Pap .EU.2          .              .             1.0000    120720.4369      
4 .Pap .EU.3          .             1.0000         1.0000    110905.2942      
4 .Pap .IE.1          .              .             1.0000    132000.0000      
4 .Pap .IE.2          .              .             1.0000    121438.7734      
4 .Pap .IE.3          .              .             1.0000    111713.2809      
4 .Pap .PA.1          .              .             1.0000    118200.0000      
4 .Pap .PA.2          .              .             1.0000    108827.9773      
4 .Pap .PA.3          .              .             1.0000    100187.7021      
4 .Pap .KI.1          .              .             1.0000    130500.0000      
4 .Pap .KI.2          .             1.0000         1.0000    120201.6383      
4 .Pap .KI.3          .              .             1.0000    110701.6164      
5 .Mas .EU.1          .              .             1.0000     57600.0000      
5 .Mas .EU.2          .              .             1.0000     54237.8198      
5 .Mas .EU.3          .              .             1.0000     51071.2773      
5 .Mas .IE.1          .              .             1.0000     36000.0000      
5 .Mas .IE.2          .              .             1.0000     34010.3911      
5 .Mas .IE.3          .              .             1.0000     32128.7374      
5 .Mas .PA.1          .              .             1.0000     36800.0000      
5 .Mas .PA.2          .              .             1.0000     34792.6674      
5 .Mas .PA.3          .              .             1.0000     32892.2949      
5 .Mas .KI.1          .              .             1.0000     36000.0000      
5 .Mas .KI.2          .              .             1.0000     34084.8936      
5 .Mas .KI.3          .              .             1.0000     32268.1968      
5 .Kus .EU.1          .              .             1.0000         EPS         
5 .Kus .EU.2          .              .             1.0000         EPS         
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 23:25:38 Page 156
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 433


     VAR u  1 if we use n boats for product j shiping to region k, 0 otherwise

                    LOWER          LEVEL          UPPER         MARGINAL

5 .Kus .EU.3          .              .             1.0000         EPS         
5 .Kus .IE.1          .              .             1.0000         EPS         
5 .Kus .IE.2          .              .             1.0000         EPS         
5 .Kus .IE.3          .              .             1.0000         EPS         
5 .Kus .PA.1          .              .             1.0000         EPS         
5 .Kus .PA.2          .              .             1.0000         EPS         
5 .Kus .PA.3          .              .             1.0000         EPS         
5 .Kus .KI.1          .              .             1.0000         EPS         
5 .Kus .KI.2          .              .             1.0000         EPS         
5 .Kus .KI.3          .              .             1.0000         EPS         
5 .Kos .EU.1          .              .             1.0000     29600.0000      
5 .Kos .EU.2          .              .             1.0000     28014.2687      
5 .Kos .EU.3          .              .             1.0000     26505.9595      
5 .Kos .IE.1          .              .             1.0000     24000.0000      
5 .Kos .IE.2          .              .             1.0000     22905.6759      
5 .Kos .IE.3          .              .             1.0000     21846.9642      
5 .Kos .PA.1          .              .             1.0000     24800.0000      
5 .Kos .PA.2          .              .             1.0000     23698.7066      
5 .Kos .PA.3          .              .             1.0000     22630.0251      
5 .Kos .KI.1          .              .             1.0000     24000.0000      
5 .Kos .KI.2          .              .             1.0000     23016.3314      
5 .Kos .KI.3          .              .             1.0000     22052.5719      
5 .Kuv .EU.1          .              .             1.0000    169600.0000      
5 .Kuv .EU.2          .              .             1.0000    158827.4406      
5 .Kuv .EU.3          .             1.0000         1.0000    148737.8560      
5 .Kuv .IE.1          .              .             1.0000    136000.0000      
5 .Kuv .IE.2          .              .             1.0000    127511.9513      
5 .Kuv .IE.3          .              .             1.0000    119550.2384      
5 .Kuv .PA.1          .              .             1.0000    124800.0000      
5 .Kuv .PA.2          .              .             1.0000    117073.4548      
5 .Kuv .PA.3          .              .             1.0000    109821.0325      
5 .Kuv .KI.1          .              .             1.0000    116000.0000      
5 .Kuv .KI.2          .              .             1.0000    108903.3949      
5 .Kuv .KI.3          .              .             1.0000    102235.4015      
5 .Kov .EU.1          .              .             1.0000    165600.0000      
5 .Kov .EU.2          .              .             1.0000    154352.1722      
5 .Kov .EU.3          .              .             1.0000    143866.0987      
5 .Kov .IE.1          .              .             1.0000    148000.0000      
5 .Kov .IE.2          .              .             1.0000    138135.3326      
5 .Kov .IE.3          .              .             1.0000    128922.2634      
5 .Kov .PA.1          .              .             1.0000    136800.0000      
5 .Kov .PA.2          .              .             1.0000    127762.3991      
5 .Kov .PA.3          .              .             1.0000    119314.5592      
5 .Kov .KI.1          .              .             1.0000    128000.0000      
5 .Kov .KI.2          .              .             1.0000    119653.9792      
5 .Kov .KI.3          .              .             1.0000    111842.6415      
5 .Hsel.EU.1          .              .             1.0000     88800.0000      
5 .Hsel.EU.2          .              .             1.0000     82374.7769      
5 .Hsel.EU.3          .              .             1.0000     76412.7639      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 23:25:38 Page 157
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 433


     VAR u  1 if we use n boats for product j shiping to region k, 0 otherwise

                    LOWER          LEVEL          UPPER         MARGINAL

5 .Hsel.IE.1          .              .             1.0000     93600.0000      
5 .Hsel.IE.2          .              .             1.0000     86895.8953      
5 .Hsel.IE.3          .              .             1.0000     80668.4783      
5 .Hsel.PA.1          .              .             1.0000     84000.0000      
5 .Hsel.PA.2          .              .             1.0000     78034.5033      
5 .Hsel.PA.3          .              .             1.0000     72488.1857      
5 .Hsel.KI.1          .              .             1.0000     94400.0000      
5 .Hsel.KI.2          .              .             1.0000     87709.6966      
5 .Hsel.KI.3          .              .             1.0000     81488.1428      
5 .Lsel.EU.1          .              .             1.0000     95200.0000      
5 .Lsel.EU.2          .              .             1.0000     87934.7724      
5 .Lsel.EU.3          .              .             1.0000     81220.3549      
5 .Lsel.IE.1          .              .             1.0000    108800.0000      
5 .Lsel.IE.2          .              .             1.0000    100435.4793      
5 .Lsel.IE.3          .             1.0000         1.0000     92711.6439      
5 .Lsel.PA.1          .              .             1.0000     84000.0000      
5 .Lsel.PA.2          .              .             1.0000     77690.6400      
5 .Lsel.PA.3          .              .             1.0000     71848.8618      
5 .Lsel.KI.1          .              .             1.0000     88800.0000      
5 .Lsel.KI.2          .              .             1.0000     82203.7892      
5 .Lsel.KI.3          .              .             1.0000     76088.4537      
5 .Pap .EU.1          .             1.0000         1.0000    173600.0000      
5 .Pap .EU.2          .              .             1.0000    159541.6462      
5 .Pap .EU.3          .              .             1.0000    146615.3630      
5 .Pap .IE.1          .              .             1.0000    172000.0000      
5 .Pap .IE.2          .             1.0000         1.0000    158371.0238      
5 .Pap .IE.3          .              .             1.0000    145805.1348      
5 .Pap .PA.1          .              .             1.0000    152800.0000      
5 .Pap .PA.2          .              .             1.0000    140847.1610      
5 .Pap .PA.3          .              .             1.0000    129808.5151      
5 .Pap .KI.1          .              .             1.0000    168000.0000      
5 .Pap .KI.2          .              .             1.0000    154947.8401      
5 .Pap .KI.3          .              .             1.0000    142883.2955      
6 .Mas .EU.1          .             1.0000         1.0000     70000.0000      
6 .Mas .EU.2          .              .             1.0000     65934.7123      
6 .Mas .EU.3          .              .             1.0000     62104.5272      
6 .Mas .IE.1          .              .             1.0000     40000.0000      
6 .Mas .IE.2          .              .             1.0000     37856.5827      
6 .Mas .IE.3          .              .             1.0000     35824.4980      
6 .Mas .PA.1          .              .             1.0000     40000.0000      
6 .Mas .PA.2          .              .             1.0000     37903.1468      
6 .Mas .PA.3          .              .             1.0000     35911.6601      
6 .Mas .KI.1          .              .             1.0000     37500.0000      
6 .Mas .KI.2          .              .             1.0000     35621.5077      
6 .Mas .KI.3          .              .             1.0000     33830.6103      
6 .Kus .EU.1          .              .             1.0000         EPS         
6 .Kus .EU.2          .              .             1.0000         EPS         
6 .Kus .EU.3          .              .             1.0000         EPS         
6 .Kus .IE.1          .              .             1.0000         EPS         
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 23:25:38 Page 158
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 433


     VAR u  1 if we use n boats for product j shiping to region k, 0 otherwise

                    LOWER          LEVEL          UPPER         MARGINAL

6 .Kus .IE.2          .              .             1.0000         EPS         
6 .Kus .IE.3          .              .             1.0000         EPS         
6 .Kus .PA.1          .              .             1.0000         EPS         
6 .Kus .PA.2          .              .             1.0000         EPS         
6 .Kus .PA.3          .              .             1.0000         EPS         
6 .Kus .KI.1          .              .             1.0000         EPS         
6 .Kus .KI.2          .              .             1.0000         EPS         
6 .Kus .KI.3          .              .             1.0000         EPS         
6 .Kos .EU.1          .              .             1.0000     30000.0000      
6 .Kos .EU.2          .              .             1.0000     28562.9353      
6 .Kos .EU.3          .              .             1.0000     27180.2005      
6 .Kos .IE.1          .              .             1.0000     20000.0000      
6 .Kos .IE.2          .              .             1.0000     19410.8083      
6 .Kos .IE.3          .              .             1.0000     18805.4926      
6 .Kos .PA.1          .              .             1.0000     20000.0000      
6 .Kos .PA.2          .              .             1.0000     19479.9680      
6 .Kos .PA.3          .              .             1.0000     18933.9974      
6 .Kos .KI.1          .              .             1.0000     17500.0000      
6 .Kos .KI.2          .              .             1.0000     17243.8060      
6 .Kos .KI.3          .              .             1.0000     16936.6990      
6 .Kuv .EU.1          .             1.0000         1.0000    210000.0000      
6 .Kuv .EU.2          .              .             1.0000    196690.0434      
6 .Kuv .EU.3          .              .             1.0000    184221.6775      
6 .Kuv .IE.1          .              .             1.0000    165000.0000      
6 .Kuv .IE.2          .              .             1.0000    154779.2958      
6 .Kuv .IE.3          .              .             1.0000    145186.1917      
6 .Kuv .PA.1          .              .             1.0000    150000.0000      
6 .Kuv .PA.2          .              .             1.0000    140809.0466      
6 .Kuv .PA.3          .              .             1.0000    132174.3630      
6 .Kuv .KI.1          .              .             1.0000    137500.0000      
6 .Kuv .KI.2          .              .             1.0000    129213.2787      
6 .Kuv .KI.3          .              .             1.0000    121416.8424      
6 .Kov .EU.1          .              .             1.0000    205000.0000      
6 .Kov .EU.2          .              .             1.0000    191113.9946      
6 .Kov .EU.3          .              .             1.0000    178165.0824      
6 .Kov .IE.1          .              .             1.0000    180000.0000      
6 .Kov .IE.2          .              .             1.0000    168103.6140      
6 .Kov .IE.3          .              .             1.0000    156983.9767      
6 .Kov .PA.1          .              .             1.0000    165000.0000      
6 .Kov .PA.2          .              .             1.0000    154224.3368      
6 .Kov .PA.3          .              .             1.0000    144140.5760      
6 .Kov .KI.1          .              .             1.0000    152500.0000      
6 .Kov .KI.2          .              .             1.0000    142719.1465      
6 .Kov .KI.3          .              .             1.0000    133550.0231      
6 .Hsel.EU.1          .              .             1.0000    110000.0000      
6 .Hsel.EU.2          .              .             1.0000    102064.2475      
6 .Hsel.EU.3          .              .             1.0000     94698.3344      
6 .Hsel.IE.1          .              .             1.0000    115000.0000      
6 .Hsel.IE.2          .              .             1.0000    106811.4218      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 23:25:38 Page 159
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 433


     VAR u  1 if we use n boats for product j shiping to region k, 0 otherwise

                    LOWER          LEVEL          UPPER         MARGINAL

6 .Hsel.IE.3          .              .             1.0000     99200.3570      
6 .Hsel.PA.1          .              .             1.0000    102500.0000      
6 .Hsel.PA.2          .              .             1.0000     95282.5699      
6 .Hsel.PA.3          .              .             1.0000     88566.1809      
6 .Hsel.KI.1          .              .             1.0000    115000.0000      
6 .Hsel.KI.2          .              .             1.0000    106924.4497      
6 .Hsel.KI.3          .              .             1.0000     99407.3172      
6 .Lsel.EU.1          .              .             1.0000    117500.0000      
6 .Lsel.EU.2          .              .             1.0000    108575.2663      
6 .Lsel.EU.3          .              .             1.0000    100322.6543      
6 .Lsel.IE.1          .              .             1.0000    135000.0000      
6 .Lsel.IE.2          .             1.0000         1.0000    124648.8830      
6 .Lsel.IE.3          .              .             1.0000    115087.6953      
6 .Lsel.PA.1          .              .             1.0000    102500.0000      
6 .Lsel.PA.2          .              .             1.0000     94874.6347      
6 .Lsel.PA.3          .              .             1.0000     87806.4284      
6 .Lsel.KI.1          .              .             1.0000    107500.0000      
6 .Lsel.KI.2          .              .             1.0000     99620.6051      
6 .Lsel.KI.3          .              .             1.0000     92304.0587      
6 .Pap .EU.1          .              .             1.0000    215000.0000      
6 .Pap .EU.2          .              .             1.0000    197653.3875      
6 .Pap .EU.3          .              .             1.0000    181696.2505      
6 .Pap .IE.1          .              .             1.0000    210000.0000      
6 .Pap .IE.2          .              .             1.0000    193529.6040      
6 .Pap .IE.3          .              .             1.0000    178324.0354      
6 .Pap .PA.1          .              .             1.0000    185000.0000      
6 .Pap .PA.2          .              .             1.0000    170737.9402      
6 .Pap .PA.3          .              .             1.0000    157541.7842      
6 .Pap .KI.1          .              .             1.0000    202500.0000      
6 .Pap .KI.2          .              .             1.0000    187033.5364      
6 .Pap .KI.3          .              .             1.0000    172705.5448      
7 .Mas .EU.1          .              .             1.0000     81600.0000      
7 .Mas .EU.2          .              .             1.0000     76886.5797      
7 .Mas .EU.3          .              .             1.0000     72443.9492      
7 .Mas .IE.1          .              .             1.0000     42000.0000      
7 .Mas .IE.2          .              .             1.0000     39840.2117      
7 .Mas .IE.3          .              .             1.0000     37785.6890      
7 .Mas .PA.1          .              .             1.0000     40800.0000      
7 .Mas .PA.2          .              .             1.0000     38778.5511      
7 .Mas .PA.3          .              .             1.0000     36849.5418      
7 .Mas .KI.1          .              .             1.0000     36000.0000      
7 .Mas .KI.2          .              .             1.0000     34364.2780      
7 .Mas .KI.3          .              .             1.0000     32791.1695      
7 .Kus .EU.1          .              .             1.0000         EPS         
7 .Kus .EU.2          .              .             1.0000         EPS         
7 .Kus .EU.3          .              .             1.0000         EPS         
7 .Kus .IE.1          .              .             1.0000         EPS         
7 .Kus .IE.2          .              .             1.0000         EPS         
7 .Kus .IE.3          .              .             1.0000         EPS         
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 23:25:38 Page 160
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 433


     VAR u  1 if we use n boats for product j shiping to region k, 0 otherwise

                    LOWER          LEVEL          UPPER         MARGINAL

7 .Kus .PA.1          .              .             1.0000         EPS         
7 .Kus .PA.2          .              .             1.0000         EPS         
7 .Kus .PA.3          .              .             1.0000         EPS         
7 .Kus .KI.1          .              .             1.0000         EPS         
7 .Kus .KI.2          .              .             1.0000         EPS         
7 .Kus .KI.3          .              .             1.0000         EPS         
7 .Kos .EU.1          .              .             1.0000     27600.0000      
7 .Kos .EU.2          .              .             1.0000     26529.6416      
7 .Kos .EU.3          .              .             1.0000     25473.5419      
7 .Kos .IE.1          .              .             1.0000     12000.0000      
7 .Kos .IE.2          .              .             1.0000     12227.4260      
7 .Kos .IE.3          .              .             1.0000     12362.7359      
7 .Kos .PA.1          .              .             1.0000     10800.0000      
7 .Kos .PA.2          .              .             1.0000     11203.8632      
7 .Kos .PA.3          .              .             1.0000     11496.5561      
7 .Kos .KI.1          .              .             1.0000      6000.0000      
7 .Kos .KI.2          .              .             1.0000      6860.6372      
7 .Kos .KI.3          .              .             1.0000      7569.2198      
7 .Kuv .EU.1          .              .             1.0000    249600.0000      
7 .Kuv .EU.2          .              .             1.0000    233814.9433      
7 .Kuv .EU.3          .              .             1.0000    219025.2420      
7 .Kuv .IE.1          .              .             1.0000    192000.0000      
7 .Kuv .IE.2          .              .             1.0000    180202.3830      
7 .Kuv .IE.3          .              .             1.0000    169121.5024      
7 .Kuv .PA.1          .              .             1.0000    172800.0000      
7 .Kuv .PA.2          .              .             1.0000    162331.5295      
7 .Kuv .PA.3          .              .             1.0000    152486.9225      
7 .Kuv .KI.1          .              .             1.0000    156000.0000      
7 .Kuv .KI.2          .              .             1.0000    146756.7764      
7 .Kuv .KI.3          .              .             1.0000    138047.3194      
7 .Kov .EU.1          .              .             1.0000    243600.0000      
7 .Kov .EU.2          .              .             1.0000    227145.3287      
7 .Kov .EU.3          .              .             1.0000    211797.0497      
7 .Kov .IE.1          .              .             1.0000    210000.0000      
7 .Kov .IE.2          .              .             1.0000    196245.6747      
7 .Kov .IE.3          .              .             1.0000    183378.1491      
7 .Kov .PA.1          .              .             1.0000    190800.0000      
7 .Kov .PA.2          .              .             1.0000    178494.8097      
7 .Kov .PA.3          .              .             1.0000    166965.5436      
7 .Kov .KI.1          .              .             1.0000    174000.0000      
7 .Kov .KI.2          .              .             1.0000    163044.9827      
7 .Kov .KI.3          .              .             1.0000    152756.0933      
7 .Hsel.EU.1          .              .             1.0000    130800.0000      
7 .Hsel.EU.2          .              .             1.0000    121392.0286      
7 .Hsel.EU.3          .              .             1.0000    112656.8567      
7 .Hsel.IE.1          .              .             1.0000    135600.0000      
7 .Hsel.IE.2          .              .             1.0000    126003.5693      
7 .Hsel.IE.3          .              .             1.0000    117078.1393      
7 .Hsel.PA.1          .              .             1.0000    120000.0000      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 23:25:38 Page 161
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 433


     VAR u  1 if we use n boats for product j shiping to region k, 0 otherwise

                    LOWER          LEVEL          UPPER         MARGINAL

7 .Hsel.PA.2          .              .             1.0000    111626.4128      
7 .Hsel.PA.3          .              .             1.0000    103826.5557      
7 .Hsel.KI.1          .              .             1.0000    134400.0000      
7 .Hsel.KI.2          .              .             1.0000    125054.1344      
7 .Hsel.KI.3          .              .             1.0000    116345.3470      
7 .Lsel.EU.1          .              .             1.0000    139200.0000      
7 .Lsel.EU.2          .              .             1.0000    128678.4805      
7 .Lsel.EU.3          .              .             1.0000    118943.8379      
7 .Lsel.IE.1          .              .             1.0000    160800.0000      
7 .Lsel.IE.2          .              .             1.0000    148504.1003      
7 .Lsel.IE.3          .              .             1.0000    137143.0029      
7 .Lsel.PA.1          .              .             1.0000    120000.0000      
7 .Lsel.PA.2          .              .             1.0000    111163.1634      
7 .Lsel.PA.3          .              .             1.0000    102962.1354      
7 .Lsel.KI.1          .              .             1.0000    124800.0000      
7 .Lsel.KI.2          .              .             1.0000    115783.7685      
7 .Lsel.KI.3          .              .             1.0000    107397.0603      
7 .Pap .EU.1          .              .             1.0000    255600.0000      
7 .Pap .EU.2          .             1.0000         1.0000    235055.6606      
7 .Pap .EU.3          .              .             1.0000    216147.9567      
7 .Pap .IE.1          .              .             1.0000    246000.0000      
7 .Pap .IE.2          .              .             1.0000    226914.5138      
7 .Pap .IE.3          .              .             1.0000    209269.9828      
7 .Pap .PA.1          .              .             1.0000    214800.0000      
7 .Pap .PA.2          .              .             1.0000    198500.3151      
7 .Pap .PA.3          .              .             1.0000    183387.5095      
7 .Pap .KI.1          .              .             1.0000    234000.0000      
7 .Pap .KI.2          .              .             1.0000    216458.7272      
7 .Pap .KI.3          .              .             1.0000    200168.3643      
8 .Mas .EU.1          .              .             1.0000     92400.0000      
8 .Mas .EU.2          .              .             1.0000     87093.4222      
8 .Mas .EU.3          .              .             1.0000     82089.5434      
8 .Mas .IE.1          .              .             1.0000     42000.0000      
8 .Mas .IE.2          .              .             1.0000     39961.2783      
8 .Mas .IE.3          .              .             1.0000     38012.3105      
8 .Mas .PA.1          .              .             1.0000     39200.0000      
8 .Mas .PA.2          .              .             1.0000     37418.8805      
8 .Mas .PA.3          .              .             1.0000     35705.9401      
8 .Mas .KI.1          .              .             1.0000     31500.0000      
8 .Mas .KI.2          .              .             1.0000     30313.2046      
8 .Mas .KI.3          .              .             1.0000     29149.8745      
8 .Kus .EU.1          .              .             1.0000         EPS         
8 .Kus .EU.2          .              .             1.0000         EPS         
8 .Kus .EU.3          .              .             1.0000         EPS         
8 .Kus .IE.1          .              .             1.0000         EPS         
8 .Kus .IE.2          .              .             1.0000         EPS         
8 .Kus .IE.3          .              .             1.0000         EPS         
8 .Kus .PA.1          .              .             1.0000         EPS         
8 .Kus .PA.2          .              .             1.0000         EPS         
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 23:25:38 Page 162
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 433


     VAR u  1 if we use n boats for product j shiping to region k, 0 otherwise

                    LOWER          LEVEL          UPPER         MARGINAL

8 .Kus .PA.3          .              .             1.0000         EPS         
8 .Kus .KI.1          .              .             1.0000         EPS         
8 .Kus .KI.2          .              .             1.0000         EPS         
8 .Kus .KI.3          .              .             1.0000         EPS         
8 .Kos .EU.1          .              .             1.0000     22400.0000      
8 .Kos .EU.2          .              .             1.0000     21914.3876      
8 .Kos .EU.3          .              .             1.0000     21385.9838      
8 .Kos .IE.1          .              .             1.0000         EPS         
8 .Kos .IE.2          .              .             1.0000      1355.5291      
8 .Kos .IE.3          .              .             1.0000      2518.6941      
8 .Kos .PA.1          .              .             1.0000     -2800.0000      
8 .Kos .PA.2          .              .             1.0000     -1129.6076      
8 .Kos .PA.3          .              .             1.0000       317.7013      
8 .Kos .KI.1          .              .             1.0000    -10500.0000      
8 .Kos .KI.2          .              .             1.0000     -8133.1748      
8 .Kos .KI.3          .              .             1.0000     -6049.8658      
8 .Kuv .EU.1          .              .             1.0000    288400.0000      
8 .Kuv .EU.2          .             1.0000         1.0000    270202.1403      
8 .Kuv .EU.3          .              .             1.0000    253148.5494      
8 .Kuv .IE.1          .              .             1.0000    217000.0000      
8 .Kuv .IE.2          .              .             1.0000    203781.2128      
8 .Kuv .IE.3          .              .             1.0000    191356.1706      
8 .Kuv .PA.1          .              .             1.0000    193200.0000      
8 .Kuv .PA.2          .              .             1.0000    181640.9037      
8 .Kuv .PA.3          .              .             1.0000    170758.7109      
8 .Kuv .KI.1          .              .             1.0000    171500.0000      
8 .Kuv .KI.2          .              .             1.0000    161533.8882      
8 .Kuv .KI.3          .              .             1.0000    152126.8327      
8 .Kov .EU.1          .              .             1.0000    281400.0000      
8 .Kov .EU.2          .              .             1.0000    262446.1745      
8 .Kov .EU.3          .              .             1.0000    244762.0006      
8 .Kov .IE.1          .              .             1.0000    238000.0000      
8 .Kov .IE.2          .              .             1.0000    222561.5148      
8 .Kov .IE.3          .              .             1.0000    208104.7804      
8 .Kov .PA.1          .              .             1.0000    214200.0000      
8 .Kov .PA.2          .              .             1.0000    200573.8178      
8 .Kov .PA.3          .              .             1.0000    187789.4620      
8 .Kov .KI.1          .              .             1.0000    192500.0000      
8 .Kov .KI.2          .              .             1.0000    180631.4879      
8 .Kov .KI.3          .              .             1.0000    169460.8519      
8 .Hsel.EU.1          .              .             1.0000    151200.0000      
8 .Hsel.EU.2          .              .             1.0000    140358.1202      
8 .Hsel.EU.3          .              .             1.0000    130288.3308      
8 .Hsel.IE.1          .              .             1.0000    155400.0000      
8 .Hsel.IE.2          .              .             1.0000    144472.3379      
8 .Hsel.IE.3          .              .             1.0000    134301.8252      
8 .Hsel.PA.1          .              .             1.0000    136500.0000      
8 .Hsel.PA.2          .              .             1.0000    127066.0321      
8 .Hsel.PA.3          .              .             1.0000    118269.3101      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 23:25:38 Page 163
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 433


     VAR u  1 if we use n boats for product j shiping to region k, 0 otherwise

                    LOWER          LEVEL          UPPER         MARGINAL

8 .Hsel.KI.1          .              .             1.0000    152600.0000      
8 .Hsel.KI.2          .              .             1.0000    142098.7507      
8 .Hsel.KI.3          .              .             1.0000    132302.2322      
8 .Lsel.EU.1          .              .             1.0000    160300.0000      
8 .Lsel.EU.2          .              .             1.0000    148244.4151      
8 .Lsel.EU.3          .              .             1.0000    137083.9059      
8 .Lsel.IE.1          .              .             1.0000    186200.0000      
8 .Lsel.IE.2          .              .             1.0000    172001.1311      
8 .Lsel.IE.3          .              .             1.0000    158877.5667      
8 .Lsel.PA.1          .              .             1.0000    136500.0000      
8 .Lsel.PA.2          .              .             1.0000    126556.2258      
8 .Lsel.PA.3          .              .             1.0000    117315.9828      
8 .Lsel.KI.1          .              .             1.0000    140700.0000      
8 .Lsel.KI.2          .              .             1.0000    130693.2793      
8 .Lsel.KI.3          .              .             1.0000    121367.4585      
8 .Pap .EU.1          .              .             1.0000    295400.0000      
8 .Pap .EU.2          .              .             1.0000    271748.4655      
8 .Pap .EU.3          .              .             1.0000    249970.4817      
8 .Pap .IE.1          .              .             1.0000    280000.0000      
8 .Pap .IE.2          .              .             1.0000    258525.7532      
8 .Pap .IE.3          .              .             1.0000    238642.9770      
8 .Pap .PA.1          .              .             1.0000    242200.0000      
8 .Pap .PA.2          .              .             1.0000    224134.2855      
8 .Pap .PA.3          .              .             1.0000    207345.6908      
8 .Pap .KI.1          .              .             1.0000    262500.0000      
8 .Pap .KI.2          .              .             1.0000    243223.4124      
8 .Pap .KI.3          .              .             1.0000    225271.7539      
9 .Mas .EU.1          .              .             1.0000    102400.0000      
9 .Mas .EU.2          .              .             1.0000     96555.2397      
9 .Mas .EU.3          .              .             1.0000     91041.3097      
9 .Mas .IE.1          .              .             1.0000     40000.0000      
9 .Mas .IE.2          .              .             1.0000     38219.7824      
9 .Mas .IE.3          .              .             1.0000     36504.3625      
9 .Mas .PA.1          .              .             1.0000     35200.0000      
9 .Mas .PA.2          .              .             1.0000     33824.1349      
9 .Mas .PA.3          .              .             1.0000     32480.8550      
9 .Mas .KI.1          .              .             1.0000     24000.0000      
9 .Mas .KI.2          .              .             1.0000     23468.2874      
9 .Mas .KI.3          .              .             1.0000     22906.7251      
9 .Kus .EU.1          .              .             1.0000         EPS         
9 .Kus .EU.2          .              .             1.0000         EPS         
9 .Kus .EU.3          .              .             1.0000         EPS         
9 .Kus .IE.1          .              .             1.0000         EPS         
9 .Kus .IE.2          .              .             1.0000         EPS         
9 .Kus .IE.3          .              .             1.0000         EPS         
9 .Kus .PA.1          .              .             1.0000         EPS         
9 .Kus .PA.2          .              .             1.0000         EPS         
9 .Kus .PA.3          .              .             1.0000         EPS         
9 .Kus .KI.1          .              .             1.0000         EPS         
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 23:25:38 Page 164
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 433


     VAR u  1 if we use n boats for product j shiping to region k, 0 otherwise

                    LOWER          LEVEL          UPPER         MARGINAL

9 .Kus .KI.2          .              .             1.0000         EPS         
9 .Kus .KI.3          .              .             1.0000         EPS         
9 .Kos .EU.1          .              .             1.0000     14400.0000      
9 .Kos .EU.2          .              .             1.0000     14717.1734      
9 .Kos .EU.3          .              .             1.0000     14917.5261      
9 .Kos .IE.1          .              .             1.0000    -16000.0000      
9 .Kos .IE.2          .              .             1.0000    -13204.8824      
9 .Kos .IE.3          .              .             1.0000    -10726.6327      
9 .Kos .PA.1          .              .             1.0000    -20800.0000      
9 .Kos .PA.2          .              .             1.0000    -17520.4446      
9 .Kos .PA.3          .              .             1.0000    -14602.5671      
9 .Kos .KI.1          .              .             1.0000    -32000.0000      
9 .Kos .KI.2          .              .             1.0000    -27737.6301      
9 .Kos .KI.3          .              .             1.0000    -23920.5576      
9 .Kuv .EU.1          .              .             1.0000    326400.0000      
9 .Kuv .EU.2          .              .             1.0000    305851.6344      
9 .Kuv .EU.3          .              .             1.0000    286591.5999      
9 .Kuv .IE.1          .              .             1.0000    240000.0000      
9 .Kuv .IE.2          .              .             1.0000    225515.7854      
9 .Kuv .IE.3          .              .             1.0000    211890.1962      
9 .Kuv .PA.1          .              .             1.0000    211200.0000      
9 .Kuv .PA.2          .              .             1.0000    198737.1691      
9 .Kuv .PA.3          .              .             1.0000    186989.7283      
9 .Kuv .KI.1          .              .             1.0000    184000.0000      
9 .Kuv .KI.2          .              .             1.0000    173544.6140      
9 .Kuv .KI.3          .              .             1.0000    163655.3822      
9 .Kov .EU.1          .              .             1.0000    318400.0000      
9 .Kov .EU.2          .              .             1.0000    297016.5321      
9 .Kov .EU.3          .              .             1.0000    277059.9351      
9 .Kov .IE.1          .              .             1.0000    264000.0000      
9 .Kov .IE.2          .              .             1.0000    247051.1342      
9 .Kov .IE.3          .              .             1.0000    231163.8708      
9 .Kov .PA.1          .              .             1.0000    235200.0000      
9 .Kov .PA.2          .              .             1.0000    220461.3610      
9 .Kov .PA.3          .              .             1.0000    206612.3313      
9 .Kov .KI.1          .              .             1.0000    208000.0000      
9 .Kov .KI.2          .              .             1.0000    195478.6621      
9 .Kov .KI.3          .              .             1.0000    183664.2991      
9 .Hsel.EU.1          .              .             1.0000    171200.0000      
9 .Hsel.EU.2          .              .             1.0000    158962.5223      
9 .Hsel.EU.3          .              .             1.0000    147592.7568      
9 .Hsel.IE.1          .              .             1.0000    174400.0000      
9 .Hsel.IE.2          .              .             1.0000    162217.7275      
9 .Hsel.IE.3          .              .             1.0000    150871.4148      
9 .Hsel.PA.1          .              .             1.0000    152000.0000      
9 .Hsel.PA.2          .              .             1.0000    141601.4277      
9 .Hsel.PA.3          .              .             1.0000    131894.4440      
9 .Hsel.KI.1          .              .             1.0000    169600.0000      
9 .Hsel.KI.2          .              .             1.0000    158058.2986      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 23:25:38 Page 165
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 433


     VAR u  1 if we use n boats for product j shiping to region k, 0 otherwise

                    LOWER          LEVEL          UPPER         MARGINAL

9 .Hsel.KI.3          .              .             1.0000    147277.9729      
9 .Lsel.EU.1          .              .             1.0000    180800.0000      
9 .Lsel.EU.2          .              .             1.0000    167273.0700      
9 .Lsel.EU.3          .              .             1.0000    154742.8580      
9 .Lsel.IE.1          .              .             1.0000    211200.0000      
9 .Lsel.IE.2          .              .             1.0000    195139.9755      
9 .Lsel.IE.3          .              .             1.0000    180291.3866      
9 .Lsel.PA.1          .              .             1.0000    152000.0000      
9 .Lsel.PA.2          .              .             1.0000    141053.8222      
9 .Lsel.PA.3          .              .             1.0000    130867.9707      
9 .Lsel.KI.1          .              .             1.0000    155200.0000      
9 .Lsel.KI.2          .              .             1.0000    144349.1375      
9 .Lsel.KI.3          .              .             1.0000    134215.2533      
9 .Pap .EU.1          .              .             1.0000    334400.0000      
9 .Pap .EU.2          .              .             1.0000    307731.8024      
9 .Pap .EU.3          .              .             1.0000    283163.8253      
9 .Pap .IE.1          .              .             1.0000    312000.0000      
9 .Pap .IE.2          .              .             1.0000    288363.3224      
9 .Pap .IE.3          .              .             1.0000    266443.0180      
9 .Pap .PA.1          .              .             1.0000    267200.0000      
9 .Pap .PA.2          .              .             1.0000    247639.8516      
9 .Pap .PA.3          .              .             1.0000    229416.3283      
9 .Pap .KI.1          .              .             1.0000    288000.0000      
9 .Pap .KI.2          .              .             1.0000    267327.5922      
9 .Pap .KI.3          .              .             1.0000    248015.7137      
10.Mas .EU.1          .              .             1.0000    111600.0000      
10.Mas .EU.2          .              .             1.0000    105272.0322      
10.Mas .EU.3          .              .             1.0000     99299.2483      
10.Mas .IE.1          .              .             1.0000     36000.0000      
10.Mas .IE.2          .              .             1.0000     34615.7239      
10.Mas .IE.3          .              .             1.0000     33261.8450      
10.Mas .PA.1          .              .             1.0000     28800.0000      
10.Mas .PA.2          .              .             1.0000     27994.3143      
10.Mas .PA.3          .              .             1.0000     27174.2865      
10.Mas .KI.1          .              .             1.0000     13500.0000      
10.Mas .KI.2          .              .             1.0000     13829.5265      
10.Mas .KI.3          .              .             1.0000     14061.7215      
10.Kus .EU.1          .              .             1.0000         EPS         
10.Kus .EU.2          .              .             1.0000         EPS         
10.Kus .EU.3          .              .             1.0000         EPS         
10.Kus .IE.1          .              .             1.0000         EPS         
10.Kus .IE.2          .              .             1.0000         EPS         
10.Kus .IE.3          .              .             1.0000         EPS         
10.Kus .PA.1          .              .             1.0000         EPS         
10.Kus .PA.2          .              .             1.0000         EPS         
10.Kus .PA.3          .              .             1.0000         EPS         
10.Kus .KI.1          .              .             1.0000         EPS         
10.Kus .KI.2          .              .             1.0000         EPS         
10.Kus .KI.3          .              .             1.0000         EPS         
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 23:25:38 Page 166
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 433


     VAR u  1 if we use n boats for product j shiping to region k, 0 otherwise

                    LOWER          LEVEL          UPPER         MARGINAL

10.Kos .EU.1          .              .             1.0000      3600.0000      
10.Kos .EU.2          .              .             1.0000      4937.9990      
10.Kos .EU.3          .              .             1.0000      6068.1689      
10.Kos .IE.1          .              .             1.0000    -36000.0000      
10.Kos .IE.2          .              .             1.0000    -31453.8086      
10.Kos .IE.3          .              .             1.0000    -27373.2446      
10.Kos .PA.1          .              .             1.0000    -43200.0000      
10.Kos .PA.2          .              .             1.0000    -37968.6476      
10.Kos .PA.3          .              .             1.0000    -33264.2491      
10.Kos .KI.1          .              .             1.0000    -58500.0000      
10.Kos .KI.2          .              .             1.0000    -51952.7288      
10.Kos .KI.3          .              .             1.0000    -46042.8559      
10.Kuv .EU.1          .              .             1.0000    363600.0000      
10.Kuv .EU.2          .              .             1.0000    340763.4255      
10.Kuv .EU.3          .              .             1.0000    319354.3933      
10.Kuv .IE.1          .              .             1.0000    261000.0000      
10.Kuv .IE.2          .              .             1.0000    245406.1006      
10.Kuv .IE.3          .              .             1.0000    230723.5793      
10.Kuv .PA.1          .              .             1.0000    226800.0000      
10.Kuv .PA.2          .              .             1.0000    213620.3257      
10.Kuv .PA.3          .              .             1.0000    201179.9747      
10.Kuv .KI.1          .              .             1.0000    193500.0000      
10.Kuv .KI.2          .              .             1.0000    182788.9539      
10.Kuv .KI.3          .              .             1.0000    172632.9678      
10.Kov .EU.1          .              .             1.0000    354600.0000      
10.Kov .EU.2          .              .             1.0000    330856.4014      
10.Kov .EU.3          .              .             1.0000    308690.8532      
10.Kov .IE.1          .              .             1.0000    288000.0000      
10.Kov .IE.2          .              .             1.0000    269714.5329      
10.Kov .IE.3          .              .             1.0000    252555.4202      
10.Kov .PA.1          .              .             1.0000    253800.0000      
10.Kov .PA.2          .              .             1.0000    238157.4394      
10.Kov .PA.3          .              .             1.0000    223434.1513      
10.Kov .KI.1          .              .             1.0000    220500.0000      
10.Kov .KI.2          .              .             1.0000    207586.5052      
10.Kov .KI.3          .              .             1.0000    195366.4348      
10.Hsel.EU.1          .              .             1.0000    190800.0000      
10.Hsel.EU.2          .              .             1.0000    177205.2350      
10.Hsel.EU.3          .              .             1.0000    164570.1346      
10.Hsel.IE.1          .              .             1.0000    192600.0000      
10.Hsel.IE.2          .              .             1.0000    179239.7383      
10.Hsel.IE.3          .              .             1.0000    166786.9080      
10.Hsel.PA.1          .              .             1.0000    166500.0000      
10.Hsel.PA.2          .              .             1.0000    155232.5996      
10.Hsel.PA.3          .              .             1.0000    144701.9575      
10.Hsel.KI.1          .              .             1.0000    185400.0000      
10.Hsel.KI.2          .              .             1.0000    172932.7781      
10.Hsel.KI.3          .              .             1.0000    161272.5691      
10.Lsel.EU.1          .              .             1.0000    200700.0000      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 23:25:38 Page 167
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 433


     VAR u  1 if we use n boats for product j shiping to region k, 0 otherwise

                    LOWER          LEVEL          UPPER         MARGINAL

10.Lsel.EU.2          .              .             1.0000    185764.4453      
10.Lsel.EU.3          .              .             1.0000    171920.6945      
10.Lsel.IE.1          .              .             1.0000    235800.0000      
10.Lsel.IE.2          .              .             1.0000    217920.6334      
10.Lsel.IE.3          .              .             1.0000    201384.4627      
10.Lsel.PA.1          .              .             1.0000    166500.0000      
10.Lsel.PA.2          .              .             1.0000    154655.9525      
10.Lsel.PA.3          .              .             1.0000    143618.0990      
10.Lsel.KI.1          .              .             1.0000    168300.0000      
10.Lsel.KI.2          .              .             1.0000    156751.3432      
10.Lsel.KI.3          .              .             1.0000    145940.4447      
10.Pap .EU.1          .              .             1.0000    372600.0000      
10.Pap .EU.2          .              .             1.0000    343005.6711      
10.Pap .EU.3          .              .             1.0000    315727.9877      
10.Pap .IE.1          .              .             1.0000    342000.0000      
10.Pap .IE.2          .              .             1.0000    316427.2212      
10.Pap .IE.3          .              .             1.0000    292670.1057      
10.Pap .PA.1          .              .             1.0000    289800.0000      
10.Pap .PA.2          .              .             1.0000    269017.0132      
10.Pap .PA.3          .              .             1.0000    249599.4220      
10.Pap .KI.1          .              .             1.0000    310500.0000      
10.Pap .KI.2          .              .             1.0000    288771.2665      
10.Pap .KI.3          .              .             1.0000    268400.2437      
11.Mas .EU.1          .              .             1.0000    120000.0000      
11.Mas .EU.2          .              .             1.0000    113243.7996      
11.Mas .EU.3          .              .             1.0000    106863.3591      
11.Mas .IE.1          .              .             1.0000     30000.0000      
11.Mas .IE.2          .              .             1.0000     29149.1030      
11.Mas .IE.3          .              .             1.0000     28284.7579      
11.Mas .PA.1          .              .             1.0000     20000.0000      
11.Mas .PA.2          .              .             1.0000     19929.4187      
11.Mas .PA.3          .              .             1.0000     19786.2345      
11.Mas .KI.1          .              .             1.0000         EPS         
11.Mas .KI.2          .              .             1.0000      1396.9219      
11.Mas .KI.3          .              .             1.0000      2614.8636      
11.Kus .EU.1          .              .             1.0000         EPS         
11.Kus .EU.2          .              .             1.0000         EPS         
11.Kus .EU.3          .              .             1.0000         EPS         
11.Kus .IE.1          .              .             1.0000         EPS         
11.Kus .IE.2          .              .             1.0000         EPS         
11.Kus .IE.3          .              .             1.0000         EPS         
11.Kus .PA.1          .              .             1.0000         EPS         
11.Kus .PA.2          .              .             1.0000         EPS         
11.Kus .PA.3          .              .             1.0000         EPS         
11.Kus .KI.1          .              .             1.0000         EPS         
11.Kus .KI.2          .              .             1.0000         EPS         
11.Kus .KI.3          .              .             1.0000         EPS         
11.Kos .EU.1          .              .             1.0000    -10000.0000      
11.Kos .EU.2          .              .             1.0000     -7423.1357      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 23:25:38 Page 168
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 433


     VAR u  1 if we use n boats for product j shiping to region k, 0 otherwise

                    LOWER          LEVEL          UPPER         MARGINAL

11.Kos .EU.3          .              .             1.0000     -5162.0878      
11.Kos .IE.1          .              .             1.0000    -60000.0000      
11.Kos .IE.2          .              .             1.0000    -53391.2495      
11.Kos .IE.3          .              .             1.0000    -47421.1416      
11.Kos .PA.1          .              .             1.0000    -70000.0000      
11.Kos .PA.2          .              .             1.0000    -62474.2168      
11.Kos .PA.3          .              .             1.0000    -55667.3447      
11.Kos .KI.1          .              .             1.0000    -90000.0000      
11.Kos .KI.2          .              .             1.0000    -80778.4707      
11.Kos .KI.3          .              .             1.0000    -72416.7605      
11.Kuv .EU.1          .              .             1.0000    400000.0000      
11.Kuv .EU.2          .              .             1.0000    374937.5136      
11.Kuv .EU.3          .              .             1.0000    351436.9297      
11.Kuv .IE.1          .              .             1.0000    280000.0000      
11.Kuv .IE.2          .              .             1.0000    263452.1585      
11.Kuv .IE.3          .              .             1.0000    247856.3199      
11.Kuv .PA.1          .              .             1.0000    240000.0000      
11.Kuv .PA.2          .              .             1.0000    226290.3735      
11.Kuv .PA.3          .              .             1.0000    213329.4500      
11.Kuv .KI.1          .              .             1.0000    200000.0000      
11.Kuv .KI.2          .              .             1.0000    189266.9077      
11.Kuv .KI.3          .              .             1.0000    179059.5897      
11.Kov .EU.1          .              .             1.0000    390000.0000      
11.Kov .EU.2          .              .             1.0000    363965.7824      
11.Kov .EU.3          .              .             1.0000    339654.7549      
11.Kov .IE.1          .              .             1.0000    310000.0000      
11.Kov .IE.2          .              .             1.0000    290551.7109      
11.Kov .IE.3          .              .             1.0000    272279.4286      
11.Kov .PA.1          .              .             1.0000    270000.0000      
11.Kov .PA.2          .              .             1.0000    253662.0531      
11.Kov .PA.3          .              .             1.0000    238254.9221      
11.Kov .KI.1          .              .             1.0000    230000.0000      
11.Kov .KI.2          .              .             1.0000    216955.0173      
11.Kov .KI.3          .              .             1.0000    204567.2590      
11.Hsel.EU.1          .              .             1.0000    210000.0000      
11.Hsel.EU.2          .              .             1.0000    195086.2582      
11.Hsel.EU.3          .              .             1.0000    181220.4642      
11.Hsel.IE.1          .              .             1.0000    210000.0000      
11.Hsel.IE.2          .              .             1.0000    195538.3700      
11.Hsel.IE.3          .              .             1.0000    182048.3049      
11.Hsel.PA.1          .              .             1.0000    180000.0000      
11.Hsel.PA.2          .              .             1.0000    167959.5479      
11.Hsel.PA.3          .              .             1.0000    156691.8504      
11.Hsel.KI.1          .              .             1.0000    200000.0000      
11.Hsel.KI.2          .              .             1.0000    186722.1892      
11.Hsel.KI.3          .              .             1.0000    174286.0207      
11.Lsel.EU.1          .              .             1.0000    220000.0000      
11.Lsel.EU.2          .              .             1.0000    203718.5409      
11.Lsel.EU.3          .              .             1.0000    188617.4152      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 23:25:38 Page 169
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 433


     VAR u  1 if we use n boats for product j shiping to region k, 0 otherwise

                    LOWER          LEVEL          UPPER         MARGINAL

11.Lsel.IE.1          .             1.0000         1.0000    260000.0000      
11.Lsel.IE.2          .              .             1.0000    240343.1049      
11.Lsel.IE.3          .              .             1.0000    222156.7950      
11.Lsel.PA.1          .              .             1.0000    180000.0000      
11.Lsel.PA.2          .              .             1.0000    167362.6166      
11.Lsel.PA.3          .              .             1.0000    155566.3678      
11.Lsel.KI.1          .              .             1.0000    180000.0000      
11.Lsel.KI.2          .              .             1.0000    167899.8963      
11.Lsel.KI.3          .              .             1.0000    156543.0327      
11.Pap .EU.1          .              .             1.0000    410000.0000      
11.Pap .EU.2          .              .             1.0000    377570.0716      
11.Pap .EU.3          .              .             1.0000    347662.9688      
11.Pap .IE.1          .              .             1.0000    370000.0000      
11.Pap .IE.2          .              .             1.0000    342717.4496      
11.Pap .IE.3          .              .             1.0000    317324.2403      
11.Pap .PA.1          .              .             1.0000    310000.0000      
11.Pap .PA.2          .              .             1.0000    288265.7705      
11.Pap .PA.3          .              .             1.0000    267894.9718      
11.Pap .KI.1          .              .             1.0000    330000.0000      
11.Pap .KI.2          .              .             1.0000    307554.4353      
11.Pap .KI.3          .              .             1.0000    286425.3438      
12.Mas .EU.1          .              .             1.0000    127600.0000      
12.Mas .EU.2          .              .             1.0000    120470.5421      
12.Mas .EU.3          .              .             1.0000    113733.6421      
12.Mas .IE.1          .              .             1.0000     22000.0000      
12.Mas .IE.2          .              .             1.0000     21819.9196      
12.Mas .IE.3          .              .             1.0000     21573.1013      
12.Mas .PA.1          .              .             1.0000      8800.0000      
12.Mas .PA.2          .              .             1.0000      9629.4481      
12.Mas .PA.3          .              .             1.0000     10316.6991      
12.Mas .KI.1          .              .             1.0000    -16500.0000      
12.Mas .KI.2          .              .             1.0000    -13829.5265      
12.Mas .KI.3          .              .             1.0000    -11433.8486      
12.Kus .EU.1          .              .             1.0000         EPS         
12.Kus .EU.2          .              .             1.0000         EPS         
12.Kus .EU.3          .              .             1.0000         EPS         
12.Kus .IE.1          .              .             1.0000         EPS         
12.Kus .IE.2          .              .             1.0000         EPS         
12.Kus .IE.3          .              .             1.0000         EPS         
12.Kus .PA.1          .              .             1.0000         EPS         
12.Kus .PA.2          .              .             1.0000         EPS         
12.Kus .PA.3          .              .             1.0000         EPS         
12.Kus .KI.1          .              .             1.0000         EPS         
12.Kus .KI.2          .              .             1.0000         EPS         
12.Kus .KI.3          .              .             1.0000         EPS         
12.Kos .EU.1          .              .             1.0000    -26400.0000      
12.Kos .EU.2          .              .             1.0000    -22366.2307      
12.Kos .EU.3          .              .             1.0000    -18773.2441      
12.Kos .IE.1          .              .             1.0000    -88000.0000      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 23:25:38 Page 170
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 433


     VAR u  1 if we use n boats for product j shiping to region k, 0 otherwise

                    LOWER          LEVEL          UPPER         MARGINAL

12.Kos .IE.2          .              .             1.0000    -79017.2050      
12.Kos .IE.3          .              .             1.0000    -70870.3237      
12.Kos .PA.1          .              .             1.0000   -101200.0000      
12.Kos .PA.2          .              .             1.0000    -91037.1521      
12.Kos .PA.3          .              .             1.0000    -81811.8539      
12.Kos .KI.1          .              .             1.0000   -126500.0000      
12.Kos .KI.2          .              .             1.0000   -114214.8560      
12.Kos .KI.3          .              .             1.0000   -103042.2714      
12.Kuv .EU.1          .              .             1.0000    435600.0000      
12.Kuv .EU.2          .              .             1.0000    408373.8989      
12.Kuv .EU.3          .              .             1.0000    382839.2091      
12.Kuv .IE.1          .              .             1.0000    297000.0000      
12.Kuv .IE.2          .              .             1.0000    279653.9591      
12.Kuv .IE.3          .              .             1.0000    263288.4180      
12.Kuv .PA.1          .              .             1.0000    250800.0000      
12.Kuv .PA.2          .              .             1.0000    236747.3125      
12.Kuv .PA.3          .              .             1.0000    223438.1543      
12.Kuv .KI.1          .              .             1.0000    203500.0000      
12.Kuv .KI.2          .              .             1.0000    192978.4756      
12.Kuv .KI.3          .              .             1.0000    182935.2477      
12.Kov .EU.1          .              .             1.0000    424600.0000      
12.Kov .EU.2          .              .             1.0000    396344.6751      
12.Kov .EU.3          .              .             1.0000    369951.6402      
12.Kov .IE.1          .              .             1.0000    330000.0000      
12.Kov .IE.2          .              .             1.0000    309562.6682      
12.Kov .IE.3          .              .             1.0000    290335.8960      
12.Kov .PA.1          .              .             1.0000    283800.0000      
12.Kov .PA.2          .              .             1.0000    266975.2018      
12.Kov .PA.3          .              .             1.0000    251074.6438      
12.Kov .KI.1          .              .             1.0000    236500.0000      
12.Kov .KI.2          .              .             1.0000    223584.1984      
12.Kov .KI.3          .              .             1.0000    211266.7717      
12.Hsel.EU.1          .              .             1.0000    228800.0000      
12.Hsel.EU.2          .              .             1.0000    212605.5919      
12.Hsel.EU.3          .              .             1.0000    197543.7456      
12.Hsel.IE.1          .              .             1.0000    226600.0000      
12.Hsel.IE.2          .              .             1.0000    211113.6228      
12.Hsel.IE.3          .              .             1.0000    196655.6053      
12.Hsel.PA.1          .              .             1.0000    192500.0000      
12.Hsel.PA.2          .              .             1.0000    179782.2725      
12.Hsel.PA.3          .              .             1.0000    167864.1230      
12.Hsel.KI.1          .              .             1.0000    213400.0000      
12.Hsel.KI.2          .              .             1.0000    199426.5318      
12.Hsel.KI.3          .              .             1.0000    186318.3277      
12.Lsel.EU.1          .              .             1.0000    238700.0000      
12.Lsel.EU.2          .              .             1.0000    221135.3568      
12.Lsel.EU.3          .              .             1.0000    204833.0201      
12.Lsel.IE.1          .              .             1.0000    283800.0000      
12.Lsel.IE.2          .              .             1.0000    262407.3900      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 23:25:38 Page 171
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 433


     VAR u  1 if we use n boats for product j shiping to region k, 0 otherwise

                    LOWER          LEVEL          UPPER         MARGINAL

12.Lsel.IE.3          .              .             1.0000    242608.3835      
12.Lsel.PA.1          .              .             1.0000    192500.0000      
12.Lsel.PA.2          .              .             1.0000    179173.8147      
12.Lsel.PA.3          .              .             1.0000    166712.7770      
12.Lsel.KI.1          .              .             1.0000    190300.0000      
12.Lsel.KI.2          .              .             1.0000    177794.7969      
12.Lsel.KI.3          .              .             1.0000    166023.0174      
12.Pap .EU.1          .              .             1.0000    446600.0000      
12.Pap .EU.2          .              .             1.0000    411425.0041      
12.Pap .EU.3          .              .             1.0000    378968.7686      
12.Pap .IE.1          .              .             1.0000    396000.0000      
12.Pap .IE.2          .              .             1.0000    367234.0078      
12.Pap .IE.3          .              .             1.0000    340405.4216      
12.Pap .PA.1          .              .             1.0000    327800.0000      
12.Pap .PA.2          .              .             1.0000    305386.1234      
12.Pap .PA.3          .              .             1.0000    284302.9777      
12.Pap .KI.1          .              .             1.0000    346500.0000      
12.Pap .KI.2          .              .             1.0000    323677.0986      
12.Pap .KI.3          .              .             1.0000    302091.0141      
13.Mas .EU.1          .              .             1.0000    134400.0000      
13.Mas .EU.2          .              .             1.0000    126952.2596      
13.Mas .EU.3          .              .             1.0000    119910.0972      
13.Mas .IE.1          .              .             1.0000     12000.0000      
13.Mas .IE.2          .              .             1.0000     12628.1737      
13.Mas .IE.3          .              .             1.0000     13126.8752      
13.Mas .PA.1          .              .             1.0000     -4800.0000      
13.Mas .PA.2          .              .             1.0000     -2905.5975      
13.Mas .PA.3          .              .             1.0000     -1234.3197      
13.Mas .KI.1          .              .             1.0000    -36000.0000      
13.Mas .KI.2          .              .             1.0000    -31849.8186      
13.Mas .KI.3          .              .             1.0000    -28084.4151      
13.Kus .EU.1          .              .             1.0000         EPS         
13.Kus .EU.2          .              .             1.0000         EPS         
13.Kus .EU.3          .              .             1.0000         EPS         
13.Kus .IE.1          .              .             1.0000         EPS         
13.Kus .IE.2          .              .             1.0000         EPS         
13.Kus .IE.3          .              .             1.0000         EPS         
13.Kus .PA.1          .              .             1.0000         EPS         
13.Kus .PA.2          .              .             1.0000         EPS         
13.Kus .PA.3          .              .             1.0000         EPS         
13.Kus .KI.1          .              .             1.0000         EPS         
13.Kus .KI.2          .              .             1.0000         EPS         
13.Kus .KI.3          .              .             1.0000         EPS         
13.Kos .EU.1          .              .             1.0000    -45600.0000      
13.Kos .EU.2          .              .             1.0000    -39891.2859      
13.Kos .EU.3          .              .             1.0000    -34765.3000      
13.Kos .IE.1          .              .             1.0000   -120000.0000      
13.Kos .IE.2          .              .             1.0000   -108331.6751      
13.Kos .IE.3          .              .             1.0000    -97720.7908      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 23:25:38 Page 172
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 433


     VAR u  1 if we use n boats for product j shiping to region k, 0 otherwise

                    LOWER          LEVEL          UPPER         MARGINAL

13.Kos .PA.1          .              .             1.0000   -136800.0000      
13.Kos .PA.2          .              .             1.0000   -123657.4535      
13.Kos .PA.3          .              .             1.0000   -111697.7766      
13.Kos .KI.1          .              .             1.0000   -168000.0000      
13.Kos .KI.2          .              .             1.0000   -152261.8845      
13.Kos .KI.3          .              .             1.0000   -137919.3886      
13.Kuv .EU.1          .              .             1.0000    470400.0000      
13.Kuv .EU.2          .              .             1.0000    441072.5812      
13.Kuv .EU.3          .              .             1.0000    413561.2314      
13.Kuv .IE.1          .              .             1.0000    312000.0000      
13.Kuv .IE.2          .              .             1.0000    294011.5023      
13.Kuv .IE.3          .              .             1.0000    277019.8735      
13.Kuv .PA.1          .              .             1.0000    259200.0000      
13.Kuv .PA.2          .              .             1.0000    244991.1427      
13.Kuv .PA.3          .              .             1.0000    231506.0875      
13.Kuv .KI.1          .              .             1.0000    204000.0000      
13.Kuv .KI.2          .              .             1.0000    193923.6575      
13.Kuv .KI.3          .              .             1.0000    184259.9420      
13.Kov .EU.1          .              .             1.0000    458400.0000      
13.Kov .EU.2          .              .             1.0000    427993.0796      
13.Kov .EU.3          .              .             1.0000    399581.5091      
13.Kov .IE.1          .              .             1.0000    348000.0000      
13.Kov .IE.2          .              .             1.0000    326747.4048      
13.Kov .IE.3          .              .             1.0000    306724.8224      
13.Kov .PA.1          .              .             1.0000    295200.0000      
13.Kov .PA.2          .              .             1.0000    278096.8858      
13.Kov .PA.3          .              .             1.0000    261893.3163      
13.Kov .KI.1          .              .             1.0000    240000.0000      
13.Kov .KI.2          .              .             1.0000    227474.0484      
13.Kov .KI.3          .              .             1.0000    215464.9729      
13.Hsel.EU.1          .              .             1.0000    247200.0000      
13.Hsel.EU.2          .              .             1.0000    229763.2362      
13.Hsel.EU.3          .              .             1.0000    213539.9788      
13.Hsel.IE.1          .              .             1.0000    242400.0000      
13.Hsel.IE.2          .              .             1.0000    225965.4967      
13.Hsel.IE.3          .              .             1.0000    210608.8094      
13.Hsel.PA.1          .              .             1.0000    204000.0000      
13.Hsel.PA.2          .              .             1.0000    190700.7733      
13.Hsel.PA.3          .              .             1.0000    178218.7750      
13.Hsel.KI.1          .              .             1.0000    225600.0000      
13.Hsel.KI.2          .              .             1.0000    211045.8061      
13.Hsel.KI.3          .              .             1.0000    197369.4902      
13.Lsel.EU.1          .              .             1.0000    256800.0000      
13.Lsel.EU.2          .              .             1.0000    238014.8930      
13.Lsel.EU.3          .              .             1.0000    220567.5094      
13.Lsel.IE.1          .              .             1.0000    307200.0000      
13.Lsel.IE.2          .              .             1.0000    284113.4885      
13.Lsel.IE.3          .              .             1.0000    262739.2281      
13.Lsel.PA.1          .              .             1.0000    204000.0000      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 23:25:38 Page 173
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 433


     VAR u  1 if we use n boats for product j shiping to region k, 0 otherwise

                    LOWER          LEVEL          UPPER         MARGINAL

13.Lsel.PA.2          .              .             1.0000    190089.5466      
13.Lsel.PA.3          .              .             1.0000    177057.3266      
13.Lsel.KI.1          .              .             1.0000    199200.0000      
13.Lsel.KI.2          .              .             1.0000    186436.0449      
13.Lsel.KI.3          .              .             1.0000    174380.3987      
13.Pap .EU.1          .              .             1.0000    482400.0000      
13.Pap .EU.2          .              .             1.0000    444570.4684      
13.Pap .EU.3          .              .             1.0000    409645.3871      
13.Pap .IE.1          .              .             1.0000    420000.0000      
13.Pap .IE.2          .              .             1.0000    389976.8956      
13.Pap .IE.3          .              .             1.0000    361913.6497      
13.Pap .PA.1          .              .             1.0000    343200.0000      
13.Pap .PA.2          .              .             1.0000    320378.0718      
13.Pap .PA.3          .              .             1.0000    298823.4398      
13.Pap .KI.1          .              .             1.0000    360000.0000      
13.Pap .KI.2          .              .             1.0000    337139.2565      
13.Pap .KI.3          .              .             1.0000    315397.2546      
14.Mas .EU.1          .              .             1.0000    140400.0000      
14.Mas .EU.2          .              .             1.0000    132688.9521      
14.Mas .EU.3          .              .             1.0000    125392.7246      
14.Mas .IE.1          .              .             1.0000         EPS         
14.Mas .IE.2          .              .             1.0000      1573.8653      
14.Mas .IE.3          .              .             1.0000      2946.0796      
14.Mas .PA.1          .              .             1.0000    -20800.0000      
14.Mas .PA.2          .              .             1.0000    -17675.7181      
14.Mas .PA.3          .              .             1.0000    -14866.8219      
14.Mas .KI.1          .              .             1.0000    -58500.0000      
14.Mas .KI.2          .              .             1.0000    -52663.9545      
14.Mas .KI.3          .              .             1.0000    -47336.8359      
14.Kus .EU.1          .              .             1.0000         EPS         
14.Kus .EU.2          .              .             1.0000         EPS         
14.Kus .EU.3          .              .             1.0000         EPS         
14.Kus .IE.1          .              .             1.0000         EPS         
14.Kus .IE.2          .              .             1.0000         EPS         
14.Kus .IE.3          .              .             1.0000         EPS         
14.Kus .PA.1          .              .             1.0000         EPS         
14.Kus .PA.2          .              .             1.0000         EPS         
14.Kus .PA.3          .              .             1.0000         EPS         
14.Kus .KI.1          .              .             1.0000         EPS         
14.Kus .KI.2          .              .             1.0000         EPS         
14.Kus .KI.3          .              .             1.0000         EPS         
14.Kos .EU.1          .              .             1.0000    -67600.0000      
14.Kos .EU.2          .              .             1.0000    -59998.3013      
14.Kos .EU.3          .              .             1.0000    -53138.2554      
14.Kos .IE.1          .              .             1.0000   -156000.0000      
14.Kos .IE.2          .              .             1.0000   -141334.6599      
14.Kos .IE.3          .              .             1.0000   -127972.5430      
14.Kos .PA.1          .              .             1.0000   -176800.0000      
14.Kos .PA.2          .              .             1.0000   -160335.1210      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 23:25:38 Page 174
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 433


     VAR u  1 if we use n boats for product j shiping to region k, 0 otherwise

                    LOWER          LEVEL          UPPER         MARGINAL

14.Kos .PA.3          .              .             1.0000   -145325.1129      
14.Kos .KI.1          .              .             1.0000   -214500.0000      
14.Kos .KI.2          .              .             1.0000   -194919.5564      
14.Kos .KI.3          .              .             1.0000   -177048.1122      
14.Kuv .EU.1          .              .             1.0000    504400.0000      
14.Kuv .EU.2          .              .             1.0000    473033.5606      
14.Kuv .EU.3          .              .             1.0000    443602.9968      
14.Kuv .IE.1          .              .             1.0000    325000.0000      
14.Kuv .IE.2          .              .             1.0000    306524.7883      
14.Kuv .IE.3          .              .             1.0000    289050.6864      
14.Kuv .PA.1          .              .             1.0000    265200.0000      
14.Kuv .PA.2          .              .             1.0000    251021.8642      
14.Kuv .PA.3          .              .             1.0000    237533.2497      
14.Kuv .KI.1          .              .             1.0000    201500.0000      
14.Kuv .KI.2          .              .             1.0000    192102.4533      
14.Kuv .KI.3          .              .             1.0000    183033.6724      
14.Kov .EU.1          .              .             1.0000    491400.0000      
14.Kov .EU.2          .              .             1.0000    458910.9958      
14.Kov .EU.3          .              .             1.0000    428544.3616      
14.Kov .IE.1          .              .             1.0000    364000.0000      
14.Kov .IE.2          .              .             1.0000    342105.9208      
14.Kov .IE.3          .              .             1.0000    321446.2078      
14.Kov .PA.1          .              .             1.0000    304200.0000      
14.Kov .PA.2          .              .             1.0000    287027.1050      
14.Kov .PA.3          .              .             1.0000    270710.9395      
14.Kov .KI.1          .              .             1.0000    240500.0000      
14.Kov .KI.2          .              .             1.0000    228624.5675      
14.Kov .KI.3          .              .             1.0000    217161.8626      
14.Hsel.EU.1          .              .             1.0000    265200.0000      
14.Hsel.EU.2          .              .             1.0000    246559.1910      
14.Hsel.EU.3          .              .             1.0000    229209.1638      
14.Hsel.IE.1          .              .             1.0000    257400.0000      
14.Hsel.IE.2          .              .             1.0000    240093.9917      
14.Hsel.IE.3          .              .             1.0000    223907.9172      
14.Hsel.PA.1          .              .             1.0000    214500.0000      
14.Hsel.PA.2          .              .             1.0000    200715.0506      
14.Hsel.PA.3          .              .             1.0000    187755.8067      
14.Hsel.KI.1          .              .             1.0000    236600.0000      
14.Hsel.KI.2          .              .             1.0000    221580.0119      
14.Hsel.KI.3          .              .             1.0000    207439.5082      
14.Lsel.EU.1          .              .             1.0000    274300.0000      
14.Lsel.EU.2          .              .             1.0000    254357.1496      
14.Lsel.EU.3          .              .             1.0000    235820.8829      
14.Lsel.IE.1          .              .             1.0000    330200.0000      
14.Lsel.IE.2          .              .             1.0000    305461.4007      
14.Lsel.IE.3          .              .             1.0000    282549.3290      
14.Lsel.PA.1          .              .             1.0000    214500.0000      
14.Lsel.PA.2          .              .             1.0000    200109.8124      
14.Lsel.PA.3          .              .             1.0000    186600.0167      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 23:25:38 Page 175
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 433


     VAR u  1 if we use n boats for product j shiping to region k, 0 otherwise

                    LOWER          LEVEL          UPPER         MARGINAL

14.Lsel.KI.1          .              .             1.0000    206700.0000      
14.Lsel.KI.2          .              .             1.0000    193823.6403      
14.Lsel.KI.3          .              .             1.0000    181615.1766      
14.Pap .EU.1          .              .             1.0000    517400.0000      
14.Pap .EU.2          .              .             1.0000    477006.4646      
14.Pap .EU.3          .              .             1.0000    439692.8243      
14.Pap .IE.1          .              .             1.0000    442000.0000      
14.Pap .IE.2          .              .             1.0000    410946.1131      
14.Pap .IE.3          .              .             1.0000    381848.9246      
14.Pap .PA.1          .              .             1.0000    356200.0000      
14.Pap .PA.2          .              .             1.0000    333241.6159      
14.Pap .PA.3          .              .             1.0000    311456.3579      
14.Pap .KI.1          .              .             1.0000    370500.0000      
14.Pap .KI.2          .              .             1.0000    347940.9088      
14.Pap .KI.3          .              .             1.0000    326344.0653      
15.Mas .EU.1          .              .             1.0000    145600.0000      
15.Mas .EU.2          .              .             1.0000    137680.6195      
15.Mas .EU.3          .              .             1.0000    130181.5241      
15.Mas .IE.1          .              .             1.0000    -14000.0000      
15.Mas .IE.2          .              .             1.0000    -11343.0056      
15.Mas .IE.3          .              .             1.0000     -8969.2855      
15.Mas .PA.1          .              .             1.0000    -39200.0000      
15.Mas .PA.2          .              .             1.0000    -34680.9136      
15.Mas .PA.3          .              .             1.0000    -30580.8076      
15.Mas .KI.1          .              .             1.0000    -84000.0000      
15.Mas .KI.2          .              .             1.0000    -76271.9341      
15.Mas .KI.3          .              .             1.0000    -69191.1109      
15.Kus .EU.1          .              .             1.0000         EPS         
15.Kus .EU.2          .              .             1.0000         EPS         
15.Kus .EU.3          .              .             1.0000         EPS         
15.Kus .IE.1          .              .             1.0000         EPS         
15.Kus .IE.2          .              .             1.0000         EPS         
15.Kus .IE.3          .              .             1.0000         EPS         
15.Kus .PA.1          .              .             1.0000         EPS         
15.Kus .PA.2          .              .             1.0000         EPS         
15.Kus .PA.3          .              .             1.0000         EPS         
15.Kus .KI.1          .              .             1.0000         EPS         
15.Kus .KI.2          .              .             1.0000         EPS         
15.Kus .KI.3          .              .             1.0000         EPS         
15.Kos .EU.1          .              .             1.0000    -92400.0000      
15.Kos .EU.2          .              .             1.0000    -82687.2771      
15.Kos .EU.3          .              .             1.0000    -73892.1104      
15.Kos .IE.1          .              .             1.0000   -196000.0000      
15.Kos .IE.2          .              .             1.0000   -178026.1593      
15.Kos .IE.3          .              .             1.0000   -161625.5803      
15.Kos .PA.1          .              .             1.0000   -221200.0000      
15.Kos .PA.2          .              .             1.0000   -201070.1546      
15.Kos .PA.3          .              .             1.0000   -182693.8628      
15.Kos .KI.1          .              .             1.0000   -266000.0000      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 23:25:38 Page 176
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 433


     VAR u  1 if we use n boats for product j shiping to region k, 0 otherwise

                    LOWER          LEVEL          UPPER         MARGINAL

15.Kos .KI.2          .              .             1.0000   -242187.8716      
15.Kos .KI.3          .              .             1.0000   -220428.4421      
15.Kuv .EU.1          .              .             1.0000    537600.0000      
15.Kuv .EU.2          .              .             1.0000    504256.8371      
15.Kuv .EU.3          .              .             1.0000    472964.5051      
15.Kuv .IE.1          .              .             1.0000    336000.0000      
15.Kuv .IE.2          .              .             1.0000    317193.8169      
15.Kuv .IE.3          .              .             1.0000    299380.8569      
15.Kuv .PA.1          .              .             1.0000    268800.0000      
15.Kuv .PA.2          .              .             1.0000    254839.4768      
15.Kuv .PA.3          .              .             1.0000    241519.6408      
15.Kuv .KI.1          .              .             1.0000    196000.0000      
15.Kuv .KI.2          .              .             1.0000    187514.8633      
15.Kuv .KI.3          .              .             1.0000    179256.4391      
15.Kov .EU.1          .              .             1.0000    523600.0000      
15.Kov .EU.2          .              .             1.0000    489098.4237      
15.Kov .EU.3          .              .             1.0000    456840.1977      
15.Kov .IE.1          .              .             1.0000    378000.0000      
15.Kov .IE.2          .              .             1.0000    355638.2161      
15.Kov .IE.3          .              .             1.0000    334500.0522      
15.Kov .PA.1          .              .             1.0000    310800.0000      
15.Kov .PA.2          .              .             1.0000    293765.8593      
15.Kov .PA.3          .              .             1.0000    277527.5136      
15.Kov .KI.1          .              .             1.0000    238000.0000      
15.Kov .KI.2          .              .             1.0000    227035.7555      
15.Kov .KI.3          .              .             1.0000    216357.4408      
15.Hsel.EU.1          .              .             1.0000    282800.0000      
15.Hsel.EU.2          .              .             1.0000    262993.4563      
15.Hsel.EU.3          .              .             1.0000    244551.3007      
15.Hsel.IE.1          .              .             1.0000    271600.0000      
15.Hsel.IE.2          .              .             1.0000    253499.1077      
15.Hsel.IE.3          .              .             1.0000    236552.9286      
15.Hsel.PA.1          .              .             1.0000    224000.0000      
15.Hsel.PA.2          .              .             1.0000    209825.1041      
15.Hsel.PA.3          .              .             1.0000    196475.2178      
15.Hsel.KI.1          .              .             1.0000    246400.0000      
15.Hsel.KI.2          .              .             1.0000    231029.1493      
15.Hsel.KI.3          .              .             1.0000    216528.3816      
15.Lsel.EU.1          .              .             1.0000    291200.0000      
15.Lsel.EU.2          .              .             1.0000    270162.1265      
15.Lsel.EU.3          .              .             1.0000    250593.1406      
15.Lsel.IE.1          .              .             1.0000    352800.0000      
15.Lsel.IE.2          .              .             1.0000    326451.1264      
15.Lsel.IE.3          .              .             1.0000    302038.6860      
15.Lsel.PA.1          .              .             1.0000    224000.0000      
15.Lsel.PA.2          .              .             1.0000    209234.6121      
15.Lsel.PA.3          .              .             1.0000    195340.8472      
15.Lsel.KI.1          .              .             1.0000    212800.0000      
15.Lsel.KI.2          .              .             1.0000    199957.5832      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 23:25:38 Page 177
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 433


     VAR u  1 if we use n boats for product j shiping to region k, 0 otherwise

                    LOWER          LEVEL          UPPER         MARGINAL

15.Lsel.KI.3          .              .             1.0000    187727.3511      
15.Pap .EU.1          .              .             1.0000    551600.0000      
15.Pap .EU.2          .              .             1.0000    508732.9926      
15.Pap .EU.3          .              .             1.0000    469111.0802      
15.Pap .IE.1          .              .             1.0000    462000.0000      
15.Pap .IE.2          .              .             1.0000    430141.6602      
15.Pap .IE.3          .              .             1.0000    400211.2462      
15.Pap .PA.1          .              .             1.0000    366800.0000      
15.Pap .PA.2          .              .             1.0000    343976.7556      
15.Pap .PA.3          .              .             1.0000    322201.7323      
15.Pap .KI.1          .              .             1.0000    378000.0000      
15.Pap .KI.2          .              .             1.0000    356082.0556      
15.Pap .KI.3          .              .             1.0000    334931.4461      
16.Mas .EU.1          .              .             1.0000    150000.0000      
16.Mas .EU.2          .              .             1.0000    141927.2620      
16.Mas .EU.3          .              .             1.0000    134276.4958      
16.Mas .IE.1          .              .             1.0000    -30000.0000      
16.Mas .IE.2          .              .             1.0000    -26122.4390      
16.Mas .IE.3          .              .             1.0000    -22619.2202      
16.Mas .PA.1          .              .             1.0000    -60000.0000      
16.Mas .PA.2          .              .             1.0000    -53921.1842      
16.Mas .PA.3          .              .             1.0000    -48376.2767      
16.Mas .KI.1          .              .             1.0000   -112500.0000      
16.Mas .KI.2          .              .             1.0000   -102673.7575      
16.Mas .KI.3          .              .             1.0000    -93647.2403      
16.Kus .EU.1          .              .             1.0000         EPS         
16.Kus .EU.2          .              .             1.0000         EPS         
16.Kus .EU.3          .              .             1.0000         EPS         
16.Kus .IE.1          .              .             1.0000         EPS         
16.Kus .IE.2          .              .             1.0000         EPS         
16.Kus .IE.3          .              .             1.0000         EPS         
16.Kus .PA.1          .              .             1.0000         EPS         
16.Kus .PA.2          .              .             1.0000         EPS         
16.Kus .PA.3          .              .             1.0000         EPS         
16.Kus .KI.1          .              .             1.0000         EPS         
16.Kus .KI.2          .              .             1.0000         EPS         
16.Kus .KI.3          .              .             1.0000         EPS         
16.Kos .EU.1          .              .             1.0000   -120000.0000      
16.Kos .EU.2          .              .             1.0000   -107958.2130      
16.Kos .EU.3          .              .             1.0000    -97026.8649      
16.Kos .IE.1          .              .             1.0000   -240000.0000      
16.Kos .IE.2          .              .             1.0000   -218406.1734      
16.Kos .IE.3          .              .             1.0000   -198679.9026      
16.Kos .PA.1          .              .             1.0000   -270000.0000      
16.Kos .PA.2          .              .             1.0000   -245862.5543      
16.Kos .PA.3          .              .             1.0000   -223804.0262      
16.Kos .KI.1          .              .             1.0000   -322500.0000      
16.Kos .KI.2          .              .             1.0000   -294066.8301      
16.Kos .KI.3          .              .             1.0000   -268060.3784      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 23:25:38 Page 178
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 433


     VAR u  1 if we use n boats for product j shiping to region k, 0 otherwise

                    LOWER          LEVEL          UPPER         MARGINAL

16.Kuv .EU.1          .              .             1.0000    570000.0000      
16.Kuv .EU.2          .              .             1.0000    534742.4106      
16.Kuv .EU.3          .              .             1.0000    501645.7565      
16.Kuv .IE.1          .              .             1.0000    345000.0000      
16.Kuv .IE.2          .              .             1.0000    326018.5882      
16.Kuv .IE.3          .              .             1.0000    308010.3848      
16.Kuv .PA.1          .              .             1.0000    270000.0000      
16.Kuv .PA.2          .              .             1.0000    256443.9807      
16.Kuv .PA.3          .              .             1.0000    243465.2609      
16.Kuv .KI.1          .              .             1.0000    187500.0000      
16.Kuv .KI.2          .              .             1.0000    180160.8872      
16.Kuv .KI.3          .              .             1.0000    172928.2419      
16.Kov .EU.1          .              .             1.0000    555000.0000      
16.Kov .EU.2          .              .             1.0000    518555.3633      
16.Kov .EU.3          .              .             1.0000    484469.0174      
16.Kov .IE.1          .              .             1.0000    390000.0000      
16.Kov .IE.2          .              .             1.0000    367344.2907      
16.Kov .IE.3          .              .             1.0000    345886.3556      
16.Kov .PA.1          .              .             1.0000    315000.0000      
16.Kov .PA.2          .              .             1.0000    298313.1488      
16.Kov .PA.3          .              .             1.0000    282343.0385      
16.Kov .KI.1          .              .             1.0000    232500.0000      
16.Kov .KI.2          .              .             1.0000    222707.6125      
16.Kov .KI.3          .              .             1.0000    213051.7076      
16.Hsel.EU.1          .              .             1.0000    300000.0000      
16.Hsel.EU.2          .              .             1.0000    279066.0321      
16.Hsel.EU.3          .              .             1.0000    259566.3894      
16.Hsel.IE.1          .              .             1.0000    285000.0000      
16.Hsel.IE.2          .              .             1.0000    266180.8447      
16.Hsel.IE.3          .              .             1.0000    248543.8436      
16.Hsel.PA.1          .              .             1.0000    232500.0000      
16.Hsel.PA.2          .              .             1.0000    218030.9340      
16.Hsel.PA.3          .              .             1.0000    204377.0085      
16.Hsel.KI.1          .              .             1.0000    255000.0000      
16.Hsel.KI.2          .              .             1.0000    239393.2183      
16.Hsel.KI.3          .              .             1.0000    224636.1104      
16.Lsel.EU.1          .              .             1.0000    307500.0000      
16.Lsel.EU.2          .              .             1.0000    285429.8237      
16.Lsel.EU.3          .              .             1.0000    264884.2826      
16.Lsel.IE.1          .              .             1.0000    375000.0000      
16.Lsel.IE.2          .              .             1.0000    347082.6657      
16.Lsel.IE.3          .              .             1.0000    321207.2991      
16.Lsel.PA.1          .              .             1.0000    232500.0000      
16.Lsel.PA.2          .              .             1.0000    217463.9457      
16.Lsel.PA.3          .              .             1.0000    203279.8182      
16.Lsel.KI.1          .              .             1.0000    217500.0000      
16.Lsel.KI.2          .              .             1.0000    204837.8735      
16.Lsel.KI.3          .              .             1.0000    192716.9222      
16.Pap .EU.1          .              .             1.0000    585000.0000      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 23:25:38 Page 179
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 433


     VAR u  1 if we use n boats for product j shiping to region k, 0 otherwise

                    LOWER          LEVEL          UPPER         MARGINAL

16.Pap .EU.2          .              .             1.0000    539750.0525      
16.Pap .EU.3          .              .             1.0000    497900.1548      
16.Pap .IE.1          .              .             1.0000    480000.0000      
16.Pap .IE.2          .              .             1.0000    447563.5371      
16.Pap .IE.3          .              .             1.0000    417000.6146      
16.Pap .PA.1          .              .             1.0000    375000.0000      
16.Pap .PA.2          .              .             1.0000    352583.4909      
16.Pap .PA.3          .              .             1.0000    331059.5627      
16.Pap .KI.1          .              .             1.0000    382500.0000      
16.Pap .KI.2          .              .             1.0000    361562.6969      
16.Pap .KI.3          .              .             1.0000    341159.3971      
17.Mas .EU.1          .              .             1.0000    153600.0000      
17.Mas .EU.2          .              .             1.0000    145428.8795      
17.Mas .EU.3          .              .             1.0000    137677.6397      
17.Mas .IE.1          .              .             1.0000    -48000.0000      
17.Mas .IE.2          .              .             1.0000    -42764.4349      
17.Mas .IE.3          .              .             1.0000    -38003.7244      
17.Mas .PA.1          .              .             1.0000    -83200.0000      
17.Mas .PA.2          .              .             1.0000    -75396.5298      
17.Mas .PA.3          .              .             1.0000    -68253.2292      
17.Mas .KI.1          .              .             1.0000   -144000.0000      
17.Mas .KI.2          .              .             1.0000   -131869.4246      
17.Mas .KI.3          .              .             1.0000   -120705.2239      
17.Kus .EU.1          .              .             1.0000         EPS         
17.Kus .EU.2          .              .             1.0000         EPS         
17.Kus .EU.3          .              .             1.0000         EPS         
17.Kus .IE.1          .              .             1.0000         EPS         
17.Kus .IE.2          .              .             1.0000         EPS         
17.Kus .IE.3          .              .             1.0000         EPS         
17.Kus .PA.1          .              .             1.0000         EPS         
17.Kus .PA.2          .              .             1.0000         EPS         
17.Kus .PA.3          .              .             1.0000         EPS         
17.Kus .KI.1          .              .             1.0000         EPS         
17.Kus .KI.2          .              .             1.0000         EPS         
17.Kus .KI.3          .              .             1.0000         EPS         
17.Kos .EU.1          .              .             1.0000   -150400.0000      
17.Kos .EU.2          .              .             1.0000   -135811.1092      
17.Kos .EU.3          .              .             1.0000   -122542.5189      
17.Kos .IE.1          .              .             1.0000   -288000.0000      
17.Kos .IE.2          .              .             1.0000   -262474.7021      
17.Kos .IE.3          .              .             1.0000   -239135.5100      
17.Kos .PA.1          .              .             1.0000   -323200.0000      
17.Kos .PA.2          .              .             1.0000   -294712.3201      
17.Kos .PA.3          .              .             1.0000   -268655.6033      
17.Kos .KI.1          .              .             1.0000   -384000.0000      
17.Kos .KI.2          .              .             1.0000   -350556.4318      
17.Kos .KI.3          .              .             1.0000   -319943.9210      
17.Kuv .EU.1          .              .             1.0000    601600.0000      
17.Kuv .EU.2          .              .             1.0000    564490.2812      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 23:25:38 Page 180
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 433


     VAR u  1 if we use n boats for product j shiping to region k, 0 otherwise

                    LOWER          LEVEL          UPPER         MARGINAL

17.Kuv .EU.3          .              .             1.0000    529646.7508      
17.Kuv .IE.1          .              .             1.0000    352000.0000      
17.Kuv .IE.2          .              .             1.0000    332999.1021      
17.Kuv .IE.3          .              .             1.0000    314939.2702      
17.Kuv .PA.1          .              .             1.0000    268800.0000      
17.Kuv .PA.2          .              .             1.0000    255835.3758      
17.Kuv .PA.3          .              .             1.0000    243370.1099      
17.Kuv .KI.1          .              .             1.0000    176000.0000      
17.Kuv .KI.2          .              .             1.0000    170040.5251      
17.Kuv .KI.3          .              .             1.0000    164049.0809      
17.Kov .EU.1          .              .             1.0000    585600.0000      
17.Kov .EU.2          .              .             1.0000    547281.8147      
17.Kov .EU.3          .              .             1.0000    511430.8208      
17.Kov .IE.1          .              .             1.0000    400000.0000      
17.Kov .IE.2          .              .             1.0000    377224.1446      
17.Kov .IE.3          .              .             1.0000    355605.1180      
17.Kov .PA.1          .              .             1.0000    316800.0000      
17.Kov .PA.2          .              .             1.0000    300668.9735      
17.Kov .PA.3          .              .             1.0000    285157.5142      
17.Kov .KI.1          .              .             1.0000    224000.0000      
17.Kov .KI.2          .              .             1.0000    215640.1384      
17.Kov .KI.3          .              .             1.0000    207244.6628      
17.Hsel.EU.1          .              .             1.0000    316800.0000      
17.Hsel.EU.2          .              .             1.0000    294776.9185      
17.Hsel.EU.3          .              .             1.0000    274254.4299      
17.Hsel.IE.1          .              .             1.0000    297600.0000      
17.Hsel.IE.2          .              .             1.0000    278139.2029      
17.Hsel.IE.3          .              .             1.0000    259880.6622      
17.Hsel.PA.1          .              .             1.0000    240000.0000      
17.Hsel.PA.2          .              .             1.0000    225332.5402      
17.Hsel.PA.3          .              .             1.0000    211461.1788      
17.Hsel.KI.1          .              .             1.0000    262400.0000      
17.Hsel.KI.2          .              .             1.0000    246672.2189      
17.Hsel.KI.3          .              .             1.0000    231762.6947      
17.Lsel.EU.1          .              .             1.0000    323200.0000      
17.Lsel.EU.2          .              .             1.0000    300160.2413      
17.Lsel.EU.3          .              .             1.0000    278694.3089      
17.Lsel.IE.1          .              .             1.0000    396800.0000      
17.Lsel.IE.2          .              .             1.0000    367356.0185      
17.Lsel.IE.3          .              .             1.0000    340055.1685      
17.Lsel.PA.1          .              .             1.0000    240000.0000      
17.Lsel.PA.2          .              .             1.0000    224797.8132      
17.Lsel.PA.3          .              .             1.0000    210416.9296      
17.Lsel.KI.1          .              .             1.0000    220800.0000      
17.Lsel.KI.2          .              .             1.0000    208464.5113      
17.Lsel.KI.3          .              .             1.0000    196583.8899      
17.Pap .EU.1          .              .             1.0000    617600.0000      
17.Pap .EU.2          .              .             1.0000    570057.6443      
17.Pap .EU.3          .              .             1.0000    526060.0482      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 23:25:38 Page 181
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 433


     VAR u  1 if we use n boats for product j shiping to region k, 0 otherwise

                    LOWER          LEVEL          UPPER         MARGINAL

17.Pap .IE.1          .              .             1.0000    496000.0000      
17.Pap .IE.2          .              .             1.0000    463211.7436      
17.Pap .IE.3          .              .             1.0000    432217.0298      
17.Pap .PA.1          .              .             1.0000    380800.0000      
17.Pap .PA.2          .              .             1.0000    359061.8217      
17.Pap .PA.3          .              .             1.0000    338029.8493      
17.Pap .KI.1          .              .             1.0000    384000.0000      
17.Pap .KI.2          .              .             1.0000    364382.8327      
17.Pap .KI.3          .              .             1.0000    345027.9182      
18.Mas .EU.1          .              .             1.0000    156400.0000      
18.Mas .EU.2          .              .             1.0000    148185.4720      
18.Mas .EU.3          .              .             1.0000    140384.9558      
18.Mas .IE.1          .              .             1.0000    -68000.0000      
18.Mas .IE.2          .              .             1.0000    -61268.9932      
18.Mas .IE.3          .              .             1.0000    -55122.7981      
18.Mas .PA.1          .              .             1.0000   -108800.0000      
18.Mas .PA.2          .              .             1.0000    -99106.9503      
18.Mas .PA.3          .              .             1.0000    -90211.6651      
18.Mas .KI.1          .              .             1.0000   -178500.0000      
18.Mas .KI.2          .              .             1.0000   -163858.9354      
18.Mas .KI.3          .              .             1.0000   -150365.0618      
18.Kus .EU.1          .              .             1.0000         EPS         
18.Kus .EU.2          .              .             1.0000         EPS         
18.Kus .EU.3          .              .             1.0000         EPS         
18.Kus .IE.1          .              .             1.0000         EPS         
18.Kus .IE.2          .              .             1.0000         EPS         
18.Kus .IE.3          .              .             1.0000         EPS         
18.Kus .PA.1          .              .             1.0000         EPS         
18.Kus .PA.2          .              .             1.0000         EPS         
18.Kus .PA.3          .              .             1.0000         EPS         
18.Kus .KI.1          .              .             1.0000         EPS         
18.Kus .KI.2          .              .             1.0000         EPS         
18.Kus .KI.3          .              .             1.0000         EPS         
18.Kos .EU.1          .              .             1.0000   -183600.0000      
18.Kos .EU.2          .              .             1.0000   -166245.9657      
18.Kos .EU.3          .              .             1.0000   -150439.0725      
18.Kos .IE.1          .              .             1.0000   -340000.0000      
18.Kos .IE.2          .              .             1.0000   -310231.7455      
18.Kos .IE.3          .              .             1.0000   -282992.4025      
18.Kos .PA.1          .              .             1.0000   -380800.0000      
18.Kos .PA.2          .              .             1.0000   -347619.4521      
18.Kos .PA.3          .              .             1.0000   -317248.5939      
18.Kos .KI.1          .              .             1.0000   -450500.0000      
18.Kos .KI.2          .              .             1.0000   -411656.6769      
18.Kos .KI.3          .              .             1.0000   -376079.0700      
18.Kuv .EU.1          .              .             1.0000    632400.0000      
18.Kuv .EU.2          .              .             1.0000    593500.4489      
18.Kuv .EU.3          .              .             1.0000    556967.4881      
18.Kuv .IE.1          .              .             1.0000    357000.0000      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 23:25:38 Page 182
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 433


     VAR u  1 if we use n boats for product j shiping to region k, 0 otherwise

                    LOWER          LEVEL          UPPER         MARGINAL

18.Kuv .IE.2          .              .             1.0000    338135.3588      
18.Kuv .IE.3          .              .             1.0000    320167.5130      
18.Kuv .PA.1          .              .             1.0000    265200.0000      
18.Kuv .PA.2          .              .             1.0000    253013.6621      
18.Kuv .PA.3          .              .             1.0000    241234.1879      
18.Kuv .KI.1          .              .             1.0000    161500.0000      
18.Kuv .KI.2          .              .             1.0000    157153.7771      
18.Kuv .KI.3          .              .             1.0000    152618.9561      
18.Kov .EU.1          .              .             1.0000    615400.0000      
18.Kov .EU.2          .              .             1.0000    575277.7778      
18.Kov .EU.3          .              .             1.0000    537725.6077      
18.Kov .IE.1          .              .             1.0000    408000.0000      
18.Kov .IE.2          .              .             1.0000    385277.7778      
18.Kov .IE.3          .              .             1.0000    363656.3394      
18.Kov .PA.1          .              .             1.0000    316200.0000      
18.Kov .PA.2          .              .             1.0000    300833.3333      
18.Kov .PA.3          .              .             1.0000    285970.9407      
18.Kov .KI.1          .              .             1.0000    212500.0000      
18.Kov .KI.2          .              .             1.0000    205833.3333      
18.Kov .KI.3          .              .             1.0000    198936.3065      
18.Hsel.EU.1          .              .             1.0000    333200.0000      
18.Hsel.EU.2          .              .             1.0000    310126.1154      
18.Hsel.EU.3          .              .             1.0000    288615.4222      
18.Hsel.IE.1          .              .             1.0000    309400.0000      
18.Hsel.IE.2          .              .             1.0000    289374.1820      
18.Hsel.IE.3          .              .             1.0000    270563.3845      
18.Hsel.PA.1          .              .             1.0000    246500.0000      
18.Hsel.PA.2          .              .             1.0000    231729.9227      
18.Hsel.PA.3          .              .             1.0000    217727.7286      
18.Hsel.KI.1          .              .             1.0000    268600.0000      
18.Hsel.KI.2          .              .             1.0000    252866.1511      
18.Hsel.KI.3          .              .             1.0000    237908.1345      
18.Lsel.EU.1          .              .             1.0000    338300.0000      
18.Lsel.EU.2          .              .             1.0000    314353.3792      
18.Lsel.EU.3          .              .             1.0000    292023.2195      
18.Lsel.IE.1          .              .             1.0000    418200.0000      
18.Lsel.IE.2          .              .             1.0000    387271.1848      
18.Lsel.IE.3          .              .             1.0000    358582.2940      
18.Lsel.PA.1          .              .             1.0000    246500.0000      
18.Lsel.PA.2          .              .             1.0000    231236.2145      
18.Lsel.PA.3          .              .             1.0000    216752.1814      
18.Lsel.KI.1          .              .             1.0000    222700.0000      
18.Lsel.KI.2          .              .             1.0000    210837.4965      
18.Lsel.KI.3          .              .             1.0000    199328.2543      
18.Pap .EU.1          .              .             1.0000    649400.0000      
18.Pap .EU.2          .              .             1.0000    599655.7679      
18.Pap .EU.3          .              .             1.0000    553590.7602      
18.Pap .IE.1          .              .             1.0000    510000.0000      
18.Pap .IE.2          .              .             1.0000    477086.2797      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 23:25:38 Page 183
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 433


     VAR u  1 if we use n boats for product j shiping to region k, 0 otherwise

                    LOWER          LEVEL          UPPER         MARGINAL

18.Pap .IE.3          .              .             1.0000    445860.4918      
18.Pap .PA.1          .              .             1.0000    384200.0000      
18.Pap .PA.2          .              .             1.0000    363411.7482      
18.Pap .PA.3          .              .             1.0000    343112.5921      
18.Pap .KI.1          .              .             1.0000    382500.0000      
18.Pap .KI.2          .              .             1.0000    364542.4631      
18.Pap .KI.3          .              .             1.0000    346537.0095      
19.Mas .EU.1          .              .             1.0000    158400.0000      
19.Mas .EU.2          .              .             1.0000    150197.0395      
19.Mas .EU.3          .              .             1.0000    142398.4441      
19.Mas .IE.1          .              .             1.0000    -90000.0000      
19.Mas .IE.2          .              .             1.0000    -81636.1141      
19.Mas .IE.3          .              .             1.0000    -73976.4413      
19.Mas .PA.1          .              .             1.0000   -136800.0000      
19.Mas .PA.2          .              .             1.0000   -125052.4458      
19.Mas .PA.3          .              .             1.0000   -114251.5845      
19.Mas .KI.1          .              .             1.0000   -216000.0000      
19.Mas .KI.2          .              .             1.0000   -198642.2900      
19.Mas .KI.3          .              .             1.0000   -182626.7540      
19.Kus .EU.1          .              .             1.0000         EPS         
19.Kus .EU.2          .              .             1.0000         EPS         
19.Kus .EU.3          .              .             1.0000         EPS         
19.Kus .IE.1          .              .             1.0000         EPS         
19.Kus .IE.2          .              .             1.0000         EPS         
19.Kus .IE.3          .              .             1.0000         EPS         
19.Kus .PA.1          .              .             1.0000         EPS         
19.Kus .PA.2          .              .             1.0000         EPS         
19.Kus .PA.3          .              .             1.0000         EPS         
19.Kus .KI.1          .              .             1.0000         EPS         
19.Kus .KI.2          .              .             1.0000         EPS         
19.Kus .KI.3          .              .             1.0000         EPS         
19.Kos .EU.1          .              .             1.0000   -219600.0000      
19.Kos .EU.2          .              .             1.0000   -199262.7824      
19.Kos .EU.3          .              .             1.0000   -180716.5257      
19.Kos .IE.1          .              .             1.0000   -396000.0000      
19.Kos .IE.2          .              .             1.0000   -361677.3035      
19.Kos .IE.3          .              .             1.0000   -330250.5801      
19.Kos .PA.1          .              .             1.0000   -442800.0000      
19.Kos .PA.2          .              .             1.0000   -404583.9501      
19.Kos .PA.3          .              .             1.0000   -369582.9981      
19.Kos .KI.1          .              .             1.0000   -522000.0000      
19.Kos .KI.2          .              .             1.0000   -477367.5653      
19.Kos .KI.3          .              .             1.0000   -436465.8252      
19.Kuv .EU.1          .              .             1.0000    662400.0000      
19.Kuv .EU.2          .              .             1.0000    621772.9137      
19.Kuv .EU.3          .              .             1.0000    583607.9684      
19.Kuv .IE.1          .              .             1.0000    360000.0000      
19.Kuv .IE.2          .              .             1.0000    341427.3581      
19.Kuv .IE.3          .              .             1.0000    323695.1133      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 23:25:38 Page 184
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 433


     VAR u  1 if we use n boats for product j shiping to region k, 0 otherwise

                    LOWER          LEVEL          UPPER         MARGINAL

19.Kuv .PA.1          .              .             1.0000    259200.0000      
19.Kuv .PA.2          .              .             1.0000    247978.8396      
19.Kuv .PA.3          .              .             1.0000    237057.4949      
19.Kuv .KI.1          .              .             1.0000    144000.0000      
19.Kuv .KI.2          .              .             1.0000    141500.6431      
19.Kuv .KI.3          .              .             1.0000    138637.8676      
19.Kov .EU.1          .              .             1.0000    644400.0000      
19.Kov .EU.2          .              .             1.0000    602543.2526      
19.Kov .EU.3          .              .             1.0000    563353.3782      
19.Kov .IE.1          .              .             1.0000    414000.0000      
19.Kov .IE.2          .              .             1.0000    391505.1903      
19.Kov .IE.3          .              .             1.0000    370040.0199      
19.Kov .PA.1          .              .             1.0000    313200.0000      
19.Kov .PA.2          .              .             1.0000    298806.2284      
19.Kov .PA.3          .              .             1.0000    284783.3180      
19.Kov .KI.1          .              .             1.0000    198000.0000      
19.Kov .KI.2          .              .             1.0000    193287.1972      
19.Kov .KI.3          .              .             1.0000    188126.6388      
19.Hsel.EU.1          .              .             1.0000    349200.0000      
19.Hsel.EU.2          .              .             1.0000    325113.6228      
19.Hsel.EU.3          .              .             1.0000    302649.3663      
19.Hsel.IE.1          .              .             1.0000    320400.0000      
19.Hsel.IE.2          .              .             1.0000    299885.7823      
19.Hsel.IE.3          .              .             1.0000    280592.0104      
19.Hsel.PA.1          .              .             1.0000    252000.0000      
19.Hsel.PA.2          .              .             1.0000    237223.0815      
19.Hsel.PA.3          .              .             1.0000    223176.6579      
19.Hsel.KI.1          .              .             1.0000    273600.0000      
19.Hsel.KI.2          .              .             1.0000    257975.0149      
19.Hsel.KI.3          .              .             1.0000    243072.4297      
19.Lsel.EU.1          .              .             1.0000    352800.0000      
19.Lsel.EU.2          .              .             1.0000    328009.2374      
19.Lsel.EU.3          .              .             1.0000    304871.0143      
19.Lsel.IE.1          .              .             1.0000    439200.0000      
19.Lsel.IE.2          .              .             1.0000    406828.1648      
19.Lsel.IE.3          .              .             1.0000    376788.6757      
19.Lsel.PA.1          .              .             1.0000    252000.0000      
19.Lsel.PA.2          .              .             1.0000    236779.1498      
19.Lsel.PA.3          .              .             1.0000    222285.5737      
19.Lsel.KI.1          .              .             1.0000    223200.0000      
19.Lsel.KI.2          .              .             1.0000    211956.8291      
19.Lsel.KI.3          .              .             1.0000    200950.0152      
19.Pap .EU.1          .              .             1.0000    680400.0000      
19.Pap .EU.2          .              .             1.0000    628544.4234      
19.Pap .EU.3          .              .             1.0000    580492.2910      
19.Pap .IE.1          .              .             1.0000    522000.0000      
19.Pap .IE.2          .              .             1.0000    489187.1456      
19.Pap .IE.3          .              .             1.0000    457931.0006      
19.Pap .PA.1          .              .             1.0000    385200.0000      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 23:25:38 Page 185
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 433


     VAR u  1 if we use n boats for product j shiping to region k, 0 otherwise

                    LOWER          LEVEL          UPPER         MARGINAL

19.Pap .PA.2          .              .             1.0000    365633.2703      
19.Pap .PA.3          .              .             1.0000    346307.7909      
19.Pap .KI.1          .              .             1.0000    378000.0000      
19.Pap .KI.2          .              .             1.0000    362041.5879      
19.Pap .KI.3          .              .             1.0000    345686.6710      
20.Mas .EU.1          .              .             1.0000    159600.0000      
20.Mas .EU.2          .              .             1.0000    151463.5820      
20.Mas .EU.3          .              .             1.0000    143718.1046      
20.Mas .IE.1          .              .             1.0000   -114000.0000      
20.Mas .IE.2          .              .             1.0000   -103865.7975      
20.Mas .IE.3          .              .             1.0000    -94564.6541      
20.Mas .PA.1          .              .             1.0000   -167200.0000      
20.Mas .PA.2          .              .             1.0000   -153233.0164      
20.Mas .PA.3          .              .             1.0000   -140372.9873      
20.Mas .KI.1          .              .             1.0000   -256500.0000      
20.Mas .KI.2          .              .             1.0000   -236219.4883      
20.Mas .KI.3          .              .             1.0000   -217490.3004      
20.Kus .EU.1          .              .             1.0000         EPS         
20.Kus .EU.2          .              .             1.0000         EPS         
20.Kus .EU.3          .              .             1.0000         EPS         
20.Kus .IE.1          .              .             1.0000         EPS         
20.Kus .IE.2          .              .             1.0000         EPS         
20.Kus .IE.3          .              .             1.0000         EPS         
20.Kus .PA.1          .              .             1.0000         EPS         
20.Kus .PA.2          .              .             1.0000         EPS         
20.Kus .PA.3          .              .             1.0000         EPS         
20.Kus .KI.1          .              .             1.0000         EPS         
20.Kus .KI.2          .              .             1.0000         EPS         
20.Kus .KI.3          .              .             1.0000         EPS         
20.Kos .EU.1          .              .             1.0000   -258400.0000      
20.Kos .EU.2          .              .             1.0000   -234861.5594      
20.Kos .EU.3          .              .             1.0000   -213374.8784      
20.Kos .IE.1          .              .             1.0000   -456000.0000      
20.Kos .IE.2          .              .             1.0000   -416811.3762      
20.Kos .IE.3          .              .             1.0000   -380910.0427      
20.Kos .PA.1          .              .             1.0000   -509200.0000      
20.Kos .PA.2          .              .             1.0000   -465605.8143      
20.Kos .PA.3          .              .             1.0000   -425658.8159      
20.Kos .KI.1          .              .             1.0000   -598500.0000      
20.Kos .KI.2          .              .             1.0000   -547689.0970      
20.Kos .KI.3          .              .             1.0000   -501104.1869      
20.Kuv .EU.1          .              .             1.0000    691600.0000      
20.Kuv .EU.2          .              .             1.0000    649307.6755      
20.Kuv .EU.3          .              .             1.0000    609568.1917      
20.Kuv .IE.1          .              .             1.0000    361000.0000      
20.Kuv .IE.2          .              .             1.0000    342875.1001      
20.Kuv .IE.3          .              .             1.0000    325522.0710      
20.Kuv .PA.1          .              .             1.0000    250800.0000      
20.Kuv .PA.2          .              .             1.0000    240730.9083      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 23:25:38 Page 186
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 433


     VAR u  1 if we use n boats for product j shiping to region k, 0 otherwise

                    LOWER          LEVEL          UPPER         MARGINAL

20.Kuv .PA.3          .              .             1.0000    230840.0308      
20.Kuv .KI.1          .              .             1.0000    123500.0000      
20.Kuv .KI.2          .              .             1.0000    123081.1231      
20.Kuv .KI.3          .              .             1.0000    122105.8152      
20.Kov .EU.1          .              .             1.0000    672600.0000      
20.Kov .EU.2          .              .             1.0000    629078.2391      
20.Kov .EU.3          .              .             1.0000    588314.1323      
20.Kov .IE.1          .              .             1.0000    418000.0000      
20.Kov .IE.2          .              .             1.0000    395906.3822      
20.Kov .IE.3          .              .             1.0000    374756.1593      
20.Kov .PA.1          .              .             1.0000    307800.0000      
20.Kov .PA.2          .              .             1.0000    294587.6586      
20.Kov .PA.3          .              .             1.0000    281594.6461      
20.Kov .KI.1          .              .             1.0000    180500.0000      
20.Kov .KI.2          .              .             1.0000    178001.7301      
20.Kov .KI.3          .              .             1.0000    174815.6596      
20.Hsel.EU.1          .              .             1.0000    364800.0000      
20.Hsel.EU.2          .              .             1.0000    339739.4408      
20.Hsel.EU.3          .              .             1.0000    316356.2623      
20.Hsel.IE.1          .              .             1.0000    330600.0000      
20.Hsel.IE.2          .              .             1.0000    309674.0036      
20.Hsel.IE.3          .              .             1.0000    289966.5400      
20.Hsel.PA.1          .              .             1.0000    256500.0000      
20.Hsel.PA.2          .              .             1.0000    241812.0167      
20.Hsel.PA.3          .              .             1.0000    227807.9668      
20.Hsel.KI.1          .              .             1.0000    277400.0000      
20.Hsel.KI.2          .              .             1.0000    261998.8102      
20.Hsel.KI.3          .              .             1.0000    247255.5804      
20.Lsel.EU.1          .              .             1.0000    366700.0000      
20.Lsel.EU.2          .              .             1.0000    341127.8160      
20.Lsel.EU.3          .              .             1.0000    317237.6934      
20.Lsel.IE.1          .              .             1.0000    459800.0000      
20.Lsel.IE.2          .              .             1.0000    426026.9582      
20.Lsel.IE.3          .              .             1.0000    394674.3136      
20.Lsel.PA.1          .              .             1.0000    256500.0000      
20.Lsel.PA.2          .              .             1.0000    241426.6189      
20.Lsel.PA.3          .              .             1.0000    227017.1064      
20.Lsel.KI.1          .              .             1.0000    222300.0000      
20.Lsel.KI.2          .              .             1.0000    211822.5092      
20.Lsel.KI.3          .              .             1.0000    201449.1728      
20.Pap .EU.1          .              .             1.0000    710600.0000      
20.Pap .EU.2          .              .             1.0000    656723.6108      
20.Pap .EU.3          .              .             1.0000    606764.6405      
20.Pap .IE.1          .              .             1.0000    532000.0000      
20.Pap .IE.2          .              .             1.0000    499514.3411      
20.Pap .IE.3          .              .             1.0000    468428.5561      
20.Pap .PA.1          .              .             1.0000    383800.0000      
20.Pap .PA.2          .              .             1.0000    365726.3880      
20.Pap .PA.3          .              .             1.0000    347615.4459      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 23:25:38 Page 187
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 433


     VAR u  1 if we use n boats for product j shiping to region k, 0 otherwise

                    LOWER          LEVEL          UPPER         MARGINAL

20.Pap .KI.1          .              .             1.0000    370500.0000      
20.Pap .KI.2          .              .             1.0000    356880.2072      
20.Pap .KI.3          .              .             1.0000    342476.9027      
21.Mas .EU.1          .              .             1.0000    160000.0000      
21.Mas .EU.2          .              .             1.0000    151985.0995      
21.Mas .EU.3          .              .             1.0000    144343.9373      
21.Mas .IE.1          .              .             1.0000   -140000.0000      
21.Mas .IE.2          .              .             1.0000   -127958.0433      
21.Mas .IE.3          .              .             1.0000   -116887.4364      
21.Mas .PA.1          .              .             1.0000   -200000.0000      
21.Mas .PA.2          .              .             1.0000   -183648.6619      
21.Mas .PA.3          .              .             1.0000   -168575.8735      
21.Mas .KI.1          .              .             1.0000   -300000.0000      
21.Mas .KI.2          .              .             1.0000   -276590.5303      
21.Mas .KI.3          .              .             1.0000   -254955.7012      
21.Kus .EU.1          .              .             1.0000         EPS         
21.Kus .EU.2          .              .             1.0000         EPS         
21.Kus .EU.3          .              .             1.0000         EPS         
21.Kus .IE.1          .              .             1.0000         EPS         
21.Kus .IE.2          .              .             1.0000         EPS         
21.Kus .IE.3          .              .             1.0000         EPS         
21.Kus .PA.1          .              .             1.0000         EPS         
21.Kus .PA.2          .              .             1.0000         EPS         
21.Kus .PA.3          .              .             1.0000         EPS         
21.Kus .KI.1          .              .             1.0000         EPS         
21.Kus .KI.2          .              .             1.0000         EPS         
21.Kus .KI.3          .              .             1.0000         EPS         
21.Kos .EU.1          .              .             1.0000   -300000.0000      
21.Kos .EU.2          .              .             1.0000   -273042.2966      
21.Kos .EU.3          .              .             1.0000   -248414.1307      
21.Kos .IE.1          .              .             1.0000   -520000.0000      
21.Kos .IE.2          .              .             1.0000   -475633.9635      
21.Kos .IE.3          .              .             1.0000   -434970.7904      
21.Kos .PA.1          .              .             1.0000   -580000.0000      
21.Kos .PA.2          .              .             1.0000   -530685.0445      
21.Kos .PA.3          .              .             1.0000   -485476.0472      
21.Kos .KI.1          .              .             1.0000   -680000.0000      
21.Kos .KI.2          .              .             1.0000   -622621.2721      
21.Kos .KI.3          .              .             1.0000   -569994.1548      
21.Kuv .EU.1          .              .             1.0000    720000.0000      
21.Kuv .EU.2          .              .             1.0000    676104.7344      
21.Kuv .EU.3          .              .             1.0000    634848.1579      
21.Kuv .IE.1          .              .             1.0000    360000.0000      
21.Kuv .IE.2          .              .             1.0000    342478.5848      
21.Kuv .IE.3          .              .             1.0000    325648.3863      
21.Kuv .PA.1          .              .             1.0000    240000.0000      
21.Kuv .PA.2          .              .             1.0000    231269.8682      
21.Kuv .PA.3          .              .             1.0000    222581.7957      
21.Kuv .KI.1          .              .             1.0000    100000.0000      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 23:25:38 Page 188
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 433


     VAR u  1 if we use n boats for product j shiping to region k, 0 otherwise

                    LOWER          LEVEL          UPPER         MARGINAL

21.Kuv .KI.2          .              .             1.0000    101895.2171      
21.Kuv .KI.3          .              .             1.0000    103022.7990      
21.Kov .EU.1          .              .             1.0000    700000.0000      
21.Kov .EU.2          .              .             1.0000    654882.7374      
21.Kov .EU.3          .              .             1.0000    612607.8700      
21.Kov .IE.1          .              .             1.0000    420000.0000      
21.Kov .IE.2          .              .             1.0000    398481.3533      
21.Kov .IE.3          .              .             1.0000    377804.7578      
21.Kov .PA.1          .              .             1.0000    300000.0000      
21.Kov .PA.2          .              .             1.0000    288177.6240      
21.Kov .PA.3          .              .             1.0000    276404.9250      
21.Kov .KI.1          .              .             1.0000    160000.0000      
21.Kov .KI.2          .              .             1.0000    159976.9319      
21.Kov .KI.3          .              .             1.0000    159003.3689      
21.Hsel.EU.1          .              .             1.0000    380000.0000      
21.Hsel.EU.2          .              .             1.0000    354003.5693      
21.Hsel.EU.3          .              .             1.0000    329736.1100      
21.Hsel.IE.1          .              .             1.0000    340000.0000      
21.Hsel.IE.2          .              .             1.0000    318738.8459      
21.Hsel.IE.3          .              .             1.0000    298686.9732      
21.Hsel.PA.1          .              .             1.0000    260000.0000      
21.Hsel.PA.2          .              .             1.0000    245496.7281      
21.Hsel.PA.3          .              .             1.0000    231621.6552      
21.Hsel.KI.1          .              .             1.0000    280000.0000      
21.Hsel.KI.2          .              .             1.0000    264937.5372      
21.Hsel.KI.3          .              .             1.0000    250457.5865      
21.Lsel.EU.1          .              .             1.0000    380000.0000      
21.Lsel.EU.2          .              .             1.0000    353709.1149      
21.Lsel.EU.3          .              .             1.0000    329123.2567      
21.Lsel.IE.1          .              .             1.0000    480000.0000      
21.Lsel.IE.2          .              .             1.0000    444867.5653      
21.Lsel.IE.3          .              .             1.0000    412239.2076      
21.Lsel.PA.1          .              .             1.0000    260000.0000      
21.Lsel.PA.2          .              .             1.0000    245178.6219      
21.Lsel.PA.3          .              .             1.0000    230946.7795      
21.Lsel.KI.1          .              .             1.0000    220000.0000      
21.Lsel.KI.2          .              .             1.0000    210434.5367      
21.Lsel.KI.3          .              .             1.0000    200825.7270      
21.Pap .EU.1          .              .             1.0000    740000.0000      
21.Pap .EU.2          .              .             1.0000    684193.3301      
21.Pap .EU.3          .              .             1.0000    632407.8087      
21.Pap .IE.1          .              .             1.0000    540000.0000      
21.Pap .IE.2          .              .             1.0000    508067.8662      
21.Pap .IE.3          .              .             1.0000    477353.1585      
21.Pap .PA.1          .              .             1.0000    380000.0000      
21.Pap .PA.2          .              .             1.0000    363691.1013      
21.Pap .PA.3          .              .             1.0000    347035.5571      
21.Pap .KI.1          .              .             1.0000    360000.0000      
21.Pap .KI.2          .              .             1.0000    349058.3211      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 23:25:38 Page 189
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 433


     VAR u  1 if we use n boats for product j shiping to region k, 0 otherwise

                    LOWER          LEVEL          UPPER         MARGINAL

21.Pap .KI.3          .              .             1.0000    336907.7045      
22.Mas .EU.1          .              .             1.0000    159600.0000      
22.Mas .EU.2          .              .             1.0000    151761.5920      
22.Mas .EU.3          .              .             1.0000    144275.9422      
22.Mas .IE.1          .              .             1.0000   -168000.0000      
22.Mas .IE.2          .              .             1.0000   -153912.8517      
22.Mas .IE.3          .              .             1.0000   -140944.7882      
22.Mas .PA.1          .              .             1.0000   -235200.0000      
22.Mas .PA.2          .              .             1.0000   -216299.3824      
22.Mas .PA.3          .              .             1.0000   -198860.2432      
22.Mas .KI.1          .              .             1.0000   -346500.0000      
22.Mas .KI.2          .              .             1.0000   -319755.4161      
22.Mas .KI.3          .              .             1.0000   -295022.9562      
22.Kus .EU.1          .              .             1.0000         EPS         
22.Kus .EU.2          .              .             1.0000         EPS         
22.Kus .EU.3          .              .             1.0000         EPS         
22.Kus .IE.1          .              .             1.0000         EPS         
22.Kus .IE.2          .              .             1.0000         EPS         
22.Kus .IE.3          .              .             1.0000         EPS         
22.Kus .PA.1          .              .             1.0000         EPS         
22.Kus .PA.2          .              .             1.0000         EPS         
22.Kus .PA.3          .              .             1.0000         EPS         
22.Kus .KI.1          .              .             1.0000         EPS         
22.Kus .KI.2          .              .             1.0000         EPS         
22.Kus .KI.3          .              .             1.0000         EPS         
22.Kos .EU.1          .              .             1.0000   -344400.0000      
22.Kos .EU.2          .              .             1.0000   -313804.9941      
22.Kos .EU.3          .              .             1.0000   -285834.2825      
22.Kos .IE.1          .              .             1.0000   -588000.0000      
22.Kos .IE.2          .              .             1.0000   -538145.0654      
22.Kos .IE.3          .              .             1.0000   -492432.8232      
22.Kos .PA.1          .              .             1.0000   -655200.0000      
22.Kos .PA.2          .              .             1.0000   -599821.6409      
22.Kos .PA.3          .              .             1.0000   -549034.6922      
22.Kos .KI.1          .              .             1.0000   -766500.0000      
22.Kos .KI.2          .              .             1.0000   -702164.0904      
22.Kos .KI.3          .              .             1.0000   -643135.7291      
22.Kuv .EU.1          .              .             1.0000    747600.0000      
22.Kuv .EU.2          .              .             1.0000    702164.0904      
22.Kuv .EU.3          .              .             1.0000    659447.8672      
22.Kuv .IE.1          .              .             1.0000    357000.0000      
22.Kuv .IE.2          .              .             1.0000    340237.8121      
22.Kuv .IE.3          .              .             1.0000    324074.0590      
22.Kuv .PA.1          .              .             1.0000    226800.0000      
22.Kuv .PA.2          .              .             1.0000    219595.7194      
22.Kuv .PA.3          .              .             1.0000    212282.7895      
22.Kuv .KI.1          .              .             1.0000     73500.0000      
22.Kuv .KI.2          .              .             1.0000     77942.9251      
22.Kuv .KI.3          .              .             1.0000     81388.8190      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 23:25:38 Page 190
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 433


     VAR u  1 if we use n boats for product j shiping to region k, 0 otherwise

                    LOWER          LEVEL          UPPER         MARGINAL

22.Kov .EU.1          .              .             1.0000    726600.0000      
22.Kov .EU.2          .              .             1.0000    679956.7474      
22.Kov .EU.3          .              .             1.0000    636234.5914      
22.Kov .IE.1          .              .             1.0000    420000.0000      
22.Kov .IE.2          .              .             1.0000    399230.1038      
22.Kov .IE.3          .              .             1.0000    379185.8152      
22.Kov .PA.1          .              .             1.0000    289800.0000      
22.Kov .PA.2          .              .             1.0000    279576.1246      
22.Kov .PA.3          .              .             1.0000    269214.1547      
22.Kov .KI.1          .              .             1.0000    136500.0000      
22.Kov .KI.2          .              .             1.0000    139212.8028      
22.Kov .KI.3          .              .             1.0000    140689.7666      
22.Hsel.EU.1          .              .             1.0000    394800.0000      
22.Hsel.EU.2          .              .             1.0000    367906.0083      
22.Hsel.EU.3          .              .             1.0000    342788.9096      
22.Hsel.IE.1          .              .             1.0000    348600.0000      
22.Hsel.IE.2          .              .             1.0000    327080.3093      
22.Hsel.IE.3          .              .             1.0000    306753.3100      
22.Hsel.PA.1          .              .             1.0000    262500.0000      
22.Hsel.PA.2          .              .             1.0000    248277.2159      
22.Hsel.PA.3          .              .             1.0000    234617.7232      
22.Hsel.KI.1          .              .             1.0000    281400.0000      
22.Hsel.KI.2          .              .             1.0000    266791.1957      
22.Hsel.KI.3          .              .             1.0000    252678.4480      
22.Lsel.EU.1          .              .             1.0000    392700.0000      
22.Lsel.EU.2          .              .             1.0000    365753.1341      
22.Lsel.EU.3          .              .             1.0000    340527.7043      
22.Lsel.IE.1          .              .             1.0000    499800.0000      
22.Lsel.IE.2          .              .             1.0000    463349.9859      
22.Lsel.IE.3          .              .             1.0000    429483.3578      
22.Lsel.PA.1          .              .             1.0000    262500.0000      
22.Lsel.PA.2          .              .             1.0000    248035.1588      
22.Lsel.PA.3          .              .             1.0000    234074.5931      
22.Lsel.KI.1          .              .             1.0000    216300.0000      
22.Lsel.KI.2          .              .             1.0000    207792.9117      
22.Lsel.KI.3          .              .             1.0000    199079.6778      
22.Pap .EU.1          .              .             1.0000    768600.0000      
22.Pap .EU.2          .              .             1.0000    710953.5812      
22.Pap .EU.3          .              .             1.0000    657421.7956      
22.Pap .IE.1          .              .             1.0000    546000.0000      
22.Pap .IE.2          .              .             1.0000    514847.7211      
22.Pap .IE.3          .              .             1.0000    484704.8076      
22.Pap .PA.1          .              .             1.0000    373800.0000      
22.Pap .PA.2          .              .             1.0000    359527.4102      
22.Pap .PA.3          .              .             1.0000    344568.1243      
22.Pap .KI.1          .              .             1.0000    346500.0000      
22.Pap .KI.2          .              .             1.0000    338575.9294      
22.Pap .KI.3          .              .             1.0000    328979.0765      
23.Mas .EU.1          .              .             1.0000    158400.0000      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 23:25:38 Page 191
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 433


     VAR u  1 if we use n boats for product j shiping to region k, 0 otherwise

                    LOWER          LEVEL          UPPER         MARGINAL

23.Mas .EU.2          .              .             1.0000    150793.0595      
23.Mas .EU.3          .              .             1.0000    143514.1193      
23.Mas .IE.1          .              .             1.0000   -198000.0000      
23.Mas .IE.2          .              .             1.0000   -181730.2225      
23.Mas .IE.3          .              .             1.0000   -166736.7095      
23.Mas .PA.1          .              .             1.0000   -272800.0000      
23.Mas .PA.2          .              .             1.0000   -251185.1779      
23.Mas .PA.3          .              .             1.0000   -231226.0963      
23.Mas .KI.1          .              .             1.0000   -396000.0000      
23.Mas .KI.2          .              .             1.0000   -365714.1457      
23.Mas .KI.3          .              .             1.0000   -337692.0655      
23.Kus .EU.1          .              .             1.0000         EPS         
23.Kus .EU.2          .              .             1.0000         EPS         
23.Kus .EU.3          .              .             1.0000         EPS         
23.Kus .IE.1          .              .             1.0000         EPS         
23.Kus .IE.2          .              .             1.0000         EPS         
23.Kus .IE.3          .              .             1.0000         EPS         
23.Kus .PA.1          .              .             1.0000         EPS         
23.Kus .PA.2          .              .             1.0000         EPS         
23.Kus .PA.3          .              .             1.0000         EPS         
23.Kus .KI.1          .              .             1.0000         EPS         
23.Kus .KI.2          .              .             1.0000         EPS         
23.Kus .KI.3          .              .             1.0000         EPS         
23.Kos .EU.1          .              .             1.0000   -391600.0000      
23.Kos .EU.2          .              .             1.0000   -357149.6518      
23.Kos .EU.3          .              .             1.0000   -325635.3338      
23.Kos .IE.1          .              .             1.0000   -660000.0000      
23.Kos .IE.2          .              .             1.0000   -604344.6820      
23.Kos .IE.3          .              .             1.0000   -553296.1410      
23.Kos .PA.1          .              .             1.0000   -734800.0000      
23.Kos .PA.2          .              .             1.0000   -673015.6034      
23.Kos .PA.3          .              .             1.0000   -616334.7507      
23.Kos .KI.1          .              .             1.0000   -858000.0000      
23.Kos .KI.2          .              .             1.0000   -786317.5520      
23.Kos .KI.3          .              .             1.0000   -720528.9098      
23.Kuv .EU.1          .              .             1.0000    774400.0000      
23.Kuv .EU.2          .              .             1.0000    727485.7434      
23.Kuv .EU.3          .              .             1.0000    683367.3194      
23.Kuv .IE.1          .              .             1.0000    352000.0000      
23.Kuv .IE.2          .              .             1.0000    336152.7822      
23.Kuv .IE.3          .              .             1.0000    320799.0891      
23.Kuv .PA.1          .              .             1.0000    211200.0000      
23.Kuv .PA.2          .              .             1.0000    205708.4617      
23.Kuv .PA.3          .              .             1.0000    199943.0123      
23.Kuv .KI.1          .              .             1.0000     44000.0000      
23.Kuv .KI.2          .              .             1.0000     51224.2471      
23.Kuv .KI.3          .              .             1.0000     57203.8752      
23.Kov .EU.1          .              .             1.0000    752400.0000      
23.Kov .EU.2          .              .             1.0000    704300.2691      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 23:25:38 Page 192
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 433


     VAR u  1 if we use n boats for product j shiping to region k, 0 otherwise

                    LOWER          LEVEL          UPPER         MARGINAL

23.Kov .EU.3          .              .             1.0000    659194.2963      
23.Kov .IE.1          .              .             1.0000    418000.0000      
23.Kov .IE.2          .              .             1.0000    398152.6336      
23.Kov .IE.3          .              .             1.0000    378899.3317      
23.Kov .PA.1          .              .             1.0000    277200.0000      
23.Kov .PA.2          .              .             1.0000    268783.1603      
23.Kov .PA.3          .              .             1.0000    260022.3353      
23.Kov .KI.1          .              .             1.0000    110000.0000      
23.Kov .KI.2          .              .             1.0000    115709.3426      
23.Kov .KI.3          .              .             1.0000    119874.8529      
23.Hsel.EU.1          .              .             1.0000    409200.0000      
23.Hsel.EU.2          .              .             1.0000    381446.7579      
23.Hsel.EU.3          .              .             1.0000    355514.6610      
23.Hsel.IE.1          .              .             1.0000    356400.0000      
23.Hsel.IE.2          .              .             1.0000    334698.3938      
23.Hsel.IE.3          .              .             1.0000    314165.5504      
23.Hsel.PA.1          .              .             1.0000    264000.0000      
23.Hsel.PA.2          .              .             1.0000    250153.4801      
23.Hsel.PA.3          .              .             1.0000    236796.1707      
23.Hsel.KI.1          .              .             1.0000    281600.0000      
23.Hsel.KI.2          .              .             1.0000    267559.7858      
23.Hsel.KI.3          .              .             1.0000    253918.1651      
23.Lsel.EU.1          .              .             1.0000    404800.0000      
23.Lsel.EU.2          .              .             1.0000    377259.8737      
23.Lsel.EU.3          .              .             1.0000    351451.0362      
23.Lsel.IE.1          .              .             1.0000    519200.0000      
23.Lsel.IE.2          .              .             1.0000    481474.2200      
23.Lsel.IE.3          .              .             1.0000    446406.7642      
23.Lsel.PA.1          .              .             1.0000    264000.0000      
23.Lsel.PA.2          .              .             1.0000    249996.2296      
23.Lsel.PA.3          .              .             1.0000    236400.5471      
23.Lsel.KI.1          .              .             1.0000    211200.0000      
23.Lsel.KI.2          .              .             1.0000    203897.6341      
23.Lsel.KI.3          .              .             1.0000    196211.0252      
23.Pap .EU.1          .              .             1.0000    796400.0000      
23.Pap .EU.2          .              .             1.0000    737004.3642      
23.Pap .EU.3          .              .             1.0000    681806.6012      
23.Pap .IE.1          .              .             1.0000    550000.0000      
23.Pap .IE.2          .              .             1.0000    519853.9056      
23.Pap .IE.3          .              .             1.0000    490483.5034      
23.Pap .PA.1          .              .             1.0000    365200.0000      
23.Pap .PA.2          .              .             1.0000    353235.3147      
23.Pap .PA.3          .              .             1.0000    340213.1477      
23.Pap .KI.1          .              .             1.0000    330000.0000      
23.Pap .KI.2          .              .             1.0000    325433.0323      
23.Pap .KI.3          .              .             1.0000    318691.0187      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 23:25:38 Page 193
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 433


---- VAR b  amount of timber i bought

             LOWER          LEVEL          UPPER         MARGINAL

Mat.1          .        140000.0000        +INF             .          
Mat.2          .         90000.0000        +INF             .          
Mat.3          .         70000.0000        +INF             .          
Kut.1          .        140000.0000        +INF             .          
Kut.2          .        200000.0000        +INF             .          
Kut.3          .        120000.0000        +INF             .          
Kot.1          .         90000.0000        +INF             .          
Kot.2          .         60000.0000        +INF             .          
Kot.3          .         50000.0000        +INF             .          
Mak.1          .        310000.0000        +INF             .          
Mak.2          .        110000.0000        +INF             .          
Mak.3          .         50000.0000        +INF             .          
Kuk.1          .              .            +INF             .          
Kuk.2          .         40000.0000        +INF             .          
Kuk.3          .         10000.0000        +INF             .          
Kok.1          .        570000.0000        +INF             .          
Kok.2          .        300000.0000        +INF             .          
Kok.3          .        210000.0000        +INF             .          

---- VAR Pr  Net profit in each year t

         LOWER          LEVEL          UPPER         MARGINAL

1        -INF       184151.0000        +INF             .          
2        -INF       207245.2769        +INF             .          
3        -INF       153511.8848        +INF             .          

---- VAR Cap  Capacity of machine m in year t

               LOWER          LEVEL          UPPER         MARGINAL

Pap  .1        -INF        80000.0000        +INF             .          
Pap  .2        -INF       144900.0000        +INF             .          
Pap  .3        -INF        74986.0000        +INF             .          
SAW  .1        -INF        70000.0000        +INF             .          
SAW  .2        -INF        40400.0000        +INF             .          
SAW  .3        -INF        40906.0000        +INF             .          
PLY  .1        -INF        80000.0000        +INF             .          
PLY  .2        -INF        91450.0000        +INF             .          
PLY  .3        -INF        51613.0000        +INF             .          
SPULP.1        -INF        76000.0000        +INF             .          
SPULP.2        -INF        28980.0000        +INF             .          
SPULP.3        -INF        14998.0000        +INF             .          
HPULP.1        -INF       146000.0000        +INF             .          
HPULP.2        -INF        78980.0000        +INF             .          
HPULP.3        -INF        54998.0000        +INF             .          
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 23:25:38 Page 194
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 433


**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
                             2  PROJECTED
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 23:25:38 Page 195
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
E x e c u t i o n


----    434 VARIABLE z.L                   =   544908.162  the objective

----    434 VARIABLE u.L  1 if we use n boats for product j shiping to region k, 0 otherwise

INDEX 1 = 1

                  1           2           3

Mas .IE       1.000       1.000       1.000
Mas .PA                   1.000       1.000
Mas .KI                               1.000
Kus .EU       1.000       1.000       1.000
Kus .IE       1.000       1.000       1.000
Kus .PA       1.000       1.000       1.000
Kus .KI       1.000       1.000       1.000
Kos .EU       1.000       1.000       1.000
Kos .IE       1.000       1.000       1.000
Kos .PA       1.000       1.000       1.000
Kos .KI       1.000       1.000
Kuv .IE       1.000       1.000       1.000
Kuv .PA       1.000       1.000       1.000
Kuv .KI       1.000       1.000       1.000
Kov .IE       1.000       1.000       1.000
Kov .PA       1.000       1.000       1.000
Kov .KI       1.000       1.000       1.000
Hsel.EU       1.000       1.000       1.000
Hsel.IE                   1.000       1.000
Hsel.PA       1.000       1.000       1.000
Hsel.KI                   1.000       1.000
Lsel.EU                   1.000       1.000
Lsel.PA       1.000       1.000       1.000
Lsel.KI                   1.000       1.000
Pap .PA       1.000                   1.000

INDEX 1 = 2

                  1           2           3

Mas .PA       1.000
Mas .KI       1.000       1.000
Kos .KI                               1.000
Kov .EU                               1.000
Lsel.KI       1.000
Pap .PA                   1.000

INDEX 1 = 3

                  1           2           3

Kov .EU                   1.000
Lsel.EU       1.000
Pap .IE       1.000                   1.000
Pap .KI       1.000                   1.000
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 23:25:38 Page 196
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
E x e c u t i o n


        434 VARIABLE u.L  1 if we use n boats for product j shiping to region k, 0 otherwise

INDEX 1 = 4

                  1           2           3

Mas .EU                   1.000       1.000
Kov .EU       1.000
Hsel.IE       1.000
Hsel.KI       1.000
Pap .EU                               1.000
Pap .KI                   1.000

INDEX 1 = 5

                  1           2           3

Kuv .EU                               1.000
Lsel.IE                               1.000
Pap .EU       1.000
Pap .IE                   1.000

INDEX 1 = 6

                  1           2

Mas .EU       1.000
Kuv .EU       1.000
Lsel.IE                   1.000

INDEX 1 = 7

                  2

Pap .EU       1.000

INDEX 1 = 8

                  2

Kuv .EU       1.000

INDEX 1 = 11

                  1

Lsel.IE       1.000

GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 23:25:38 Page 197
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
E x e c u t i o n


----    434 VARIABLE r.L  1 if we buy n boats of timber i, 0 otherwise

                  1           2           3

1  .Kuk       1.000
2  .Kuk                               1.000
5  .Kuk                   1.000
6  .Kot                               1.000
6  .Mak                               1.000
7  .Kot                   1.000
8  .Mat                               1.000
10 .Mat                   1.000
10 .Kot       1.000
12 .Mak                   1.000
13 .Kut                               1.000
15 .Mat       1.000
15 .Kut       1.000
21 .Kut                   1.000
22 .Kok                               1.000
31 .Kok                   1.000
32 .Mak       1.000
58 .Kok       1.000


----    434 VARIABLE y.L  Cubic meters produced of product j

               1           2           3

Mas    70000.000   40400.000   30603.000
Kos                            10303.000
Kuv    50000.000   71050.000   41209.000
Kov    30000.000   20400.000   10404.000
Hsel   76000.000   28980.000   14998.000
Lsel  146000.000   78980.000   54998.000
Pap    80000.000  144900.000   74986.000


----    434 VARIABLE s.L  amount of timber i used to make products

              1           2           3

Mat  140000.000   80800.000   61206.000
Kut  140000.000  198940.000  115385.200
Kot   84000.000   57120.000   49737.200
Mak  308800.000  106784.000   47508.000
Kuk               31220.000    9051.600
Kok  565200.000  299076.000  206102.800

GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                 01/18/17 23:25:38 Page 198
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
E x e c u t i o n


----    434 VARIABLE b.L  amount of timber i bought

              1           2           3

Mat  140000.000   90000.000   70000.000
Kut  140000.000  200000.000  120000.000
Kot   90000.000   60000.000   50000.000
Mak  310000.000  110000.000   50000.000
Kuk               40000.000   10000.000
Kok  570000.000  300000.000  210000.000


----    434 VARIABLE Cap.L  Capacity of machine m in year t

                1           2           3

Pap     80000.000  144900.000   74986.000
SAW     70000.000   40400.000   40906.000
PLY     80000.000   91450.000   51613.000
SPULP   76000.000   28980.000   14998.000
HPULP  146000.000   78980.000   54998.000



EXECUTION TIME       =        0.042 SECONDS      3 MB  24.8.1 r59919 DEX-DEG


USER: Course License Spring 2017                     A161219:0249AN-GEN
      Management Engineering, Technical University of Denmark    DC8756
      License for teaching and research at degree granting institutions


**** FILE SUMMARY

Input      /Users/AtliPall/AHI/finalB.gms
Output     /Users/AtliPall/AHI/finalB.lst
