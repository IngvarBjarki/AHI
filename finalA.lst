GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                   01/17/17 16:42:05 Page 1
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


   1  * FinalA.gms
   2  *
   4  option iterlim=999999999;     // avoid limit on iterations
   5  option reslim=300;            // timelimit for solver in sec.
   6  option optcr=0.0;             // gap tolerance
   7  option solprint=ON;           // include solution print in .lst file
   8  option limrow=100;            // limit number of rows in .lst file
   9  option limcol=100;            // limit number of columns in .lst file
  10  //--------------------------------------------------------------------
  11   
  12  SET timber 'raw material bought by Metsa Oy'
  13  /   Mat, Kut, Kot, Mak, Kuk, Kok   /;
  14  SET products 'Products made by Metsa Oy'
  15  /   Mas, Kus, Kos, Kuv, Kov, Hsel, Lsel, Pap    /;
  16  SET destinations 'places where Metsa sells products'
  17  /   EU, IE, PA, KI  /;
  18  SET p1(products) 'normal products'
  19  / Mas, Kus, Kos, Kuv, Kov  /;
  20  SET p2(products) 'products possible to make from leftovers'
  21  /   Hsel, Lsel, Pap     /;
  22  SET n 'number of barges'
  23  /   1*107  /;
  24  SET l 'number of barges'
  25  / 1*23 /;
  26   
  27  ALIAS(timber, i);
  28  ALIAS(products, j);
  29  ALIAS(destinations, k);
  30   
  31  PARAMETERS
  32   
  33   
  34  c(products) 'the cost of producing each product, mesured in erous/1000m^3'
  35      /   Mas   550
  36          Kus   500
  37          Kos   450
  38          Kuv   2500
  39          Kov  2600
  40          Hsel  820
  41          Lsel  800
  42          Pap  1700   /
  43   
  44  alpha(timber) 'alpha cost parameters by timber assortments'
  45      /   MAT     190
  46          KUT     150
  47          KOT     120
  48          MAK     180
  49          KUK     150
  50          KOK     150 /
  51   
  52  beta(timber) 'Beta cost parameter by timber assortments'
  53      /   MAT     1.0
  54          KUT     0.5
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                   01/17/17 16:42:05 Page 2
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


  55          KOT     3.0
  56          MAK     0.2
  57          KUK     0.3
  58          KOK     0.2 /;
  59   
  60   
  61   
  62  TABLE table2(j,i)'Cubic-meters of material i used in cubic-meter of product j'
  63                  MAT     KUT     KOT     MAK     KUK     KOK
  64          MAS     2.0     0.0     0.0     -0.8    0.0     0.0
  65          KUS     0.0     2.0     0.0     0.0     -0.8    0.0
  66          KOS     0.0     0.0     2.0     0.0     0.0     -0.8
  67          KUV     0.0     2.8     0.0     0.0     -1.6    0.0
  68          KOV     0.0     0.0     2.8     0.0     0.0     -1.6
  69          HSEL    0.0     0.0     0.0     4.8     0.0     0.0
  70          LSEL    0.0     0.0     0.0     0.0     0.0     4.2
  71          PAP     0.0     0.0     0.0     0.0     1.0     0.0      ;
  72   
  73  *TABLE table3(p2, p3) 'timber p3 needed for production of product p2'
  74  *                     Mak    Kuk     Kok   Hsel    Lsel
  75  *        Hsel      4.8      0.0      0.0      0.0      0.0
  76  *        Lsel       0.0      0.0      4.2      0.0      0.0
  77  *        Pap       0.0      1.0       0.0     0.2      0.2;
  78   
  79   
  80  TABLE GAMMA(j,k) 'Gamma coefficent for selling product j in region k'
  81                  EU      IE      PA      KI
  82          MAS     1600    1300    1400    1500
  83          KUS     1400    1200    1300    1400
  84          KOS     1300    1400    1500    1600
  85          KUV     4400    3800    3600    3500
  86          KOV     4300    4100    3900    3800
  87          HSEL    2300    2500    2300    2600
  88          LSEL    2500    2800    2300    2500
  89          PAP     4500    4700    4300    4800 ;
  90   
  91  TABLE DELTA(j,k) 'Delta coefficient for selling product j in region k'
  92                  EU      IE      PA      KI
  93          MAS     4       10      12      15
  94          KUS     4       10      12      15
  95          KOS     14      20      22      25
  96          KUV     4       10      12      15
  97          KOV     4       10      12      15
  98          HSEL    2       4       5       6
  99          LSEL    3       2       5       7
 100          PAP     4       10      12      15 ;
 101   
 102   
 103   
 104   
 105  TABLE q(l,j) 'Options of amount l to be sold of product j'
 106     MAS     KOS     KUV     KOV    HSEL   LSEL   PAP
 107  1  0       0       0       0      0      0      0
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                   01/17/17 16:42:05 Page 3
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


 108  2  10000   10000   10000   10000  10000  10000  10000
 109  3  20000   20000   20000   20000  20000  20000  20000
 110  4  30000   30000   30000   30000  30000  30000  30000
 111  5  40000   40000   40000   40000  40000  40000  40000
 112  6  50000   50000   50000   50000  50000  50000  50000
 113  7  60000   60000   60000   60000  60000  60000  60000
 114  8  70000   70000   70000   70000  70000  70000  70000
 115  9  80000   80000   80000   80000  80000  80000  80000
 116  10 90000   90000   90000   90000  90000  90000  90000
 117  11 100000  100000  100000  100000 100000 100000 100000
 118  12 110000  110000  110000  110000 110000 110000 110000
 119  13 120000  120000  120000  120000 120000 120000 120000
 120  14 130000  130000  130000  130000 130000 130000 130000
 121  15 140000  140000  140000  140000 140000 140000 140000
 122  16 150000  150000  150000  150000 150000 150000 150000
 123  17 160000  160000  160000  160000 160000 160000 160000
 124  18 170000  170000  170000  170000 170000 170000 170000
 125  19 180000  180000  180000  180000 180000 180000 180000
 126  20 190000  190000  190000  190000 190000 190000 190000
 127  21 200000  200000  200000  200000 200000 200000 200000
 128  22 210000  210000  210000  210000 210000 210000 210000
 129  23 220000  220000  220000  220000 220000 220000 220000 ;
 130   
 131   
 132   
 133  TABLE h(n,i) 'Options of amount n to be bought of material i'
 134      Mat     KUT     KOT     MAK     KUK     KOK
 135  1   0       0       0       0       0       0
 136  2   10000   10000   10000   10000   10000   10000
 137  3   20000   20000   20000   20000   20000   20000
 138  4   30000   30000   30000   30000   30000   30000
 139  5   40000   40000   40000   40000   40000   40000
 140  6   50000   50000   50000   50000   50000   50000
 141  7   60000   60000   60000   60000   60000   60000
 142  8   70000   70000   70000   70000   70000   70000
 143  9   80000   80000   80000   80000   80000   80000
 144  10  90000   90000   90000   90000   90000   90000
 145  11  100000  100000  100000  100000  100000  100000
 146  12  110000  110000  110000  110000  110000  110000
 147  13  120000  120000  120000  120000  120000  120000
 148  14  130000  130000  130000  130000  130000  130000
 149  15  140000  140000  140000  140000  140000  140000
 150  16  150000  150000  150000  150000  150000  150000
 151  17  160000  160000  160000  160000  160000  160000
 152  18  170000  170000  170000  170000  170000  170000
 153  19  180000  180000  180000  180000  180000  180000
 154  20  190000  190000  190000  190000  190000  190000
 155  21  200000  200000  200000  200000  200000  200000
 156  22  210000  210000  210000  210000  210000  210000
 157  23  220000  220000  220000  220000  220000  220000
 158  24  230000  230000  230000  230000  230000  230000
 159  25  240000  240000  240000  240000  240000  240000
 160  26  250000  250000  250000  250000  250000  250000
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                   01/17/17 16:42:05 Page 4
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


 161  27  260000  260000  260000  260000  260000  260000
 162  28  270000  270000  270000  270000  270000  270000
 163  29  280000  280000  280000  280000  280000  280000
 164  30  290000  290000  290000  290000  290000  290000
 165  31  300000  300000  300000  300000  300000  300000
 166  32  310000  310000  310000  310000  310000  310000
 167  33  320000  320000  320000  320000  320000  320000
 168  34  330000  330000  330000  330000  330000  330000
 169  35  340000  340000  340000  340000  340000  340000
 170  36  350000  350000  350000  350000  350000  350000
 171  37  360000  360000  360000  360000  360000  360000
 172  38  370000  370000  370000  370000  370000  370000
 173  39  380000  380000  380000  380000  380000  380000
 174  40  390000  390000  390000  390000  390000  390000
 175  41  400000  400000  400000  400000  400000  400000
 176  42  410000  410000  410000  410000  410000  410000
 177  43  420000  420000  420000  420000  420000  420000
 178  44  430000  430000  430000  430000  430000  430000
 179  45  440000  440000  440000  440000  440000  440000
 180  46  450000  450000  450000  450000  450000  450000
 181  47  460000  460000  460000  460000  460000  460000
 182  48  470000  470000  470000  470000  470000  470000
 183  49  480000  480000  480000  480000  480000  480000
 184  50  490000  490000  490000  490000  490000  490000
 185  51  500000  500000  500000  500000  500000  500000
 186  52  510000  510000  510000  510000  510000  510000
 187  53  520000  520000  520000  520000  520000  520000
 188  54  530000  530000  530000  530000  530000  530000
 189  55  540000  540000  540000  540000  540000  540000
 190  56  550000  550000  550000  550000  550000  550000
 191  57  560000  560000  560000  560000  560000  560000
 192  58  570000  570000  570000  570000  570000  570000
 193  59  580000  580000  580000  580000  580000  580000
 194  60  590000  590000  590000  590000  590000  590000
 195  61  600000  600000  600000  600000  600000  600000
 196  62  610000  610000  610000  610000  610000  610000
 197  63  620000  620000  620000  620000  620000  620000
 198  64  630000  630000  630000  630000  630000  630000
 199  65  640000  640000  640000  640000  640000  640000
 200  66  650000  650000  650000  650000  650000  650000
 201  67  660000  660000  660000  660000  660000  660000
 202  68  670000  670000  670000  670000  670000  670000
 203  69  680000  680000  680000  680000  680000  680000
 204  70  690000  690000  690000  690000  690000  690000
 205  71  700000  700000  700000  700000  700000  700000
 206  72  710000  710000  710000  710000  710000  710000
 207  73  720000  720000  720000  720000  720000  720000
 208  74  730000  730000  730000  730000  730000  730000
 209  75  740000  740000  740000  740000  740000  740000
 210  76  750000  750000  750000  750000  750000  750000
 211  77  760000  760000  760000  760000  760000  760000
 212  78  770000  770000  770000  770000  770000  770000
 213  79  780000  780000  780000  780000  780000  780000
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                   01/17/17 16:42:05 Page 5
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


 214  80  790000  790000  790000  790000  790000  790000
 215  81  800000  800000  800000  800000  800000  800000
 216  82  810000  810000  810000  810000  810000  810000
 217  83  820000  820000  820000  820000  820000  820000
 218  84  830000  830000  830000  830000  830000  830000
 219  85  840000  840000  840000  840000  840000  840000
 220  86  850000  850000  850000  850000  850000  850000
 221  87  860000  860000  860000  860000  860000  860000
 222  88  870000  870000  870000  870000  870000  870000
 223  89  880000  880000  880000  880000  880000  880000
 224  90  890000  890000  890000  890000  890000  890000
 225  91  900000  900000  900000  900000  900000  900000
 226  92  910000  910000  910000  910000  910000  910000
 227  93  920000  920000  920000  920000  920000  920000
 228  94  930000  930000  930000  930000  930000  930000
 229  95  940000  940000  940000  940000  940000  940000
 230  96  950000  950000  950000  950000  950000  950000
 231  97  960000  960000  960000  960000  960000  960000
 232  98  970000  970000  970000  970000  970000  970000
 233  99  980000  980000  980000  980000  980000  980000
 234  100 990000  990000  990000  990000  990000  990000
 235  101 1000000 1000000 1000000 1000000 1000000 1000000
 236  102 1010000 1010000 1010000 1010000 1010000 1010000
 237  103 1020000 1020000 1020000 1020000 1020000 1020000
 238  104 1030000 1030000 1030000 1030000 1030000 1030000
 239  105 1040000 1040000 1040000 1040000 1040000 1040000
 240  106 1050000 1050000 1050000 1050000 1050000 1050000
 241  107 1060000 1060000 1060000 1060000 1060000 1060000 ;
 242   
 243   
 244   
 245  SCALAR saw_mill 'the capacity of the saw mill, m^3/year'
 246           /200000/;
 247  SCALAR plywood_mill 'the capacity of the playwood mill, m^3/year'
 248           /90000/;
 249  SCALAR Hsel_line 'the capacity of the first line, production hsel ton/year'
 250           /220000/;
 251  SCALAR Lsel_line 'the capacity of the second line, producinng lsel ton/year'
 252           /180000/;
 253  SCALAR Pap_mill 'the capcity of the paper mill, ton/year'
 254           /80000/;
 255  SCALAR fuel_price 'fuel wood suitable for producing energy at value of 40'
 256           /40/;
 257  SCALAR PAP_Pro  'Proportion of HSEL and LSEL needed for PAP'
 258           /0.2/;
 259   
 260   
 261  VARIABLES
 262  z 'the objective'
 263  *h(i) 'Cubic meters of timber i' // getum breytt í parameter og margfaldað með r(i,n) fyrir balance
 264  y(j) 'Cubic meters produced of product j'//total timber i for used in product j -- make constraint to find outu how many products..
 265  *q(j, k) 'Cubic meters of product j sold to destination k' // getum breytt í parameter og margfaldað með u
 266  //s(i)'Cubic meters of timber i in stock' // should be integer since all member of the constraint are integer
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                   01/17/17 16:42:05 Page 6
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


 267  s(i) 'amount of timber i used to make products'
 268  r(n, i) '1 if we buy n boats of timber i, 0 otherwise'
 269  u(l,j,k) '1 if we use n boats for product j shiping to region k, 0 otherwise'
 270  ;
 271   
 272  // y/table --> product made
 273  INTEGER VARIABLES y;
 274  BINARY VARIABLES u, r;
 275  POSITIVE VARIABLES s;
 276   
 277  EQUATIONS
 278   
 279  obj  'Maximum gross profit'
 280   
 281   //=============================================ENOUGH TIMBER
 282   timber_used(i) ' amount of  timber i used to make  product j'
 283   prod_starved(i)  'ensure that production can not be starved'
 284  USAGE(i)     'We have to buy material (or produce as byproducts) to be able to produce products'
 285  Sold_Prod(j)   'we cant sell more than we produce'
 286   
 287  //============================== ONLY BUY ONE NUMBER OF BARGERS FOR EACH TIMBER i
 288  Barges_buy(i)  'ensure we only pick one value n for barges for each timber i'
 289  Barges_sell(j, k)  'ensure we only pick one value  n for barges for each product to each city'
 290   
 291  //=====================================CAPACITYS FOR PRODUCTION
 292  SawmillCap 'Maximum capacity of the saw mill'
 293  PlywoodCap 'Maximum capacity of plywood mill'
 294  HSELCap    'Maximum capacity of HSEL production'
 295  LSELCap    'Maximum capacity of LSEL production'
 296  PAPCap     'Maximum capacity of PAP production'
 297   
 298  // =====================  PROPORTION OF HSEL AND LSEL NEEDED FOR PAP
 299  PAP_HSEL     'Proportion needed of HSEL for PAP'
 300  PAP_LSEL     'Proportion needed of LSEL for PAP'
 301   
 302  ;
 303   
 304   
 305   
 306  obj ..
 307          Z =e= sum((k,j), GAMMA(j,k) * sum(l, q(l,j)*u(l,j,k))) - sum((k,j), DELTA(j,k) * sum(l, q(l,j)*q(l,j) * u(l,j,k)))   //Amount sold times sellingprice
 308   
 309          - sum(i, ALPHA(i) * sum(n, h(n,i)*r(n,i))) + sum(i, BETA(i) * sum(n, h(n,i)*h(n,i) * r(n,i)))                    //Amount bought times buying price
 310          + sum(p1, y(p1)*0.2*(-fuel_price))                                                               //Amount of fuel produced times selling price of fuel
 311          + sum(i, s(i)*ALPHA(i))                                                                                        //Amount of extra material times its selling price
 312          - sum(j, y(j)*c(j))                                                                                         //Amount of produced products times the production cost
 313          ;
 314   
 315   
 316   
 317  //==========================ENSURE WE HAVE ENOUGH TIMBER==================================
 318  timber_used(i) ..  sum(j, y(j)*table2(j, i)) =e= s(i);
 319  prod_starved(i) .. sum(n, r(n, i)*h(n, i)) =g= s(i);
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                   01/17/17 16:42:05 Page 7
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


 320  Sold_Prod(j) .. sum((l,k), q(l,j)*u(l,j,k)) =l= y(j);
 321  USAGE(i) .. sum(j, y(j) * table2(j,i)) =l= sum(n, h(n,i) * r(n,i));
 322   
 323  //=================== ONLY BUY ONE NUMBER OF BARGERS FOR EACH TIMBER i ========================
 324  Barges_buy(i) ..  sum( n,r(n,i)) =l= 1;
 325   Barges_sell(j, k) .. sum(l, u(l, j, k)) =l= 1;
 326   
 327  //===============================CAPACITYS FOR PRODUCTION =============================
 328  SawmillCap ..  y("Mas") + y("Kus") + y("Kos")  =l= saw_mill;
 329  PlywoodCap ..    y("Kuv") + y("Kov")  =l= plywood_mill;
 330  HSELCap ..   y("Hsel") =l= Hsel_line;
 331  LSELCap ..  y("Lsel") =l= Lsel_line;
 332  PAPCap ..   y("Pap") =l= Pap_mill;
 333   
 334  // =====================  PROPORTION OF HSEL AND LSEL NEEDED FOR PAP ===========
 335  PAP_HSEL..  PAP_Pro*y("PAP") =l= y("HSEL");
 336  PAP_LSEL..  PAP_Pro*y("PAP") =l= y("LSEL");
 337   
 338   
 339  MODEL final /all/;
 340  Solve final using mip minimizing Z
 341   


COMPILATION TIME     =        0.008 SECONDS      3 MB  24.8.1 r59919 DEX-DEG
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                   01/17/17 16:42:05 Page 8
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 341


---- obj  =E=  Maximum gross profit

obj..  z + 558*y(Mas) + 508*y(Kus) + 458*y(Kos) + 2508*y(Kuv) + 2608*y(Kov) + 820*y(Hsel) + 800*y(Lsel) + 1700*y(Pap) - 190*s(Mat) - 150*s(Kut) - 120*s(Kot) - 180*s(Mak) - 150*s(Kuk) - 150*s(Kok) - 98100000*r(2,Mat) - 48500000*r(2,Kut)
     
      - 298800000*r(2,Kot) - 18200000*r(2,Mak) - 28500000*r(2,Kuk) - 18500000*r(2,Kok) - 396200000*r(3,Mat) - 197000000*r(3,Kut) - 1197600000*r(3,Kot) - 76400000*r(3,Mak) - 117000000*r(3,Kuk) - 77000000*r(3,Kok) - 894300000*r(4,Mat) - 445500000*r(4,Kut)
     
      - 2696400000*r(4,Kot) - 174600000*r(4,Mak) - 265500000*r(4,Kuk) - 175500000*r(4,Kok) - 1592400000*r(5,Mat) - 794000000*r(5,Kut) - 4795200000*r(5,Kot) - 312800000*r(5,Mak) - 474000000*r(5,Kuk) - 314000000*r(5,Kok) - 2490500000*r(6,Mat)
     
      - 1242500000*r(6,Kut) - 7494000000*r(6,Kot) - 491000000*r(6,Mak) - 742500000*r(6,Kuk) - 492500000*r(6,Kok) - 3588600000*r(7,Mat) - 1791000000*r(7,Kut) - 10792800000*r(7,Kot) - 709200000*r(7,Mak) - 1071000000*r(7,Kuk) - 711000000*r(7,Kok)
     
      - 4886700000*r(8,Mat) - 2439500000*r(8,Kut) - 14691600000*r(8,Kot) - 967400000*r(8,Mak) - 1459500000*r(8,Kuk) - 969500000*r(8,Kok) - 6384800000*r(9,Mat) - 3188000000*r(9,Kut) - 19190400000*r(9,Kot) - 1265600000*r(9,Mak) - 1908000000*r(9,Kuk)
     
      - 1268000000*r(9,Kok) - 8082900000*r(10,Mat) - 4036500000*r(10,Kut) - 24289200000*r(10,Kot) - 1603800000*r(10,Mak) - 2416500000*r(10,Kuk) - 1606500000*r(10,Kok) - 9981000000*r(11,Mat) - 4985000000*r(11,Kut) - 29988000000*r(11,Kot)
     
      - 1982000000*r(11,Mak) - 2985000000*r(11,Kuk) - 1985000000*r(11,Kok) - 12079100000*r(12,Mat) - 6033500000*r(12,Kut) - 36286800000*r(12,Kot) - 2400200000*r(12,Mak) - 3613500000*r(12,Kuk) - 2403500000*r(12,Kok) - 14377200000*r(13,Mat)
     
      - 7182000000*r(13,Kut) - 43185600000*r(13,Kot) - 2858400000*r(13,Mak) - 4302000000*r(13,Kuk) - 2862000000*r(13,Kok) - 16875300000*r(14,Mat) - 8430500000*r(14,Kut) - 50684400000*r(14,Kot) - 3356600000*r(14,Mak) - 5050500000*r(14,Kuk)
     
      - 3360500000*r(14,Kok) - 19573400000*r(15,Mat) - 9779000000*r(15,Kut) - 58783200000*r(15,Kot) - 3894800000*r(15,Mak) - 5859000000*r(15,Kuk) - 3899000000*r(15,Kok) - 22471500000*r(16,Mat) - 11227500000*r(16,Kut) - 67482000000*r(16,Kot)
     
      - 4473000000*r(16,Mak) - 6727500000*r(16,Kuk) - 4477500000*r(16,Kok) - 25569600000*r(17,Mat) - 12776000000*r(17,Kut) - 76780800000*r(17,Kot) - 5091200000*r(17,Mak) - 7656000000*r(17,Kuk) - 5096000000*r(17,Kok) - 28867700000*r(18,Mat)
     
      - 14424500000*r(18,Kut) - 86679600000*r(18,Kot) - 5749400000*r(18,Mak) - 8644500000*r(18,Kuk) - 5754500000*r(18,Kok) - 32365800000*r(19,Mat) - 16173000000*r(19,Kut) - 97178400000*r(19,Kot) - 6447600000*r(19,Mak) - 9693000000*r(19,Kuk)
     
      - 6453000000*r(19,Kok) - 36063900000*r(20,Mat) - 18021500000*r(20,Kut) - 108277200000*r(20,Kot) - 7185800000*r(20,Mak) - 10801500000*r(20,Kuk) - 7191500000*r(20,Kok) - 39962000000*r(21,Mat) - 19970000000*r(21,Kut) - 119976000000*r(21,Kot)
     
      - 7964000000*r(21,Mak) - 11970000000*r(21,Kuk) - 7970000000*r(21,Kok) - 44060100000*r(22,Mat) - 22018500000*r(22,Kut) - 132274800000*r(22,Kot) - 8782200000*r(22,Mak) - 13198500000*r(22,Kuk) - 8788500000*r(22,Kok) - 48358200000*r(23,Mat)
     
      - 24167000000*r(23,Kut) - 145173600000*r(23,Kot) - 9640400000*r(23,Mak) - 14487000000*r(23,Kuk) - 9647000000*r(23,Kok) - 52856300000*r(24,Mat) - 26415500000*r(24,Kut) - 158672400000*r(24,Kot) - 10538600000*r(24,Mak) - 15835500000*r(24,Kuk)
     
      - 10545500000*r(24,Kok) - 57554400000*r(25,Mat) - 28764000000*r(25,Kut) - 172771200000*r(25,Kot) - 11476800000*r(25,Mak) - 17244000000*r(25,Kuk) - 11484000000*r(25,Kok) - 62452500000*r(26,Mat) - 31212500000*r(26,Kut) - 187470000000*r(26,Kot)
     
      - 12455000000*r(26,Mak) - 18712500000*r(26,Kuk) - 12462500000*r(26,Kok) - 67550600000*r(27,Mat) - 33761000000*r(27,Kut) - 202768800000*r(27,Kot) - 13473200000*r(27,Mak) - 20241000000*r(27,Kuk) - 13481000000*r(27,Kok) - 72848700000*r(28,Mat)
     
      - 36409500000*r(28,Kut) - 218667600000*r(28,Kot) - 14531400000*r(28,Mak) - 21829500000*r(28,Kuk) - 14539500000*r(28,Kok) - 78346800000*r(29,Mat) - 39158000000*r(29,Kut) - 235166400000*r(29,Kot) - 15629600000*r(29,Mak) - 23478000000*r(29,Kuk)
     
      - 15638000000*r(29,Kok) - 84044900000*r(30,Mat) - 42006500000*r(30,Kut) - 252265200000*r(30,Kot) - 16767800000*r(30,Mak) - 25186500000*r(30,Kuk) - 16776500000*r(30,Kok) - 89943000000*r(31,Mat) - 44955000000*r(31,Kut) - 269964000000*r(31,Kot)
     
      - 17946000000*r(31,Mak) - 26955000000*r(31,Kuk) - 17955000000*r(31,Kok) - 96041100000*r(32,Mat) - 48003500000*r(32,Kut) - 288262800000*r(32,Kot) - 19164200000*r(32,Mak) - 28783500000*r(32,Kuk) - 19173500000*r(32,Kok) - 102339200000*r(33,Mat)
     
      - 51152000000*r(33,Kut) - 307161600000*r(33,Kot) - 20422400000*r(33,Mak) - 30672000000*r(33,Kuk) - 20432000000*r(33,Kok) - 108837300000*r(34,Mat) - 54400500000*r(34,Kut) - 326660400000*r(34,Kot) - 21720600000*r(34,Mak) - 32620500000*r(34,Kuk)
     
      - 21730500000*r(34,Kok) - 115535400000*r(35,Mat) - 57749000000*r(35,Kut) - 346759200000*r(35,Kot) - 23058800000*r(35,Mak) - 34629000000*r(35,Kuk) - 23069000000*r(35,Kok) - 122433500000*r(36,Mat) - 61197500000*r(36,Kut) - 367458000000*r(36,Kot)
     
      - 24437000000*r(36,Mak) - 36697500000*r(36,Kuk) - 24447500000*r(36,Kok) - 129531600000*r(37,Mat) - 64746000000*r(37,Kut) - 388756800000*r(37,Kot) - 25855200000*r(37,Mak) - 38826000000*r(37,Kuk) - 25866000000*r(37,Kok) - 136829700000*r(38,Mat)
     
      - 68394500000*r(38,Kut) - 410655600000*r(38,Kot) - 27313400000*r(38,Mak) - 41014500000*r(38,Kuk) - 27324500000*r(38,Kok) - 144327800000*r(39,Mat) - 72143000000*r(39,Kut) - 433154400000*r(39,Kot) - 28811600000*r(39,Mak) - 43263000000*r(39,Kuk)
     
      - 28823000000*r(39,Kok) - 152025900000*r(40,Mat) - 75991500000*r(40,Kut) - 456253200000*r(40,Kot) - 30349800000*r(40,Mak) - 45571500000*r(40,Kuk) - 30361500000*r(40,Kok) - 159924000000*r(41,Mat) - 79940000000*r(41,Kut) - 479952000000*r(41,Kot)
     
      - 31928000000*r(41,Mak) - 47940000000*r(41,Kuk) - 31940000000*r(41,Kok) - 168022100000*r(42,Mat) - 83988500000*r(42,Kut) - 504250800000*r(42,Kot) - 33546200000*r(42,Mak) - 50368500000*r(42,Kuk) - 33558500000*r(42,Kok) - 176320200000*r(43,Mat)
     
      - 88137000000*r(43,Kut) - 529149600000*r(43,Kot) - 35204400000*r(43,Mak) - 52857000000*r(43,Kuk) - 35217000000*r(43,Kok) - 184818300000*r(44,Mat) - 92385500000*r(44,Kut) - 554648400000*r(44,Kot) - 36902600000*r(44,Mak) - 55405500000*r(44,Kuk)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                   01/17/17 16:42:05 Page 9
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 341


     obj  =E=  Maximum gross profit     
     
      - 36915500000*r(44,Kok) - 193516400000*r(45,Mat) - 96734000000*r(45,Kut) - 580747200000*r(45,Kot) - 38640800000*r(45,Mak) - 58014000000*r(45,Kuk) - 38654000000*r(45,Kok) - 202414500000*r(46,Mat) - 101182500000*r(46,Kut) - 607446000000*r(46,Kot)
     
      - 40419000000*r(46,Mak) - 60682500000*r(46,Kuk) - 40432500000*r(46,Kok) - 211512600000*r(47,Mat) - 105731000000*r(47,Kut) - 634744800000*r(47,Kot) - 42237200000*r(47,Mak) - 63411000000*r(47,Kuk) - 42251000000*r(47,Kok) - 220810700000*r(48,Mat)
     
      - 110379500000*r(48,Kut) - 662643600000*r(48,Kot) - 44095400000*r(48,Mak) - 66199500000*r(48,Kuk) - 44109500000*r(48,Kok) - 230308800000*r(49,Mat) - 115128000000*r(49,Kut) - 691142400000*r(49,Kot) - 45993600000*r(49,Mak) - 69048000000*r(49,Kuk)
     
      - 46008000000*r(49,Kok) - 240006900000*r(50,Mat) - 119976500000*r(50,Kut) - 720241200000*r(50,Kot) - 47931800000*r(50,Mak) - 71956500000*r(50,Kuk) - 47946500000*r(50,Kok) - 249905000000*r(51,Mat) - 124925000000*r(51,Kut) - 749940000000*r(51,Kot)
     
      - 49910000000*r(51,Mak) - 74925000000*r(51,Kuk) - 49925000000*r(51,Kok) - 260003100000*r(52,Mat) - 129973500000*r(52,Kut) - 780238800000*r(52,Kot) - 51928200000*r(52,Mak) - 77953500000*r(52,Kuk) - 51943500000*r(52,Kok) - 270301200000*r(53,Mat)
     
      - 135122000000*r(53,Kut) - 811137600000*r(53,Kot) - 53986400000*r(53,Mak) - 81042000000*r(53,Kuk) - 54002000000*r(53,Kok) - 280799300000*r(54,Mat) - 140370500000*r(54,Kut) - 842636400000*r(54,Kot) - 56084600000*r(54,Mak) - 84190500000*r(54,Kuk)
     
      - 56100500000*r(54,Kok) - 291497400000*r(55,Mat) - 145719000000*r(55,Kut) - 874735200000*r(55,Kot) - 58222800000*r(55,Mak) - 87399000000*r(55,Kuk) - 58239000000*r(55,Kok) - 302395500000*r(56,Mat) - 151167500000*r(56,Kut) - 907434000000*r(56,Kot)
     
      - 60401000000*r(56,Mak) - 90667500000*r(56,Kuk) - 60417500000*r(56,Kok) - 313493600000*r(57,Mat) - 156716000000*r(57,Kut) - 940732800000*r(57,Kot) - 62619200000*r(57,Mak) - 93996000000*r(57,Kuk) - 62636000000*r(57,Kok) - 324791700000*r(58,Mat)
     
      - 162364500000*r(58,Kut) - 974631600000*r(58,Kot) - 64877400000*r(58,Mak) - 97384500000*r(58,Kuk) - 64894500000*r(58,Kok) - 336289800000*r(59,Mat) - 168113000000*r(59,Kut) - 1009130400000*r(59,Kot) - 67175600000*r(59,Mak) - 100833000000*r(59,Kuk)
     
      - 67193000000*r(59,Kok) - 347987900000*r(60,Mat) - 173961500000*r(60,Kut) - 1044229200000*r(60,Kot) - 69513800000*r(60,Mak) - 104341500000*r(60,Kuk) - 69531500000*r(60,Kok) - 359886000000*r(61,Mat) - 179910000000*r(61,Kut) - 1079928000000*r(61,Kot)
     
      - 71892000000*r(61,Mak) - 107910000000*r(61,Kuk) - 71910000000*r(61,Kok) - 371984100000*r(62,Mat) - 185958500000*r(62,Kut) - 1116226800000*r(62,Kot) - 74310200000*r(62,Mak) - 111538500000*r(62,Kuk) - 74328500000*r(62,Kok) - 384282200000*r(63,Mat)
     
      - 192107000000*r(63,Kut) - 1153125600000*r(63,Kot) - 76768400000*r(63,Mak) - 115227000000*r(63,Kuk) - 76787000000*r(63,Kok) - 396780300000*r(64,Mat) - 198355500000*r(64,Kut) - 1190624400000*r(64,Kot) - 79266600000*r(64,Mak) - 118975500000*r(64,Kuk)
     
      - 79285500000*r(64,Kok) - 409478400000*r(65,Mat) - 204704000000*r(65,Kut) - 1228723200000*r(65,Kot) - 81804800000*r(65,Mak) - 122784000000*r(65,Kuk) - 81824000000*r(65,Kok) - 422376500000*r(66,Mat) - 211152500000*r(66,Kut) - 1267422000000*r(66,Kot)
     
      - 84383000000*r(66,Mak) - 126652500000*r(66,Kuk) - 84402500000*r(66,Kok) - 435474600000*r(67,Mat) - 217701000000*r(67,Kut) - 1306720800000*r(67,Kot) - 87001200000*r(67,Mak) - 130581000000*r(67,Kuk) - 87021000000*r(67,Kok) - 448772700000*r(68,Mat)
     
      - 224349500000*r(68,Kut) - 1346619600000*r(68,Kot) - 89659400000*r(68,Mak) - 134569500000*r(68,Kuk) - 89679500000*r(68,Kok) - 462270800000*r(69,Mat) - 231098000000*r(69,Kut) - 1387118400000*r(69,Kot) - 92357600000*r(69,Mak) - 138618000000*r(69,Kuk)
     
      - 92378000000*r(69,Kok) - 475968900000*r(70,Mat) - 237946500000*r(70,Kut) - 1428217200000*r(70,Kot) - 95095800000*r(70,Mak) - 142726500000*r(70,Kuk) - 95116500000*r(70,Kok) - 489867000000*r(71,Mat) - 244895000000*r(71,Kut) - 1469916000000*r(71,Kot)
     
      - 97874000000*r(71,Mak) - 146895000000*r(71,Kuk) - 97895000000*r(71,Kok) - 503965100000*r(72,Mat) - 251943500000*r(72,Kut) - 1512214800000*r(72,Kot) - 100692200000*r(72,Mak) - 151123500000*r(72,Kuk) - 100713500000*r(72,Kok) - 518263200000*r(73,Mat)
     
      - 259092000000*r(73,Kut) - 1555113600000*r(73,Kot) - 103550400000*r(73,Mak) - 155412000000*r(73,Kuk) - 103572000000*r(73,Kok) - 532761300000*r(74,Mat) - 266340500000*r(74,Kut) - 1598612400000*r(74,Kot) - 106448600000*r(74,Mak)
     
      - 159760500000*r(74,Kuk) - 106470500000*r(74,Kok) - 547459400000*r(75,Mat) - 273689000000*r(75,Kut) - 1642711200000*r(75,Kot) - 109386800000*r(75,Mak) - 164169000000*r(75,Kuk) - 109409000000*r(75,Kok) - 562357500000*r(76,Mat)
     
      - 281137500000*r(76,Kut) - 1687410000000*r(76,Kot) - 112365000000*r(76,Mak) - 168637500000*r(76,Kuk) - 112387500000*r(76,Kok) - 577455600000*r(77,Mat) - 288686000000*r(77,Kut) - 1732708800000*r(77,Kot) - 115383200000*r(77,Mak)
     
      - 173166000000*r(77,Kuk) - 115406000000*r(77,Kok) - 592753700000*r(78,Mat) - 296334500000*r(78,Kut) - 1778607600000*r(78,Kot) - 118441400000*r(78,Mak) - 177754500000*r(78,Kuk) - 118464500000*r(78,Kok) - 608251800000*r(79,Mat)
     
      - 304083000000*r(79,Kut) - 1825106400000*r(79,Kot) - 121539600000*r(79,Mak) - 182403000000*r(79,Kuk) - 121563000000*r(79,Kok) - 623949900000*r(80,Mat) - 311931500000*r(80,Kut) - 1872205200000*r(80,Kot) - 124677800000*r(80,Mak)
     
      - 187111500000*r(80,Kuk) - 124701500000*r(80,Kok) - 639848000000*r(81,Mat) - 319880000000*r(81,Kut) - 1919904000000*r(81,Kot) - 127856000000*r(81,Mak) - 191880000000*r(81,Kuk) - 127880000000*r(81,Kok) - 655946100000*r(82,Mat)
     
      - 327928500000*r(82,Kut) - 1968202800000*r(82,Kot) - 131074200000*r(82,Mak) - 196708500000*r(82,Kuk) - 131098500000*r(82,Kok) - 672244200000*r(83,Mat) - 336077000000*r(83,Kut) - 2017101600000*r(83,Kot) - 134332400000*r(83,Mak)
     
      - 201597000000*r(83,Kuk) - 134357000000*r(83,Kok) - 688742300000*r(84,Mat) - 344325500000*r(84,Kut) - 2066600400000*r(84,Kot) - 137630600000*r(84,Mak) - 206545500000*r(84,Kuk) - 137655500000*r(84,Kok) - 705440400000*r(85,Mat)
     
      - 352674000000*r(85,Kut) - 2116699200000*r(85,Kot) - 140968800000*r(85,Mak) - 211554000000*r(85,Kuk) - 140994000000*r(85,Kok) - 722338500000*r(86,Mat) - 361122500000*r(86,Kut) - 2167398000000*r(86,Kot) - 144347000000*r(86,Mak)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/17/17 16:42:05 Page 10
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 341


     obj  =E=  Maximum gross profit     
     
      - 216622500000*r(86,Kuk) - 144372500000*r(86,Kok) - 739436600000*r(87,Mat) - 369671000000*r(87,Kut) - 2218696800000*r(87,Kot) - 147765200000*r(87,Mak) - 221751000000*r(87,Kuk) - 147791000000*r(87,Kok) - 756734700000*r(88,Mat)
     
      - 378319500000*r(88,Kut) - 2270595600000*r(88,Kot) - 151223400000*r(88,Mak) - 226939500000*r(88,Kuk) - 151249500000*r(88,Kok) - 774232800000*r(89,Mat) - 387068000000*r(89,Kut) - 2323094400000*r(89,Kot) - 154721600000*r(89,Mak)
     
      - 232188000000*r(89,Kuk) - 154748000000*r(89,Kok) - 791930900000*r(90,Mat) - 395916500000*r(90,Kut) - 2376193200000*r(90,Kot) - 158259800000*r(90,Mak) - 237496500000*r(90,Kuk) - 158286500000*r(90,Kok) - 809829000000*r(91,Mat)
     
      - 404865000000*r(91,Kut) - 2429892000000*r(91,Kot) - 161838000000*r(91,Mak) - 242865000000*r(91,Kuk) - 161865000000*r(91,Kok) - 827927100000*r(92,Mat) - 413913500000*r(92,Kut) - 2484190800000*r(92,Kot) - 165456200000*r(92,Mak)
     
      - 248293500000*r(92,Kuk) - 165483500000*r(92,Kok) - 846225200000*r(93,Mat) - 423062000000*r(93,Kut) - 2539089600000*r(93,Kot) - 169114400000*r(93,Mak) - 253782000000*r(93,Kuk) - 169142000000*r(93,Kok) - 864723300000*r(94,Mat)
     
      - 432310500000*r(94,Kut) - 2594588400000*r(94,Kot) - 172812600000*r(94,Mak) - 259330500000*r(94,Kuk) - 172840500000*r(94,Kok) - 883421400000*r(95,Mat) - 441659000000*r(95,Kut) - 2650687200000*r(95,Kot) - 176550800000*r(95,Mak)
     
      - 264939000000*r(95,Kuk) - 176579000000*r(95,Kok) - 902319500000*r(96,Mat) - 451107500000*r(96,Kut) - 2707386000000*r(96,Kot) - 180329000000*r(96,Mak) - 270607500000*r(96,Kuk) - 180357500000*r(96,Kok) - 921417600000*r(97,Mat)
     
      - 460656000000*r(97,Kut) - 2764684800000*r(97,Kot) - 184147200000*r(97,Mak) - 276336000000*r(97,Kuk) - 184176000000*r(97,Kok) - 940715700000*r(98,Mat) - 470304500000*r(98,Kut) - 2822583600000*r(98,Kot) - 188005400000*r(98,Mak)
     
      - 282124500000*r(98,Kuk) - 188034500000*r(98,Kok) - 960213800000*r(99,Mat) - 480053000000*r(99,Kut) - 2881082400000*r(99,Kot) - 191903600000*r(99,Mak) - 287973000000*r(99,Kuk) - 191933000000*r(99,Kok) - 979911900000*r(100,Mat)
     
      - 489901500000*r(100,Kut) - 2940181200000*r(100,Kot) - 195841800000*r(100,Mak) - 293881500000*r(100,Kuk) - 195871500000*r(100,Kok) - 999810000000*r(101,Mat) - 499850000000*r(101,Kut) - 2999880000000*r(101,Kot) - 199820000000*r(101,Mak)
     
      - 299850000000*r(101,Kuk) - 199850000000*r(101,Kok) - 1019908100000*r(102,Mat) - 509898500000*r(102,Kut) - 3060178800000*r(102,Kot) - 203838200000*r(102,Mak) - 305878500000*r(102,Kuk) - 203868500000*r(102,Kok) - 1040206200000*r(103,Mat)
     
      - 520047000000*r(103,Kut) - 3121077600000*r(103,Kot) - 207896400000*r(103,Mak) - 311967000000*r(103,Kuk) - 207927000000*r(103,Kok) - 1060704300000*r(104,Mat) - 530295500000*r(104,Kut) - 3182576400000*r(104,Kot) - 211994600000*r(104,Mak)
     
      - 318115500000*r(104,Kuk) - 212025500000*r(104,Kok) - 1081402400000*r(105,Mat) - 540644000000*r(105,Kut) - 3244675200000*r(105,Kot) - 216132800000*r(105,Mak) - 324324000000*r(105,Kuk) - 216164000000*r(105,Kok) - 1102300500000*r(106,Mat)
     
      - 551092500000*r(106,Kut) - 3307374000000*r(106,Kot) - 220311000000*r(106,Mak) - 330592500000*r(106,Kuk) - 220342500000*r(106,Kok) - 1123398600000*r(107,Mat) - 561641000000*r(107,Kut) - 3370672800000*r(107,Kot) - 224529200000*r(107,Mak)
     
      - 336921000000*r(107,Kuk) - 224561000000*r(107,Kok) + 384000000*u(2,Mas,EU) + 987000000*u(2,Mas,IE) + 1186000000*u(2,Mas,PA) + 1485000000*u(2,Mas,KI) + 1387000000*u(2,Kos,EU) + 1986000000*u(2,Kos,IE) + 2185000000*u(2,Kos,PA) + 2484000000*u(2,Kos,KI)
     
      + 356000000*u(2,Kuv,EU) + 962000000*u(2,Kuv,IE) + 1164000000*u(2,Kuv,PA) + 1465000000*u(2,Kuv,KI) + 357000000*u(2,Kov,EU) + 959000000*u(2,Kov,IE) + 1161000000*u(2,Kov,PA) + 1462000000*u(2,Kov,KI) + 177000000*u(2,Hsel,EU) + 375000000*u(2,Hsel,IE)
     
      + 477000000*u(2,Hsel,PA) + 574000000*u(2,Hsel,KI) + 275000000*u(2,Lsel,EU) + 172000000*u(2,Lsel,IE) + 477000000*u(2,Lsel,PA) + 675000000*u(2,Lsel,KI) + 355000000*u(2,Pap,EU) + 953000000*u(2,Pap,IE) + 1157000000*u(2,Pap,PA) + 1452000000*u(2,Pap,KI)
     
      + 1568000000*u(3,Mas,EU) + 3974000000*u(3,Mas,IE) + 4772000000*u(3,Mas,PA) + 5970000000*u(3,Mas,KI) + 5574000000*u(3,Kos,EU) + 7972000000*u(3,Kos,IE) + 8770000000*u(3,Kos,PA) + 9968000000*u(3,Kos,KI) + 1512000000*u(3,Kuv,EU) + 3924000000*u(3,Kuv,IE)
     
      + 4728000000*u(3,Kuv,PA) + 5930000000*u(3,Kuv,KI) + 1514000000*u(3,Kov,EU) + 3918000000*u(3,Kov,IE) + 4722000000*u(3,Kov,PA) + 5924000000*u(3,Kov,KI) + 754000000*u(3,Hsel,EU) + 1550000000*u(3,Hsel,IE) + 1954000000*u(3,Hsel,PA)
     
      + 2348000000*u(3,Hsel,KI) + 1150000000*u(3,Lsel,EU) + 744000000*u(3,Lsel,IE) + 1954000000*u(3,Lsel,PA) + 2750000000*u(3,Lsel,KI) + 1510000000*u(3,Pap,EU) + 3906000000*u(3,Pap,IE) + 4714000000*u(3,Pap,PA) + 5904000000*u(3,Pap,KI)
     
      + 3552000000*u(4,Mas,EU) + 8961000000*u(4,Mas,IE) + 10758000000*u(4,Mas,PA) + 13455000000*u(4,Mas,KI) + 12561000000*u(4,Kos,EU) + 17958000000*u(4,Kos,IE) + 19755000000*u(4,Kos,PA) + 22452000000*u(4,Kos,KI) + 3468000000*u(4,Kuv,EU)
     
      + 8886000000*u(4,Kuv,IE) + 10692000000*u(4,Kuv,PA) + 13395000000*u(4,Kuv,KI) + 3471000000*u(4,Kov,EU) + 8877000000*u(4,Kov,IE) + 10683000000*u(4,Kov,PA) + 13386000000*u(4,Kov,KI) + 1731000000*u(4,Hsel,EU) + 3525000000*u(4,Hsel,IE)
     
      + 4431000000*u(4,Hsel,PA) + 5322000000*u(4,Hsel,KI) + 2625000000*u(4,Lsel,EU) + 1716000000*u(4,Lsel,IE) + 4431000000*u(4,Lsel,PA) + 6225000000*u(4,Lsel,KI) + 3465000000*u(4,Pap,EU) + 8859000000*u(4,Pap,IE) + 10671000000*u(4,Pap,PA)
     
      + 13356000000*u(4,Pap,KI) + 6336000000*u(5,Mas,EU) + 15948000000*u(5,Mas,IE) + 19144000000*u(5,Mas,PA) + 23940000000*u(5,Mas,KI) + 22348000000*u(5,Kos,EU) + 31944000000*u(5,Kos,IE) + 35140000000*u(5,Kos,PA) + 39936000000*u(5,Kos,KI)
     
      + 6224000000*u(5,Kuv,EU) + 15848000000*u(5,Kuv,IE) + 19056000000*u(5,Kuv,PA) + 23860000000*u(5,Kuv,KI) + 6228000000*u(5,Kov,EU) + 15836000000*u(5,Kov,IE) + 19044000000*u(5,Kov,PA) + 23848000000*u(5,Kov,KI) + 3108000000*u(5,Hsel,EU)
     
      + 6300000000*u(5,Hsel,IE) + 7908000000*u(5,Hsel,PA) + 9496000000*u(5,Hsel,KI) + 4700000000*u(5,Lsel,EU) + 3088000000*u(5,Lsel,IE) + 7908000000*u(5,Lsel,PA) + 11100000000*u(5,Lsel,KI) + 6220000000*u(5,Pap,EU) + 15812000000*u(5,Pap,IE)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/17/17 16:42:05 Page 11
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 341


     obj  =E=  Maximum gross profit     
     
      + 19028000000*u(5,Pap,PA) + 23808000000*u(5,Pap,KI) + 9920000000*u(6,Mas,EU) + 24935000000*u(6,Mas,IE) + 29930000000*u(6,Mas,PA) + 37425000000*u(6,Mas,KI) + 34935000000*u(6,Kos,EU) + 49930000000*u(6,Kos,IE) + 54925000000*u(6,Kos,PA)
     
      + 62420000000*u(6,Kos,KI) + 9780000000*u(6,Kuv,EU) + 24810000000*u(6,Kuv,IE) + 29820000000*u(6,Kuv,PA) + 37325000000*u(6,Kuv,KI) + 9785000000*u(6,Kov,EU) + 24795000000*u(6,Kov,IE) + 29805000000*u(6,Kov,PA) + 37310000000*u(6,Kov,KI)
     
      + 4885000000*u(6,Hsel,EU) + 9875000000*u(6,Hsel,IE) + 12385000000*u(6,Hsel,PA) + 14870000000*u(6,Hsel,KI) + 7375000000*u(6,Lsel,EU) + 4860000000*u(6,Lsel,IE) + 12385000000*u(6,Lsel,PA) + 17375000000*u(6,Lsel,KI) + 9775000000*u(6,Pap,EU)
     
      + 24765000000*u(6,Pap,IE) + 29785000000*u(6,Pap,PA) + 37260000000*u(6,Pap,KI) + 14304000000*u(7,Mas,EU) + 35922000000*u(7,Mas,IE) + 43116000000*u(7,Mas,PA) + 53910000000*u(7,Mas,KI) + 50322000000*u(7,Kos,EU) + 71916000000*u(7,Kos,IE)
     
      + 79110000000*u(7,Kos,PA) + 89904000000*u(7,Kos,KI) + 14136000000*u(7,Kuv,EU) + 35772000000*u(7,Kuv,IE) + 42984000000*u(7,Kuv,PA) + 53790000000*u(7,Kuv,KI) + 14142000000*u(7,Kov,EU) + 35754000000*u(7,Kov,IE) + 42966000000*u(7,Kov,PA)
     
      + 53772000000*u(7,Kov,KI) + 7062000000*u(7,Hsel,EU) + 14250000000*u(7,Hsel,IE) + 17862000000*u(7,Hsel,PA) + 21444000000*u(7,Hsel,KI) + 10650000000*u(7,Lsel,EU) + 7032000000*u(7,Lsel,IE) + 17862000000*u(7,Lsel,PA) + 25050000000*u(7,Lsel,KI)
     
      + 14130000000*u(7,Pap,EU) + 35718000000*u(7,Pap,IE) + 42942000000*u(7,Pap,PA) + 53712000000*u(7,Pap,KI) + 19488000000*u(8,Mas,EU) + 48909000000*u(8,Mas,IE) + 58702000000*u(8,Mas,PA) + 73395000000*u(8,Mas,KI) + 68509000000*u(8,Kos,EU)
     
      + 97902000000*u(8,Kos,IE) + 107695000000*u(8,Kos,PA) + 122388000000*u(8,Kos,KI) + 19292000000*u(8,Kuv,EU) + 48734000000*u(8,Kuv,IE) + 58548000000*u(8,Kuv,PA) + 73255000000*u(8,Kuv,KI) + 19299000000*u(8,Kov,EU) + 48713000000*u(8,Kov,IE)
     
      + 58527000000*u(8,Kov,PA) + 73234000000*u(8,Kov,KI) + 9639000000*u(8,Hsel,EU) + 19425000000*u(8,Hsel,IE) + 24339000000*u(8,Hsel,PA) + 29218000000*u(8,Hsel,KI) + 14525000000*u(8,Lsel,EU) + 9604000000*u(8,Lsel,IE) + 24339000000*u(8,Lsel,PA)
     
      + 34125000000*u(8,Lsel,KI) + 19285000000*u(8,Pap,EU) + 48671000000*u(8,Pap,IE) + 58499000000*u(8,Pap,PA) + 73164000000*u(8,Pap,KI) + 25472000000*u(9,Mas,EU) + 63896000000*u(9,Mas,IE) + 76688000000*u(9,Mas,PA) + 95880000000*u(9,Mas,KI)
     
      + 89496000000*u(9,Kos,EU) + 127888000000*u(9,Kos,IE) + 140680000000*u(9,Kos,PA) + 159872000000*u(9,Kos,KI) + 25248000000*u(9,Kuv,EU) + 63696000000*u(9,Kuv,IE) + 76512000000*u(9,Kuv,PA) + 95720000000*u(9,Kuv,KI) + 25256000000*u(9,Kov,EU)
     
      + 63672000000*u(9,Kov,IE) + 76488000000*u(9,Kov,PA) + 95696000000*u(9,Kov,KI) + 12616000000*u(9,Hsel,EU) + 25400000000*u(9,Hsel,IE) + 31816000000*u(9,Hsel,PA) + 38192000000*u(9,Hsel,KI) + 19000000000*u(9,Lsel,EU) + 12576000000*u(9,Lsel,IE)
     
      + 31816000000*u(9,Lsel,PA) + 44600000000*u(9,Lsel,KI) + 25240000000*u(9,Pap,EU) + 63624000000*u(9,Pap,IE) + 76456000000*u(9,Pap,PA) + 95616000000*u(9,Pap,KI) + 32256000000*u(10,Mas,EU) + 80883000000*u(10,Mas,IE) + 97074000000*u(10,Mas,PA)
     
      + 121365000000*u(10,Mas,KI) + 113283000000*u(10,Kos,EU) + 161874000000*u(10,Kos,IE) + 178065000000*u(10,Kos,PA) + 202356000000*u(10,Kos,KI) + 32004000000*u(10,Kuv,EU) + 80658000000*u(10,Kuv,IE) + 96876000000*u(10,Kuv,PA) + 121185000000*u(10,Kuv,KI)
     
      + 32013000000*u(10,Kov,EU) + 80631000000*u(10,Kov,IE) + 96849000000*u(10,Kov,PA) + 121158000000*u(10,Kov,KI) + 15993000000*u(10,Hsel,EU) + 32175000000*u(10,Hsel,IE) + 40293000000*u(10,Hsel,PA) + 48366000000*u(10,Hsel,KI) + 24075000000*u(10,Lsel,EU)
     
      + 15948000000*u(10,Lsel,IE) + 40293000000*u(10,Lsel,PA) + 56475000000*u(10,Lsel,KI) + 31995000000*u(10,Pap,EU) + 80577000000*u(10,Pap,IE) + 96813000000*u(10,Pap,PA) + 121068000000*u(10,Pap,KI) + 39840000000*u(11,Mas,EU) + 99870000000*u(11,Mas,IE)
     
      + 119860000000*u(11,Mas,PA) + 149850000000*u(11,Mas,KI) + 139870000000*u(11,Kos,EU) + 199860000000*u(11,Kos,IE) + 219850000000*u(11,Kos,PA) + 249840000000*u(11,Kos,KI) + 39560000000*u(11,Kuv,EU) + 99620000000*u(11,Kuv,IE) + 119640000000*u(11,Kuv,PA)
     
      + 149650000000*u(11,Kuv,KI) + 39570000000*u(11,Kov,EU) + 99590000000*u(11,Kov,IE) + 119610000000*u(11,Kov,PA) + 149620000000*u(11,Kov,KI) + 19770000000*u(11,Hsel,EU) + 39750000000*u(11,Hsel,IE) + 49770000000*u(11,Hsel,PA) + 59740000000*u(11,Hsel,KI)
     
      + 29750000000*u(11,Lsel,EU) + 19720000000*u(11,Lsel,IE) + 49770000000*u(11,Lsel,PA) + 69750000000*u(11,Lsel,KI) + 39550000000*u(11,Pap,EU) + 99530000000*u(11,Pap,IE) + 119570000000*u(11,Pap,PA) + 149520000000*u(11,Pap,KI) + 48224000000*u(12,Mas,EU)
     
      + 120857000000*u(12,Mas,IE) + 145046000000*u(12,Mas,PA) + 181335000000*u(12,Mas,KI) + 169257000000*u(12,Kos,EU) + 241846000000*u(12,Kos,IE) + 266035000000*u(12,Kos,PA) + 302324000000*u(12,Kos,KI) + 47916000000*u(12,Kuv,EU)
     
      + 120582000000*u(12,Kuv,IE) + 144804000000*u(12,Kuv,PA) + 181115000000*u(12,Kuv,KI) + 47927000000*u(12,Kov,EU) + 120549000000*u(12,Kov,IE) + 144771000000*u(12,Kov,PA) + 181082000000*u(12,Kov,KI) + 23947000000*u(12,Hsel,EU)
     
      + 48125000000*u(12,Hsel,IE) + 60247000000*u(12,Hsel,PA) + 72314000000*u(12,Hsel,KI) + 36025000000*u(12,Lsel,EU) + 23892000000*u(12,Lsel,IE) + 60247000000*u(12,Lsel,PA) + 84425000000*u(12,Lsel,KI) + 47905000000*u(12,Pap,EU)
     
      + 120483000000*u(12,Pap,IE) + 144727000000*u(12,Pap,PA) + 180972000000*u(12,Pap,KI) + 57408000000*u(13,Mas,EU) + 143844000000*u(13,Mas,IE) + 172632000000*u(13,Mas,PA) + 215820000000*u(13,Mas,KI) + 201444000000*u(13,Kos,EU)
     
      + 287832000000*u(13,Kos,IE) + 316620000000*u(13,Kos,PA) + 359808000000*u(13,Kos,KI) + 57072000000*u(13,Kuv,EU) + 143544000000*u(13,Kuv,IE) + 172368000000*u(13,Kuv,PA) + 215580000000*u(13,Kuv,KI) + 57084000000*u(13,Kov,EU) + 143508000000*u(13,Kov,IE)
     
      + 172332000000*u(13,Kov,PA) + 215544000000*u(13,Kov,KI) + 28524000000*u(13,Hsel,EU) + 57300000000*u(13,Hsel,IE) + 71724000000*u(13,Hsel,PA) + 86088000000*u(13,Hsel,KI) + 42900000000*u(13,Lsel,EU) + 28464000000*u(13,Lsel,IE)
     
      + 71724000000*u(13,Lsel,PA) + 100500000000*u(13,Lsel,KI) + 57060000000*u(13,Pap,EU) + 143436000000*u(13,Pap,IE) + 172284000000*u(13,Pap,PA) + 215424000000*u(13,Pap,KI) + 67392000000*u(14,Mas,EU) + 168831000000*u(14,Mas,IE)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/17/17 16:42:05 Page 12
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 341


     obj  =E=  Maximum gross profit     
     
      + 202618000000*u(14,Mas,PA) + 253305000000*u(14,Mas,KI) + 236431000000*u(14,Kos,EU) + 337818000000*u(14,Kos,IE) + 371605000000*u(14,Kos,PA) + 422292000000*u(14,Kos,KI) + 67028000000*u(14,Kuv,EU) + 168506000000*u(14,Kuv,IE)
     
      + 202332000000*u(14,Kuv,PA) + 253045000000*u(14,Kuv,KI) + 67041000000*u(14,Kov,EU) + 168467000000*u(14,Kov,IE) + 202293000000*u(14,Kov,PA) + 253006000000*u(14,Kov,KI) + 33501000000*u(14,Hsel,EU) + 67275000000*u(14,Hsel,IE)
     
      + 84201000000*u(14,Hsel,PA) + 101062000000*u(14,Hsel,KI) + 50375000000*u(14,Lsel,EU) + 33436000000*u(14,Lsel,IE) + 84201000000*u(14,Lsel,PA) + 117975000000*u(14,Lsel,KI) + 67015000000*u(14,Pap,EU) + 168389000000*u(14,Pap,IE)
     
      + 202241000000*u(14,Pap,PA) + 252876000000*u(14,Pap,KI) + 78176000000*u(15,Mas,EU) + 195818000000*u(15,Mas,IE) + 235004000000*u(15,Mas,PA) + 293790000000*u(15,Mas,KI) + 274218000000*u(15,Kos,EU) + 391804000000*u(15,Kos,IE)
     
      + 430990000000*u(15,Kos,PA) + 489776000000*u(15,Kos,KI) + 77784000000*u(15,Kuv,EU) + 195468000000*u(15,Kuv,IE) + 234696000000*u(15,Kuv,PA) + 293510000000*u(15,Kuv,KI) + 77798000000*u(15,Kov,EU) + 195426000000*u(15,Kov,IE) + 234654000000*u(15,Kov,PA)
     
      + 293468000000*u(15,Kov,KI) + 38878000000*u(15,Hsel,EU) + 78050000000*u(15,Hsel,IE) + 97678000000*u(15,Hsel,PA) + 117236000000*u(15,Hsel,KI) + 58450000000*u(15,Lsel,EU) + 38808000000*u(15,Lsel,IE) + 97678000000*u(15,Lsel,PA)
     
      + 136850000000*u(15,Lsel,KI) + 77770000000*u(15,Pap,EU) + 195342000000*u(15,Pap,IE) + 234598000000*u(15,Pap,PA) + 293328000000*u(15,Pap,KI) + 89760000000*u(16,Mas,EU) + 224805000000*u(16,Mas,IE) + 269790000000*u(16,Mas,PA)
     
      + 337275000000*u(16,Mas,KI) + 314805000000*u(16,Kos,EU) + 449790000000*u(16,Kos,IE) + 494775000000*u(16,Kos,PA) + 562260000000*u(16,Kos,KI) + 89340000000*u(16,Kuv,EU) + 224430000000*u(16,Kuv,IE) + 269460000000*u(16,Kuv,PA)
     
      + 336975000000*u(16,Kuv,KI) + 89355000000*u(16,Kov,EU) + 224385000000*u(16,Kov,IE) + 269415000000*u(16,Kov,PA) + 336930000000*u(16,Kov,KI) + 44655000000*u(16,Hsel,EU) + 89625000000*u(16,Hsel,IE) + 112155000000*u(16,Hsel,PA)
     
      + 134610000000*u(16,Hsel,KI) + 67125000000*u(16,Lsel,EU) + 44580000000*u(16,Lsel,IE) + 112155000000*u(16,Lsel,PA) + 157125000000*u(16,Lsel,KI) + 89325000000*u(16,Pap,EU) + 224295000000*u(16,Pap,IE) + 269355000000*u(16,Pap,PA)
     
      + 336780000000*u(16,Pap,KI) + 102144000000*u(17,Mas,EU) + 255792000000*u(17,Mas,IE) + 306976000000*u(17,Mas,PA) + 383760000000*u(17,Mas,KI) + 358192000000*u(17,Kos,EU) + 511776000000*u(17,Kos,IE) + 562960000000*u(17,Kos,PA)
     
      + 639744000000*u(17,Kos,KI) + 101696000000*u(17,Kuv,EU) + 255392000000*u(17,Kuv,IE) + 306624000000*u(17,Kuv,PA) + 383440000000*u(17,Kuv,KI) + 101712000000*u(17,Kov,EU) + 255344000000*u(17,Kov,IE) + 306576000000*u(17,Kov,PA)
     
      + 383392000000*u(17,Kov,KI) + 50832000000*u(17,Hsel,EU) + 102000000000*u(17,Hsel,IE) + 127632000000*u(17,Hsel,PA) + 153184000000*u(17,Hsel,KI) + 76400000000*u(17,Lsel,EU) + 50752000000*u(17,Lsel,IE) + 127632000000*u(17,Lsel,PA)
     
      + 178800000000*u(17,Lsel,KI) + 101680000000*u(17,Pap,EU) + 255248000000*u(17,Pap,IE) + 306512000000*u(17,Pap,PA) + 383232000000*u(17,Pap,KI) + 115328000000*u(18,Mas,EU) + 288779000000*u(18,Mas,IE) + 346562000000*u(18,Mas,PA)
     
      + 433245000000*u(18,Mas,KI) + 404379000000*u(18,Kos,EU) + 577762000000*u(18,Kos,IE) + 635545000000*u(18,Kos,PA) + 722228000000*u(18,Kos,KI) + 114852000000*u(18,Kuv,EU) + 288354000000*u(18,Kuv,IE) + 346188000000*u(18,Kuv,PA)
     
      + 432905000000*u(18,Kuv,KI) + 114869000000*u(18,Kov,EU) + 288303000000*u(18,Kov,IE) + 346137000000*u(18,Kov,PA) + 432854000000*u(18,Kov,KI) + 57409000000*u(18,Hsel,EU) + 115175000000*u(18,Hsel,IE) + 144109000000*u(18,Hsel,PA)
     
      + 172958000000*u(18,Hsel,KI) + 86275000000*u(18,Lsel,EU) + 57324000000*u(18,Lsel,IE) + 144109000000*u(18,Lsel,PA) + 201875000000*u(18,Lsel,KI) + 114835000000*u(18,Pap,EU) + 288201000000*u(18,Pap,IE) + 346069000000*u(18,Pap,PA)
     
      + 432684000000*u(18,Pap,KI) + 129312000000*u(19,Mas,EU) + 323766000000*u(19,Mas,IE) + 388548000000*u(19,Mas,PA) + 485730000000*u(19,Mas,KI) + 453366000000*u(19,Kos,EU) + 647748000000*u(19,Kos,IE) + 712530000000*u(19,Kos,PA)
     
      + 809712000000*u(19,Kos,KI) + 128808000000*u(19,Kuv,EU) + 323316000000*u(19,Kuv,IE) + 388152000000*u(19,Kuv,PA) + 485370000000*u(19,Kuv,KI) + 128826000000*u(19,Kov,EU) + 323262000000*u(19,Kov,IE) + 388098000000*u(19,Kov,PA)
     
      + 485316000000*u(19,Kov,KI) + 64386000000*u(19,Hsel,EU) + 129150000000*u(19,Hsel,IE) + 161586000000*u(19,Hsel,PA) + 193932000000*u(19,Hsel,KI) + 96750000000*u(19,Lsel,EU) + 64296000000*u(19,Lsel,IE) + 161586000000*u(19,Lsel,PA)
     
      + 226350000000*u(19,Lsel,KI) + 128790000000*u(19,Pap,EU) + 323154000000*u(19,Pap,IE) + 388026000000*u(19,Pap,PA) + 485136000000*u(19,Pap,KI) + 144096000000*u(20,Mas,EU) + 360753000000*u(20,Mas,IE) + 432934000000*u(20,Mas,PA)
     
      + 541215000000*u(20,Mas,KI) + 505153000000*u(20,Kos,EU) + 721734000000*u(20,Kos,IE) + 793915000000*u(20,Kos,PA) + 902196000000*u(20,Kos,KI) + 143564000000*u(20,Kuv,EU) + 360278000000*u(20,Kuv,IE) + 432516000000*u(20,Kuv,PA)
     
      + 540835000000*u(20,Kuv,KI) + 143583000000*u(20,Kov,EU) + 360221000000*u(20,Kov,IE) + 432459000000*u(20,Kov,PA) + 540778000000*u(20,Kov,KI) + 71763000000*u(20,Hsel,EU) + 143925000000*u(20,Hsel,IE) + 180063000000*u(20,Hsel,PA)
     
      + 216106000000*u(20,Hsel,KI) + 107825000000*u(20,Lsel,EU) + 71668000000*u(20,Lsel,IE) + 180063000000*u(20,Lsel,PA) + 252225000000*u(20,Lsel,KI) + 143545000000*u(20,Pap,EU) + 360107000000*u(20,Pap,IE) + 432383000000*u(20,Pap,PA)
     
      + 540588000000*u(20,Pap,KI) + 159680000000*u(21,Mas,EU) + 399740000000*u(21,Mas,IE) + 479720000000*u(21,Mas,PA) + 599700000000*u(21,Mas,KI) + 559740000000*u(21,Kos,EU) + 799720000000*u(21,Kos,IE) + 879700000000*u(21,Kos,PA)
     
      + 999680000000*u(21,Kos,KI) + 159120000000*u(21,Kuv,EU) + 399240000000*u(21,Kuv,IE) + 479280000000*u(21,Kuv,PA) + 599300000000*u(21,Kuv,KI) + 159140000000*u(21,Kov,EU) + 399180000000*u(21,Kov,IE) + 479220000000*u(21,Kov,PA)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/17/17 16:42:05 Page 13
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 341


     obj  =E=  Maximum gross profit     
     
      + 599240000000*u(21,Kov,KI) + 79540000000*u(21,Hsel,EU) + 159500000000*u(21,Hsel,IE) + 199540000000*u(21,Hsel,PA) + 239480000000*u(21,Hsel,KI) + 119500000000*u(21,Lsel,EU) + 79440000000*u(21,Lsel,IE) + 199540000000*u(21,Lsel,PA)
     
      + 279500000000*u(21,Lsel,KI) + 159100000000*u(21,Pap,EU) + 399060000000*u(21,Pap,IE) + 479140000000*u(21,Pap,PA) + 599040000000*u(21,Pap,KI) + 176064000000*u(22,Mas,EU) + 440727000000*u(22,Mas,IE) + 528906000000*u(22,Mas,PA)
     
      + 661185000000*u(22,Mas,KI) + 617127000000*u(22,Kos,EU) + 881706000000*u(22,Kos,IE) + 969885000000*u(22,Kos,PA) + 1102164000000*u(22,Kos,KI) + 175476000000*u(22,Kuv,EU) + 440202000000*u(22,Kuv,IE) + 528444000000*u(22,Kuv,PA)
     
      + 660765000000*u(22,Kuv,KI) + 175497000000*u(22,Kov,EU) + 440139000000*u(22,Kov,IE) + 528381000000*u(22,Kov,PA) + 660702000000*u(22,Kov,KI) + 87717000000*u(22,Hsel,EU) + 175875000000*u(22,Hsel,IE) + 220017000000*u(22,Hsel,PA)
     
      + 264054000000*u(22,Hsel,KI) + 131775000000*u(22,Lsel,EU) + 87612000000*u(22,Lsel,IE) + 220017000000*u(22,Lsel,PA) + 308175000000*u(22,Lsel,KI) + 175455000000*u(22,Pap,EU) + 440013000000*u(22,Pap,IE) + 528297000000*u(22,Pap,PA)
     
      + 660492000000*u(22,Pap,KI) + 193248000000*u(23,Mas,EU) + 483714000000*u(23,Mas,IE) + 580492000000*u(23,Mas,PA) + 725670000000*u(23,Mas,KI) + 677314000000*u(23,Kos,EU) + 967692000000*u(23,Kos,IE) + 1064470000000*u(23,Kos,PA)
     
      + 1209648000000*u(23,Kos,KI) + 192632000000*u(23,Kuv,EU) + 483164000000*u(23,Kuv,IE) + 580008000000*u(23,Kuv,PA) + 725230000000*u(23,Kuv,KI) + 192654000000*u(23,Kov,EU) + 483098000000*u(23,Kov,IE) + 579942000000*u(23,Kov,PA)
     
      + 725164000000*u(23,Kov,KI) + 96294000000*u(23,Hsel,EU) + 193050000000*u(23,Hsel,IE) + 241494000000*u(23,Hsel,PA) + 289828000000*u(23,Hsel,KI) + 144650000000*u(23,Lsel,EU) + 96184000000*u(23,Lsel,IE) + 241494000000*u(23,Lsel,PA)
     
      + 338250000000*u(23,Lsel,KI) + 192610000000*u(23,Pap,EU) + 482966000000*u(23,Pap,IE) + 579854000000*u(23,Pap,PA) + 724944000000*u(23,Pap,KI) =E= 0 ; (LHS = 0)
     

---- timber_used  =E=   amount of  timber i used to make  product j

timber_used(Mat)..  2*y(Mas) - s(Mat) =E= 0 ; (LHS = 0)
     
timber_used(Kut)..  2*y(Kus) + 2.8*y(Kuv) - s(Kut) =E= 0 ; (LHS = 0)
     
timber_used(Kot)..  2*y(Kos) + 2.8*y(Kov) - s(Kot) =E= 0 ; (LHS = 0)
     
timber_used(Mak)..  - 0.8*y(Mas) + 4.8*y(Hsel) - s(Mak) =E= 0 ; (LHS = 0)
     
timber_used(Kuk)..  - 0.8*y(Kus) - 1.6*y(Kuv) + y(Pap) - s(Kuk) =E= 0 ; (LHS = 0)
     
timber_used(Kok)..  - 0.8*y(Kos) - 1.6*y(Kov) + 4.2*y(Lsel) - s(Kok) =E= 0 ; (LHS = 0)
     

---- prod_starved  =G=  ensure that production can not be starved

prod_starved(Mat)..  - s(Mat) + 10000*r(2,Mat) + 20000*r(3,Mat) + 30000*r(4,Mat) + 40000*r(5,Mat) + 50000*r(6,Mat) + 60000*r(7,Mat) + 70000*r(8,Mat) + 80000*r(9,Mat) + 90000*r(10,Mat) + 100000*r(11,Mat) + 110000*r(12,Mat) + 120000*r(13,Mat)
     
      + 130000*r(14,Mat) + 140000*r(15,Mat) + 150000*r(16,Mat) + 160000*r(17,Mat) + 170000*r(18,Mat) + 180000*r(19,Mat) + 190000*r(20,Mat) + 200000*r(21,Mat) + 210000*r(22,Mat) + 220000*r(23,Mat) + 230000*r(24,Mat) + 240000*r(25,Mat) + 250000*r(26,Mat)
     
      + 260000*r(27,Mat) + 270000*r(28,Mat) + 280000*r(29,Mat) + 290000*r(30,Mat) + 300000*r(31,Mat) + 310000*r(32,Mat) + 320000*r(33,Mat) + 330000*r(34,Mat) + 340000*r(35,Mat) + 350000*r(36,Mat) + 360000*r(37,Mat) + 370000*r(38,Mat) + 380000*r(39,Mat)
     
      + 390000*r(40,Mat) + 400000*r(41,Mat) + 410000*r(42,Mat) + 420000*r(43,Mat) + 430000*r(44,Mat) + 440000*r(45,Mat) + 450000*r(46,Mat) + 460000*r(47,Mat) + 470000*r(48,Mat) + 480000*r(49,Mat) + 490000*r(50,Mat) + 500000*r(51,Mat) + 510000*r(52,Mat)
     
      + 520000*r(53,Mat) + 530000*r(54,Mat) + 540000*r(55,Mat) + 550000*r(56,Mat) + 560000*r(57,Mat) + 570000*r(58,Mat) + 580000*r(59,Mat) + 590000*r(60,Mat) + 600000*r(61,Mat) + 610000*r(62,Mat) + 620000*r(63,Mat) + 630000*r(64,Mat) + 640000*r(65,Mat)
     
      + 650000*r(66,Mat) + 660000*r(67,Mat) + 670000*r(68,Mat) + 680000*r(69,Mat) + 690000*r(70,Mat) + 700000*r(71,Mat) + 710000*r(72,Mat) + 720000*r(73,Mat) + 730000*r(74,Mat) + 740000*r(75,Mat) + 750000*r(76,Mat) + 760000*r(77,Mat) + 770000*r(78,Mat)
     
      + 780000*r(79,Mat) + 790000*r(80,Mat) + 800000*r(81,Mat) + 810000*r(82,Mat) + 820000*r(83,Mat) + 830000*r(84,Mat) + 840000*r(85,Mat) + 850000*r(86,Mat) + 860000*r(87,Mat) + 870000*r(88,Mat) + 880000*r(89,Mat) + 890000*r(90,Mat) + 900000*r(91,Mat)
     
      + 910000*r(92,Mat) + 920000*r(93,Mat) + 930000*r(94,Mat) + 940000*r(95,Mat) + 950000*r(96,Mat) + 960000*r(97,Mat) + 970000*r(98,Mat) + 980000*r(99,Mat) + 990000*r(100,Mat) + 1000000*r(101,Mat) + 1010000*r(102,Mat) + 1020000*r(103,Mat)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/17/17 16:42:05 Page 14
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 341


     prod_starved  =G=  ensure that production can not be starved     
     
      + 1030000*r(104,Mat) + 1040000*r(105,Mat) + 1050000*r(106,Mat) + 1060000*r(107,Mat) =G= 0 ; (LHS = 0)
     
prod_starved(Kut)..  - s(Kut) + 10000*r(2,Kut) + 20000*r(3,Kut) + 30000*r(4,Kut) + 40000*r(5,Kut) + 50000*r(6,Kut) + 60000*r(7,Kut) + 70000*r(8,Kut) + 80000*r(9,Kut) + 90000*r(10,Kut) + 100000*r(11,Kut) + 110000*r(12,Kut) + 120000*r(13,Kut)
     
      + 130000*r(14,Kut) + 140000*r(15,Kut) + 150000*r(16,Kut) + 160000*r(17,Kut) + 170000*r(18,Kut) + 180000*r(19,Kut) + 190000*r(20,Kut) + 200000*r(21,Kut) + 210000*r(22,Kut) + 220000*r(23,Kut) + 230000*r(24,Kut) + 240000*r(25,Kut) + 250000*r(26,Kut)
     
      + 260000*r(27,Kut) + 270000*r(28,Kut) + 280000*r(29,Kut) + 290000*r(30,Kut) + 300000*r(31,Kut) + 310000*r(32,Kut) + 320000*r(33,Kut) + 330000*r(34,Kut) + 340000*r(35,Kut) + 350000*r(36,Kut) + 360000*r(37,Kut) + 370000*r(38,Kut) + 380000*r(39,Kut)
     
      + 390000*r(40,Kut) + 400000*r(41,Kut) + 410000*r(42,Kut) + 420000*r(43,Kut) + 430000*r(44,Kut) + 440000*r(45,Kut) + 450000*r(46,Kut) + 460000*r(47,Kut) + 470000*r(48,Kut) + 480000*r(49,Kut) + 490000*r(50,Kut) + 500000*r(51,Kut) + 510000*r(52,Kut)
     
      + 520000*r(53,Kut) + 530000*r(54,Kut) + 540000*r(55,Kut) + 550000*r(56,Kut) + 560000*r(57,Kut) + 570000*r(58,Kut) + 580000*r(59,Kut) + 590000*r(60,Kut) + 600000*r(61,Kut) + 610000*r(62,Kut) + 620000*r(63,Kut) + 630000*r(64,Kut) + 640000*r(65,Kut)
     
      + 650000*r(66,Kut) + 660000*r(67,Kut) + 670000*r(68,Kut) + 680000*r(69,Kut) + 690000*r(70,Kut) + 700000*r(71,Kut) + 710000*r(72,Kut) + 720000*r(73,Kut) + 730000*r(74,Kut) + 740000*r(75,Kut) + 750000*r(76,Kut) + 760000*r(77,Kut) + 770000*r(78,Kut)
     
      + 780000*r(79,Kut) + 790000*r(80,Kut) + 800000*r(81,Kut) + 810000*r(82,Kut) + 820000*r(83,Kut) + 830000*r(84,Kut) + 840000*r(85,Kut) + 850000*r(86,Kut) + 860000*r(87,Kut) + 870000*r(88,Kut) + 880000*r(89,Kut) + 890000*r(90,Kut) + 900000*r(91,Kut)
     
      + 910000*r(92,Kut) + 920000*r(93,Kut) + 930000*r(94,Kut) + 940000*r(95,Kut) + 950000*r(96,Kut) + 960000*r(97,Kut) + 970000*r(98,Kut) + 980000*r(99,Kut) + 990000*r(100,Kut) + 1000000*r(101,Kut) + 1010000*r(102,Kut) + 1020000*r(103,Kut)
     
      + 1030000*r(104,Kut) + 1040000*r(105,Kut) + 1050000*r(106,Kut) + 1060000*r(107,Kut) =G= 0 ; (LHS = 0)
     
prod_starved(Kot)..  - s(Kot) + 10000*r(2,Kot) + 20000*r(3,Kot) + 30000*r(4,Kot) + 40000*r(5,Kot) + 50000*r(6,Kot) + 60000*r(7,Kot) + 70000*r(8,Kot) + 80000*r(9,Kot) + 90000*r(10,Kot) + 100000*r(11,Kot) + 110000*r(12,Kot) + 120000*r(13,Kot)
     
      + 130000*r(14,Kot) + 140000*r(15,Kot) + 150000*r(16,Kot) + 160000*r(17,Kot) + 170000*r(18,Kot) + 180000*r(19,Kot) + 190000*r(20,Kot) + 200000*r(21,Kot) + 210000*r(22,Kot) + 220000*r(23,Kot) + 230000*r(24,Kot) + 240000*r(25,Kot) + 250000*r(26,Kot)
     
      + 260000*r(27,Kot) + 270000*r(28,Kot) + 280000*r(29,Kot) + 290000*r(30,Kot) + 300000*r(31,Kot) + 310000*r(32,Kot) + 320000*r(33,Kot) + 330000*r(34,Kot) + 340000*r(35,Kot) + 350000*r(36,Kot) + 360000*r(37,Kot) + 370000*r(38,Kot) + 380000*r(39,Kot)
     
      + 390000*r(40,Kot) + 400000*r(41,Kot) + 410000*r(42,Kot) + 420000*r(43,Kot) + 430000*r(44,Kot) + 440000*r(45,Kot) + 450000*r(46,Kot) + 460000*r(47,Kot) + 470000*r(48,Kot) + 480000*r(49,Kot) + 490000*r(50,Kot) + 500000*r(51,Kot) + 510000*r(52,Kot)
     
      + 520000*r(53,Kot) + 530000*r(54,Kot) + 540000*r(55,Kot) + 550000*r(56,Kot) + 560000*r(57,Kot) + 570000*r(58,Kot) + 580000*r(59,Kot) + 590000*r(60,Kot) + 600000*r(61,Kot) + 610000*r(62,Kot) + 620000*r(63,Kot) + 630000*r(64,Kot) + 640000*r(65,Kot)
     
      + 650000*r(66,Kot) + 660000*r(67,Kot) + 670000*r(68,Kot) + 680000*r(69,Kot) + 690000*r(70,Kot) + 700000*r(71,Kot) + 710000*r(72,Kot) + 720000*r(73,Kot) + 730000*r(74,Kot) + 740000*r(75,Kot) + 750000*r(76,Kot) + 760000*r(77,Kot) + 770000*r(78,Kot)
     
      + 780000*r(79,Kot) + 790000*r(80,Kot) + 800000*r(81,Kot) + 810000*r(82,Kot) + 820000*r(83,Kot) + 830000*r(84,Kot) + 840000*r(85,Kot) + 850000*r(86,Kot) + 860000*r(87,Kot) + 870000*r(88,Kot) + 880000*r(89,Kot) + 890000*r(90,Kot) + 900000*r(91,Kot)
     
      + 910000*r(92,Kot) + 920000*r(93,Kot) + 930000*r(94,Kot) + 940000*r(95,Kot) + 950000*r(96,Kot) + 960000*r(97,Kot) + 970000*r(98,Kot) + 980000*r(99,Kot) + 990000*r(100,Kot) + 1000000*r(101,Kot) + 1010000*r(102,Kot) + 1020000*r(103,Kot)
     
      + 1030000*r(104,Kot) + 1040000*r(105,Kot) + 1050000*r(106,Kot) + 1060000*r(107,Kot) =G= 0 ; (LHS = 0)
     
prod_starved(Mak)..  - s(Mak) + 10000*r(2,Mak) + 20000*r(3,Mak) + 30000*r(4,Mak) + 40000*r(5,Mak) + 50000*r(6,Mak) + 60000*r(7,Mak) + 70000*r(8,Mak) + 80000*r(9,Mak) + 90000*r(10,Mak) + 100000*r(11,Mak) + 110000*r(12,Mak) + 120000*r(13,Mak)
     
      + 130000*r(14,Mak) + 140000*r(15,Mak) + 150000*r(16,Mak) + 160000*r(17,Mak) + 170000*r(18,Mak) + 180000*r(19,Mak) + 190000*r(20,Mak) + 200000*r(21,Mak) + 210000*r(22,Mak) + 220000*r(23,Mak) + 230000*r(24,Mak) + 240000*r(25,Mak) + 250000*r(26,Mak)
     
      + 260000*r(27,Mak) + 270000*r(28,Mak) + 280000*r(29,Mak) + 290000*r(30,Mak) + 300000*r(31,Mak) + 310000*r(32,Mak) + 320000*r(33,Mak) + 330000*r(34,Mak) + 340000*r(35,Mak) + 350000*r(36,Mak) + 360000*r(37,Mak) + 370000*r(38,Mak) + 380000*r(39,Mak)
     
      + 390000*r(40,Mak) + 400000*r(41,Mak) + 410000*r(42,Mak) + 420000*r(43,Mak) + 430000*r(44,Mak) + 440000*r(45,Mak) + 450000*r(46,Mak) + 460000*r(47,Mak) + 470000*r(48,Mak) + 480000*r(49,Mak) + 490000*r(50,Mak) + 500000*r(51,Mak) + 510000*r(52,Mak)
     
      + 520000*r(53,Mak) + 530000*r(54,Mak) + 540000*r(55,Mak) + 550000*r(56,Mak) + 560000*r(57,Mak) + 570000*r(58,Mak) + 580000*r(59,Mak) + 590000*r(60,Mak) + 600000*r(61,Mak) + 610000*r(62,Mak) + 620000*r(63,Mak) + 630000*r(64,Mak) + 640000*r(65,Mak)
     
      + 650000*r(66,Mak) + 660000*r(67,Mak) + 670000*r(68,Mak) + 680000*r(69,Mak) + 690000*r(70,Mak) + 700000*r(71,Mak) + 710000*r(72,Mak) + 720000*r(73,Mak) + 730000*r(74,Mak) + 740000*r(75,Mak) + 750000*r(76,Mak) + 760000*r(77,Mak) + 770000*r(78,Mak)
     
      + 780000*r(79,Mak) + 790000*r(80,Mak) + 800000*r(81,Mak) + 810000*r(82,Mak) + 820000*r(83,Mak) + 830000*r(84,Mak) + 840000*r(85,Mak) + 850000*r(86,Mak) + 860000*r(87,Mak) + 870000*r(88,Mak) + 880000*r(89,Mak) + 890000*r(90,Mak) + 900000*r(91,Mak)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/17/17 16:42:05 Page 15
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 341


     prod_starved  =G=  ensure that production can not be starved     
     
      + 910000*r(92,Mak) + 920000*r(93,Mak) + 930000*r(94,Mak) + 940000*r(95,Mak) + 950000*r(96,Mak) + 960000*r(97,Mak) + 970000*r(98,Mak) + 980000*r(99,Mak) + 990000*r(100,Mak) + 1000000*r(101,Mak) + 1010000*r(102,Mak) + 1020000*r(103,Mak)
     
      + 1030000*r(104,Mak) + 1040000*r(105,Mak) + 1050000*r(106,Mak) + 1060000*r(107,Mak) =G= 0 ; (LHS = 0)
     
prod_starved(Kuk)..  - s(Kuk) + 10000*r(2,Kuk) + 20000*r(3,Kuk) + 30000*r(4,Kuk) + 40000*r(5,Kuk) + 50000*r(6,Kuk) + 60000*r(7,Kuk) + 70000*r(8,Kuk) + 80000*r(9,Kuk) + 90000*r(10,Kuk) + 100000*r(11,Kuk) + 110000*r(12,Kuk) + 120000*r(13,Kuk)
     
      + 130000*r(14,Kuk) + 140000*r(15,Kuk) + 150000*r(16,Kuk) + 160000*r(17,Kuk) + 170000*r(18,Kuk) + 180000*r(19,Kuk) + 190000*r(20,Kuk) + 200000*r(21,Kuk) + 210000*r(22,Kuk) + 220000*r(23,Kuk) + 230000*r(24,Kuk) + 240000*r(25,Kuk) + 250000*r(26,Kuk)
     
      + 260000*r(27,Kuk) + 270000*r(28,Kuk) + 280000*r(29,Kuk) + 290000*r(30,Kuk) + 300000*r(31,Kuk) + 310000*r(32,Kuk) + 320000*r(33,Kuk) + 330000*r(34,Kuk) + 340000*r(35,Kuk) + 350000*r(36,Kuk) + 360000*r(37,Kuk) + 370000*r(38,Kuk) + 380000*r(39,Kuk)
     
      + 390000*r(40,Kuk) + 400000*r(41,Kuk) + 410000*r(42,Kuk) + 420000*r(43,Kuk) + 430000*r(44,Kuk) + 440000*r(45,Kuk) + 450000*r(46,Kuk) + 460000*r(47,Kuk) + 470000*r(48,Kuk) + 480000*r(49,Kuk) + 490000*r(50,Kuk) + 500000*r(51,Kuk) + 510000*r(52,Kuk)
     
      + 520000*r(53,Kuk) + 530000*r(54,Kuk) + 540000*r(55,Kuk) + 550000*r(56,Kuk) + 560000*r(57,Kuk) + 570000*r(58,Kuk) + 580000*r(59,Kuk) + 590000*r(60,Kuk) + 600000*r(61,Kuk) + 610000*r(62,Kuk) + 620000*r(63,Kuk) + 630000*r(64,Kuk) + 640000*r(65,Kuk)
     
      + 650000*r(66,Kuk) + 660000*r(67,Kuk) + 670000*r(68,Kuk) + 680000*r(69,Kuk) + 690000*r(70,Kuk) + 700000*r(71,Kuk) + 710000*r(72,Kuk) + 720000*r(73,Kuk) + 730000*r(74,Kuk) + 740000*r(75,Kuk) + 750000*r(76,Kuk) + 760000*r(77,Kuk) + 770000*r(78,Kuk)
     
      + 780000*r(79,Kuk) + 790000*r(80,Kuk) + 800000*r(81,Kuk) + 810000*r(82,Kuk) + 820000*r(83,Kuk) + 830000*r(84,Kuk) + 840000*r(85,Kuk) + 850000*r(86,Kuk) + 860000*r(87,Kuk) + 870000*r(88,Kuk) + 880000*r(89,Kuk) + 890000*r(90,Kuk) + 900000*r(91,Kuk)
     
      + 910000*r(92,Kuk) + 920000*r(93,Kuk) + 930000*r(94,Kuk) + 940000*r(95,Kuk) + 950000*r(96,Kuk) + 960000*r(97,Kuk) + 970000*r(98,Kuk) + 980000*r(99,Kuk) + 990000*r(100,Kuk) + 1000000*r(101,Kuk) + 1010000*r(102,Kuk) + 1020000*r(103,Kuk)
     
      + 1030000*r(104,Kuk) + 1040000*r(105,Kuk) + 1050000*r(106,Kuk) + 1060000*r(107,Kuk) =G= 0 ; (LHS = 0)
     
prod_starved(Kok)..  - s(Kok) + 10000*r(2,Kok) + 20000*r(3,Kok) + 30000*r(4,Kok) + 40000*r(5,Kok) + 50000*r(6,Kok) + 60000*r(7,Kok) + 70000*r(8,Kok) + 80000*r(9,Kok) + 90000*r(10,Kok) + 100000*r(11,Kok) + 110000*r(12,Kok) + 120000*r(13,Kok)
     
      + 130000*r(14,Kok) + 140000*r(15,Kok) + 150000*r(16,Kok) + 160000*r(17,Kok) + 170000*r(18,Kok) + 180000*r(19,Kok) + 190000*r(20,Kok) + 200000*r(21,Kok) + 210000*r(22,Kok) + 220000*r(23,Kok) + 230000*r(24,Kok) + 240000*r(25,Kok) + 250000*r(26,Kok)
     
      + 260000*r(27,Kok) + 270000*r(28,Kok) + 280000*r(29,Kok) + 290000*r(30,Kok) + 300000*r(31,Kok) + 310000*r(32,Kok) + 320000*r(33,Kok) + 330000*r(34,Kok) + 340000*r(35,Kok) + 350000*r(36,Kok) + 360000*r(37,Kok) + 370000*r(38,Kok) + 380000*r(39,Kok)
     
      + 390000*r(40,Kok) + 400000*r(41,Kok) + 410000*r(42,Kok) + 420000*r(43,Kok) + 430000*r(44,Kok) + 440000*r(45,Kok) + 450000*r(46,Kok) + 460000*r(47,Kok) + 470000*r(48,Kok) + 480000*r(49,Kok) + 490000*r(50,Kok) + 500000*r(51,Kok) + 510000*r(52,Kok)
     
      + 520000*r(53,Kok) + 530000*r(54,Kok) + 540000*r(55,Kok) + 550000*r(56,Kok) + 560000*r(57,Kok) + 570000*r(58,Kok) + 580000*r(59,Kok) + 590000*r(60,Kok) + 600000*r(61,Kok) + 610000*r(62,Kok) + 620000*r(63,Kok) + 630000*r(64,Kok) + 640000*r(65,Kok)
     
      + 650000*r(66,Kok) + 660000*r(67,Kok) + 670000*r(68,Kok) + 680000*r(69,Kok) + 690000*r(70,Kok) + 700000*r(71,Kok) + 710000*r(72,Kok) + 720000*r(73,Kok) + 730000*r(74,Kok) + 740000*r(75,Kok) + 750000*r(76,Kok) + 760000*r(77,Kok) + 770000*r(78,Kok)
     
      + 780000*r(79,Kok) + 790000*r(80,Kok) + 800000*r(81,Kok) + 810000*r(82,Kok) + 820000*r(83,Kok) + 830000*r(84,Kok) + 840000*r(85,Kok) + 850000*r(86,Kok) + 860000*r(87,Kok) + 870000*r(88,Kok) + 880000*r(89,Kok) + 890000*r(90,Kok) + 900000*r(91,Kok)
     
      + 910000*r(92,Kok) + 920000*r(93,Kok) + 930000*r(94,Kok) + 940000*r(95,Kok) + 950000*r(96,Kok) + 960000*r(97,Kok) + 970000*r(98,Kok) + 980000*r(99,Kok) + 990000*r(100,Kok) + 1000000*r(101,Kok) + 1010000*r(102,Kok) + 1020000*r(103,Kok)
     
      + 1030000*r(104,Kok) + 1040000*r(105,Kok) + 1050000*r(106,Kok) + 1060000*r(107,Kok) =G= 0 ; (LHS = 0)
     

---- USAGE  =L=  We have to buy material (or produce as byproducts) to be able to produce products

USAGE(Mat)..  2*y(Mas) - 10000*r(2,Mat) - 20000*r(3,Mat) - 30000*r(4,Mat) - 40000*r(5,Mat) - 50000*r(6,Mat) - 60000*r(7,Mat) - 70000*r(8,Mat) - 80000*r(9,Mat) - 90000*r(10,Mat) - 100000*r(11,Mat) - 110000*r(12,Mat) - 120000*r(13,Mat) - 130000*r(14,Mat)
     
      - 140000*r(15,Mat) - 150000*r(16,Mat) - 160000*r(17,Mat) - 170000*r(18,Mat) - 180000*r(19,Mat) - 190000*r(20,Mat) - 200000*r(21,Mat) - 210000*r(22,Mat) - 220000*r(23,Mat) - 230000*r(24,Mat) - 240000*r(25,Mat) - 250000*r(26,Mat) - 260000*r(27,Mat)
     
      - 270000*r(28,Mat) - 280000*r(29,Mat) - 290000*r(30,Mat) - 300000*r(31,Mat) - 310000*r(32,Mat) - 320000*r(33,Mat) - 330000*r(34,Mat) - 340000*r(35,Mat) - 350000*r(36,Mat) - 360000*r(37,Mat) - 370000*r(38,Mat) - 380000*r(39,Mat) - 390000*r(40,Mat)
     
      - 400000*r(41,Mat) - 410000*r(42,Mat) - 420000*r(43,Mat) - 430000*r(44,Mat) - 440000*r(45,Mat) - 450000*r(46,Mat) - 460000*r(47,Mat) - 470000*r(48,Mat) - 480000*r(49,Mat) - 490000*r(50,Mat) - 500000*r(51,Mat) - 510000*r(52,Mat) - 520000*r(53,Mat)
     
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/17/17 16:42:05 Page 16
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 341


     USAGE  =L=  We have to buy material (or produce as byproducts) to be able to produce products     
     
      - 530000*r(54,Mat) - 540000*r(55,Mat) - 550000*r(56,Mat) - 560000*r(57,Mat) - 570000*r(58,Mat) - 580000*r(59,Mat) - 590000*r(60,Mat) - 600000*r(61,Mat) - 610000*r(62,Mat) - 620000*r(63,Mat) - 630000*r(64,Mat) - 640000*r(65,Mat) - 650000*r(66,Mat)
     
      - 660000*r(67,Mat) - 670000*r(68,Mat) - 680000*r(69,Mat) - 690000*r(70,Mat) - 700000*r(71,Mat) - 710000*r(72,Mat) - 720000*r(73,Mat) - 730000*r(74,Mat) - 740000*r(75,Mat) - 750000*r(76,Mat) - 760000*r(77,Mat) - 770000*r(78,Mat) - 780000*r(79,Mat)
     
      - 790000*r(80,Mat) - 800000*r(81,Mat) - 810000*r(82,Mat) - 820000*r(83,Mat) - 830000*r(84,Mat) - 840000*r(85,Mat) - 850000*r(86,Mat) - 860000*r(87,Mat) - 870000*r(88,Mat) - 880000*r(89,Mat) - 890000*r(90,Mat) - 900000*r(91,Mat) - 910000*r(92,Mat)
     
      - 920000*r(93,Mat) - 930000*r(94,Mat) - 940000*r(95,Mat) - 950000*r(96,Mat) - 960000*r(97,Mat) - 970000*r(98,Mat) - 980000*r(99,Mat) - 990000*r(100,Mat) - 1000000*r(101,Mat) - 1010000*r(102,Mat) - 1020000*r(103,Mat) - 1030000*r(104,Mat)
     
      - 1040000*r(105,Mat) - 1050000*r(106,Mat) - 1060000*r(107,Mat) =L= 0 ; (LHS = 0)
     
USAGE(Kut)..  2*y(Kus) + 2.8*y(Kuv) - 10000*r(2,Kut) - 20000*r(3,Kut) - 30000*r(4,Kut) - 40000*r(5,Kut) - 50000*r(6,Kut) - 60000*r(7,Kut) - 70000*r(8,Kut) - 80000*r(9,Kut) - 90000*r(10,Kut) - 100000*r(11,Kut) - 110000*r(12,Kut) - 120000*r(13,Kut)
     
      - 130000*r(14,Kut) - 140000*r(15,Kut) - 150000*r(16,Kut) - 160000*r(17,Kut) - 170000*r(18,Kut) - 180000*r(19,Kut) - 190000*r(20,Kut) - 200000*r(21,Kut) - 210000*r(22,Kut) - 220000*r(23,Kut) - 230000*r(24,Kut) - 240000*r(25,Kut) - 250000*r(26,Kut)
     
      - 260000*r(27,Kut) - 270000*r(28,Kut) - 280000*r(29,Kut) - 290000*r(30,Kut) - 300000*r(31,Kut) - 310000*r(32,Kut) - 320000*r(33,Kut) - 330000*r(34,Kut) - 340000*r(35,Kut) - 350000*r(36,Kut) - 360000*r(37,Kut) - 370000*r(38,Kut) - 380000*r(39,Kut)
     
      - 390000*r(40,Kut) - 400000*r(41,Kut) - 410000*r(42,Kut) - 420000*r(43,Kut) - 430000*r(44,Kut) - 440000*r(45,Kut) - 450000*r(46,Kut) - 460000*r(47,Kut) - 470000*r(48,Kut) - 480000*r(49,Kut) - 490000*r(50,Kut) - 500000*r(51,Kut) - 510000*r(52,Kut)
     
      - 520000*r(53,Kut) - 530000*r(54,Kut) - 540000*r(55,Kut) - 550000*r(56,Kut) - 560000*r(57,Kut) - 570000*r(58,Kut) - 580000*r(59,Kut) - 590000*r(60,Kut) - 600000*r(61,Kut) - 610000*r(62,Kut) - 620000*r(63,Kut) - 630000*r(64,Kut) - 640000*r(65,Kut)
     
      - 650000*r(66,Kut) - 660000*r(67,Kut) - 670000*r(68,Kut) - 680000*r(69,Kut) - 690000*r(70,Kut) - 700000*r(71,Kut) - 710000*r(72,Kut) - 720000*r(73,Kut) - 730000*r(74,Kut) - 740000*r(75,Kut) - 750000*r(76,Kut) - 760000*r(77,Kut) - 770000*r(78,Kut)
     
      - 780000*r(79,Kut) - 790000*r(80,Kut) - 800000*r(81,Kut) - 810000*r(82,Kut) - 820000*r(83,Kut) - 830000*r(84,Kut) - 840000*r(85,Kut) - 850000*r(86,Kut) - 860000*r(87,Kut) - 870000*r(88,Kut) - 880000*r(89,Kut) - 890000*r(90,Kut) - 900000*r(91,Kut)
     
      - 910000*r(92,Kut) - 920000*r(93,Kut) - 930000*r(94,Kut) - 940000*r(95,Kut) - 950000*r(96,Kut) - 960000*r(97,Kut) - 970000*r(98,Kut) - 980000*r(99,Kut) - 990000*r(100,Kut) - 1000000*r(101,Kut) - 1010000*r(102,Kut) - 1020000*r(103,Kut)
     
      - 1030000*r(104,Kut) - 1040000*r(105,Kut) - 1050000*r(106,Kut) - 1060000*r(107,Kut) =L= 0 ; (LHS = 0)
     
USAGE(Kot)..  2*y(Kos) + 2.8*y(Kov) - 10000*r(2,Kot) - 20000*r(3,Kot) - 30000*r(4,Kot) - 40000*r(5,Kot) - 50000*r(6,Kot) - 60000*r(7,Kot) - 70000*r(8,Kot) - 80000*r(9,Kot) - 90000*r(10,Kot) - 100000*r(11,Kot) - 110000*r(12,Kot) - 120000*r(13,Kot)
     
      - 130000*r(14,Kot) - 140000*r(15,Kot) - 150000*r(16,Kot) - 160000*r(17,Kot) - 170000*r(18,Kot) - 180000*r(19,Kot) - 190000*r(20,Kot) - 200000*r(21,Kot) - 210000*r(22,Kot) - 220000*r(23,Kot) - 230000*r(24,Kot) - 240000*r(25,Kot) - 250000*r(26,Kot)
     
      - 260000*r(27,Kot) - 270000*r(28,Kot) - 280000*r(29,Kot) - 290000*r(30,Kot) - 300000*r(31,Kot) - 310000*r(32,Kot) - 320000*r(33,Kot) - 330000*r(34,Kot) - 340000*r(35,Kot) - 350000*r(36,Kot) - 360000*r(37,Kot) - 370000*r(38,Kot) - 380000*r(39,Kot)
     
      - 390000*r(40,Kot) - 400000*r(41,Kot) - 410000*r(42,Kot) - 420000*r(43,Kot) - 430000*r(44,Kot) - 440000*r(45,Kot) - 450000*r(46,Kot) - 460000*r(47,Kot) - 470000*r(48,Kot) - 480000*r(49,Kot) - 490000*r(50,Kot) - 500000*r(51,Kot) - 510000*r(52,Kot)
     
      - 520000*r(53,Kot) - 530000*r(54,Kot) - 540000*r(55,Kot) - 550000*r(56,Kot) - 560000*r(57,Kot) - 570000*r(58,Kot) - 580000*r(59,Kot) - 590000*r(60,Kot) - 600000*r(61,Kot) - 610000*r(62,Kot) - 620000*r(63,Kot) - 630000*r(64,Kot) - 640000*r(65,Kot)
     
      - 650000*r(66,Kot) - 660000*r(67,Kot) - 670000*r(68,Kot) - 680000*r(69,Kot) - 690000*r(70,Kot) - 700000*r(71,Kot) - 710000*r(72,Kot) - 720000*r(73,Kot) - 730000*r(74,Kot) - 740000*r(75,Kot) - 750000*r(76,Kot) - 760000*r(77,Kot) - 770000*r(78,Kot)
     
      - 780000*r(79,Kot) - 790000*r(80,Kot) - 800000*r(81,Kot) - 810000*r(82,Kot) - 820000*r(83,Kot) - 830000*r(84,Kot) - 840000*r(85,Kot) - 850000*r(86,Kot) - 860000*r(87,Kot) - 870000*r(88,Kot) - 880000*r(89,Kot) - 890000*r(90,Kot) - 900000*r(91,Kot)
     
      - 910000*r(92,Kot) - 920000*r(93,Kot) - 930000*r(94,Kot) - 940000*r(95,Kot) - 950000*r(96,Kot) - 960000*r(97,Kot) - 970000*r(98,Kot) - 980000*r(99,Kot) - 990000*r(100,Kot) - 1000000*r(101,Kot) - 1010000*r(102,Kot) - 1020000*r(103,Kot)
     
      - 1030000*r(104,Kot) - 1040000*r(105,Kot) - 1050000*r(106,Kot) - 1060000*r(107,Kot) =L= 0 ; (LHS = 0)
     
USAGE(Mak)..  - 0.8*y(Mas) + 4.8*y(Hsel) - 10000*r(2,Mak) - 20000*r(3,Mak) - 30000*r(4,Mak) - 40000*r(5,Mak) - 50000*r(6,Mak) - 60000*r(7,Mak) - 70000*r(8,Mak) - 80000*r(9,Mak) - 90000*r(10,Mak) - 100000*r(11,Mak) - 110000*r(12,Mak) - 120000*r(13,Mak)
     
      - 130000*r(14,Mak) - 140000*r(15,Mak) - 150000*r(16,Mak) - 160000*r(17,Mak) - 170000*r(18,Mak) - 180000*r(19,Mak) - 190000*r(20,Mak) - 200000*r(21,Mak) - 210000*r(22,Mak) - 220000*r(23,Mak) - 230000*r(24,Mak) - 240000*r(25,Mak) - 250000*r(26,Mak)
     
      - 260000*r(27,Mak) - 270000*r(28,Mak) - 280000*r(29,Mak) - 290000*r(30,Mak) - 300000*r(31,Mak) - 310000*r(32,Mak) - 320000*r(33,Mak) - 330000*r(34,Mak) - 340000*r(35,Mak) - 350000*r(36,Mak) - 360000*r(37,Mak) - 370000*r(38,Mak) - 380000*r(39,Mak)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/17/17 16:42:05 Page 17
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 341


     USAGE  =L=  We have to buy material (or produce as byproducts) to be able to produce products     
     
      - 390000*r(40,Mak) - 400000*r(41,Mak) - 410000*r(42,Mak) - 420000*r(43,Mak) - 430000*r(44,Mak) - 440000*r(45,Mak) - 450000*r(46,Mak) - 460000*r(47,Mak) - 470000*r(48,Mak) - 480000*r(49,Mak) - 490000*r(50,Mak) - 500000*r(51,Mak) - 510000*r(52,Mak)
     
      - 520000*r(53,Mak) - 530000*r(54,Mak) - 540000*r(55,Mak) - 550000*r(56,Mak) - 560000*r(57,Mak) - 570000*r(58,Mak) - 580000*r(59,Mak) - 590000*r(60,Mak) - 600000*r(61,Mak) - 610000*r(62,Mak) - 620000*r(63,Mak) - 630000*r(64,Mak) - 640000*r(65,Mak)
     
      - 650000*r(66,Mak) - 660000*r(67,Mak) - 670000*r(68,Mak) - 680000*r(69,Mak) - 690000*r(70,Mak) - 700000*r(71,Mak) - 710000*r(72,Mak) - 720000*r(73,Mak) - 730000*r(74,Mak) - 740000*r(75,Mak) - 750000*r(76,Mak) - 760000*r(77,Mak) - 770000*r(78,Mak)
     
      - 780000*r(79,Mak) - 790000*r(80,Mak) - 800000*r(81,Mak) - 810000*r(82,Mak) - 820000*r(83,Mak) - 830000*r(84,Mak) - 840000*r(85,Mak) - 850000*r(86,Mak) - 860000*r(87,Mak) - 870000*r(88,Mak) - 880000*r(89,Mak) - 890000*r(90,Mak) - 900000*r(91,Mak)
     
      - 910000*r(92,Mak) - 920000*r(93,Mak) - 930000*r(94,Mak) - 940000*r(95,Mak) - 950000*r(96,Mak) - 960000*r(97,Mak) - 970000*r(98,Mak) - 980000*r(99,Mak) - 990000*r(100,Mak) - 1000000*r(101,Mak) - 1010000*r(102,Mak) - 1020000*r(103,Mak)
     
      - 1030000*r(104,Mak) - 1040000*r(105,Mak) - 1050000*r(106,Mak) - 1060000*r(107,Mak) =L= 0 ; (LHS = 0)
     
USAGE(Kuk)..  - 0.8*y(Kus) - 1.6*y(Kuv) + y(Pap) - 10000*r(2,Kuk) - 20000*r(3,Kuk) - 30000*r(4,Kuk) - 40000*r(5,Kuk) - 50000*r(6,Kuk) - 60000*r(7,Kuk) - 70000*r(8,Kuk) - 80000*r(9,Kuk) - 90000*r(10,Kuk) - 100000*r(11,Kuk) - 110000*r(12,Kuk)
     
      - 120000*r(13,Kuk) - 130000*r(14,Kuk) - 140000*r(15,Kuk) - 150000*r(16,Kuk) - 160000*r(17,Kuk) - 170000*r(18,Kuk) - 180000*r(19,Kuk) - 190000*r(20,Kuk) - 200000*r(21,Kuk) - 210000*r(22,Kuk) - 220000*r(23,Kuk) - 230000*r(24,Kuk) - 240000*r(25,Kuk)
     
      - 250000*r(26,Kuk) - 260000*r(27,Kuk) - 270000*r(28,Kuk) - 280000*r(29,Kuk) - 290000*r(30,Kuk) - 300000*r(31,Kuk) - 310000*r(32,Kuk) - 320000*r(33,Kuk) - 330000*r(34,Kuk) - 340000*r(35,Kuk) - 350000*r(36,Kuk) - 360000*r(37,Kuk) - 370000*r(38,Kuk)
     
      - 380000*r(39,Kuk) - 390000*r(40,Kuk) - 400000*r(41,Kuk) - 410000*r(42,Kuk) - 420000*r(43,Kuk) - 430000*r(44,Kuk) - 440000*r(45,Kuk) - 450000*r(46,Kuk) - 460000*r(47,Kuk) - 470000*r(48,Kuk) - 480000*r(49,Kuk) - 490000*r(50,Kuk) - 500000*r(51,Kuk)
     
      - 510000*r(52,Kuk) - 520000*r(53,Kuk) - 530000*r(54,Kuk) - 540000*r(55,Kuk) - 550000*r(56,Kuk) - 560000*r(57,Kuk) - 570000*r(58,Kuk) - 580000*r(59,Kuk) - 590000*r(60,Kuk) - 600000*r(61,Kuk) - 610000*r(62,Kuk) - 620000*r(63,Kuk) - 630000*r(64,Kuk)
     
      - 640000*r(65,Kuk) - 650000*r(66,Kuk) - 660000*r(67,Kuk) - 670000*r(68,Kuk) - 680000*r(69,Kuk) - 690000*r(70,Kuk) - 700000*r(71,Kuk) - 710000*r(72,Kuk) - 720000*r(73,Kuk) - 730000*r(74,Kuk) - 740000*r(75,Kuk) - 750000*r(76,Kuk) - 760000*r(77,Kuk)
     
      - 770000*r(78,Kuk) - 780000*r(79,Kuk) - 790000*r(80,Kuk) - 800000*r(81,Kuk) - 810000*r(82,Kuk) - 820000*r(83,Kuk) - 830000*r(84,Kuk) - 840000*r(85,Kuk) - 850000*r(86,Kuk) - 860000*r(87,Kuk) - 870000*r(88,Kuk) - 880000*r(89,Kuk) - 890000*r(90,Kuk)
     
      - 900000*r(91,Kuk) - 910000*r(92,Kuk) - 920000*r(93,Kuk) - 930000*r(94,Kuk) - 940000*r(95,Kuk) - 950000*r(96,Kuk) - 960000*r(97,Kuk) - 970000*r(98,Kuk) - 980000*r(99,Kuk) - 990000*r(100,Kuk) - 1000000*r(101,Kuk) - 1010000*r(102,Kuk)
     
      - 1020000*r(103,Kuk) - 1030000*r(104,Kuk) - 1040000*r(105,Kuk) - 1050000*r(106,Kuk) - 1060000*r(107,Kuk) =L= 0 ; (LHS = 0)
     
USAGE(Kok)..  - 0.8*y(Kos) - 1.6*y(Kov) + 4.2*y(Lsel) - 10000*r(2,Kok) - 20000*r(3,Kok) - 30000*r(4,Kok) - 40000*r(5,Kok) - 50000*r(6,Kok) - 60000*r(7,Kok) - 70000*r(8,Kok) - 80000*r(9,Kok) - 90000*r(10,Kok) - 100000*r(11,Kok) - 110000*r(12,Kok)
     
      - 120000*r(13,Kok) - 130000*r(14,Kok) - 140000*r(15,Kok) - 150000*r(16,Kok) - 160000*r(17,Kok) - 170000*r(18,Kok) - 180000*r(19,Kok) - 190000*r(20,Kok) - 200000*r(21,Kok) - 210000*r(22,Kok) - 220000*r(23,Kok) - 230000*r(24,Kok) - 240000*r(25,Kok)
     
      - 250000*r(26,Kok) - 260000*r(27,Kok) - 270000*r(28,Kok) - 280000*r(29,Kok) - 290000*r(30,Kok) - 300000*r(31,Kok) - 310000*r(32,Kok) - 320000*r(33,Kok) - 330000*r(34,Kok) - 340000*r(35,Kok) - 350000*r(36,Kok) - 360000*r(37,Kok) - 370000*r(38,Kok)
     
      - 380000*r(39,Kok) - 390000*r(40,Kok) - 400000*r(41,Kok) - 410000*r(42,Kok) - 420000*r(43,Kok) - 430000*r(44,Kok) - 440000*r(45,Kok) - 450000*r(46,Kok) - 460000*r(47,Kok) - 470000*r(48,Kok) - 480000*r(49,Kok) - 490000*r(50,Kok) - 500000*r(51,Kok)
     
      - 510000*r(52,Kok) - 520000*r(53,Kok) - 530000*r(54,Kok) - 540000*r(55,Kok) - 550000*r(56,Kok) - 560000*r(57,Kok) - 570000*r(58,Kok) - 580000*r(59,Kok) - 590000*r(60,Kok) - 600000*r(61,Kok) - 610000*r(62,Kok) - 620000*r(63,Kok) - 630000*r(64,Kok)
     
      - 640000*r(65,Kok) - 650000*r(66,Kok) - 660000*r(67,Kok) - 670000*r(68,Kok) - 680000*r(69,Kok) - 690000*r(70,Kok) - 700000*r(71,Kok) - 710000*r(72,Kok) - 720000*r(73,Kok) - 730000*r(74,Kok) - 740000*r(75,Kok) - 750000*r(76,Kok) - 760000*r(77,Kok)
     
      - 770000*r(78,Kok) - 780000*r(79,Kok) - 790000*r(80,Kok) - 800000*r(81,Kok) - 810000*r(82,Kok) - 820000*r(83,Kok) - 830000*r(84,Kok) - 840000*r(85,Kok) - 850000*r(86,Kok) - 860000*r(87,Kok) - 870000*r(88,Kok) - 880000*r(89,Kok) - 890000*r(90,Kok)
     
      - 900000*r(91,Kok) - 910000*r(92,Kok) - 920000*r(93,Kok) - 930000*r(94,Kok) - 940000*r(95,Kok) - 950000*r(96,Kok) - 960000*r(97,Kok) - 970000*r(98,Kok) - 980000*r(99,Kok) - 990000*r(100,Kok) - 1000000*r(101,Kok) - 1010000*r(102,Kok)
     
      - 1020000*r(103,Kok) - 1030000*r(104,Kok) - 1040000*r(105,Kok) - 1050000*r(106,Kok) - 1060000*r(107,Kok) =L= 0 ; (LHS = 0)
     
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/17/17 16:42:05 Page 18
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 341


---- Sold_Prod  =L=  we cant sell more than we produce

Sold_Prod(Mas)..  - y(Mas) + 10000*u(2,Mas,EU) + 10000*u(2,Mas,IE) + 10000*u(2,Mas,PA) + 10000*u(2,Mas,KI) + 20000*u(3,Mas,EU) + 20000*u(3,Mas,IE) + 20000*u(3,Mas,PA) + 20000*u(3,Mas,KI) + 30000*u(4,Mas,EU) + 30000*u(4,Mas,IE) + 30000*u(4,Mas,PA)
     
      + 30000*u(4,Mas,KI) + 40000*u(5,Mas,EU) + 40000*u(5,Mas,IE) + 40000*u(5,Mas,PA) + 40000*u(5,Mas,KI) + 50000*u(6,Mas,EU) + 50000*u(6,Mas,IE) + 50000*u(6,Mas,PA) + 50000*u(6,Mas,KI) + 60000*u(7,Mas,EU) + 60000*u(7,Mas,IE) + 60000*u(7,Mas,PA)
     
      + 60000*u(7,Mas,KI) + 70000*u(8,Mas,EU) + 70000*u(8,Mas,IE) + 70000*u(8,Mas,PA) + 70000*u(8,Mas,KI) + 80000*u(9,Mas,EU) + 80000*u(9,Mas,IE) + 80000*u(9,Mas,PA) + 80000*u(9,Mas,KI) + 90000*u(10,Mas,EU) + 90000*u(10,Mas,IE) + 90000*u(10,Mas,PA)
     
      + 90000*u(10,Mas,KI) + 100000*u(11,Mas,EU) + 100000*u(11,Mas,IE) + 100000*u(11,Mas,PA) + 100000*u(11,Mas,KI) + 110000*u(12,Mas,EU) + 110000*u(12,Mas,IE) + 110000*u(12,Mas,PA) + 110000*u(12,Mas,KI) + 120000*u(13,Mas,EU) + 120000*u(13,Mas,IE)
     
      + 120000*u(13,Mas,PA) + 120000*u(13,Mas,KI) + 130000*u(14,Mas,EU) + 130000*u(14,Mas,IE) + 130000*u(14,Mas,PA) + 130000*u(14,Mas,KI) + 140000*u(15,Mas,EU) + 140000*u(15,Mas,IE) + 140000*u(15,Mas,PA) + 140000*u(15,Mas,KI) + 150000*u(16,Mas,EU)
     
      + 150000*u(16,Mas,IE) + 150000*u(16,Mas,PA) + 150000*u(16,Mas,KI) + 160000*u(17,Mas,EU) + 160000*u(17,Mas,IE) + 160000*u(17,Mas,PA) + 160000*u(17,Mas,KI) + 170000*u(18,Mas,EU) + 170000*u(18,Mas,IE) + 170000*u(18,Mas,PA) + 170000*u(18,Mas,KI)
     
      + 180000*u(19,Mas,EU) + 180000*u(19,Mas,IE) + 180000*u(19,Mas,PA) + 180000*u(19,Mas,KI) + 190000*u(20,Mas,EU) + 190000*u(20,Mas,IE) + 190000*u(20,Mas,PA) + 190000*u(20,Mas,KI) + 200000*u(21,Mas,EU) + 200000*u(21,Mas,IE) + 200000*u(21,Mas,PA)
     
      + 200000*u(21,Mas,KI) + 210000*u(22,Mas,EU) + 210000*u(22,Mas,IE) + 210000*u(22,Mas,PA) + 210000*u(22,Mas,KI) + 220000*u(23,Mas,EU) + 220000*u(23,Mas,IE) + 220000*u(23,Mas,PA) + 220000*u(23,Mas,KI) =L= 0 ; (LHS = 0)
     
Sold_Prod(Kus)..  - y(Kus) =L= 0 ; (LHS = 0)
     
Sold_Prod(Kos)..  - y(Kos) + 10000*u(2,Kos,EU) + 10000*u(2,Kos,IE) + 10000*u(2,Kos,PA) + 10000*u(2,Kos,KI) + 20000*u(3,Kos,EU) + 20000*u(3,Kos,IE) + 20000*u(3,Kos,PA) + 20000*u(3,Kos,KI) + 30000*u(4,Kos,EU) + 30000*u(4,Kos,IE) + 30000*u(4,Kos,PA)
     
      + 30000*u(4,Kos,KI) + 40000*u(5,Kos,EU) + 40000*u(5,Kos,IE) + 40000*u(5,Kos,PA) + 40000*u(5,Kos,KI) + 50000*u(6,Kos,EU) + 50000*u(6,Kos,IE) + 50000*u(6,Kos,PA) + 50000*u(6,Kos,KI) + 60000*u(7,Kos,EU) + 60000*u(7,Kos,IE) + 60000*u(7,Kos,PA)
     
      + 60000*u(7,Kos,KI) + 70000*u(8,Kos,EU) + 70000*u(8,Kos,IE) + 70000*u(8,Kos,PA) + 70000*u(8,Kos,KI) + 80000*u(9,Kos,EU) + 80000*u(9,Kos,IE) + 80000*u(9,Kos,PA) + 80000*u(9,Kos,KI) + 90000*u(10,Kos,EU) + 90000*u(10,Kos,IE) + 90000*u(10,Kos,PA)
     
      + 90000*u(10,Kos,KI) + 100000*u(11,Kos,EU) + 100000*u(11,Kos,IE) + 100000*u(11,Kos,PA) + 100000*u(11,Kos,KI) + 110000*u(12,Kos,EU) + 110000*u(12,Kos,IE) + 110000*u(12,Kos,PA) + 110000*u(12,Kos,KI) + 120000*u(13,Kos,EU) + 120000*u(13,Kos,IE)
     
      + 120000*u(13,Kos,PA) + 120000*u(13,Kos,KI) + 130000*u(14,Kos,EU) + 130000*u(14,Kos,IE) + 130000*u(14,Kos,PA) + 130000*u(14,Kos,KI) + 140000*u(15,Kos,EU) + 140000*u(15,Kos,IE) + 140000*u(15,Kos,PA) + 140000*u(15,Kos,KI) + 150000*u(16,Kos,EU)
     
      + 150000*u(16,Kos,IE) + 150000*u(16,Kos,PA) + 150000*u(16,Kos,KI) + 160000*u(17,Kos,EU) + 160000*u(17,Kos,IE) + 160000*u(17,Kos,PA) + 160000*u(17,Kos,KI) + 170000*u(18,Kos,EU) + 170000*u(18,Kos,IE) + 170000*u(18,Kos,PA) + 170000*u(18,Kos,KI)
     
      + 180000*u(19,Kos,EU) + 180000*u(19,Kos,IE) + 180000*u(19,Kos,PA) + 180000*u(19,Kos,KI) + 190000*u(20,Kos,EU) + 190000*u(20,Kos,IE) + 190000*u(20,Kos,PA) + 190000*u(20,Kos,KI) + 200000*u(21,Kos,EU) + 200000*u(21,Kos,IE) + 200000*u(21,Kos,PA)
     
      + 200000*u(21,Kos,KI) + 210000*u(22,Kos,EU) + 210000*u(22,Kos,IE) + 210000*u(22,Kos,PA) + 210000*u(22,Kos,KI) + 220000*u(23,Kos,EU) + 220000*u(23,Kos,IE) + 220000*u(23,Kos,PA) + 220000*u(23,Kos,KI) =L= 0 ; (LHS = 0)
     
Sold_Prod(Kuv)..  - y(Kuv) + 10000*u(2,Kuv,EU) + 10000*u(2,Kuv,IE) + 10000*u(2,Kuv,PA) + 10000*u(2,Kuv,KI) + 20000*u(3,Kuv,EU) + 20000*u(3,Kuv,IE) + 20000*u(3,Kuv,PA) + 20000*u(3,Kuv,KI) + 30000*u(4,Kuv,EU) + 30000*u(4,Kuv,IE) + 30000*u(4,Kuv,PA)
     
      + 30000*u(4,Kuv,KI) + 40000*u(5,Kuv,EU) + 40000*u(5,Kuv,IE) + 40000*u(5,Kuv,PA) + 40000*u(5,Kuv,KI) + 50000*u(6,Kuv,EU) + 50000*u(6,Kuv,IE) + 50000*u(6,Kuv,PA) + 50000*u(6,Kuv,KI) + 60000*u(7,Kuv,EU) + 60000*u(7,Kuv,IE) + 60000*u(7,Kuv,PA)
     
      + 60000*u(7,Kuv,KI) + 70000*u(8,Kuv,EU) + 70000*u(8,Kuv,IE) + 70000*u(8,Kuv,PA) + 70000*u(8,Kuv,KI) + 80000*u(9,Kuv,EU) + 80000*u(9,Kuv,IE) + 80000*u(9,Kuv,PA) + 80000*u(9,Kuv,KI) + 90000*u(10,Kuv,EU) + 90000*u(10,Kuv,IE) + 90000*u(10,Kuv,PA)
     
      + 90000*u(10,Kuv,KI) + 100000*u(11,Kuv,EU) + 100000*u(11,Kuv,IE) + 100000*u(11,Kuv,PA) + 100000*u(11,Kuv,KI) + 110000*u(12,Kuv,EU) + 110000*u(12,Kuv,IE) + 110000*u(12,Kuv,PA) + 110000*u(12,Kuv,KI) + 120000*u(13,Kuv,EU) + 120000*u(13,Kuv,IE)
     
      + 120000*u(13,Kuv,PA) + 120000*u(13,Kuv,KI) + 130000*u(14,Kuv,EU) + 130000*u(14,Kuv,IE) + 130000*u(14,Kuv,PA) + 130000*u(14,Kuv,KI) + 140000*u(15,Kuv,EU) + 140000*u(15,Kuv,IE) + 140000*u(15,Kuv,PA) + 140000*u(15,Kuv,KI) + 150000*u(16,Kuv,EU)
     
      + 150000*u(16,Kuv,IE) + 150000*u(16,Kuv,PA) + 150000*u(16,Kuv,KI) + 160000*u(17,Kuv,EU) + 160000*u(17,Kuv,IE) + 160000*u(17,Kuv,PA) + 160000*u(17,Kuv,KI) + 170000*u(18,Kuv,EU) + 170000*u(18,Kuv,IE) + 170000*u(18,Kuv,PA) + 170000*u(18,Kuv,KI)
     
      + 180000*u(19,Kuv,EU) + 180000*u(19,Kuv,IE) + 180000*u(19,Kuv,PA) + 180000*u(19,Kuv,KI) + 190000*u(20,Kuv,EU) + 190000*u(20,Kuv,IE) + 190000*u(20,Kuv,PA) + 190000*u(20,Kuv,KI) + 200000*u(21,Kuv,EU) + 200000*u(21,Kuv,IE) + 200000*u(21,Kuv,PA)
     
      + 200000*u(21,Kuv,KI) + 210000*u(22,Kuv,EU) + 210000*u(22,Kuv,IE) + 210000*u(22,Kuv,PA) + 210000*u(22,Kuv,KI) + 220000*u(23,Kuv,EU) + 220000*u(23,Kuv,IE) + 220000*u(23,Kuv,PA) + 220000*u(23,Kuv,KI) =L= 0 ; (LHS = 0)
     
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/17/17 16:42:05 Page 19
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 341


     Sold_Prod  =L=  we cant sell more than we produce

Sold_Prod(Kov)..  - y(Kov) + 10000*u(2,Kov,EU) + 10000*u(2,Kov,IE) + 10000*u(2,Kov,PA) + 10000*u(2,Kov,KI) + 20000*u(3,Kov,EU) + 20000*u(3,Kov,IE) + 20000*u(3,Kov,PA) + 20000*u(3,Kov,KI) + 30000*u(4,Kov,EU) + 30000*u(4,Kov,IE) + 30000*u(4,Kov,PA)
     
      + 30000*u(4,Kov,KI) + 40000*u(5,Kov,EU) + 40000*u(5,Kov,IE) + 40000*u(5,Kov,PA) + 40000*u(5,Kov,KI) + 50000*u(6,Kov,EU) + 50000*u(6,Kov,IE) + 50000*u(6,Kov,PA) + 50000*u(6,Kov,KI) + 60000*u(7,Kov,EU) + 60000*u(7,Kov,IE) + 60000*u(7,Kov,PA)
     
      + 60000*u(7,Kov,KI) + 70000*u(8,Kov,EU) + 70000*u(8,Kov,IE) + 70000*u(8,Kov,PA) + 70000*u(8,Kov,KI) + 80000*u(9,Kov,EU) + 80000*u(9,Kov,IE) + 80000*u(9,Kov,PA) + 80000*u(9,Kov,KI) + 90000*u(10,Kov,EU) + 90000*u(10,Kov,IE) + 90000*u(10,Kov,PA)
     
      + 90000*u(10,Kov,KI) + 100000*u(11,Kov,EU) + 100000*u(11,Kov,IE) + 100000*u(11,Kov,PA) + 100000*u(11,Kov,KI) + 110000*u(12,Kov,EU) + 110000*u(12,Kov,IE) + 110000*u(12,Kov,PA) + 110000*u(12,Kov,KI) + 120000*u(13,Kov,EU) + 120000*u(13,Kov,IE)
     
      + 120000*u(13,Kov,PA) + 120000*u(13,Kov,KI) + 130000*u(14,Kov,EU) + 130000*u(14,Kov,IE) + 130000*u(14,Kov,PA) + 130000*u(14,Kov,KI) + 140000*u(15,Kov,EU) + 140000*u(15,Kov,IE) + 140000*u(15,Kov,PA) + 140000*u(15,Kov,KI) + 150000*u(16,Kov,EU)
     
      + 150000*u(16,Kov,IE) + 150000*u(16,Kov,PA) + 150000*u(16,Kov,KI) + 160000*u(17,Kov,EU) + 160000*u(17,Kov,IE) + 160000*u(17,Kov,PA) + 160000*u(17,Kov,KI) + 170000*u(18,Kov,EU) + 170000*u(18,Kov,IE) + 170000*u(18,Kov,PA) + 170000*u(18,Kov,KI)
     
      + 180000*u(19,Kov,EU) + 180000*u(19,Kov,IE) + 180000*u(19,Kov,PA) + 180000*u(19,Kov,KI) + 190000*u(20,Kov,EU) + 190000*u(20,Kov,IE) + 190000*u(20,Kov,PA) + 190000*u(20,Kov,KI) + 200000*u(21,Kov,EU) + 200000*u(21,Kov,IE) + 200000*u(21,Kov,PA)
     
      + 200000*u(21,Kov,KI) + 210000*u(22,Kov,EU) + 210000*u(22,Kov,IE) + 210000*u(22,Kov,PA) + 210000*u(22,Kov,KI) + 220000*u(23,Kov,EU) + 220000*u(23,Kov,IE) + 220000*u(23,Kov,PA) + 220000*u(23,Kov,KI) =L= 0 ; (LHS = 0)
     
Sold_Prod(Hsel)..  - y(Hsel) + 10000*u(2,Hsel,EU) + 10000*u(2,Hsel,IE) + 10000*u(2,Hsel,PA) + 10000*u(2,Hsel,KI) + 20000*u(3,Hsel,EU) + 20000*u(3,Hsel,IE) + 20000*u(3,Hsel,PA) + 20000*u(3,Hsel,KI) + 30000*u(4,Hsel,EU) + 30000*u(4,Hsel,IE)
     
      + 30000*u(4,Hsel,PA) + 30000*u(4,Hsel,KI) + 40000*u(5,Hsel,EU) + 40000*u(5,Hsel,IE) + 40000*u(5,Hsel,PA) + 40000*u(5,Hsel,KI) + 50000*u(6,Hsel,EU) + 50000*u(6,Hsel,IE) + 50000*u(6,Hsel,PA) + 50000*u(6,Hsel,KI) + 60000*u(7,Hsel,EU)
     
      + 60000*u(7,Hsel,IE) + 60000*u(7,Hsel,PA) + 60000*u(7,Hsel,KI) + 70000*u(8,Hsel,EU) + 70000*u(8,Hsel,IE) + 70000*u(8,Hsel,PA) + 70000*u(8,Hsel,KI) + 80000*u(9,Hsel,EU) + 80000*u(9,Hsel,IE) + 80000*u(9,Hsel,PA) + 80000*u(9,Hsel,KI)
     
      + 90000*u(10,Hsel,EU) + 90000*u(10,Hsel,IE) + 90000*u(10,Hsel,PA) + 90000*u(10,Hsel,KI) + 100000*u(11,Hsel,EU) + 100000*u(11,Hsel,IE) + 100000*u(11,Hsel,PA) + 100000*u(11,Hsel,KI) + 110000*u(12,Hsel,EU) + 110000*u(12,Hsel,IE) + 110000*u(12,Hsel,PA)
     
      + 110000*u(12,Hsel,KI) + 120000*u(13,Hsel,EU) + 120000*u(13,Hsel,IE) + 120000*u(13,Hsel,PA) + 120000*u(13,Hsel,KI) + 130000*u(14,Hsel,EU) + 130000*u(14,Hsel,IE) + 130000*u(14,Hsel,PA) + 130000*u(14,Hsel,KI) + 140000*u(15,Hsel,EU)
     
      + 140000*u(15,Hsel,IE) + 140000*u(15,Hsel,PA) + 140000*u(15,Hsel,KI) + 150000*u(16,Hsel,EU) + 150000*u(16,Hsel,IE) + 150000*u(16,Hsel,PA) + 150000*u(16,Hsel,KI) + 160000*u(17,Hsel,EU) + 160000*u(17,Hsel,IE) + 160000*u(17,Hsel,PA)
     
      + 160000*u(17,Hsel,KI) + 170000*u(18,Hsel,EU) + 170000*u(18,Hsel,IE) + 170000*u(18,Hsel,PA) + 170000*u(18,Hsel,KI) + 180000*u(19,Hsel,EU) + 180000*u(19,Hsel,IE) + 180000*u(19,Hsel,PA) + 180000*u(19,Hsel,KI) + 190000*u(20,Hsel,EU)
     
      + 190000*u(20,Hsel,IE) + 190000*u(20,Hsel,PA) + 190000*u(20,Hsel,KI) + 200000*u(21,Hsel,EU) + 200000*u(21,Hsel,IE) + 200000*u(21,Hsel,PA) + 200000*u(21,Hsel,KI) + 210000*u(22,Hsel,EU) + 210000*u(22,Hsel,IE) + 210000*u(22,Hsel,PA)
     
      + 210000*u(22,Hsel,KI) + 220000*u(23,Hsel,EU) + 220000*u(23,Hsel,IE) + 220000*u(23,Hsel,PA) + 220000*u(23,Hsel,KI) =L= 0 ; (LHS = 0)
     
Sold_Prod(Lsel)..  - y(Lsel) + 10000*u(2,Lsel,EU) + 10000*u(2,Lsel,IE) + 10000*u(2,Lsel,PA) + 10000*u(2,Lsel,KI) + 20000*u(3,Lsel,EU) + 20000*u(3,Lsel,IE) + 20000*u(3,Lsel,PA) + 20000*u(3,Lsel,KI) + 30000*u(4,Lsel,EU) + 30000*u(4,Lsel,IE)
     
      + 30000*u(4,Lsel,PA) + 30000*u(4,Lsel,KI) + 40000*u(5,Lsel,EU) + 40000*u(5,Lsel,IE) + 40000*u(5,Lsel,PA) + 40000*u(5,Lsel,KI) + 50000*u(6,Lsel,EU) + 50000*u(6,Lsel,IE) + 50000*u(6,Lsel,PA) + 50000*u(6,Lsel,KI) + 60000*u(7,Lsel,EU)
     
      + 60000*u(7,Lsel,IE) + 60000*u(7,Lsel,PA) + 60000*u(7,Lsel,KI) + 70000*u(8,Lsel,EU) + 70000*u(8,Lsel,IE) + 70000*u(8,Lsel,PA) + 70000*u(8,Lsel,KI) + 80000*u(9,Lsel,EU) + 80000*u(9,Lsel,IE) + 80000*u(9,Lsel,PA) + 80000*u(9,Lsel,KI)
     
      + 90000*u(10,Lsel,EU) + 90000*u(10,Lsel,IE) + 90000*u(10,Lsel,PA) + 90000*u(10,Lsel,KI) + 100000*u(11,Lsel,EU) + 100000*u(11,Lsel,IE) + 100000*u(11,Lsel,PA) + 100000*u(11,Lsel,KI) + 110000*u(12,Lsel,EU) + 110000*u(12,Lsel,IE) + 110000*u(12,Lsel,PA)
     
      + 110000*u(12,Lsel,KI) + 120000*u(13,Lsel,EU) + 120000*u(13,Lsel,IE) + 120000*u(13,Lsel,PA) + 120000*u(13,Lsel,KI) + 130000*u(14,Lsel,EU) + 130000*u(14,Lsel,IE) + 130000*u(14,Lsel,PA) + 130000*u(14,Lsel,KI) + 140000*u(15,Lsel,EU)
     
      + 140000*u(15,Lsel,IE) + 140000*u(15,Lsel,PA) + 140000*u(15,Lsel,KI) + 150000*u(16,Lsel,EU) + 150000*u(16,Lsel,IE) + 150000*u(16,Lsel,PA) + 150000*u(16,Lsel,KI) + 160000*u(17,Lsel,EU) + 160000*u(17,Lsel,IE) + 160000*u(17,Lsel,PA)
     
      + 160000*u(17,Lsel,KI) + 170000*u(18,Lsel,EU) + 170000*u(18,Lsel,IE) + 170000*u(18,Lsel,PA) + 170000*u(18,Lsel,KI) + 180000*u(19,Lsel,EU) + 180000*u(19,Lsel,IE) + 180000*u(19,Lsel,PA) + 180000*u(19,Lsel,KI) + 190000*u(20,Lsel,EU)
     
      + 190000*u(20,Lsel,IE) + 190000*u(20,Lsel,PA) + 190000*u(20,Lsel,KI) + 200000*u(21,Lsel,EU) + 200000*u(21,Lsel,IE) + 200000*u(21,Lsel,PA) + 200000*u(21,Lsel,KI) + 210000*u(22,Lsel,EU) + 210000*u(22,Lsel,IE) + 210000*u(22,Lsel,PA)
     
      + 210000*u(22,Lsel,KI) + 220000*u(23,Lsel,EU) + 220000*u(23,Lsel,IE) + 220000*u(23,Lsel,PA) + 220000*u(23,Lsel,KI) =L= 0 ; (LHS = 0)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/17/17 16:42:05 Page 20
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 341


     Sold_Prod  =L=  we cant sell more than we produce

Sold_Prod(Pap)..  - y(Pap) + 10000*u(2,Pap,EU) + 10000*u(2,Pap,IE) + 10000*u(2,Pap,PA) + 10000*u(2,Pap,KI) + 20000*u(3,Pap,EU) + 20000*u(3,Pap,IE) + 20000*u(3,Pap,PA) + 20000*u(3,Pap,KI) + 30000*u(4,Pap,EU) + 30000*u(4,Pap,IE) + 30000*u(4,Pap,PA)
     
      + 30000*u(4,Pap,KI) + 40000*u(5,Pap,EU) + 40000*u(5,Pap,IE) + 40000*u(5,Pap,PA) + 40000*u(5,Pap,KI) + 50000*u(6,Pap,EU) + 50000*u(6,Pap,IE) + 50000*u(6,Pap,PA) + 50000*u(6,Pap,KI) + 60000*u(7,Pap,EU) + 60000*u(7,Pap,IE) + 60000*u(7,Pap,PA)
     
      + 60000*u(7,Pap,KI) + 70000*u(8,Pap,EU) + 70000*u(8,Pap,IE) + 70000*u(8,Pap,PA) + 70000*u(8,Pap,KI) + 80000*u(9,Pap,EU) + 80000*u(9,Pap,IE) + 80000*u(9,Pap,PA) + 80000*u(9,Pap,KI) + 90000*u(10,Pap,EU) + 90000*u(10,Pap,IE) + 90000*u(10,Pap,PA)
     
      + 90000*u(10,Pap,KI) + 100000*u(11,Pap,EU) + 100000*u(11,Pap,IE) + 100000*u(11,Pap,PA) + 100000*u(11,Pap,KI) + 110000*u(12,Pap,EU) + 110000*u(12,Pap,IE) + 110000*u(12,Pap,PA) + 110000*u(12,Pap,KI) + 120000*u(13,Pap,EU) + 120000*u(13,Pap,IE)
     
      + 120000*u(13,Pap,PA) + 120000*u(13,Pap,KI) + 130000*u(14,Pap,EU) + 130000*u(14,Pap,IE) + 130000*u(14,Pap,PA) + 130000*u(14,Pap,KI) + 140000*u(15,Pap,EU) + 140000*u(15,Pap,IE) + 140000*u(15,Pap,PA) + 140000*u(15,Pap,KI) + 150000*u(16,Pap,EU)
     
      + 150000*u(16,Pap,IE) + 150000*u(16,Pap,PA) + 150000*u(16,Pap,KI) + 160000*u(17,Pap,EU) + 160000*u(17,Pap,IE) + 160000*u(17,Pap,PA) + 160000*u(17,Pap,KI) + 170000*u(18,Pap,EU) + 170000*u(18,Pap,IE) + 170000*u(18,Pap,PA) + 170000*u(18,Pap,KI)
     
      + 180000*u(19,Pap,EU) + 180000*u(19,Pap,IE) + 180000*u(19,Pap,PA) + 180000*u(19,Pap,KI) + 190000*u(20,Pap,EU) + 190000*u(20,Pap,IE) + 190000*u(20,Pap,PA) + 190000*u(20,Pap,KI) + 200000*u(21,Pap,EU) + 200000*u(21,Pap,IE) + 200000*u(21,Pap,PA)
     
      + 200000*u(21,Pap,KI) + 210000*u(22,Pap,EU) + 210000*u(22,Pap,IE) + 210000*u(22,Pap,PA) + 210000*u(22,Pap,KI) + 220000*u(23,Pap,EU) + 220000*u(23,Pap,IE) + 220000*u(23,Pap,PA) + 220000*u(23,Pap,KI) =L= 0 ; (LHS = 0)
     

---- Barges_buy  =L=  ensure we only pick one value n for barges for each timber i

Barges_buy(Mat)..  r(1,Mat) + r(2,Mat) + r(3,Mat) + r(4,Mat) + r(5,Mat) + r(6,Mat) + r(7,Mat) + r(8,Mat) + r(9,Mat) + r(10,Mat) + r(11,Mat) + r(12,Mat) + r(13,Mat) + r(14,Mat) + r(15,Mat) + r(16,Mat) + r(17,Mat) + r(18,Mat) + r(19,Mat) + r(20,Mat)
     
      + r(21,Mat) + r(22,Mat) + r(23,Mat) + r(24,Mat) + r(25,Mat) + r(26,Mat) + r(27,Mat) + r(28,Mat) + r(29,Mat) + r(30,Mat) + r(31,Mat) + r(32,Mat) + r(33,Mat) + r(34,Mat) + r(35,Mat) + r(36,Mat) + r(37,Mat) + r(38,Mat) + r(39,Mat) + r(40,Mat)
     
      + r(41,Mat) + r(42,Mat) + r(43,Mat) + r(44,Mat) + r(45,Mat) + r(46,Mat) + r(47,Mat) + r(48,Mat) + r(49,Mat) + r(50,Mat) + r(51,Mat) + r(52,Mat) + r(53,Mat) + r(54,Mat) + r(55,Mat) + r(56,Mat) + r(57,Mat) + r(58,Mat) + r(59,Mat) + r(60,Mat)
     
      + r(61,Mat) + r(62,Mat) + r(63,Mat) + r(64,Mat) + r(65,Mat) + r(66,Mat) + r(67,Mat) + r(68,Mat) + r(69,Mat) + r(70,Mat) + r(71,Mat) + r(72,Mat) + r(73,Mat) + r(74,Mat) + r(75,Mat) + r(76,Mat) + r(77,Mat) + r(78,Mat) + r(79,Mat) + r(80,Mat)
     
      + r(81,Mat) + r(82,Mat) + r(83,Mat) + r(84,Mat) + r(85,Mat) + r(86,Mat) + r(87,Mat) + r(88,Mat) + r(89,Mat) + r(90,Mat) + r(91,Mat) + r(92,Mat) + r(93,Mat) + r(94,Mat) + r(95,Mat) + r(96,Mat) + r(97,Mat) + r(98,Mat) + r(99,Mat) + r(100,Mat)
     
      + r(101,Mat) + r(102,Mat) + r(103,Mat) + r(104,Mat) + r(105,Mat) + r(106,Mat) + r(107,Mat) =L= 1 ; (LHS = 0)
     
Barges_buy(Kut)..  r(1,Kut) + r(2,Kut) + r(3,Kut) + r(4,Kut) + r(5,Kut) + r(6,Kut) + r(7,Kut) + r(8,Kut) + r(9,Kut) + r(10,Kut) + r(11,Kut) + r(12,Kut) + r(13,Kut) + r(14,Kut) + r(15,Kut) + r(16,Kut) + r(17,Kut) + r(18,Kut) + r(19,Kut) + r(20,Kut)
     
      + r(21,Kut) + r(22,Kut) + r(23,Kut) + r(24,Kut) + r(25,Kut) + r(26,Kut) + r(27,Kut) + r(28,Kut) + r(29,Kut) + r(30,Kut) + r(31,Kut) + r(32,Kut) + r(33,Kut) + r(34,Kut) + r(35,Kut) + r(36,Kut) + r(37,Kut) + r(38,Kut) + r(39,Kut) + r(40,Kut)
     
      + r(41,Kut) + r(42,Kut) + r(43,Kut) + r(44,Kut) + r(45,Kut) + r(46,Kut) + r(47,Kut) + r(48,Kut) + r(49,Kut) + r(50,Kut) + r(51,Kut) + r(52,Kut) + r(53,Kut) + r(54,Kut) + r(55,Kut) + r(56,Kut) + r(57,Kut) + r(58,Kut) + r(59,Kut) + r(60,Kut)
     
      + r(61,Kut) + r(62,Kut) + r(63,Kut) + r(64,Kut) + r(65,Kut) + r(66,Kut) + r(67,Kut) + r(68,Kut) + r(69,Kut) + r(70,Kut) + r(71,Kut) + r(72,Kut) + r(73,Kut) + r(74,Kut) + r(75,Kut) + r(76,Kut) + r(77,Kut) + r(78,Kut) + r(79,Kut) + r(80,Kut)
     
      + r(81,Kut) + r(82,Kut) + r(83,Kut) + r(84,Kut) + r(85,Kut) + r(86,Kut) + r(87,Kut) + r(88,Kut) + r(89,Kut) + r(90,Kut) + r(91,Kut) + r(92,Kut) + r(93,Kut) + r(94,Kut) + r(95,Kut) + r(96,Kut) + r(97,Kut) + r(98,Kut) + r(99,Kut) + r(100,Kut)
     
      + r(101,Kut) + r(102,Kut) + r(103,Kut) + r(104,Kut) + r(105,Kut) + r(106,Kut) + r(107,Kut) =L= 1 ; (LHS = 0)
     
Barges_buy(Kot)..  r(1,Kot) + r(2,Kot) + r(3,Kot) + r(4,Kot) + r(5,Kot) + r(6,Kot) + r(7,Kot) + r(8,Kot) + r(9,Kot) + r(10,Kot) + r(11,Kot) + r(12,Kot) + r(13,Kot) + r(14,Kot) + r(15,Kot) + r(16,Kot) + r(17,Kot) + r(18,Kot) + r(19,Kot) + r(20,Kot)
     
      + r(21,Kot) + r(22,Kot) + r(23,Kot) + r(24,Kot) + r(25,Kot) + r(26,Kot) + r(27,Kot) + r(28,Kot) + r(29,Kot) + r(30,Kot) + r(31,Kot) + r(32,Kot) + r(33,Kot) + r(34,Kot) + r(35,Kot) + r(36,Kot) + r(37,Kot) + r(38,Kot) + r(39,Kot) + r(40,Kot)
     
      + r(41,Kot) + r(42,Kot) + r(43,Kot) + r(44,Kot) + r(45,Kot) + r(46,Kot) + r(47,Kot) + r(48,Kot) + r(49,Kot) + r(50,Kot) + r(51,Kot) + r(52,Kot) + r(53,Kot) + r(54,Kot) + r(55,Kot) + r(56,Kot) + r(57,Kot) + r(58,Kot) + r(59,Kot) + r(60,Kot)
     
      + r(61,Kot) + r(62,Kot) + r(63,Kot) + r(64,Kot) + r(65,Kot) + r(66,Kot) + r(67,Kot) + r(68,Kot) + r(69,Kot) + r(70,Kot) + r(71,Kot) + r(72,Kot) + r(73,Kot) + r(74,Kot) + r(75,Kot) + r(76,Kot) + r(77,Kot) + r(78,Kot) + r(79,Kot) + r(80,Kot)
     
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/17/17 16:42:05 Page 21
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 341


     Barges_buy  =L=  ensure we only pick one value n for barges for each timber i     
     
      + r(81,Kot) + r(82,Kot) + r(83,Kot) + r(84,Kot) + r(85,Kot) + r(86,Kot) + r(87,Kot) + r(88,Kot) + r(89,Kot) + r(90,Kot) + r(91,Kot) + r(92,Kot) + r(93,Kot) + r(94,Kot) + r(95,Kot) + r(96,Kot) + r(97,Kot) + r(98,Kot) + r(99,Kot) + r(100,Kot)
     
      + r(101,Kot) + r(102,Kot) + r(103,Kot) + r(104,Kot) + r(105,Kot) + r(106,Kot) + r(107,Kot) =L= 1 ; (LHS = 0)
     
Barges_buy(Mak)..  r(1,Mak) + r(2,Mak) + r(3,Mak) + r(4,Mak) + r(5,Mak) + r(6,Mak) + r(7,Mak) + r(8,Mak) + r(9,Mak) + r(10,Mak) + r(11,Mak) + r(12,Mak) + r(13,Mak) + r(14,Mak) + r(15,Mak) + r(16,Mak) + r(17,Mak) + r(18,Mak) + r(19,Mak) + r(20,Mak)
     
      + r(21,Mak) + r(22,Mak) + r(23,Mak) + r(24,Mak) + r(25,Mak) + r(26,Mak) + r(27,Mak) + r(28,Mak) + r(29,Mak) + r(30,Mak) + r(31,Mak) + r(32,Mak) + r(33,Mak) + r(34,Mak) + r(35,Mak) + r(36,Mak) + r(37,Mak) + r(38,Mak) + r(39,Mak) + r(40,Mak)
     
      + r(41,Mak) + r(42,Mak) + r(43,Mak) + r(44,Mak) + r(45,Mak) + r(46,Mak) + r(47,Mak) + r(48,Mak) + r(49,Mak) + r(50,Mak) + r(51,Mak) + r(52,Mak) + r(53,Mak) + r(54,Mak) + r(55,Mak) + r(56,Mak) + r(57,Mak) + r(58,Mak) + r(59,Mak) + r(60,Mak)
     
      + r(61,Mak) + r(62,Mak) + r(63,Mak) + r(64,Mak) + r(65,Mak) + r(66,Mak) + r(67,Mak) + r(68,Mak) + r(69,Mak) + r(70,Mak) + r(71,Mak) + r(72,Mak) + r(73,Mak) + r(74,Mak) + r(75,Mak) + r(76,Mak) + r(77,Mak) + r(78,Mak) + r(79,Mak) + r(80,Mak)
     
      + r(81,Mak) + r(82,Mak) + r(83,Mak) + r(84,Mak) + r(85,Mak) + r(86,Mak) + r(87,Mak) + r(88,Mak) + r(89,Mak) + r(90,Mak) + r(91,Mak) + r(92,Mak) + r(93,Mak) + r(94,Mak) + r(95,Mak) + r(96,Mak) + r(97,Mak) + r(98,Mak) + r(99,Mak) + r(100,Mak)
     
      + r(101,Mak) + r(102,Mak) + r(103,Mak) + r(104,Mak) + r(105,Mak) + r(106,Mak) + r(107,Mak) =L= 1 ; (LHS = 0)
     
Barges_buy(Kuk)..  r(1,Kuk) + r(2,Kuk) + r(3,Kuk) + r(4,Kuk) + r(5,Kuk) + r(6,Kuk) + r(7,Kuk) + r(8,Kuk) + r(9,Kuk) + r(10,Kuk) + r(11,Kuk) + r(12,Kuk) + r(13,Kuk) + r(14,Kuk) + r(15,Kuk) + r(16,Kuk) + r(17,Kuk) + r(18,Kuk) + r(19,Kuk) + r(20,Kuk)
     
      + r(21,Kuk) + r(22,Kuk) + r(23,Kuk) + r(24,Kuk) + r(25,Kuk) + r(26,Kuk) + r(27,Kuk) + r(28,Kuk) + r(29,Kuk) + r(30,Kuk) + r(31,Kuk) + r(32,Kuk) + r(33,Kuk) + r(34,Kuk) + r(35,Kuk) + r(36,Kuk) + r(37,Kuk) + r(38,Kuk) + r(39,Kuk) + r(40,Kuk)
     
      + r(41,Kuk) + r(42,Kuk) + r(43,Kuk) + r(44,Kuk) + r(45,Kuk) + r(46,Kuk) + r(47,Kuk) + r(48,Kuk) + r(49,Kuk) + r(50,Kuk) + r(51,Kuk) + r(52,Kuk) + r(53,Kuk) + r(54,Kuk) + r(55,Kuk) + r(56,Kuk) + r(57,Kuk) + r(58,Kuk) + r(59,Kuk) + r(60,Kuk)
     
      + r(61,Kuk) + r(62,Kuk) + r(63,Kuk) + r(64,Kuk) + r(65,Kuk) + r(66,Kuk) + r(67,Kuk) + r(68,Kuk) + r(69,Kuk) + r(70,Kuk) + r(71,Kuk) + r(72,Kuk) + r(73,Kuk) + r(74,Kuk) + r(75,Kuk) + r(76,Kuk) + r(77,Kuk) + r(78,Kuk) + r(79,Kuk) + r(80,Kuk)
     
      + r(81,Kuk) + r(82,Kuk) + r(83,Kuk) + r(84,Kuk) + r(85,Kuk) + r(86,Kuk) + r(87,Kuk) + r(88,Kuk) + r(89,Kuk) + r(90,Kuk) + r(91,Kuk) + r(92,Kuk) + r(93,Kuk) + r(94,Kuk) + r(95,Kuk) + r(96,Kuk) + r(97,Kuk) + r(98,Kuk) + r(99,Kuk) + r(100,Kuk)
     
      + r(101,Kuk) + r(102,Kuk) + r(103,Kuk) + r(104,Kuk) + r(105,Kuk) + r(106,Kuk) + r(107,Kuk) =L= 1 ; (LHS = 0)
     
Barges_buy(Kok)..  r(1,Kok) + r(2,Kok) + r(3,Kok) + r(4,Kok) + r(5,Kok) + r(6,Kok) + r(7,Kok) + r(8,Kok) + r(9,Kok) + r(10,Kok) + r(11,Kok) + r(12,Kok) + r(13,Kok) + r(14,Kok) + r(15,Kok) + r(16,Kok) + r(17,Kok) + r(18,Kok) + r(19,Kok) + r(20,Kok)
     
      + r(21,Kok) + r(22,Kok) + r(23,Kok) + r(24,Kok) + r(25,Kok) + r(26,Kok) + r(27,Kok) + r(28,Kok) + r(29,Kok) + r(30,Kok) + r(31,Kok) + r(32,Kok) + r(33,Kok) + r(34,Kok) + r(35,Kok) + r(36,Kok) + r(37,Kok) + r(38,Kok) + r(39,Kok) + r(40,Kok)
     
      + r(41,Kok) + r(42,Kok) + r(43,Kok) + r(44,Kok) + r(45,Kok) + r(46,Kok) + r(47,Kok) + r(48,Kok) + r(49,Kok) + r(50,Kok) + r(51,Kok) + r(52,Kok) + r(53,Kok) + r(54,Kok) + r(55,Kok) + r(56,Kok) + r(57,Kok) + r(58,Kok) + r(59,Kok) + r(60,Kok)
     
      + r(61,Kok) + r(62,Kok) + r(63,Kok) + r(64,Kok) + r(65,Kok) + r(66,Kok) + r(67,Kok) + r(68,Kok) + r(69,Kok) + r(70,Kok) + r(71,Kok) + r(72,Kok) + r(73,Kok) + r(74,Kok) + r(75,Kok) + r(76,Kok) + r(77,Kok) + r(78,Kok) + r(79,Kok) + r(80,Kok)
     
      + r(81,Kok) + r(82,Kok) + r(83,Kok) + r(84,Kok) + r(85,Kok) + r(86,Kok) + r(87,Kok) + r(88,Kok) + r(89,Kok) + r(90,Kok) + r(91,Kok) + r(92,Kok) + r(93,Kok) + r(94,Kok) + r(95,Kok) + r(96,Kok) + r(97,Kok) + r(98,Kok) + r(99,Kok) + r(100,Kok)
     
      + r(101,Kok) + r(102,Kok) + r(103,Kok) + r(104,Kok) + r(105,Kok) + r(106,Kok) + r(107,Kok) =L= 1 ; (LHS = 0)
     

---- Barges_sell  =L=  ensure we only pick one value  n for barges for each product to each city

Barges_sell(Mas,EU)..  u(1,Mas,EU) + u(2,Mas,EU) + u(3,Mas,EU) + u(4,Mas,EU) + u(5,Mas,EU) + u(6,Mas,EU) + u(7,Mas,EU) + u(8,Mas,EU) + u(9,Mas,EU) + u(10,Mas,EU) + u(11,Mas,EU) + u(12,Mas,EU) + u(13,Mas,EU) + u(14,Mas,EU) + u(15,Mas,EU) + u(16,Mas,EU)
     
      + u(17,Mas,EU) + u(18,Mas,EU) + u(19,Mas,EU) + u(20,Mas,EU) + u(21,Mas,EU) + u(22,Mas,EU) + u(23,Mas,EU) =L= 1 ; (LHS = 0)
     
Barges_sell(Mas,IE)..  u(1,Mas,IE) + u(2,Mas,IE) + u(3,Mas,IE) + u(4,Mas,IE) + u(5,Mas,IE) + u(6,Mas,IE) + u(7,Mas,IE) + u(8,Mas,IE) + u(9,Mas,IE) + u(10,Mas,IE) + u(11,Mas,IE) + u(12,Mas,IE) + u(13,Mas,IE) + u(14,Mas,IE) + u(15,Mas,IE) + u(16,Mas,IE)
     
      + u(17,Mas,IE) + u(18,Mas,IE) + u(19,Mas,IE) + u(20,Mas,IE) + u(21,Mas,IE) + u(22,Mas,IE) + u(23,Mas,IE) =L= 1 ; (LHS = 0)
     
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/17/17 16:42:05 Page 22
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 341


     Barges_sell  =L=  ensure we only pick one value  n for barges for each product to each city

Barges_sell(Mas,PA)..  u(1,Mas,PA) + u(2,Mas,PA) + u(3,Mas,PA) + u(4,Mas,PA) + u(5,Mas,PA) + u(6,Mas,PA) + u(7,Mas,PA) + u(8,Mas,PA) + u(9,Mas,PA) + u(10,Mas,PA) + u(11,Mas,PA) + u(12,Mas,PA) + u(13,Mas,PA) + u(14,Mas,PA) + u(15,Mas,PA) + u(16,Mas,PA)
     
      + u(17,Mas,PA) + u(18,Mas,PA) + u(19,Mas,PA) + u(20,Mas,PA) + u(21,Mas,PA) + u(22,Mas,PA) + u(23,Mas,PA) =L= 1 ; (LHS = 0)
     
Barges_sell(Mas,KI)..  u(1,Mas,KI) + u(2,Mas,KI) + u(3,Mas,KI) + u(4,Mas,KI) + u(5,Mas,KI) + u(6,Mas,KI) + u(7,Mas,KI) + u(8,Mas,KI) + u(9,Mas,KI) + u(10,Mas,KI) + u(11,Mas,KI) + u(12,Mas,KI) + u(13,Mas,KI) + u(14,Mas,KI) + u(15,Mas,KI) + u(16,Mas,KI)
     
      + u(17,Mas,KI) + u(18,Mas,KI) + u(19,Mas,KI) + u(20,Mas,KI) + u(21,Mas,KI) + u(22,Mas,KI) + u(23,Mas,KI) =L= 1 ; (LHS = 0)
     
Barges_sell(Kus,EU)..  u(1,Kus,EU) + u(2,Kus,EU) + u(3,Kus,EU) + u(4,Kus,EU) + u(5,Kus,EU) + u(6,Kus,EU) + u(7,Kus,EU) + u(8,Kus,EU) + u(9,Kus,EU) + u(10,Kus,EU) + u(11,Kus,EU) + u(12,Kus,EU) + u(13,Kus,EU) + u(14,Kus,EU) + u(15,Kus,EU) + u(16,Kus,EU)
     
      + u(17,Kus,EU) + u(18,Kus,EU) + u(19,Kus,EU) + u(20,Kus,EU) + u(21,Kus,EU) + u(22,Kus,EU) + u(23,Kus,EU) =L= 1 ; (LHS = 0)
     
Barges_sell(Kus,IE)..  u(1,Kus,IE) + u(2,Kus,IE) + u(3,Kus,IE) + u(4,Kus,IE) + u(5,Kus,IE) + u(6,Kus,IE) + u(7,Kus,IE) + u(8,Kus,IE) + u(9,Kus,IE) + u(10,Kus,IE) + u(11,Kus,IE) + u(12,Kus,IE) + u(13,Kus,IE) + u(14,Kus,IE) + u(15,Kus,IE) + u(16,Kus,IE)
     
      + u(17,Kus,IE) + u(18,Kus,IE) + u(19,Kus,IE) + u(20,Kus,IE) + u(21,Kus,IE) + u(22,Kus,IE) + u(23,Kus,IE) =L= 1 ; (LHS = 0)
     
Barges_sell(Kus,PA)..  u(1,Kus,PA) + u(2,Kus,PA) + u(3,Kus,PA) + u(4,Kus,PA) + u(5,Kus,PA) + u(6,Kus,PA) + u(7,Kus,PA) + u(8,Kus,PA) + u(9,Kus,PA) + u(10,Kus,PA) + u(11,Kus,PA) + u(12,Kus,PA) + u(13,Kus,PA) + u(14,Kus,PA) + u(15,Kus,PA) + u(16,Kus,PA)
     
      + u(17,Kus,PA) + u(18,Kus,PA) + u(19,Kus,PA) + u(20,Kus,PA) + u(21,Kus,PA) + u(22,Kus,PA) + u(23,Kus,PA) =L= 1 ; (LHS = 0)
     
Barges_sell(Kus,KI)..  u(1,Kus,KI) + u(2,Kus,KI) + u(3,Kus,KI) + u(4,Kus,KI) + u(5,Kus,KI) + u(6,Kus,KI) + u(7,Kus,KI) + u(8,Kus,KI) + u(9,Kus,KI) + u(10,Kus,KI) + u(11,Kus,KI) + u(12,Kus,KI) + u(13,Kus,KI) + u(14,Kus,KI) + u(15,Kus,KI) + u(16,Kus,KI)
     
      + u(17,Kus,KI) + u(18,Kus,KI) + u(19,Kus,KI) + u(20,Kus,KI) + u(21,Kus,KI) + u(22,Kus,KI) + u(23,Kus,KI) =L= 1 ; (LHS = 0)
     
Barges_sell(Kos,EU)..  u(1,Kos,EU) + u(2,Kos,EU) + u(3,Kos,EU) + u(4,Kos,EU) + u(5,Kos,EU) + u(6,Kos,EU) + u(7,Kos,EU) + u(8,Kos,EU) + u(9,Kos,EU) + u(10,Kos,EU) + u(11,Kos,EU) + u(12,Kos,EU) + u(13,Kos,EU) + u(14,Kos,EU) + u(15,Kos,EU) + u(16,Kos,EU)
     
      + u(17,Kos,EU) + u(18,Kos,EU) + u(19,Kos,EU) + u(20,Kos,EU) + u(21,Kos,EU) + u(22,Kos,EU) + u(23,Kos,EU) =L= 1 ; (LHS = 0)
     
Barges_sell(Kos,IE)..  u(1,Kos,IE) + u(2,Kos,IE) + u(3,Kos,IE) + u(4,Kos,IE) + u(5,Kos,IE) + u(6,Kos,IE) + u(7,Kos,IE) + u(8,Kos,IE) + u(9,Kos,IE) + u(10,Kos,IE) + u(11,Kos,IE) + u(12,Kos,IE) + u(13,Kos,IE) + u(14,Kos,IE) + u(15,Kos,IE) + u(16,Kos,IE)
     
      + u(17,Kos,IE) + u(18,Kos,IE) + u(19,Kos,IE) + u(20,Kos,IE) + u(21,Kos,IE) + u(22,Kos,IE) + u(23,Kos,IE) =L= 1 ; (LHS = 0)
     
Barges_sell(Kos,PA)..  u(1,Kos,PA) + u(2,Kos,PA) + u(3,Kos,PA) + u(4,Kos,PA) + u(5,Kos,PA) + u(6,Kos,PA) + u(7,Kos,PA) + u(8,Kos,PA) + u(9,Kos,PA) + u(10,Kos,PA) + u(11,Kos,PA) + u(12,Kos,PA) + u(13,Kos,PA) + u(14,Kos,PA) + u(15,Kos,PA) + u(16,Kos,PA)
     
      + u(17,Kos,PA) + u(18,Kos,PA) + u(19,Kos,PA) + u(20,Kos,PA) + u(21,Kos,PA) + u(22,Kos,PA) + u(23,Kos,PA) =L= 1 ; (LHS = 0)
     
Barges_sell(Kos,KI)..  u(1,Kos,KI) + u(2,Kos,KI) + u(3,Kos,KI) + u(4,Kos,KI) + u(5,Kos,KI) + u(6,Kos,KI) + u(7,Kos,KI) + u(8,Kos,KI) + u(9,Kos,KI) + u(10,Kos,KI) + u(11,Kos,KI) + u(12,Kos,KI) + u(13,Kos,KI) + u(14,Kos,KI) + u(15,Kos,KI) + u(16,Kos,KI)
     
      + u(17,Kos,KI) + u(18,Kos,KI) + u(19,Kos,KI) + u(20,Kos,KI) + u(21,Kos,KI) + u(22,Kos,KI) + u(23,Kos,KI) =L= 1 ; (LHS = 0)
     
Barges_sell(Kuv,EU)..  u(1,Kuv,EU) + u(2,Kuv,EU) + u(3,Kuv,EU) + u(4,Kuv,EU) + u(5,Kuv,EU) + u(6,Kuv,EU) + u(7,Kuv,EU) + u(8,Kuv,EU) + u(9,Kuv,EU) + u(10,Kuv,EU) + u(11,Kuv,EU) + u(12,Kuv,EU) + u(13,Kuv,EU) + u(14,Kuv,EU) + u(15,Kuv,EU) + u(16,Kuv,EU)
     
      + u(17,Kuv,EU) + u(18,Kuv,EU) + u(19,Kuv,EU) + u(20,Kuv,EU) + u(21,Kuv,EU) + u(22,Kuv,EU) + u(23,Kuv,EU) =L= 1 ; (LHS = 0)
     
Barges_sell(Kuv,IE)..  u(1,Kuv,IE) + u(2,Kuv,IE) + u(3,Kuv,IE) + u(4,Kuv,IE) + u(5,Kuv,IE) + u(6,Kuv,IE) + u(7,Kuv,IE) + u(8,Kuv,IE) + u(9,Kuv,IE) + u(10,Kuv,IE) + u(11,Kuv,IE) + u(12,Kuv,IE) + u(13,Kuv,IE) + u(14,Kuv,IE) + u(15,Kuv,IE) + u(16,Kuv,IE)
     
      + u(17,Kuv,IE) + u(18,Kuv,IE) + u(19,Kuv,IE) + u(20,Kuv,IE) + u(21,Kuv,IE) + u(22,Kuv,IE) + u(23,Kuv,IE) =L= 1 ; (LHS = 0)
     
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/17/17 16:42:05 Page 23
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 341


     Barges_sell  =L=  ensure we only pick one value  n for barges for each product to each city

Barges_sell(Kuv,PA)..  u(1,Kuv,PA) + u(2,Kuv,PA) + u(3,Kuv,PA) + u(4,Kuv,PA) + u(5,Kuv,PA) + u(6,Kuv,PA) + u(7,Kuv,PA) + u(8,Kuv,PA) + u(9,Kuv,PA) + u(10,Kuv,PA) + u(11,Kuv,PA) + u(12,Kuv,PA) + u(13,Kuv,PA) + u(14,Kuv,PA) + u(15,Kuv,PA) + u(16,Kuv,PA)
     
      + u(17,Kuv,PA) + u(18,Kuv,PA) + u(19,Kuv,PA) + u(20,Kuv,PA) + u(21,Kuv,PA) + u(22,Kuv,PA) + u(23,Kuv,PA) =L= 1 ; (LHS = 0)
     
Barges_sell(Kuv,KI)..  u(1,Kuv,KI) + u(2,Kuv,KI) + u(3,Kuv,KI) + u(4,Kuv,KI) + u(5,Kuv,KI) + u(6,Kuv,KI) + u(7,Kuv,KI) + u(8,Kuv,KI) + u(9,Kuv,KI) + u(10,Kuv,KI) + u(11,Kuv,KI) + u(12,Kuv,KI) + u(13,Kuv,KI) + u(14,Kuv,KI) + u(15,Kuv,KI) + u(16,Kuv,KI)
     
      + u(17,Kuv,KI) + u(18,Kuv,KI) + u(19,Kuv,KI) + u(20,Kuv,KI) + u(21,Kuv,KI) + u(22,Kuv,KI) + u(23,Kuv,KI) =L= 1 ; (LHS = 0)
     
Barges_sell(Kov,EU)..  u(1,Kov,EU) + u(2,Kov,EU) + u(3,Kov,EU) + u(4,Kov,EU) + u(5,Kov,EU) + u(6,Kov,EU) + u(7,Kov,EU) + u(8,Kov,EU) + u(9,Kov,EU) + u(10,Kov,EU) + u(11,Kov,EU) + u(12,Kov,EU) + u(13,Kov,EU) + u(14,Kov,EU) + u(15,Kov,EU) + u(16,Kov,EU)
     
      + u(17,Kov,EU) + u(18,Kov,EU) + u(19,Kov,EU) + u(20,Kov,EU) + u(21,Kov,EU) + u(22,Kov,EU) + u(23,Kov,EU) =L= 1 ; (LHS = 0)
     
Barges_sell(Kov,IE)..  u(1,Kov,IE) + u(2,Kov,IE) + u(3,Kov,IE) + u(4,Kov,IE) + u(5,Kov,IE) + u(6,Kov,IE) + u(7,Kov,IE) + u(8,Kov,IE) + u(9,Kov,IE) + u(10,Kov,IE) + u(11,Kov,IE) + u(12,Kov,IE) + u(13,Kov,IE) + u(14,Kov,IE) + u(15,Kov,IE) + u(16,Kov,IE)
     
      + u(17,Kov,IE) + u(18,Kov,IE) + u(19,Kov,IE) + u(20,Kov,IE) + u(21,Kov,IE) + u(22,Kov,IE) + u(23,Kov,IE) =L= 1 ; (LHS = 0)
     
Barges_sell(Kov,PA)..  u(1,Kov,PA) + u(2,Kov,PA) + u(3,Kov,PA) + u(4,Kov,PA) + u(5,Kov,PA) + u(6,Kov,PA) + u(7,Kov,PA) + u(8,Kov,PA) + u(9,Kov,PA) + u(10,Kov,PA) + u(11,Kov,PA) + u(12,Kov,PA) + u(13,Kov,PA) + u(14,Kov,PA) + u(15,Kov,PA) + u(16,Kov,PA)
     
      + u(17,Kov,PA) + u(18,Kov,PA) + u(19,Kov,PA) + u(20,Kov,PA) + u(21,Kov,PA) + u(22,Kov,PA) + u(23,Kov,PA) =L= 1 ; (LHS = 0)
     
Barges_sell(Kov,KI)..  u(1,Kov,KI) + u(2,Kov,KI) + u(3,Kov,KI) + u(4,Kov,KI) + u(5,Kov,KI) + u(6,Kov,KI) + u(7,Kov,KI) + u(8,Kov,KI) + u(9,Kov,KI) + u(10,Kov,KI) + u(11,Kov,KI) + u(12,Kov,KI) + u(13,Kov,KI) + u(14,Kov,KI) + u(15,Kov,KI) + u(16,Kov,KI)
     
      + u(17,Kov,KI) + u(18,Kov,KI) + u(19,Kov,KI) + u(20,Kov,KI) + u(21,Kov,KI) + u(22,Kov,KI) + u(23,Kov,KI) =L= 1 ; (LHS = 0)
     
Barges_sell(Hsel,EU)..  u(1,Hsel,EU) + u(2,Hsel,EU) + u(3,Hsel,EU) + u(4,Hsel,EU) + u(5,Hsel,EU) + u(6,Hsel,EU) + u(7,Hsel,EU) + u(8,Hsel,EU) + u(9,Hsel,EU) + u(10,Hsel,EU) + u(11,Hsel,EU) + u(12,Hsel,EU) + u(13,Hsel,EU) + u(14,Hsel,EU) + u(15,Hsel,EU)
     
      + u(16,Hsel,EU) + u(17,Hsel,EU) + u(18,Hsel,EU) + u(19,Hsel,EU) + u(20,Hsel,EU) + u(21,Hsel,EU) + u(22,Hsel,EU) + u(23,Hsel,EU) =L= 1 ; (LHS = 0)
     
Barges_sell(Hsel,IE)..  u(1,Hsel,IE) + u(2,Hsel,IE) + u(3,Hsel,IE) + u(4,Hsel,IE) + u(5,Hsel,IE) + u(6,Hsel,IE) + u(7,Hsel,IE) + u(8,Hsel,IE) + u(9,Hsel,IE) + u(10,Hsel,IE) + u(11,Hsel,IE) + u(12,Hsel,IE) + u(13,Hsel,IE) + u(14,Hsel,IE) + u(15,Hsel,IE)
     
      + u(16,Hsel,IE) + u(17,Hsel,IE) + u(18,Hsel,IE) + u(19,Hsel,IE) + u(20,Hsel,IE) + u(21,Hsel,IE) + u(22,Hsel,IE) + u(23,Hsel,IE) =L= 1 ; (LHS = 0)
     
Barges_sell(Hsel,PA)..  u(1,Hsel,PA) + u(2,Hsel,PA) + u(3,Hsel,PA) + u(4,Hsel,PA) + u(5,Hsel,PA) + u(6,Hsel,PA) + u(7,Hsel,PA) + u(8,Hsel,PA) + u(9,Hsel,PA) + u(10,Hsel,PA) + u(11,Hsel,PA) + u(12,Hsel,PA) + u(13,Hsel,PA) + u(14,Hsel,PA) + u(15,Hsel,PA)
     
      + u(16,Hsel,PA) + u(17,Hsel,PA) + u(18,Hsel,PA) + u(19,Hsel,PA) + u(20,Hsel,PA) + u(21,Hsel,PA) + u(22,Hsel,PA) + u(23,Hsel,PA) =L= 1 ; (LHS = 0)
     
Barges_sell(Hsel,KI)..  u(1,Hsel,KI) + u(2,Hsel,KI) + u(3,Hsel,KI) + u(4,Hsel,KI) + u(5,Hsel,KI) + u(6,Hsel,KI) + u(7,Hsel,KI) + u(8,Hsel,KI) + u(9,Hsel,KI) + u(10,Hsel,KI) + u(11,Hsel,KI) + u(12,Hsel,KI) + u(13,Hsel,KI) + u(14,Hsel,KI) + u(15,Hsel,KI)
     
      + u(16,Hsel,KI) + u(17,Hsel,KI) + u(18,Hsel,KI) + u(19,Hsel,KI) + u(20,Hsel,KI) + u(21,Hsel,KI) + u(22,Hsel,KI) + u(23,Hsel,KI) =L= 1 ; (LHS = 0)
     
Barges_sell(Lsel,EU)..  u(1,Lsel,EU) + u(2,Lsel,EU) + u(3,Lsel,EU) + u(4,Lsel,EU) + u(5,Lsel,EU) + u(6,Lsel,EU) + u(7,Lsel,EU) + u(8,Lsel,EU) + u(9,Lsel,EU) + u(10,Lsel,EU) + u(11,Lsel,EU) + u(12,Lsel,EU) + u(13,Lsel,EU) + u(14,Lsel,EU) + u(15,Lsel,EU)
     
      + u(16,Lsel,EU) + u(17,Lsel,EU) + u(18,Lsel,EU) + u(19,Lsel,EU) + u(20,Lsel,EU) + u(21,Lsel,EU) + u(22,Lsel,EU) + u(23,Lsel,EU) =L= 1 ; (LHS = 0)
     
Barges_sell(Lsel,IE)..  u(1,Lsel,IE) + u(2,Lsel,IE) + u(3,Lsel,IE) + u(4,Lsel,IE) + u(5,Lsel,IE) + u(6,Lsel,IE) + u(7,Lsel,IE) + u(8,Lsel,IE) + u(9,Lsel,IE) + u(10,Lsel,IE) + u(11,Lsel,IE) + u(12,Lsel,IE) + u(13,Lsel,IE) + u(14,Lsel,IE) + u(15,Lsel,IE)
     
      + u(16,Lsel,IE) + u(17,Lsel,IE) + u(18,Lsel,IE) + u(19,Lsel,IE) + u(20,Lsel,IE) + u(21,Lsel,IE) + u(22,Lsel,IE) + u(23,Lsel,IE) =L= 1 ; (LHS = 0)
     
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/17/17 16:42:05 Page 24
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 341


     Barges_sell  =L=  ensure we only pick one value  n for barges for each product to each city

Barges_sell(Lsel,PA)..  u(1,Lsel,PA) + u(2,Lsel,PA) + u(3,Lsel,PA) + u(4,Lsel,PA) + u(5,Lsel,PA) + u(6,Lsel,PA) + u(7,Lsel,PA) + u(8,Lsel,PA) + u(9,Lsel,PA) + u(10,Lsel,PA) + u(11,Lsel,PA) + u(12,Lsel,PA) + u(13,Lsel,PA) + u(14,Lsel,PA) + u(15,Lsel,PA)
     
      + u(16,Lsel,PA) + u(17,Lsel,PA) + u(18,Lsel,PA) + u(19,Lsel,PA) + u(20,Lsel,PA) + u(21,Lsel,PA) + u(22,Lsel,PA) + u(23,Lsel,PA) =L= 1 ; (LHS = 0)
     
Barges_sell(Lsel,KI)..  u(1,Lsel,KI) + u(2,Lsel,KI) + u(3,Lsel,KI) + u(4,Lsel,KI) + u(5,Lsel,KI) + u(6,Lsel,KI) + u(7,Lsel,KI) + u(8,Lsel,KI) + u(9,Lsel,KI) + u(10,Lsel,KI) + u(11,Lsel,KI) + u(12,Lsel,KI) + u(13,Lsel,KI) + u(14,Lsel,KI) + u(15,Lsel,KI)
     
      + u(16,Lsel,KI) + u(17,Lsel,KI) + u(18,Lsel,KI) + u(19,Lsel,KI) + u(20,Lsel,KI) + u(21,Lsel,KI) + u(22,Lsel,KI) + u(23,Lsel,KI) =L= 1 ; (LHS = 0)
     
Barges_sell(Pap,EU)..  u(1,Pap,EU) + u(2,Pap,EU) + u(3,Pap,EU) + u(4,Pap,EU) + u(5,Pap,EU) + u(6,Pap,EU) + u(7,Pap,EU) + u(8,Pap,EU) + u(9,Pap,EU) + u(10,Pap,EU) + u(11,Pap,EU) + u(12,Pap,EU) + u(13,Pap,EU) + u(14,Pap,EU) + u(15,Pap,EU) + u(16,Pap,EU)
     
      + u(17,Pap,EU) + u(18,Pap,EU) + u(19,Pap,EU) + u(20,Pap,EU) + u(21,Pap,EU) + u(22,Pap,EU) + u(23,Pap,EU) =L= 1 ; (LHS = 0)
     
Barges_sell(Pap,IE)..  u(1,Pap,IE) + u(2,Pap,IE) + u(3,Pap,IE) + u(4,Pap,IE) + u(5,Pap,IE) + u(6,Pap,IE) + u(7,Pap,IE) + u(8,Pap,IE) + u(9,Pap,IE) + u(10,Pap,IE) + u(11,Pap,IE) + u(12,Pap,IE) + u(13,Pap,IE) + u(14,Pap,IE) + u(15,Pap,IE) + u(16,Pap,IE)
     
      + u(17,Pap,IE) + u(18,Pap,IE) + u(19,Pap,IE) + u(20,Pap,IE) + u(21,Pap,IE) + u(22,Pap,IE) + u(23,Pap,IE) =L= 1 ; (LHS = 0)
     
Barges_sell(Pap,PA)..  u(1,Pap,PA) + u(2,Pap,PA) + u(3,Pap,PA) + u(4,Pap,PA) + u(5,Pap,PA) + u(6,Pap,PA) + u(7,Pap,PA) + u(8,Pap,PA) + u(9,Pap,PA) + u(10,Pap,PA) + u(11,Pap,PA) + u(12,Pap,PA) + u(13,Pap,PA) + u(14,Pap,PA) + u(15,Pap,PA) + u(16,Pap,PA)
     
      + u(17,Pap,PA) + u(18,Pap,PA) + u(19,Pap,PA) + u(20,Pap,PA) + u(21,Pap,PA) + u(22,Pap,PA) + u(23,Pap,PA) =L= 1 ; (LHS = 0)
     
Barges_sell(Pap,KI)..  u(1,Pap,KI) + u(2,Pap,KI) + u(3,Pap,KI) + u(4,Pap,KI) + u(5,Pap,KI) + u(6,Pap,KI) + u(7,Pap,KI) + u(8,Pap,KI) + u(9,Pap,KI) + u(10,Pap,KI) + u(11,Pap,KI) + u(12,Pap,KI) + u(13,Pap,KI) + u(14,Pap,KI) + u(15,Pap,KI) + u(16,Pap,KI)
     
      + u(17,Pap,KI) + u(18,Pap,KI) + u(19,Pap,KI) + u(20,Pap,KI) + u(21,Pap,KI) + u(22,Pap,KI) + u(23,Pap,KI) =L= 1 ; (LHS = 0)
     

---- SawmillCap  =L=  Maximum capacity of the saw mill

SawmillCap..  y(Mas) + y(Kus) + y(Kos) =L= 200000 ; (LHS = 0)
     

---- PlywoodCap  =L=  Maximum capacity of plywood mill

PlywoodCap..  y(Kuv) + y(Kov) =L= 90000 ; (LHS = 0)
     

---- HSELCap  =L=  Maximum capacity of HSEL production

HSELCap..  y(Hsel) =L= 220000 ; (LHS = 0)
     

---- LSELCap  =L=  Maximum capacity of LSEL production

LSELCap..  y(Lsel) =L= 180000 ; (LHS = 0)
     

---- PAPCap  =L=  Maximum capacity of PAP production

PAPCap..  y(Pap) =L= 80000 ; (LHS = 0)
     
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/17/17 16:42:05 Page 25
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE final Using MIP From line 341


---- PAP_HSEL  =L=  Proportion needed of HSEL for PAP

PAP_HSEL..  - y(Hsel) + 0.2*y(Pap) =L= 0 ; (LHS = 0)
     

---- PAP_LSEL  =L=  Proportion needed of LSEL for PAP

PAP_LSEL..  - y(Lsel) + 0.2*y(Pap) =L= 0 ; (LHS = 0)
     
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/17/17 16:42:05 Page 26
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE final Using MIP From line 341


---- z  the objective

z
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       obj


---- y  Cubic meters produced of product j

y(Mas)
                (.LO, .L, .UP, .M = 0, 0, 100, 0)
      558       obj
        2       timber_used(Mat)
       -0.8     timber_used(Mak)
        2       USAGE(Mat)
       -0.8     USAGE(Mak)
       -1       Sold_Prod(Mas)
        1       SawmillCap

y(Kus)
                (.LO, .L, .UP, .M = 0, 0, 100, 0)
      508       obj
        2       timber_used(Kut)
       -0.8     timber_used(Kuk)
        2       USAGE(Kut)
       -0.8     USAGE(Kuk)
       -1       Sold_Prod(Kus)
        1       SawmillCap

y(Kos)
                (.LO, .L, .UP, .M = 0, 0, 100, 0)
      458       obj
        2       timber_used(Kot)
       -0.8     timber_used(Kok)
        2       USAGE(Kot)
       -0.8     USAGE(Kok)
       -1       Sold_Prod(Kos)
        1       SawmillCap

y(Kuv)
                (.LO, .L, .UP, .M = 0, 0, 100, 0)
     2508       obj
        2.8     timber_used(Kut)
       -1.6     timber_used(Kuk)
        2.8     USAGE(Kut)
       -1.6     USAGE(Kuk)
       -1       Sold_Prod(Kuv)
        1       PlywoodCap

y(Kov)
                (.LO, .L, .UP, .M = 0, 0, 100, 0)
     2608       obj
        2.8     timber_used(Kot)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/17/17 16:42:05 Page 27
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE final Using MIP From line 341


     y  Cubic meters produced of product j

       -1.6     timber_used(Kok)
        2.8     USAGE(Kot)
       -1.6     USAGE(Kok)
       -1       Sold_Prod(Kov)
        1       PlywoodCap

y(Hsel)
                (.LO, .L, .UP, .M = 0, 0, 100, 0)
      820       obj
        4.8     timber_used(Mak)
        4.8     USAGE(Mak)
       -1       Sold_Prod(Hsel)
        1       HSELCap
       -1       PAP_HSEL

y(Lsel)
                (.LO, .L, .UP, .M = 0, 0, 100, 0)
      800       obj
        4.2     timber_used(Kok)
        4.2     USAGE(Kok)
       -1       Sold_Prod(Lsel)
        1       LSELCap
       -1       PAP_LSEL

y(Pap)
                (.LO, .L, .UP, .M = 0, 0, 100, 0)
     1700       obj
        1       timber_used(Kuk)
        1       USAGE(Kuk)
       -1       Sold_Prod(Pap)
        1       PAPCap
        0.2     PAP_HSEL
        0.2     PAP_LSEL


---- s  amount of timber i used to make products

s(Mat)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
     -190       obj
       -1       timber_used(Mat)
       -1       prod_starved(Mat)

s(Kut)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
     -150       obj
       -1       timber_used(Kut)
       -1       prod_starved(Kut)

s(Kot)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/17/17 16:42:05 Page 28
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE final Using MIP From line 341


     s  amount of timber i used to make products

     -120       obj
       -1       timber_used(Kot)
       -1       prod_starved(Kot)

s(Mak)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
     -180       obj
       -1       timber_used(Mak)
       -1       prod_starved(Mak)

s(Kuk)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
     -150       obj
       -1       timber_used(Kuk)
       -1       prod_starved(Kuk)

s(Kok)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
     -150       obj
       -1       timber_used(Kok)
       -1       prod_starved(Kok)


---- r  1 if we buy n boats of timber i, 0 otherwise

r(1,Mat)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_buy(Mat)

r(1,Kut)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_buy(Kut)

r(1,Kot)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_buy(Kot)

r(1,Mak)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_buy(Mak)

r(1,Kuk)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_buy(Kuk)

r(1,Kok)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_buy(Kok)

r(2,Mat)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/17/17 16:42:05 Page 29
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE final Using MIP From line 341


     r  1 if we buy n boats of timber i, 0 otherwise

  -9.810000E+7  obj
    10000       prod_starved(Mat)
   -10000       USAGE(Mat)
        1       Barges_buy(Mat)

r(2,Kut)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  -4.850000E+7  obj
    10000       prod_starved(Kut)
   -10000       USAGE(Kut)
        1       Barges_buy(Kut)

r(2,Kot)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  -2.988000E+8  obj
    10000       prod_starved(Kot)
   -10000       USAGE(Kot)
        1       Barges_buy(Kot)

r(2,Mak)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  -1.820000E+7  obj
    10000       prod_starved(Mak)
   -10000       USAGE(Mak)
        1       Barges_buy(Mak)

r(2,Kuk)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  -2.850000E+7  obj
    10000       prod_starved(Kuk)
   -10000       USAGE(Kuk)
        1       Barges_buy(Kuk)

r(2,Kok)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  -1.850000E+7  obj
    10000       prod_starved(Kok)
   -10000       USAGE(Kok)
        1       Barges_buy(Kok)

r(3,Mat)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  -3.962000E+8  obj
    20000       prod_starved(Mat)
   -20000       USAGE(Mat)
        1       Barges_buy(Mat)

r(3,Kut)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  -1.970000E+8  obj
    20000       prod_starved(Kut)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/17/17 16:42:05 Page 30
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE final Using MIP From line 341


     r  1 if we buy n boats of timber i, 0 otherwise

   -20000       USAGE(Kut)
        1       Barges_buy(Kut)

r(3,Kot)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  -1.197600E+9  obj
    20000       prod_starved(Kot)
   -20000       USAGE(Kot)
        1       Barges_buy(Kot)

r(3,Mak)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  -7.640000E+7  obj
    20000       prod_starved(Mak)
   -20000       USAGE(Mak)
        1       Barges_buy(Mak)

r(3,Kuk)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  -1.170000E+8  obj
    20000       prod_starved(Kuk)
   -20000       USAGE(Kuk)
        1       Barges_buy(Kuk)

r(3,Kok)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  -7.700000E+7  obj
    20000       prod_starved(Kok)
   -20000       USAGE(Kok)
        1       Barges_buy(Kok)

r(4,Mat)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  -8.943000E+8  obj
    30000       prod_starved(Mat)
   -30000       USAGE(Mat)
        1       Barges_buy(Mat)

r(4,Kut)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  -4.455000E+8  obj
    30000       prod_starved(Kut)
   -30000       USAGE(Kut)
        1       Barges_buy(Kut)

r(4,Kot)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  -2.696400E+9  obj
    30000       prod_starved(Kot)
   -30000       USAGE(Kot)
        1       Barges_buy(Kot)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/17/17 16:42:05 Page 31
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE final Using MIP From line 341


     r  1 if we buy n boats of timber i, 0 otherwise


r(4,Mak)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  -1.746000E+8  obj
    30000       prod_starved(Mak)
   -30000       USAGE(Mak)
        1       Barges_buy(Mak)

r(4,Kuk)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  -2.655000E+8  obj
    30000       prod_starved(Kuk)
   -30000       USAGE(Kuk)
        1       Barges_buy(Kuk)

r(4,Kok)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  -1.755000E+8  obj
    30000       prod_starved(Kok)
   -30000       USAGE(Kok)
        1       Barges_buy(Kok)

r(5,Mat)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  -1.592400E+9  obj
    40000       prod_starved(Mat)
   -40000       USAGE(Mat)
        1       Barges_buy(Mat)

r(5,Kut)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  -7.940000E+8  obj
    40000       prod_starved(Kut)
   -40000       USAGE(Kut)
        1       Barges_buy(Kut)

r(5,Kot)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  -4.795200E+9  obj
    40000       prod_starved(Kot)
   -40000       USAGE(Kot)
        1       Barges_buy(Kot)

r(5,Mak)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  -3.128000E+8  obj
    40000       prod_starved(Mak)
   -40000       USAGE(Mak)
        1       Barges_buy(Mak)

r(5,Kuk)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/17/17 16:42:05 Page 32
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE final Using MIP From line 341


     r  1 if we buy n boats of timber i, 0 otherwise

                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  -4.740000E+8  obj
    40000       prod_starved(Kuk)
   -40000       USAGE(Kuk)
        1       Barges_buy(Kuk)

r(5,Kok)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  -3.140000E+8  obj
    40000       prod_starved(Kok)
   -40000       USAGE(Kok)
        1       Barges_buy(Kok)

r(6,Mat)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  -2.490500E+9  obj
    50000       prod_starved(Mat)
   -50000       USAGE(Mat)
        1       Barges_buy(Mat)

r(6,Kut)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  -1.242500E+9  obj
    50000       prod_starved(Kut)
   -50000       USAGE(Kut)
        1       Barges_buy(Kut)

r(6,Kot)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  -7.494000E+9  obj
    50000       prod_starved(Kot)
   -50000       USAGE(Kot)
        1       Barges_buy(Kot)

r(6,Mak)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  -4.910000E+8  obj
    50000       prod_starved(Mak)
   -50000       USAGE(Mak)
        1       Barges_buy(Mak)

r(6,Kuk)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  -7.425000E+8  obj
    50000       prod_starved(Kuk)
   -50000       USAGE(Kuk)
        1       Barges_buy(Kuk)

r(6,Kok)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  -4.925000E+8  obj
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/17/17 16:42:05 Page 33
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE final Using MIP From line 341


     r  1 if we buy n boats of timber i, 0 otherwise

    50000       prod_starved(Kok)
   -50000       USAGE(Kok)
        1       Barges_buy(Kok)

r(7,Mat)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  -3.588600E+9  obj
    60000       prod_starved(Mat)
   -60000       USAGE(Mat)
        1       Barges_buy(Mat)

r(7,Kut)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  -1.791000E+9  obj
    60000       prod_starved(Kut)
   -60000       USAGE(Kut)
        1       Barges_buy(Kut)

r(7,Kot)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  -1.07928E+10  obj
    60000       prod_starved(Kot)
   -60000       USAGE(Kot)
        1       Barges_buy(Kot)

r(7,Mak)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  -7.092000E+8  obj
    60000       prod_starved(Mak)
   -60000       USAGE(Mak)
        1       Barges_buy(Mak)

r(7,Kuk)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  -1.071000E+9  obj
    60000       prod_starved(Kuk)
   -60000       USAGE(Kuk)
        1       Barges_buy(Kuk)

r(7,Kok)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  -7.110000E+8  obj
    60000       prod_starved(Kok)
   -60000       USAGE(Kok)
        1       Barges_buy(Kok)

r(8,Mat)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  -4.886700E+9  obj
    70000       prod_starved(Mat)
   -70000       USAGE(Mat)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/17/17 16:42:05 Page 34
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE final Using MIP From line 341


     r  1 if we buy n boats of timber i, 0 otherwise

        1       Barges_buy(Mat)

r(8,Kut)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  -2.439500E+9  obj
    70000       prod_starved(Kut)
   -70000       USAGE(Kut)
        1       Barges_buy(Kut)

r(8,Kot)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  -1.46916E+10  obj
    70000       prod_starved(Kot)
   -70000       USAGE(Kot)
        1       Barges_buy(Kot)

r(8,Mak)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  -9.674000E+8  obj
    70000       prod_starved(Mak)
   -70000       USAGE(Mak)
        1       Barges_buy(Mak)

r(8,Kuk)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  -1.459500E+9  obj
    70000       prod_starved(Kuk)
   -70000       USAGE(Kuk)
        1       Barges_buy(Kuk)

r(8,Kok)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  -9.695000E+8  obj
    70000       prod_starved(Kok)
   -70000       USAGE(Kok)
        1       Barges_buy(Kok)

r(9,Mat)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  -6.384800E+9  obj
    80000       prod_starved(Mat)
   -80000       USAGE(Mat)
        1       Barges_buy(Mat)

r(9,Kut)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  -3.188000E+9  obj
    80000       prod_starved(Kut)
   -80000       USAGE(Kut)
        1       Barges_buy(Kut)

GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/17/17 16:42:05 Page 35
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE final Using MIP From line 341


     r  1 if we buy n boats of timber i, 0 otherwise

r(9,Kot)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  -1.91904E+10  obj
    80000       prod_starved(Kot)
   -80000       USAGE(Kot)
        1       Barges_buy(Kot)

r(9,Mak)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  -1.265600E+9  obj
    80000       prod_starved(Mak)
   -80000       USAGE(Mak)
        1       Barges_buy(Mak)

r(9,Kuk)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  -1.908000E+9  obj
    80000       prod_starved(Kuk)
   -80000       USAGE(Kuk)
        1       Barges_buy(Kuk)

r(9,Kok)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  -1.268000E+9  obj
    80000       prod_starved(Kok)
   -80000       USAGE(Kok)
        1       Barges_buy(Kok)

r(10,Mat)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  -8.082900E+9  obj
    90000       prod_starved(Mat)
   -90000       USAGE(Mat)
        1       Barges_buy(Mat)

r(10,Kut)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  -4.036500E+9  obj
    90000       prod_starved(Kut)
   -90000       USAGE(Kut)
        1       Barges_buy(Kut)

r(10,Kot)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  -2.42892E+10  obj
    90000       prod_starved(Kot)
   -90000       USAGE(Kot)
        1       Barges_buy(Kot)

r(10,Mak)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/17/17 16:42:05 Page 36
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE final Using MIP From line 341


     r  1 if we buy n boats of timber i, 0 otherwise

  -1.603800E+9  obj
    90000       prod_starved(Mak)
   -90000       USAGE(Mak)
        1       Barges_buy(Mak)

r(10,Kuk)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  -2.416500E+9  obj
    90000       prod_starved(Kuk)
   -90000       USAGE(Kuk)
        1       Barges_buy(Kuk)

r(10,Kok)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  -1.606500E+9  obj
    90000       prod_starved(Kok)
   -90000       USAGE(Kok)
        1       Barges_buy(Kok)

r(11,Mat)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  -9.981000E+9  obj
   100000       prod_starved(Mat)
  -100000       USAGE(Mat)
        1       Barges_buy(Mat)

r(11,Kut)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  -4.985000E+9  obj
   100000       prod_starved(Kut)
  -100000       USAGE(Kut)
        1       Barges_buy(Kut)

r(11,Kot)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  -2.99880E+10  obj
   100000       prod_starved(Kot)
  -100000       USAGE(Kot)
        1       Barges_buy(Kot)

r(11,Mak)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  -1.982000E+9  obj
   100000       prod_starved(Mak)
  -100000       USAGE(Mak)
        1       Barges_buy(Mak)

r(11,Kuk)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  -2.985000E+9  obj
   100000       prod_starved(Kuk)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/17/17 16:42:05 Page 37
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE final Using MIP From line 341


     r  1 if we buy n boats of timber i, 0 otherwise

  -100000       USAGE(Kuk)
        1       Barges_buy(Kuk)

r(11,Kok)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  -1.985000E+9  obj
   100000       prod_starved(Kok)
  -100000       USAGE(Kok)
        1       Barges_buy(Kok)

r(12,Mat)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  -1.20791E+10  obj
   110000       prod_starved(Mat)
  -110000       USAGE(Mat)
        1       Barges_buy(Mat)

r(12,Kut)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  -6.033500E+9  obj
   110000       prod_starved(Kut)
  -110000       USAGE(Kut)
        1       Barges_buy(Kut)

r(12,Kot)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  -3.62868E+10  obj
   110000       prod_starved(Kot)
  -110000       USAGE(Kot)
        1       Barges_buy(Kot)

r(12,Mak)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  -2.400200E+9  obj
   110000       prod_starved(Mak)
  -110000       USAGE(Mak)
        1       Barges_buy(Mak)

r(12,Kuk)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  -3.613500E+9  obj
   110000       prod_starved(Kuk)
  -110000       USAGE(Kuk)
        1       Barges_buy(Kuk)

r(12,Kok)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  -2.403500E+9  obj
   110000       prod_starved(Kok)
  -110000       USAGE(Kok)
        1       Barges_buy(Kok)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/17/17 16:42:05 Page 38
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE final Using MIP From line 341


     r  1 if we buy n boats of timber i, 0 otherwise


r(13,Mat)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  -1.43772E+10  obj
   120000       prod_starved(Mat)
  -120000       USAGE(Mat)
        1       Barges_buy(Mat)

r(13,Kut)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  -7.182000E+9  obj
   120000       prod_starved(Kut)
  -120000       USAGE(Kut)
        1       Barges_buy(Kut)

r(13,Kot)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  -4.31856E+10  obj
   120000       prod_starved(Kot)
  -120000       USAGE(Kot)
        1       Barges_buy(Kot)

r(13,Mak)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  -2.858400E+9  obj
   120000       prod_starved(Mak)
  -120000       USAGE(Mak)
        1       Barges_buy(Mak)

r(13,Kuk)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  -4.302000E+9  obj
   120000       prod_starved(Kuk)
  -120000       USAGE(Kuk)
        1       Barges_buy(Kuk)

r(13,Kok)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  -2.862000E+9  obj
   120000       prod_starved(Kok)
  -120000       USAGE(Kok)
        1       Barges_buy(Kok)

r(14,Mat)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  -1.68753E+10  obj
   130000       prod_starved(Mat)
  -130000       USAGE(Mat)
        1       Barges_buy(Mat)

r(14,Kut)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/17/17 16:42:05 Page 39
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE final Using MIP From line 341


     r  1 if we buy n boats of timber i, 0 otherwise

                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  -8.430500E+9  obj
   130000       prod_starved(Kut)
  -130000       USAGE(Kut)
        1       Barges_buy(Kut)

r(14,Kot)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  -5.06844E+10  obj
   130000       prod_starved(Kot)
  -130000       USAGE(Kot)
        1       Barges_buy(Kot)

r(14,Mak)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  -3.356600E+9  obj
   130000       prod_starved(Mak)
  -130000       USAGE(Mak)
        1       Barges_buy(Mak)

r(14,Kuk)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  -5.050500E+9  obj
   130000       prod_starved(Kuk)
  -130000       USAGE(Kuk)
        1       Barges_buy(Kuk)

r(14,Kok)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  -3.360500E+9  obj
   130000       prod_starved(Kok)
  -130000       USAGE(Kok)
        1       Barges_buy(Kok)

r(15,Mat)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  -1.95734E+10  obj
   140000       prod_starved(Mat)
  -140000       USAGE(Mat)
        1       Barges_buy(Mat)

r(15,Kut)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  -9.779000E+9  obj
   140000       prod_starved(Kut)
  -140000       USAGE(Kut)
        1       Barges_buy(Kut)

r(15,Kot)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  -5.87832E+10  obj
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/17/17 16:42:05 Page 40
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE final Using MIP From line 341


     r  1 if we buy n boats of timber i, 0 otherwise

   140000       prod_starved(Kot)
  -140000       USAGE(Kot)
        1       Barges_buy(Kot)

r(15,Mak)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  -3.894800E+9  obj
   140000       prod_starved(Mak)
  -140000       USAGE(Mak)
        1       Barges_buy(Mak)

r(15,Kuk)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  -5.859000E+9  obj
   140000       prod_starved(Kuk)
  -140000       USAGE(Kuk)
        1       Barges_buy(Kuk)

r(15,Kok)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  -3.899000E+9  obj
   140000       prod_starved(Kok)
  -140000       USAGE(Kok)
        1       Barges_buy(Kok)

r(16,Mat)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  -2.24715E+10  obj
   150000       prod_starved(Mat)
  -150000       USAGE(Mat)
        1       Barges_buy(Mat)

r(16,Kut)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  -1.12275E+10  obj
   150000       prod_starved(Kut)
  -150000       USAGE(Kut)
        1       Barges_buy(Kut)

r(16,Kot)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  -6.74820E+10  obj
   150000       prod_starved(Kot)
  -150000       USAGE(Kot)
        1       Barges_buy(Kot)

r(16,Mak)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  -4.473000E+9  obj
   150000       prod_starved(Mak)
  -150000       USAGE(Mak)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/17/17 16:42:05 Page 41
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE final Using MIP From line 341


     r  1 if we buy n boats of timber i, 0 otherwise

        1       Barges_buy(Mak)

r(16,Kuk)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  -6.727500E+9  obj
   150000       prod_starved(Kuk)
  -150000       USAGE(Kuk)
        1       Barges_buy(Kuk)

r(16,Kok)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  -4.477500E+9  obj
   150000       prod_starved(Kok)
  -150000       USAGE(Kok)
        1       Barges_buy(Kok)

r(17,Mat)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  -2.55696E+10  obj
   160000       prod_starved(Mat)
  -160000       USAGE(Mat)
        1       Barges_buy(Mat)

r(17,Kut)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  -1.27760E+10  obj
   160000       prod_starved(Kut)
  -160000       USAGE(Kut)
        1       Barges_buy(Kut)

r(17,Kot)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  -7.67808E+10  obj
   160000       prod_starved(Kot)
  -160000       USAGE(Kot)
        1       Barges_buy(Kot)

r(17,Mak)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  -5.091200E+9  obj
   160000       prod_starved(Mak)
  -160000       USAGE(Mak)
        1       Barges_buy(Mak)

REMAINING 542 ENTRIES SKIPPED

---- u  1 if we use n boats for product j shiping to region k, 0 otherwise

u(1,Mas,EU)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Mas,EU)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/17/17 16:42:05 Page 42
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE final Using MIP From line 341


     u  1 if we use n boats for product j shiping to region k, 0 otherwise


u(1,Mas,IE)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Mas,IE)

u(1,Mas,PA)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Mas,PA)

u(1,Mas,KI)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Mas,KI)

u(1,Kus,EU)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Kus,EU)

u(1,Kus,IE)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Kus,IE)

u(1,Kus,PA)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Kus,PA)

u(1,Kus,KI)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Kus,KI)

u(1,Kos,EU)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Kos,EU)

u(1,Kos,IE)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Kos,IE)

u(1,Kos,PA)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Kos,PA)

u(1,Kos,KI)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Kos,KI)

u(1,Kuv,EU)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Kuv,EU)

u(1,Kuv,IE)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/17/17 16:42:05 Page 43
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE final Using MIP From line 341


     u  1 if we use n boats for product j shiping to region k, 0 otherwise

        1       Barges_sell(Kuv,IE)

u(1,Kuv,PA)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Kuv,PA)

u(1,Kuv,KI)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Kuv,KI)

u(1,Kov,EU)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Kov,EU)

u(1,Kov,IE)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Kov,IE)

u(1,Kov,PA)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Kov,PA)

u(1,Kov,KI)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Kov,KI)

u(1,Hsel,EU)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Hsel,EU)

u(1,Hsel,IE)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Hsel,IE)

u(1,Hsel,PA)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Hsel,PA)

u(1,Hsel,KI)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Hsel,KI)

u(1,Lsel,EU)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Lsel,EU)

u(1,Lsel,IE)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Lsel,IE)

u(1,Lsel,PA)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/17/17 16:42:05 Page 44
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE final Using MIP From line 341


     u  1 if we use n boats for product j shiping to region k, 0 otherwise

                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Lsel,PA)

u(1,Lsel,KI)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Lsel,KI)

u(1,Pap,EU)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Pap,EU)

u(1,Pap,IE)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Pap,IE)

u(1,Pap,PA)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Pap,PA)

u(1,Pap,KI)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Pap,KI)

u(2,Mas,EU)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  3.8400000E+8  obj
    10000       Sold_Prod(Mas)
        1       Barges_sell(Mas,EU)

u(2,Mas,IE)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  9.8700000E+8  obj
    10000       Sold_Prod(Mas)
        1       Barges_sell(Mas,IE)

u(2,Mas,PA)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  1.1860000E+9  obj
    10000       Sold_Prod(Mas)
        1       Barges_sell(Mas,PA)

u(2,Mas,KI)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  1.4850000E+9  obj
    10000       Sold_Prod(Mas)
        1       Barges_sell(Mas,KI)

u(2,Kus,EU)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Kus,EU)

GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/17/17 16:42:05 Page 45
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE final Using MIP From line 341


     u  1 if we use n boats for product j shiping to region k, 0 otherwise

u(2,Kus,IE)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Kus,IE)

u(2,Kus,PA)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Kus,PA)

u(2,Kus,KI)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Kus,KI)

u(2,Kos,EU)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  1.3870000E+9  obj
    10000       Sold_Prod(Kos)
        1       Barges_sell(Kos,EU)

u(2,Kos,IE)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  1.9860000E+9  obj
    10000       Sold_Prod(Kos)
        1       Barges_sell(Kos,IE)

u(2,Kos,PA)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  2.1850000E+9  obj
    10000       Sold_Prod(Kos)
        1       Barges_sell(Kos,PA)

u(2,Kos,KI)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  2.4840000E+9  obj
    10000       Sold_Prod(Kos)
        1       Barges_sell(Kos,KI)

u(2,Kuv,EU)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  3.5600000E+8  obj
    10000       Sold_Prod(Kuv)
        1       Barges_sell(Kuv,EU)

u(2,Kuv,IE)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  9.6200000E+8  obj
    10000       Sold_Prod(Kuv)
        1       Barges_sell(Kuv,IE)

u(2,Kuv,PA)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  1.1640000E+9  obj
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/17/17 16:42:05 Page 46
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE final Using MIP From line 341


     u  1 if we use n boats for product j shiping to region k, 0 otherwise

    10000       Sold_Prod(Kuv)
        1       Barges_sell(Kuv,PA)

u(2,Kuv,KI)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  1.4650000E+9  obj
    10000       Sold_Prod(Kuv)
        1       Barges_sell(Kuv,KI)

u(2,Kov,EU)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  3.5700000E+8  obj
    10000       Sold_Prod(Kov)
        1       Barges_sell(Kov,EU)

u(2,Kov,IE)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  9.5900000E+8  obj
    10000       Sold_Prod(Kov)
        1       Barges_sell(Kov,IE)

u(2,Kov,PA)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  1.1610000E+9  obj
    10000       Sold_Prod(Kov)
        1       Barges_sell(Kov,PA)

u(2,Kov,KI)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  1.4620000E+9  obj
    10000       Sold_Prod(Kov)
        1       Barges_sell(Kov,KI)

u(2,Hsel,EU)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  1.7700000E+8  obj
    10000       Sold_Prod(Hsel)
        1       Barges_sell(Hsel,EU)

u(2,Hsel,IE)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  3.7500000E+8  obj
    10000       Sold_Prod(Hsel)
        1       Barges_sell(Hsel,IE)

u(2,Hsel,PA)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  4.7700000E+8  obj
    10000       Sold_Prod(Hsel)
        1       Barges_sell(Hsel,PA)

GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/17/17 16:42:05 Page 47
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE final Using MIP From line 341


     u  1 if we use n boats for product j shiping to region k, 0 otherwise

u(2,Hsel,KI)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  5.7400000E+8  obj
    10000       Sold_Prod(Hsel)
        1       Barges_sell(Hsel,KI)

u(2,Lsel,EU)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  2.7500000E+8  obj
    10000       Sold_Prod(Lsel)
        1       Barges_sell(Lsel,EU)

u(2,Lsel,IE)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  1.7200000E+8  obj
    10000       Sold_Prod(Lsel)
        1       Barges_sell(Lsel,IE)

u(2,Lsel,PA)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  4.7700000E+8  obj
    10000       Sold_Prod(Lsel)
        1       Barges_sell(Lsel,PA)

u(2,Lsel,KI)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  6.7500000E+8  obj
    10000       Sold_Prod(Lsel)
        1       Barges_sell(Lsel,KI)

u(2,Pap,EU)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  3.5500000E+8  obj
    10000       Sold_Prod(Pap)
        1       Barges_sell(Pap,EU)

u(2,Pap,IE)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  9.5300000E+8  obj
    10000       Sold_Prod(Pap)
        1       Barges_sell(Pap,IE)

u(2,Pap,PA)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  1.1570000E+9  obj
    10000       Sold_Prod(Pap)
        1       Barges_sell(Pap,PA)

u(2,Pap,KI)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  1.4520000E+9  obj
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/17/17 16:42:05 Page 48
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE final Using MIP From line 341


     u  1 if we use n boats for product j shiping to region k, 0 otherwise

    10000       Sold_Prod(Pap)
        1       Barges_sell(Pap,KI)

u(3,Mas,EU)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  1.5680000E+9  obj
    20000       Sold_Prod(Mas)
        1       Barges_sell(Mas,EU)

u(3,Mas,IE)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  3.9740000E+9  obj
    20000       Sold_Prod(Mas)
        1       Barges_sell(Mas,IE)

u(3,Mas,PA)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  4.7720000E+9  obj
    20000       Sold_Prod(Mas)
        1       Barges_sell(Mas,PA)

u(3,Mas,KI)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  5.9700000E+9  obj
    20000       Sold_Prod(Mas)
        1       Barges_sell(Mas,KI)

u(3,Kus,EU)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Kus,EU)

u(3,Kus,IE)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Kus,IE)

u(3,Kus,PA)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Kus,PA)

u(3,Kus,KI)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       Barges_sell(Kus,KI)

u(3,Kos,EU)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  5.5740000E+9  obj
    20000       Sold_Prod(Kos)
        1       Barges_sell(Kos,EU)

u(3,Kos,IE)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/17/17 16:42:05 Page 49
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE final Using MIP From line 341


     u  1 if we use n boats for product j shiping to region k, 0 otherwise

  7.9720000E+9  obj
    20000       Sold_Prod(Kos)
        1       Barges_sell(Kos,IE)

u(3,Kos,PA)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  8.7700000E+9  obj
    20000       Sold_Prod(Kos)
        1       Barges_sell(Kos,PA)

u(3,Kos,KI)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  9.9680000E+9  obj
    20000       Sold_Prod(Kos)
        1       Barges_sell(Kos,KI)

u(3,Kuv,EU)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  1.5120000E+9  obj
    20000       Sold_Prod(Kuv)
        1       Barges_sell(Kuv,EU)

u(3,Kuv,IE)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  3.9240000E+9  obj
    20000       Sold_Prod(Kuv)
        1       Barges_sell(Kuv,IE)

u(3,Kuv,PA)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  4.7280000E+9  obj
    20000       Sold_Prod(Kuv)
        1       Barges_sell(Kuv,PA)

u(3,Kuv,KI)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  5.9300000E+9  obj
    20000       Sold_Prod(Kuv)
        1       Barges_sell(Kuv,KI)

u(3,Kov,EU)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  1.5140000E+9  obj
    20000       Sold_Prod(Kov)
        1       Barges_sell(Kov,EU)

u(3,Kov,IE)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  3.9180000E+9  obj
    20000       Sold_Prod(Kov)
        1       Barges_sell(Kov,IE)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/17/17 16:42:05 Page 50
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE final Using MIP From line 341


     u  1 if we use n boats for product j shiping to region k, 0 otherwise


u(3,Kov,PA)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  4.7220000E+9  obj
    20000       Sold_Prod(Kov)
        1       Barges_sell(Kov,PA)

u(3,Kov,KI)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  5.9240000E+9  obj
    20000       Sold_Prod(Kov)
        1       Barges_sell(Kov,KI)

u(3,Hsel,EU)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  7.5400000E+8  obj
    20000       Sold_Prod(Hsel)
        1       Barges_sell(Hsel,EU)

u(3,Hsel,IE)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  1.5500000E+9  obj
    20000       Sold_Prod(Hsel)
        1       Barges_sell(Hsel,IE)

u(3,Hsel,PA)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  1.9540000E+9  obj
    20000       Sold_Prod(Hsel)
        1       Barges_sell(Hsel,PA)

u(3,Hsel,KI)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  2.3480000E+9  obj
    20000       Sold_Prod(Hsel)
        1       Barges_sell(Hsel,KI)

u(3,Lsel,EU)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  1.1500000E+9  obj
    20000       Sold_Prod(Lsel)
        1       Barges_sell(Lsel,EU)

u(3,Lsel,IE)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  7.4400000E+8  obj
    20000       Sold_Prod(Lsel)
        1       Barges_sell(Lsel,IE)

u(3,Lsel,PA)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/17/17 16:42:05 Page 51
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE final Using MIP From line 341


     u  1 if we use n boats for product j shiping to region k, 0 otherwise

  1.9540000E+9  obj
    20000       Sold_Prod(Lsel)
        1       Barges_sell(Lsel,PA)

u(3,Lsel,KI)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  2.7500000E+9  obj
    20000       Sold_Prod(Lsel)
        1       Barges_sell(Lsel,KI)

u(3,Pap,EU)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  1.5100000E+9  obj
    20000       Sold_Prod(Pap)
        1       Barges_sell(Pap,EU)

u(3,Pap,IE)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  3.9060000E+9  obj
    20000       Sold_Prod(Pap)
        1       Barges_sell(Pap,IE)

u(3,Pap,PA)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  4.7140000E+9  obj
    20000       Sold_Prod(Pap)
        1       Barges_sell(Pap,PA)

u(3,Pap,KI)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  5.9040000E+9  obj
    20000       Sold_Prod(Pap)
        1       Barges_sell(Pap,KI)

u(4,Mas,EU)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  3.5520000E+9  obj
    30000       Sold_Prod(Mas)
        1       Barges_sell(Mas,EU)

u(4,Mas,IE)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  8.9610000E+9  obj
    30000       Sold_Prod(Mas)
        1       Barges_sell(Mas,IE)

u(4,Mas,PA)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  1.075800E+10  obj
    30000       Sold_Prod(Mas)
        1       Barges_sell(Mas,PA)
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/17/17 16:42:05 Page 52
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE final Using MIP From line 341


     u  1 if we use n boats for product j shiping to region k, 0 otherwise


u(4,Mas,KI)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  1.345500E+10  obj
    30000       Sold_Prod(Mas)
        1       Barges_sell(Mas,KI)

REMAINING 636 ENTRIES SKIPPED

****
****  8 Integer +INF Bounds have been reset to 100 (see Option IntVarUp)
****
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/17/17 16:42:05 Page 53
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Model Statistics    SOLVE final Using MIP From line 341


MODEL STATISTICS

BLOCKS OF EQUATIONS          14     SINGLE EQUATIONS           72
BLOCKS OF VARIABLES           5     SINGLE VARIABLES        1,393
NON ZERO ELEMENTS         4,591     DISCRETE VARIABLES      1,386


GENERATION TIME      =        0.051 SECONDS      4 MB  24.8.1 r59919 DEX-DEG


EXECUTION TIME       =        0.054 SECONDS      4 MB  24.8.1 r59919 DEX-DEG
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/17/17 16:42:05 Page 54
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 341


               S O L V E      S U M M A R Y

     MODEL   final               OBJECTIVE  z
     TYPE    MIP                 DIRECTION  MINIMIZE
     SOLVER  CPLEX               FROM LINE  341

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      1 Optimal                   
**** OBJECTIVE VALUE                0.0000

 RESOURCE USAGE, LIMIT          0.114       300.000
 ITERATION COUNT, LIMIT        10     999999999

IBM ILOG CPLEX   24.8.1 r59919 Released Dec 22, 2016 DEG x86 64bit/Mac OS X   
--- GAMS/Cplex licensed for continuous and discrete problems.
Cplex 12.7.0.0

Space for names approximately 0.03 Mb
Use option 'names no' to turn use of names off
MIP status(101): integer optimal solution
Cplex Time: 0.07sec (det. 1.27 ticks)
Fixing integer variables, and solving final LP...
Fixed MIP status(1): optimal
Cplex Time: 0.00sec (det. 0.48 ticks)
Proven optimal solution.

MIP Solution:            0.000000    (10 iterations, 0 nodes)
Final Solve:             0.000000    (0 iterations)

Best possible:           0.000000
Absolute gap:            0.000000
Relative gap:            0.000000


                           LOWER          LEVEL          UPPER         MARGINAL

---- EQU obj                 .              .              .             1.0000      

  obj  Maximum gross profit

---- EQU timber_used   amount of  timber i used to make  product j

           LOWER          LEVEL          UPPER         MARGINAL

Mat          .              .              .              .          
Kut          .              .              .              .          
Kot          .              .              .              .          
Mak          .              .              .              .          
Kuk          .              .              .              .          
Kok          .              .              .              .          
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/17/17 16:42:05 Page 55
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 341


---- EQU prod_starved  ensure that production can not be starved

           LOWER          LEVEL          UPPER         MARGINAL

Mat          .              .            +INF             .          
Kut          .              .            +INF             .          
Kot          .              .            +INF             .          
Mak          .              .            +INF             .          
Kuk          .              .            +INF             .          
Kok          .              .            +INF             .          

---- EQU USAGE  We have to buy material (or produce as byproducts) to be able to produce products

           LOWER          LEVEL          UPPER         MARGINAL

Mat        -INF             .              .              .          
Kut        -INF             .              .              .          
Kot        -INF             .              .              .          
Mak        -INF             .              .              .          
Kuk        -INF             .              .              .          
Kok        -INF             .              .              .          

---- EQU Sold_Prod  we cant sell more than we produce

            LOWER          LEVEL          UPPER         MARGINAL

Mas         -INF             .              .              .          
Kus         -INF             .              .              .          
Kos         -INF             .              .              .          
Kuv         -INF             .              .              .          
Kov         -INF             .              .              .          
Hsel        -INF             .              .              .          
Lsel        -INF             .              .              .          
Pap         -INF             .              .              .          

---- EQU Barges_buy  ensure we only pick one value n for barges for each timber i

           LOWER          LEVEL          UPPER         MARGINAL

Mat        -INF             .             1.0000          .          
Kut        -INF             .             1.0000          .          
Kot        -INF             .             1.0000          .          
Mak        -INF             .             1.0000          .          
Kuk        -INF             .             1.0000          .          
Kok        -INF             .             1.0000          .          

---- EQU Barges_sell  ensure we only pick one value  n for barges for each product to each city

               LOWER          LEVEL          UPPER         MARGINAL

Mas .EU        -INF             .             1.0000          .          
Mas .IE        -INF             .             1.0000          .          
Mas .PA        -INF             .             1.0000          .          
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/17/17 16:42:05 Page 56
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 341


     EQU Barges_sell  ensure we only pick one value  n for barges for each product to each city

               LOWER          LEVEL          UPPER         MARGINAL

Mas .KI        -INF             .             1.0000          .          
Kus .EU        -INF             .             1.0000          .          
Kus .IE        -INF             .             1.0000          .          
Kus .PA        -INF             .             1.0000          .          
Kus .KI        -INF             .             1.0000          .          
Kos .EU        -INF             .             1.0000          .          
Kos .IE        -INF             .             1.0000          .          
Kos .PA        -INF             .             1.0000          .          
Kos .KI        -INF             .             1.0000          .          
Kuv .EU        -INF             .             1.0000          .          
Kuv .IE        -INF             .             1.0000          .          
Kuv .PA        -INF             .             1.0000          .          
Kuv .KI        -INF             .             1.0000          .          
Kov .EU        -INF             .             1.0000          .          
Kov .IE        -INF             .             1.0000          .          
Kov .PA        -INF             .             1.0000          .          
Kov .KI        -INF             .             1.0000          .          
Hsel.EU        -INF             .             1.0000          .          
Hsel.IE        -INF             .             1.0000          .          
Hsel.PA        -INF             .             1.0000          .          
Hsel.KI        -INF             .             1.0000          .          
Lsel.EU        -INF             .             1.0000          .          
Lsel.IE        -INF             .             1.0000          .          
Lsel.PA        -INF             .             1.0000          .          
Lsel.KI        -INF             .             1.0000          .          
Pap .EU        -INF             .             1.0000          .          
Pap .IE        -INF             .             1.0000          .          
Pap .PA        -INF             .             1.0000          .          
Pap .KI        -INF             .             1.0000          .          

                           LOWER          LEVEL          UPPER         MARGINAL

---- EQU SawmillCap        -INF             .        200000.0000          .          
---- EQU PlywoodCap        -INF             .         90000.0000          .          
---- EQU HSELCap           -INF             .        220000.0000          .          
---- EQU LSELCap           -INF             .        180000.0000          .          
---- EQU PAPCap            -INF             .         80000.0000          .          
---- EQU PAP_HSEL          -INF             .              .              .          
---- EQU PAP_LSEL          -INF             .              .              .          

  SawmillCap  Maximum capacity of the saw mill
  PlywoodCap  Maximum capacity of plywood mill
  HSELCap  Maximum capacity of HSEL production
  LSELCap  Maximum capacity of LSEL production
  PAPCap  Maximum capacity of PAP production
  PAP_HSEL  Proportion needed of HSEL for PAP
  PAP_LSEL  Proportion needed of LSEL for PAP
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/17/17 16:42:05 Page 57
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 341


                           LOWER          LEVEL          UPPER         MARGINAL

---- VAR z                 -INF             .            +INF             .          

  z  the objective

---- VAR y  Cubic meters produced of product j

            LOWER          LEVEL          UPPER         MARGINAL

Mas           .              .           100.0000      -558.0000      
Kus           .              .           100.0000      -508.0000      
Kos           .              .           100.0000      -458.0000      
Kuv           .              .           100.0000     -2508.0000      
Kov           .              .           100.0000     -2608.0000      
Hsel          .              .           100.0000      -820.0000      
Lsel          .              .           100.0000      -800.0000      
Pap           .              .           100.0000     -1700.0000      

---- VAR s  amount of timber i used to make products

           LOWER          LEVEL          UPPER         MARGINAL

Mat          .              .            +INF          190.0000      
Kut          .              .            +INF          150.0000      
Kot          .              .            +INF          120.0000      
Mak          .              .            +INF          180.0000      
Kuk          .              .            +INF          150.0000      
Kok          .              .            +INF          150.0000      

---- VAR r  1 if we buy n boats of timber i, 0 otherwise

               LOWER          LEVEL          UPPER         MARGINAL

1  .Mat          .              .             1.0000         EPS         
1  .Kut          .              .             1.0000         EPS         
1  .Kot          .              .             1.0000         EPS         
1  .Mak          .              .             1.0000         EPS         
1  .Kuk          .              .             1.0000         EPS         
1  .Kok          .              .             1.0000         EPS         
2  .Mat          .              .             1.0000   9.8100000E+7      
2  .Kut          .              .             1.0000   4.8500000E+7      
2  .Kot          .              .             1.0000   2.9880000E+8      
2  .Mak          .              .             1.0000   1.8200000E+7      
2  .Kuk          .              .             1.0000   2.8500000E+7      
2  .Kok          .              .             1.0000   1.8500000E+7      
3  .Mat          .              .             1.0000   3.9620000E+8      
3  .Kut          .              .             1.0000   1.9700000E+8      
3  .Kot          .              .             1.0000   1.1976000E+9      
3  .Mak          .              .             1.0000   7.6400000E+7      
3  .Kuk          .              .             1.0000   1.1700000E+8      
3  .Kok          .              .             1.0000   7.7000000E+7      
4  .Mat          .              .             1.0000   8.9430000E+8      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/17/17 16:42:05 Page 58
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 341


     VAR r  1 if we buy n boats of timber i, 0 otherwise

               LOWER          LEVEL          UPPER         MARGINAL

4  .Kut          .              .             1.0000   4.4550000E+8      
4  .Kot          .              .             1.0000   2.6964000E+9      
4  .Mak          .              .             1.0000   1.7460000E+8      
4  .Kuk          .              .             1.0000   2.6550000E+8      
4  .Kok          .              .             1.0000   1.7550000E+8      
5  .Mat          .              .             1.0000   1.5924000E+9      
5  .Kut          .              .             1.0000   7.9400000E+8      
5  .Kot          .              .             1.0000   4.7952000E+9      
5  .Mak          .              .             1.0000   3.1280000E+8      
5  .Kuk          .              .             1.0000   4.7400000E+8      
5  .Kok          .              .             1.0000   3.1400000E+8      
6  .Mat          .              .             1.0000   2.4905000E+9      
6  .Kut          .              .             1.0000   1.2425000E+9      
6  .Kot          .              .             1.0000   7.4940000E+9      
6  .Mak          .              .             1.0000   4.9100000E+8      
6  .Kuk          .              .             1.0000   7.4250000E+8      
6  .Kok          .              .             1.0000   4.9250000E+8      
7  .Mat          .              .             1.0000   3.5886000E+9      
7  .Kut          .              .             1.0000   1.7910000E+9      
7  .Kot          .              .             1.0000   1.079280E+10      
7  .Mak          .              .             1.0000   7.0920000E+8      
7  .Kuk          .              .             1.0000   1.0710000E+9      
7  .Kok          .              .             1.0000   7.1100000E+8      
8  .Mat          .              .             1.0000   4.8867000E+9      
8  .Kut          .              .             1.0000   2.4395000E+9      
8  .Kot          .              .             1.0000   1.469160E+10      
8  .Mak          .              .             1.0000   9.6740000E+8      
8  .Kuk          .              .             1.0000   1.4595000E+9      
8  .Kok          .              .             1.0000   9.6950000E+8      
9  .Mat          .              .             1.0000   6.3848000E+9      
9  .Kut          .              .             1.0000   3.1880000E+9      
9  .Kot          .              .             1.0000   1.919040E+10      
9  .Mak          .              .             1.0000   1.2656000E+9      
9  .Kuk          .              .             1.0000   1.9080000E+9      
9  .Kok          .              .             1.0000   1.2680000E+9      
10 .Mat          .              .             1.0000   8.0829000E+9      
10 .Kut          .              .             1.0000   4.0365000E+9      
10 .Kot          .              .             1.0000   2.428920E+10      
10 .Mak          .              .             1.0000   1.6038000E+9      
10 .Kuk          .              .             1.0000   2.4165000E+9      
10 .Kok          .              .             1.0000   1.6065000E+9      
11 .Mat          .              .             1.0000   9.9810000E+9      
11 .Kut          .              .             1.0000   4.9850000E+9      
11 .Kot          .              .             1.0000   2.998800E+10      
11 .Mak          .              .             1.0000   1.9820000E+9      
11 .Kuk          .              .             1.0000   2.9850000E+9      
11 .Kok          .              .             1.0000   1.9850000E+9      
12 .Mat          .              .             1.0000   1.207910E+10      
12 .Kut          .              .             1.0000   6.0335000E+9      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/17/17 16:42:05 Page 59
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 341


     VAR r  1 if we buy n boats of timber i, 0 otherwise

               LOWER          LEVEL          UPPER         MARGINAL

12 .Kot          .              .             1.0000   3.628680E+10      
12 .Mak          .              .             1.0000   2.4002000E+9      
12 .Kuk          .              .             1.0000   3.6135000E+9      
12 .Kok          .              .             1.0000   2.4035000E+9      
13 .Mat          .              .             1.0000   1.437720E+10      
13 .Kut          .              .             1.0000   7.1820000E+9      
13 .Kot          .              .             1.0000   4.318560E+10      
13 .Mak          .              .             1.0000   2.8584000E+9      
13 .Kuk          .              .             1.0000   4.3020000E+9      
13 .Kok          .              .             1.0000   2.8620000E+9      
14 .Mat          .              .             1.0000   1.687530E+10      
14 .Kut          .              .             1.0000   8.4305000E+9      
14 .Kot          .              .             1.0000   5.068440E+10      
14 .Mak          .              .             1.0000   3.3566000E+9      
14 .Kuk          .              .             1.0000   5.0505000E+9      
14 .Kok          .              .             1.0000   3.3605000E+9      
15 .Mat          .              .             1.0000   1.957340E+10      
15 .Kut          .              .             1.0000   9.7790000E+9      
15 .Kot          .              .             1.0000   5.878320E+10      
15 .Mak          .              .             1.0000   3.8948000E+9      
15 .Kuk          .              .             1.0000   5.8590000E+9      
15 .Kok          .              .             1.0000   3.8990000E+9      
16 .Mat          .              .             1.0000   2.247150E+10      
16 .Kut          .              .             1.0000   1.122750E+10      
16 .Kot          .              .             1.0000   6.748200E+10      
16 .Mak          .              .             1.0000   4.4730000E+9      
16 .Kuk          .              .             1.0000   6.7275000E+9      
16 .Kok          .              .             1.0000   4.4775000E+9      
17 .Mat          .              .             1.0000   2.556960E+10      
17 .Kut          .              .             1.0000   1.277600E+10      
17 .Kot          .              .             1.0000   7.678080E+10      
17 .Mak          .              .             1.0000   5.0912000E+9      
17 .Kuk          .              .             1.0000   7.6560000E+9      
17 .Kok          .              .             1.0000   5.0960000E+9      
18 .Mat          .              .             1.0000   2.886770E+10      
18 .Kut          .              .             1.0000   1.442450E+10      
18 .Kot          .              .             1.0000   8.667960E+10      
18 .Mak          .              .             1.0000   5.7494000E+9      
18 .Kuk          .              .             1.0000   8.6445000E+9      
18 .Kok          .              .             1.0000   5.7545000E+9      
19 .Mat          .              .             1.0000   3.236580E+10      
19 .Kut          .              .             1.0000   1.617300E+10      
19 .Kot          .              .             1.0000   9.717840E+10      
19 .Mak          .              .             1.0000   6.4476000E+9      
19 .Kuk          .              .             1.0000   9.6930000E+9      
19 .Kok          .              .             1.0000   6.4530000E+9      
20 .Mat          .              .             1.0000   3.606390E+10      
20 .Kut          .              .             1.0000   1.802150E+10      
20 .Kot          .              .             1.0000   1.082772E+11      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/17/17 16:42:05 Page 60
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 341


     VAR r  1 if we buy n boats of timber i, 0 otherwise

               LOWER          LEVEL          UPPER         MARGINAL

20 .Mak          .              .             1.0000   7.1858000E+9      
20 .Kuk          .              .             1.0000   1.080150E+10      
20 .Kok          .              .             1.0000   7.1915000E+9      
21 .Mat          .              .             1.0000   3.996200E+10      
21 .Kut          .              .             1.0000   1.997000E+10      
21 .Kot          .              .             1.0000   1.199760E+11      
21 .Mak          .              .             1.0000   7.9640000E+9      
21 .Kuk          .              .             1.0000   1.197000E+10      
21 .Kok          .              .             1.0000   7.9700000E+9      
22 .Mat          .              .             1.0000   4.406010E+10      
22 .Kut          .              .             1.0000   2.201850E+10      
22 .Kot          .              .             1.0000   1.322748E+11      
22 .Mak          .              .             1.0000   8.7822000E+9      
22 .Kuk          .              .             1.0000   1.319850E+10      
22 .Kok          .              .             1.0000   8.7885000E+9      
23 .Mat          .              .             1.0000   4.835820E+10      
23 .Kut          .              .             1.0000   2.416700E+10      
23 .Kot          .              .             1.0000   1.451736E+11      
23 .Mak          .              .             1.0000   9.6404000E+9      
23 .Kuk          .              .             1.0000   1.448700E+10      
23 .Kok          .              .             1.0000   9.6470000E+9      
24 .Mat          .              .             1.0000   5.285630E+10      
24 .Kut          .              .             1.0000   2.641550E+10      
24 .Kot          .              .             1.0000   1.586724E+11      
24 .Mak          .              .             1.0000   1.053860E+10      
24 .Kuk          .              .             1.0000   1.583550E+10      
24 .Kok          .              .             1.0000   1.054550E+10      
25 .Mat          .              .             1.0000   5.755440E+10      
25 .Kut          .              .             1.0000   2.876400E+10      
25 .Kot          .              .             1.0000   1.727712E+11      
25 .Mak          .              .             1.0000   1.147680E+10      
25 .Kuk          .              .             1.0000   1.724400E+10      
25 .Kok          .              .             1.0000   1.148400E+10      
26 .Mat          .              .             1.0000   6.245250E+10      
26 .Kut          .              .             1.0000   3.121250E+10      
26 .Kot          .              .             1.0000   1.874700E+11      
26 .Mak          .              .             1.0000   1.245500E+10      
26 .Kuk          .              .             1.0000   1.871250E+10      
26 .Kok          .              .             1.0000   1.246250E+10      
27 .Mat          .              .             1.0000   6.755060E+10      
27 .Kut          .              .             1.0000   3.376100E+10      
27 .Kot          .              .             1.0000   2.027688E+11      
27 .Mak          .              .             1.0000   1.347320E+10      
27 .Kuk          .              .             1.0000   2.024100E+10      
27 .Kok          .              .             1.0000   1.348100E+10      
28 .Mat          .              .             1.0000   7.284870E+10      
28 .Kut          .              .             1.0000   3.640950E+10      
28 .Kot          .              .             1.0000   2.186676E+11      
28 .Mak          .              .             1.0000   1.453140E+10      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/17/17 16:42:05 Page 61
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 341


     VAR r  1 if we buy n boats of timber i, 0 otherwise

               LOWER          LEVEL          UPPER         MARGINAL

28 .Kuk          .              .             1.0000   2.182950E+10      
28 .Kok          .              .             1.0000   1.453950E+10      
29 .Mat          .              .             1.0000   7.834680E+10      
29 .Kut          .              .             1.0000   3.915800E+10      
29 .Kot          .              .             1.0000   2.351664E+11      
29 .Mak          .              .             1.0000   1.562960E+10      
29 .Kuk          .              .             1.0000   2.347800E+10      
29 .Kok          .              .             1.0000   1.563800E+10      
30 .Mat          .              .             1.0000   8.404490E+10      
30 .Kut          .              .             1.0000   4.200650E+10      
30 .Kot          .              .             1.0000   2.522652E+11      
30 .Mak          .              .             1.0000   1.676780E+10      
30 .Kuk          .              .             1.0000   2.518650E+10      
30 .Kok          .              .             1.0000   1.677650E+10      
31 .Mat          .              .             1.0000   8.994300E+10      
31 .Kut          .              .             1.0000   4.495500E+10      
31 .Kot          .              .             1.0000   2.699640E+11      
31 .Mak          .              .             1.0000   1.794600E+10      
31 .Kuk          .              .             1.0000   2.695500E+10      
31 .Kok          .              .             1.0000   1.795500E+10      
32 .Mat          .              .             1.0000   9.604110E+10      
32 .Kut          .              .             1.0000   4.800350E+10      
32 .Kot          .              .             1.0000   2.882628E+11      
32 .Mak          .              .             1.0000   1.916420E+10      
32 .Kuk          .              .             1.0000   2.878350E+10      
32 .Kok          .              .             1.0000   1.917350E+10      
33 .Mat          .              .             1.0000   1.023392E+11      
33 .Kut          .              .             1.0000   5.115200E+10      
33 .Kot          .              .             1.0000   3.071616E+11      
33 .Mak          .              .             1.0000   2.042240E+10      
33 .Kuk          .              .             1.0000   3.067200E+10      
33 .Kok          .              .             1.0000   2.043200E+10      
34 .Mat          .              .             1.0000   1.088373E+11      
34 .Kut          .              .             1.0000   5.440050E+10      
34 .Kot          .              .             1.0000   3.266604E+11      
34 .Mak          .              .             1.0000   2.172060E+10      
34 .Kuk          .              .             1.0000   3.262050E+10      
34 .Kok          .              .             1.0000   2.173050E+10      
35 .Mat          .              .             1.0000   1.155354E+11      
35 .Kut          .              .             1.0000   5.774900E+10      
35 .Kot          .              .             1.0000   3.467592E+11      
35 .Mak          .              .             1.0000   2.305880E+10      
35 .Kuk          .              .             1.0000   3.462900E+10      
35 .Kok          .              .             1.0000   2.306900E+10      
36 .Mat          .              .             1.0000   1.224335E+11      
36 .Kut          .              .             1.0000   6.119750E+10      
36 .Kot          .              .             1.0000   3.674580E+11      
36 .Mak          .              .             1.0000   2.443700E+10      
36 .Kuk          .              .             1.0000   3.669750E+10      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/17/17 16:42:05 Page 62
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 341


     VAR r  1 if we buy n boats of timber i, 0 otherwise

               LOWER          LEVEL          UPPER         MARGINAL

36 .Kok          .              .             1.0000   2.444750E+10      
37 .Mat          .              .             1.0000   1.295316E+11      
37 .Kut          .              .             1.0000   6.474600E+10      
37 .Kot          .              .             1.0000   3.887568E+11      
37 .Mak          .              .             1.0000   2.585520E+10      
37 .Kuk          .              .             1.0000   3.882600E+10      
37 .Kok          .              .             1.0000   2.586600E+10      
38 .Mat          .              .             1.0000   1.368297E+11      
38 .Kut          .              .             1.0000   6.839450E+10      
38 .Kot          .              .             1.0000   4.106556E+11      
38 .Mak          .              .             1.0000   2.731340E+10      
38 .Kuk          .              .             1.0000   4.101450E+10      
38 .Kok          .              .             1.0000   2.732450E+10      
39 .Mat          .              .             1.0000   1.443278E+11      
39 .Kut          .              .             1.0000   7.214300E+10      
39 .Kot          .              .             1.0000   4.331544E+11      
39 .Mak          .              .             1.0000   2.881160E+10      
39 .Kuk          .              .             1.0000   4.326300E+10      
39 .Kok          .              .             1.0000   2.882300E+10      
40 .Mat          .              .             1.0000   1.520259E+11      
40 .Kut          .              .             1.0000   7.599150E+10      
40 .Kot          .              .             1.0000   4.562532E+11      
40 .Mak          .              .             1.0000   3.034980E+10      
40 .Kuk          .              .             1.0000   4.557150E+10      
40 .Kok          .              .             1.0000   3.036150E+10      
41 .Mat          .              .             1.0000   1.599240E+11      
41 .Kut          .              .             1.0000   7.994000E+10      
41 .Kot          .              .             1.0000   4.799520E+11      
41 .Mak          .              .             1.0000   3.192800E+10      
41 .Kuk          .              .             1.0000   4.794000E+10      
41 .Kok          .              .             1.0000   3.194000E+10      
42 .Mat          .              .             1.0000   1.680221E+11      
42 .Kut          .              .             1.0000   8.398850E+10      
42 .Kot          .              .             1.0000   5.042508E+11      
42 .Mak          .              .             1.0000   3.354620E+10      
42 .Kuk          .              .             1.0000   5.036850E+10      
42 .Kok          .              .             1.0000   3.355850E+10      
43 .Mat          .              .             1.0000   1.763202E+11      
43 .Kut          .              .             1.0000   8.813700E+10      
43 .Kot          .              .             1.0000   5.291496E+11      
43 .Mak          .              .             1.0000   3.520440E+10      
43 .Kuk          .              .             1.0000   5.285700E+10      
43 .Kok          .              .             1.0000   3.521700E+10      
44 .Mat          .              .             1.0000   1.848183E+11      
44 .Kut          .              .             1.0000   9.238550E+10      
44 .Kot          .              .             1.0000   5.546484E+11      
44 .Mak          .              .             1.0000   3.690260E+10      
44 .Kuk          .              .             1.0000   5.540550E+10      
44 .Kok          .              .             1.0000   3.691550E+10      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/17/17 16:42:05 Page 63
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 341


     VAR r  1 if we buy n boats of timber i, 0 otherwise

               LOWER          LEVEL          UPPER         MARGINAL

45 .Mat          .              .             1.0000   1.935164E+11      
45 .Kut          .              .             1.0000   9.673400E+10      
45 .Kot          .              .             1.0000   5.807472E+11      
45 .Mak          .              .             1.0000   3.864080E+10      
45 .Kuk          .              .             1.0000   5.801400E+10      
45 .Kok          .              .             1.0000   3.865400E+10      
46 .Mat          .              .             1.0000   2.024145E+11      
46 .Kut          .              .             1.0000   1.011825E+11      
46 .Kot          .              .             1.0000   6.074460E+11      
46 .Mak          .              .             1.0000   4.041900E+10      
46 .Kuk          .              .             1.0000   6.068250E+10      
46 .Kok          .              .             1.0000   4.043250E+10      
47 .Mat          .              .             1.0000   2.115126E+11      
47 .Kut          .              .             1.0000   1.057310E+11      
47 .Kot          .              .             1.0000   6.347448E+11      
47 .Mak          .              .             1.0000   4.223720E+10      
47 .Kuk          .              .             1.0000   6.341100E+10      
47 .Kok          .              .             1.0000   4.225100E+10      
48 .Mat          .              .             1.0000   2.208107E+11      
48 .Kut          .              .             1.0000   1.103795E+11      
48 .Kot          .              .             1.0000   6.626436E+11      
48 .Mak          .              .             1.0000   4.409540E+10      
48 .Kuk          .              .             1.0000   6.619950E+10      
48 .Kok          .              .             1.0000   4.410950E+10      
49 .Mat          .              .             1.0000   2.303088E+11      
49 .Kut          .              .             1.0000   1.151280E+11      
49 .Kot          .              .             1.0000   6.911424E+11      
49 .Mak          .              .             1.0000   4.599360E+10      
49 .Kuk          .              .             1.0000   6.904800E+10      
49 .Kok          .              .             1.0000   4.600800E+10      
50 .Mat          .              .             1.0000   2.400069E+11      
50 .Kut          .              .             1.0000   1.199765E+11      
50 .Kot          .              .             1.0000   7.202412E+11      
50 .Mak          .              .             1.0000   4.793180E+10      
50 .Kuk          .              .             1.0000   7.195650E+10      
50 .Kok          .              .             1.0000   4.794650E+10      
51 .Mat          .              .             1.0000   2.499050E+11      
51 .Kut          .              .             1.0000   1.249250E+11      
51 .Kot          .              .             1.0000   7.499400E+11      
51 .Mak          .              .             1.0000   4.991000E+10      
51 .Kuk          .              .             1.0000   7.492500E+10      
51 .Kok          .              .             1.0000   4.992500E+10      
52 .Mat          .              .             1.0000   2.600031E+11      
52 .Kut          .              .             1.0000   1.299735E+11      
52 .Kot          .              .             1.0000   7.802388E+11      
52 .Mak          .              .             1.0000   5.192820E+10      
52 .Kuk          .              .             1.0000   7.795350E+10      
52 .Kok          .              .             1.0000   5.194350E+10      
53 .Mat          .              .             1.0000   2.703012E+11      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/17/17 16:42:05 Page 64
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 341


     VAR r  1 if we buy n boats of timber i, 0 otherwise

               LOWER          LEVEL          UPPER         MARGINAL

53 .Kut          .              .             1.0000   1.351220E+11      
53 .Kot          .              .             1.0000   8.111376E+11      
53 .Mak          .              .             1.0000   5.398640E+10      
53 .Kuk          .              .             1.0000   8.104200E+10      
53 .Kok          .              .             1.0000   5.400200E+10      
54 .Mat          .              .             1.0000   2.807993E+11      
54 .Kut          .              .             1.0000   1.403705E+11      
54 .Kot          .              .             1.0000   8.426364E+11      
54 .Mak          .              .             1.0000   5.608460E+10      
54 .Kuk          .              .             1.0000   8.419050E+10      
54 .Kok          .              .             1.0000   5.610050E+10      
55 .Mat          .              .             1.0000   2.914974E+11      
55 .Kut          .              .             1.0000   1.457190E+11      
55 .Kot          .              .             1.0000   8.747352E+11      
55 .Mak          .              .             1.0000   5.822280E+10      
55 .Kuk          .              .             1.0000   8.739900E+10      
55 .Kok          .              .             1.0000   5.823900E+10      
56 .Mat          .              .             1.0000   3.023955E+11      
56 .Kut          .              .             1.0000   1.511675E+11      
56 .Kot          .              .             1.0000   9.074340E+11      
56 .Mak          .              .             1.0000   6.040100E+10      
56 .Kuk          .              .             1.0000   9.066750E+10      
56 .Kok          .              .             1.0000   6.041750E+10      
57 .Mat          .              .             1.0000   3.134936E+11      
57 .Kut          .              .             1.0000   1.567160E+11      
57 .Kot          .              .             1.0000   9.407328E+11      
57 .Mak          .              .             1.0000   6.261920E+10      
57 .Kuk          .              .             1.0000   9.399600E+10      
57 .Kok          .              .             1.0000   6.263600E+10      
58 .Mat          .              .             1.0000   3.247917E+11      
58 .Kut          .              .             1.0000   1.623645E+11      
58 .Kot          .              .             1.0000   9.746316E+11      
58 .Mak          .              .             1.0000   6.487740E+10      
58 .Kuk          .              .             1.0000   9.738450E+10      
58 .Kok          .              .             1.0000   6.489450E+10      
59 .Mat          .              .             1.0000   3.362898E+11      
59 .Kut          .              .             1.0000   1.681130E+11      
59 .Kot          .              .             1.0000   1.009130E+12      
59 .Mak          .              .             1.0000   6.717560E+10      
59 .Kuk          .              .             1.0000   1.008330E+11      
59 .Kok          .              .             1.0000   6.719300E+10      
60 .Mat          .              .             1.0000   3.479879E+11      
60 .Kut          .              .             1.0000   1.739615E+11      
60 .Kot          .              .             1.0000   1.044229E+12      
60 .Mak          .              .             1.0000   6.951380E+10      
60 .Kuk          .              .             1.0000   1.043415E+11      
60 .Kok          .              .             1.0000   6.953150E+10      
61 .Mat          .              .             1.0000   3.598860E+11      
61 .Kut          .              .             1.0000   1.799100E+11      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/17/17 16:42:05 Page 65
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 341


     VAR r  1 if we buy n boats of timber i, 0 otherwise

               LOWER          LEVEL          UPPER         MARGINAL

61 .Kot          .              .             1.0000   1.079928E+12      
61 .Mak          .              .             1.0000   7.189200E+10      
61 .Kuk          .              .             1.0000   1.079100E+11      
61 .Kok          .              .             1.0000   7.191000E+10      
62 .Mat          .              .             1.0000   3.719841E+11      
62 .Kut          .              .             1.0000   1.859585E+11      
62 .Kot          .              .             1.0000   1.116227E+12      
62 .Mak          .              .             1.0000   7.431020E+10      
62 .Kuk          .              .             1.0000   1.115385E+11      
62 .Kok          .              .             1.0000   7.432850E+10      
63 .Mat          .              .             1.0000   3.842822E+11      
63 .Kut          .              .             1.0000   1.921070E+11      
63 .Kot          .              .             1.0000   1.153126E+12      
63 .Mak          .              .             1.0000   7.676840E+10      
63 .Kuk          .              .             1.0000   1.152270E+11      
63 .Kok          .              .             1.0000   7.678700E+10      
64 .Mat          .              .             1.0000   3.967803E+11      
64 .Kut          .              .             1.0000   1.983555E+11      
64 .Kot          .              .             1.0000   1.190624E+12      
64 .Mak          .              .             1.0000   7.926660E+10      
64 .Kuk          .              .             1.0000   1.189755E+11      
64 .Kok          .              .             1.0000   7.928550E+10      
65 .Mat          .              .             1.0000   4.094784E+11      
65 .Kut          .              .             1.0000   2.047040E+11      
65 .Kot          .              .             1.0000   1.228723E+12      
65 .Mak          .              .             1.0000   8.180480E+10      
65 .Kuk          .              .             1.0000   1.227840E+11      
65 .Kok          .              .             1.0000   8.182400E+10      
66 .Mat          .              .             1.0000   4.223765E+11      
66 .Kut          .              .             1.0000   2.111525E+11      
66 .Kot          .              .             1.0000   1.267422E+12      
66 .Mak          .              .             1.0000   8.438300E+10      
66 .Kuk          .              .             1.0000   1.266525E+11      
66 .Kok          .              .             1.0000   8.440250E+10      
67 .Mat          .              .             1.0000   4.354746E+11      
67 .Kut          .              .             1.0000   2.177010E+11      
67 .Kot          .              .             1.0000   1.306721E+12      
67 .Mak          .              .             1.0000   8.700120E+10      
67 .Kuk          .              .             1.0000   1.305810E+11      
67 .Kok          .              .             1.0000   8.702100E+10      
68 .Mat          .              .             1.0000   4.487727E+11      
68 .Kut          .              .             1.0000   2.243495E+11      
68 .Kot          .              .             1.0000   1.346620E+12      
68 .Mak          .              .             1.0000   8.965940E+10      
68 .Kuk          .              .             1.0000   1.345695E+11      
68 .Kok          .              .             1.0000   8.967950E+10      
69 .Mat          .              .             1.0000   4.622708E+11      
69 .Kut          .              .             1.0000   2.310980E+11      
69 .Kot          .              .             1.0000   1.387118E+12      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/17/17 16:42:05 Page 66
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 341


     VAR r  1 if we buy n boats of timber i, 0 otherwise

               LOWER          LEVEL          UPPER         MARGINAL

69 .Mak          .              .             1.0000   9.235760E+10      
69 .Kuk          .              .             1.0000   1.386180E+11      
69 .Kok          .              .             1.0000   9.237800E+10      
70 .Mat          .              .             1.0000   4.759689E+11      
70 .Kut          .              .             1.0000   2.379465E+11      
70 .Kot          .              .             1.0000   1.428217E+12      
70 .Mak          .              .             1.0000   9.509580E+10      
70 .Kuk          .              .             1.0000   1.427265E+11      
70 .Kok          .              .             1.0000   9.511650E+10      
71 .Mat          .              .             1.0000   4.898670E+11      
71 .Kut          .              .             1.0000   2.448950E+11      
71 .Kot          .              .             1.0000   1.469916E+12      
71 .Mak          .              .             1.0000   9.787400E+10      
71 .Kuk          .              .             1.0000   1.468950E+11      
71 .Kok          .              .             1.0000   9.789500E+10      
72 .Mat          .              .             1.0000   5.039651E+11      
72 .Kut          .              .             1.0000   2.519435E+11      
72 .Kot          .              .             1.0000   1.512215E+12      
72 .Mak          .              .             1.0000   1.006922E+11      
72 .Kuk          .              .             1.0000   1.511235E+11      
72 .Kok          .              .             1.0000   1.007135E+11      
73 .Mat          .              .             1.0000   5.182632E+11      
73 .Kut          .              .             1.0000   2.590920E+11      
73 .Kot          .              .             1.0000   1.555114E+12      
73 .Mak          .              .             1.0000   1.035504E+11      
73 .Kuk          .              .             1.0000   1.554120E+11      
73 .Kok          .              .             1.0000   1.035720E+11      
74 .Mat          .              .             1.0000   5.327613E+11      
74 .Kut          .              .             1.0000   2.663405E+11      
74 .Kot          .              .             1.0000   1.598612E+12      
74 .Mak          .              .             1.0000   1.064486E+11      
74 .Kuk          .              .             1.0000   1.597605E+11      
74 .Kok          .              .             1.0000   1.064705E+11      
75 .Mat          .              .             1.0000   5.474594E+11      
75 .Kut          .              .             1.0000   2.736890E+11      
75 .Kot          .              .             1.0000   1.642711E+12      
75 .Mak          .              .             1.0000   1.093868E+11      
75 .Kuk          .              .             1.0000   1.641690E+11      
75 .Kok          .              .             1.0000   1.094090E+11      
76 .Mat          .              .             1.0000   5.623575E+11      
76 .Kut          .              .             1.0000   2.811375E+11      
76 .Kot          .              .             1.0000   1.687410E+12      
76 .Mak          .              .             1.0000   1.123650E+11      
76 .Kuk          .              .             1.0000   1.686375E+11      
76 .Kok          .              .             1.0000   1.123875E+11      
77 .Mat          .              .             1.0000   5.774556E+11      
77 .Kut          .              .             1.0000   2.886860E+11      
77 .Kot          .              .             1.0000   1.732709E+12      
77 .Mak          .              .             1.0000   1.153832E+11      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/17/17 16:42:05 Page 67
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 341


     VAR r  1 if we buy n boats of timber i, 0 otherwise

               LOWER          LEVEL          UPPER         MARGINAL

77 .Kuk          .              .             1.0000   1.731660E+11      
77 .Kok          .              .             1.0000   1.154060E+11      
78 .Mat          .              .             1.0000   5.927537E+11      
78 .Kut          .              .             1.0000   2.963345E+11      
78 .Kot          .              .             1.0000   1.778608E+12      
78 .Mak          .              .             1.0000   1.184414E+11      
78 .Kuk          .              .             1.0000   1.777545E+11      
78 .Kok          .              .             1.0000   1.184645E+11      
79 .Mat          .              .             1.0000   6.082518E+11      
79 .Kut          .              .             1.0000   3.040830E+11      
79 .Kot          .              .             1.0000   1.825106E+12      
79 .Mak          .              .             1.0000   1.215396E+11      
79 .Kuk          .              .             1.0000   1.824030E+11      
79 .Kok          .              .             1.0000   1.215630E+11      
80 .Mat          .              .             1.0000   6.239499E+11      
80 .Kut          .              .             1.0000   3.119315E+11      
80 .Kot          .              .             1.0000   1.872205E+12      
80 .Mak          .              .             1.0000   1.246778E+11      
80 .Kuk          .              .             1.0000   1.871115E+11      
80 .Kok          .              .             1.0000   1.247015E+11      
81 .Mat          .              .             1.0000   6.398480E+11      
81 .Kut          .              .             1.0000   3.198800E+11      
81 .Kot          .              .             1.0000   1.919904E+12      
81 .Mak          .              .             1.0000   1.278560E+11      
81 .Kuk          .              .             1.0000   1.918800E+11      
81 .Kok          .              .             1.0000   1.278800E+11      
82 .Mat          .              .             1.0000   6.559461E+11      
82 .Kut          .              .             1.0000   3.279285E+11      
82 .Kot          .              .             1.0000   1.968203E+12      
82 .Mak          .              .             1.0000   1.310742E+11      
82 .Kuk          .              .             1.0000   1.967085E+11      
82 .Kok          .              .             1.0000   1.310985E+11      
83 .Mat          .              .             1.0000   6.722442E+11      
83 .Kut          .              .             1.0000   3.360770E+11      
83 .Kot          .              .             1.0000   2.017102E+12      
83 .Mak          .              .             1.0000   1.343324E+11      
83 .Kuk          .              .             1.0000   2.015970E+11      
83 .Kok          .              .             1.0000   1.343570E+11      
84 .Mat          .              .             1.0000   6.887423E+11      
84 .Kut          .              .             1.0000   3.443255E+11      
84 .Kot          .              .             1.0000   2.066600E+12      
84 .Mak          .              .             1.0000   1.376306E+11      
84 .Kuk          .              .             1.0000   2.065455E+11      
84 .Kok          .              .             1.0000   1.376555E+11      
85 .Mat          .              .             1.0000   7.054404E+11      
85 .Kut          .              .             1.0000   3.526740E+11      
85 .Kot          .              .             1.0000   2.116699E+12      
85 .Mak          .              .             1.0000   1.409688E+11      
85 .Kuk          .              .             1.0000   2.115540E+11      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/17/17 16:42:05 Page 68
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 341


     VAR r  1 if we buy n boats of timber i, 0 otherwise

               LOWER          LEVEL          UPPER         MARGINAL

85 .Kok          .              .             1.0000   1.409940E+11      
86 .Mat          .              .             1.0000   7.223385E+11      
86 .Kut          .              .             1.0000   3.611225E+11      
86 .Kot          .              .             1.0000   2.167398E+12      
86 .Mak          .              .             1.0000   1.443470E+11      
86 .Kuk          .              .             1.0000   2.166225E+11      
86 .Kok          .              .             1.0000   1.443725E+11      
87 .Mat          .              .             1.0000   7.394366E+11      
87 .Kut          .              .             1.0000   3.696710E+11      
87 .Kot          .              .             1.0000   2.218697E+12      
87 .Mak          .              .             1.0000   1.477652E+11      
87 .Kuk          .              .             1.0000   2.217510E+11      
87 .Kok          .              .             1.0000   1.477910E+11      
88 .Mat          .              .             1.0000   7.567347E+11      
88 .Kut          .              .             1.0000   3.783195E+11      
88 .Kot          .              .             1.0000   2.270596E+12      
88 .Mak          .              .             1.0000   1.512234E+11      
88 .Kuk          .              .             1.0000   2.269395E+11      
88 .Kok          .              .             1.0000   1.512495E+11      
89 .Mat          .              .             1.0000   7.742328E+11      
89 .Kut          .              .             1.0000   3.870680E+11      
89 .Kot          .              .             1.0000   2.323094E+12      
89 .Mak          .              .             1.0000   1.547216E+11      
89 .Kuk          .              .             1.0000   2.321880E+11      
89 .Kok          .              .             1.0000   1.547480E+11      
90 .Mat          .              .             1.0000   7.919309E+11      
90 .Kut          .              .             1.0000   3.959165E+11      
90 .Kot          .              .             1.0000   2.376193E+12      
90 .Mak          .              .             1.0000   1.582598E+11      
90 .Kuk          .              .             1.0000   2.374965E+11      
90 .Kok          .              .             1.0000   1.582865E+11      
91 .Mat          .              .             1.0000   8.098290E+11      
91 .Kut          .              .             1.0000   4.048650E+11      
91 .Kot          .              .             1.0000   2.429892E+12      
91 .Mak          .              .             1.0000   1.618380E+11      
91 .Kuk          .              .             1.0000   2.428650E+11      
91 .Kok          .              .             1.0000   1.618650E+11      
92 .Mat          .              .             1.0000   8.279271E+11      
92 .Kut          .              .             1.0000   4.139135E+11      
92 .Kot          .              .             1.0000   2.484191E+12      
92 .Mak          .              .             1.0000   1.654562E+11      
92 .Kuk          .              .             1.0000   2.482935E+11      
92 .Kok          .              .             1.0000   1.654835E+11      
93 .Mat          .              .             1.0000   8.462252E+11      
93 .Kut          .              .             1.0000   4.230620E+11      
93 .Kot          .              .             1.0000   2.539090E+12      
93 .Mak          .              .             1.0000   1.691144E+11      
93 .Kuk          .              .             1.0000   2.537820E+11      
93 .Kok          .              .             1.0000   1.691420E+11      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/17/17 16:42:05 Page 69
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 341


     VAR r  1 if we buy n boats of timber i, 0 otherwise

               LOWER          LEVEL          UPPER         MARGINAL

94 .Mat          .              .             1.0000   8.647233E+11      
94 .Kut          .              .             1.0000   4.323105E+11      
94 .Kot          .              .             1.0000   2.594588E+12      
94 .Mak          .              .             1.0000   1.728126E+11      
94 .Kuk          .              .             1.0000   2.593305E+11      
94 .Kok          .              .             1.0000   1.728405E+11      
95 .Mat          .              .             1.0000   8.834214E+11      
95 .Kut          .              .             1.0000   4.416590E+11      
95 .Kot          .              .             1.0000   2.650687E+12      
95 .Mak          .              .             1.0000   1.765508E+11      
95 .Kuk          .              .             1.0000   2.649390E+11      
95 .Kok          .              .             1.0000   1.765790E+11      
96 .Mat          .              .             1.0000   9.023195E+11      
96 .Kut          .              .             1.0000   4.511075E+11      
96 .Kot          .              .             1.0000   2.707386E+12      
96 .Mak          .              .             1.0000   1.803290E+11      
96 .Kuk          .              .             1.0000   2.706075E+11      
96 .Kok          .              .             1.0000   1.803575E+11      
97 .Mat          .              .             1.0000   9.214176E+11      
97 .Kut          .              .             1.0000   4.606560E+11      
97 .Kot          .              .             1.0000   2.764685E+12      
97 .Mak          .              .             1.0000   1.841472E+11      
97 .Kuk          .              .             1.0000   2.763360E+11      
97 .Kok          .              .             1.0000   1.841760E+11      
98 .Mat          .              .             1.0000   9.407157E+11      
98 .Kut          .              .             1.0000   4.703045E+11      
98 .Kot          .              .             1.0000   2.822584E+12      
98 .Mak          .              .             1.0000   1.880054E+11      
98 .Kuk          .              .             1.0000   2.821245E+11      
98 .Kok          .              .             1.0000   1.880345E+11      
99 .Mat          .              .             1.0000   9.602138E+11      
99 .Kut          .              .             1.0000   4.800530E+11      
99 .Kot          .              .             1.0000   2.881082E+12      
99 .Mak          .              .             1.0000   1.919036E+11      
99 .Kuk          .              .             1.0000   2.879730E+11      
99 .Kok          .              .             1.0000   1.919330E+11      
100.Mat          .              .             1.0000   9.799119E+11      
100.Kut          .              .             1.0000   4.899015E+11      
100.Kot          .              .             1.0000   2.940181E+12      
100.Mak          .              .             1.0000   1.958418E+11      
100.Kuk          .              .             1.0000   2.938815E+11      
100.Kok          .              .             1.0000   1.958715E+11      
101.Mat          .              .             1.0000   0.999810E+12      
101.Kut          .              .             1.0000   4.998500E+11      
101.Kot          .              .             1.0000   2.999880E+12      
101.Mak          .              .             1.0000   1.998200E+11      
101.Kuk          .              .             1.0000   2.998500E+11      
101.Kok          .              .             1.0000   1.998500E+11      
102.Mat          .              .             1.0000   1.019908E+12      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/17/17 16:42:05 Page 70
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 341


     VAR r  1 if we buy n boats of timber i, 0 otherwise

               LOWER          LEVEL          UPPER         MARGINAL

102.Kut          .              .             1.0000   5.098985E+11      
102.Kot          .              .             1.0000   3.060179E+12      
102.Mak          .              .             1.0000   2.038382E+11      
102.Kuk          .              .             1.0000   3.058785E+11      
102.Kok          .              .             1.0000   2.038685E+11      
103.Mat          .              .             1.0000   1.040206E+12      
103.Kut          .              .             1.0000   5.200470E+11      
103.Kot          .              .             1.0000   3.121078E+12      
103.Mak          .              .             1.0000   2.078964E+11      
103.Kuk          .              .             1.0000   3.119670E+11      
103.Kok          .              .             1.0000   2.079270E+11      
104.Mat          .              .             1.0000   1.060704E+12      
104.Kut          .              .             1.0000   5.302955E+11      
104.Kot          .              .             1.0000   3.182576E+12      
104.Mak          .              .             1.0000   2.119946E+11      
104.Kuk          .              .             1.0000   3.181155E+11      
104.Kok          .              .             1.0000   2.120255E+11      
105.Mat          .              .             1.0000   1.081402E+12      
105.Kut          .              .             1.0000   5.406440E+11      
105.Kot          .              .             1.0000   3.244675E+12      
105.Mak          .              .             1.0000   2.161328E+11      
105.Kuk          .              .             1.0000   3.243240E+11      
105.Kok          .              .             1.0000   2.161640E+11      
106.Mat          .              .             1.0000   1.102301E+12      
106.Kut          .              .             1.0000   5.510925E+11      
106.Kot          .              .             1.0000   3.307374E+12      
106.Mak          .              .             1.0000   2.203110E+11      
106.Kuk          .              .             1.0000   3.305925E+11      
106.Kok          .              .             1.0000   2.203425E+11      
107.Mat          .              .             1.0000   1.123399E+12      
107.Kut          .              .             1.0000   5.616410E+11      
107.Kot          .              .             1.0000   3.370673E+12      
107.Mak          .              .             1.0000   2.245292E+11      
107.Kuk          .              .             1.0000   3.369210E+11      
107.Kok          .              .             1.0000   2.245610E+11      

---- VAR u  1 if we use n boats for product j shiping to region k, 0 otherwise

                  LOWER          LEVEL          UPPER         MARGINAL

1 .Mas .EU          .              .             1.0000         EPS         
1 .Mas .IE          .              .             1.0000         EPS         
1 .Mas .PA          .              .             1.0000         EPS         
1 .Mas .KI          .              .             1.0000         EPS         
1 .Kus .EU          .              .             1.0000         EPS         
1 .Kus .IE          .              .             1.0000         EPS         
1 .Kus .PA          .              .             1.0000         EPS         
1 .Kus .KI          .              .             1.0000         EPS         
1 .Kos .EU          .              .             1.0000         EPS         
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/17/17 16:42:05 Page 71
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 341


     VAR u  1 if we use n boats for product j shiping to region k, 0 otherwise

                  LOWER          LEVEL          UPPER         MARGINAL

1 .Kos .IE          .              .             1.0000         EPS         
1 .Kos .PA          .              .             1.0000         EPS         
1 .Kos .KI          .              .             1.0000         EPS         
1 .Kuv .EU          .              .             1.0000         EPS         
1 .Kuv .IE          .              .             1.0000         EPS         
1 .Kuv .PA          .              .             1.0000         EPS         
1 .Kuv .KI          .              .             1.0000         EPS         
1 .Kov .EU          .              .             1.0000         EPS         
1 .Kov .IE          .              .             1.0000         EPS         
1 .Kov .PA          .              .             1.0000         EPS         
1 .Kov .KI          .              .             1.0000         EPS         
1 .Hsel.EU          .              .             1.0000         EPS         
1 .Hsel.IE          .              .             1.0000         EPS         
1 .Hsel.PA          .              .             1.0000         EPS         
1 .Hsel.KI          .              .             1.0000         EPS         
1 .Lsel.EU          .              .             1.0000         EPS         
1 .Lsel.IE          .              .             1.0000         EPS         
1 .Lsel.PA          .              .             1.0000         EPS         
1 .Lsel.KI          .              .             1.0000         EPS         
1 .Pap .EU          .              .             1.0000         EPS         
1 .Pap .IE          .              .             1.0000         EPS         
1 .Pap .PA          .              .             1.0000         EPS         
1 .Pap .KI          .              .             1.0000         EPS         
2 .Mas .EU          .              .             1.0000   -3.840000E+8      
2 .Mas .IE          .              .             1.0000   -9.870000E+8      
2 .Mas .PA          .              .             1.0000   -1.186000E+9      
2 .Mas .KI          .              .             1.0000   -1.485000E+9      
2 .Kus .EU          .              .             1.0000         EPS         
2 .Kus .IE          .              .             1.0000         EPS         
2 .Kus .PA          .              .             1.0000         EPS         
2 .Kus .KI          .              .             1.0000         EPS         
2 .Kos .EU          .              .             1.0000   -1.387000E+9      
2 .Kos .IE          .              .             1.0000   -1.986000E+9      
2 .Kos .PA          .              .             1.0000   -2.185000E+9      
2 .Kos .KI          .              .             1.0000   -2.484000E+9      
2 .Kuv .EU          .              .             1.0000   -3.560000E+8      
2 .Kuv .IE          .              .             1.0000   -9.620000E+8      
2 .Kuv .PA          .              .             1.0000   -1.164000E+9      
2 .Kuv .KI          .              .             1.0000   -1.465000E+9      
2 .Kov .EU          .              .             1.0000   -3.570000E+8      
2 .Kov .IE          .              .             1.0000   -9.590000E+8      
2 .Kov .PA          .              .             1.0000   -1.161000E+9      
2 .Kov .KI          .              .             1.0000   -1.462000E+9      
2 .Hsel.EU          .              .             1.0000   -1.770000E+8      
2 .Hsel.IE          .              .             1.0000   -3.750000E+8      
2 .Hsel.PA          .              .             1.0000   -4.770000E+8      
2 .Hsel.KI          .              .             1.0000   -5.740000E+8      
2 .Lsel.EU          .              .             1.0000   -2.750000E+8      
2 .Lsel.IE          .              .             1.0000   -1.720000E+8      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/17/17 16:42:05 Page 72
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 341


     VAR u  1 if we use n boats for product j shiping to region k, 0 otherwise

                  LOWER          LEVEL          UPPER         MARGINAL

2 .Lsel.PA          .              .             1.0000   -4.770000E+8      
2 .Lsel.KI          .              .             1.0000   -6.750000E+8      
2 .Pap .EU          .              .             1.0000   -3.550000E+8      
2 .Pap .IE          .              .             1.0000   -9.530000E+8      
2 .Pap .PA          .              .             1.0000   -1.157000E+9      
2 .Pap .KI          .              .             1.0000   -1.452000E+9      
3 .Mas .EU          .              .             1.0000   -1.568000E+9      
3 .Mas .IE          .              .             1.0000   -3.974000E+9      
3 .Mas .PA          .              .             1.0000   -4.772000E+9      
3 .Mas .KI          .              .             1.0000   -5.970000E+9      
3 .Kus .EU          .              .             1.0000         EPS         
3 .Kus .IE          .              .             1.0000         EPS         
3 .Kus .PA          .              .             1.0000         EPS         
3 .Kus .KI          .              .             1.0000         EPS         
3 .Kos .EU          .              .             1.0000   -5.574000E+9      
3 .Kos .IE          .              .             1.0000   -7.972000E+9      
3 .Kos .PA          .              .             1.0000   -8.770000E+9      
3 .Kos .KI          .              .             1.0000   -9.968000E+9      
3 .Kuv .EU          .              .             1.0000   -1.512000E+9      
3 .Kuv .IE          .              .             1.0000   -3.924000E+9      
3 .Kuv .PA          .              .             1.0000   -4.728000E+9      
3 .Kuv .KI          .              .             1.0000   -5.930000E+9      
3 .Kov .EU          .              .             1.0000   -1.514000E+9      
3 .Kov .IE          .              .             1.0000   -3.918000E+9      
3 .Kov .PA          .              .             1.0000   -4.722000E+9      
3 .Kov .KI          .              .             1.0000   -5.924000E+9      
3 .Hsel.EU          .              .             1.0000   -7.540000E+8      
3 .Hsel.IE          .              .             1.0000   -1.550000E+9      
3 .Hsel.PA          .              .             1.0000   -1.954000E+9      
3 .Hsel.KI          .              .             1.0000   -2.348000E+9      
3 .Lsel.EU          .              .             1.0000   -1.150000E+9      
3 .Lsel.IE          .              .             1.0000   -7.440000E+8      
3 .Lsel.PA          .              .             1.0000   -1.954000E+9      
3 .Lsel.KI          .              .             1.0000   -2.750000E+9      
3 .Pap .EU          .              .             1.0000   -1.510000E+9      
3 .Pap .IE          .              .             1.0000   -3.906000E+9      
3 .Pap .PA          .              .             1.0000   -4.714000E+9      
3 .Pap .KI          .              .             1.0000   -5.904000E+9      
4 .Mas .EU          .              .             1.0000   -3.552000E+9      
4 .Mas .IE          .              .             1.0000   -8.961000E+9      
4 .Mas .PA          .              .             1.0000   -1.07580E+10      
4 .Mas .KI          .              .             1.0000   -1.34550E+10      
4 .Kus .EU          .              .             1.0000         EPS         
4 .Kus .IE          .              .             1.0000         EPS         
4 .Kus .PA          .              .             1.0000         EPS         
4 .Kus .KI          .              .             1.0000         EPS         
4 .Kos .EU          .              .             1.0000   -1.25610E+10      
4 .Kos .IE          .              .             1.0000   -1.79580E+10      
4 .Kos .PA          .              .             1.0000   -1.97550E+10      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/17/17 16:42:05 Page 73
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 341


     VAR u  1 if we use n boats for product j shiping to region k, 0 otherwise

                  LOWER          LEVEL          UPPER         MARGINAL

4 .Kos .KI          .              .             1.0000   -2.24520E+10      
4 .Kuv .EU          .              .             1.0000   -3.468000E+9      
4 .Kuv .IE          .              .             1.0000   -8.886000E+9      
4 .Kuv .PA          .              .             1.0000   -1.06920E+10      
4 .Kuv .KI          .              .             1.0000   -1.33950E+10      
4 .Kov .EU          .              .             1.0000   -3.471000E+9      
4 .Kov .IE          .              .             1.0000   -8.877000E+9      
4 .Kov .PA          .              .             1.0000   -1.06830E+10      
4 .Kov .KI          .              .             1.0000   -1.33860E+10      
4 .Hsel.EU          .              .             1.0000   -1.731000E+9      
4 .Hsel.IE          .              .             1.0000   -3.525000E+9      
4 .Hsel.PA          .              .             1.0000   -4.431000E+9      
4 .Hsel.KI          .              .             1.0000   -5.322000E+9      
4 .Lsel.EU          .              .             1.0000   -2.625000E+9      
4 .Lsel.IE          .              .             1.0000   -1.716000E+9      
4 .Lsel.PA          .              .             1.0000   -4.431000E+9      
4 .Lsel.KI          .              .             1.0000   -6.225000E+9      
4 .Pap .EU          .              .             1.0000   -3.465000E+9      
4 .Pap .IE          .              .             1.0000   -8.859000E+9      
4 .Pap .PA          .              .             1.0000   -1.06710E+10      
4 .Pap .KI          .              .             1.0000   -1.33560E+10      
5 .Mas .EU          .              .             1.0000   -6.336000E+9      
5 .Mas .IE          .              .             1.0000   -1.59480E+10      
5 .Mas .PA          .              .             1.0000   -1.91440E+10      
5 .Mas .KI          .              .             1.0000   -2.39400E+10      
5 .Kus .EU          .              .             1.0000         EPS         
5 .Kus .IE          .              .             1.0000         EPS         
5 .Kus .PA          .              .             1.0000         EPS         
5 .Kus .KI          .              .             1.0000         EPS         
5 .Kos .EU          .              .             1.0000   -2.23480E+10      
5 .Kos .IE          .              .             1.0000   -3.19440E+10      
5 .Kos .PA          .              .             1.0000   -3.51400E+10      
5 .Kos .KI          .              .             1.0000   -3.99360E+10      
5 .Kuv .EU          .              .             1.0000   -6.224000E+9      
5 .Kuv .IE          .              .             1.0000   -1.58480E+10      
5 .Kuv .PA          .              .             1.0000   -1.90560E+10      
5 .Kuv .KI          .              .             1.0000   -2.38600E+10      
5 .Kov .EU          .              .             1.0000   -6.228000E+9      
5 .Kov .IE          .              .             1.0000   -1.58360E+10      
5 .Kov .PA          .              .             1.0000   -1.90440E+10      
5 .Kov .KI          .              .             1.0000   -2.38480E+10      
5 .Hsel.EU          .              .             1.0000   -3.108000E+9      
5 .Hsel.IE          .              .             1.0000   -6.300000E+9      
5 .Hsel.PA          .              .             1.0000   -7.908000E+9      
5 .Hsel.KI          .              .             1.0000   -9.496000E+9      
5 .Lsel.EU          .              .             1.0000   -4.700000E+9      
5 .Lsel.IE          .              .             1.0000   -3.088000E+9      
5 .Lsel.PA          .              .             1.0000   -7.908000E+9      
5 .Lsel.KI          .              .             1.0000   -1.11000E+10      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/17/17 16:42:05 Page 74
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 341


     VAR u  1 if we use n boats for product j shiping to region k, 0 otherwise

                  LOWER          LEVEL          UPPER         MARGINAL

5 .Pap .EU          .              .             1.0000   -6.220000E+9      
5 .Pap .IE          .              .             1.0000   -1.58120E+10      
5 .Pap .PA          .              .             1.0000   -1.90280E+10      
5 .Pap .KI          .              .             1.0000   -2.38080E+10      
6 .Mas .EU          .              .             1.0000   -9.920000E+9      
6 .Mas .IE          .              .             1.0000   -2.49350E+10      
6 .Mas .PA          .              .             1.0000   -2.99300E+10      
6 .Mas .KI          .              .             1.0000   -3.74250E+10      
6 .Kus .EU          .              .             1.0000         EPS         
6 .Kus .IE          .              .             1.0000         EPS         
6 .Kus .PA          .              .             1.0000         EPS         
6 .Kus .KI          .              .             1.0000         EPS         
6 .Kos .EU          .              .             1.0000   -3.49350E+10      
6 .Kos .IE          .              .             1.0000   -4.99300E+10      
6 .Kos .PA          .              .             1.0000   -5.49250E+10      
6 .Kos .KI          .              .             1.0000   -6.24200E+10      
6 .Kuv .EU          .              .             1.0000   -9.780000E+9      
6 .Kuv .IE          .              .             1.0000   -2.48100E+10      
6 .Kuv .PA          .              .             1.0000   -2.98200E+10      
6 .Kuv .KI          .              .             1.0000   -3.73250E+10      
6 .Kov .EU          .              .             1.0000   -9.785000E+9      
6 .Kov .IE          .              .             1.0000   -2.47950E+10      
6 .Kov .PA          .              .             1.0000   -2.98050E+10      
6 .Kov .KI          .              .             1.0000   -3.73100E+10      
6 .Hsel.EU          .              .             1.0000   -4.885000E+9      
6 .Hsel.IE          .              .             1.0000   -9.875000E+9      
6 .Hsel.PA          .              .             1.0000   -1.23850E+10      
6 .Hsel.KI          .              .             1.0000   -1.48700E+10      
6 .Lsel.EU          .              .             1.0000   -7.375000E+9      
6 .Lsel.IE          .              .             1.0000   -4.860000E+9      
6 .Lsel.PA          .              .             1.0000   -1.23850E+10      
6 .Lsel.KI          .              .             1.0000   -1.73750E+10      
6 .Pap .EU          .              .             1.0000   -9.775000E+9      
6 .Pap .IE          .              .             1.0000   -2.47650E+10      
6 .Pap .PA          .              .             1.0000   -2.97850E+10      
6 .Pap .KI          .              .             1.0000   -3.72600E+10      
7 .Mas .EU          .              .             1.0000   -1.43040E+10      
7 .Mas .IE          .              .             1.0000   -3.59220E+10      
7 .Mas .PA          .              .             1.0000   -4.31160E+10      
7 .Mas .KI          .              .             1.0000   -5.39100E+10      
7 .Kus .EU          .              .             1.0000         EPS         
7 .Kus .IE          .              .             1.0000         EPS         
7 .Kus .PA          .              .             1.0000         EPS         
7 .Kus .KI          .              .             1.0000         EPS         
7 .Kos .EU          .              .             1.0000   -5.03220E+10      
7 .Kos .IE          .              .             1.0000   -7.19160E+10      
7 .Kos .PA          .              .             1.0000   -7.91100E+10      
7 .Kos .KI          .              .             1.0000   -8.99040E+10      
7 .Kuv .EU          .              .             1.0000   -1.41360E+10      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/17/17 16:42:05 Page 75
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 341


     VAR u  1 if we use n boats for product j shiping to region k, 0 otherwise

                  LOWER          LEVEL          UPPER         MARGINAL

7 .Kuv .IE          .              .             1.0000   -3.57720E+10      
7 .Kuv .PA          .              .             1.0000   -4.29840E+10      
7 .Kuv .KI          .              .             1.0000   -5.37900E+10      
7 .Kov .EU          .              .             1.0000   -1.41420E+10      
7 .Kov .IE          .              .             1.0000   -3.57540E+10      
7 .Kov .PA          .              .             1.0000   -4.29660E+10      
7 .Kov .KI          .              .             1.0000   -5.37720E+10      
7 .Hsel.EU          .              .             1.0000   -7.062000E+9      
7 .Hsel.IE          .              .             1.0000   -1.42500E+10      
7 .Hsel.PA          .              .             1.0000   -1.78620E+10      
7 .Hsel.KI          .              .             1.0000   -2.14440E+10      
7 .Lsel.EU          .              .             1.0000   -1.06500E+10      
7 .Lsel.IE          .              .             1.0000   -7.032000E+9      
7 .Lsel.PA          .              .             1.0000   -1.78620E+10      
7 .Lsel.KI          .              .             1.0000   -2.50500E+10      
7 .Pap .EU          .              .             1.0000   -1.41300E+10      
7 .Pap .IE          .              .             1.0000   -3.57180E+10      
7 .Pap .PA          .              .             1.0000   -4.29420E+10      
7 .Pap .KI          .              .             1.0000   -5.37120E+10      
8 .Mas .EU          .              .             1.0000   -1.94880E+10      
8 .Mas .IE          .              .             1.0000   -4.89090E+10      
8 .Mas .PA          .              .             1.0000   -5.87020E+10      
8 .Mas .KI          .              .             1.0000   -7.33950E+10      
8 .Kus .EU          .              .             1.0000         EPS         
8 .Kus .IE          .              .             1.0000         EPS         
8 .Kus .PA          .              .             1.0000         EPS         
8 .Kus .KI          .              .             1.0000         EPS         
8 .Kos .EU          .              .             1.0000   -6.85090E+10      
8 .Kos .IE          .              .             1.0000   -9.79020E+10      
8 .Kos .PA          .              .             1.0000   -1.07695E+11      
8 .Kos .KI          .              .             1.0000   -1.22388E+11      
8 .Kuv .EU          .              .             1.0000   -1.92920E+10      
8 .Kuv .IE          .              .             1.0000   -4.87340E+10      
8 .Kuv .PA          .              .             1.0000   -5.85480E+10      
8 .Kuv .KI          .              .             1.0000   -7.32550E+10      
8 .Kov .EU          .              .             1.0000   -1.92990E+10      
8 .Kov .IE          .              .             1.0000   -4.87130E+10      
8 .Kov .PA          .              .             1.0000   -5.85270E+10      
8 .Kov .KI          .              .             1.0000   -7.32340E+10      
8 .Hsel.EU          .              .             1.0000   -9.639000E+9      
8 .Hsel.IE          .              .             1.0000   -1.94250E+10      
8 .Hsel.PA          .              .             1.0000   -2.43390E+10      
8 .Hsel.KI          .              .             1.0000   -2.92180E+10      
8 .Lsel.EU          .              .             1.0000   -1.45250E+10      
8 .Lsel.IE          .              .             1.0000   -9.604000E+9      
8 .Lsel.PA          .              .             1.0000   -2.43390E+10      
8 .Lsel.KI          .              .             1.0000   -3.41250E+10      
8 .Pap .EU          .              .             1.0000   -1.92850E+10      
8 .Pap .IE          .              .             1.0000   -4.86710E+10      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/17/17 16:42:05 Page 76
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 341


     VAR u  1 if we use n boats for product j shiping to region k, 0 otherwise

                  LOWER          LEVEL          UPPER         MARGINAL

8 .Pap .PA          .              .             1.0000   -5.84990E+10      
8 .Pap .KI          .              .             1.0000   -7.31640E+10      
9 .Mas .EU          .              .             1.0000   -2.54720E+10      
9 .Mas .IE          .              .             1.0000   -6.38960E+10      
9 .Mas .PA          .              .             1.0000   -7.66880E+10      
9 .Mas .KI          .              .             1.0000   -9.58800E+10      
9 .Kus .EU          .              .             1.0000         EPS         
9 .Kus .IE          .              .             1.0000         EPS         
9 .Kus .PA          .              .             1.0000         EPS         
9 .Kus .KI          .              .             1.0000         EPS         
9 .Kos .EU          .              .             1.0000   -8.94960E+10      
9 .Kos .IE          .              .             1.0000   -1.27888E+11      
9 .Kos .PA          .              .             1.0000   -1.40680E+11      
9 .Kos .KI          .              .             1.0000   -1.59872E+11      
9 .Kuv .EU          .              .             1.0000   -2.52480E+10      
9 .Kuv .IE          .              .             1.0000   -6.36960E+10      
9 .Kuv .PA          .              .             1.0000   -7.65120E+10      
9 .Kuv .KI          .              .             1.0000   -9.57200E+10      
9 .Kov .EU          .              .             1.0000   -2.52560E+10      
9 .Kov .IE          .              .             1.0000   -6.36720E+10      
9 .Kov .PA          .              .             1.0000   -7.64880E+10      
9 .Kov .KI          .              .             1.0000   -9.56960E+10      
9 .Hsel.EU          .              .             1.0000   -1.26160E+10      
9 .Hsel.IE          .              .             1.0000   -2.54000E+10      
9 .Hsel.PA          .              .             1.0000   -3.18160E+10      
9 .Hsel.KI          .              .             1.0000   -3.81920E+10      
9 .Lsel.EU          .              .             1.0000   -1.90000E+10      
9 .Lsel.IE          .              .             1.0000   -1.25760E+10      
9 .Lsel.PA          .              .             1.0000   -3.18160E+10      
9 .Lsel.KI          .              .             1.0000   -4.46000E+10      
9 .Pap .EU          .              .             1.0000   -2.52400E+10      
9 .Pap .IE          .              .             1.0000   -6.36240E+10      
9 .Pap .PA          .              .             1.0000   -7.64560E+10      
9 .Pap .KI          .              .             1.0000   -9.56160E+10      
10.Mas .EU          .              .             1.0000   -3.22560E+10      
10.Mas .IE          .              .             1.0000   -8.08830E+10      
10.Mas .PA          .              .             1.0000   -9.70740E+10      
10.Mas .KI          .              .             1.0000   -1.21365E+11      
10.Kus .EU          .              .             1.0000         EPS         
10.Kus .IE          .              .             1.0000         EPS         
10.Kus .PA          .              .             1.0000         EPS         
10.Kus .KI          .              .             1.0000         EPS         
10.Kos .EU          .              .             1.0000   -1.13283E+11      
10.Kos .IE          .              .             1.0000   -1.61874E+11      
10.Kos .PA          .              .             1.0000   -1.78065E+11      
10.Kos .KI          .              .             1.0000   -2.02356E+11      
10.Kuv .EU          .              .             1.0000   -3.20040E+10      
10.Kuv .IE          .              .             1.0000   -8.06580E+10      
10.Kuv .PA          .              .             1.0000   -9.68760E+10      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/17/17 16:42:05 Page 77
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 341


     VAR u  1 if we use n boats for product j shiping to region k, 0 otherwise

                  LOWER          LEVEL          UPPER         MARGINAL

10.Kuv .KI          .              .             1.0000   -1.21185E+11      
10.Kov .EU          .              .             1.0000   -3.20130E+10      
10.Kov .IE          .              .             1.0000   -8.06310E+10      
10.Kov .PA          .              .             1.0000   -9.68490E+10      
10.Kov .KI          .              .             1.0000   -1.21158E+11      
10.Hsel.EU          .              .             1.0000   -1.59930E+10      
10.Hsel.IE          .              .             1.0000   -3.21750E+10      
10.Hsel.PA          .              .             1.0000   -4.02930E+10      
10.Hsel.KI          .              .             1.0000   -4.83660E+10      
10.Lsel.EU          .              .             1.0000   -2.40750E+10      
10.Lsel.IE          .              .             1.0000   -1.59480E+10      
10.Lsel.PA          .              .             1.0000   -4.02930E+10      
10.Lsel.KI          .              .             1.0000   -5.64750E+10      
10.Pap .EU          .              .             1.0000   -3.19950E+10      
10.Pap .IE          .              .             1.0000   -8.05770E+10      
10.Pap .PA          .              .             1.0000   -9.68130E+10      
10.Pap .KI          .              .             1.0000   -1.21068E+11      
11.Mas .EU          .              .             1.0000   -3.98400E+10      
11.Mas .IE          .              .             1.0000   -9.98700E+10      
11.Mas .PA          .              .             1.0000   -1.19860E+11      
11.Mas .KI          .              .             1.0000   -1.49850E+11      
11.Kus .EU          .              .             1.0000         EPS         
11.Kus .IE          .              .             1.0000         EPS         
11.Kus .PA          .              .             1.0000         EPS         
11.Kus .KI          .              .             1.0000         EPS         
11.Kos .EU          .              .             1.0000   -1.39870E+11      
11.Kos .IE          .              .             1.0000   -1.99860E+11      
11.Kos .PA          .              .             1.0000   -2.19850E+11      
11.Kos .KI          .              .             1.0000   -2.49840E+11      
11.Kuv .EU          .              .             1.0000   -3.95600E+10      
11.Kuv .IE          .              .             1.0000   -9.96200E+10      
11.Kuv .PA          .              .             1.0000   -1.19640E+11      
11.Kuv .KI          .              .             1.0000   -1.49650E+11      
11.Kov .EU          .              .             1.0000   -3.95700E+10      
11.Kov .IE          .              .             1.0000   -9.95900E+10      
11.Kov .PA          .              .             1.0000   -1.19610E+11      
11.Kov .KI          .              .             1.0000   -1.49620E+11      
11.Hsel.EU          .              .             1.0000   -1.97700E+10      
11.Hsel.IE          .              .             1.0000   -3.97500E+10      
11.Hsel.PA          .              .             1.0000   -4.97700E+10      
11.Hsel.KI          .              .             1.0000   -5.97400E+10      
11.Lsel.EU          .              .             1.0000   -2.97500E+10      
11.Lsel.IE          .              .             1.0000   -1.97200E+10      
11.Lsel.PA          .              .             1.0000   -4.97700E+10      
11.Lsel.KI          .              .             1.0000   -6.97500E+10      
11.Pap .EU          .              .             1.0000   -3.95500E+10      
11.Pap .IE          .              .             1.0000   -9.95300E+10      
11.Pap .PA          .              .             1.0000   -1.19570E+11      
11.Pap .KI          .              .             1.0000   -1.49520E+11      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/17/17 16:42:05 Page 78
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 341


     VAR u  1 if we use n boats for product j shiping to region k, 0 otherwise

                  LOWER          LEVEL          UPPER         MARGINAL

12.Mas .EU          .              .             1.0000   -4.82240E+10      
12.Mas .IE          .              .             1.0000   -1.20857E+11      
12.Mas .PA          .              .             1.0000   -1.45046E+11      
12.Mas .KI          .              .             1.0000   -1.81335E+11      
12.Kus .EU          .              .             1.0000         EPS         
12.Kus .IE          .              .             1.0000         EPS         
12.Kus .PA          .              .             1.0000         EPS         
12.Kus .KI          .              .             1.0000         EPS         
12.Kos .EU          .              .             1.0000   -1.69257E+11      
12.Kos .IE          .              .             1.0000   -2.41846E+11      
12.Kos .PA          .              .             1.0000   -2.66035E+11      
12.Kos .KI          .              .             1.0000   -3.02324E+11      
12.Kuv .EU          .              .             1.0000   -4.79160E+10      
12.Kuv .IE          .              .             1.0000   -1.20582E+11      
12.Kuv .PA          .              .             1.0000   -1.44804E+11      
12.Kuv .KI          .              .             1.0000   -1.81115E+11      
12.Kov .EU          .              .             1.0000   -4.79270E+10      
12.Kov .IE          .              .             1.0000   -1.20549E+11      
12.Kov .PA          .              .             1.0000   -1.44771E+11      
12.Kov .KI          .              .             1.0000   -1.81082E+11      
12.Hsel.EU          .              .             1.0000   -2.39470E+10      
12.Hsel.IE          .              .             1.0000   -4.81250E+10      
12.Hsel.PA          .              .             1.0000   -6.02470E+10      
12.Hsel.KI          .              .             1.0000   -7.23140E+10      
12.Lsel.EU          .              .             1.0000   -3.60250E+10      
12.Lsel.IE          .              .             1.0000   -2.38920E+10      
12.Lsel.PA          .              .             1.0000   -6.02470E+10      
12.Lsel.KI          .              .             1.0000   -8.44250E+10      
12.Pap .EU          .              .             1.0000   -4.79050E+10      
12.Pap .IE          .              .             1.0000   -1.20483E+11      
12.Pap .PA          .              .             1.0000   -1.44727E+11      
12.Pap .KI          .              .             1.0000   -1.80972E+11      
13.Mas .EU          .              .             1.0000   -5.74080E+10      
13.Mas .IE          .              .             1.0000   -1.43844E+11      
13.Mas .PA          .              .             1.0000   -1.72632E+11      
13.Mas .KI          .              .             1.0000   -2.15820E+11      
13.Kus .EU          .              .             1.0000         EPS         
13.Kus .IE          .              .             1.0000         EPS         
13.Kus .PA          .              .             1.0000         EPS         
13.Kus .KI          .              .             1.0000         EPS         
13.Kos .EU          .              .             1.0000   -2.01444E+11      
13.Kos .IE          .              .             1.0000   -2.87832E+11      
13.Kos .PA          .              .             1.0000   -3.16620E+11      
13.Kos .KI          .              .             1.0000   -3.59808E+11      
13.Kuv .EU          .              .             1.0000   -5.70720E+10      
13.Kuv .IE          .              .             1.0000   -1.43544E+11      
13.Kuv .PA          .              .             1.0000   -1.72368E+11      
13.Kuv .KI          .              .             1.0000   -2.15580E+11      
13.Kov .EU          .              .             1.0000   -5.70840E+10      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/17/17 16:42:05 Page 79
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 341


     VAR u  1 if we use n boats for product j shiping to region k, 0 otherwise

                  LOWER          LEVEL          UPPER         MARGINAL

13.Kov .IE          .              .             1.0000   -1.43508E+11      
13.Kov .PA          .              .             1.0000   -1.72332E+11      
13.Kov .KI          .              .             1.0000   -2.15544E+11      
13.Hsel.EU          .              .             1.0000   -2.85240E+10      
13.Hsel.IE          .              .             1.0000   -5.73000E+10      
13.Hsel.PA          .              .             1.0000   -7.17240E+10      
13.Hsel.KI          .              .             1.0000   -8.60880E+10      
13.Lsel.EU          .              .             1.0000   -4.29000E+10      
13.Lsel.IE          .              .             1.0000   -2.84640E+10      
13.Lsel.PA          .              .             1.0000   -7.17240E+10      
13.Lsel.KI          .              .             1.0000   -1.00500E+11      
13.Pap .EU          .              .             1.0000   -5.70600E+10      
13.Pap .IE          .              .             1.0000   -1.43436E+11      
13.Pap .PA          .              .             1.0000   -1.72284E+11      
13.Pap .KI          .              .             1.0000   -2.15424E+11      
14.Mas .EU          .              .             1.0000   -6.73920E+10      
14.Mas .IE          .              .             1.0000   -1.68831E+11      
14.Mas .PA          .              .             1.0000   -2.02618E+11      
14.Mas .KI          .              .             1.0000   -2.53305E+11      
14.Kus .EU          .              .             1.0000         EPS         
14.Kus .IE          .              .             1.0000         EPS         
14.Kus .PA          .              .             1.0000         EPS         
14.Kus .KI          .              .             1.0000         EPS         
14.Kos .EU          .              .             1.0000   -2.36431E+11      
14.Kos .IE          .              .             1.0000   -3.37818E+11      
14.Kos .PA          .              .             1.0000   -3.71605E+11      
14.Kos .KI          .              .             1.0000   -4.22292E+11      
14.Kuv .EU          .              .             1.0000   -6.70280E+10      
14.Kuv .IE          .              .             1.0000   -1.68506E+11      
14.Kuv .PA          .              .             1.0000   -2.02332E+11      
14.Kuv .KI          .              .             1.0000   -2.53045E+11      
14.Kov .EU          .              .             1.0000   -6.70410E+10      
14.Kov .IE          .              .             1.0000   -1.68467E+11      
14.Kov .PA          .              .             1.0000   -2.02293E+11      
14.Kov .KI          .              .             1.0000   -2.53006E+11      
14.Hsel.EU          .              .             1.0000   -3.35010E+10      
14.Hsel.IE          .              .             1.0000   -6.72750E+10      
14.Hsel.PA          .              .             1.0000   -8.42010E+10      
14.Hsel.KI          .              .             1.0000   -1.01062E+11      
14.Lsel.EU          .              .             1.0000   -5.03750E+10      
14.Lsel.IE          .              .             1.0000   -3.34360E+10      
14.Lsel.PA          .              .             1.0000   -8.42010E+10      
14.Lsel.KI          .              .             1.0000   -1.17975E+11      
14.Pap .EU          .              .             1.0000   -6.70150E+10      
14.Pap .IE          .              .             1.0000   -1.68389E+11      
14.Pap .PA          .              .             1.0000   -2.02241E+11      
14.Pap .KI          .              .             1.0000   -2.52876E+11      
15.Mas .EU          .              .             1.0000   -7.81760E+10      
15.Mas .IE          .              .             1.0000   -1.95818E+11      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/17/17 16:42:05 Page 80
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 341


     VAR u  1 if we use n boats for product j shiping to region k, 0 otherwise

                  LOWER          LEVEL          UPPER         MARGINAL

15.Mas .PA          .              .             1.0000   -2.35004E+11      
15.Mas .KI          .              .             1.0000   -2.93790E+11      
15.Kus .EU          .              .             1.0000         EPS         
15.Kus .IE          .              .             1.0000         EPS         
15.Kus .PA          .              .             1.0000         EPS         
15.Kus .KI          .              .             1.0000         EPS         
15.Kos .EU          .              .             1.0000   -2.74218E+11      
15.Kos .IE          .              .             1.0000   -3.91804E+11      
15.Kos .PA          .              .             1.0000   -4.30990E+11      
15.Kos .KI          .              .             1.0000   -4.89776E+11      
15.Kuv .EU          .              .             1.0000   -7.77840E+10      
15.Kuv .IE          .              .             1.0000   -1.95468E+11      
15.Kuv .PA          .              .             1.0000   -2.34696E+11      
15.Kuv .KI          .              .             1.0000   -2.93510E+11      
15.Kov .EU          .              .             1.0000   -7.77980E+10      
15.Kov .IE          .              .             1.0000   -1.95426E+11      
15.Kov .PA          .              .             1.0000   -2.34654E+11      
15.Kov .KI          .              .             1.0000   -2.93468E+11      
15.Hsel.EU          .              .             1.0000   -3.88780E+10      
15.Hsel.IE          .              .             1.0000   -7.80500E+10      
15.Hsel.PA          .              .             1.0000   -9.76780E+10      
15.Hsel.KI          .              .             1.0000   -1.17236E+11      
15.Lsel.EU          .              .             1.0000   -5.84500E+10      
15.Lsel.IE          .              .             1.0000   -3.88080E+10      
15.Lsel.PA          .              .             1.0000   -9.76780E+10      
15.Lsel.KI          .              .             1.0000   -1.36850E+11      
15.Pap .EU          .              .             1.0000   -7.77700E+10      
15.Pap .IE          .              .             1.0000   -1.95342E+11      
15.Pap .PA          .              .             1.0000   -2.34598E+11      
15.Pap .KI          .              .             1.0000   -2.93328E+11      
16.Mas .EU          .              .             1.0000   -8.97600E+10      
16.Mas .IE          .              .             1.0000   -2.24805E+11      
16.Mas .PA          .              .             1.0000   -2.69790E+11      
16.Mas .KI          .              .             1.0000   -3.37275E+11      
16.Kus .EU          .              .             1.0000         EPS         
16.Kus .IE          .              .             1.0000         EPS         
16.Kus .PA          .              .             1.0000         EPS         
16.Kus .KI          .              .             1.0000         EPS         
16.Kos .EU          .              .             1.0000   -3.14805E+11      
16.Kos .IE          .              .             1.0000   -4.49790E+11      
16.Kos .PA          .              .             1.0000   -4.94775E+11      
16.Kos .KI          .              .             1.0000   -5.62260E+11      
16.Kuv .EU          .              .             1.0000   -8.93400E+10      
16.Kuv .IE          .              .             1.0000   -2.24430E+11      
16.Kuv .PA          .              .             1.0000   -2.69460E+11      
16.Kuv .KI          .              .             1.0000   -3.36975E+11      
16.Kov .EU          .              .             1.0000   -8.93550E+10      
16.Kov .IE          .              .             1.0000   -2.24385E+11      
16.Kov .PA          .              .             1.0000   -2.69415E+11      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/17/17 16:42:05 Page 81
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 341


     VAR u  1 if we use n boats for product j shiping to region k, 0 otherwise

                  LOWER          LEVEL          UPPER         MARGINAL

16.Kov .KI          .              .             1.0000   -3.36930E+11      
16.Hsel.EU          .              .             1.0000   -4.46550E+10      
16.Hsel.IE          .              .             1.0000   -8.96250E+10      
16.Hsel.PA          .              .             1.0000   -1.12155E+11      
16.Hsel.KI          .              .             1.0000   -1.34610E+11      
16.Lsel.EU          .              .             1.0000   -6.71250E+10      
16.Lsel.IE          .              .             1.0000   -4.45800E+10      
16.Lsel.PA          .              .             1.0000   -1.12155E+11      
16.Lsel.KI          .              .             1.0000   -1.57125E+11      
16.Pap .EU          .              .             1.0000   -8.93250E+10      
16.Pap .IE          .              .             1.0000   -2.24295E+11      
16.Pap .PA          .              .             1.0000   -2.69355E+11      
16.Pap .KI          .              .             1.0000   -3.36780E+11      
17.Mas .EU          .              .             1.0000   -1.02144E+11      
17.Mas .IE          .              .             1.0000   -2.55792E+11      
17.Mas .PA          .              .             1.0000   -3.06976E+11      
17.Mas .KI          .              .             1.0000   -3.83760E+11      
17.Kus .EU          .              .             1.0000         EPS         
17.Kus .IE          .              .             1.0000         EPS         
17.Kus .PA          .              .             1.0000         EPS         
17.Kus .KI          .              .             1.0000         EPS         
17.Kos .EU          .              .             1.0000   -3.58192E+11      
17.Kos .IE          .              .             1.0000   -5.11776E+11      
17.Kos .PA          .              .             1.0000   -5.62960E+11      
17.Kos .KI          .              .             1.0000   -6.39744E+11      
17.Kuv .EU          .              .             1.0000   -1.01696E+11      
17.Kuv .IE          .              .             1.0000   -2.55392E+11      
17.Kuv .PA          .              .             1.0000   -3.06624E+11      
17.Kuv .KI          .              .             1.0000   -3.83440E+11      
17.Kov .EU          .              .             1.0000   -1.01712E+11      
17.Kov .IE          .              .             1.0000   -2.55344E+11      
17.Kov .PA          .              .             1.0000   -3.06576E+11      
17.Kov .KI          .              .             1.0000   -3.83392E+11      
17.Hsel.EU          .              .             1.0000   -5.08320E+10      
17.Hsel.IE          .              .             1.0000   -1.02000E+11      
17.Hsel.PA          .              .             1.0000   -1.27632E+11      
17.Hsel.KI          .              .             1.0000   -1.53184E+11      
17.Lsel.EU          .              .             1.0000   -7.64000E+10      
17.Lsel.IE          .              .             1.0000   -5.07520E+10      
17.Lsel.PA          .              .             1.0000   -1.27632E+11      
17.Lsel.KI          .              .             1.0000   -1.78800E+11      
17.Pap .EU          .              .             1.0000   -1.01680E+11      
17.Pap .IE          .              .             1.0000   -2.55248E+11      
17.Pap .PA          .              .             1.0000   -3.06512E+11      
17.Pap .KI          .              .             1.0000   -3.83232E+11      
18.Mas .EU          .              .             1.0000   -1.15328E+11      
18.Mas .IE          .              .             1.0000   -2.88779E+11      
18.Mas .PA          .              .             1.0000   -3.46562E+11      
18.Mas .KI          .              .             1.0000   -4.33245E+11      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/17/17 16:42:05 Page 82
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 341


     VAR u  1 if we use n boats for product j shiping to region k, 0 otherwise

                  LOWER          LEVEL          UPPER         MARGINAL

18.Kus .EU          .              .             1.0000         EPS         
18.Kus .IE          .              .             1.0000         EPS         
18.Kus .PA          .              .             1.0000         EPS         
18.Kus .KI          .              .             1.0000         EPS         
18.Kos .EU          .              .             1.0000   -4.04379E+11      
18.Kos .IE          .              .             1.0000   -5.77762E+11      
18.Kos .PA          .              .             1.0000   -6.35545E+11      
18.Kos .KI          .              .             1.0000   -7.22228E+11      
18.Kuv .EU          .              .             1.0000   -1.14852E+11      
18.Kuv .IE          .              .             1.0000   -2.88354E+11      
18.Kuv .PA          .              .             1.0000   -3.46188E+11      
18.Kuv .KI          .              .             1.0000   -4.32905E+11      
18.Kov .EU          .              .             1.0000   -1.14869E+11      
18.Kov .IE          .              .             1.0000   -2.88303E+11      
18.Kov .PA          .              .             1.0000   -3.46137E+11      
18.Kov .KI          .              .             1.0000   -4.32854E+11      
18.Hsel.EU          .              .             1.0000   -5.74090E+10      
18.Hsel.IE          .              .             1.0000   -1.15175E+11      
18.Hsel.PA          .              .             1.0000   -1.44109E+11      
18.Hsel.KI          .              .             1.0000   -1.72958E+11      
18.Lsel.EU          .              .             1.0000   -8.62750E+10      
18.Lsel.IE          .              .             1.0000   -5.73240E+10      
18.Lsel.PA          .              .             1.0000   -1.44109E+11      
18.Lsel.KI          .              .             1.0000   -2.01875E+11      
18.Pap .EU          .              .             1.0000   -1.14835E+11      
18.Pap .IE          .              .             1.0000   -2.88201E+11      
18.Pap .PA          .              .             1.0000   -3.46069E+11      
18.Pap .KI          .              .             1.0000   -4.32684E+11      
19.Mas .EU          .              .             1.0000   -1.29312E+11      
19.Mas .IE          .              .             1.0000   -3.23766E+11      
19.Mas .PA          .              .             1.0000   -3.88548E+11      
19.Mas .KI          .              .             1.0000   -4.85730E+11      
19.Kus .EU          .              .             1.0000         EPS         
19.Kus .IE          .              .             1.0000         EPS         
19.Kus .PA          .              .             1.0000         EPS         
19.Kus .KI          .              .             1.0000         EPS         
19.Kos .EU          .              .             1.0000   -4.53366E+11      
19.Kos .IE          .              .             1.0000   -6.47748E+11      
19.Kos .PA          .              .             1.0000   -7.12530E+11      
19.Kos .KI          .              .             1.0000   -8.09712E+11      
19.Kuv .EU          .              .             1.0000   -1.28808E+11      
19.Kuv .IE          .              .             1.0000   -3.23316E+11      
19.Kuv .PA          .              .             1.0000   -3.88152E+11      
19.Kuv .KI          .              .             1.0000   -4.85370E+11      
19.Kov .EU          .              .             1.0000   -1.28826E+11      
19.Kov .IE          .              .             1.0000   -3.23262E+11      
19.Kov .PA          .              .             1.0000   -3.88098E+11      
19.Kov .KI          .              .             1.0000   -4.85316E+11      
19.Hsel.EU          .              .             1.0000   -6.43860E+10      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/17/17 16:42:05 Page 83
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 341


     VAR u  1 if we use n boats for product j shiping to region k, 0 otherwise

                  LOWER          LEVEL          UPPER         MARGINAL

19.Hsel.IE          .              .             1.0000   -1.29150E+11      
19.Hsel.PA          .              .             1.0000   -1.61586E+11      
19.Hsel.KI          .              .             1.0000   -1.93932E+11      
19.Lsel.EU          .              .             1.0000   -9.67500E+10      
19.Lsel.IE          .              .             1.0000   -6.42960E+10      
19.Lsel.PA          .              .             1.0000   -1.61586E+11      
19.Lsel.KI          .              .             1.0000   -2.26350E+11      
19.Pap .EU          .              .             1.0000   -1.28790E+11      
19.Pap .IE          .              .             1.0000   -3.23154E+11      
19.Pap .PA          .              .             1.0000   -3.88026E+11      
19.Pap .KI          .              .             1.0000   -4.85136E+11      
20.Mas .EU          .              .             1.0000   -1.44096E+11      
20.Mas .IE          .              .             1.0000   -3.60753E+11      
20.Mas .PA          .              .             1.0000   -4.32934E+11      
20.Mas .KI          .              .             1.0000   -5.41215E+11      
20.Kus .EU          .              .             1.0000         EPS         
20.Kus .IE          .              .             1.0000         EPS         
20.Kus .PA          .              .             1.0000         EPS         
20.Kus .KI          .              .             1.0000         EPS         
20.Kos .EU          .              .             1.0000   -5.05153E+11      
20.Kos .IE          .              .             1.0000   -7.21734E+11      
20.Kos .PA          .              .             1.0000   -7.93915E+11      
20.Kos .KI          .              .             1.0000   -9.02196E+11      
20.Kuv .EU          .              .             1.0000   -1.43564E+11      
20.Kuv .IE          .              .             1.0000   -3.60278E+11      
20.Kuv .PA          .              .             1.0000   -4.32516E+11      
20.Kuv .KI          .              .             1.0000   -5.40835E+11      
20.Kov .EU          .              .             1.0000   -1.43583E+11      
20.Kov .IE          .              .             1.0000   -3.60221E+11      
20.Kov .PA          .              .             1.0000   -4.32459E+11      
20.Kov .KI          .              .             1.0000   -5.40778E+11      
20.Hsel.EU          .              .             1.0000   -7.17630E+10      
20.Hsel.IE          .              .             1.0000   -1.43925E+11      
20.Hsel.PA          .              .             1.0000   -1.80063E+11      
20.Hsel.KI          .              .             1.0000   -2.16106E+11      
20.Lsel.EU          .              .             1.0000   -1.07825E+11      
20.Lsel.IE          .              .             1.0000   -7.16680E+10      
20.Lsel.PA          .              .             1.0000   -1.80063E+11      
20.Lsel.KI          .              .             1.0000   -2.52225E+11      
20.Pap .EU          .              .             1.0000   -1.43545E+11      
20.Pap .IE          .              .             1.0000   -3.60107E+11      
20.Pap .PA          .              .             1.0000   -4.32383E+11      
20.Pap .KI          .              .             1.0000   -5.40588E+11      
21.Mas .EU          .              .             1.0000   -1.59680E+11      
21.Mas .IE          .              .             1.0000   -3.99740E+11      
21.Mas .PA          .              .             1.0000   -4.79720E+11      
21.Mas .KI          .              .             1.0000   -5.99700E+11      
21.Kus .EU          .              .             1.0000         EPS         
21.Kus .IE          .              .             1.0000         EPS         
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/17/17 16:42:05 Page 84
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 341


     VAR u  1 if we use n boats for product j shiping to region k, 0 otherwise

                  LOWER          LEVEL          UPPER         MARGINAL

21.Kus .PA          .              .             1.0000         EPS         
21.Kus .KI          .              .             1.0000         EPS         
21.Kos .EU          .              .             1.0000   -5.59740E+11      
21.Kos .IE          .              .             1.0000   -7.99720E+11      
21.Kos .PA          .              .             1.0000   -8.79700E+11      
21.Kos .KI          .              .             1.0000   -0.99968E+12      
21.Kuv .EU          .              .             1.0000   -1.59120E+11      
21.Kuv .IE          .              .             1.0000   -3.99240E+11      
21.Kuv .PA          .              .             1.0000   -4.79280E+11      
21.Kuv .KI          .              .             1.0000   -5.99300E+11      
21.Kov .EU          .              .             1.0000   -1.59140E+11      
21.Kov .IE          .              .             1.0000   -3.99180E+11      
21.Kov .PA          .              .             1.0000   -4.79220E+11      
21.Kov .KI          .              .             1.0000   -5.99240E+11      
21.Hsel.EU          .              .             1.0000   -7.95400E+10      
21.Hsel.IE          .              .             1.0000   -1.59500E+11      
21.Hsel.PA          .              .             1.0000   -1.99540E+11      
21.Hsel.KI          .              .             1.0000   -2.39480E+11      
21.Lsel.EU          .              .             1.0000   -1.19500E+11      
21.Lsel.IE          .              .             1.0000   -7.94400E+10      
21.Lsel.PA          .              .             1.0000   -1.99540E+11      
21.Lsel.KI          .              .             1.0000   -2.79500E+11      
21.Pap .EU          .              .             1.0000   -1.59100E+11      
21.Pap .IE          .              .             1.0000   -3.99060E+11      
21.Pap .PA          .              .             1.0000   -4.79140E+11      
21.Pap .KI          .              .             1.0000   -5.99040E+11      
22.Mas .EU          .              .             1.0000   -1.76064E+11      
22.Mas .IE          .              .             1.0000   -4.40727E+11      
22.Mas .PA          .              .             1.0000   -5.28906E+11      
22.Mas .KI          .              .             1.0000   -6.61185E+11      
22.Kus .EU          .              .             1.0000         EPS         
22.Kus .IE          .              .             1.0000         EPS         
22.Kus .PA          .              .             1.0000         EPS         
22.Kus .KI          .              .             1.0000         EPS         
22.Kos .EU          .              .             1.0000   -6.17127E+11      
22.Kos .IE          .              .             1.0000   -8.81706E+11      
22.Kos .PA          .              .             1.0000   -9.69885E+11      
22.Kos .KI          .              .             1.0000   -1.10216E+12      
22.Kuv .EU          .              .             1.0000   -1.75476E+11      
22.Kuv .IE          .              .             1.0000   -4.40202E+11      
22.Kuv .PA          .              .             1.0000   -5.28444E+11      
22.Kuv .KI          .              .             1.0000   -6.60765E+11      
22.Kov .EU          .              .             1.0000   -1.75497E+11      
22.Kov .IE          .              .             1.0000   -4.40139E+11      
22.Kov .PA          .              .             1.0000   -5.28381E+11      
22.Kov .KI          .              .             1.0000   -6.60702E+11      
22.Hsel.EU          .              .             1.0000   -8.77170E+10      
22.Hsel.IE          .              .             1.0000   -1.75875E+11      
22.Hsel.PA          .              .             1.0000   -2.20017E+11      
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/17/17 16:42:05 Page 85
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 341


     VAR u  1 if we use n boats for product j shiping to region k, 0 otherwise

                  LOWER          LEVEL          UPPER         MARGINAL

22.Hsel.KI          .              .             1.0000   -2.64054E+11      
22.Lsel.EU          .              .             1.0000   -1.31775E+11      
22.Lsel.IE          .              .             1.0000   -8.76120E+10      
22.Lsel.PA          .              .             1.0000   -2.20017E+11      
22.Lsel.KI          .              .             1.0000   -3.08175E+11      
22.Pap .EU          .              .             1.0000   -1.75455E+11      
22.Pap .IE          .              .             1.0000   -4.40013E+11      
22.Pap .PA          .              .             1.0000   -5.28297E+11      
22.Pap .KI          .              .             1.0000   -6.60492E+11      
23.Mas .EU          .              .             1.0000   -1.93248E+11      
23.Mas .IE          .              .             1.0000   -4.83714E+11      
23.Mas .PA          .              .             1.0000   -5.80492E+11      
23.Mas .KI          .              .             1.0000   -7.25670E+11      
23.Kus .EU          .              .             1.0000         EPS         
23.Kus .IE          .              .             1.0000         EPS         
23.Kus .PA          .              .             1.0000         EPS         
23.Kus .KI          .              .             1.0000         EPS         
23.Kos .EU          .              .             1.0000   -6.77314E+11      
23.Kos .IE          .              .             1.0000   -9.67692E+11      
23.Kos .PA          .              .             1.0000   -1.06447E+12      
23.Kos .KI          .              .             1.0000   -1.20965E+12      
23.Kuv .EU          .              .             1.0000   -1.92632E+11      
23.Kuv .IE          .              .             1.0000   -4.83164E+11      
23.Kuv .PA          .              .             1.0000   -5.80008E+11      
23.Kuv .KI          .              .             1.0000   -7.25230E+11      
23.Kov .EU          .              .             1.0000   -1.92654E+11      
23.Kov .IE          .              .             1.0000   -4.83098E+11      
23.Kov .PA          .              .             1.0000   -5.79942E+11      
23.Kov .KI          .              .             1.0000   -7.25164E+11      
23.Hsel.EU          .              .             1.0000   -9.62940E+10      
23.Hsel.IE          .              .             1.0000   -1.93050E+11      
23.Hsel.PA          .              .             1.0000   -2.41494E+11      
23.Hsel.KI          .              .             1.0000   -2.89828E+11      
23.Lsel.EU          .              .             1.0000   -1.44650E+11      
23.Lsel.IE          .              .             1.0000   -9.61840E+10      
23.Lsel.PA          .              .             1.0000   -2.41494E+11      
23.Lsel.KI          .              .             1.0000   -3.38250E+11      
23.Pap .EU          .              .             1.0000   -1.92610E+11      
23.Pap .IE          .              .             1.0000   -4.82966E+11      
23.Pap .PA          .              .             1.0000   -5.79854E+11      
23.Pap .KI          .              .             1.0000   -7.24944E+11      


**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED


EXECUTION TIME       =        0.016 SECONDS      2 MB  24.8.1 r59919 DEX-DEG
GAMS 24.8.1  r59919 Released Dec 22, 2016 DEX-DEG x86 64bit/Mac OS X                                                                                                                                                                  01/17/17 16:42:05 Page 86
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE final Using MIP From line 341


USER: Course License Spring 2017                     A161219:0249AN-GEN
      Management Engineering, Technical University of Denmark    DC8756
      License for teaching and research at degree granting institutions


**** FILE SUMMARY

Input      /Users/AtliPall/AHI/finalA.gms
Output     /Users/AtliPall/AHI/finalA.lst
